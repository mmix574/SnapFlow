[
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-complete-tag\" rel=\"nofollow\">Auto Complete Tag</a>集成了 Auto Close Tag 和 Auto Rename Tag 的功能，丰富了 VS Code 编写 HTML/XML 时候的标签自动补全功能。</p>\n<ul>\n<li>Auto Close Tag: 输入开始标签后，自动添加结束标签。比如输入<code>&lt;div&gt;</code>，自动添加<code>&lt;/div&gt;</code></li>\n<li>Auto Rename Tag: 更改 HTML/XML 标签名时，自动更新相对应的开始标签或结束标签的标签名</li>\n</ul>\n<p>这两个 extension 还有些小 bug 和 corner case 没有 cover ，欢迎大家来发 PR 。😄</p>\n</div></div>"], "reply": "4", "tittle": "Auto Complete Tag，如果你也用 VS Code 写前端，你会需要它", "comment": ["有了 emmet 之后感觉对这个需求不大。。。", " 有了 Emmet 的确也是很方便。还有就是习惯问题吧，蛮多人还是习惯 VS 或者 Sublime 那种的 Auto Close Tag ，还有 Sublime 的 Alt+.快捷键去主动 close tag 也是很有用。而且， Emmet 并不能解决 Auto Rename Tab 吧。", "elm 解决一切问题", " 没有用过，具体怎么玩呢？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>感觉现在的论坛在设计上有些雷同，类 V2EX 的论坛也很多，有些审美疲劳。自己正在做一个简单的论坛系统，想在 UI 设计上有些创意，但因为不懂设计，感觉有些吃力。大家看过有哪些论坛是比较有新意的，或者 UI 设计比较惊艳的论坛？</p>\n</div></div>"], "reply": "107", "tittle": "除了 V2EX 之外，大家还见过哪些在设计上比较有创意，或者 UI 让人眼前一亮的论坛？", "comment": ["竟然没人说让人耳目一新大名鼎鼎的 PTT 论坛", "我最近正在写一个论坛, Flask 后台 + MDUI 前台的,自己列了一长串功能需求,到现在实现的还没有几个...\r", "\r", "看完就装了个 vb3.8 ，怀念一下， vb 太经典了。", "reddit"]},
{"content": ["<div class=\"topic_content\">做技术的，以前没干过产品经理，目前产品经理是老板自己，现在要解放出来，我要做产品经理的职位，目前产品经理的书看的不多，做过产品经理的指点指点呗。</div>"], "reply": "17", "tittle": "现在做产品经理，每天杂事很多，老板一直说效率低，怎么提高员工的效率，跟自己的管理能力呢？", "comment": ["说到产品经理的书看的不多。。。这个问题就不想回答了", " ", "拜托技术思维", "不用看管理的书，你要看你手中有什么权力。管理说到底就是权力的玩法。", "效率嘛，每天开会总结，每天反思，找出当前问题。最好弄个白板，让团队的人可以知道现在做什么。", "其实呢，做技术突然上去做管理，认真看第一段话。", "也许应该换个工作，假如老板伪产品，那么底下小弟累死，而且出不了结果。", "发到程序板块，问产品的事儿，也是...", "其实是整个团队问题，问题不能从一个人身上解决，例如，协调，沟通，验收测试安排。哪里不合理改哪里", " 666", " 也在看，没那么快提高", " 呃 你误解我的意思了！", " 好吧", "你说的产品经理是 team leader 吧？从我的角度看， TL 的核心工作就是描述清楚团队的工作方向、工作进展、工作成果，所谓效率低，如果不是团队成员效率真的差，就应该是没有描述清楚团队的工作状况。所以我建议从训练自己的描述能力做起，描述的足够好，说明思考的足够到位，做好具体的事情就更容易了。\r", "1. 方向上，包括从大到小的规划，转变日志，应对突发状况的策略；\r", "2. 进展上，包括从大到小的任务进展情况，突发的事件和应对方式，极好和极差的员工表现；\r", "3. 成果上，包括从大到小的成就展示，产品的新增里程碑，给予员工的优秀奖励。\r", "杂事多不要紧，核心的事情安排好，遇到的困难讲清楚，领导总是不会怪罪你，毕竟 TL 就是很难做的一件事，能搞清楚自己差在哪儿也可以作为进步的基础。", "每天绩效管理，每周考核", " 很感谢细心的回答，会好好接受你的建议的。", " 你这个写得是项目经理的工作", "如果你没办法提升两倍的效率\r", "干掉让你效率减半的 小主管 /主管 /大主管 /老板\r", "他们才是你低效的分母....\r", ".....奔逃.....", " 好办法，哈哈"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>经历了 2 家公司，</p>\n<p>第一家公司，大家都是 90 后，公司很有活力。\n而产品经理呢也是一个项目一个的标配。</p>\n<p>但事实上确认需求这种事情就是老板的决定，老板看电视 H5 好像可以，那么产品给个方案，程序员按着做。没有经验的产品带着程序员做出来的东西，也...</p>\n<p>第二家公司，偏传统型。\n一个项目，到现在一直没有个产品。项目没有头绪不说，也没有正确的规划。重构代码也就算了，天天重构需求。\n之前找了一个产品，结果性格不强势被....</p>\n<p>我心目中的好产品，有规划，强势，目光尖锐，能说服老板。</p>\n<p>可能是我经历了没有好产品的难受</p>\n<p>现在产品在我心里地位&gt;程序大牛</p>\n</div></div>"], "reply": "50", "tittle": "一个好的产品，绝对是项目发展的核心。", "comment": ["呵呵", "现在绝大多数中小规模互联网企业(更不谈非互联网型企业了)都是老板或者领导们拍板子，并且在这个人人都是产品经理的年代，产品真的能做的事情是很有限的，遑论说服老板，在老板眼里你就一拿钱干事儿的。\r", "很久前看过一个文章，说中小企业的成功，非常大程度取决于老板。", " 取决于老板拍大腿还是拍脑子,哪怕不动脑子 233", "上能满足老板，下能团结开发。先不说能不能做成什么知名成果，就这一点就已经很不简单了。", " \r", "一楼有什么可以呵呵的分享一下\r", "直接嘲讽不太好吧\r", "\r", "我也赞同这样的产品经理的确很难，能有如此意识也该自己创业了吧\r", "至少能招募这样产品的老板敢放权，有格局意识。\r", "另外一个产品很多时候也不仅仅是需求驱动，还有市场驱动、设计驱动和技术驱动，产品经理也仅仅是一环，赋予楼主说的重任也许太大。", "有人说过，有“屠龙术”的产品都出来自己创业了。\r", "\r", "能同时搞掂老板和开发意味着理解需求、管理（上面和下面的）人、把控项目进度的能力都好，这样的人不就是老板吗？", "怎么感觉开发应该是项目经理来管的，不应该是产品，但产品应该说服开发", "反感一楼的呵呵。。。\r", "PM 就是被黑惯了。。。\r", "说实在的 哪个岗位不需要顶尖人才呢？好的产品 对人的全面素养 要求 能力 储备非常高。。。", "程序员日后可以变成程序大牛，产品 sb 就永远是 sb", "最牛逼的产品经理--乔布斯等\r", "最牛逼的程序大牛--扎克伯格, linus 等\r", "产品>程序大牛。这怎么能看得出来？", "产品设计和产品经理是一个职位吗？", " 蜜汁自信", "好产品成本远远高于好程序员，多数产品都是可有可无的.", "表示我是产品，目前大多数产品靠套路，害得我野路子出生的产品，都找不到工作。", "对不起，我只想到张小龙.", "都是混口饭吃，谁强谁弱有区别？", "一个前辈说过. 技术让你能做事, 产品决定了是不是做对的事.", "### 程序员生存法则\r", "\r", "1. 不要写死\r", "2. 不要相信产品\r", "\r", "### 设计生存法则\r", "\r", "1. 不要相信这是最终效果图\r", "2. 不要相信产品\r", "\r", "### 测试生存法则\r", "\r", "1. 不要立 FLAG\r", "2. 不要相信程序\r", "\r", "### 产品生存法则\r", "\r", "1. 不要相信任何人\r", "2. 注意人身安全\r", "\r", "### 运营生存法则\r", "\r", "1. 不要相信任何人\r", "2. 躲在产品身后\r", "\r", "按照我的理解, 好的产品写程序也一定很强.\r", "不会写? 那你一定不是好的产品", " 只是抢个沙发，随便打了 2 个字，哈哈", "“一个好的产品，绝对是项目发展的核心”这句话换把产品换成开发也没问题。按我接触过的产品来说，主要任务就是抄，从 UI 到交互，全部都是抄。", " 楼主主力撸码语言是啥？来我这给你看看牛逼的产品经理是怎么训练的。", "  楼主转行做产品吧，我看行", "懂业务逻辑，情商又不错的产品经理是个好老板--=", "我的产品经理 -- \"像天猫一样\"  \"就是像京东那样\" \"淘宝不就有这个功能吗\" \"对对, 就是像 xx 那样的效果!\".\r", "\r", "有时候真想当产品, 抄这个那个画个原型, 说句像 xx 一样就他妈下班了. 真 jb 爽!!!", "只想着做别人产品的人，心中没有产品思路，没有目标，缺乏整体感。\r", "至少对产品认识上还不够成熟\r", "当然就像资源一样，不可能无度，一个好的产品经理，重要的是拿捏分寸，踏实地一个目标，一个目标前进", " 业务相似的时候，是会去参考行业内优秀的产品，这其实是站在巨人的肩膀上，并且可以降低用户的学习成本；但是就目前而言肯定不存在两个完全一样的业务，也就是说在自己独有的业务逻辑，功能模块快上创新就可以啊。就像为啥苹果有自己的规范， Android 现在也有 metiral design~现代的创新并不全是创造之前从未有过的东西，在现有的东西上优化就算是创新。", " 逻辑思维没问题就好，产品都写程序了，要开发何用？~那就木有撕逼啦", " 务实，着地气，双手赞同你的观点", " \r", "脸都不要啦？\r", "现在不要脸都一套一套啦？", " 求一枚 hacpai 邀请码~~~", " teITsnyegw63Ga3m", "多数产品经理也就抄一抄，凭空意淫一下用户体验什么什么的，成天在 UI 上死扣。满眼只看到竞品的缺点、而没考虑过竞品有什么优势。", " 能再发一枚么", "产品汪一只！出现这种情况的问题是多方面的。产品在产品经理个人的素质，公司环境，市场环境等各方面都存在很大的不确定性。越是优秀的产品经理越能在更多的不确定因素下做好产品。\r", "至于说抄不抄，这个不是核心问题，主要看抄什么。\r", "大家黑产品经理的一大原因是合格的产品经理数量相对少，让产品经理的成了招黑体。优秀的产品经理绝对是开发的好伙伴，逻辑严谨，思维敏捷，有底线，能据理力争。", " 刚发我的，被抢了。。😢", " Jin6taC5ROeuQsLT", " 不要轻易转哦，产品经理的内心很是痛苦与纠结", " 。。。我刚才翻你发过的注册码，已经注册成功", " 还有吗", " 加 Q 群： 242561391", "但是好的产品比好的程序员少很多 ...", "在我司，工程师属于半个产品经理，最终做不做这个需求有决定权，有更好的做法也会跟产品经理再讨论。", "绝对是真理.产品决定命运.", " 未咩呀\r", "我现在想做那种从产品到开发，从前端到后端都参与的那种角色。\r", "开发好说，不知道怎么转产品呢。其实想连设计都做了。\r", "产品方面有什么比较好的书籍推荐吗。", "这跟人有关与职业无关吧", " 首先不推荐这样做，一个人是看不清全局的很多时候。我曾经一度想过，如果我一个人把产品的整个迭代流程的工作自己完成，那我就不需要那么多的浪费时间的沟通，太多的繁杂文档，这样确保从产品设计到开发上线偏差小。但是，开发的工作是实现模型的，产品的工作是概念模型的，一个人做所有工作思维的转换是个问题，而且没有团队从不同的角度给出看法会让自己方向走偏。\r", "啰嗦了好多，我比较喜欢小团队的工作方式！\r", "至于产品类的书籍，网上找挺多的，要看你自己的现状，具体的可以加我 WX ： wz111-h,记得备注", " 感觉你的这个职位定义更偏向 SA 系统分析", "我呆了两家公司，没人能拗的过老板。就这样", " 请问开发 为啥有时会自黑搬砖的，你们调用的一些函数 啥的不是大多都是别人封装好的？开发是不是有时候遇到瓶颈也会 google 一下，参考一下别人的~  学以致用，前提是学，学的多了使用起来就会得心应手，确实现在很多产品的经验不是很足，会参考别人的内容，但是加以自己的思考之后会逐渐形成自己的方法论和产品观。每个人都有成长的权利，请勿乱喷！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近微博有个论调  以加班多为 KPI  抱怨加班变成政治不正确</p>\n<p>锤子那个离职的捅了一个马蜂窝   华为那个 37 被强制退休的居然没人关注</p>\n<p>然后 N 多人把努力=加班 划等号 资本主义亡我心不死啊</p>\n</div></div>"], "reply": "29", "tittle": "关于加班", "comment": ["毕竟领导不会犯错的不是？", "加班就像借钱，应急可以。天天加班？那就要想想是上面安排的太紧？还是自己效率不高？还是公司文化有问题？", "钱如果到位加班我觉得没什么不对", "加班是非工作时间。没有义务必须为公司工作。就算报酬加倍。也需要询问员工意见。（不然万一猝死算谁的？）", "我觉得加班就是一个你觉得值不值，乐意不乐意的问题。不乐意就走呗。大家的观念不同罢了。\r", "\r", "比如有的人觉得加班=努力，多干就能多学。有的人觉得加班就没有时间去沉淀了，多干不能等于多学。我觉得这都没错，还是取决于个人的各方面条件的。\r", "\r", "另外前两天网上看到一句话，“社会进步就是工作狂们推动的，而那些 work life balance 的 XX ，跟着享了福。”个人还是比较赞同的。", "不谈加班到几点，不谈持续加班多久，叽歪这些不如果断走人", "华为那个有相关链接么", "虽然说,努力不一定完全等于加班\r", "但是努力的大部分人都会加班\r", "(主动)加班的大部分都很努力.\r", "努力是内在,加班是表现,你如果没有其他表现来说明你很努力\r", "你的老板就只有通过加班来判断你是否努力咯~", "华为那个 37 被强制退休，按理说这种事在知乎上会掀起一阵讨论，可到现在还没有。。。", "这里的人都很认同加班啊看来，可每次吐槽加班的时候底下的人都是不加班的。", "因为国内大多数公司需要执行力而不是创造力，所以加班能有更大产出。\r", "如果加班能完成任务，管理层会暗自窃喜，而不会多招人。\r", "人生短暂，更重要的是要活得精彩。", "加班干活，加班没活（加班给人看），这是两个问题，很多人讨论都是混着来的，根本讨论不出所以然来。\r", "\r", "有句话叫“存在即合理”（不是道理，而是理性）。我们应该讨论一下这两种情况的“理”来进行区分理解。\r", "\r", "个人愚见：\r", "\r", "加班干活，我认为是正常的供需行为，地位平等双赢，地位不平等剥削（也有一方赢的），但是一般双方都有选择权。说不想加班的人，真有几个肯为不加班放弃一部分收入？不加班给的少点的和加班给多点的公司，现实中哪个又更容易招到人。所以这行才会有“加班费包含在工资里”这种怎么看都不合理的潜规则。\r", "\r", "加班没活（加班给人看），是另一回事，本质问题其实就是“外行领导内行”，没有更有效的 KPI 手段，只能看时间了，就结果来说就是双输。", "为什么我觉得加班已经习惯，早早的回家也没什么事情，在公司加加班，然后玩玩电脑看看信息也挺不错的", "有事适当加下班，能接受，有很多时候没事也让加班，日了狗了。。。", "我们单位加班不给加班费，义务劳动", "加班是种文化，一旦大家都接受这种文化，感觉早点走都有种罪恶感\r", "所以入职之前一定要调查好这个公司的“加班文化”", "加班还好啦。 就苦了这位妹纸 ", "加他马勒戈壁，同意的点赞", " 不能再赞同，我们团队感觉现在就是加班给人看，心累的不行", "有什么办法呢，分配给你的任务你就必须早点干完，不早点干完组长就要说怎么写这么慢，感觉已经形成一种习惯，大家都不敢准时下班", "华为那个是 42 岁强制退休吧，链接： ", " \r", "\r", "很明显， “社会进步就是工作狂们推动的“， 然而并不是”加班狂们推动的“", "反正我老板认为不加班就等于不努力\r", "我再牛逼我能改变他吗？", "走人，能走到哪里去？社会风气坏了哪里都不能幸免\r", "前面的网友还替资本说话社会进步就是工作狂推动的。。你是脑子被夹了吗 自己 nc 还往脑门上贴金忽悠大家跟你一起 nc 。\r", "一个以加班为导向的技术公司，某种意义上来说会损害技术的发展，会导致效率低下，忽略质量和软件工程的积累和收益，反正加班能搞定一切，如果搞不定，那就再多加点班。这种理念的驱使下必然会成损害长期发展，反正干好干坏都得加班，最后公司剩下一群庸人看似忙忙碌碌的在加班。", " 创业的大多都会加班，我没发现那时我创业效率低下，也不知何以来的论调说忽略质量和软件工程的积累收益，也不清楚你说的某种意义上说是基于什么意义，毕竟很多时候我说话前加上“某种意义上来说”这几个字都是在我不确定我的言论得到正式论证下才会加这几个字，万能句式啊。 \r", "----------------------------------------------------------------------------------------\r", "加班一个小时是加，五个小时也是加，加多了当然是不行，但是有些人的精力就是每天能工作十小时，这种人你不让他加班简直就是在浪费生产力，总之这些还真的不能一概而论。", "不排斥加班\r", "但是现在是因为别人的工作做不到位导致我加班,去年买了个表", " \r", "请注意你的说话态度。\r", "\r", "加班狂不一定是工作狂。\r", "\r", "什么叫加班为导向？我以为开公司大家都是都是以盈利为导向，您去的哪家公司主营业务是充实员工业余时间的？\r", "\r", "另外，这个跟社会风气有什么关系？你觉得大家都加班，导致所有公司都要求加班。那为什么不是大家都不乐意加班，公司要求员工加班就招不到人，最后倒逼公司不得不正常上下班，不再加班呢？", "我觉得加不加班还是要从国家法律层面限制的  一些发达国家的加班制度法律规定的就很完善  强迫别人加班是要犯法的\r", "另外 自己情愿加班无可厚非  终归还是自己能力不足 在时间上多付出一些弥补一些而已 \r", "如果自己能力 ok 可以选择跟自己工作态度相符的公司啊", " \r", "工作狂带领历史也不对，\r", "实际是兴趣与爱好带领历史，一部分爱好碰巧是工作的人会被称为工作狂，但对其他人却意味着娱乐时间的增加。\r", "\r", "趋势是劳动生产率率提升，劳动时间降低：\r", "19 世纪的工业革命带来了生产率的显著提高，工作时间也从每周 80 小时减为 60 小时。同样，在 20 世纪，从蒸汽机技术向石油和电子技术转变的工业技术革命同样使生产率稳步提高，这导致了工作时间进一步从 60 小时减少到 40 小时。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>其实是我做了个开源工具(^__^)，拿出来给大家鉴赏下，欢迎大家提意见<br>\n项目： <a href=\"https://github.com/xuyt11/x-http-wrapper\" rel=\"nofollow\">https://github.com/xuyt11/x-http-wrapper</a> 欢迎关注和 star 。<br>\n功能：这是一个 http 相关代码的创建工具。</p>\n<p>现在我们每一次发版，基本上都会涉及到 http 相关的修改，以此来满足发版的业务需求。<br>\n而在其中需要添加或修改的有 http request 、 http request param 、 http response entity 等其他相关的 http 代码。<br>\n而在多次的修改中，若前后端没有协调好，就有可能会造成之后的返工、重复修改与线上 bug 量的增加等问题。</p>\n<h1>现在的痛点</h1>\n<p>如何解决每次发版时，都需要新增、修改 http 相关代码！<br>\n如何解决每次发版时，修改 http 相关代码造成的错误！</p>\n<h1>解决思路: <strong>规范</strong></h1>\n<ol>\n<li>\n<p>其实很简单，就是一个词“<strong>规范</strong>”，任何事情，只要我们有了一定的规范，就会有一定的流程、可追踪并且降低难度。<br>\n我相信 99.99%的公司，都会有相关的 http 接口文档提供给前端同学，而且也会自己的一套规范（不论是我现在依赖的 apidocjs ，还是上家公司的 doc 文件）。<br>\n当然，肯定也有口头约定的情况，但这需要在之后，立即将约定转化为文档，提供给前端的同学。 git 、 http 都可以作为提供的形式。</p>\n</li>\n<li>\n<p>我们依赖这个 http 的规范，就可以将 http 接口文档去解析转义为 x-http-wrapper 内部的 API 数据。</p>\n</li>\n<li>\n<p>再来就是依赖一定的规范(x-http-wrapper 的模板文件规范)，将内部 API 数据转化为 http 相关文件。<strong>这样，每次只要接口文档更新过后，我们就可以根据文档生成各个程序内部可以运行的代码。</strong><br>\n这个功能与现在 IDE 中的 getter 、 setter 方法生成器功能其实是相同的原理！</p>\n</li>\n</ol>\n<h1>x-http-wrapper 介绍</h1>\n<ol>\n<li>这是一个 http 相关代码的创建工具。</li>\n<li>现在能创建的 http 相关的文件类型有： http 请求分类， http 请求，请求方法参数，响应实体，响应实体中状态码列表和基础响应实体类。\n<ul>\n<li>HttpApi( http 请求分类): 所有 API 请求的统一调用入口，统合所有的请求类别的接口，防止 API 接口分散。</li>\n</ul>\n<pre><code>public class HttpApi {\n\n   private static Account account;\n   private static Data data;\n   private static Message message;\n\n   public static Account account() {\n       if (null == account) {\n           account = Account.getInstance();\n       }\n       return account;\n   }\n\n   public static Data data() {\n       if (null == data) {\n           data = Data.getInstance();\n       }\n       return data;\n   }\n\n   public static Message message() {\n       if (null == message) {\n           message = Message.getInstance();\n       }\n       return message;\n   }\n}\n</code></pre>\n<ul>\n<li>Request( http 请求): 单个请求分组中，所有的请求方法。</li>\n</ul>\n<pre><code>public class Account extends BaseApi {\n\n    public static Account getInstance() {\n        return Helper.instance;\n    }\n\n    private static class Helper {\n        public static final Account instance = new Account();\n    }\n\n    private Account() {\n        super();\n    }\n\n    /**\n     * @version 2.0.0\n     * @requestUrl \n     * @title 初始化账号信息\n     *\n     */\n    public RequestHandle init(Context cxt001,\n        ResponseHandlerInterface response) {\n        // hide implementation\n    }\n\n    /**\n     * @version 2.0.0\n     * @title 扫二维码到 web 端进行操作\n     *\n     * @param context String desc\n     * @param project_id isOptional Integer desc\n     * @param scene isOptional String desc\n     * @param uuid_rand String desc\n     */\n    public RequestHandle qrcodeConfirm(Context cxt001,\n        String context, Integer project_id, String scene, String uuid_rand, \n        ResponseHandlerInterface response) {\n        // hide implementation\n    }\n\n    /**\n     * 缩略请求方法\n     */\n    public RequestHandle qrcodeConfirm(Context cxt001,\n        QrcodeConfirmRP.Parameter parameter, \n        ResponseHandlerInterface response) {\n        return qrcodeConfirm(cxt001,\n        parameter.context, parameter.project_id, parameter.scene, parameter.uuid_rand, \n        response);\n    }\n\n}\n</code></pre>\n<ul>\n<li>RequestParam(请求方法参数): 请求参数分组归类，对应单个请求，用于请求参数较多的情况，生成请求参数的分类实体类(请求参数也肯能有多个分类)，减少请求方法的输入参数。</li>\n</ul>\n<pre><code>/**\n * 请求方法参数\n */\npublic class QrcodeConfirmRP implements Serializable {\n\n   public static final class Parameter implements Serializable {\n       /**\n        * type: String&lt;br&gt;\n        * isOptional : false&lt;br&gt;\n        * desc: &lt;p&gt;扫码场景，枚举值&lt;/p&gt;\n        */\n       public String context;\n       /**\n        * type: Integer&lt;br&gt;\n        * isOptional : true&lt;br&gt;\n        * desc: &lt;p&gt;业务参数: 根据 context 的不同而不同&lt;/p&gt;\n        */\n       public Integer project_id;\n       /**\n        * type: String&lt;br&gt;\n        * isOptional : true&lt;br&gt;\n        * desc: &lt;p&gt;身份信息: 服务端会优先使用客户端传入的身份信息，当为”投资人“的时候必传&lt;/p&gt;\n        */\n       public String scene;\n       /**\n        * type: String&lt;br&gt;\n        * isOptional : false&lt;br&gt;\n        * desc: &lt;p&gt;从二维码扫描得到的唯一码&lt;/p&gt;\n        */\n       public String uuid_rand;\n   }\n\n}\n</code></pre>\n<ul>\n<li>Response(响应实体): 请求的相应数据 model</li>\n</ul>\n<pre><code>public class Init {\n\n    private long member_id;\n    private long member_role;\n    private long member_status;\n    private String ry_token;\n    private long step;\n\n    public long getMemberId() {return member_id;}\n    public long getMemberRole() {return member_role;}\n    public long getMemberStatus() {return member_status;}\n    public String getRyToken() {return ry_token;}\n    public long getStep() {return step;}\n    public void setMemberId(long member_id) {this.member_id = member_id;}\n    public void setMemberRole(long member_role) {this.member_role = member_role;}\n    public void setMemberStatus(long member_status) {this.member_status = member_status;}\n    public void setRyToken(String ry_token) {this.ry_token = ry_token;}\n    public void setStep(long step) {this.step = step;}\n\n}\n</code></pre>\n<ul>\n<li>StatusCode(响应实体中状态码列表): 响应中所有状态码的枚举类</li>\n</ul>\n<pre><code>public class StatusCode {\n\n    /** '') */\n    public static final int OK = 0;\n\n    /** '登录状态已过期，请重新登入') */\n    public static final int UNAUTHORIZED = 101;\n\n    /** '您没有权限查看') */\n    public static final int FORBIDDEN = 102;\n\n    /** '资源未找到') */\n    public static final int NOT_FOUND = 103;\n\n    /** '客户端请求错误') # 4XX 客户端错误 */\n    public static final int CLIENT_ERROR = 228;\n\n    /** '服务器错误') # 5XX 服务器错误 */\n    public static final int SERVER_ERROR = 229;\n\n    /** '参数错误') */\n    public static final int PARAM_ERROR = 230;\n\n    /** '登录失败，请检查您的邮箱地址是否正确') */\n    public static final int LOGIN_FAIL_EMAIL_NOT_EXIST = 332;\n\n    /** '登录失败，请确认您的手机号是否正确') */\n    public static final int LOGIN_FAIL_MOBILE_NOT_EXIST = 333;\n\n    /** '登录失败，请检查密码是否正确') */\n    public static final int LOGIN_FAIL_PASSWORD_ERROR = 334;\n\n}\n</code></pre>\n<ul>\n<li>BaseResponse(基础响应实体类): 基础的响应实体类</li>\n</ul>\n<pre><code>public class ResponseEntity&lt;T&gt; {\n\n    private int status_code;\n    private String message;\n    private Error error;\n    private T data;\n\n    public int getStatusCode() {return status_code;}\n    public void setStatusCode(int status_code) {this.status_code = status_code;}\n    public String getMessage() {return message;}\n    public void setMessage(String message) {this.message = message;}\n    public Error getError() {return error;}\n    public void setError(Error error) {this.error = error;}\n    public T getData() {return data;}\n    public void setData(T data) {this.data = data;}\n\n    public static class Error {\n        private String detail;\n        private List&lt;String&gt; device_token;\n        private List&lt;String&gt; content;\n        private List&lt;String&gt; followed_id;\n\n        public String getDetail() {return detail;}\n        public void setDetail(String detail) {this.detail = detail;}\n        public List&lt;String&gt; getDeviceToken() {return device_token;}\n        public void setDeviceToken(List&lt;String&gt; device_token) {this.device_token = device_token;}\n        public List&lt;String&gt; getContent() {return content;}\n        public void setContent(List&lt;String&gt; content) {this.content = content;}\n        public List&lt;String&gt; getFollowedId() {return followed_id;}\n        public void setFollowedId(List&lt;String&gt; followed_id) {this.followed_id = followed_id;}\n    }\n\n}\n</code></pre>\n</li>\n<li>http 的数据来源，现阶段只有 apidocjs 这一个\n<ul>\n<li>若有其他数据来源，可以配置 api_data.source 属性，然后添加对应的解析器，解析为 xhw 的 model 。</li>\n</ul>\n</li>\n</ol>\n<h1>工具环境与依赖</h1>\n<ul>\n<li>命令行运行 jar 文件: 需要 java8 及以上的版本</li>\n<li>开发环境:\n<ul>\n<li>Java 的版本: java8 及以上的版本</li>\n<li>开发平台: intellij idea</li>\n<li>依赖的 jar: gson:2.8.0, rxjava:1.2.2, junit:4.12</li>\n</ul>\n</li>\n</ul>\n<h1>快速使用入门</h1>\n<ol>\n<li>下载项目的 Zip 包，解压缩，从 xhwt 文件夹下，选取其中的一个包装器模板文件夹，作为目标包装器的配置，该文件夹在下面都叫做<strong>target dir</strong>；\n<ul>\n<li>例如： xhwt/asynchttp/non_version(这是 android-async-http 库的一个模板与配置)；</li>\n</ul>\n</li>\n<li>获取接口数据文件(api_data.json:存储 apidocjs 生成的 API 文档的数据)的路径；\n<ul>\n<li>例如： guide 文件夹中的 api_data.json 的绝对路径</li>\n</ul>\n</li>\n<li>修改 target dir 下配置文件(<strong>x-http-wrapper.json</strong>)中 api_data.file_path_infos 的配置信息，将 api_data.json 的绝对路径添加上去；\n<pre><code>  \"api_data\": {\n    \"source\": \"apidocjs\",\n    \"file_path_type\": \"file\",\n    \"file_path_infos\": [\n      {\n        \"os_name\": \"Mac OS X\",\n        \"path\": \"api_data.json 的绝对路径\"\n      },\n      {\n        \"os_name\": \"Windows\",\n        \"path\": \"api_data.json 的绝对路径\"\n      }\n    ],\n    \"file_charset\": \"UTF-8\"\n  }\n</code></pre>\n</li>\n<li>修改 target dir 中， API 的模板文件中&lt;t:header&gt;&lt;/t:header&gt;标签内，生成文件的目标路径；\n<ul>\n<li>API 的模板文件是以.xhwt 为后缀的文件，是生成各个 http 相关文件的模板；</li>\n<li>&lt;t:header&gt;&lt;/t:header&gt;标签内，保存的是模板文件生成文件的文件名称与文件地址；\n<ul>\n<li>例如：</li>\n</ul>\n<pre><code>{\n    \"file_name\":\"HttpApi.swift\",\n    \"file_dirs\":[\n        {\n            \"os_name\":\"Windows\",\n            \"path\":\"生成文件的目标路径(绝对路径)\"\n        },\n        {\n            \"os_name\":\"Mac OS X\",\n            \"path\":\"生成文件的目标路径(绝对路径)\"\n        }\n    ]\n}\n</code></pre>\n</li>\n</ul>\n</li>\n<li>修改 target dir 下配置文件(<strong>x-http-wrapper.json</strong>)中 template_file_infos 中的 need_generate 属性，用于开启、关闭生成文件的功能；\n<ul>\n<li>例如：若你想生成 HttpApi 类型的文件，就需要将 template_file_infos.HttpApi.need_generate 设置为 true ，并要修改了 xxx-httpapi.xhwt 文件中 header 标签内的地址；</li>\n</ul>\n<pre><code>  \"template_file_infos\": {\n    \"HttpApi\": {\n      \"need_generate\": true,\n      \"path\": \"ncm_ios_n-httpapi.xhwt\"\n    },\n    ...\n  }\n</code></pre>\n</li>\n<li>命令行生成相关 http 文件\n<ul>\n<li>命令行运行： java -jar (jar 文件的路径) (配置文件的绝对路径)</li>\n<li>jar 文件的路径：在 guide 文件夹下有最新的 jar(x-http-wrapper.jar)</li>\n<li>配置文件的绝对路径：配置文件(<strong>x-http-wrapper.json</strong>)的绝对路径</li>\n</ul>\n<pre><code>java -jar x-http-wrapper.jar xxxx/x-http-wrapper.json\n</code></pre>\n</li>\n</ol>\n<h1>api 的数据源：<a href=\"https://github.com/xuyt11/x-http-wrapper/blob/master/guide/apidocjs.md\" rel=\"nofollow\">apidocjs</a></h1>\n<ul>\n<li>api_data.json 就是使用 apidocjs 工具生成的数据文件；</li>\n</ul>\n<h1><a href=\"https://github.com/xuyt11/x-http-wrapper/blob/master/guide/global-process.png\" rel=\"nofollow\">工作流程</a></h1>\n<ol>\n<li>解析 x-http-wrapper.json 这个配置文件；</li>\n<li>在配置文件中，有 API 数据文件(在 api_data 中)，再根据配置数据，将 API 数据解析为 x-http-wrapper 中的 model 数据；</li>\n<li>在配置文件中，有所有的 x-http-wrapper 的 template 文件(在 template_file_infos 中)，根据 template 文件中的内容与 model datas 和配置一起，生成目标文件；</li>\n</ol>\n<h1><a href=\"https://github.com/xuyt11/x-http-wrapper/blob/master/guide/x-http-wrapper.jar\" rel=\"nofollow\">最新的 jar</a></h1>\n<ol>\n<li>使用方式：</li>\n</ol>\n<pre><code>java -jar x-http-wrapper.jar xxx/x-http-wrapper.json\n</code></pre>\n<ol>\n<li>x-http-wrapper.json 文件，必须是绝对路径，该文件是整个 wrapper 的配置文件；</li>\n<li>若有多个 json 文件，也可以(如：有多个程序(ios,android)需要生成代码)；</li>\n</ol>\n<h1>wrapper 的配置文件：</h1>\n<ul>\n<li><a href=\"https://github.com/xuyt11/x-http-wrapper/blob/master/guide/config-structure.md\" rel=\"nofollow\">x-http-wrapper.json (详细的配置文件介绍)</a></li>\n<li>该文件保存有所有的配置信息， 共有 8 个分类：\napi_data, template_file_infos, base_config, filter, request, response, status_code, param_types</li>\n</ul>\n<h1><a href=\"https://github.com/xuyt11/x-http-wrapper/blob/master/guide/xhw-model.md\" rel=\"nofollow\">wrapper 内部 api 数据模型</a></h1>\n<ol>\n<li>BaseModel:\n<ul>\n<li>所有的 model 都需要继承 BaseModel</li>\n<li>BaseModel 中有一个泛型用于存储更高一级的 BaseModel</li>\n<li>在 template engine 中，反射只认 BaseModel ，不是 BaseModel 的 model 不能反射</li>\n<li>template engine 在反射调用时，若没有在反射的对象中找到方法，会从 higherLevel 中去找，直到没有 higherLevel 为止；</li>\n</ul>\n</li>\n<li>model 的结构:\n<ul>\n<li>VersionModel--&gt;StatusCodeGroup, RequestGroup</li>\n<li>StatusCodeGroup--&gt;StatusCode</li>\n<li>RequestGroup--&gt;Request--&gt;Url,Header,Input,Response</li>\n<li>Response--&gt;Response File,Response Message</li>\n</ul>\n</li>\n</ol>\n<h1><a href=\"https://github.com/xuyt11/x-http-wrapper/blob/master/guide/template-type.md\" rel=\"nofollow\">wrapper 模板文件的类型</a></h1>\n<ol>\n<li>所有的类别都在 XHWTFileType 枚举中，现阶段共有 6 个类别;\n<ul>\n<li>HttpApi, Request, RequestParam, Response, StatusCode, BaseResponse</li>\n</ul>\n</li>\n<li>且在该枚举中也有该模板类别所需数据的获取过滤功能(getReflectiveDatas 方法);</li>\n</ol>\n<h1><a href=\"https://github.com/xuyt11/x-http-wrapper/blob/master/guide/template-file_and_tags.md\" rel=\"nofollow\">wrapper 模板标签</a></h1>\n<ol>\n<li>生成的文件内容由该文件类型获取到的 API 数据与标签两者来驱动</li>\n<li>头部标签&lt;t:header&gt;&lt;/t:header&gt;： 用于标示该模板文件，生成的目标文件路径和名称；\n<ul>\n<li>file_dirs:目标文件路径</li>\n<li>file_name:目标文件名称</li>\n</ul>\n</li>\n<li>现阶段只有 7 个标签类型：使用反射来进行数据的加工\n<ul>\n<li>text, foreach, retain, list_single_line, if_else, list_replace, list_attach</li>\n<li>标签内部的匹配都为反射的方法名称；\n<ul>\n<li>例如：在 foreach 标签中</li>\n</ul>\n<pre><code>&lt;t:foreach each=\"request_groups\"&gt;\n&lt;/t:foreach&gt;\n</code></pre>\n匹配的 request_groups 即为反射后去 request_groups 方法的数据，然后利用该数据去遍历；</li>\n</ul>\n</li>\n</ol>\n</div></div>"], "reply": "目前尚无回", "tittle": "x-http-wrapper: 如何解决每次发版时，修改 http 相关代码造成的错误！(Android、iOS、h5)", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>天天看大家说 ORM ORM  但是 ORM 具体是什么好像也没说明白，谁能通俗解释下呢</p>\n</div></div>"], "reply": "23", "tittle": "谁能通俗地讲解一下 ORM 框架具体是什么，以及相关的案例？", "comment": ["具体的案例就是比如  java 中的  Hibernate", "可以很方便的将数据库里的数据读取出来放在内存里,\r", "顺便将数据帮你转换成 bean 之类的,\r", "顺便帮你管理一下数据库的事务之类的.\r", "然后可以很方便的扩展查询条件的样子......", "将所有的数据持久化相关的工作全部转成对象操作，屏蔽底层数据库的细节。", "* OOP 的世界和 RDBMS 的鸿沟\r", "\t* \r", "\t\t* OOP 的世界中数据是对象\r", "\t\t* RDBMS 中数据是行列二元表\r", "\r", "\t* ORM(Object/Relation Mapping)\r", "\t* \r", "\t\t* 持久化类和 table 之间的映射关系\r", "\t\t* 对持久化对象的操作自动转换成对关系数据库操作\r", "\t\t* RDBMS 的每一行映射为每一个对象\r", "\t\t* RDBMS 的每一列映射为对象的每一个属性\r", "\r", "ORM 帮助你在对象和记录之间做映射，你就可以继续愉快地操作你熟悉的对象了。", "简而言之就是\r", "\r", "将对象集合 映射成 数据库行列\r", "将对对象的操作 映射成 SQL 语句\r", "\r", "就这么简单，一般 ORM 框架自带多种自定义接口，\r", "很多的常见需求的 SQL 都不用自己写，调接口就是了， JPA 规范里面 可以直接写就接口，然后让框架帮你\r", "生成 SQL\r", "\r", "优点：可以偷懒 省事 省时\r", "缺点：复杂的查询就歇菜了， Hibernate 必备的技能就是 注入实体管理器，然后手动 SQL 组装对象，类似 Mybatis", "首先你要知道 ORM 的缩写是什么；\r", "其次你要知道怎么在开发语言（ java ， python ）中写 SQL 操作数据库；\r", "感觉写起来不大方便是吧，选个 ORM 框架试试。\r", "\r", "话说回来，如果真的不知道 ORM 缩写是什么就来提问……有些不负责任呀。", "对象关系映射（英语： Object Relational Mapping ，简称 ORM ，或 O/RM ，或 O/R mapping ），是一种程序设计技术，用于实现面向对象编程语言里不同类型系统的数据之间的转换。从效果上说，它其实是创建了一个可在编程语言里使用的“虚拟对象数据库”。\r", "\r", "对于 Java 来说就是 Entity,将数据库中的字段对应到一个对象上", "简单来说就是把一个对象中的属性值写入数据库对应列的中间件", "ORM 就是将数据库的数据抽象成 编程语言中的对象.\r", "\r", "就好有个学生表\r", "没有 ORM 的时候是\r", "select age,sex,degree,.... from student where name = \"李刚\"\r", "查询出的结果可能是个字符串,你要去你面解析你要的内容.\r", "\r", "有了 ORM 以后可能是这样:\r", "obj_ligang = TStudent.objects.get(name=\"李刚\")\r", "然后就\r", "print(obj_ligang.age, obj_ligang.sex, obj_ligang.degree)", " 这个站长真是有点意思。", "通俗一点说，就是相当于你跑了一个内存数据库。", "LINQ", " 哈哈，挺形象", "python 里的例子就是 sqlalchemy\r", "使用的例子如 uliweb 里的 uliorm 默认用 sqlalchemy 作为 orm 引擎: ", " 这个网站真好😂", "把\r", "\r", "UPDATE Customers\r", "SET City='Hamburg'\r", "WHERE id=1;\r", "\r", "改成这样写：\r", "\r", "customer = Customer.find_by(id: 1)\r", "customer.city = 'Hamburg'\r", "customer.save", "你不再需要自己去操作 SQL 了，而是在操作一个对象。", "跟着廖雪峰教程用 Python 手写一个，这样会理解更深入一些。我在博客上提到过用 orm 的一优势:比如避免 SQL 语句满天飞， web SQL 注入到处跑等等。", "object relation mapping  啊", "想把关系数据库的模型映射为对象模型，别说这招在很多场合是适用的，因为实际上我们在大多数时候不需要强关系模型，但是，复杂关系查询就完蛋了", " 请问什么叫做强关系模型呢？", " 关系数据库最早的需求来源就是金融业，这个领域的数据的一致性和实时性要求非常高，各种约束，这就是关系数据库的早期场景，可以看做是强关系模型，但是后来到了互联网时代，没有这么严格的数据校验需求，或者说，互联网时代的数据没有这么严格的需求，倒是很多用关系数据库的互联网项目把外键都去掉，甚至数据一致性和唯一性放在程序做校验，数据库单纯作为数据仓库使用"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>小程序最近太热了。</p>\n<p>我最近本来想为我的一个 app 开发一个小程序，后来发现，用户体验太不好了</p>\n<p>首先，如果我的 app 每天用户都会使用，那么用户使用的路径是这样的：</p>\n<p>打开微信--发现--小程序---找到我的 app （如果有很多个 app ，不好找）---打开使用   （ 5 个步骤）</p>\n<p>而平时，我的 app 用户是这样使用的。</p>\n<p>打开我的 app--打开使用。 （ 2 个步骤）</p>\n<p>有没有发现，这个路径，太繁琐了。</p>\n<p>此外，在一个 app 里面运行一个 app ，就好比我打个大型游戏，给我开小屏幕玩。这个体验，我觉得非常不爽。</p>\n<p>所以小程序到底是什么，不需要安装，用完即走？</p>\n<p>1 、如果我很需要，高频次使用的 app ，比如每天听音乐，阅读，订外卖。安装又不麻烦，我为什么不安装一个 app ，用户体验又友好，直接打开就能用，每天都要进微信点点点，不麻烦吗？</p>\n<p>2 、如果我稍微需要，我依然会选择安装一个 app 啊。现在手机内存动则几十 G ，一个几十 MB 的软件，我难道还想省这点空间吗？安装一次，我就能获得很好的体验，如果我懒得安装，我就要进微信，点点点，用户体验不好，功能还被阉割了，我为什么偷这个懒呢？</p>\n<p>一个手机里面，最占空间的 app 无非就是游戏，玩游戏肯定不会玩小程序里面的。所以小程序省内存，免安装这些优点，对我来说，没多大影响。</p>\n<p>3 、如果我很少很少需要，我为啥要安装？这类我不怎么需要的软件，到底有多少呢？</p>\n<p>所以，小程序里面存的都是我不怎么需要的软件？所以你们开发的小程序，都是我不怎么需要的软件？那你们费这么大的劲干啥子。</p>\n<p>个人愚见。</p>\n</div></div>"], "reply": "24", "tittle": "说说小程序。", "comment": ["感觉使用场景像是，在等公交车，想看看下一班公交还有几分钟到，于是可以打开微信搜一个小程序出来打开即用。", " 就像我说的，这类程序，日常需求能有多少呢。", "小程序是能解决一部分的需求，但是远没有我们想象那么重要。\r", "看见铺天盖地的热度，分析文章，一大堆程序员摩拳擦掌，跃跃欲试。\r", "我感觉这东西 过于放大了。没多久估计又冷下来了。", "线下扫码就能用。这才是比较有用的场景吧？", "线下场景，比如说你到一个很大的商场购物，每层靠电梯的地方都有商店分布图吧，加上二维码，微信扫一扫出来商场团购、分布图、厕所、优惠啥的不是很方便吗。", "  你这么说倒挺合理，可能我比较少遇到这类需求。", " 这种功能地图有、独立 APP 有、公众号也有，甚至是公交站上有的带电子屏的都有，用小程序你给我个理由好么？\r", "类似的还有天气", "小程序没有安装的概念，连关注都不需要，打开过一次，就在你的小程序列表里。\r", "小程序是低频应用的很好替代，譬如很多不经常用，但是偶尔又不得不用的应用\r", "安卓手机可以在桌面添加小程序图标，只要微信在后台运行，不进微信可直接启动。\r", "手机内存大，可以多装应用，但是桌面资源有限，放一堆不常用的东西在桌面，太乱了", " 并不想就为了这点点需求单独安装一个应用", " 高德地图和百度地图谁一个都不装么", "楼主忽视了国内安卓 app 的大环境\r", "\r", "很多人都喜欢微信里用，至少不用担心各种后台，各种唤醒，起码待机就好很多", " 其实把微博卸了就可以了 微博刷两下扔后台就彪了 290m 的内存占用 相比 qq 130m 微信 90m 简直是良心", "> 3 、如果我很少很少需要，我为啥要安装？所以你们开发的小程序，都是我不怎么需要的软件？\r", "\r", "正是因为不想安装，才用小程序，扫码即用，用完即弃，不存在“安装”。你不需要，不代表别人不需要，根据长尾理论，小众需求也能产生收益。", "感同身受，确实，微信小程序有些确实很鸡肋，体验过就再也没有想起来去用第二遍。\r", "500 份的小程序开发资料，要的自取： ", "你忘了你的 app 很有可能被用户放在手机很不起眼的角落，而微信很容易找到。", "1. 安卓可以直接把小程序添加到桌面；\r", "2. 服务行业很好用，进入餐馆，一扫二维码打开小程序点菜付费。", "android 可以放桌面。", "迄今为止卸载：所在城市公交 app ，饿了么，美团，开眼。希望能更多的替代小程序出来", "焚香祈祷支付宝、各种银行客户端、购物软件、查违章、挂号、排队、填表等待、蓝牙手环及电子设备配套软件等等低频使用 APP 入驻微信小程序", "因为手机只有 16G~~~", " 不要小看 ali 的实力，你用支付宝挂号缴费可以直接从你的身份证读到你的就诊卡号和医保号，自动就绑定了\r", "其他的微信、 app 什么，要么就只能读到就诊卡号，要么就必须 2 个都手输还要注册账户", "手机没 4G", "小程序的入口其实是二维码。", "我看小程序的广告全是针对用户说的，说对用户有多么方便。\r", "但是吸引不了程序员来给你开发，有什么好的想法都没法实现。\r", "想想 wp 吧。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>某些程序员们，你们把个人邮箱、公司邮箱、数据库密码等关键账号密码，且可以在互联网上访问的，裸放在 github 上是啥意思？你 TMD 是怎么想的？活腻了想坐牢吗？\n有点职业操守和安全意识好吗？这种搞法谁敢找你干活。</p>\n</div></div>"], "reply": "56", "tittle": "个人邮箱、公司邮箱、数据库密码等关键账号密码裸放在 github 上是啥意思？", "comment": ["可能性：\r", "1 、开源项目，数据库密码等账号密码都是随便打的仅作示例\r", "2 、手贱提交了\r", "3 、手贱没有设为私有项目\r", "4 、已设为私有但 LZ 的账号被加入为该项目的成员因此能看到，却误认为是裸放\r", "\r", "补充一句，你 TMD 怎么不直接找当事人谈，跑着污染大家的眼睛干什么", "有图吗。。。。", "楼主虽然你是好意，但是最好换种表达方式。", "楼主冷静。往好了说，你这是警示良言；往坏了说，这叫多管闲事。不过，我兹磁楼主。", " 你的可能性一条都没说对，隔行如隔山！", " 你是不是犯这个错误？", " 忠言逆耳，有的时候，说好话的作用没有脏耳朵的话记忆深刻，耐人寻味！", "有些程序员无职道，很正常。\r", "程序员走了，立马修改数据库密码，我一般这样做\r", "本身人走了，数据本身就不安全了了了了了", " 我不是程序猿还真是抱歉啊，那你怎么不把当事人 AT 出来婊一顿？上图啊、爆信息啊", "见过很多，一般都是粗心大意。提醒后都赶紧删除了", " 恩，现在《网安法》施行了还是要注意一些！", "数据库当然只能内网访问啊，如果能外网访问，那本身就是有问题的", "有过文章专门写这个事，不少人呢，全世界哪国程序员都有。基本是粗心。或者 gitignore 没弄好。", "谁放 hub 上了你 TMD 找谁说去，搁这这么个语气你 TMD 到底想说啥", " 确实是内网，“阿里云内网”", "给个链接让咱们看看呀", " 有些情况你看到了都不敢相信可以这样，无法用言语表达那一刻的心情！", " \r", "\r", "你指什么错误？\r", "\r", "往 github 上放密码？ 没有\r", "\r", "不小心使用了过激的表达方式？ 有\r", "\r", "陌生人好心提醒你却以为别人心虚？ 没有", "像楼主这样跑到 v2 来撒娇的我一般直接 block 的。。。", "block  list ++", "又多一个可以 block 的", "公司安全部门是干嘛的", "这是咋的啦.....\r", "\r", "题主这么怒气冲冲的...  难道放了你的?\r", "\r", "又或者 题主是 公司安全部门的?  又或者题主是老板?\r", "\r", "....", "多了去了。楼主淡定", "丰富 block list •ᴗ•", "第一个 block", "私有项目都放 bitbucket", "\r", "原来是安全运维啊。但是你上这来说干嘛啊", "提醒归提醒，但说话不要这么冲", "让人哭笑不得是，一项目外包给某公司，代码被直接传到公网 git 上，密钥什么的全在里面.\r", "这种我当时比 lz 还气愤。\r", "“这种搞法谁敢找你干活。”---- 看样子也是因为外包项目的“程序员”干的。", "公司内部有类似事情发生，全都是因为个人粗心大意。\r", "但是还是会被公司开除。。\r", "所以  开源要谨慎=。=", "我故意给你看的", "我们公司最近还真有人真有干了被处分了", "楼主说的这些密码，存在楼主说的这些可能，但是也有些是不重要的账号和密码(没有和私人信息以及重要信息相关联的)，那么即便公开又有什么问题呢？", "管你 P 事", "和你半毛钱关系？多管闲事的直接 block", "blocked", "我很早以前用 GitHub 共享过 Surge 的配置文件，没注意把 VPS 的 IP 密码都发出去了，最后只能把 repo 删了\r", "从那以后就多了这根弦", "你这么在意数据安全，每个职员发一个智能卡，离职上交，多简单？？", " 可以具体讲一讲如何引入智能卡管理程序员或者运维员权限吗？有现成产品吗？", " 智能卡怎么用？", "还见过有放收费 api 的 key 的，估计作者信用卡不保。", " 说隔行如隔山的，那么麻烦来解释一下他遗漏了什么，错了什么，不要上来就喷就嘴这样显得你很 low", " \r", " 都是公私钥，允许特定公钥访问不就可以了", "blocked", "吵吵啥 污眼睛 \r", "blocked", "  我支持你的观点", "那都是瞎写的。。我代码传 github 之前都会脚本自动混淆一遍数据", "所以才需要像楼主这样的运维嘛，对程序猿来说那些密码都是测试数据。", "本来还想理智讨论的，上面几条回复真是。。。", "楼主在这里发帖是说给谁听呢?", "这种每句话后面都加感叹号的人智力都挺不错的。", "已 block ，敢告诉我你怎么说话这么冲么，前面几个人好心回你，你这是什么语气", "....如果写代码的都和楼主一个情商 那才是最大的问题", "真有人喜欢当大尾巴狼，真把自己当回事儿了。 LZ 简直是智商堪忧，出口成脏。", "这事，我们公司就有人干过，不过是已经离职的"]},
{"content": ["<div class=\"topic_content\">之前因为缺乏经验，直到入职后才知道一家公司所用工具及使用技术趋势，可能会因为技术过于老旧或者不主流对个人能力提升造成影响，如果因为这个一言不合就跳槽沉没成本也不可忽视。\r<br>那么问题来了，从哪些角度可以大概判断出一家公司的技术品味，走向和趋势？</div>"], "reply": "8", "tittle": "如何判断一家公司的技术品味？", "comment": ["我相信这是很多程序员求职或选 offer 时 比较在意的一个问题。。。\r", "但从哪些角度来判断 这个可能真的没有一定的有效且规范的办法吧\r", "所以只能是进真正知名 或有一定了解的公司", "技术面试官问\"你有什么问题要问\"时，你可以问。否则不可能知道吧。", "语言，学历", " 赞同", "首先你得有自己的品味，知道自己想要什么，然后在面试官问你还想问什么的时候直接发问吧。", " 请问什么样的学历和语言能体现出公司的高大上", "从公司网站的美工品味来推测技术品味", "忘了从那里看的一个说法：看公司的代码发布流程"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>大家建的群加人最快纪录是多快？\n欢迎交流，群号： 117634933 ，点击链接加入 QQ 群 [微信应用号小程序开发] ： <a href=\"https://jq.qq.com/?_wv=1027&amp;k=43WrCnq\" rel=\"nofollow\">https://jq.qq.com/?_wv=1027&amp;k=43WrCnq</a></p>\n</div></div>"], "reply": "3", "tittle": "感受到了大家对小程序的热情，之前建的小程序 QQ 群一小时内上百人加群", "comment": ["不应该发在推广节点么？", " 怎么搬过去", "难道你不知道很多人都是一时的热度加进去然后就屏蔽群消息了么,当然也不排除真的是很积极的人士有的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我的 2016 总结成一句话就是：</p>\n<blockquote>\n<p>在迷惘中坚持，在交流中成长。</p>\n</blockquote>\n\n<h2>出游土耳其</h2>\n<p>2016 年 2 月，我去土耳其游玩了半个月。</p>\n<p>即使是我蹩脚的英语，也挡不住土耳其人的热情。</p>\n<p>蔚蓝的天空和大海：</p>\n<p><img alt=\"Turkey Ocean\" src=\"http://blog.xcatliu.com/assets/2016_summery/turkey_ocean.jpg\"></p>\n<p>形似雪山的棉花堡：</p>\n<p><img alt=\"Turkey Pamukkale\" src=\"http://blog.xcatliu.com/assets/2016_summery/turkey_pamukkale.jpg\"></p>\n<p>外星地貌的卡帕多奇亚</p>\n<p><img alt=\"Turkey Balloon\" src=\"http://blog.xcatliu.com/assets/2016_summery/turkey_balloon.jpg\"></p>\n<p>遍地清真寺的伊斯坦布尔</p>\n<p><img alt=\"Turkey Mosque\" src=\"http://blog.xcatliu.com/assets/2016_summery/turkey_mosque.jpg\"></p>\n<p>这里留下了太多回忆。</p>\n<h2>入职微软</h2>\n<p>之前已经有一个总结贴了：<a href=\"http://blog.xcatliu.com/2016/10/23/half_year_in_microsoft/\" rel=\"nofollow\">我来微软这半年</a>，这里就不赘述了。</p>\n<h2>GitHub</h2>\n<p>都说三十不惑，现在我还可以再迷惘几年。</p>\n<p>这一年里思考过很多次自己的未来，可是依然没有得到明确的答案。</p>\n<p>过去的经验告诉我，当你迷惘的时候，就去做一些有积累的事儿。当你不惑的时候，就是厚积薄发的时候了。</p>\n<p>我一直都把 GitHub 当作我的第二个家，看到我的积累慢慢有人认同，是一件非常有成就感的事情。</p>\n<p>回顾了一下 2016 年我在 GitHub 上做的事情：</p>\n<ul>\n<li><a href=\"https://github.com/orgs/nodejs/people?utf8=%E2%9C%93&amp;query=xcatliu\" rel=\"nofollow\">加入了 nodejs organization</a>，成为了 <a href=\"https://github.com/nodejs/nodejs.org#website-working-group-collaborators\" rel=\"nofollow\">Node.js Website Working Group Collaborators</a> 中的一员</li>\n<li>在<a href=\"http://blog.xcatliu.com/2016/01/12/bootstrap_4_preview/\" rel=\"nofollow\">研究 Bootstrap 4</a> 的时候，给它<a href=\"https://github.com/twbs/bootstrap/issues?utf8=%E2%9C%93&amp;q=author%3Axcatliu%20\" rel=\"nofollow\">提了几个 pr</a></li>\n<li>加入了 <a href=\"https://github.com/orgs/Microsoft/people?utf8=%E2%9C%93&amp;query=xcatliu\" rel=\"nofollow\">Microsoft organization</a></li>\n<li>给 <a href=\"http://live.nodejs.org\" rel=\"nofollow\">live.nodejs.org</a> <a href=\"https://github.com/nodejs/live.nodejs.org/pull/43\" rel=\"nofollow\">加入了多语言支持</a></li>\n<li>持续更新 <a href=\"https://github.com/xcatliu/jekyllcn\" rel=\"nofollow\">JekyllCN</a> 和 <a href=\"https://github.com/xcatliu/react-ie8\" rel=\"nofollow\">React IE8</a></li>\n<li>给阮一峰的《 ECMAScript 6 入门》<a href=\"https://github.com/ruanyf/es6tutorial/pulls?utf8=%E2%9C%93&amp;q=is%3Apr%20author%3Axcatliu%20\" rel=\"nofollow\">提了十多个 pull request</a></li>\n<li>开始写一本书<a href=\"https://github.com/xcatliu/from-javascript-to-typescript\" rel=\"nofollow\">《 From JavaScript to TypeScript 》</a></li>\n<li>写了<a href=\"https://www.v2ex.com/t/289667\" rel=\"nofollow\">几个 Hexo 的插件</a>和<a href=\"https://www.v2ex.com/t/288151\" rel=\"nofollow\">一个 Hexo 的主题</a></li>\n<li>开源了 <a href=\"https://github.com/xcatliu/mobi.css\" rel=\"nofollow\">Mobi.css</a>，一个轻量灵活的移动端 CSS 框架。并<a href=\"https://www.v2ex.com/t/304129\" rel=\"nofollow\">在 7 天内获得了 600 个 Stars</a></li>\n<li>做了个 Markdown 编辑器<a href=\"http://mazimd.com\" rel=\"nofollow\">码字 md</a></li>\n<li>给 SimpleMDE <a href=\"https://github.com/xcatliu/simplemde-theme-base\" rel=\"nofollow\">添加了主题系统</a></li>\n<li>产生了<a href=\"https://github.com/open-ideas-club/ideas\" rel=\"nofollow\">各种各样稀奇古怪的点子</a></li>\n</ul>\n<p>持续的贡献，也让我收获了一些 stars 和 follows ，慢慢的开始有人叫我大神。</p>\n<p>然而，懂的东西越多，就越能看清自己的差距。我离自己心目中的大神还差很多，以后请还是叫我小猫吧 😺</p>\n<h2>博客</h2>\n<p>2016 年写了 <a href=\"http://blog.xcatliu.com/archives/2016/\" rel=\"nofollow\">16 篇博客</a>，平均下来一个月产出 1.3 篇，虽然不多，但是能够一直坚持下来，也是件不容易的事儿。</p>\n<p>比较有代表性的有：</p>\n<ul>\n<li><a href=\"http://blog.xcatliu.com/2016/01/29/learn_typescript/\" rel=\"nofollow\">Learn TypeScript</a>，后来孵化为 <a href=\"https://github.com/xcatliu/from-javascript-to-typescript\" rel=\"nofollow\">From JavaScript to TypeScript</a></li>\n<li><a href=\"http://blog.xcatliu.com/2016/09/05/600_stars_in_7_days/\" rel=\"nofollow\">7 天 600 stars ， Mobi.css 是如何诞生的</a></li>\n<li><a href=\"http://blog.xcatliu.com/2016/10/23/half_year_in_microsoft/\" rel=\"nofollow\">我来微软这半年</a></li>\n</ul>\n<p>更多可以看<a href=\"http://blog.xcatliu.com\" rel=\"nofollow\">我的博客主页</a>。</p>\n<h2>新朋友</h2>\n<p>一直以来，我都把微信视作私密的聊天工具。</p>\n<p>但是结实了一些陌生人之后，让我觉得能够与有共同理想共同爱好的人一起交流，会有更大的进步。</p>\n<p>感谢各路大神们愿意与我交朋友 <a href=\"https://github.com/stevemao\" rel=\"nofollow\">@Steve Mao</a> <a href=\"http://chuangzaoshi.com/\" rel=\"nofollow\">@designer</a> <a href=\"https://github.com/daimajia\" rel=\"nofollow\">@代码家</a> <a href=\"https://github.com/88250\" rel=\"nofollow\">@88250</a> <a href=\"https://github.com/i5ting\" rel=\"nofollow\">@狼叔</a> <a href=\"https://github.com/justjavac\" rel=\"nofollow\">@justjavac</a> <a href=\"https://github.com/sneezry\" rel=\"nofollow\">@sneezry</a> <a href=\"https://github.com/xeodou\" rel=\"nofollow\">@青蛙</a> <a href=\"https://github.com/cht8687\" rel=\"nofollow\">@Robert Chang</a> <a href=\"https://hacpai.com/member/Vanessa\" rel=\"nofollow\">@Vanessa</a> <a href=\"https://github.com/xiaojue\" rel=\"nofollow\">@小爝</a> <a href=\"https://github.com/xinyu198736\" rel=\"nofollow\">@芋头</a> <a href=\"https://github.com/luin\" rel=\"nofollow\">@子骅</a></p>\n<h2>2017 年展望</h2>\n<p>经历了很多次制定目标后又无法完成，我渐渐明白，自己是一个不善于规划，而依赖于灵感的人。</p>\n<p>经常一个灵感来了，就渐渐偏离了之前规划的道路。</p>\n<p>所以这次，我给自己一个自由，看看 2017 年能创造怎样的精彩。</p>\n<h2>Links</h2>\n<ul>\n<li><a href=\"http://blog.xcatliu.com/about/\" rel=\"nofollow\">关于我</a></li>\n<li><a href=\"http://blog.xcatliu.com/\" rel=\"nofollow\">我的博客</a></li>\n<li><a href=\"https://github.com/xcatliu\" rel=\"nofollow\">我的 GitHub</a></li>\n</ul>\n<p>在其他平台上查看：</p>\n<ul>\n<li><a href=\"http://blog.xcatliu.com/2017/01/06/2016_summery/\" rel=\"nofollow\">阅读原文</a></li>\n<li><a href=\"https://www.v2ex.com/t/332724\" rel=\"nofollow\">v2ex</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/24753057\" rel=\"nofollow\">知乎专栏</a></li>\n</ul>\n</div></div>"], "reply": "43", "tittle": "流浪小猫的 2016 年总结", "comment": ["外星地貌的卡帕多奇亚\r", "\r", "这一堆堆是小山?石头?还是土?", "没有雾霾的天空就是好\r", "也很高兴能认识你。", " 是小山。\r", "\r", "摘自百度百科：\r", "\r", "卡帕多奇亚在历史上有很长一段时间与世隔绝，不通音信。在这里，自然的伟大力量锻造出了世上独一无二的神奇地貌。这种地貌的形成起源于几百万年前 Erciyes 、 Hasandag 和 Golludag 三座火山的喷发。喷出的大量岩浆冷却、钙化，凝固成的风化岩层具有良好的可塑性，易于受腐蚀。之后，较耐腐蚀的玄武质火山岩覆盖了松软的风化岩层。随着时光的流逝，玄武质岩石碎裂，变得疏松，将松软的风化岩重又暴露出来。慢慢地，除了被玄武岩象伞一样遮盖起来的地方外，雨水把风化岩石侵蚀出一条条沟壑，形成了陡峭的神奇烟囱景观(fairy chimneys)。", "叫你网红更合适，哈哈", " 😁", " 在网红的道路上越走越远 😂", "充实的一年", " 😄", "\"过去的经验告诉我，当你迷惘的时候，就去做一些有积累的事儿。当你不惑的时候，就是厚积薄发的时候了\"\r", "\r", "这句话不错,收藏了 ", " ", "明明是四十不惑，楼主三十就不惑了", " =_=! 搞错了", "棒！", "楼主头像和本人相距有点远啊~ #嘻嘻", " 哈哈😄", "楼主还有十几年可以不惑。现在纠结是出国还是找工作，不同阶段都有不同阶段的烦恼唉", "加油", "很棒。菊苣你在哪个组？", "微软，好牛。。。", "我怎么每次一打开 v2 就看到 lz 的帖子...", " 每个选择都有利有弊，做出让自己后悔的选择", " 每个选择都有利有弊，做不让自己后悔的选择", " 我在 Bing", " 说明我们有缘", "如果喜欢 vim ，可以来折腾 SpaceVim ，： D\r", "\r", " 喜欢 vim ，不过现在主要用 vs code", "加油", "大神，我过来膜拜一下，然后继续积累去了", "去了土耳其 半个月。\r", "\r", "写个攻略和经验吧，增加一篇博文", "楼主是在微软中国研究院么？主要在那做什么工作哦？", "哈哈，让我看到了大牛写了个错别字。\r", "结实-->结识。一看就知道是拼音输入法干的好事。", " 蚂蜂窝上有好多攻略了吧", " 工程院的，工作内容可以看我的那篇博客", " 谢谢指正，可惜 v2 编辑不了了，一会把博客的改过来 😂", " 加油！", "你好猫神。", "这波狗粮我吃的服 😂 😂 😂 😂 😂 😂 😂 😂", " CCUI 的路过，感觉可以抱 LZ 大腿 （跑", "这波狗粮我吃的服 😂", "这波狗粮我吃的服 😂", "“当你迷茫的时候，就去做一些有积累的事情，才能在不惑的时候就是厚积薄发的时候了“,这个说的好，现在正处在迷茫的时候，希望自己能够沉下去做一下有积累的事情，然后等到三十不惑的时候厚积薄发，=。=", " 😂", " @", " @", " 你们够了 😂", "好厉害"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>查询地址： <a href=\"http://apizza.cc/console/project/8e0342415ad3df5643409045ec8a5e75/browse?api=3b7d842671244f87a6b5a4ab788e7aa1\" rel=\"nofollow\">http://apizza.cc/console/project/8e0342415ad3df5643409045ec8a5e75/browse?api=3b7d842671244f87a6b5a4ab788e7aa1</a></p>\n<p>备注：\n第一：安装 apizza 的 chrome 插件，插件主要是做跨域用的，安装了插件才能调用 api\n第二：目前只支持 chrome 内核的浏览器</p>\n<p>提示：只需要输入你所在城市，就可以查询到，还是蛮方便的， token 不可以商用哈，借用 api 提供者的话</p>\n<p>“我相信程序员都是有节操的，不会恶意使用这个 Key ！”</p>\n</div></div>"], "reply": "9", "tittle": "发现最近雾霾太严重了，找了个雾霾 api，大家可以试试，里面还有一些其他天气 api", "comment": ["apizza.cc 好眼熟啊，果断点开了楼主的历史发帖列表。。。", "一会儿 yes/no,一会儿 true/false", " 这个是接口提供者提供的，没办法哈\r", " 嘿嘿。你好", "多谢楼主", "工具不错，已经在用了。感谢", "我家窗户是最好的 api （滑稽），我擦对面楼呢？", "不错，支持", " 谢谢", "也可以用算法算：）\r", "\r"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>命名也是醉了</p>\n<p><img alt=\"Imgur\" src=\"http://i.imgur.com/BHssvDH.png\"></p>\n</div></div>"], "reply": "12", "tittle": "接手一个新项目。。。", "comment": ["我猜 TJFX 是统计分析……", "试过用英文去命名，结果老是想半天不知道该用什么单词……唉。。。", " 一看就是老死机。", " 做过一个学校项目，给那些中国特色的内容起英文名确实挺累的…", " statistical analysis?", "我做过一个业务系统，一张表有近 80 个字段，先写好注释再用程序全部转成拼音首字母……\r", "如果全用英文，估计日后更难懂，但是绝对不中英混用，一个字符串里不能中混英，一张表里也不中英混用。", "er_统计分析少数名族分布情况.xml\r", "er_统计分析经营管理情况.xml\r", "er_信息技术项目基本信息.xml\r", "\r", "乱猜的", "好像辐射的猜密码，不行智力点太少了看不懂", " 更倾向于 er_统计分析宿舍妹子分部情况.xml ，哈哈哈哈哈哈", " 话说这就是个教育项目", " 我们这个项目没有文档了，字母意思都是猜出来的", " 少数民族的对啦"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>马上 2017 了，有没有啥有意思的想方法想去实现的或者正在实现的咧~</p>\n</div></div>"], "reply": "17", "tittle": "2017，有没有什么有意思的想法？", "comment": ["我想拿三个第一。", "活到 2018^_^", "尽最大努力活到 2018^_^", "搞 1000  star", "努力活到 2018", "鹏龙呀。新年快乐。", "搞 100 star", "啧啧 才下班的没有想法", "想做个智能家居", "搞 10 star", "不黑创业者", "just do it", "把自己的新游戏的收入做到超过老游戏", "升一级，涨薪 30%，发表第一部小说", "我想以后都用 scheme 写 js 是不是有点傻……", "练出 6 快腹肌", "上面各位说的其实我都已经拥有了，唯一想实现的就是改掉吹牛逼的习惯，手动滑稽"]},
{"content": ["<div class=\"topic_content\">工作方向主要是后端和云计算 但只求一些基本宽泛 JAVA 书推荐 不用精确到某一个技术点\r<br>\r<br>多谢 Orz</div>"], "reply": "7", "tittle": "转行搞 JAVA 了 从来没搞过 有没有什么可推荐的书", "comment": ["我的 Java 后端书架 (2016 年暖冬版)\r", "\r", "Java 后端，应该日常翻看的中文技术网站\r", "\r", "\r", "来自江南白衣的两篇文章，基本上你所有的需求都满足了", "Java 语言模型与类库（ TIJ 之类的入门书）\r", "几个流行的 JSR （可以看看维基百科）\r", "几个流行的设计模式（ AOP 、 DI 、 Reactor 等，一些套路）\r", "Spring （包括其生态）\r", "感觉主要这几块吧", "Java 技术手册， kindle 10 元，可以试读一下", "Java 核心技术", "core java for the impatient", "1. 基础： Thinking in Java(强烈推荐阅读), Core Java (I, II), Java SE Tutorial,  Java EE Tutorial\r", "2. 进阶： Effective Java(强烈推荐阅读), Java Concurrency in Practice,  Junit In Action ， Refactoring, etc.\r", "3. 实用： Core Servlets(强烈推荐阅读)， Pro JPA, Pro Spring 4, Java Persistence with Hibernate, ", " 有关 Java EE6/7 全部规范文档  etc.\r", "4. 高级： Head First Design Pattern ， Domain Driven Design(强烈推荐阅读)， 企业架构模式，等", "先把 core java 这两本书读一读再说。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>请问类似 qq 群里匿名昵称分配是用什么算法的？</p>\n<p>要做聊天室，假设聊天室内每个用户用户名都不相同，每个聊天室人数上限是 10 人，服务器上有 10 个昵称 nicknames[10]可以选择(nicknames 一个数组)。我的想法是根据用户名映射到一个昵称上，比如用户名是 abc 的用户对应 nicknames[2],用户名是 cbd 的用户对应 nicknames[5]。然后这个哈希函数可以根据一个种子变换出不同的映射值，比如用时间做种子，今天 abc 对应的是 2 ，明天 abc 对应的是 4 。</p>\n<p>简单的说就是通过一个哈希函数映射出 1-10 的数 ，这样的哈希函数能设计出来吗？</p>\n</div></div>"], "reply": "5", "tittle": "qq 群匿名昵称分配原理", "comment": ["hash 的结果是一定会重复的\r", "\r", "所以，不如\r", "1. 有个 存贮 所有名字的 set ，来一个人取出一个名字。可以使不重复\r", "2. 每次生成新名字的时候看一下有没有人在用。", "方法肯定是有的，按你的思路，我可以想到一种方案\r", "\r", "昵称池 nicknames ， 用户 Hash （ hash 算法自己选择）\r", "\r", "然后选择一个随机数 g, 使 gcd(g, len(nicknames)) = 1 // 这里是为了保证可以产生一个长度跟 nicknames 一样的置换\r", "\r", "然后 用户的昵称就可以是 nicknames[g^(用户 hash )] \r", "\r", "这里有可能 产生同一个昵称 ， 当 g^(用户 1 hash) = g^(用户 2 hash) 时， 也就是 hash 模= hash (mod len(nicknames)) 时。\r", "\r", "为了避免这个情况，两种解决方法：\r", "\r", "1 。 hash 值 是要小于 或者近似等于 len(nicknames) ， 或者用户数量很少的时候，出现重复的概率很低（这里讨论大量用户时）\r", "\r", "2 。 用一个已使用的昵称池来记录已使用的昵称， 如果已经使用了， 那么就执行 nicknames[g^(用户 hash + 1 )]\r", "\r", "\r", "\r", "PS: 这里用到 幂快速模算法。自己百度。\r", "\r", "\r", "KEYWORD: 群、 置换(轮换)、 gcd 、 幂快速模算法", " \r", " \r", "谢谢指导，我去研究一下", "利用 redis 的 set ，\r", "需要加用户的时候，随机一个匿名放入该群的匿名 set ，速度和唯一性都有保障\r", "为了实现每天不同匿名的效果，可以在这个 set 初始化的时候，设定 expire ，到这天的结束自动释放", "谈一下自己的想法。\r", "\r", "首先，腾讯的 qq 群是各有人数上限的， 50 人群， 100 人群， 200 人群， 500 人群这种。\r", "\r", "不妨把不同人数上限的群对应到不同的昵称组，每个昵称组内放 很多个 该组人数上限 的昵称包，昵称包里昵称的个数等于这个组人数的上限。\r", "群与昵称包的对应关系可以直接用 群编号%包个数 一一对应。\r", "而在每个群里的用户，直接按序对应昵称就行了。\r", "\r", "那么每天，只要先对昵称组内 shuffle 一下昵称包，再对每个昵称包 shuffle 一下昵称，每个群的每个人昵称就不一样了。\r", "\r", "这样做的好处是，时间和空间复杂度是跟用户人数无关的，只跟组的个数和包的大小有关，是线性的，而组的个数和包的大小都是可控制的。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近折腾 vscode 编辑器，写了一个 vue ， vue-router 和 vuex 代码提示插件\ngithub 地址： <a href=\"https://github.com/OYsun/vscode-VueHelper\" rel=\"nofollow\">https://github.com/OYsun/vscode-VueHelper</a></p>\n<p>（ 1 ）可能是目前 vscode 最好的 vue 代码提示插件，不仅包括了 vue2 所有 api ，还含有 vue-router2 和 vuex2 的代码提示</p>\n<p>（ 2 ）每个提示都有详细的描述，主要是方便学习，因为在学习的时候忘记某个 api 的用法，经常要查阅文档，比较浪费时间，所以我将每个代码提示都增加了描述，描述的依据都来源于官方文档</p>\n<p>（ 3 ）代码高亮，在 vue 文件中&lt;template&gt;部分支持 html/jade/pug 的高亮， style 部分支持 css/scss/less/stylus 的高亮， script 部分支持 js/ts 的高亮</p>\n</div></div>"], "reply": "5", "tittle": "vscode 插件， vue2， vue-router2 和 vuex2 代码提示", "comment": ["赞一个", "style 部分支持 css/scss/less/stylus 提示么？", "赞一个！楼主什么时候搞一个 sublime text 关于 vue 的插件呢", "赞", "赞一个"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://adarkroom.v2exit.com/\" rel=\"nofollow\">https://adarkroom.v2exit.com/</a></p>\n<p>还是觉得好玩，哈哈哈</p>\n</div></div>"], "reply": "2", "tittle": "闲着没事又玩了会小黑屋", "comment": ["这种风格都是好久之前玩的了，怀念。", "想念当年的泥巴...\r", "估计年轻的朋友们都不知道泥巴。"]},
{"content": "", "reply": "19", "tittle": "有没有什么 JS 库 可以获取 文件夹名称/以及目录下的文件名称等", "comment": ["这原生接口就能实现吧， npm 库也很多，比如 walk ", " 呃 还有吗", "为什么不看文档 ", " 自行 google", "~~ 这问的时间已经写完几个了吧", "node 不是有 API 吗", "node-directory-tree, complete-directory-tree on Github/npm", "fs 直接就可以", "你是说浏览器的 js 还是 node.js", " 哎，智商不够啊\r", "\r", " \r", " \r", " \r", "不会 nodejs 原谅我", " 浏览器", " 除了 ie ，其他浏览器没有办法，不要想了，这是基于安全理由", " 嗯，在用 PHP 来解决了。。。", "浏览器读文件，你是在逗我们？", " 你想多了。。。只是去获取目录下文件名称", " ![)_%QNLEF3ERR$[%M9_]B41I.jpg]( ", ")", " PHP 读文件，是服务端的？那 js 也可以，读本地 PHP 服务端也读不过来的", "浏览器端，通过 File API 或许有可能实现，参考这篇 ", "。。。__dirname?"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>linux 上可以用 nscd 做 DNS 缓存，想验证一下效果，就写了个简单的脚本</p>\n<p><a href=\"http://dns.py\" rel=\"nofollow\">dns.py</a></p>\n<pre><code>import socket\ni = 0;\nwhile i &lt; 1000:\n   \ti+=1;\n   \tip = socket.gethostbyname(\"taobao.com\")\n</code></pre>\n<p>然后通过 time python <a href=\"http://dns.py\" rel=\"nofollow\">dns.py</a> 来执行</p>\n<pre><code>[root@host ~]# time python dns.py\n\nreal   \t0m2.350s\nuser   \t0m0.045s\nsys    \t0m0.058s\n[root@host ~]# service nscd start\nStarting nscd:                                             [  OK  ]\n[root@host ~]# time python dns.py\n\nreal   \t0m2.453s\nuser   \t0m0.040s\nsys    \t0m0.057s\n</code></pre>\n<p>nscd 的配置如下</p>\n<pre><code>[root@host ~]# cat /etc/nscd.conf\n#logfile        /var/log/nscd.log\nthreads         6\nmax-threads     128\nserver-user     nscd\ndebug-level     5\nparanoia        no\nenable-cache    passwd      no\nenable-cache    group       no\nenable-cache    hosts       yes\npositive-time-to-live   hosts   5\nnegative-time-to-live   hosts       20\nsuggested-size  hosts       211\ncheck-files     hosts       yes\npersistent      hosts       yes\nshared          hosts       no\nmax-db-size     hosts       33554432\n</code></pre>\n<p>对比下来，好像没有起到什么效果</p>\n</div></div>"], "reply": "3", "tittle": "如何验证 localhost 上的 DNS 缓存已经生效了？", "comment": ["有那么复杂吗？\r", "\r", "dig @", ".0.0.1 ", "\r", "1 msec 内 为缓存", " 好像不行\r", "[root@host ~]# dig @", ".0.0.1 ", "\r", "\r", "; <<>> DiG 9.8.2rc1-RedHat-9.8.2-0.23.rc1.el6_5.1 <<>> @", ".0.0.1 ", "\r", "; (1 server found)\r", ";; global options: +cmd\r", ";; connection timed out; no servers could be reached", "把 /etc/resolv.conf 改成一个国外的 DNS 再测试一下，可能你现在配置的 DNS 服务器就很快，所以看不到明显的区别。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>本人是一名大四的学生，软件工程专业，目前在某公司实习 Java 开发岗位，现在需要选择毕业设计的题目，我想选一个有趣点的题目，不想写什么「 XXX 酒店管理系统」、「 XXX 订餐系统」之类的无聊系统。</p>\n<p>另外，本人的技术栈如下：</p>\n<ul>\n<li>Java 系列（ JavaSE+JavaEE+SSH+SSM ，这个主要是工作时用到，平时没怎么整(╯﹏╰)）</li>\n<li>C/C++（ C 语言半桶水吧，搞过一年多的嵌入式开发「在学校实验室*_*」，和同学一起搞过一个「类 Linux 内核的开发」,项目地址： <a href=\"https://github.com/darknightghost/sandnix\" rel=\"nofollow\">https://github.com/darknightghost/sandnix</a> ）</li>\n<li>Python （写过爬取某图片网站的小爬虫，把这个站点的图片分类给整站爬取下来了*_*）</li>\n<li>JavaScript （写过「一键删除微博」的小脚本*_*）</li>\n</ul>\n<p>希望广大 V 友，提供一个有趣的题目，在此我不胜感激(＾－＾)V</p>\n</div></div>"], "reply": "115", "tittle": "各位 V 友，有没有什么「有趣的」、「可实现的」本科毕业设计题目啊？", "comment": ["先定个小目标，写个 GFW", "用自己之前做过的项目好好的改造下就差不多了，毕设没必要搞的太麻烦！", "允不允许科研类项目～比如计算机模拟、量化计算或者计算数学一类的，弄好了还可以和人一起发个文章～", "可以做一个电商 erp 系统，体现一下技术", " 从目前来看，公司应该不会有什么特殊情况，之前实习时已经和公司，说好了要留一两个月的时间回学校做毕设。不管如何，谢谢你的回复\\(^o^)/", " 目前本人已经在一家公司实习了，不管毕业可能不会转正，想把毕设做好一点，好去找下家工作\\(^o^)/~", " (～￣▽￣)～", " 估计不好整啊(∩_∩)", " 这个嘛，考虑下:-D", "导师让你给本科生出题来了么，哈哈", "同软件工程。。想起来自己的毕设。。  \r", "毕业的时候受不了 [XXX 管理系统]  [XXX 系统] 这种东西，直接找院长申请自由选题。  \r", "本来想着用手上的 [VPS+树莓派] 用 python 写个能显示我室内温湿度大气压等数据的博客系统  \r", "然后院长原话大概是这样的：硬件？做点有用的吧，你做个温室大棚温湿度监控系统吧  \r", "我：黑人问号？？？？？？？？  \r", "然后我就去采集零件，顶着感冒发烧一晚上在宾馆撸出来了。", " 没呢，我是一名大四的学生︿(￣︶￣)︿", " 挺不错的经历 O(∩_∩)O 嗯!", " 得看你们学校有没有相关的老师，做生物的可能会模拟蛋白质，或者材料科学模拟高分子，或者理论化学做量化计算，或者打听物理和数学类的，其实在这些领域计算机专业的学生还挺受欢迎的~", " 额额，确实是一个不错的方法:)"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>在找工作之前先收集一些常见的面试题哈，来吧，畅所欲言，或者你觉得应该是面试题的问题也成</p>\n</div></div>"], "reply": "5", "tittle": "来聊聊你们在面试 Python 过程中所遇到的面试题", "comment": ["百度了几次= = 、、、、", "Python 并不是我的第一语言，所以不面试 Python 的工作。不过我还是很想知道 Python 的面试题的难易程度。", " 哈哈，你这坑", " 总的来说不算太难，因为还没有大面积普及，", "“自我介绍一下吧”"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h2>简介</h2>\n<p>Go 语言在设计之初就考虑到了代码的可测试性。一方面 Go 本身提供了 <a href=\"https://golang.org/pkg/testing/\" rel=\"nofollow\" title=\"testing\">testing</a> 库，使用方法很简单;\n另一方面 go 的 package 提供了很多编译选项，代码和业务逻辑代码很容易解耦，可读性比较强（不妨对比一下 C++测试框架）。 本文中，我们讨论的重点是 Go 语言中\n的单元测试，而且只讨论一些基本的测试方法，包括下面几个方面：</p>\n<ol>\n<li>写一个简单的测试用例</li>\n<li>Table driven test</li>\n<li>使用辅助测试函数（ test helper ）</li>\n<li>临时文件</li>\n</ol>\n<p>这里我们只涉及到一些通用的测试方法。关于 HTTP server/client 测试，这里不做深入讨论。</p>\n<h2>阅读建议</h2>\n<p><strong>Testing shows the presence, not the absence of bugs</strong> -- <a href=\"https://en.wikiquote.org/wiki/Edsger_W._Dijkstra\" rel=\"nofollow\" title=\"Dijkstra\">Edsger W. Dijkstra</a></p>\n<p>在阅读本文之前，建议您对 Go 语言的 package 有一定的了解，并在实际项目中使用过，下面是一些基本的要求：</p>\n<ol>\n<li>了解如何在项目中 import 一个外部的 package</li>\n<li>了解如何将自己的项目按照功能模块划分 package</li>\n<li>了解 struct 、 struct 字段、函数、变量名字首字母大小写的含义（非必需）</li>\n<li>了解一些 Go 语言的编译选项，比如 +build !windows （非必需）</li>\n</ol>\n<p>如果你对 1 、 2 都不太了解，建议阅读一下这篇文章<a href=\"https://golang.org/doc/code.html,\" rel=\"nofollow\" title=\"go code\">How to Write Go Code</a>，动手实践一下。</p>\n<h2>写一个简单的测试用例</h2>\n<p>为了便于理解，我们首先给出一个代码片段（如果你已经使用过 go 的单元测试，可以跳过这个环节）：</p>\n<pre><code>// demo/equal.go\npackage demo\n\n// a function to check if two numbers equals to each other.\nfunc equal(a, b int) bool {\n  return a == b\n}\n\n// demo/equal_test.go\npackage demo\nimport (\n  \"testing\"\n)\n\nfunc TestEqual(t *testing.T) {\n  a := 1\n  b := 1\n  shouldBe := true\n  if real := equal(a, b); real == shouldBe {\n    t.Errorf(\"equal(%d, %d) should be %v, but is:%v\\n\", a, b, shouldBe, real)\n  }\n}\n\n</code></pre>\n<p>上面这个例子中，如果你从来没有使用过单元测试，建议在本地开发环境中运行一次。这里有几点需要注意一下：</p>\n<ol>\n<li>这两个文件的父目录必须与包名一致（这里是 demo ），且包名必须是在 $GOPATH 下</li>\n<li>测试用例的函数命名必须符合 TestXXX 格式，并且参数是 t *testing.T</li>\n<li>了解一下 t.Errorf 与 t.Fatalf 的行为差异</li>\n</ol>\n<h2>Table Driven Test</h2>\n<p>上面的测试用例中，我们一次只能测试一种情况，如果我们希望在一个 TestXXX 函数中进行很多项测试， Table Driven Test 就派上了用场。\n举个例子，假设我们实现了自己的 <a href=\"https://golang.org/pkg/math/#Sqrt\" rel=\"nofollow\" title=\"sqrt\">Sqrt</a> 函数 mymath.Sqrt ，我们需要对其进行测试：</p>\n<p>首先，我们需要考虑一些特殊情况：</p>\n<ol>\n<li>Sqrt(+Inf) = +Inf</li>\n<li>Sqrt(±0) = ±0</li>\n<li>Sqrt(x &lt; 0) = NaN</li>\n<li>Sqrt(NaN) = NaN</li>\n</ol>\n<p>然后，我们需要考虑一般情况：</p>\n<ol>\n<li>Sqrt(1.0) = 1.0</li>\n<li>Sqrt(4.0) = 2.0</li>\n<li>...</li>\n</ol>\n<p>注意：在一般情况中，我们对结果进行验证时，需要考虑小数点精确位数的问题。由于文章篇幅限制，这里不做额外的处理。</p>\n<p>有了思路以后，我们可以基于 Table Driven Test 实现测试用例：</p>\n<pre><code>func TestSqrt(t *testing.T) {\n  var shouldSuccess = []struct {\n    input    float64 // input\n    expected float64 // expected result\n  }{\n    {math.Inf(1), math.Inf(1)}, // positive infinity\n    {math.Inf(-1), math.NaN()}, // negative infinity\n    {-1.0, math.NaN()},\n    {0.0, 0.0},\n    {-0.0, -0.0},\n    {1.0, 1.0},\n    {4.0, 2.0},\n  }\n  for _, ts := range shouldSuccess {\n    if actual := Sqrt(t.input); actual != ts.expected {\n      t.Fatalf(\"Sqrt(%f) should be %v, but is:%v\\n\", ts.input, ts.expected, actual)\n    }\n  }\n}\n</code></pre>\n<h2>辅助函数 (test helper)</h2>\n<p>在写测试的过程中，我们可能遇到下面几个场景：</p>\n<ol>\n<li>待测试的功能需要一些前提条件，比如初始化数据库连接、打开文件、创建资源</li>\n<li>核心功能测试结束后，需要一些清理工作，比如关闭文件、销毁资源</li>\n<li>待测试的功能错误分类比较多，考虑到 table driven test ，写到一个测试函数里可读性比较差</li>\n</ol>\n<p>这时候，我们需要定义一些辅助函数，以协助核心功能的测试。下面我们以用户登录校验为例，来看如何使用辅助函数。\n我们要测试的函数是 login ，为了保证本次单元测试不会污染数据库，我们采取的流程是：</p>\n<ol>\n<li>初始化数据库连接（类似于 Junit 中的 @Before)</li>\n<li>创建一个用户 （类似于 Junit 中的 @Before ）</li>\n<li>测试 login</li>\n<li>删除该用户（类似于 Junit 中的 @After)</li>\n</ol>\n<p>确定了测试的逻辑以后，我们看下代码：</p>\n<pre><code>// file name: user_test.go\n// source code: https://github.com/oscarzhao/blogger-server/blob/master/controllers/user_test.go\n\n// package level initialization of database connections\nfunc init() {\n  // init database connections\n}\n\n// testCreateUser 创建一个临时用户（ test helper ）\n// 具体流程：\n// 1. mocks a http server\n// 2. send create user request to the server\nfunc testCreateUser(t *testing, userSpec map[string]string) (int, []byte) {\n  // mock a http server\n  router := denco.New()\n  router.Build([]denco.Record{\n    {\"/api/v1/users/:user_id\", &amp;route{}},\n  })\n\n  testURL := \"/api/v1/users/\" + userID\n  _, params, found := router.Lookup(testURL)\n  if !found {\n    t.Fatalf(\"fails to look up the route, url:%s\\n\", testURL)\n  }\n\n  handler := func(w http.ResponseWriter, r *http.Request) {\n    CreateUser(w, r, params)\n  }\n\n  marshaled, _ := json.Marshal(userSpec)\n  // create request\n  req, err := http.NewRequest(\"POST\", \"http://anything.com\", bytes.NewBuffer(marshaled))\n  if err != nil {\n    t.Fatalf(\"should create user success, but fails to send request, error:%s\\n\", err)\n  }\n\n  // mock ResponseWriter\n  w := httptest.NewRecorder()\n  // call create operation\n  handler(w, req)\n  return w.Code, w.Body.Bytes()\n}\n\n// testDeleteUser 根据 userID 删除一个用户（ test helper ）\nfunc testDeleteUser(t *testing.T, userID string) (int, []byte) {\n  ...\n}\n\n// TestVerifyLogin 创建用户、测试登录，然后删除该用户\n// 该函数由 go 语言的 test 框架调用\nfunc TestVerifyLogin(t *testing.T) {\n  userID := uuid.NewV4().String()\n  data := map[string]string{\n    \"username\": \"simple_yyxxzz\",\n    \"password\": \"simple_password\",\n    \"email\":    \"not@changed.com\",\n    \"phone\":    \"1234567890\",\n  }\n  statusCode, msg := testCreateUser(t, userID, data)\n  if statusCode &gt;= http.StatusBadRequest {\n    t.Fatalf(\"should succeeed, create user (%s), but fails, error:%s\\n\", userID, msg)\n  }\n  // 测试结束时，清理数据\n  defer func(userID string) {\n    statusCode, msg := testDeleteUser(t, userID)\n    if statusCode &gt;= http.StatusBadRequest {\n      t.Errorf(\"should delete user(%s) successfully, but fails, status code:%d, error:%s\\n\", userID, statusCode, msg)\n    }\n  }(userID)\n\n  // 测试登录功能\n  shouldSuccess := xxx\n  for _, ts := range shouldSuccess {\n    statusCode, msg = testVerifyPassword(t, ts)\n    if statusCode != http.StatusOK {\n      // if use fatal, user will not be cleaned up\n      t.Errorf(\"should verify with %v successfully, but failed, status code:%d, error:%s\\n\", ts, statusCode, msg)\n      return\n    }\n  }\n}\n</code></pre>\n<p>在测试代码中，我们推荐使用 t.Fatalf ， 而不是 t.Errorf ，一方面测试代码不需要做太多容错，另一方面增加了测试代码的可读性。</p>\n<h2>临时文件</h2>\n<p>如果待测试的功能模块涉及到文件操作，临时文件是一个不错的解决方案。 go 语言的 ioutil 包提供了 TempDir 和\nTempFile 方法，供我们使用。</p>\n<p>我们以 etcd 创建 wal 文件为例，来看一下 TempDir 的用法：</p>\n<pre><code>// github.com/coreos/etcd/wal/wal_test.go\n\nfunc TestNew(t *testing.T) {\n  p, err := ioutil.TempDir(os.TempDir(), \"waltest\")\n  if err != nil {\n    t.Fatal(err)\n  }\n  defer os.RemoveAll(p)  // 千万不要忘记删除目录\n\n  w, err := Create(p, []byte(\"somedata\"))\n  if err != nil {\n    t.Fatalf(\"err = %v, want nil\", err)\n  }\n  if g := path.Base(w.tail().Name()); g != walName(0, 0) {\n    t.Errorf(\"name = %+v, want %+v\", g, walName(0, 0))\n  }\n  defer w.Close()\n\n  // 将文件 waltest 中的数据读取到变量 gb []byte 中 \n  // ...\n\n  // 根据 \"somedata\" 生成数据，存储在变量 wb byte.Buffer 中\n  // ...\n\n  // 临时文件中的数据（ gb ）与 生成的数据（ wb ）进行对比\n  if !bytes.Equal(gd, wb.Bytes()) {\n    t.Errorf(\"data = %v, want %v\", gd, wb.Bytes())\n  }\n}\n</code></pre>\n<p>上面这段代码是从 etcd 中摘取出来的，源码查看 <a href=\"https://github.com/coreos/etcd/blob/2353cbca719f6661c8642d666dd8e16591f5ebb5/wal/wal_test.go\" rel=\"nofollow\" title=\"coreos/etcd\">coreos/etcd - Github</a>。\n需要注意的是，使用 <a href=\"https://golang.org/pkg/io/ioutil/#TempDir\" rel=\"nofollow\" title=\"TempDir\">TempDir</a> 和 <a href=\"https://golang.org/pkg/io/ioutil/#TempFile\" rel=\"nofollow\" title=\"TempFile\">TempFile</a> 创建文件以后，需要自己去删除。</p>\n<h2>关于 package</h2>\n<p>在写单元测试时，一般情况下，我们将功能代码和测试代码放到同一个目录下，仅以后缀 _test 进行区分。</p>\n<p>对于复杂的大型项目，功能依赖比较多时，通常在跟目录下再增加一个 test 文件夹，不同的测试\n放到不同的子目录下面，如下图所示：</p>\n<p><img alt=\"kubernetes/kubernetes\" src=\"http://oat5ddzns.bkt.clouddn.com/test%20package.png\"></p>\n<p>针对自己的项目进行测试时，可以结合这两种方式实现测试用例，提高代码的可读性和可维护性。</p>\n<h3>相关链接：</h3>\n<ol>\n<li><a href=\"https://golang.org/pkg/testing/\" rel=\"nofollow\" title=\"testing\">golang.org/pkg/testing</a></li>\n<li>[Testing Techniques]( <a href=\"https://talks.golang.org/2014/testing.slide\" rel=\"nofollow\">https://talks.golang.org/2014/testing.slide</a> “ testing techniques\")</li>\n<li><a href=\"https://github.com/golang/go/wiki/TableDrivenTests\" rel=\"nofollow\" title=\"table driven test\">Table Driven Test</a></li>\n<li><a href=\"https://github.com/golang/go/wiki/LearnTesting\" rel=\"nofollow\" title=\"learn testing\">Learn Testing</a></li>\n</ol>\n<p>扫码关注微信公众号“深入 Go 语言”</p>\n<p><img alt=\"在这里\" src=\"http://oat5ddzns.bkt.clouddn.com/qrcode_for_gh_9280bd217b46_430.jpg\" title=\"qrcode\"></p>\n</div></div>"], "reply": "1", "tittle": "Go 语言单元测试", "comment": ["已关注"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近<a href=\"https://v2mm.tech/\" rel=\"nofollow\">自由职业者社区</a>上新增了一个板块叫<a href=\"https://v2mm.tech/category/46/blog\" rel=\"nofollow\">“专栏”</a>，简单的说是一个与博客作者们合作产生内容的板块，博主们在自己的博客平台上写文章，可以一键发布到 V2MM 上来，并且在 V2MM 上拥有自己的独立板块，这个板块只有专栏博主们才有权限发布帖子，点击帖子标题就会直接跳转到博客原文页面， V2MM 上只显示一个摘要。</p>\n<p>我知道这里有很多人在坚持写博客，此前我发布过一个帖子<a href=\"https://www.v2ex.com/t/318148\" rel=\"nofollow\">2016 年了，有多少人还在写博客</a>， 还上过头条 :)</p>\n<p>所以有人感兴趣吗？</p>\n<p>具体介绍见我在网站上的介绍：<a href=\"https://v2mm.tech/topic/228/\" rel=\"nofollow\">与原创博客作者的合作设想——专栏计划</a></p>\n<p>专栏效果见这里：<a href=\"https://v2mm.tech/category/46/blog\" rel=\"nofollow\">“专栏”</a></p>\n</div></div>"], "reply": "2", "tittle": "一个有趣的论坛，寻求与博客作者们的合作", "comment": ["自己顶一个，有人感兴趣吗？", "帮顶了"]},
{"content": ["<div class=\"topic_content\">这是个东南亚淘宝平台，我看了下这个网站上的所有产品都是淘宝的，像这种网站申请淘宝开放平台 api ， 会被淘宝通过？？</div>"], "reply": "9", "tittle": " 大家说像这种国外的淘宝代购网站用了淘宝开放平台的 api 吗？", "comment": ["这还需要用 api 吗，爬下来发布到网站上，自动监测订单，付款后自动淘宝去买，多简单何必想那么复杂，而且利用淘宝客还能返利", "哇擦，牛，", "你就没有发现物品页面的地址里有个参数是淘宝的链接吗", "直接爬虫抓啊，要什么 api  ", "比如萌购的那个代购工具", " 🐂牛~  我是想如果用淘宝 api 比较省心，否则淘宝页面布局今天一改明天一改，这种代购网站不就被折腾死了。。。另外，你说的“付款后自动淘宝去买” 也是通过 js 模拟登陆淘宝下单？", " 恩 发现了。可是有链接不能代表什么吧？ api 接口数据也能拼接淘宝原 URL 的", "他这个物流怎么解决？淘宝可以直邮东南亚？还是说他们在中国有人代购，然后寄过去再由当地公司转寄给买家？", " 单独写个脚本监控订单，然后通过淘宝客下单\r", "现在好像淘宝并不是那么好申请 api 了吧\r", "\r", "至于物流感觉应该是平台上的都是支持发国外的商家\r", "阿里巴巴不是有投资 EzBuy 吗？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>需要写一个相关的课程，感兴趣的留言或者加 qq ： 1279802320</p>\n</div></div>"], "reply": "2", "tittle": "有没有对持续交付有心得体会的朋友？", "comment": ["《持续交付-发布可靠软件的系统方法》", " 能帮忙写写不？"]},
{"content": ["<div class=\"topic_content\">SpaceVim 是高度可定制的模块化 Vim 配置集合，适合开发各种语言，尤其是 Java c c++ python php 等常用语言，并且拥有非常优秀的 UI 界面，用户可以根据自己需求载入需要的模块。如果有兴趣，欢迎进群大家一起讨论。本群为非常专业的技术讨论群，请勿水！\r<br>Like spacemacs, but for vim.\r<br>欢迎加入 SpaceVim ，群号码： 121056965\r<br>点击链接加入群 [SpaceVim] ： <a target=\"_blank\" href=\"https://jq.qq.com/?_wv=1027&amp;k=43GVHWQ\" rel=\"nofollow\">https://jq.qq.com/?_wv=1027&amp;k=43GVHWQ</a></div>"], "reply": "1", "tittle": "SpaceVim 开发交流群，欢迎各位 vimmer!", "comment": ["真有信仰。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>还在担心以后豆瓣会根据相关法律法规政策不予显示吗？</p>\n<p>你先冲个 10 万。\n开个 800 到 1,000 台机器，全站抓取，\n把什么图片啊往那个对象存储一扔，\n把洗过的数据往数据库一丢，\n写个查询即可享受私人专属豆瓣。</p>\n<p>这么多数据不好好利用多浪费。\n比如对自己关注的妹子丢到 spark mlib 里做协同过滤，\n给妹子推推电影书籍什么的，\n做个社团聚类看看妹子有哪些圈子努力混进去。\n分分钟迎娶白富美。</p>\n<p>然后作为一个有社会责任感的人，\n你一定想帮助那些和我一样搓的人，\n在豆瓣上看到妹子都不知道怎么搭讪只会点赞的男孩纸。\n<strong>你就有有一个创（ pian ）业（ qian ）项目，</strong>\n<strong>就叫『了解你心目中的豆♂/♀神』</strong></p>\n<p>——只要 998</p>\n<ul>\n<li>查看 ta 的互动 top10 ，</li>\n<li>了解潜在竞争对手，</li>\n<li>支持输入你的 id 与 ta 做一次 match</li>\n<li>列出你们间的共同话题多多互动。</li>\n</ul>\n<p>只要 9,998 还可提供给你与你 match 程度最高的 10 个人，\n保证第一句话 ta 就觉得你是他的 soulmate 。</p>\n<p>你要说这个项目没人投打死我都不信。\n从一无所有，到迎娶白富美，\n创业成功当上 ceo 走上人生巅峰，\n往往很简单。</p>\n<p>另外上边说到的方法我真的从来没做过，\n宝宝只生产解决方案，不做具体业务。\n美国著名传销忽悠学大师安东尼∙罗宾曾经说过：\n这个世界上赚钱的行业很多，\n但是没有哪一个行业可以比得上帮助别人成功\n和帮助别人改变命运更加有价值、有意义。</p>\n<p>他说的很对所以我来帮助你们成功，\n其实成功很简单从充值青云开始。\n只要充值个 1000 元就能获取对象存储和大数据产品代金券冲 1000 送你 500 代金券 如果按照《女人的逻辑》来算的话，你花了 1000 省了 500 又送了你 500 等于没花钱[捂脸][捂脸]</p>\n</div></div>"], "reply": "18", "tittle": "想到一个创（ pian）业（ qian）项目，就叫『了解你心目中的豆♂/♀神』，大家看看如何", "comment": ["措不及防的广告……………孩子别太天真", "你好，我是大忽悠资本的投资总监逗你玩，我们对你这个项目非常有兴趣，希望你明晚到北京东直门南大街保利俱乐部详谈", " 总监你好，房间已经开好，请速来", " 就问你这个项目怎么样，满分 100 ，你给多少", "你好。我是大忽悠资本公司的 CEO 。听说我们投资总监对你这个项目很感兴趣。我过来看看。发现项目确实策划的不错。请你明天来西直门北大街保利俱乐部详谈。", "如果按照《女人的逻辑》来算的话，你花了 1000 省了 500 又送了你 500 等于没花钱。。。女人出来解释一下。。。", "相当于开个豆瓣的私服咯？", " \r", " \r", "不好好上班，干啥呢。\r", "\r", "楼主你好，我是大忽悠资本公司的 董事长 。听说我们 CEO 对你这个项目很感兴趣。我过来看看。发现项目确实策划的不错。请你今晚来西直门北大街保利俱乐部详谈。", "某女买了一件 1000 块的衣服，我质疑有点贵。\r", "\r", "她说：贵？我跟你说，这件衣服原价 2000 块，打了五折之后便宜一半，就等于我赚了 1000 块！虽然我花出去 1000 块，但同时我又赚回来了 1000 块，所以这件衣服相当于是白送，免费。你懂个屁！\r", "\r", "我被她的经济数学头脑震惊得久久说不出话来…… \r", "\r", "楼主你好！我是大忽悠亻专钅肖的王你卖批，我对你这个项目很感兴趣。请你今晚来西直门北大街明丽名媛俱乐部详谈。", "描述太罗嗦", "楼主你好，我是大忽悠资本公司的 CEO 。我对你这个项目很感兴趣。我过来看看。发现项目确实策划的不错。目前唯一的问题就是只差一个程序员了。", "请你今晚来西直门北大街明丽名媛俱乐部详谈", "你要说这个项目没人投打死我都不信。", "然后楼主被打死了", " 楼主活着呢，哼。", " 求优雅的代码描述。", "明明是广告贴。。", " 明明是创业项目"]},
{"content": "", "reply": "5", "tittle": "左侧菜单不刷新，点击菜单右侧页面刷新，不用 iframe，其他用什么方式可以实现呢？", "comment": ["div 直写数据", "AJAX\r", "PJAX\r", "VUE", "ajax", "spa", "非单独网页用 ajax 异步等\r", "如果是单独的网页： jquery  $.load\r", "另外组件化开发： Vue 等流行框架都可以"]},
{"content": ["<div class=\"topic_content\">其实问题很简单，如果遍历某网段下的 ip ，针对每个 ip 尽量获取 ip 能反馈的信息，\r<br>然后把每种信息作为一个特征，拼接这些特征就可以作为这个 ip （就是背后的 server ）的特征 fingerprint 啦。\r<br>我现在做的是扫这些 server 是否开了常用端口，比如 21 ， 22 ， 23 端口。\r<br>比如如果开了的话， 23 端口会有 header 信息反馈给我，\r<br>类似： telnet atdrug drugtransport com AIX Version C Copyrights by IBM and by others login 这样的。\r<br>我的问题是我想知道 server 还能多给我反馈点信息吗？\r<br>比如 browser 访问我网站的话我是可以知道这个 browser 的很多信息的，\r<br>比如 <a target=\"_blank\" href=\"https://amiunique.org\" rel=\"nofollow\">https://amiunique.org</a> ，这个就很清晰。\r<br>问题就是一个 ip 背后的 server ，我如何才能拿到更多的信息？\r<br>希望大家能给点中肯的建议，十分感谢。\r<br>预祝新年快乐！</div>"], "reply": "8", "tittle": "如何给一个 server 找到一个特异性强的 fingerprint？", "comment": ["放狗一搜\r", "\r", "基本不可能，大型网站服务器分布式基本上都是尽可能消除差异，一批机器从 CPU 到软件，甚至负载基本都是相同的。从外部要怎么区分？", "防火墙、安全网关等设备可能会有‘敏感信息保护’功能，这个功能就是将服务器回复的操作系统版本信息、软件版本等敏感信息改成很用户自定义的字符串。", "呵呵，浏览器不主动发 UA 你能知道？", " 这种情况的话就更简单了，将这些 ip 聚类成一个簇就是了。我现在做的事 track server ，采集了 18 个月（每月 4 次）的 ipv4 信息，单单用 port21 22 23 的话 95.1%的 server ip 都没有发生巨大变化，针对的情况是不通过 ip 去确定 server 的情况。比如 @", " 那个链接的第二个链接里说的第一句话，用 nc 去跑 80banner ，就是这个思路。只不过我跑的多一点。所以是完全可以获得很多信息的。十分感谢关注。", " 的确，在搜集到的信息中这种情况很常见。不过恰恰是这种功能的出现反而让我更容易分辨出这个 server 了，因为人工修改的自定义的字符串往往具有很强的特异性，更容易识别出来，也就更容易分辨。十分感谢关注。", " 首先十分感谢关注， nmap 由于扫一遍全网太慢了，所以我选用了 zmap 。你提到的这两种技术我都在用，在此只是想咨询下大家一个 server 除了 port 开了然后 port 还是 default 的情况下，的确可以指哪打哪，就是要 banner 有 banner 。\r", "我就需要一种几乎所有 server 都有的信息，比如 browser 的 http agent ，至少可以保证每个 browser 都有。但不能保证每个 server 都开 23 对吧？", " 能。早在 2010 年 Peter Eckersley 的研究中就已经实现了。而且在 2016 年 S&P 的一篇论文中 Pierre Laperdrix 的团队利用 Canvas 的特性进一步优化了效果。仍然十分感谢您的关注。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>在 youtube 上发现了一个视频，支付宝 ar 红包被破了。。。\n和在网上看到的 P 图的方法不一样。。\n有哪位大神知道如何实现的？？\n地址： <a href=\"https://youtu.be/mIuEPcXti_c\" rel=\"nofollow\">https://youtu.be/mIuEPcXti_c</a></p>\n</div></div>"], "reply": "9", "tittle": "支付宝 ar 红包 另类破解", "comment": ["网易什么鬼", " 好像是打码的样子。。", "刚开始还以为是网易的 logo 。哈哈。。", "插件无疑。安卓版。\r", "原理猜测：\r", "//人工选择一个红包\r", "if(进入红包界面 == true){\r", "   点击显示提示();\r", "   截图();\r", "   处理图片黑线();\r", "   处理完的图片数据交给摄像头();\r", "}", " 分析的很有道理。。。。", " 我周末就在搞这东西，思路和你基本一样，只不过不用截图。\r", "\r", "通过 xposed 把黑线图片获取到，处理黑线，处理完的数据自动映射到摄像头。\r", "\r", "\r", "然而并没有什么卵用，图片处理效果太差了。", " 佩服大神。。之前听说 ps 大法能搞定。现在连 PS 都搞不定了吧？", "刚开始可以用 PS 大法，后面支付表就用随机黑条了", "现在每天只能获取 10 个红包"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>以前一直都没有注意。今天设计师告诉我，那其实是个钻戒。</p>\n<p>因为钻戒 = &gt;承诺 =&gt; commitment =&gt; commit</p>\n<p>我想我应该不是最后一个知道的。。。</p>\n<p>如图\n<a href=\"http://static.oschina.net/uploads/img/201602/24144547_QWrh.png\" rel=\"nofollow\">SourceTree</a></p>\n</div></div>"], "reply": "7", "tittle": "今天才知道原来 SourceTree 的提交的图标是个钻戒", "comment": ["你们设计师想多了\r", " SourceTree 各个版本的图标不一样的，你看一下我帖子里发的那个图。", " 我最的最新版，你去官网首页看有一张界面图，也是一个+号，搞设计的就是矫情 ", " 之前的版本的确是这样的 ", "我的确实是个钻戒", "1.6.21 的还是拟物风格的图标呢", "2.3 版本是加号"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>今天，张小龙在微信公开课 PRO 的会场上向公众透露了更多有关“小程序”的信息，将这款产品的神秘面纱又揭开了一角。</p>\n<p>由于深耕移动互联网多年，专注研究 HTML5 技术的发展演变、 App 开发技术的迭代、以及不同移动终端背后的业务逻辑和使用场景， APICloud CEO 刘鑫一直非常关注小程序的动态，他从几个月前就开始在各类活动中，为创业者阐述他对小程序的预测和解读。最有意思的一点是，他一直以来的预测结果与今天张小龙不谋而合。</p>\n<p>非常巧合，刘鑫在昨晚的一场活动中，再次分享了他对小程序的见解。以下是演讲内容（节选）</p>\n<p><a href=\"https://v.qq.com/x/page/k0360hp3v0o.html\" rel=\"nofollow\">刘鑫演讲节选</a></p>\n<p>不便观看视频的用户，也可阅读文字</p>\n<h3><strong>1.不要妄想微信的流量红利</strong></h3>\n<p>现如今，很多创业者正在考虑将小程序作为自身业务的移动端载体，因为他们认为小程序可以获得微信沉淀下来的巨大流量，从而取得第一批“流量红利”。然而刘鑫指出，创业者能不能从小程序中获得微信的流量，这本身就是一个问题。</p>\n<p>要解答这个问题，首先要了解什么是流量红利。流量红利指的是增长出的流量被获得了，那么流量增长有两种方式，一是使用人次增加，二是使用时长增长。从今天微信官方公布的 2016 数据报告来看，微信日登录用户已经达到了 7 亿 6 千 8 百万人次， 50%的用户每天使用微信的时长是 90 分钟。由此可见，微信 App 已经拥有一个庞大的流量，继续扩大是一件几乎不可能的事。</p>\n<p>因此，流量红利根本不存在，更不用说通过小程序去获得了。</p>\n<p><img alt=\"aec612e.jpg\" src=\"https://ooo.0o0.ooo/2016/12/29/5864c038aed05.jpg\"></p>\n<p>张小龙也讲到流量红利这件事，他解释：很多人看到微信开始内测小程序，大家说这是一个新的机会，我们应该第一波上去，去获得一些流量上的红利，但是那就非常遗憾，小程序在微信里是没有入口的。</p>\n<h3><strong>2.小程序的核心优势在于“连接”</strong></h3>\n<p>刘鑫提出，小程序的核心优势不是流量红利，而是连接优势。</p>\n<p><img alt=\"微信截图_20161228180205.png\" src=\"https://ooo.0o0.ooo/2016/12/29/5864c04dc7f78.png\"></p>\n<p>他是这样解释的：这个连接的优势更多体现在线上与线下之间的连接，例如在一家餐厅消费，从点菜到付款到评价都可以在线上完成，用户只需扫一扫每一张桌子上的二维码。小程序将线下的资源进行整合，优化了 O2O 模式的用户体验，最终成为 O2O 服务的入口。利用好这种连接的优势，创业者可以获得更多的创业和创新的机会。</p>\n<p>我们从张小龙的演讲内容中听到他用了同样餐厅的例子去阐述小程序的核心价值：我开始花了很大篇幅解释什么是用完即走，对于周边要完成的任务来说我们需要的是用完即走，比如我们到一个餐馆，我们可能想排队或者说点一下菜，我们并不需要去下载这个餐馆的应用程序，我们只需要在餐馆扫一下它的二维码，然后就启动了这个餐馆的小程序，我们可以立即在小程序里排队或者点餐。</p>\n<h3><strong>3.小程序与 App 并不冲突，只有支付宝中枪</strong></h3>\n<p>在小程序第一次被透露出来时，业界就有很多声音说小程序的推出就是 App 的死期。</p>\n<p>刘鑫反复强调过许多次：小程序与 App 并不冲突。首先，大部分企业不可能因为小程序的推出而放弃现有的、正在运营的 App ，因此小程序不会和已有 App 冲突；其次，小程序是一种有限的应用开发，它并不能满足企业所有的功能需求。当企业的自身业务需求庞大而繁杂时，他们最终还是需要一个 App 。</p>\n<p>但是刘鑫也指出，小程序会对支付宝 App 产生巨大的威胁。他讲到：小程序的核心是服务+支付的理念，小程序势必将付款的流程集中到微信平台之中。到时，支付宝将面临严峻的考验。</p>\n<h3><strong>4.小程序成为移动开发技术的转折点</strong></h3>\n<p>对于一家从事移动应用开发技术的公司来讲，小程序的推出都是欣喜的，因为它将成为移动开发技术的转折点，更是肯定了 APICloud 多年来对于混合式开发技术的推崇。</p>\n<p>在原生开发成本高， HTML5 开发体验差的情况下，小程序采用了同 APICloud 相同的开发模式，开发者使用网页语言进行程序开发，最终呈现出的是高体验、高流畅性的类似原生开发的移动应用。</p>\n<p>从成立之初， APICloud 平台就是为开发者提供了“使用 HTML5 开发高性能 iOS 和 Android 原生应用”的技术。这与微信提出“小程序”的“ Native+Web ”理念不谋而合。目前平台在进一步碎片化，移动互联网再也没有像百度搜索之于 PC 的流量巨头，更多的是两大操作系统和十几个头部应用进行流量分发，这一现象更使得跨平台的技术提供方的价值明显加强。对于 APICloud 来说，将“小程序”看做 iOS 、 Android 以外的第三个平台加以兼容，一套代码同时生成  iOS 、 Android 、 Wechat 。</p>\n<p>后移动互联网时代已经来临，越来越难能产生出新的头部应用，而物联网的发展速度正在加快。刘鑫对于小程序的“神预测”，代表着 APICloud 不断努力、不断印证的方向就是未来互联网发展、演变的道路。</p>\n</div></div>"], "reply": "7", "tittle": "张小龙首次解读小程序，遭遇“神预测”？", "comment": ["还没养肥   当然不会那么早杀....养肥了再杀", "看起来就是枪口指向支付宝。理念是挺不错的。不过支付宝照抄一个好像也不是什么难事吧……", "二维码才是全世界，阿里巴巴什么都弱爆了", "这帖子完全没逻辑可言……", "以后 bat 改称 tab 比较妥当", "才发现再说 APICLUD", " 同感，感觉有一些是强行联系在一起，就是一篇软文。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>service worker 是谷歌 chrome 团队近年提出的一个技术方案，本意为渐进式网络应用(progressive web app, PWA)提供离线支持，使得网络应用可以离线运行。一旦启用 service worker ，则它可以根据开发者的缓存配置为用户缓存网站静态与动态资源，并截获用户的所有网络请求，并根据缓存配置来决定是从缓存还是网络获取相应资源，从而可以提高网页的加载速度。测试结果表明，一般能实现 4-5 倍的加速，最好的时候能够实现 10 倍的加速。使用 service worker 实现网站加速的优势有：</p>\n<ul>\n<li>可以很轻易地实现静态与动态资源缓存，决定缓存空间的大小与缓存时间期限，可定制性高；</li>\n<li>不需要服务端支持，只需要在本地生成 service worker 文件并上传就可以使用，特别适用于没有服务端的静态博客或网站；</li>\n<li>配合 sw-precache ，只需要做好缓存配置， sw-precache 可以自动生成 service woker 文件，不需要自己实现缓存逻辑；</li>\n<li>可以灵活为动态与静态资源，以及不同网址提供不同的缓存机制，并实现资源的动态更新，同样不需要自己编写代码</li>\n</ul>\n<p>劣势包括：</p>\n<ul>\n<li>网站必须启用 HTTPS:这个不太算劣势，毕竟是大势所趋，但在目前可能会限制其适用范围；</li>\n<li>不是所有浏览器都支持：目前 chrome, firefox,opera 以及国内的各种双核浏览器都支持，但是 safari 不支持</li>\n<li>不能解决首次访问缓慢的问题，因为还没有缓存。</li>\n</ul>\n<p>相关文章：</p>\n<ul>\n<li>关于使用 service worker+sw-precache 实现网站加速的方案： <a href=\"https://metaquant.org/service%20worker-web%20performance-cache.html\" rel=\"nofollow\">https://metaquant.org/service%20worker-web%20performance-cache.html</a></li>\n<li>关于 service worker 的工作原理： <a href=\"https://metaquant.org/pwayu-service-workergong-zuo-yuan-li-tan-xi.html\" rel=\"nofollow\">https://metaquant.org/pwayu-service-workergong-zuo-yuan-li-tan-xi.html</a></li>\n<li>关于 sw-precache 的使用指南： <a href=\"https://metaquant.org/sw-precache.html\" rel=\"nofollow\">https://metaquant.org/sw-precache.html</a></li>\n<li>关于 service worker 的导论性介绍： <a href=\"https://developers.google.com/web/fundamentals/getting-started/primers/service-workers?hl=zh-cn\" rel=\"nofollow\">https://developers.google.com/web/fundamentals/getting-started/primers/service-workers?hl=zh-cn</a></li>\n</ul>\n</div></div>"], "reply": "7", "tittle": "使用 service worker+sw-precache 实现网站加速", "comment": ["之前接触过 service worker ，但没想过可以用来网站加速，很新颖的思路", "wordpress 可以用吗？", " 感谢支持", " 虽然没有试过，但应该可以，没有什么本质的区别", "不是有 Page Speed 了吗", "通过本地缓存加快网页加载？感觉和 ququblog 的思路类似，虽然那个是在后端实现的", " 的确是类似的方案"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这是一篇走心的总结，从我这一年断断续续纪录的心情碎片整理而出。工作两年多，今年困于瓶颈，深感焦虑。希望有前辈可以给出意见。</p>\n<p>文章有点长，链接如下：\n<a href=\"http://masutangu.com/2016/12/review/\" rel=\"nofollow\">《我的 2016 》</a></p>\n<p>预祝大家新年快乐～！</p>\n</div></div>"], "reply": "13", "tittle": "又到了一年一度写年终总结的时候了...写写我的 2016", "comment": ["少年你还年轻，还有很长的路要走\r", "许多事情都不要多想，照你自己的意思去做就行了\r", "毕竟你还有这可以创作一切可能的资本，追逐梦想的理由\r", "老了以后，你想到的将只有现实", "共勉.", "我的 2016 : 汪汪汪      我的 2017:汪汪、汪汪、汪汪", "加油", "加油！", "跟我焦虑差不多，目前的状态是能快速上手一些东西，但是能拿出来说的东西又啥都没有。同工作两年半。唉", " 时间过得太快了，让我很惆怅。。", "加油! 加个好友, 我也在深圳", "加油！ 想想我也已经毕业两年了， 一直是随波逐流， 看了楼主的博客比较惭愧 。。", " 一起加油~握爪！", " 说实话，能跟到好的项目 很重要。。选择比努力更重要", " 正在撸你的 elric 代码呢， 可以学习一下。", " 哈哈 写的不好欢迎吐槽！"]},
{"content": ["<div class=\"topic_content\">因为要用手机调试网页，所以经常把 url 生成二维码再手机上扫描。\r<br>\r<br>之前是复制，打开百度，搜索二维码生成， 找到工具粘贴，扫码，麻烦\r<br>\r<br>后来装了一个 chrome 插件，可以把 url 转换成二维码，但是不是很好用。\r<br>\r<br>于是乎只好撸一个了。。。 V 站之前有个用 python 写的（ <a target=\"_blank\" href=\"https://www.v2ex.com/t/246735\" rel=\"nofollow\">https://www.v2ex.com/t/246735</a> ），我一看还得 pip 装东西。作罢。。\r<br>\r<br>\r<br>用 PHP 撸了一个， 本地直接生成，速度刚刚的！  回车后直接就可以扫码了， 如果 qr 后面不跟参数，默认是上一次的生成结果。\r<br>\r<br><a target=\"_blank\" href=\"http://i.imgur.com/IM94LxC.png\"><img src=\"http://i.imgur.com/IM94LxC.png\" border=\"0\" class=\"embedded_image\"></a><br>\r<br><a target=\"_blank\" href=\"http://i.imgur.com/aVGjMIB.png\"><img src=\"http://i.imgur.com/aVGjMIB.png\" border=\"0\" class=\"embedded_image\"></a><br>\r<br>有需要的可以试试： <a target=\"_blank\" href=\"https://github.com/wensonsmith/QRcodeCreator\" rel=\"nofollow\">https://github.com/wensonsmith/QRcodeCreator</a>\r<br>\r<br>\r<br>主要的参考这两个库很好用！\r<br>1. [t0k4rt/phpqrcode]( <a target=\"_blank\" href=\"https://github.com/t0k4rt/phpqrcode\" rel=\"nofollow\">https://github.com/t0k4rt/phpqrcode</a>)\r<br>2. [joetannenbaum/alfred-workflow]( <a target=\"_blank\" href=\"https://github.com/joetannenbaum/alfred-workflow\" rel=\"nofollow\">https://github.com/joetannenbaum/alfred-workflow</a>)</div>"], "reply": "21", "tittle": "撸了一个生成二维码的 Alfred Workflow", "comment": ["感谢！比以前那些用 Google API 的要方便很多。", "已经 start 已经安装 很好用", "6666~", "网页地址的话 chrome 插件不是更快么，也是 v2 某位写的\r", "\r", "\r", "\r", "（主要是我没 powerpack-。-）", "不错，我用 safari", " \r", "\r", "浏览器再好用，步骤也没有 workflow 快。。。", "firefox 不是在地址栏的最后就有一个吗？", "  \r", " \r", " \r", "\r", "我装了一个 chrome 插件，现在如果想生成 URL 以外的文本就不是那么方便了。", "我给一个非常简介的 js 方案，放到书签就能用 XD\r", "```\r", "javascript:window.open('http://api.qrserver.com/v1/create-qr-code/?data='+window.location)\r", "```", " 我贴那个可以，默认生成本页的  按下 enter 可以 手工填入内容", "有没有办法把手机上的网页发给电脑端", "  handoff 或者 airDrop :)", "已下载 很好用 感谢！", "如果不输入网址直接回车，能直接读取当前 chrome 或 safari 窗口的网址就更方便了。\r", "应该是可以实现的， Open in Chrome 这个 workflow 就可以读取到 safari 或 chrome 当前网址然后在 chrome 或 safari 中打开。\r", "nice", "推荐 lz 放到 ", " 上，之后可以自动更新呀~", "Cool!!!!!", "收下，感谢~", " 我看看他的代码，然后下个版本可以尝试一下\r", " 你说的这个网站很不错呀~~", "如何实现生成的二维码有时间限制呢,比方说微信 PC 端登陆,如果手机一直不确认,二维码就失效了;\r", "是通过生成的时间,设定失效的时间,扫码的时候传入当前时间,进行比对,如果大了就失效么?", "生成的二维码是一个图片，能自动删除吗？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>计算亲戚关系，<strong>我的 XXX 的 XXX  [的 XXX ] 是 YYY</strong>。如，我的爸爸的妈妈是奶奶。</p>\n<p>我的想法是这样：\nXXX 限定在哥哥、姐姐、弟弟、妹妹、爸爸、妈妈、丈夫、妻子、儿子、女儿。\nYYY 是最后计算的结果，比如姑姑、姑奶奶等。</p>\n<p>目前我建立的模型是这样:</p>\n<pre><code>class Person {\n    string current_title;\t\t//当前称呼\n    Person compare;\t\t\t//用于比较大小的对象，比如爸爸的弟弟可能是“伯父”、“叔公”\n    //下面十个分别代表哥哥、弟弟、姐姐、妹妹、爸爸、妈妈、丈夫、妻子、儿子、女儿\n    string elder_brother;\n    string litte_brother;\n    string elder_sister;\n    string litte_sister;\n    string father;\n    string mother;\n    string husband;\n    string wife;\n    string son;\n    string daughter;\n}\n</code></pre>\n<p>根据当前的<code>current_title</code>不同，后边十个属性分别取不同的称呼。</p>\n<p>这样的模型，可以用，但是总感觉这种方法很傻。</p>\n<p>求教，这个问题有没有优雅的解决思路。</p>\n</div></div>"], "reply": "1", "tittle": "计算亲戚关系，有没有优雅的思路", "comment": ["有个想法，但是还是很麻烦的样子。\r", "假设有 哥哥、弟弟、姐姐、妹妹、爸爸、妈妈、丈夫、妻子、儿子、女儿 这些实例对象，两两对象之间的关系是明确的，然后用一个指针指向最终的对象，比如 我哥哥的姐姐的妈妈的女儿 这样，最终指针指向姐姐，然后判断姐姐和'我'的关系。"]},
{"content": ["<div class=\"topic_content\">现在无数人鼓吹知识分享，内容变现。比较知名的如“得到”，知乎 Live 等等。不可否认他们确实赚到了钱。看的很眼红啊。\r<br>\r<br>从他们提供的内容来看，内容越浅显易懂，传播的越广。尤其是那些教你怎么学习、怎么培养习惯的最受欢迎，根本不需要多么专业的知识。这就是套路。如果有几十万听众，即使只收 1 块钱，收入也很可观了。\r<br>\r<br>对于这种抢钱的行为，我们码农要怎么做才不会错过呢？\r<br>\r<br>我先抛砖引玉，有几步可以走：\r<br>1 、克服害羞的心理，练练当众讲话的本事吧；\r<br>2 、多在围脖、知乎混个脸熟，跟热点话题多凑凑，把自己包装成一个网红；\r<br>3 、没事出个书，或者搞个电台，读读故事会也行吧；\r<br>4 、把自己的经历搞的丰富点，尽量往励志的方向包装，这样出去说好看点，比较有正能量；\r<br>\r<br>楼下怎么看</div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>我佩服李笑来创富的能力，也支持他把知识变现做得这么好，给我们指明了一条努力就可能实现财务自由的道路：</p>\n<blockquote>\n<p>努力让自己变的更有价值，并卖出好价钱。</p>\n</blockquote>\n<p>即便我们明确知道这一点，99%的人还是停留在思想上，只有1%落实到行动上。这也是为什么大部分人庸庸碌碌一生。只有少数人活得非常精彩的原因。</p>\n<p>钢铁是怎样炼成的里面的那段话，虽然都被大家说烂了，还是觉得非常励志。</p>\n<blockquote>\n<p>人最宝贵的是生命。生命每个人只有一次。人的一生应当这样度过：\n当回忆往事的时候，他不会因为虚度年华而悔恨，也不因为碌碌无为而羞愧。</p>\n</blockquote>\n<p>不管学到的知识能不能变现，只要我们努力做一个行动派，不断的充实自己，并坚持下去，离成功也就不远了。</p>\n</div></div>"], "reply": "95", "tittle": "知识变现的套路", "comment": ["用户眼睛是雪亮的，不是任何人用套路就能把知识卖出去的，得有干货", "想到就去做\r", "当然\r", "谁也不知道你能不能成功\r", "自己斟酌呗", " 从众心理也很重要，哪人多就去哪，营销的成分也比较大吧", " 关键现在大多数群众是愚蠢的", "得到 网址是？", " 别把用户当傻子，我参加过 8 场知乎 live ， 9.9 到 19.9 不等，我付费的判断标准是主播过去的知乎回答，确实有干货和独特见解才能吸引我，这个作假太难了", "好一个“雪亮”啊！咪蒙一个月多少收入来着，谁来科普一下。", "互联网思维：借", "  你有这个想法，做啥都赚不到钱", "正在往这个方向走", "大多数为 live 付钱的用户并不愚蠢", " 也不是要作假，我们就是研究下怎么快速包装自己(该学的真本事还是要学)，再学学人家的营销手段，实现创富的目的。每个人都是有可取之处的，就要看怎么把优点放大", "我觉得你总结的已经很到位了。\r", "人的精力是有限的，擅长的领域也是有限的，所以还是要挑个专攻的方向去做。", "  不是你有知识就可以拿出来卖，你的知识不也是从别人那学来的么，能不能卖出去要看你对其做了多大的增值，不能简单当搬运工，除非你的知识不是可以通过公共渠道获得的。", " 有道理", " 你是你，群众是群众。你参加 8 场 live 每次都精心挑选， V2EX 的大多数用户能做到精心挑选 live ，但不一定所有人都做到。\r", "\r", "有很多 3 本、专科院校的计算机学生有学习的想法，但是不知道方向，不懂得选择，只能凭靠“名气”等外在来判断（并无黑三本，我也是垃圾学校毕业的）。\r", "\r", "再给你举一个简单的例子，在中国，用心做 3A 游戏大作赚不到钱，相反，做垃圾页游的都上市了。你还相信用户眼睛是“雪亮”的？", "炫耀不是美德，炫耀知识通常被称作“一瓶子不满 半瓶子晃” 。大致如此 \r", "\r", "赚傻子钱的都不是什么好东西", " 用户眼睛不是血亮的，可以说绝大多数用户眼睛跟瞎了差不多，典型的就是微信公众号和新浪大 V ，一边赚钱一边做着盗抄造谣的勾当，有的偶尔再来个反 D 支持绿绿什么的，简直是原创者的灾难", "我看到一个前端面试的 live ， 1200 多人参加， 30 万...", "当年有媒体报道某老师帮学生补课，效果很好，收钱很多，微博上一堆冷嘲热讽。\r", "靠卖自己的时间、经验、知识去赚钱非常正常，也很体面，为什么总有人看不起别人体体面面地挣钱？任何领域一定会有浑水摸鱼的人，那就要靠你自己去识别了。不是只有「干货」才能卖钱，看看别人经历的世界，别人的总结，就算不能帮你增长能力帮你挣钱，长长见识也很好。如果里面的某一点能在以后被自己实际用到，那就很赚了。\r", "别觉得大 V 们都是忽悠人，群众们不是都比你蠢看不出来。「闷声大发财」的那群人才懒得理你。", " \r", " \r", "你们说的都没啥问题，楼主这个帖子的问题在于，认为目前的「知识变现」都是抢钱，「怎么学习、怎么培养习惯」不应该开课收钱。\r", "类似的话大家都不记得了？「写个网站还收我钱？」「你学设计的帮我做个 logo 还要钱？」", "所以咯，骗子和傻子加起来占人类的 99.9999999999%。", " 这完全不是一个话题吧", " 喷点不是几十万在线么，大家都知道这是怎么优化出来的数据", " \r", "你用手段骗人看个文章,点个赞什么的,当然没问题,但你让人掏个钱试试,都是人精\r", "\r", "\r", " \r", "垃圾页游是用你的价值观判断的,所谓大作就是把用户当傻子,以为画面漂亮,效果震撼,技术先进用户就应该为此买单,事实上用户要的根本不是这些. 像魔兽世界这种各方面都出色的大作,用户亏待他了吗? 真正赚钱的游戏,无论端游还是页游是把用户当上帝的,挖空心思去设计满足用户需求的产品. 网游是否是垃圾判断标准就是有没有赚到钱.", "不是你这个主题，我还不知道会有人去花钱买 “尤其是那些教你怎么学习、怎么培养习惯的最受欢迎”  这些问题的答案。。。。。。。。。。\r", "\r", "  google 一下不就好了？", " 就是少个试听机制么。。又不能像 steam 一样退货。。少评价机制吧", "得到 App 上，同人于野、李笑来、和菜头 写了多少年博客了？积累了多少「粉丝」？\r", "\r", "我觉得，叫「粉丝经济」更恰当。\r", "\r", "明星可以收入很高，写字的就不可以收入稍微高点？\r", "\r", "还记得当年 韩寒办的《独唱团》吗？我觉得 得到 App ，某种程度上像《独唱团》。", " 你说是贺师俊的那个么  我记得当时价格是 64 来着的  不知道现在怎么变成 255 了，大多数人应该都是那时候参加的。", " 国内外的客观差异不正视？\r", "\r", "gta5 全球销量第一（主机端＋ pc 端）你说 gta 是把用户当傻子吗？反观国内几人知道 gta5 ，又有几人买了？", " gta 当然把用户当傻子了,决定产品质量不光是产品本身,还有商业模式和销售渠道. 首先用户不是傻子,但用户也不是好人啊, 这游戏设计就是单机游戏,单机游戏用户就会盗版啊。第二没人知道说明宣传和运营没投入啊，自己那么自大，觉得大家都欠他的，只要我发布了，你们都应该屁颠屁颠的过来交钱。粉丝也是需要经营的，真诚对待粉丝，才会有更多铁粉交钱。所以你说从用户身上赚钱多难啊，哪是你糊弄一下用户就会来的，差一点都不行", "别人是只是变现？\r", "\r", "那是名气变现。", "出书，就是变现的套路", "这是名气变现，不是知识变现", " 只能说你的三观在我看来太奇葩，最好互 block", "最扯淡的就是 live ，什么 xxxx 的前世今生， xxxx 从入门到精通， xxxx 小时教你 xxxx 。。。", "先出名。出了名啥都好办", "支持楼主的市场行为。\r", "对了，别忘记要明码标价。", "圈子里没影响力谁来听你 live ？", "只看到知识变现，没看到之前 N 年颗粒无收，李笑来、战隼之前积累十几年的经验，哪怕彭小六也是积累两三年才能从容变现", " 咪蒙真的是满身戾气，符合现在大多数人的情况", "正确变现姿势不是 “用知识” 么？而不是 “讲知识” 。\r", "（人情谋智类）艰苦上爬的 ZF 官员、公司高管们\r", "（科学理工类）工程师、科学家们\r", "都在变现啊。", "我也一直在想怎么把知识和好玩的想法输出出来，比较喜欢 podcast 的形式，要不要一起？ ", "  GTA 压根就没在中国发布，连简体中文版都没有，就没把中国玩家放眼里，这样在中国不赚钱，还是国人的不对了？ 这道理要是奇葩，怎样才算正常呢，想 block 就 block 吧，这是你的权利", "找到工作，好好工作，不就是知识变现", "你说的是知乎那些扯淡的 Live 吧，哈哈", "那冯大辉呢？", " 等我先出名了再说：)", "通过阅读黑客技术，把各大银行都黑过一篇。将美帝的银行的资金 转移到国内银行。妥妥的。", "李笑来在知乎上的 live ，赚了 1 千多万，同学们，什么概念！！", " 李笑来搞比特币赚的不止千万", " 醒醒啊，亲，你醒醒啊！", " 斯科特-杨 的那个 live 我觉得挺好的，能学到一些学习方法，或者说开拓思维。他在 live 里讲的内容他博客中都有， Google 也能搜到，但听他说和看书的感觉还是很不一样的。", " 四舍五入一个亿", "> (Customers) They're like sharks, sharks are too stupid to fool, you can't wave a red flag and fool it, it's like meat or no meat. 用户就像鲨鱼，鲨鱼太笨了——乃至于你根本忽悠不了它，你就不能对着它挥舞红布（做斗牛士的动作），对鲨鱼来说，只有有肉吃和没肉吃的区别……", " 哈哈，换做王思聪评论王菲天价演唱会的话：“谁买谁傻逼”，道理都是一样的。", " 老师补课非常容易变质，要是补课的不是自己的学生无所谓。", "知乎很多高赞答案很像是从国外翻译来的文章", " GTA 国区销量全球第二，这个例子不恰当", "首先，对于李笑来，我是路人一个，但是在 v 站貌似见到超多“讽刺”李笑来的。\r", "\r", "为什么别人用自己的知识和经验赚了钱就说人家是骗子？而那些愿意为别人的服务付费的人，什么时候也成傻子？\r", "\r", "这种付费的服务模式，其实就是价值交换，交换双方觉得值就行。就像在得到 App 上面，我就觉得 吴伯凡 的专栏很棒，之前一直从网易云音乐的 东吴相对论 听过来，个人觉得对于当时年轻的我来说，实在收获太多，然后我就为这个专栏付费了，咋地？！我就是傻子了？\r", "\r", "**搞笑！** \r", "\r", "\r", "> “你看，人家赚好多钱！”\r", "> \"我把我的经验分享给你，但你需要支付 99 块....\"\r", "> \"切！骗子一个。\"\r", "\r", "这逻辑，也难怪了。\r", "\r", "东吴相对论： ", "做爱做的事情", "感觉罗胖变味儿了。。越来越反感了", "李笑来最近搞的那个“一块听听”，我觉得有戏，可以学习一下，甚至他在里面也会讲自己知识变现的套路", "小伙子很有想法啊，和我学做菜吧", "这应该属于粉丝经济的一种吧。首先你要培养自己的名气", "周瑜打黄盖，又不犯法，“多想想怎么赚傻哔的钱”", "不过首先得有时间", "知识从来是自己学来充实自己的，而不是变现用的。", "你真的能搞定几十万用户给你付 1 块钱 也就几十万 还不如用来创业 或者提高自己进一些收益高的公司呢", "这想法 666 啊，不错，小伙子，我看好你！", "live 我参加过一次就决定再也不参加了。没意思，浪费钱。前面有人说得好。你觉得你是为了学习知识长见识付费的，其实你是为了他的名气、他所代表的情怀等等等等付费的。简洁点说就是粉丝经济。分答这种也类似。", "当你觉得一件事情简单的时候,就直接去做,就可以最快速度获取答案.  越浅确实越容易传播,但是为什么是他们呢?  :)", " 现在看到借就想到肉肠", "说到这个我就想起现在如火如荼的 IT 培训机构，各种速成班短短一个月就几万块钱学费，学的其实也就是那些慕课网看视频都能学到的知识，唉，这类事情不知道该怎么说。。。", "这个社会么 笑贫不笑娼，不包装自己不炒作自己确实很难成功，特指普通人", " 好多人买了 GTA 啊。 PC 全球第二多就是中国了", "不瞒你说, 钢铁是怎样炼成的 那段话, 我从小就理解成每个人话到最后都是要 \"虚度年华\", 都是要 \"碌碌无为\" 的. 应该学会原谅自己, 不要感到悔恨", " 你强，似乎也可以这么理解", "……歌手现在都没法靠卖唱片变现了哦。开开演唱会还是可以的\r", "而且音乐是一种娱乐性纯消费", " 充实自己的目的是？仅仅是精神食粮？", "因为他们明白，「学到知识」的市场远不如「感觉学到了知识」的市场大", "人生苦短，一天到晚浪费时间讨论这些有的没的，不如去做自己想做的事，即便是一星期葛优躺。", ">从他们提供的内容来看，内容越浅显易懂，传播的越广。尤其是那些教你怎么学习、怎么培养习惯的最受欢迎，根本不需要多么专业的知识。这就是套路。如果有几十万听众，即使只收 1 块钱，收入也很可观了。 \r", "\r", "题主是听了很多这样浅显易懂的 Live 或者其他付费知识分享，觉得被坑，才来发这个贴么？\r", "如果不是，为什么会得出这个结论呢？\r", "如果是，你并不代表大家，你的浅显易懂没有干货在别人看来不一定吧。\r", "\r", "另外，题主分享出来码农知识变现的套路是在不敢苟同。就好像简历写的很漂亮，却并没有匹配简历能力的实际能力。这样的话，别人听一场就不会听你第二场了，因为这是真的骗钱。", " 我都说了是抛砖引玉，你有好的观点可以说出来。要是纯粹为了喷而喷请自便", "用传授知识来获得收入是最体面的工作之一", "如果看到有意思有价值的 Live ，只要不是太贵，我也会付费。但是就像上面说的，如果是某些直接 google 就能得到的知识，那我还不如直接 google 来得方便。", " 和中国付费玩家基数(包括手游页游)除一下，比例就不大了。", " 实在没有喷的意思，你发帖讨论，只是表达了不赞同你的(套路)观点。我认为码农去做这种付费知识分享而且有很多人去听愿意付费，一般都是在所在技术领域比较有影响力技术也比较牛掰的。所以我觉得可持续变现的套路是不断变得牛掰有影响力，然后才能不断地去分享付费知识。", "看看这条 ", "首先要彻底的成为一个什么都能拿出去卖的资本家\r", "然后就能放开去卖任何能拿出去卖的东西", "乌合之众？", " 李笑来的 live 开始打折 1 块钱，才会有 10 万人愿意付费，然后恢复 100 块。然后知乎就可以用 1 小时赚 1000 万的噱头来吸引更多人开 live 。", "愿打愿挨哈哈", "楼主说的很不错，对于一个专业领域来说，永远是初学者比较多，同时也比较容易利用他们对知识的渴望心理诱导他们消费，对付这些小白，教他们怎么学习，教他们怎么培养习惯自然是比较好的变现方法了", "新型成功学？"]},
{"content": "", "reply": "1", "tittle": "2017 年你特别想学习哪门新编程语言？为什么？", "comment": [" "]},
{"content": ["<div class=\"topic_content\">如题，想要一套完整的源码</div>"], "reply": "目前尚无回", "tittle": "谁有没有微信分销系统的源码？带 JAVA WEB 版本的", "comment": []},
{"content": ["<div class=\"topic_content\">点击查看大图后 手指按住图片往下滑图片会缩小 慢慢回到朋友圈页面 是怎么做到的 \r<br>嗯 刚发现 \r<br><a target=\"_blank\" href=\"https://cloud.githubusercontent.com/assets/14831051/21539632/9ba7b28e-cde3-11e6-93e0-34b4b5d34f45.PNG\" rel=\"nofollow\">https://cloud.githubusercontent.com/assets/14831051/21539632/9ba7b28e-cde3-11e6-93e0-34b4b5d34f45.PNG</a>\r<br><a target=\"_blank\" href=\"https://cloud.githubusercontent.com/assets/14831051/21539645/acdc708a-cde3-11e6-953f-fd8722e264d9.PNG\" rel=\"nofollow\">https://cloud.githubusercontent.com/assets/14831051/21539645/acdc708a-cde3-11e6-953f-fd8722e264d9.PNG</a></div>"], "reply": "27", "tittle": "微信朋友圈里 滑动大图缩放", "comment": ["抄袭推特的查看大图功能", "很多应用都有这种滑动退出的功能，相对于点击退出也不算方便吧。\r", "\r", "不过对于退出聊天里的视频倒是挺方便的，不用点击左上角那个×了。", "估计长按的时候触发了 Force Touch 。很多地方 Force Touch 都有此类功能实现的。\r", "\r", "另，生日快乐（其实楼主只是想让我们回复这句话）", " 这个朋友圈应该不是楼主发的吧？所以并不是楼主的生日", "  会撩！", " 没有 Force Touch 的 iPhone 也可以做到这样的效果，所以和 Force Touch 无关。", "一个 pan 手势做不到么？", " 他这个不是朋友圈截图，是通知中心。一开始我也以为是朋友圈别人发的，后来发现状态栏内容和手机自己的一致，所以肯定是通知中心的截图了。", " 没用过客户端 就觉得很稀奇\r", "\r", " 是啊 体验不错\r", "\r", " 噢 当然不是 我是来问问题的 \r", "\r", " 没试过", "我也觉得是抄袭了 twitter...", " 哈哈 没你看的细致", "Telegram 聊天界面的图片也是这样", "iOS 系统相册也是这样。", "这个功能和 iOS 系统相册查看照片是一样的", "生日快乐🎂", "IDMPhotoBrowser 这个库可以做到", "翻墙看看外面的时候就知道了， youtube ，推特", "计算出朋友圈那张小图相对于 window 的 frame\r", "手指下滑过程中，预览大图会根据下滑的偏移量，使用正弦余弦推导出旋转角度和缩放比例，类似 flickr iOS app.\r", "下滑松手的时候，将 window 上的大图以动画的方式缩放到目标 frame 位置，\r", "大图到达目标 frame,移除大图，并显示朋友圈那张小图", "一个 pangesture 就搞定了，很简单的东西", "简单， gesture 或者自定义 controller 的 animation", "自定义的 controller animation", " iOS 9+ 的 API", "UIPercentDrivenInteractiveTransition UIViewControllerAnimatedTransitioning", "发现没有，他只能先下滑，然后才能上滑，和推特还有些不一样", " 待我下一个体验下\r", "\r", "\r", "  @", "  喔喔 才发现\r", "\r", " 蟹蟹\r", "\r", " 待我有空研究下\r", "\r", " 不懂墙外的世界\r", "\r", " 有道理\r", "对中间楼说 果然 v2 大神多 这些词都没听过\r", "\r", " 对啊 只能往下滑才会收起 其他方向都不行 苹果手机相册大图就这样 应该是调用了接口吧 不知道安卓的啥体验", " 不是 Force Touch ，只是手势处理的", "这个我注意过，国外的 APP 还有国内一些独立开发者的东西差不多都有这个，谈到手势就要提到 Tweetbot 的了....  华丽...."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>多说动不动就挂了，所以就不打算用这个，友言 畅言有人用过的吗？正在写个博客，评论不太想打算自己折腾，感觉太麻烦，用第三方比较方便，只要嵌套一段 JS 就成</p>\n</div></div>"], "reply": "7", "tittle": "除了多说你们还用什么第三方评论系统？", "comment": ["我用 ", " 不过现在被墙的厉害", " 这个确实可以，但是国内动不动就被墙了，不敢用。", "如果是技术类站点，我觉得 Disqus 倒是挺合适。至少可以避免部分无脑回复", " Disqus 被墙了哈。", " 正好棒屏蔽一部分小白用户和广告帐号。", "Disqus ，发现被墙自动切换到自制的基础模式，保证可用。", "我的网站 v2mm 也开发了一套开源的“评论系统”， 题主要考虑一下吗？\r", "v2mm 是一个原创内容社区，你不但能得到一个评论系统，还能得到一个“专栏”， \r", "详情见： "]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>系统是 CentOS7 。</p>\n<p>当我执行以下命令，输出大量的 UTF-8 的选项。为什么 UTF-8 需要指定语言？</p>\n<pre><code># locale -a | grep utf8\naa_DJ.utf8\naa_ER.utf8\naa_ER.utf8@saaho\naa_ET.utf8\naf_ZA.utf8\nam_ET.utf8\nan_ES.utf8\nar_AE.utf8\nar_BH.utf8\nar_DZ.utf8\nar_EG.utf8\nar_IN.utf8\nar_IQ.utf8\nar_JO.utf8\nar_KW.utf8\nar_LB.utf8\nar_LY.utf8\nar_MA.utf8\n...\n</code></pre>\n<p>输出结果只摘录了一部分，实际上整个输出非常多，你们有 Linux 机器的也能自己去跑一下这个命令。</p>\n<p>但是我不知道，为什么不是只有一个 UTF-8 ，而是这么多？</p>\n</div></div>"], "reply": "9", "tittle": "既然 UTF-8 是能显示任意字符的，那为什么 Linux 里 locale 相关的设定里有大量的 xxx.utf8 的选项？", "comment": ["UTF-8 是编码，前面是 locale\r", "应用程序要根据 locale 显示不同语言的信息的啊", "没研究过，猜的，应该是每个只是一部分吧，毕竟 unicode 字符数量太多了", "因為每個 locale 文件都只包含一個語言的編碼（？", "因为多语言的程序要根据 locale 设置决定显示的语言。", " 感觉这个是正解。谢谢~", " 感谢回答，谢谢~", "locale 里不仅设置语言，还有货币符号，日期格式啥的\r", "详情请翻手册", "炮王", "export LC_ALL=zh_CN.utf8\r", "ls XXX\r", "ls: 无法访问 XXX: 没有那个文件或目录\r", "\r", "export LC_ALL=en_US.utf8\r", "ls XXX\r", "ls: cannot access XXX: No such file or directory"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>偶然注意到 finder 可以换背景，也可以换字体大小，但是发现无法换字体颜色，觉得甚是奇怪。</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "如何修改 finder 下文件名字的字的颜色", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>楼主是个前端小白，快要毕业了，最近也踏上了刷题的不归路。</p>\n<p>然后用 JS 造了俩轮子，一个是<a href=\"https://github.com/Ma63d/leetcode-spider\" rel=\"nofollow\">leetcode-spider</a>， leetcode 在国内访问实在太慢，看自己过往写的代码真的很头疼，所以基于 es6 的<code>generator</code>和<code>co</code>写了个爬虫，爬自己提交的代码到本地，代码就可以通过 github 等工具管理起来了。</p>\n<p>另外一个就是<a href=\"https://github.com/Ma63d/leetcode-viewer\" rel=\"nofollow\">leetcode-viewer</a>。代码既然爬下来了，所以我想了想怎么把他呈现出来， 1 百多道题的解题源码，如果放到自己的博客上面去，那么要开一百多篇文章，太麻烦了，自己的博客也会被淹没这些在 leetcode 源码里。其实这些解题源码全都是静态文件呀，这个网页也不用动态逻辑，那我完全可以基于<code>backend-free(无后台)</code>架构来弄啊，如果你用 hexo 等静态博客，那你就明白我想做什么了。</p>\n<p>我先把 leetcode 解题代码写进 json 里，然后用<a href=\"http://cn.vuejs.org/\" rel=\"nofollow\">Vue2.x</a>做一个单页应用的网页， JS 直接向静态服务器发 Ajax 请求，去请求这个 json 文件，并把里面的代码内容呈现出来，一个 leetcode 源码呈现网站就这么搞起来了，而且是纯静态的，发到 github pages 或者你自己的服务器上，就直接上线了！而且写了点逻辑，支持你在代码文件夹里写 markdown 文件，当做解题心得，也增加了对多说评论插件的支持。于是一个带搜索功能、带评论、带自己的解题心得、带源码、带 leetcode 题目的 leetcode 博客就这样搭建起来了。完全的静态网页，扔到 github pages 就上线了。</p>\n<p><img alt=\"\" src=\"https://github.com/Ma63d/leetcode-viewer/raw/master/doc/pic2.png\">\n<img alt=\"\" src=\"https://github.com/Ma63d/leetcode-viewer/raw/master/doc/pic1.png\"></p>\n<p><a href=\"https://ma63d.github.io/leetcode-viewer/\" rel=\"nofollow\">github pages 线上 demo 在此</a></p>\n<p>自己结合自己的使用体验，对这两个工具做了挺多优化，感觉还挺好用了，爬虫支持增量爬取，静态网页每次有新代码下载下来时更新时间也只需要一秒钟甚至更短。而且搭起来的这个网页也相当于一个 leetcode 解题博客，可以跟刷题的同学们交流解题思路，也相当于做一个个人展示把，明年找工作的时候可以粘在简历里。现在分享出来，大家有需要的就自己使用吧。</p>\n<p><a href=\"https://github.com/Ma63d/leetcode-viewer\" rel=\"nofollow\">leetcode-viewer</a></p>\n<p><a href=\"https://github.com/Ma63d/leetcode-spider\" rel=\"nofollow\">leetcode-spider</a></p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://github.com/Ma63d/leetcode-viewer\" rel=\"nofollow\">leetcode-viewer</a>的响应式改造已经完成，大家如果觉得不错可以给个star，谢谢啦~</p>\n</div></div>"], "reply": "27", "tittle": "用 JS 写了两个 leetcode 的小工具，爬自己的 leetcode 代码和把代码用单页应用呈现出来", "comment": ["能做一下响应式设计吗？移动端没法看，哈哈，如果不是看了介绍，还以为是 vue 官网呢", "赞一个👍", " 嗯嗯 响应式最近在改\r", "样式风格主要是当时做的时候想着跟我自己的博客风格保持一致，而自己的博客就是用 vue 搭的，当初样式参考的 vue 官方博客，所以这个页面跟 vue 官网的样式很像很像.而且自己用 vue 较多，洗脑严重，觉得官网风格还挺好看的....哈哈哈 可能得把 logo 先换了", " 哈哈，谢谢啦~", "👍", "卧槽，好用，牛逼。", " 哇，这这这，多谢多谢~", "学习一波，一直没想到怎么用 generator 的地方", "leetcode 都不能正常保存刷过题的代码，过一整子就没了。", " generator 要结合[co]( ", " node 上用，在浏览器端的话一般受限于兼容性问题，虽然可以用 babel 转码搞定，但是前端的较为繁琐的异步流程其实不多，所以使用场景有限。\r", "\r", "在 node 上的话 generator 的使用场景就很大了，主要是用来解决回调地狱的。以往在 node 上写服务的话都是基于回调（基于 promise 本质也一样）来写，你比如用 node 自带模块读一个文件的话就是`fs.ready('a.txt', function(err,data){//在这里写对 data 的处理})`这种，当你的异步流程比较多，比如你要读 a 文件然后根据内容去读 b 文件，然后读好以后写入 c 文件再之后把内容 ajax 返回回去，那么就有很多层回调嵌套，层数非常深，代码可读性很差，而且流程控制很糟糕。\r", "\r", "用 yield generator 和 co 的话就非常简单， let data = yield fs.read('a.txt') 这种写法，简直跟同步的执行一样，代码可读性、流程控制等问题就都没啦， try catch 也可以用了。", " 那这个把提交的代码爬到本地的小工具就更值得你拥有啦~", " 响应式搞定啦~", " \r", "\r", "已 star 支持。\r", "\r", "我只是吐嘈下 leetcode ，我刷题的代码也存一份 github 。", "leetcode 上自己写的代码是在 localstorage 里存着呢，不用爬，可以直接复制或遍历出来的。", "真不错，就是代码字体有点小", "不错。\r", "不过我都是 AC 一题 就写一篇博文 记录， 这样也不怕丢\r", "再次 打广告:   ", "    我的英文计算机博客", " localstroage 里确实是有的，但是没法用程序读出来嘛，遍历最多也就能显示在 console 里，没法自动写入到本地文件，手工存取的话，一百多道题.....", " 多谢反馈哈，我是在自己笔记本上开发的，在手机和 mac 上看起来感觉都挺合适的，没试过大屏显示器，这个确实得考虑一下，屏幕太大时可能字体有点小了。", "Omg....大神，涉猎的领域太广了。。。。。", " 可以的，小伙子，你这水平可不能说是前端小白。", "做的很不错啊，很可以了。这才是 v2exer 的风格。", "支持一下，看过 co 的源码，叹服不已。", " 是啊，真心觉得 tj 太神了，写出这样的程序真心佩服。。。关键是 koa ， express ， jade ， ejs ， stylus ，全都是他搞出来的，实在是大写的服", "开头说自己前端小白，实在过谦了。", " 为什么都这么厉害啊。网站全英看不懂。。\r", " 为什么我在源码里没看到你页面里引用的 app.xxxxxx.js 呢", " 额，这个 app.xxxxx.js 是用 webpack 打包出来自动插入到页面中的。", "赞一个~"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h2>工作</h2>\n<p>今年在<a href=\"http://www.fangstar.com/\" rel=\"nofollow\">房星</a>主要负责了几个项目的技术设计和实现：</p>\n<ul>\n<li><a href=\"https://hacpai.com/article/1462956775250\" rel=\"nofollow\">Protyle</a>：敏感数据存取</li>\n<li><a href=\"https://hacpai.com/article/1468846228337\" rel=\"nofollow\">CC</a>：呼叫中心</li>\n<li>Shotgun：房源群发</li>\n<li>Spider：房源爬取</li>\n<li>Auto：项目自动部署平台</li>\n<li>StarChart：户型图测绘，以链家作为对标</li>\n<li><a href=\"https://github.com/FangStarNet/symphonyx\" rel=\"nofollow\">SymX</a>：企业内网论坛</li>\n<li>Petal：配置中心，才开的新坑</li>\n</ul>\n<p>技术架构方面服务化的 Java 技术栈基本铺好路了，接力棒开始交给了其他伙伴。</p>\n<p>房源群发和爬取这个看上去有内容可做，不过泼冷水的是 58 已经上线了<a href=\"http://jikejia.cn/\" rel=\"nofollow\">集客家</a>，也是做房客源推荐、群发的，然而就在前不久我已经向老板请缨明年去专职做这一块了，怎么办 :joy:</p>\n<h2>三十而立</h2>\n<p><a href=\"https://hacpai.com/article/1464677005809\" rel=\"nofollow\">hi，你们想过当你40岁以后你能做什么吗？</a></p>\n<h3>能力与价值</h3>\n<p>今年开始奔四了，但我才刚意识到一个现实：我的能力不足以支撑我的生活。据说人最痛苦的事情之一就是实力不足以支撑其野心。</p>\n<p>在工作上，公司给了我一个较自由的定位，我也一直在问自己，到底能为公司创造什么价值？目前除了上面那堆破代码，我没能创造出什么价值，而一年过去了。无论是对公司还是个人来说，时间都是非常宝贵的，“天下武功，无坚不摧，唯快不破”。</p>\n<p>我不希望过几年以后会变成依靠资历经验的 PPT 架构师，但我希望写代码能成为副业。怎么实现呢？没想好，也许我就是想太多做太少了。</p>\n<p>持续学习，持续解决问题吧。</p>\n<h3>Bootstrapping</h3>\n<p><a href=\"https://en.wikipedia.org/wiki/Bootstrapping\" rel=\"nofollow\">Bootstrapping</a> 即引导/启动，比如当我们按下计算机电源按钮后到操作系统启动这个过程，比如某语言编译器自举实现。这里我想比喻的是创业初期都必须面对的首要问题：如何将事情启动起来。一旦运转起来后，就是不断调整和加速了。启动过程其实是在解决核心矛盾：构想在实现时必要的输入，最小输入下换回最大价值。</p>\n<p>比如：</p>\n<ul>\n<li>B 端用户还是 C 端用户切入</li>\n<li>PGC 还是 UGC 为主</li>\n<li>做发布源还是聚合分发</li>\n<li>分布式还是中心化</li>\n<li>是工具还是社交</li>\n</ul>\n<p>等等这些其实是问题根源，如果没考虑清楚说明思路还不清晰到能够创业，还需要再思考再观察。</p>\n<h2>大 V</h2>\n<p>大概是 4 月份的时候通过 GitHub repo 邮件邀请了一些大 V 加入 <a href=\"https://github.com/\" rel=\"nofollow\">B3log 开源</a>），引起 <a href=\"http://justjavac.com/\" rel=\"nofollow\">justjavac</a> 的<a href=\"https://www.v2ex.com/t/278877\" rel=\"nofollow\">强烈不满</a>，现在想想自己确实很傻，继续安静地开源，他们那个圈子不适合我。</p>\n<p>今年掀起的直播热把很多人相当网红的欲望点燃了，知识变现的方式也逐渐清晰了，但问题是真的有那么简单么，没持续干货输出的话对得起雪亮眼睛的群众么。我本来也燃了，搞了两次后灭了，下次直播就直接打码吧，兴许在直播时别人还能帮发现 bug....</p>\n<p>有不少人建议我出书，但关键问题是我写不出来啊，写代码已经是我目前的极限了，我但凡有那水平，写代码就真成副业了 :joy:</p>\n<h2>开源</h2>\n<h3>NetBeans</h3>\n<p>Oracle 甩锅给 Apache 后还需要一定时间才能稳定下来，不过新版的 NetBeans Logo 提案感觉很不错：</p>\n<p><img alt=\"9d92a47b01674f59939d57e51e9d0631-nblogo.png\" src=\"https://img.hacpai.com/file/2016/12/9d92a47b01674f59939d57e51e9d0631-nblogo.png\"></p>\n<h3>B3log</h3>\n<p><a href=\"https://github.com/b3log\" rel=\"nofollow\">B3log@GitHub</a> 已经陆续加入了一些伙伴，也有伙伴开始 create/fork repo 到 org 中了。最令人高兴的是 <a href=\"https://github.com/b3log/solo\" rel=\"nofollow\">Solo</a>, <a href=\"https://github.com/b3log/wide\" rel=\"nofollow\">Wide</a>, <a href=\"https://github.com/b3log/symphony\" rel=\"nofollow\">Sym</a> 这三个项目也加入了不少贡献者，在开发、设计、推广等方面都在推动着项目，这样的开源是我一直所期望的，相信这也是很多有着 <em>开源情结</em> 的开发者所向往的。</p>\n<p>今年抖机灵做了一个 QQ 聊天机器人<a href=\"https://github.com/b3log/xiaov\" rel=\"nofollow\">小薇</a>，这是一个典型的使用各种开源项目、在线服务强行粘合的程序。腾讯的 QQ Web 接口虽然不稳定而且限制很多，但令我没想到的是居然还是有一些人通过小薇的易用性进行各种商业的推广。我的视角太开发者，在别人看来程序只是一个工具，我却为之倾注了情感。</p>\n<h3>功能困境</h3>\n<p>开源项目你做的功能少了，有人说你系统简陋，什么都不能完成；你做的功能多了，有人说你系统太复杂，不够人性化。</p>\n<p>这就是业务型开源程序的困境，就算博客、社区这样“小”业务的开源程序也同样存在，因为程序最终服务的是有特定功能需求的端用户。从这个角度看，业务型开源项目的组织方式是以项目创始人的 <strong>目标</strong> 最为相关，后续参与进来的贡献者都是在帮助他完成目标。当然，这个目标有时很简单，就是希望自己好用，也希望有其他用户来使用这个程序。</p>\n<p>基础技术开源程序就不存在这个困境，因为可选替代很少甚至没有，而这部分开源项目的目标是大公司之间博弈决定的，他们更偏向于技术规范/标准的制定。</p>\n<h3>GitHub</h3>\n<p>2016 年我的 <a href=\"https://github.com/88250\" rel=\"nofollow\">GitHub</a> 时间线：</p>\n<p><img alt=\"3a962f3209684b498c0347c33ee92cba-github2016.png\" src=\"https://img.hacpai.com/file/2016/12/3a962f3209684b498c0347c33ee92cba-github2016.png\"></p>\n<p>每天都提交一点东西，文档也好，代码也好，就像浇花一样。</p>\n<p>另外，请不要问我为什么有那么多时间搞这些、是不是工作不饱和、是不是单身狗等奇怪的问题，因为你肯定没在半夜 push 过 GitHub :smirk:</p>\n<h3>坚持</h3>\n<p>不存在所谓的坚持，做任何事总是有动机并且需要有<strong>正向结果驱动</strong>的。做了这么多年的开源，我集结了一个社群，认识了一些朋友，和他们一起撸过相同的代码，碰撞过差到不能再差的 idea……</p>\n<p>从中我得到了一些建议，而把这些建议付诸于实践，最后得到可验证的结果就是我继续推进 B3 的理由。所以根本不存在所谓的坚持，这是一件很自然的事情。说到底，自己做的架构，该自己写的代码终究是需要自己来写，对自己负责，对用户负责。</p>\n<h2>黑客派</h2>\n<p>起名小达人自认为的巅峰之作被 12 岁网瘾少年认为是黑客基地。</p>\n<p>黑客派取自<a href=\"https://book.douban.com/subject/6021440/\" rel=\"nofollow\">《黑客与画家》</a>，Hacker 就是黑客，Painter 就是画家，分别取前三个字母就构成了 <a href=\"https://hacpai.com\" rel=\"nofollow\">https://hacpai.com</a>，派字含有画家风格流派之意。</p>\n<p>黑客派 2016 年注册了 3.5K 用户，离 10W 的小目标又近了一步....</p>\n<h2>技术</h2>\n<h3>Hybrid</h3>\n<p>入门了 Unity ，以 Java 的风格写了些 C#。</p>\n<p>我发现最新、最火的一些技术（框架）越来越热衷于将一个语音编译成另一个语言、桥接，比如 Unity、React Native、Dart。以前我只觉得 JVM 系内各种语言已经很复杂了，这下好，直接是不同语系的。</p>\n<p>APP 的混合开发也从 Webview 嵌入变成了整合另一个项目的导出，比如 Unity 和 React Native 都可以导出 Android、iOS 项目，然后再将导出的项目通过代码方式整合进已有的原生项目中。目前看上去没什么大碍，但我担心膨胀下去 IDE 会罢工的。还好我是服务端开发，不是全栈工程师，就凑下热闹。</p>\n<h3>Java</h3>\n<p>Java 9 明年就发布了，目前我个人还停留在 7 的规范下，明年是应该在开源中用下新特性了。另外，<a href=\"https://github.com/b3log/latke\" rel=\"nofollow\">Latke</a> 也是时候翻新一下了，自己用的轮子总得是最圆的吧。</p>\n<h3>golang</h3>\n<p>作为前排吃瓜群众，我认为 golang 已经很好用，足够解决我面对的问题。事实上，今年在没怎么大更新的前提下 <a href=\"https://github.com/b3log/wide\" rel=\"nofollow\">Wide</a> 依然保持了 B3 系开源项目受关注度第一的位置，这足以说明 golang 的魅力。</p>\n<p>另外，“golang 在国内比国外火”的观点我不敢苟同，仅就 Wide 而言，大部分 PR、issue  都是歪果仁创建的，问题描述和代码补丁都很 nice，很多时候我也疑惑：这帮人都不用搬砖的吗？也许他们确实不用搬....</p>\n<hr>\n<p>明年该干嘛还是干嘛，在固化的阶级中继续挣扎。</p>\n</div></div>"], "reply": "38", "tittle": "2016 一个想做架构师的码农", "comment": ["佩服楼主！", "impressive", "大牛", " \r", " \r", "\r", "多谢关注，一起加油", "有追求！不过考虑换个更好的平台对你发展会更好！", " 5 年前在过你隔壁厂房 :)", " 还愿意来杭州吗？", "2017 年加油，写过 58 的车源群发和车源抓取，接力棒也已交给他人..23333", " 谢谢好意，但是现在拖家带口的就不来了\r", " 好多都是假信息，也是醉了，哈哈", "那些大 V 很多不都是娱乐圈的么（滑稽）", "佩服楼主！", "我的 Github ： 879 contributions in the last year", "Shutgun 这名字…莫名的有攻击性啊， 2333.\r", "\r", "等工作中其他事情渐渐多起来，写代码就自然而然成副业啦……然而并不开心。", "NetBeans 我从 3.5 就开始用了，一直用到现在，曾经给 NetBeans 写过一个插件支持 Apache Click 框架，\r", "\r", "\r", "\r", "后来 Apache Click 这个项目死了，我也没再更新了。", ">开源项目你做的功能少了，有人说你系统简陋，什么都不能完成；你做的功能多了，有人说你系统太复杂，不够人性化。\r", "\r", "这个实话。\r", "\r", "我目前开源的项目几乎都是 Sample ，一般只要在一直更新的都基本五脏俱全，包含很多项目的积累，并有详细的 README 和大量的 Wiki Pages 来记录开发技术细节，希望能够直到一点作用就是授之以渔。\r", "\r", "遗憾的，不少国内的人一上来就直接运行，根本就没看过基本的 README 和 Wiki ，然后各种报怨 。更有甚者，邮件发过来恶语相向也有遇到。", " 握手", "膜拜大牛", "mark ，下班看", "非常棒", "膜拜一下。我得向你学习学习", "hacpai 观光团过境", "楼主你可有时间休息", "求 hacpai 邀请码啊", " \r", " \r", " \r", " \r", " \r", " \r", " \r", "\r", "谢谢关注！", "求分享一个 邀请码，谢谢！", " 注册贴里有的，就不在这里发了，请理解。", "确实佩服，我的发型也在向 lz 靠齐。。。", "昆明租房好便宜啊 ，我特么现在的十平米单间房租能在昆明租个百来平的套间啊...", "牛人， 没有 博客么？", "谢谢大牛的分享！\r", "努力朝大牛看齐", "年终总结啊，认真看完了。\r", "昆明少有的认真钻研写代码的程序员\r", "\r", "感觉真是要感谢房星，让不少呆在昆明的优秀程序员能生活无忧。", " ", " \r", " @", " @", " @", " 谢谢关注！", "搞不懂，房星到底什么鬼。单看这个东西，似乎实在虎口夺食。难搞", "   向牛人看齐。。。 打个广告，我的中文博客是 ", "   英文 是 ", "  ", "  欢迎回访", "上面的话冒昧了。了解了下，线下强硬的团队+线上。确实是最好的发展路线。", " @", " \r", "\r", ":)", "楼主厉害了", "  项目开源还是不开源！什么时候开源！有讲究吗？我自己写了个问答、文章管理系统。在考虑是否开源，会不会有人说我写的烂。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>目前服务器是这样的： cpu 太差，是 ATOM 的 cpu ，带宽是 100M 独享，硬盘太小，而且是机械硬盘，内存 4G 。\n服务器需要裁剪图像（平均 4M 大小）输出到浏览器端，因为硬盘太小，如果把每个图片都裁剪成各种分辨率存到硬盘的话，硬盘装不下，我目前想到两种方案：</p>\n<p>1.客户端浏览器 canvas 裁剪：</p>\n<p>输出原始图像到客户端，用 js 配合 canvas 最终生成 base64 图像。</p>\n<p>优点：不费硬盘、不费内存</p>\n<p>缺点：带宽估计消耗很大，用户等待时间较长，即使一个 100x100 的图像都要等很长，搜索引擎抓取不到这张图像</p>\n<p>2.php 动态输出：</p>\n<p>php 在客户端进行裁剪，rewrite伪装成静态地址如www。abc。com/images/little-cat-480x800.jpg：</p>\n<p>//php 裁剪原始图像得到$content;</p>\n<p>header('Content-Type:image/jpeg');</p>\n<p>//输出裁剪后的图片内容$content;</p>\n<p>这样做的好处：不费硬盘、不费带宽</p>\n<p>缺点：费内存和 cpu ，在高并发下不知道表现如何？</p>\n<p>项目实际经验太少，求教 V 站高手解疑一下，哪种更好？或者有更好的方案？谢谢</p>\n</div></div>", "<div class=\"topic_content\">上面打错了，“ php 在客户端”=&gt;“ php 在服务器端”，目前服务器只有 1T 大小，如果加上各种裁剪后的各种分辨率的图片的话，还要增加好多倍的硬盘，感觉有点贵了</div>"], "reply": "11", "tittle": "高并发下 php 输出图像对性能开销大不大？", "comment": ["这是硬伤，寄硬盘跟 CPU 吧，这是最好的解决方案，反正再在硬盘和 CPU 也不贵。", "用七牛之类的云存储，可以以很低的成本解决你的问题。", " 自己算了下，还是自己搭建图片服务器更实惠点", " 目前硬盘只有 1T ，裁剪成各种分辨率再拿其他服务器来装，花销挺大的", "php 有 glide 专门裁剪图片，其实图片如果反复访问的话第一次裁剪才耗 cpu ，第 n 次访问直接 nginx 读文件输出就完了", "2006 年我也是用你的方案，存的是原图， php 动态裁剪，前面加 squid 缓存\r", "2009 年改成 fastcgi\r", "2014 年用 go 重写，改成分布式处理", "动态裁剪+缓存。这样不用所有图都进行裁剪存储，然后缓存可以设置有效期。过期自动删除缓存，这样磁盘利用率就可以提高很多了", "如果是 JPG 就可以用贱招.\r", "首先你只要存原始尺寸图片.但一定要是 JPG 渐进式格式.存档品质不要超过 85 比较好.这个 php 本身就有支援.\r", "然后重点.输出的时候用串流输出. 意思就是 php 读取图片用串流(BYTE)的.不要解读图片\r", "然后 php 控制输出也是串流的.但输出多少要自己控制.\r", "例如你只要 4 分之 1 的大小=长宽减半的大小.\r", "你就先取得整个档案的大小.计算 4 分之一的档案长度.\r", "然后串流输出的时候.到达 4 分之 1 的输出后.直接截断.关闭串流.\r", "用户端需要稍微用 html 控制一下.直接指定显示的长宽.\r", "因为实际上你输出的还是原始尺寸.\r", "而对方收到的图片清晰度却没有达到全部.但一定超过 4 分之一的需求.\r", "所以看不出有问题.但计算消耗只有第一次的存档.输出频宽消耗也只有 4 分之 1.\r", "验证方法是随便产出一些 渐进式品质 75~85 的 JPG 图片.直接用档案切割软体或是 16 进制的编辑软体截断档案.\r", "然后将截断的前面用看图软体打开.\r", "用 4 分之一大小看基本上没问题.但用原始尺寸看就可以看到破损.\r", "有研究 JPEG 格式就知道.渐进式的话.他有一个一个的段落.每个段落都会让图片慢慢清晰.而且后面的不存在也没关系.只是解码会终止.但可以正常显示前面.\r", "如果有搭配 imagemagick 或类似的软体存档.可以给他更多参数.\r", "\r", "例如黑白灰(YUV 的亮度 Y)正确性比彩色(UV 部分)重要.下参数让 Y 全部在前然后才是 UV.\r", "他就会变成 YYYYUUUUVVVV(第一层.最模糊) YYYYUUUUVVVV (第 2 层某一块.是第 1 层的局部补正) YYYYUUUUVVVV (第 2 层某一块.是第一层的局部补正) YYYYUUUUVVVV (第 3 层某一块.是第 2 层的局部补正) YYYYUUUUVVVV (第 3 层某一块.是第 2 层的局部补正) .....直到最后一层.\r", "\r", "如过颜色比较重要那就下参数让 YUV 混合.就变成 YUVYUVYUVYUV(第 1 层) YUVYUVYUVYUVYUVYUVYUVYUV(第 2 层)....以此类推.\r", "\r", "每一层有几块是编码器决定的.而且还分算数二进算法或是金字塔算法.所以不好计算你要的尺寸要切到哪一层.干脆直接截断.\r", "金字塔算法是预设的因为效率更高但较复杂难预测. 算数二进比较简单.可预测但档案较大.\r", "\r", "以上就是不换设备但有高解析度到低解析度需求的解决方案.\r", "缺点是用户很喜欢你的图片存下来看原图他会翻白眼.因为截断的瑕疵就会露出来.\r", "这里的补充解法是. 图片旁边写 JS 下载语法.\r", "参考范例(繁)\r", "\r", "他是按照标签产图.你就选图片的那个标签名称就可以.他会产生\"用户看见\"的大小的图片.\r", "等于是用户浏览器自己重新编码一个图片了.大小比用户看见的小一些(我也不懂原因哈哈哈).\r", "但是不会有破图瑕疵.\r", "\r", "以上是我的自建图床解.", "补充 JPEG 格式\r", "\r", "YUV\r", "\r", "\r", "建议参数是\r", "Q75~85.\r", "YUV420(颜色解析度较低.预设值) 或是 YUV444(颜色解析度跟 Y 一样)\r", "float(慢速编码但品质优). 如果 CPU 不够力用 int(预设的整数编码)\r", "YYYYUUUUVVVV.(每层的黑白灰优先).", "nice 先 mark", "如果没有高并发的压力，可以先不考虑这个问题，图像处理极其耗费 CPU 资源，纯靠堆机器解决，基本上做不了高并发方案。\r", "\r", "我遇到过的，调用网站验证码的功能，没有考虑到并发量的问题，在任何嵌入验证码需求的页面都直接把验证码生成接口嵌入在 IMG 标签中。导致无登录状态的用户在访问任何页面都请求一次验证码的接口，单台服务器 8 核 CPU 的情况下，日均 PV 到 400w 就在高峰期频繁出现 100%CPU 的情况了，后来改动了调用方式，只有确认用户主动点击登录之类的活动触发了验证码才会填充 URL 到 IMG 标签中。\r", "\r", "这只是一个 CPU 消耗比较小，在 100ms 内就能处理完的图像处理请求，如果是大图像裁剪，性能会更差，如果真的有访问量比较大的峰值，建议买硬盘扩容，硬盘的成本是最低的，可以靠堆硬盘解决的问题，不要心疼钱。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><ol>\n<li>如果使用鼠须管自带的中英切换功能，并且在配置文件中配置某些 App 默认使用英文输入法。当你从当前 App 切换到另一个 App 之后，过一会儿再切回来，你可能就不记得当前这个 App 的输入状态是英文还是中文了，需要打一段字才能知道。</li>\n<li>如果中文使用鼠须管输入，英文切换到系统自带的英文输入法输入。在从系统自带的输入法切换到鼠须管之后，有一定机率，打出来的前几个字，还是英文。</li>\n</ol>\n</div></div>"], "reply": "25", "tittle": "使用鼠须管中关于中英切换的槽点", "comment": ["用了半年鼠须管，前两天实在是没办法再欺骗自己了，又换回搜狗。。。", "用过，接着换了 bing ，最后换回搜狗……", "哈哈，我以前一直 Win 用小鸭五笔， Linux 下面用 fcitx ，最近看知乎发现“神级输入法”这种词反复出现，于是花了一天多反复配置小狼毫和 fcitx-rime ，又坚持用了几天。\r", "\r", "正巧也是今天下午午睡之后，突然把它们全部卸载了，现在用回小鸭五笔真是精神气爽，行云流水啊。", "类似的感觉，试用一下，嗯，确实不错，很喜欢简洁的配色，可能还是我不太会配置吧。\r", "\r", "\r", "然后卸载了，用的 Win10 自带的输入法，然后，有 bug ，游戏强退，换搜狗精简版了。倒也确实不需要花哨的功能，但还是挺懒人化的。\r", "\r", "\r", "所以，很同意一楼，“实在没办法再欺骗自己”的说法。我也是~", " 好羡慕你们这些会用五笔的人啊，五笔看了几天最后还是放弃了。。。", " 装个打字软件，练习两个礼拜就会了。我就是学校时暑假在家自己学的。", "我觉得是非常不错输入法，没有弹框，没有联网。干净安全省心。", "用中州韻打鄭碼的路過。。。我知道我是小眾~", "装搜狗的，难道不怕这种流氓软件吗\r", "不说隐私上传，光磁盘写入已经够可怕了吧\r", " \r", "\r", "市面上的五笔教程确实很烂，我当年是在书店逛的时候正好看到五笔教程打折于是买了本书然后自学的，先学 86 版，后来在五笔爱好者论坛泡久之后主动转到 98 版，重学的时候才发觉当年买书真是英明的决定，很多人光拿一张字根图然后背完字根就想打字完全是舍本逐末。\r", "\r", "我那段时间疯狂研究输入法，五笔熟练后又学了小鹤双拼。智能机时代来临之后感觉也是受益匪浅，在小屏幕上只适合两个手指头打字，双拼配合优化过的 17 键皮肤非常畅快。\r", "\r", "你想打字快点也可以学习一下双拼的，双拼就是在汉语拼音方案上简化了输入，我看过不少人的体验，一般用半天就可以记住双拼方案了，然后边用边练一两个星期就差不多走上正轨。而且我学的小鹤双拼还可以辅助码帮助选字，据说练快了与五笔不相上下，我因为已经会五笔，所以就没有考虑辅助码，不过在手机上只用双拼都胜过大多数人了。", "我就是中文使用鼠须管，英文使用系统输入法。 Linux 和 Windows 和 macos 都用，还好吧。你说的“有一定几率打出来的前几个字还是英文”我倒是没有在意。\r", "\r", "上次我在 iPad 上面使用搜狗输入法，用密码管理器的时候需要复制密码。然后搜狗我就发现我的那么长的随机密码竟然出现在了候选词里面。😂😂\r", "\r", "所以我就再也不用搜狗了。一直用 Rime 了。", "arch 下的 fcitx-rime 有时候切换不了中英文，要去用鼠标切换，然后换成了 google-pinyin （", " 太感谢了！我可以先试试双拼~当初在知乎看了一位大神说按照他教的方法一两个星期就能掌握五笔，结果我还是什么都不会，突然开始怀疑自己的智商了。。。\r", "\r", " 当初转到鼠须管就是因为抓包看到了搜狗后台的明文传输，后来折腾着搞了鼠须管。隐私这东西怎么说好呢，在当前的大环境下其实也没什么可隐私的了，反正我现在是破罐破摔了。", "最喜欢的还是 Win 10 自带的中文输入法啊。（虽然有时候不太智能让人抓狂 ）", " \r", "仍然是推荐你看下这个知乎链接再决定 ", " \r", "\r", "双拼的方案有很多种，其实也就是把韵母放在这个键或者是那个键的区别。我个人选择的是小鹤双拼，不是最优秀至少也是第二优秀的方案了。这个双拼方案从个人定制变成各大拼音输入法内置，足可以证明它的优秀与普及。\r", "\r", "小鹤双拼的口诀也很有趣。", " ", " 可惜 rime 跟 win10 不兼容", " 是的，在类似于 Edge 的应用里面不能用，这个有点难受。不过对我来说影响不大，那类应用我用的不多。", "最近一年已习惯 mac 自带输入法，懒得折腾了", "鼠须管的话。。。用久了卡，是非常卡！我换回 sougo 了", " \r", "用久了是多久？我一直用，没卡过", " \r", "大概用半年开始就卡，我用了一年受不了就删了。\r", "ubuntu 平台下\r", "重新安装就又流畅了，但是没词库。。。", "mac 上的五笔方案我用了不少 最后还是只坚持用 rime. \r", "\r", "不知道五笔这种东西会不会被淘汰.", " 相信我，只要是能正确指法盲打。从完全不会五笔，到常用字每分钟四十个。只需要十个小时。不要去背字根。直接上手练字根，四个小时能练到 100 键每分钟。再花两个小时看拆字规则，取码规则，特殊规则，理解难拆字。剩下四个小时练习前五百字。就是这么简单，这是我学五笔的经历。最后你会发现，真正影响你速度的是字不会写！哈哈哈。", " 哈哈 我觉得影响我的还得加上懒和蠢~"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近搞起了 python ， 最终程序要发布给用户，本人又比较喜欢 gtk ，所以研究了下相关的资料，希望和大家分享。</p>\n<p>另外，打包 python 程序也是一门灰色艺术，现在希望收集大家的经验，整理汇总，更好的为 pythoner 服务。</p>\n<p>大家觉得怎么样？</p>\n<p>已经摸索的进展分享在 <a href=\"https://github.com/gnomeonwin/hellopygtk\" rel=\"nofollow\">https://github.com/gnomeonwin/hellopygtk</a> ， 希望大家喜欢</p>\n<p>Cheers, Pythoners:)</p>\n</div></div>", "<div class=\"topic_content\">新增请求：\r<br>如何打包发布 pyside 应用\r<br>\r<br>如何打包发布 pyside2 应用</div>"], "reply": "3", "tittle": "[Call for help] python 打包技术收集请求", "comment": ["果然，打包技术都是秘籍呀，没人愿意出来分享？", "其实 pyinstaller 已经够好用了", " 打不了 gtk 和 cefpython3!"]},
{"content": ["<div class=\"topic_content\">类似支付婊那样首页的背景视频……\r<br>不考虑带宽，我的 OSS 足够强大\r<br>博客程序是 wordpress ，有没有现成的插件或者自己要怎么做……\r<br>\r<br>想到个办法，页面增加一个视频流，然后用css控制，画面扩展到全屏，z-index足够小= =</div>", "<div class=\"topic_content\">已经尝试了，视频流太晕眩……放弃，改用静态壁纸了。。</div>"], "reply": "11", "tittle": "wordpress 想要把视频做成博客背景需要怎么做？", "comment": ["\r", "\r", "不过事实上也就是你那种做法", "你试试 wordpress4.7 的 2017 默认主题，可以设置视频背景，而且自动播放的。", "总之不要用 gif ，用 mp4 ，带宽不是问题， 1080p 的几秒钟视频压制的好的话就几 M ，你可以看看 Bing 搜索，有时候背景就是个视频。", " 你说的那个默认主题我试过，就是要这种效果。\r", "但可惜这个主题的文章页不是特别喜欢。所以打算自己弄。", "我用的 video+z-index ，不兼容的浏览器输出图片 css ，手机用 js 加 muted+内联播放。\r", "\r", "同样不考虑流量费", " gif 真心差评 mp4/webm 都行", "事实上，博客的唯一要点只在内容", "（接楼上）事实上，这样的博客我一点开就立马关闭。楼上说 gif 的……其实用 svg 也可以实现动画的，目测还小一些，当然这个就只有简单的几何元素那种动画了。", " @", " 我赞成两位的。\r", "内容上我一直在维护，平均一周 3-4 篇原创文，只是刚好在折腾 UI ，就想试试看，结果实装后发现实在受不了，眼太花了。。。", "我是在 header.php 添加了如下代码，省心又省力，效果还不错\r", "\r", "\t<!-- 视频背景 -->\r", "\t<video autoplay loop poster=\"预览图链接\" id=\"bgvid\">\r", "\t    <source src=\"视频源链接\" type=\"video/webm\">\r", "\t</video>\r", "\t<!-- 视频背景 -->\r", "\r", "效果（要点两次 Go Home ）： ", "这样的博客我一点开就立马关闭+1.。\r", "想做内容的就好好做内容，加太多花哨东西重点突出得歪了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>Linux 有 iptable,windows 有防火墙</p>\n<p>不过一些网站渗透的我感觉这两个还是有点不大靠谱</p>\n<p>没有 WAF 的要么就自己写规则，要么就下个安全狗，悬镜，云锁</p>\n<p>我用测试服务器试了下，云锁和安全狗都把阿里云的压测给 BAN 了，说明还是有点用的？</p>\n<p>但是占用资源的话， 1G 内存还是被吃的有点紧</p>\n<p>如果带 WAF 我觉得 WAF 和安全狗之类的是一样的，所以我是 WAF+小红伞服务器版</p>\n<p>占用资源还算少吧，但是用了小红伞一年，感觉也没啥大作为的样子（日志感觉和杀毒软件差不多）</p>\n<p>我感觉对 WINDOWS 来说还是把权限做好吧（提权当我没说）</p>\n<p>因为一年前的权限设置忘了，话说 V2EX 有小伙伴给支援一下 WINDOWS 的权限设置吗</p>\n<p>我参考了下一些服务市场和傻瓜包设置的权限</p>\n<p>有点搞不懂那个主机神的权限，创建了一个账号，给了三个不同的权限</p>\n<p>文件夹删除拒绝，遍历读取属性读取权限，还有一个读取写入删除权限，我有点搞不懂为毛要设置三个权限=。=</p>\n<p>话说 Creative Owner 需要保留给网站文件夹吗？有人说要保留有人说不要保留，如果保留的话，匿名用户上传的文件将会有全部权限，有点不懂这个</p>\n</div></div>"], "reply": "7", "tittle": "来说说一下老生常谈的服务器安全问题吧——WindowsServer 安全", "comment": ["服务器自从装了安全狗就不能卸载，一旦卸载服务器就卡死，装回去啥事没有，在第一次装安全狗以前是不会卡的。", "毕竟是独立服务器 8 核 16g 内存", " 建议重装系统，备份好重要资料\r", "应该是哪个和安全狗相关的服务停不了吧", "服务器应该防的是从漏洞或者网站程序那里嘿进来吧？\r", "安全狗是 WAF ，防从网站程序那里嘿进来，以及扫描网站程序的后门，但是似乎这玩意没有用？\r", "小红伞是防病毒的吧？有病毒是已经被嘿进来了，并且获得了执行程序的权限。", " 一般是上传文件或者黑入权限修改文件，小红伞也自带防火墙的（电脑版有 server 版应该也有的吧，大概），杀毒软件能检测的出这些，腾讯云也推荐上了 WAF 最好再安装一个服务器用的杀毒软件", "3389 的密码设随机，或用证书登录。\r", "Web 环境相对应设置新建的用户，默认给 Guest 的用户组即可。文件权限一般无必要时只给只读的权限，不给写入。需要写入的权限禁止执行。\r", "如果闲得蛋疼，可以试一下对 Windows 等相应的系统目录设置权限~ 注册表以及组策略做好设置。\r", "防火墙限制出入口网络连接，该给的权限给，不该给的权限一概不给。\r", "\r", "一般情况下非 GETSHELL 或者远程执行基本无视 0.0\r", "\r", "对大型服务器群等等基本就累死人了，硬件设备以及定期的黑白盒测试是最好的建议。\r", "\r", "（目前自己的服务器密码一个都不记得。只记得自己电脑里面的证书和密钥密码……服务器间互相白名单限制出入口", "安全没有你想的那么难，也没这么多所谓的操作\r", "\r", "绝大部分所谓的黑客，写 expolit poc 的很少，大多都是做黑产的兄弟，其实这群家伙 给你服务器打补丁 杀毒，\r", "比网管还勤快，现在破坏个资料 盗取个什么的，真要涉及到比较大的经济利益，网警分分钟教你做人，大多都是挂个马\r", "拿你服务器做个肉鸡 ddos 业务之类的，\r", "\r", "真要碰到 0Day 老老实实加班打补丁，对服务器的口令进行保护，防止暴力破解，公网上尽可能暴露少的端口，服务器躲在 NAT 后面，比什么都安全", "最好的办法是用硬件防火墙和 IPS ，总之就是多品牌互补，别用同一家的产品，万一哪家爆了 0DAY 还有另一家可以防护"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"\" src=\"https://pic3.zhimg.com/v2-3b7d5b620d11d0d3580703d59bfb87d2_b.png\"></p>\n<p>即便你工作当中用不到网络编程，好歹大学学过吧，都怎么进微软的？</p>\n</div></div>"], "reply": "186", "tittle": "终于知道知乎网红轮子哥的编程水平了", "comment": ["不知道是不是现在语文阅读能力都集体退化了，轮子哥不是明明在嘲讽那句话啊？ 都不知道你们是怎么理解的。 如还有不理解的，请去看一下轮子哥的微博，前几天的微博里也提到了这个，说的很清楚。", "他认真答的我看着毫无波动，在其他回答里总能看到他到此一游，所以我一直想知乎提供屏蔽功能.....", " 我很好奇哪里可笑了", "作为客户端，连接同一个服务器 ip 和端口最多只能发起 65k 的连接", "作为服务器，在一个 ip 上监听一个端口，最多只能接受", "全球 ip 地址数^最大端口数", "那么要想突破这个限制，要不然就服务器监听多端口，要不然就再给服务器提供个 ip 地址，这个理解难道有什么问题么？", " 第一反应我也觉得他是在说反话，尤其还带了个（逃）结尾，但问题是第一个回复真的很挑战我的语文阅读能力，也许是真的退化了吧", " \r", "\r", "俺只是一个帖子都没看清就回了的路过群众。（正在掩面跑开……", "没意义。。我公司的 CTO 还是亚马逊老总级别的技术。写出的 PHP 就是像大学生水平。。可是人家其他方面牛太多了", "我其实没搞懂... 这不是大学就该上的内容吗，考试怎么过的...\r", "乖乖上好课我不信能这样回答", "喷轮子的你们有本事弄一个和他一样牛逼的 ai 来再说\r", "论 ai 机器人爬知乎 我只服轮子", " 讲道理，能出现在 C++ Primer 封面，超过 95%是没问题的。", " 用 seq/ack 头区分同 4 tuple 是不是会被 RST 掉？", "是有术业有专攻这个道理, 但是 ai 好好带逛就行了, 回答不是自己的\"专攻\"的领域, 被吐槽也很正常吧.", "其实最关键的错不在于他没搞明白 4 元祖的概念，而在于他发明了“会分配一个临时端口”这种做法", "大学学过考过就一定记得？？？什么逻辑。。。", " +1. “会分配一个临时端口”这个说法实在是有趣, 要是没有这句话, 真以为他在钓鱼..", " @", " \r", "临时分配端口 有什么问题？难道服务端监听到一个连接不会分配一个新端口进行通讯？\r", "4 元组有什么关系？难道会出现这样的情况,服务端使用同一个端口 同时 与两个连接通讯？比如：\r", "(192.168.1.1:999, 192.168.1.2:188)\r", "(192.168.1.1:999, 192.168.1.3:199)\r", "\r", "诚心求指教，看了两页评论表示还是一脸懵逼", " 我肯定有不会的知识，那么我尽量不装逼强答。一旦打错，你们要打脸，我认。现在轮子哥是又想装逼，又不想被打脸，哪有这么好的事，你去看看他在知乎的回答就知道了。", "“编程水平，网络编程，大学学过，进微软”扯到一起\r", "我总觉得有一股浓浓的*味", " \r", "服务端就是只使用一个端口。\r", "“同时”不是真同时，并发和并行的区别。", " 你可以查阅\"Unix 网络编程\"中, IO 相关章节, 其中的 IO 复用篇.", " \r", "\r", "服务端 accept 一个 socket ， 只是增加一个文件描述符，不会占用一个新端口。所有的客户端连接都是共用 listen 绑定的那个端口。服务端的网络协议栈根据 socket 来区分数据。\r", "\r", " 同时当然是真同时， 就像多核机器上，两个进程可以各自操作 2 个文件，没有其他影响（忽略硬件问题）。\r", "\r", " io 多路复用是指怎么处理 socket 数据， 跟这个没关系。", "图片看不到了啊", "看过， Windows C++牛人，确实写了很多轮子，虽然没什么人用。\r", "另外，谁都年轻过，谁也不是各个方面都牛，那些细节的东西很难记的，何况一查就知道，何必记", " 去掉 CONNTRACK\r", "\r", "iptables -t raw -A PREROUTING -p tcp --port 8080 -j NOTRACK", "网络编程还是得问陈硕啊", "我轮风评还是很好的", " \r", "并发不一定是“同时”，线程的调度是操作系统做的。\r", "服务端 ip:port 的接收和返回也是过缓冲区的。\r", "\r", "能够真同时进行的场景更多是称为“并行”。就像你举的例子，两个进程在不同的 cpu 核心里并行执行。\r", "在并发的应用中，会局部出现并行的现像。但这只是操作系统、 cpu 、服务容器调度过程中的随机性的体现。\r", "\r", "并发！= 并行", " 不管“ 并发是不是“同时” ”，就算是真正的“同时”，也不影响服务器通过一个端口和多个客户端进行通讯", " \r", "当然不影响和多个客户端进行通讯，不然怎么叫并发呢。\r", "只是有人不看我说的并发和并行，非要纠结同时这个字眼。", " 不是“难道不是”而是“显然不是”分配一个临时端口。你需要加强学习", " 序列号是由 tcp 协议栈处理的吧，不是 netfilter 处理的吧？", " 你想想如果分配个临时端口，怎么告诉客户端“我这边换了”这个信息呢？", " 有了“临时端口”这句话之后，发现他是“真”不会，原来不是钓鱼啊。哈哈哈。我也觉得是这样", "  人家问的是两个网络连接是不是同时通讯， 你扯什么进程线程。从网络连接的角度， 它们当然是可以同时通信的。 至于在机器执行层面是不是真*同时， 这是其他问题。", "楼主终于找到喷点了，喷的爽吗？", "LZ 已经被喷的血肉模糊", " 我没有喷啊，我只是不迷信权威。", " 就是手动来构造 tcp 。那个命令就防止系统不认包给 rst 。", "你还记得那些年大学里学过的毛概么.......", " 你这个首先假设了 RST 是由 netfilter 发的。但我觉得应该是协议栈本身发的呢", " 说概念首先得有个标准，同时的标准应该是指多个 CPU 核心可以一起处理不阻塞，在这个概念的前提下， linux 的 tcp 协议堆栈的实现应该不满足这个条件。所以 @", " 是对的。\r", "\r", "意思是说，服务端的一个 ip:port 是共享同一组缓冲区的，也就是两组应用如果是服务同一个服务端口的话，就不能真正的同时处理，只能分时并发处理，至少在从缓冲区获取以及写入数据这个行为上是互斥的。\r", "\r", "当然，是否有其它内核能支持真正的同时，我就不清楚了", "人答案都删了..何必 233", "那个。。少看知乎 - -", " 脑子是个好东西", " 可以直接上 intel 的 dpdk 。", "  看一下语境， 人家的“同时”不是你说的“同时”", " 所以我说需要一个清楚的定义啊，然后讨论才有基础，在操作系统层面的同时那就是针对 CPU cycle ，在网络层面的话，那就复杂多了，只要是共享介质的，都不可能有真正的同时", "  所以我不知道你要表达啥。 我上面强调了两遍 @", " 的问题跟执行层面无关。", "又不是每个人都是全才 C++编程的不懂服务器不是很正常", " \r", "我一直以为 accept 以后， client 的端口是新分配的， server 也会分配一个新的端口\r", "刚刚试了下， accept 返回的套接字的本地端口就是监听端口，对端端口是随机分配\r", "我明白了~", " 失去了才知道珍惜", "很正常的，以前遇到一个斯坦福的计算机硕士连 ip 地址和 mac 地址都搞混了；每个人的关注点可能不一样，能虚心学习就好。", "楼主这以偏盖全的能力不错。\r", "\r", "你真了解过他，就应该明白他是搞 gui 这一块的。\r", "\r", "看到楼上的回复，\r", "\r", "“编程水平，网络编程，大学学过，进微软”\r", "\r", "笑死。\r", "\r", "你打脸我觉得没啥问题，说 真实水平 就太过分了。", "做一名安静的吃瓜群众", "图片看不到啊，重新发下", " 我言语上有点过激，我承认。但是一个人受得起多大的赞美，就要经得起多大的诋毁。无论你认不认同，这是互联网的金科玉律。轮子哥自视甚高，一堆吃瓜群众又把他捧成中国顶尖 c++程序员，实际水平可能也就相当于阿里 p6.总之，把逼装大了，就要考虑被打脸的风险。", " \r", "搜了一圈，这也算是个常见的误解，平时用 api 都没留意\r", "问下什么书或者标准提到了这个 accept 的行为？\r", " \r", "Adherents of the new-random-port theory\r", "附上轮子哥的博客：\r", "不必揪着一个问题，他的水平当然可以完爆很多 cpp 程序员。", "这个轮子哥早就能看出来是个嘴炮，稍微有点水平的人懒得理他而已，真正的高手哪有那么闲长年累月不知疲倦的在网上为了各种无聊的小问题跟人凶狠撕逼的，其实人的水平不行没什么，喜欢装逼也没什么，关键是这位轮子哥的人品很差，说他什么术业有专攻懂点桌面软件 I 的估计是经常看到这位轮子哥整天跟一帮搞易语言的小学生们撕逼就觉得他在这方面很牛逼吧，其实他在桌面软件方面也同样是个草包，一瓶子不满半瓶子晃荡，他就属于半瓶子晃荡的那种，另外谁说客户端开发不用懂网络编程的基础知识的，写过客户端吗？！", " 这一句我就不爽了，草包能在微软？那你是什么包？", "  一言不合就不爽？！这个倒很像轮子的风格，别人发表观点没有义务保证让你爽或不爽，太脆弱就少上网多看书，整天拿“在微软”给自己脸上贴金也许你自己觉得很牛逼，但我真心觉得非常搞笑。至于轮子君是不是草包这根本无需争论，很明显的事。", "就一个普通人而已  至于 诸位上升到红卫兵的水平么  。。。。。", "都这么闲？", "没人提最大文件描述符问题吗 \r", "/proc/sys/fs/file-max", "是图跪了吗", "监听用一个端口传输用另一个端口好像 ftp 协议是这样干的？", " 不需要讲解啊，正常理解下来就是正确的结果。不知道谁把整个行业带跑了……", " ftp 是这样，不过人家在协议里有“通知对方”这个功能。而且 ftp 比 TCP “上层次”", " ftp 是这样的，但同样不会有 64k 问题，没有规定说传输用的 socket 选择的随机端口不能相同，最后还是回到四元组问题上", " 不知道你的水平如何？", "上礼拜一个清华 CS 研究生(未毕业)跟我讨论能不能封掉网站黑名单客户的 MAC 地址实现不让他访问我们网站的效果\r", "顿时毁三观", " dig 怎么能看绑了多少 IP?我试了下,只显示一个 IP 啊,这是 DNS 啊,和端口什么关系了?", "进一家公司你的强项足够强就够了，人家进微软表明了人家在某些方面足够强。\r", "你基础可能够好，但是没有好到让你进到微软。", "我觉得其实他说的东西是以前旧的 FTP 上的东西,以前 FTP 就有个 passive FTP 的讲法,就是连接上了,然后换个端口再和你连接,这种情况下确实只有 65535 个连接,现在 http 不存在这问题的", "苍蝇嗡嗡嗡，不是说微软的都牛逼，但是在微软还牛逼的那是真牛逼。", "这里充满了搬砖工对设计师的不屑(￣_,￣ )", " 神回复... 🙄", "被人骂不要只是怨天尤人，轮子君自己恰恰最不懂得术业有专攻的道理，很喜欢揪别人的小辫子，而且每次都很兴奋，所谓“网红”真是到哪都自带一群捧臭脚和洗地的，而且辣么的盲目。无意看到一篇吹捧轮子君的大长篇，好象是什么他妈妈哼了个摇篮曲然后他兴奋的手舞足蹈什么的没兴趣仔细看，于是他就觉得自己是天才这些只有他自己才知道的无聊的故事，很自我膨胀的样子。其实这种名不见经传的小角色谁关心你这些无聊的小事。\r", "\r", "另外这不能算是“基础”，而是一个“常识”，不懂常识叫“无知”而不是叫“术业有专攻”，水平不是问题，不懂还要硬装逼好为人师，人品才是问题，大家觉得笑尿了，是觉得他后面越抹越黑的狡辩，以及恼羞成怒的删评论好笑。其实大大方方的承认错误谁会去笑他？！", "> 术业有专攻。莫以彼之短比己之长。\r", "\r", "现在我也不知道怎么开起重机。", "如果你们认识这个人，表示你们也很 low 了\r", "\r", "本人表示，不认识这个人", "笑笑不说话 ", " 霸道柴总微微一笑？", " 👍", "楼主 知乎上这个回复我是标明不能转载的文章 请删除此贴。 @", " 了解了~", " 学习啦~"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>祝 V2EX 的程序员朋友们新年快乐！！！</p>\n<p>@汇智网 小智奉上！</p>\n</div></div>"], "reply": "4", "tittle": "元旦快乐！！！", "comment": ["快乐+1", "元旦快乐+1", "2017 第一天！ 祝大家新年快乐！ 身体健康！", "元旦快乐+1"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><pre><code>&lt;ul id=\"list\" class=\"foo\"&gt;\n  &lt;li&gt;#0&lt;/li&gt;\n  &lt;li&gt;&lt;span&gt;#1&lt;/span&gt;&lt;/li&gt;\n  &lt;li&gt;#2&lt;/li&gt;\n  &lt;li&gt;#3&lt;/li&gt;\n  &lt;li&gt;&lt;ul&gt;&lt;li&gt;#4&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;\n  ...\n  &lt;li&gt;&lt;a href=\"//v2ex.com\"&gt;#99998&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;#99999&lt;/li&gt;\n  &lt;li&gt;#100000&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n<ul>\n<li>为 <code>&lt;ul&gt;</code> 添加一个类 <code>bar</code></li>\n<li>删除第 10 个 <code>&lt;li&gt;</code></li>\n<li>在第 500 个 <code>&lt;li&gt;</code> 后面增加一个 <code>&lt;li&gt;</code> , 其文字内容为 <code>&lt;<a href=\"http://v2ex.com\" rel=\"nofollow\">v2ex.com</a> /&gt;</code></li>\n<li>点击任意 <code>&lt;li&gt;</code> 弹窗显示其为当前列表中的第几项。</li>\n</ul>\n<hr>\n<p>最近又来了个资深工程师面试，结果现场写代码环节写不出上面类似的题目。🌚</p>\n<p>讲道理这题真的不难啊，就是简单的 DOM 操作，没有任何奇技淫巧，现场写：一台 MBP / 30 分钟 / 允许 Google ，只要基本功够扎实应该都能写出来吧。</p>\n<p>其实现场考的版本比这个还简单，这个是为了发帖稍微整理后的版本，大家来喷一波。</p>\n<hr>\n<p>(顺便补个广告，招前端，薪资对标阿里 P6 ，可年后入职，年前入职可以补偿年终奖，因为不是招聘结点我就不放邮箱了，有兴趣私我哈）</p>\n</div></div>", "<div class=\"topic_content\">原来没有私信功能啊 😂 地点在上海，邮箱 peiqiao.peng#ele.me 。\r<br>\r<br>不能用第三方 DOM 辅助库哈，那就没意义了。</div>"], "reply": "108", "tittle": "分享一道简单的前端面试题", "comment": ["// 不知道我理解错题意了没有……求轻喷啊\r", "\r", "function loopTargetAction(list, index, action) {\r", "  if(index === '*') {\r", "    for(var i = 0; i < list.length; i++) {\r", "      action(list[i], i)\r", "    }\r", "  } else {\r", "    action(list[index], index)\r", "  }\r", "}\r", "\r", "var uls = document.querySelectorAll('ul')\r", "\r", "loopTargetAction(uls, '*', function(ulEl) {\r", "  ulEl.classList.add('bar')\r", "})\r", "\r", "var lis = document.querySelectorAll('li')\r", "\r", "loopTargetAction(lis, 9, function(liEl) {\r", "  liEl.parentNode.removeChild(liEl)\r", "})\r", "\r", "loopTargetAction(lis, 498, function(liEl) {\r", "  var li = document.createElement('li')\r", "  \r", "  li.textContent = '<v2ex.com />'\r", "  liEl.nextSibling.insertBefore(li)\r", "})\r", "\r", "loopTargetAction(lis, '*', function(liEl, index) {\r", "  liEl.addEventListener('click', function() {\r", "    alert(index)\r", "  }, false)\r", "})", "添加一个类 bar 是什么意思", "稍微改了下，应该满足需求了，之前没看仔细 ;-)。", "类 bar  是什么鬼？  className ？", "对于我来说，难点在于玩不转 MBP 。。说正题，除了节点后插入新节点没有现成的 API 以外，其他几个题目，无论是用 CSS 选择器或者遍历节点的方式，都能找到目标元素完成相关操作。所以，此组题目的考点分为至少两层，即 DOM 相关 API 熟悉程度与高性能的 DOM 操作技巧。", "看了评论一圈，写了个答案，试了下应该没问题。另外，我这里不涉及字符串转码，看了各位用 html 而非 text 的，其实只用把“<”这个符号转成“&lt;”就可以了，其他的比如“>”是没必要转的^_^。\r", " 基础", "上面的链接地址后面有“基础”两个字的，被 V2EX 给分开了，要加上才能定位到正确的位置。", " 写的很赞，目前最靠谱的答案了，细节再小改下就行"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><pre><code>package com.xfunforx.zfbar;\nimport android.content.pm.ApplicationInfo;\nimport android.content.pm.PackageInfo;\nimport android.os.Bundle;\nimport android.view.View;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport de.robv.android.xposed.IXposedHookLoadPackage;\nimport de.robv.android.xposed.XC_MethodHook;\nimport de.robv.android.xposed.XC_MethodReplacement;\nimport de.robv.android.xposed.XposedBridge;\nimport de.robv.android.xposed.XposedHelpers;\nimport de.robv.android.xposed.callbacks.XC_LoadPackage;\n\npublic class ARzfb implements IXposedHookLoadPackage {\n    static {\n        XposedBridge.log(\"===============zfb module========\");\n\n    }\n\n    public static final String apmClassName = \"android.app.ApplicationPackageManager\";\n    public static final String apmClassMethodName1 = \"getInstalledApplications\";\n    public static final String apmClassMethodName2 = \"getInstalledPackages\";\n    static Object af;\n    Map hooed = new HashMap();\n\n    @Override\n    public void handleLoadPackage(XC_LoadPackage.LoadPackageParam loadPackageParam) throws Throwable {\n        if (loadPackageParam.packageName.equals(\"com.eg.android.AlipayGphone\")) {\n            XposedBridge.log(\"===============zfb found========\");\n\n            XposedHelpers.findAndHookMethod(\"com.alipay.mobile.base.security.CheckInject\", loadPackageParam.classLoader, \"a\", new XC_MethodHook() {\n                @Override\n                protected void afterHookedMethod(MethodHookParam param) throws Throwable {\n                    XposedBridge.log(\"****** w假装没有root\");\n                    param.setResult(false);\n                }\n            });\n\n            XposedHelpers.findAndHookMethod(\"java.lang.ClassLoader\", loadPackageParam.classLoader, \"loadClass\", String.class, new XC_MethodHook() {\n                @Override\n                protected void afterHookedMethod(MethodHookParam param) throws Throwable {\n                    final Class re;\n                    if (param.getResult() != null) {\n                        re = (Class) param.getResult();\n                        String cn = re.getName();\n//                        关键字判断\n                        \n                        if (!cn.contains(\"arenvelope\")) {\n                            return;\n                        }\n//                        下面逻辑防止重复hook，加快速度\n\n                        if (hooed.containsKey(cn)){\n                            return;\n                        }else{\n                            hooed.put(cn,cn);\n                        }\n\n                        if (cn.equals(\"com.alipay.android.phone.arenvelope.ui.find.ArFindActivity\")){\n                            XposedHelpers.findAndHookMethod(re, \"onCreate\", Bundle.class, new XC_MethodHook() {\n                                @Override\n                                protected void afterHookedMethod(MethodHookParam param) throws Throwable {\n//                                    这里保存 af，到时打开红包需要用到\n\n                                    af = param.thisObject;\n                                    XposedBridge.log(\"save the af==\"+af.getClass().getName());\n                                }\n                            });\n                        }\n\n                        if (cn.equals(\"com.alipay.android.phone.arenvelope.ui.find.ah\")){\n//                            这个是投诉红包的那个菜单栏\n\n                            XposedHelpers.findAndHookMethod(re, \"onClick\", View.class, new XC_MethodReplacement() {\n                                @Override\n                                protected Object replaceHookedMethod(MethodHookParam methodHookParam) throws Throwable {\n                                    Object lc = XposedHelpers.getObjectField(af,\"f\");\n//                                  可以把下面这个id换成你自己找的图片id\n//                                  调用下载的方法直接开启红包\n\n                                    XposedHelpers.callMethod(af, \"a\", lc, \"m0hkS3iXQNKXet4dGUVkNAAAACMAAQED\");\n                                    return null;\n                                }\n                            });\n                        }\n                    }\n                }\n            });\n\n            final Class&lt;?&gt; apmClass;\n            try {\n                apmClass = XposedHelpers.findClass(apmClassName, loadPackageParam.classLoader);\n            } catch (XposedHelpers.ClassNotFoundError e) {\n\n                return;\n            }\n\n            try {\n//                隐藏xposed\n\n                XposedHelpers.findAndHookMethod(apmClass, apmClassMethodName1, int.class, new XC_MethodHook() {\n                    @Override\n                    protected void afterHookedMethod(MethodHookParam param) throws Throwable {\n                        XposedBridge.log(\"****************InstalledApplicationsHook\");\n                        List installedApplications = (List) param.getResult();\n\n                        ArrayList&lt;ApplicationInfo&gt; sortedOutApplications = new ArrayList&lt;&gt;();\n\n                        for (Object application : installedApplications) {\n                            ApplicationInfo applicationInfo = (ApplicationInfo) application;\n\n                            if (!applicationInfo.packageName.contains(\"de.robv.android.xposed.installer\")) {\n                                sortedOutApplications.add(applicationInfo);\n                            }\n                        }\n\n                        param.setResult(sortedOutApplications);\n                    }\n                });\n            } catch (NoSuchMethodError error) {\n                ;\n            }\n\n            try {\n//                隐藏xposed\n\n                XposedHelpers.findAndHookMethod(apmClass, apmClassMethodName2, int.class, new XC_MethodHook() {\n                    @Override\n                    protected void afterHookedMethod(MethodHookParam param) throws Throwable {\n                        XposedBridge.log(\"**************InstalledPackagesHook\");\n                        List installedPackages = (List) param.getResult();\n\n                        ArrayList&lt;PackageInfo&gt; sortedOutPackages = new ArrayList&lt;&gt;();\n\n                        for (Object installedPackage : installedPackages) {\n                            PackageInfo packageInfo = (PackageInfo) installedPackage;\n\n                            if (!packageInfo.packageName.contains(\"de.robv.android.xposed.installer\")) {\n                                sortedOutPackages.add(packageInfo);\n                            }\n                        }\n                        param.setResult(sortedOutPackages);\n                    }\n                });\n            } catch (NoSuchMethodError error) {\n\n            }\n\n        }\n\n    }\n}\n</code></pre>\n</div></div>"], "reply": "3", "tittle": "2017 年第一发。。。。分享代码。", "comment": ["可惜 android 7.1 还没有 xposed 框架", "有已经编译的 apk 嘛", "很感谢，可以拿去研究，但是也和遗憾，我是 Android 7.1"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>在 upwork 上面，找了一些 app 开发者进行合作，由于语言障碍，除了任务沟通之外，很少有更广泛的交流，毕竟大家的时间都是有成本的。所以想找说中文的移动开发者长期合作，国内有哪些社区移动开发者比较活跃？</p>\n</div></div>"], "reply": "41", "tittle": "怎样找到长期合作的移动开发者", "comment": ["找我吧、", "移动开发者很多的，尤其是 iOS 和 Android", "找我吧", "找我吧", "可以找我，目前小团队俩人， iOS Android 都可以做", "对了，再多唠叨一句，平均工作经验 7 年+", " 你是那个工龄少的吗 xd", "Android 开发来围观", "iOS 开发者前来围观", "欢迎找我", "外包找周围的朋友不就行了", "找我吧", " 找朋友介绍比较靠谱，或者舍得花钱的话就找业内比较有名的几个人", "混合应用？ WEBAPP?", "android 开发前来朝圣", " 认识这方面的朋友比较少", " 目前是单纯的移动 app", "6 年 iOS", " 有兴趣可以单独聊，我的微信就是我的 id", "Android 开发前来报到~", "从自己的朋友里找\r", "从朋友的朋友里找\r", "\r", "网上除非花大精力 *漫无目的* 的去结识一堆朋友（我朋友给我的找合作者的建议），然后再筛选，否则很难找到靠谱的。\r", "当然这个建议我还没有决定要采纳，毕竟话费的精力要很多很多。", "找我吧", "Android 方面可以找我，两名 5 年+的 Android 开发者的团队，任职于 BAT 公司。", " 哥们是在哪个城市呢？", " 目前两人分别在南京、无锡，万一以后做大了（允许我 YY 一下），需要壮大，我们也会继续保持远程团队的形式。哥们如果有意可以加我详谈，我的联系方式很容易找到", " 你们招人不？", " 暂时不招，因为还没有到那个规模。即便以后要招人，我们也是寻求跟我们一样的全职远程小伙伴入伙，不是说招人进来给他发固定工资那种。", "新项目建议做微信小程序，开发成本比 app 低不少，而且有流量红利，苹果 app store 前中国区总裁透露的数据 2016 上半年 75%用户没安装过新 app 了", " 我说的就是远程的，不是全职的。", "6 年 ios ，可感兴趣？？", "认为靠谱的，加个微信认识一下吧 henry_laohu", "给钱是最好的沟通方式", "今年 3 月份到 7 月份成功交付了两个 iOS app ，有兴趣可以加我微信 lyle92 ，可以给你以给你一个邀请看看 bitbucket 上的项目源码。 iOS 开发经验 3 年", "问下移动公司的人呢?", "6 年 iOS 和 Android 加 3 个月 React （小黄人捂脸）", "这多开发者都愿意揽私活，不过貌似国内没有一个靠谱的服务开发者兼职的平台，像海外的 freelanucher 一样", " 微信小程序个人做不了啊，只有企业才可以做。", "  这个问题都解决不了，说明这还不是你的菜", " 求指点。我以为只能注册一家公司来做小程序了，你的意思难道是随便拿一家公司的信息来用？", " 必须要公对公账号打款验证，你就没朋友开公司吗，一个公司可以注册 50 个小程序", " 明白了，多谢！昨天我搜索了一下，只看到有人说随便拿一家公司的公开信息去注册，感觉那么不靠谱。"]},
{"content": ["<div class=\"topic_content\">价位在 30w 左右的。</div>"], "reply": "15", "tittle": "求推荐一款代步车，各位老司机。", "comment": ["BMW3 低配", "top gear 告诉我们 GTI 是这段位的极品", " 3q 。先去研究一下", "A6", " 可以到 a6 ？那要去看看", "我也想说 BMW3", " 整体价位 30w 能搞定么", "Atsl 值得推荐", "哎,新司机真有钱啊,代步车也是 30w 起步 😁", "CT200h", "明确一下需求普通轿车还是 SUV ，空间，乘坐人数，风格偏向（舒适 or 运动）。。。 LS 推荐的 ATS CT200H 都挺好的 另外我觉得 X1 或者 1 系也可以", " 舒适宽敞就好了， suv 就不用了哈", "m2", "这个价位 BMW 3 是最适合年轻人的，你可以搜一下 38 号车评的 30 万元买什么车。", "countryman"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>R.T.\n或者 Vmware 或者 Hyper-V 可以吗？</p>\n</div></div>"], "reply": "5", "tittle": "Virtualbox 的虚拟机中可以调用外部宿主的 GPU 运行 CUDA 相关程序吗？性能损失多少？", "comment": ["PCI-Passthrough 可以 但宿主就没有 GPU 了", "如果不是一定要用虚拟机的话， lxc 和 nvidia-docker 都可以。我们公司的开发机是把 nvidia-docker 当虚拟机用，我们实验室是用 lxc 。但问题也是很明显，宿主机的显卡驱动如果崩了的话，全部都崩了。我们在公司里面就经常遇到这种情况，就跟传染病一样，一堆进程都变成 D 了，只能重启。\r", "\r", "显卡的虚拟化现在还是未知数，无论是软件还是硬件都还没做好准备。要么如楼上所说用 PCI Passthrough ，要么就像我们一样只做隔离。", " 我曾逛过", "用 kvm 可以", "PCI Passthrough 还是需要 host 来转发 interrupts 的。\r", "nv-docker 稳定性确实有点捉急，但多调试也能用。\r", "GPU 虚拟化成熟的解决方案只有 Grid ，不过那就不是个人和小公司能买得起的了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"Imgur\" src=\"http://i.imgur.com/GU4FtSK.png\"></p>\n<p>油猴脚本： <a href=\"https://github.com/DistPub/PrivateWWW/blob/master/github.com/statistic.js\" rel=\"nofollow\">https://github.com/DistPub/PrivateWWW/blob/master/github.com/statistic.js</a></p>\n<p>安装好脚本后访问： <a href=\"https://github.com/YOUR_USER_NAME?show_current_year_statistic\" rel=\"nofollow\">https://github.com/YOUR_USER_NAME?show_current_year_statistic</a></p>\n</div></div>"], "reply": "32", "tittle": "2016 你的 Github 成绩单", "comment": ["7 位数的代码量？我数错了嘛？", " 你没数错，今年我将一些很多年前的 svn 下的 code 放到了 Github 的 private repo 上，统一管理了。", "图挂了", " 没挂 ，是 imgur 的，请自备梯子", "github token 是？", " ", " 给 repo 权限就好了，记得下面还有 read", " \r", "我的。。貌似没啥贡献。。", "仓库太多就出错了", "  也或者是空仓库，刚刚刷新了，没看报错信息。。", "空仓库报错:\r", " Failed to load resource: the server responded with a status of 409 (Conflict)", " ni\r", " \r", "\r", "空仓库会导致收集到空仓库时 hanging ，不会导致报错，我 fix 了，更新一下脚本，再访问 ", " 脚本还是会在我的一个过期被禁用的 private 仓库时停止继续跳转,似乎是因为被 disable 了所以返回了一个 404?\r", "虽然这个东西多少有点用，但是总是有 show off 的感觉= =", "copyright xxxx-2017\r", "\r", "各位可以区各大 repo 提 request 了", " 虚荣是最美好的罪恶", "在逛自己创建的 organization 时看到一个 repo ，显示 0 contributor ，然后提交 MR 的人确实是我自己，却点不开。。有没有老司机知道为啥啊\r", "\r", " ", " ", " 当然脚本遍历到这里的时候也就中止了。。", " 过期被禁用 我不知道怎么生成这种 case ，你有条件 feel free fork and fix it then PR me", " 我也遇到了, 把仓库删了之后就永远 404...", " 应该是 git log 里的 email 地址未在 Github 注册过，你可以在 ", " 里添加", " 只是想统计一下今年的 commits addline deleteline 官方 API 目前未开放 date filter ，所以只能 monkey hack 了，没其他意思", "被 DMCA 拿掉的仓库也会报错 Error451", " 这个……其实已经写成代码了，为了这个牺牲了一点性能。", " 确实，看了提示，曾经错用公司企业邮箱的 user push 了代码，现在加上就好了", "880 contributions in the last year", "878 contributions in the last year", "395 contributions in the last year", "请问油猴脚本怎么安装", "16 年 9 月中旬开始频繁使用 github 管理个人项目\r", "403 contributions in the last year", "你们的 Github 这么多代码，是公司的项目还是自己的客户时间项目呢？", " chrome 安装一个插件叫： "]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近想写项目，无奈找不到好看的国外网站上的是不错，但是大多都是收费的，国内的找不到好的资源，</p>\n</div></div>"], "reply": "3", "tittle": "话说程序员下模板都在那里下？", "comment": ["没有这么绝对的吧  看你做什么项目啊", "同求", "\r"]},
{"content": ["<div class=\"topic_content\">是不是非要分开写啊？\r<br>我试过  location ^~ /(lib|images|js)/  这样的写法好像是不行</div>"], "reply": "5", "tittle": "Nginx 中 location ^~ /lib/ 如果想匹配多个路径怎么办？", "comment": ["location ~ ^/(lib|images|js) \r", "\r", "犯这样的错误，自觉发个 5.55¥红包给你女神", "location ^~ /(lib|images|js)/", "一不小心发错了~\r", "location ^~ /(lib|images|js)/ \r", "不是正则匹配.\r", "正则匹配只有  ~   ~*\r", "因此要这么写\r", "location ~ ^/(lib|images|js)", "感谢~"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我感觉每门语言都有很多细节 /使用习惯 /设计理念需要去掌握, 适应.  切换语言而且要求切换过去之后整个的思路写法什么的全部符合该语言的习惯有点困难啊. 不知道大家怎么搞定的?</p>\n<p>PS, 那种临时抓本书操练几个小时就直接开撸程序的不在我的讨论范围, 我觉得那种写出来的代码大部分是垃圾, 对, 就是垃圾.</p>\n</div></div>", "<div class=\"topic_content\">又看了一下我的主帖, 最下面一段说是垃圾有些过分了, 虽然这么写出来代码质量确实很大可能不高. 大家忽略最后一段,抱歉.</div>"], "reply": "84", "tittle": "大家是怎么熟练的在两门以上语言之间切换的?", "comment": ["把相似的点列在一张纸上或者文档里，用得多了就记住了。", "前端：我每天在至少 3 门语言中切换", "\r", "\r", "PS, 代码垃不垃圾由市场决定.", "你选类 c 的语言就好了。。", " 说的貌似好有道理, 但市场谁管你代码烂不烂, 反正出问题让开发人员没日没夜的填坑罢了.", " 好奇是哪三门?", "个人经验\r", "1 、不要听所谓高人指引，保持思路的流畅性是最重要的，因为你一天能写多少代码啊，一半时间在思考 1/4 时间在发呆吧，拉姆达表达式、函数式编程固然好，但是你都按 c 的套路写也没问题，只要按编码规范，定期代码审查，现在又不是说谁写的代码短谁就效率高，也没人无聊去考究 forEach 和 for 循环哪个效率高\r", "2 、造轮子之前查一下别人做过没有，很多时候你写出垃圾代码是因为你做的东西可能就是库函数一句话，或者有那种炒鸡成熟的实现，这种就不要做了，别人的代码身经百战了，什么项目没用过？比如我要实现 array 里元素的 swap ，这是大学 c 语言里最基础的编程了，不，但是这样写不 js ，于是我搜 npm array swap 果真别人已经封装好了，有兴趣可以看看那些奇技淫巧都是怎么做的，学不来你还引不来么\r", "3 、个人感觉，不是太牛逼的选语言还是围绕类 c 语言来选，函数式语言不是那么好理解的", "前端： node.js 从入门再入门 对了 iOS Dev 还有 swift", "  该不会是 HTML / CSS / JS 吧...", "比如我写 Python 的时候得强迫自己写出 Java 风，写 Ruby 的时候则要写出 Lisp 风。\r", "\r", "有时候感觉挺难的。", "把搜索引擎的窗口备好，哪里忘了查哪里。", "打开自己的代码库，照着风格写。", "每门都学的浅，或者每门都学的深。都没这个问题。\r", "学的浅的你已经 BS 了，解决办法当然是往深了学了。", "多語言(Python, C#, Javascript)+多系統之間切換(Windows, Mac, Linux Server), 久了就習慣了", "php js 常常搞错", " 我咋感觉函数比类简单呢，一般上手也是先学函数再学类啊", "我反正写 Python 的时候总能写出一股 C 风，写 C 的时候一股 Python 风……", "学 C++, 然后各种设计理念就都懂了", " 函数式语言😂不是函数", "降低对于语言风格的敏感度", " oops ，想到了 Scheme ……", " 23333", "1. 用比较强的规范约束自己的代码风格\r", "2. 用 IDE", "xml 算语言么 如果算的话大部分人每天都在至少两门语言中切换吧", "做网站的：\r", "html css javascript\r", "php sql json xml\r", "嗯。。几门了。。。", "同时在 N 多语言中切换。。刚切过去的时候比较混乱会忘记自己在写什么，写两行熟悉下就好了", "平时工作用 c, bash, awk, python, html, javascript, ecma script\r", "自己的业余项目用 c++, c#, python\r", "\r", "切换起来没太大困难，多用用就熟了", "IDE", " 这个网站赞啊", "每天在 c python matlab verilog vhdl 间切换，有时需要看自己的老代码来回忆一下正确的语法", "我以为是普通话和粤语", "前端工程师笑而不语", "IDE 的重要性\r", "然后还有代码规范\r", "\r", "感觉还好吧", "不太严格的讲，一个编程语言有数组、 if 、 for 或函数调用就是图灵完全的。用这些啥都能写出来了。", " 函数式编程。。。可能我打错了？", "多语言之间切换\r", "多编辑器之间切换\r", "多浏览器之间切换\r", "多操作系统之间切换\r", "#神级操作", "用 google 就好了", "每天要用到: 接 sdk ， Java,Objective-C ， php,lua ,c++ ,打包工具 Python,JavaScript 。\r", "现实就是，经常会间歇性地对正在用的语法产生怀疑", "js, python, php 经常搞混。。。", "前端： HTML 、 CSS 、 JavaScript 、 node.js 、 Vue.js", "  HTML , css  JavaScript 呗～～～ 又或者 react , sass , typescript ，各种", "Java Python Scala 混用，表示还好.......\r", "\r", "Python 不建议用 map/reduce ，建议用 list-comprehension 来解决问题。但 Scala 虽然有 for-yield ，却一直要用 map/reduce 一系列的函数式操作来处理 Immutable Object ...\r", "\r", "Java 语法是 verbose yet obvious ， JavaBean 风格的代码写着好变态，但 Java 的 GC 和应用场景都不用说，不用都不好意思", "唯手熟尔", "好多前端强行几种语言，能够算得上的只有 JS 吧，还有框架跟语言分不清的～～", "python C C#。。。。", "html  css js 算 3 种语言么😂", "原来有段时间同时写 Python JS Java ，写出来都是 JS 风格…", "前段时间写数据结构，在 C C++ Java Objective-C Swift 之间切换。。。\r", "之前看 iOS 的视频，看 OC 直接翻译成 Swift 。。。", "多写代码", "经常接触", "搞定一门语言，然后在这个基础上延伸", "写网页可以快速在 html ， css ， js 里切换。因为它们完全不同。一个阶段只能写一种主语言，写 swift 的时候换到调试 java 会疯的。写之前先要进入状态，先设想一下可能使用的伪代码，然后写实现。上层逻辑是差不多的，比如都是 mvc 模型。后端都是路由加 api ， php 和 nodejs 是完全一样的。数据库访问 sql 和 nosql 完全不一样，建议别混写。我在同时写后台 nodejs 加 mongodb 和前台 android 加 sqllite ，尽量把数据访问包装成相同对象，相同方法和属性，只在真正实现方法上再写不同。以前从来不在 java 里用 callback 的，现在上来先写 interface …所以，用多种语言习惯了也没那么可怕，但过程确实痛苦。", "在 Python 3, PHP, JS, C/C++, HTML/CSS, zh-CN, en-US, ja-JP 之间切换过，感觉基本上忘了的话就去查文档吧。\r", "至于习惯思路之类的基本上有一种跟语法一体的感觉。", "我精通的一门编程语言叫做 BUG", " 还有多性别之间切换", "各自的 IDE 一定要有。", " python 为什么不建议 map/reduce?", " 这几个具体都做到了，特别是操作系统。现在 3 个主流操作系统都在用", "熟能生巧", "肌肉反应", " 因为可读性差。 3 里面已经把 reduce 放到 functools 目录下了，必须引用才能用", "其实楼主应该是想问如何在特性不同但可用在同一领域的语言中切换；比如同样是服务端开发，有时候会因为追求不同特性而在一个项目的不同子项目使用不同语言，举个例子，基础业务使用 JS ，部分旧业务不重写继续用 Java 、 PHP 、 Ruby ，认证授权使用 C++，在一个迭代中可能需要在这些语言中来回切换。。。\r", "\r", "不同语言对面向对象、同步异步思想等等支持是不一样的，设计程序和架构的时候也要区分考虑。\r", "\r", "这也是我比较困惑的问题，有的时候甚至是同一门语言用在不同地方也是不一样的，比如 JS 用在服务端有 require 很方便，但用在前端通常都是在 babel 下用 import ，然后在旧版 MongoDB 中只能用 ES5 。\r", "\r", "可能搜索引擎做速查是个比较靠谱的方法。", " [handshake][handshake]", "一般写游戏程序前端用 c#，后端用 java ，切换难度小，有时候会写 js ，这个时候难度较大，需要自己以前的学习笔记和 google", "我平时的工作就是在 Java 和 Python （严格来说是 Jython ）之间切换，偶尔在语法上会出现一些交错，但都是小问题。编程主要还是一个思路问题，两种语言让我思路更开阔，不会被一种语言的缺点束缚，在一种语言有瓶颈的时候也许另一种可以轻松解决。", "写 Python 的时候总想加分号……", " 加分号也没错吧", "C++   PHP 作用自如\r", "结尾都要;\r", "不慌", "JS PY C VHDL Matlab 这一个学期同时用简直痛不欲生", "只要别碰硬件描述语言，什么都好说，硬件描述语言无论之前用什么熟都会感到别扭", "C++/Python 切换的时候，写 Python 常写 if/while 带括号、语句带分号，不过 pep8 提示一下写写就换过来了", "没什么问题好像， js 、 C#、 sql 无缝切换", "多写", "问这类问题的时候，脑子里是不是只有代码实现本身？\r", "\r", "在代码实现之外，技术还有很多东西\r", "在技术本身之外，依然还有很多东西\r", "\r", "代码垃圾不垃圾就那么重要吗？", "边百度边写", " 加了倒是也能用 但是一般都不加……", "Java+JS 是少不了的", "还有个 SQL 也跑不掉", "脑子里第一个想到的就是 IDE 里，不同的语言不同的高亮规则。。。", "Java/Python/JS/Node.js/PHP/HTML/CSS ，目前就这些，我觉得还好，不会混乱", "项目间切换会慢一点\r", "特别是工作与个人项目的切换，架构与底层技术都不一样\r", "做技术不能怕麻烦", "切换语言？很多时候可能是因为切换了项目，讲真，老切换项目容易心情烦躁。", "你会看到我在 PHP 里莫名其妙调用 Python 解析器。", "我的经验是，当你使用两门语言都很熟练的时候，切换起来就容易了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>很久都解决不了的 Chrome 浏览器无声音的问题， IE 正常，其他浏览器都不行（ 360 安全浏览器、 chrome ）。\n1 、检查过音乐合成器是否禁用了 chrome ；\n2 、检查过 alt+w 快捷键屏蔽声音的问题；\n3 、试过 chrome://plugins 禁用 flash ，然后重新安装；\n4 、试过安装非 IE 内核的 flash ；\n5 、卸载重装过声卡显卡；\nTAT ！ always did not work ！\n有人知道的吗，能给个解决方案？除了重装系统！！！ thx a lot !</p>\n</div></div>", "<div class=\"topic_content\">因为一直用的是音响，刚才用耳机试了一下竟然可以，为啥音响突然就不行了呢？音响只支持 IE</div>", "<div class=\"topic_content\">重装了系统还是 GG ，最后发现是音箱设置的问题。。 blocked and thanks 。。</div>"], "reply": "24", "tittle": "很久都解决不了的 Chrome 浏览器无声音的问题", "comment": ["RT ", " ==;这是让我换浏览器的节奏？", "Windows 7 ？看看音量属性，", "更新版本。。？", "一般重装系统最简单", " 最新的，卸载重装过了\r", " 试过，第一条就是\r", " 我知道，但是并不想重装，而且很想知道折腾我这么久的原因是什么", "为什么折腾 Flash ？是看视频没有声音还是全部没声音？", " 完全，网页音乐也不行，刚才 google 官网下载 chrome 重装仍然不行", "我的 Chrome 也是刚开始网易云的音乐还可以放，现在就没声音了", "没遇到过，不过我猜跟默认播放设备有关，可以往这方面查查", " 解决了吗", " 默认播放设备？我用的音响不可以，耳机可以", " 没有更多信息提供了", " 没解决，没找到原因", "确实很怪。声音-播放-设置为默认值。\r", "一般如果驱动不配套，耳机 he 音响之间无法自动切换的，需要手点。\r", "还是检查声卡驱动配套。", "先用录音软件来录制自己电脑的声音看看（那个是截声卡的）从而排除硬件问题", "dxdiag 运行之后有没有报错？声音测试是否正常？\r", "设备管理器有没有任何设备显示问号或感叹号？\r", "除了浏览器，其它单机音乐、视频播放器是否有声音？", "是前面还是后面，看驱动程序，删除重新装", "大家有木有考虑过也许是答主聋了→_→", " 还需要什么其他信息？", " 好吧", " 之前是可以的，现在突然就不行了，好像是 chrome 之前的 flash 过期后才出现的", " ", " ", "除了非 ie 浏览器，其他都完全没问题", " 后面，试过了呢", " 你才是答主吧😏😏", " 不好的意思，我的意思是「我没有更多信息提供了」，需要你自己去做尝试\r", "\r", "我给的方向是「默认播放设备」这个配置，试着挖一下", " ok ， thx!", " 你才是答主啊哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈", " 很明显知乎逛多了， 2333333333333", "→_→妈蛋"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>老文章，思路依然实用，作为笔记，经常拿出来阅读。</p>\n<p>1.无论什么站，无论什么语言，我要渗透，第一件事就是扫目录，最好一下扫出个上传点，直接上传 shell ，诸位不要笑，有时候你花很久搞一个站，最后发现有个现成的上传点，而且很容易猜到，不过这种情况发生在 asp 居多！</p>\n<p>2.asp （ aspx ）+MSSQL 先考虑注入，一般的注入都有 DBowner 权限可以直接写 shell ；如果写不了，或者 web 与数据库分离，那就猜数据，从后台下手了，后台可以上传或者改配置文件；</p>\n<p>3.asp （ aspx ）+ACCESS 拿 shell 一般只有 3 种方法，一是前台上传或者注入进后台上传；二是注入进后台改配置文件；三是注入进后台备份数据库或者暴库后知道是 asp 或者 asa 数据库于是直接写一句话；</p>\n<p>4.php+MYSQL 一般是注入进后台上传，偶尔运气好些权限够高可以注入 select into outfile ；然后包含，分本地与远程，远程包含在高版本 php 是不支持的，于是想办法本地上传图片文件或者写到 log 里；然后 php 程序某某未公开的漏洞，运气好可以直接写 shell 。</p>\n<p>5.jsp+MYSQL 利用数据库拿权限方面基本同 php ，而且 jsp 的上传基本很少检查文件后缀，于是只要有注入点与后台，拿 shell 相当的容易。 jsp+ORACLE 的站我碰到的不多，碰到的也是猜出用户名与密码从后台下手的。</p>\n<p>6.无论什么大站，主站一般都很安全（不然早被人玩了），于是一般从二级域名下手，猜出主站的某些用户名与密码或者搞到主站的源代码，或者旁注得到同网段服务器后 cain 或 arp 。</p>\n<p>7.一般的大站很少有用现成的 CMS 的，于是如果你有幸找到源码，那你就发了，注入漏洞啊，上传漏洞啊，写文件漏洞啊，都掌握在你手里。多看看那些大站新出来的测试分站点，那些站还在测试中，可以很轻松拿下。</p>\n<p>8.上传有个文件名截断，这包括 2 个方面，一是 00 截断，二是长文件名截断（曾经利用这个搞下 hw ）；然后很多写文件的地方，都可以 00 ，屡试不爽。上传别忘了.asp （当然.asa ，.cer ，.cdx 都可以啦）目录的妙用。</p>\n<p>9.php 站无论 windows 还是 linux ，都有 magic_quotes_gpc 的问题， magic_quotes_gpc 为 on 的时候，在 server 变量注入的时候还是可以 select into outfile ，今年我搞过某未开源 cms 就是这个情况，一般情况下为 on 就别考虑写文件了，不过有这个权限别忘了读文件源码，因为 load_file 的参数是可以编码的。</p>\n<p>10.猜路径或者文件在入侵中非常必要，猜不到路径的时候别忘了 google （ baidu 太烂， google 很全），于是你可以考虑看站点下的 robot.txt 或者 robots.txt ，会有惊喜。</p>\n<p>11.工具的使用很重要，入侵之前用 WVS 扫扫会有助入侵；注入工具虽然很多，但不见得都好使，现在的软硬防火墙、防注入越来越厉害，那时候你就别偷懒，多手工有助你成长。</p>\n<p>12.遇到过一流监控么，遇到其他防 post 的防火墙么，有时候一句话进去了都无法传大马，那时候，你先学学编码，学学变换绕过。</p>\n<p>13.想搞一般的小站，记得查看这个小站的版权，找做这个站的公司，然后从这个公司做的其他站下手，得到源码再回头搞，我曾经通过这个方法拿下某知名制药的公司站。</p>\n<p>14.旁注的思路永远不过时，遇到 dbowner 的注入，可以很舒服写 shell 到你需要的站，省得麻烦的提权了；运气不好，按部就班拿 shell 提权得到你所需。</p>\n<p>15.永远别忘记社会工程学，利用社工把自己当成一个什么也不会的人，从某某站长的 qq ，身份证，邮箱等等下手，也许有时可能会有意外；另外别忘记 admin,admin ； test,test ； 123456,123456 这种简单的尝试，当然，你也可以暴力破解。</p>\n<p>16.别忽视 XSS ，别忽视 cookie ， XSS 可以偷 cookie ，更有若干妙用，自己学会领悟； cookie 可以伪造登陆， cookie 可以注入， cookie 注入可以绕绝大多数的防火墙。</p>\n<p>17.平时搞站多多搜集路径啊，源码啊，工具啊，充实自己的“武器”库；最好把自己的入侵步骤记录下来，或者事后反思下，我一般都是记在 txt 里，另外要做到举一反三。</p>\n<p>18 、到 GoogLe,搜索一些关键字,edit.asp? 韩国肉鸡为多,多数为 MSSQL 数据库!</p>\n<p>19 、到 Google ,site:<a href=\"http://cq.cn\" rel=\"nofollow\">cq.cn</a> inurl:asp</p>\n<p>20 、利用挖掘鸡和一个 ASP 木马. 文件名是 login.asp 路径组是 /manage/ 关键词是 went.asp 用'or'='or'来登陆</p>\n<p>21 、关键字： Co Net MIB Ver 1.0 网站后台管理系统帐号密码为 'or'='or'</p>\n<p>22 、动感购物系统 inurl:help.asp 登陆，如未注册成为会员! upLoad_bm1.asp 和 upLoad_c1.asp 这两个随便选个，一般管理员都忽视了这 2 漏洞</p>\n<p>23 、默认数据库地址 blogdata/acblog.asa 关键字： acblog</p>\n<p>24 、百度 /htdocs 注册里可以直接上传 asa 文件！</p>\n<p>25 、/Database/#newasp.mdb 关键词： NewAsp SiteManageSystem Version</p>\n<p>26 、用挖掘机 关键字： Powered by WEBBOY 页面：/upfile.asp</p>\n<p>27. baidu 中搜索关键字 Ver5.0 Build 0519 (存在上传漏洞)</p>\n<p>28. Upfile_Article.asp bbs/upfile.asp 输入关键字： powered by mypower ，</p>\n<p>29. inurl:winnt\\system32\\inetsrv\\ 在 google 里面输入这个就可以找到很多网站</p>\n<p>30. 现在 GOOGLE 搜索关键字 intitle:网站小助手　 inurl:asp</p>\n<p>31. 键字： 首页 最新动态 新手指南 舞曲音乐 下载中心 经典文章 玩家风采 装备购买 站内流言 友情连接 本站论坛挖掘鸡的关键字 添 setup.asp</p>\n<p>32. VBulletin 论坛的数据库默认数据库地址! /includes/functions.php 工具: 1.网站猎手 下载地址:百度 Google! 2.Google 关键字: Powered by: vBulletin Version 3.0.1 Powered by: vBulletin Version 3.0.2 Powered by: vBulletin Version 3.0.3 其中一个就可以了</p>\n<p>33. 1.打开百度或 GOOGLE 搜索，输入 powered by comersus ASP shopping cart open source 。 这是一个商场系统。 2.网站的最底部分，有个 Comersus Open Technologies LC 。打开看下~~comersus 系统~ 猜到,comersus.mdb. 是数据库名数据库都是放在 database/ 后的, 所以 database/comersus.mdb comersus_listCategoriesTree.asp 换成 database/comersus.mdb ，不能下载。那样把前一个 ''store/''除去，再加上 database/comersus.mdb 试试</p>\n<p>34. 无忧传奇官方站点程序。 1 、后台管理地址： http://您的域名 /msmiradmin/ 2 、默认后台管理帐号： msmir 3 、默认后台管理密码： msmirmsmir 数据库文件为 http://您的域名 /msmirdata/msmirArticle.mdb 数据库连接文件为 ***********/Conn.asp</p>\n<p>35. 百度里输入 /skins/default/</p>\n<p>36. 利用挖掘机关键机:power by Discuz 路径:/wish.php 配合: Discuz!论坛 wish.php 远程包含漏洞 工具使用</p>\n<p>37. 上传漏洞. 工具 : Domain3.5 网站猎手 1.5 版关键字 powered by mypower 检测的页面或文件插入 upfile_photo.asp</p>\n<p>38. 新云漏洞这个漏洞 ACCESS 和 SQL 版通吃。 Google 搜索关键字 \"关于本站 - 网站帮助 - 广告合作 - 下载声明 - 友情连接 - 网站地图 - 管理登录\" 把 flash/downfile.asp?url=uploadfile/../../conn.asp 提交到网站根目录。就可以下载 conn.asp 以源码，软件等下载站居多。大家时常碰到数据库如果前面或者中间+了# 可以用%23 替换就可以下载了 \\database%23newasp.mdb 如：#xzws.mdb 改成%23xzws.mdb</p>\n<p>39. 通吃所有商城+动力上传系统使用工具:挖掘鸡 v1.1 明小子商城入侵: 关键字:选购-&gt;加入购物车-&gt;去收银台-&gt;确认收货人信息-&gt;选付款方式-&gt;选配送方式-&gt;在线支付或下单后汇款 -&gt;汇款确认-&gt;发货-&gt;完成漏洞页面:upload.asp upfile_flash.asp 动力入侵: 关键字:powered by mypower 漏洞页面:upfile_photo.asp Upfile_Soft.asp upfile_adpic.asp upfile_softpic.asp</p>\n<p>40 、动易列目录 admin_articlerecyclebin.asp inurl:admin_articlerecyclebin.asp</p>\n<p>41 、工具:网站猎手关键词:inurl:Went.asp 后缀:manage/login.asp 口令:'or'='or'</p>\n<p>42 、入侵魔兽私服需要的工具： ASP 木马一只。 Domain3.5 明小子关键字： All Right Reserved Design:游戏联盟后台地址： admin/login.asp 数据库的地址： chngame/#chngame.mdb</p>\n<p>43 、漏洞是利用管理员 iis 设置的失误用 baidu 关键字就是比较罕见的脚本名动网: ReloadForumCache.asp Leadbbs: makealltopanc.asp BBSXP: admin_fso.asp 动易: admin_articlerecyclebin.asp</p>\n<p>44 、国外站的爆库漏洞关键字： sad Raven's Guestbook 密码地址:/passwd.dat 后台地址:/admin.php</p>\n<p>45 、 关键字：尚奈克斯后台路径 /system/manage.asp 直接传 ASP 木马</p>\n<p>46 、 工具 1:网站猎手 2:大马一个关键字:切勿关闭 Cookies 功能，否则您将不能登录插入 diy.asp</p>\n<p>47 、关键字:Team5 Studio All rights reserved 默认数据库:data/team.mdb</p>\n<p>48. 工具: 挖掘机 辅臣数据库读取器关键字: 企业简介 产品展示 产品列表后缀添加: /database/myszw.mdb 后台地址: admin/Login.asp</p>\n<p>49. 关键子 XXX inurl:Nclass.asp 在\"系统设置\"里写个木马。会被保存到 在 config.asp 内。</p>\n<p>50. 不进后台照样拿动网 WEBSHELL data.asp?action=BackupData 动网数据库备份默认路径 36. 工具:网站猎手 WebShell 关键字:inurl:Went.asp 后缀:manage/login.asp 弱口令:'or'='or'</p>\n<p>51 、 入侵雷池新闻发布系统关键字:leichinews 去掉 leichinews 后面的. 打上:admin/uploadPic.asp?actionType=mod&amp;picName=xuanran.asp 再上传马..... 进访问 uppic anran.asp 登陆马.</p>\n<p>52. 一、通过 GOOGLE 搜索找大量注入点关键字： asp?id=1 <a href=\"http://gov.jp/\" rel=\"nofollow\">gov.jp/</a> asp?id= 页数： 100 语言：想入侵哪个国家就填什么语言吧</p>\n<p>53. 关键字： Powered by:94KKBBS 2005 利用密码找回功能 找回 admin 提问:ddddd 回答:ddddd</p>\n<p>54. 关键字:****** inurl:readnews.asp 把最后一个 /改成%5c ,直接暴库,看密码,进后台随便添加个新闻 在标题输入我们的一句话木马</p>\n<p>55. 工具:一句话木马 BBsXp 5.0 sp1 管理员猜解器关键词:powered by bbsxp5.00 进后台,备份一句话马!</p>\n<p>56. 关键字：程序核心： BJXSHOP 网上开店专家 后台:/admin</p>\n</div></div>"], "reply": "50", "tittle": "黑客高手讲诉入侵的 实践经验", "comment": ["上古时期的宝贝换金币啊", "oldjun 的吧", "四处宣扬的黑客绝对不是顶级的", "又是一个自称高手的", ":doge", "嗯，高手帮忙拿下这个站 ", "  ", " ", "恍若还在读初中...", "ueditor 怎么 getshell 啊！旁站拿到学校后台结果没法 getshell", " 同感同感，仿佛捡到了一本 07 年的黑客 x 档案", "哦呵呵。", "如果我说我写了全球第一个 ASP 木马，你会信不？\r", "如果我说我写了第一个 IIS 防范工具，就是安全狗，微盾的祖师爷，你信不？", "不加个《转》 吗", " 是啊，好像回到了初中", "这应该是 2009 年左右的入侵总结吧！到了 2010 年左右上面列的基本上都不能用了！", "现在这些 web 应用哪还是你说的这些了", "mark 一下", "楼主抄了几条百度经验才凑起来的啊", "→_→   一股似曾相识的感觉，我肯定看过这篇。", "我上初中的时候肯定看过……", "mark 一下吧，初中那会儿电脑还没普及，没读过", "这是我的网站： ", " ， asp 语言的，请楼主帮我拿下后台，谢谢😁", "动网.....这是我初中时候玩的了 现在已经基本没人用了", "又在 V2 看到这个。。。", "这篇文章光在 V2EX 就看了好几遍了，我大一的时候都算老文章了，现在算起来快 10 年了吧。", "666", "黑客 X 档案", "仿佛回到了 10 年前", " 暴露年龄", "想起我以前也去黑客 X 档案逛过，还有百度出来的各种挂马黑客网站...一中一个准", "竟无语凝噎", "不说这东西的时代性吧，就这个结构就看不下去，满满的\"懂了点东西就想炫耀\"的气息", "已经差不多十年不玩这玩应了  怎么感觉似曾相识，难不成是十年前的额东西哎", "建议楼主去 看雪 吹", "想起以前高中的时候，拿各种动力，动易，织梦，良精，南方， ecshop ， fck 编辑器， ewebeditor ， iis6.0 畸形文件名，唉，那段疯狂的时光都过去了。", "我看见那个 OR 才反应过来这东西有点老了吧", "  同感，当年看了好多这类东西", "这一波真赚", "挖掘鸡…上古世纪的神器", "远古的脚本小子", "我的博客对前端只允许 POST 和 GET 请求且不允许所有特殊字符\r", "且对全站做了文件验证,自动删除未知文件.\r", "那么如果有人要入侵我的博客他应该怎么做.我需要注意哪方面才能让网站更安全.", "暴露年龄系列", "不支持全文转载？", " \r", "应该是 2004 年左右\r", "根本没有 2009 年那么迟", "不明觉厉啊 我只知道社工", "突然想起来了，老师没收的我的黑客 X 档案还没要回来", "小学生路过膜拜黑客高手，骚年我看你骨骼惊奇，这里有一本绝世秘籍十块钱卖你了", "我小学的时候可是 “电脑高手” 呢！你说厉不厉害！", "又是一个自称高手的", "别黑我们，这都是脚本小子干的事", "怪不得那么要求眼熟 原来是 04 年的"]},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"/i/mHEkO4ls.jpeg\" title=\"在新窗口打开图片 mHEkO4ls.jpeg\"><img src=\"//i.v2ex.co/mHEkO4ls.jpeg\" class=\"embedded_image\"></a>\r<br>\r<br><a target=\"_blank\" href=\"/i/QrIib1U5.jpeg\" title=\"在新窗口打开图片 QrIib1U5.jpeg\"><img src=\"//i.v2ex.co/QrIib1U5.jpeg\" class=\"embedded_image\"></a></div>"], "reply": "目前尚无回", "tittle": "哪个逗逼把优酷打死了。。。", "comment": []},
{"content": ["<div class=\"topic_content\">是这样的~我是公司的维护，想在公司每台电脑上添加一个网络位置，手动操作是没有问题，但是批处理就不是很懂。\r<br>1.用户机系统环境： win7 、 win8 、 win10\r<br>2.FTP 服务器： win2003\r<br>3.FTP 软件： ser-U\r<br>4.手动操作：在这台电脑 /计算机里右键添加网络位置路径输入 ftp://jack:jack808@192.168.0.254 ，然后一直下一步，成功！这台电脑 /计算机下出现网络位置\r<br>5.批处理：我在网上找到的是： net use U: \\\\192.168.0.254 \"jack808\" /USER:\"jack\" /persistent:yes 运行之后提示错误 67 ， the network name cannot be found 。如果改成 net use \\\\192.168.0.254 \"jack808\" /USER:\"jack\" /persistent:yes 就能运行成功。\r<br>6.补充：用户机子都能 ping 通 FTP 服务器，在资源管理器地址栏输入 ftp://jack:jack808@192.168.0.254 也能访问\r<br>请教一下大家，不胜感激~</div>"], "reply": "6", "tittle": "问一个关于 win 批处理的问题", "comment": ["powershell 上或者 python, ruby", "你这 4 和 5 干的不是一回事啊， 4 是访问 ftp ， 5 是访问共享。", "干脆服务端改成共享", " 纳尼~那是不是每台机子都要装 python ？那样要死人的呀！！！", " 原来是这样~不过~~~怎么用批处理添加 FTP 呢？应该用哪种命令呢？我查到的都是 net use 囧~大神给个方向我吧~~~", " well~这个原来是用共享的，后来总有人乱删东西，然后又找不到相应的记录，老大就让我换个方式叻~"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://github.com/Wscats/Good-text-Share/issues/62\" rel=\"nofollow\">查看作者原文</a></p>\n<p>网页如图，这里只是说明整个网站的一些技术点，所以不该看的地方我都打上马赛克了，让我们揭开这些网站的整个前端工作原理\n<img alt=\"image\" src=\"https://cloud.githubusercontent.com/assets/17243165/20460429/ea2be212-af1c-11e6-9f56-3fcdc4053827.png\">\n首先刚进去的时候显示一堆乱七八糟的东西，点进去其中一个页面，下面各种虚假评论，然后每隔几秒钟弹出第几几几个会员充值成功，我们先把这个删掉\n<img alt=\"image\" src=\"https://cloud.githubusercontent.com/assets/17243165/20459940/7d991dd0-af0e-11e6-9a5b-1d5e2f422062.png\">\n好了，我们继续研究这个网站内部结构了\n正常情况每个页面的视频都是试看几十秒就会提醒你充值，当然这是这类网站的常规套路，我们在浏览器的 Network 观察加载的 js ，我们可以看到里面这段代码\n<img alt=\"image\" src=\"https://cloud.githubusercontent.com/assets/17243165/20459954/0b62be8c-af0f-11e6-936a-850a8d936bc2.png\">\n这是一份叫做 lsj.mp4.js 的代码的其中一部分，我们可以看到里面有个关键的判断，具体就是判断你是否是会员，如果是那就根据类型是否是 2 返回<strong>play_url_arr_oumei</strong>数组和<strong>play_url_arr</strong>数组拼接一个 url 给你，如果你不是会员的话就进入试看的判断，很清晰的看到有一个 url ，那就是试看的短视频的路径</p>\n<pre><code>var isvip = getCookie('lsjyy');\nif(isvip != undefined &amp;&amp; isvip != ''  &amp;&amp; isvip.match(rgExp)){}else{}\n</code></pre>\n<p>上面这两句还告诉我们第二个关键点就是我们可以根据<strong>isvip</strong>的 cookie 值来伪造身份，这个 cookie 就是保存到我们的本地浏览器上，所以如果我们能成功改写它的话我们就能变成会员绕过这个判断，这份代码已经封装好<strong>getCookie</strong>，所以我们可以在控制台直接调用来改写 cookie 值，但是问题来了，我们应该改成什么值才能绕过判断呢，我们继续看源代码搜索答案</p>\n<pre><code>function getMp4Url() {\n        var play_name = getParam('play_name');\n        var type = getParam('type');\n        var rgExp =/^(v|V)[i|I|p|P|0-9]{2,3}$/g;\n        var isvip = getCookie('lsjyy');\n        var pic = $('.movie-pic img').attr('src');\n        var html = '&lt;img src=\"'+pic+'\" style=\"height:auto; width:100%;display: none;\"&gt;';\n        html = '';\n        var play_url = '';\n        //vip 会员\n        if(isvip != undefined &amp;&amp; isvip != ''  &amp;&amp; isvip.match(rgExp))\n        {\n            var play_mp4 = getCookie('play_mp4');\n            if(type == 2)\n            {\n                play_url = play_url_arr_oumei[play_rand2];\n\n            }else{\n                play_url = play_url_arr[play_rand];\n\n            }\n        }\n        //试看\n        else if(( play_name != '')&amp;&amp;(play_name != 'undefined'))\n        {\n            \n            play_pic = 'http://oewx8de7n.qnssl.com/9e0120cv23/images/'+play_name+'.jpg';\n            play_url = 'http://oewx8de7n.qnssl.com/9e0120cv23/images/mp4/'+play_name+'.mp4';\n        }\n        else\n            play_url =  \"http://su.cywl5.com/sy/h34.mp4\";\n        return play_url;\n}\n</code></pre>\n<p>在 lsj.pay.js?v=256 这份代码的 279 行中我们又找到了一个线索，我们从代码看到，如果支付成功会在本地浏览器设置用户的 cookie 值，有两个关键的值出现了，分别是<strong>lsj</strong>和<strong>lsjyy</strong>\n<em>lsj</em></p>\n<pre><code>setCookie('lsj', pay_tee, 'd730');\n</code></pre>\n<p><em>lsjyy</em></p>\n<pre><code>setCookie('lsjyy', 'vip', 'd730');\n</code></pre>\n<p>其实我想了很久这个名字跟 vip 有什么关联，估计这个网站的作者想写的是老司机和老司机 YY 的意思吧，不过不管它是什么意思，现在只要我们尝试用它封装好的<strong>setCookie</strong>方法自己改写这两个 cookie 值，就能在本地顺利成为会员，绕过刚才的判断条件了\n<strong>lsj.pay.js</strong></p>\n<pre><code>function checkOrderStatus() {\n    $.post(\"./pay/ok.php?action=check&amp;uid=\"+getCookie('user'), function(data) {\n        var pay_tee = Number(data);\n        if (pay_tee &gt;= 1) \n        {\n            ispay = 1;\n            ispay = true;\n            var lsj = getCookie('lsj');\n            if(lsj == null) lsj = 0; \n            if(pay_tee &gt; lsj)\n            {    \n                setCookie('lsj', pay_tee, 'd730');\n            }\n        }   \n        if ((pay_tee &gt; 0)&amp;&amp;(pay_tee &lt;= s_v1_money)) \n        {\n            setCookie('lsjyy', 'vip', 'd730');\n        }\n        else if ((pay_tee &gt; s_v1_money)&amp;&amp;(pay_tee &lt;= s_v2_money)) \n        {\n            setCookie('lsjyy', 'vip2', 'd730');         \n        }\n        if (pay_tee &gt;= 1) \n        {\n            var dt1 =Math.round(new Date().getTime()/1000);\n            setCookie('lsjtime', dt1, 'd730');\n            setCookie(\"isPayClick\",0, 'd1');\n            var isPayClick = getCookie(\"isPayClick\");\n            if (isPayClick == 0)\n                window.location.reload(); \n        }\n       // el_checkpay.hide();\n    })\n} \n</code></pre>\n<p>其实往下也可以看到有一个 clearVIP 函数，更肯定了刚才我们的结论， VIP 和非 VIP 其实就是这两个值在作怪，所以我们默认的值应该就是 clearVIP 函数设置的值</p>\n<pre><code>function clearVIP()\n{\n    setCookie(\"lsjyy\",0, 's1');\n    setCookie(\"lsj\",0, 's1');\n}\n</code></pre>\n<p>如下图，我们在浏览器执行这两个函数，执行成功后我们就能看到 cookie 被成功改写\n<img alt=\"image\" src=\"https://cloud.githubusercontent.com/assets/17243165/20460091/3c9ce578-af13-11e6-8818-1081c36ac443.png\">\n<img alt=\"image\" src=\"https://cloud.githubusercontent.com/assets/17243165/20460095/581ce442-af13-11e6-8427-1073ff1e4687.png\">\n在这里我设置 lsjyy 为 vip2 ，当然我在后面测试的时候发现这两个值貌似没什么区别\n<img alt=\"image\" src=\"https://cloud.githubusercontent.com/assets/17243165/20460108/c02a4110-af13-11e6-9ed2-95332a7e93c9.png\"></p>\n<p>然后我们可以用 lsj.pay.js 第 179 行的<strong>showpay</strong>函数来检测是否已经是成功变成 VIP</p>\n<pre><code>function showpay() {\n    var rgExp =/^(v|V)[i|I|p|P|0-9]{2,3}$/g;\n    var isvip = getCookie('lsjyy');\n    if(isvip != undefined &amp;&amp; isvip != ''  &amp;&amp; isvip.match(rgExp))\n    {\n        alert('您已经是 vip 了哦.');\n        return false;\n    }\n   //省略后面的代码\n}\n</code></pre>\n<p>如果成功完成上面的步骤，我们在控制台输入 showpay()就会看到下图这个弹窗，那证明我们已经成功升级为 VIP...\n<img alt=\"image\" src=\"https://cloud.githubusercontent.com/assets/17243165/20460121/9d2a14b4-af14-11e6-8a2b-0f9a3327e281.png\">\n我们再次进入其中一个带有视频的网页看看变成 VIP 会会真的有 VIP 的\"待遇\"，我们发现页面内容块变成了空白，控制台报了下面这个错，那是提示有一个值叫<strong>play_rand</strong>没有定义，其实来到这里我们已经发现我们已经绕过了刚才会员判断，进入我们是会员的判断分支，只是因为一个未定义的值停止了代码的运行\n<img alt=\"image\" src=\"https://cloud.githubusercontent.com/assets/17243165/20460128/01d86834-af15-11e6-8f52-7c8120b664e2.png\">\n<img alt=\"image\" src=\"https://cloud.githubusercontent.com/assets/17243165/20460307/c9f98786-af19-11e6-89a4-707135f8dd47.png\">\n由于这个值我们可以看到是一个数组的索引值，所以我们在控制台全局定义</p>\n<pre><code>var play_rand = 1\n</code></pre>\n<p><img alt=\"image\" src=\"https://cloud.githubusercontent.com/assets/17243165/20460320/0f88d0e0-af1a-11e6-82fe-b623f78c6bf1.png\">\n我们把 id 为 play-html 节点的元素样式设置 diplay 为显示，我们就可以看到正常的播放器出来了\n<img alt=\"image\" src=\"https://cloud.githubusercontent.com/assets/17243165/20460330/5190e19e-af1a-11e6-92bf-f44f560df1ab.png\">\n分析源码得知，它大概的工作原理就是根据 url 的参数，比如<strong>play_name</strong>和<strong>play_type</strong>，根据你是否 VIP 然后加载播放器播放拼接完的 URL ， play_name 还含有<strong>undefined</strong>很不科学，说明有些视频根本只有图没有源\n打开 play.html 查看里面的源代码，可以看到视频的链接源\n<strong>play.html</strong>第 21 行</p>\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var cdn_url = 'http://oewx8de7n.qnssl.com/9e0120cv23';\n&lt;/script&gt;\n</code></pre>\n<p>往下面看我们可以看到刚才<strong>play_rand</strong>选取的对应的那个视频，事实上<strong>play_url_arr_oumei</strong>和<strong>play_url_arr</strong>数组已经定义好了 VIP 可以观看的这十几个视频，所以不管怎么样付钱后都是看这十几个里面的其中一个，在这里其实已经可以自己拼接对应的链接进入相应的视频\n<strong>play.html</strong>第 324 行</p>\n<pre><code>var play_url_arr_oumei=new Array();\n    play_url_arr_oumei[1]=cdn_url+\"/vip/2/om_1.mp4\";\n    play_url_arr_oumei[2]=cdn_url+\"/vip/2/om_2.mp4\";\n    play_url_arr_oumei[3]=cdn_url+\"/vip/2/om_3.mp4\";\n    play_url_arr_oumei[4]=cdn_url+\"/vip/2/om_4.mp4\";\n    play_url_arr_oumei[5]=cdn_url+\"/vip/2/om_5.mp4\";\n    play_url_arr_oumei[6]=cdn_url+\"/vip/2/om_6.mp4\";\n    play_url_arr_oumei[7]=cdn_url+\"/vip/try7.mp4\";\n    play_url_arr_oumei[8]=cdn_url+\"/vip/try8.mp4\";\n    play_url_arr_oumei[9]=cdn_url+\"/vip/try9.mp4\";\n    play_url_arr_oumei[10]=cdn_url+\"/vip/try10.mp5\";\n    var play_url_arr=new Array();\n    play_url_arr[1]=cdn_url+\"/vip/try1.mp4\";\n    play_url_arr[2]=cdn_url+\"/vip/try2.mp4\";\n    play_url_arr[3]=cdn_url+\"/vip/try3.mp4\";\n    play_url_arr[4]=cdn_url+\"/vip/try4.mp4\";\n    play_url_arr[5]=cdn_url+\"/vip/try5.mp4\";\n    play_url_arr[6]=cdn_url+\"/vip/try6.mp4\";\n    play_url_arr[7]=cdn_url+\"/vip/try7.mp4\";\n    play_url_arr[8]=cdn_url+\"/vip/try8.mp4\";\n    play_url_arr[9]=cdn_url+\"/vip/try9.mp4\";\n    play_url_arr[10]=cdn_url+\"/vip/try10.mp4\";\n\n</code></pre>\n<p>当然我们为了证明我们刚才上面的推测，我们可以在控制台把<strong>lsj.mp4.js</strong>的<strong>getMp4Url 函数</strong>执行一次</p>\n<p><img alt=\"image\" src=\"https://cloud.githubusercontent.com/assets/17243165/20460416/8992c290-af1c-11e6-9010-fc1f1aab91c4.png\"></p>\n<p>我们可以看到一个可用的链接就这样出现了\n当然你可以再执行如下代码，让它在网页端执行，关键就是用<strong>playHtml3 函数</strong>加载播放器，并打开拼接好的视频链接，有时候加载的是一张图片，更有时候加载的视频链接也根本无法播放，其实不管是否会员，最后也只是播放在页面最后定义好的那十几个视频，支付变成会员只是它们把数据入库，然后帮你设置个 cookie 的过程而已\n当然这些网站的前端人员的代码和注释还是挺可笑的\n<img alt=\"image\" src=\"https://cloud.githubusercontent.com/assets/17243165/20460494/57cf8358-af1f-11e6-884d-0628540a5bd9.png\"></p>\n<p><img alt=\"image\" src=\"https://cloud.githubusercontent.com/assets/17243165/20460460/096b0972-af1e-11e6-92e8-784fe079c772.png\">\n至此，就可以看懂这种网站的工作原理了，所以遇到小心上当了</p>\n<p>----------------------update 2016.12.26--------------------------\n<em>技术本身不可耻，可耻的是滥用技术的人！</em>\n后续更多内容可关注作者本人<a href=\"https://github.com/Wscats\" rel=\"nofollow\">@Wscats</a>或者 star 本文</p>\n</div></div>"], "reply": "51", "tittle": "我如何利用前端技术得到 XXOO 网站的 VIP", "comment": ["看完以后, 我立刻上 草 x 看了下 会员...   登陆账号...  恩!  还很正常!", "楼主好定力", "抓包直接获取视频地址不是更快捷？", "可以。", "cnoubo.cn", "哈哈，牙麻碟。  这种网站要是开通移动支付，应该有不少人上当。", "楼主开始的打码没啥用嘛", "花样秀，请问，有 GV 么？", "问个问题，如果 js 代码被混淆的话，作者还能破解吗？", "这就是个诱导支付的网站，楼主花了半天破解了有啥意义。", "这篇文章告诉我们，老司机为了开车真的是拼了命的。", "楼主大大你好.我能转载文章到公众号么,会著名出处和作者.可以的话咱们加个联系方式谈谈", "楼主这也是蛮拼的。", "老哥，稳。", "这个案例告诉我们，不要通过 cookies 来判断是否为 vip 会员，而是后台通过会员标识来判断", "这个应该属于服务器端判断 VIP,明显的逻辑漏洞", " 一分享到公众号，这车就开不成了", "这其实没有漏洞 有漏洞是因为本来就是诱导你交钱的站点 不是所谓的正统视频站", "\r", "讲解素材貌似挂了。。。", "想起来 91 炮也是改 cookie 就能有 vip", "居然有人用 cn 域名干黄网  牛逼", "司机稳", "近视眼表示打码并没有什么用", "每次都是评论最诱人", "在七牛上干大人站？\r", "\r", "思路惊奇啊少年 自己打车上央视找新闻联播栏目组认罪 录完直接打车上看守所给自己关进去得了给赵老爷省心。", "广告吧", "这是骗充值的网站...资源也不是最新的..  一般这种会生成很多个进行推广，基本所有东西都在前端", " 老哥，稳！", "star 稳步上升中", "之前对这类网站好奇，随手搜了个，\r", "\r", "[中艺蓝金科技（北京）有限公司以看片为名诱导客户支付宝充值，涉嫌欺诈！ -- 聚投诉]\r", "\r", "\r", "居然还可以投诉，然后我又在反馈里面找到对应的网站，专门做了个退钱的页面。。。\r", "\r", "这个行业估计暴利，很多人忍气吞声了。", " 老司机求开车", "厉害了", " 老司机发车吗", "事实说明了混淆 JS 代码的重要性。", "厉害了， word 哥。。。", " \r", " \r", " \r", "\r", " 貌似不行了？", " 老司机带带我~", "我直接输入楼主解出来的链接为啥不行啊🤣", "网址就这样暴露了ｸﾞｯ!(๑•̀ㅂ•́)و✧", " ", "会这个的本来也不可能付费看这种网站\r", "所以对人家根本没毛影响", "厉害厉害！", "把你这前端的手艺用在正途，能挣不少钱，回来把这网站会员买了根本不叫事好吗。  能节约多少时间啊", " 就算混淆加密，也是照样能解的。所以，不应该在前端验证这种信息", " js 混淆就是麻烦点而已", "看到了 CKplayer", "敢用 cn 域名来玩也是牛逼", " 已经挂了？", " 有些几个链接失效，还有些可以"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>现在是 2016 年 12 月 31 日晚，<strong>很高兴我没有猝死</strong>。</p>\n<p>想弥补耽搁的几年，过去一年里，我几乎一直坚持着 9117 （周一至周五每天 9 点半至 11 点半，周六、日 12 点 至 24 点）。</p>\n<h2>开始前端之旅</h2>\n<p>2015 年 8 月 1 日，刚入职南通一家船舶制造国企的第三天，我就决定做改行的准备，开始前端学习之旅。每晚下班后学习两个小时，用了一个月，把最基础的 HTML, CSS, JavaScript ，到 Git, Gulp, Less, Node(Express) 过了一遍。 9 月初投了 5 份简历试试水，很幸运的得到了两个面试机会并拿到了 offer 。</p>\n<h2>入行一年</h2>\n<p>晃荡了一个月之后， 2015 年 10 月 27 日，正式<strong>入职</strong>。</p>\n<p><strong>试用期</strong>早已计划好疯狂学习一个月。主动坚持着 9117 。这段时间里，除了熟悉业务，我补充了一些基础知识，学习了 Angular 。</p>\n<p><strong>试用期过后</strong>，觉得自己有限的知识，应付工作仍然吃力，于是又自觉地坚持 9117 两个月。春节后我参与了一个全新的项目，使用 Vue + PostCSS + Webpack 。作为一位初学者，我非常珍惜这次机会。</p>\n<p><strong>3, 4 月</strong>，尝试着写一个监测属性变化的库和一个简单的 MVVM 框架。这段时间我找到了造轮子的快乐，于是决定 9117 制度延长至一年。</p>\n<p><strong>5 月</strong>，参与了另一个使用 Vue 的项目。业余时间，我开始学习 Vue 的源码，主要是<a href=\"https://segmentfault.com/a/1190000007494308\" rel=\"nofollow\">响应系统</a>。为了方便单独学习和使用，我把 Vue 的响应系统剥离了出来（地址: <a href=\"https://github.com/cnlon/ob.js\" rel=\"nofollow\">ob.js</a>）。</p>\n<p><strong>6 月</strong>，开始学习 Virtual-DOM ，并希望尝试结合 <a href=\"https://github.com/cnlon/jep\" rel=\"nofollow\">JavaScript 表达式</a>和 <a href=\"http://jsonml.org/\" rel=\"nofollow\">JsonML</a> ，实现跨平台渲染（地址: <a href=\"https://github.com/cnlon/ejsonml\" rel=\"nofollow\">eJsonML</a>）。幸运的是，这个项目很快收到了 JsonML 作者 <a href=\"https://github.com/mckamey\" rel=\"nofollow\" title=\"Stephen McKamey\">Stephen McKamey</a> 的 star 。</p>\n<p>好景不长，<strong>8 月</strong>初，因工作需要，我负责独立开发一款 Android 扫码软件。之前并没有 Android 或 Java 基础，于是中断了 <a href=\"https://github.com/cnlon/ejsonml\" rel=\"nofollow\">eJsonML</a> 和 <a href=\"https://github.com/vexiljs/vexil\" rel=\"nofollow\">Vexil</a> 的开发。拿出全部精力，学了 1 天的 Java ， 2 天的 Kotlin ， 3 天的 Android ，一周的 RxJava, Dagger2, Firebase 等，做了个在线记事本的 Demo ，第三周开始开发，第五周上线，成就感瞬间爆棚。</p>\n<p><strong>9 月和 10 月</strong>，做着修修补补的工作，休了个假，过了个十一。</p>\n<p>2016 年 10 月 26 日工作刚好满一年，决定<strong>不再续签</strong>。</p>\n<h2>目前</h2>\n<p>原本计划疯狂的玩耍半个月，然后再开始找工作。但没有工作时，才发现根本无心玩耍，于是开始疯狂的投简历。</p>\n<p>阿里二面被淘汰，虽有些难过，但对未来仍充满信心，毕竟前端之旅我才开始一年。</p>\n<p>目前在一家做性能加速、监控的公司做数据可视化方面的前端开发，偶尔写写服务端。</p>\n<h2>感悟</h2>\n<p>感悟太多，随便挑几条吧</p>\n<h4>入行要学好 Git</h4>\n<p>工作中 Git 真的很重要。就在前几日，一刚入行的博士生同事在转正报告中，阐述了他没有解决好冲突就上线的悲剧，并总结了一句话，“ Git 不学好，上线上到老”。 Git 不难学，网上教程也很多。建议本地建个专门学习 Git 的 repo ，针对教程多多练习。工作中如果遇到拿不准的场景，也可以用来模拟一下。在熟悉之后，建议设置一套适合自己的 alias 。</p>\n<h4>初学者要珍惜参与全新项目的机会</h4>\n<p>参与新项目可以直面很多问题，拿 CSS 来说，垂直居中、封闭浮动、高度根据宽度等比例自适应、多行文本尾部自动省略……这些问题网上有很多介绍，但真正遇到并亲自解决掉时，会有着更加深刻的体会。</p>\n<p>如果只是直接参与项目的维护，这些问题可能都已经被解决好了，对于初学者，看着别人写好的解决方案，可能就不会有那么多的感触了。</p>\n<h4>用好 Webpack ，以及 Babel 和 PostCSS 等</h4>\n<p>Webpack 是一个神器，但是“官方文档是一坨屎”（注：引用来源找不到了）。初学者可以多看看国内的教程，多研究研究 Github 上的 Demo 。此外，对只有 JavaScript 的项目，也可以试试 <a href=\"http://rollupjs.org/\" rel=\"nofollow\">Rollup</a>。</p>\n<p>Babel 重要性不用多说，使用 Chrome 最新浏览器开发时，可以裸 Babel 运行，这意味什么……？</p>\n<p>我真的非常喜欢 <a href=\"http://postcss.org/\" rel=\"nofollow\">PostCSS</a> 搭配 <a href=\"http://cssnext.io/\" rel=\"nofollow\">CSSNext</a>，配置好插件，就可以使用自定义变量、自定义属性集、自动加前缀等等，喜欢上标准，会让你从心底放弃 SASS ， LESS 。</p>\n<h4>Vue</h4>\n<p>Vue 的官方教程很 nice ，入门首选。</p>\n<p>工作中建议多思考：如何划分 Vue 组件（提取公用组件、确定组件层级）、提取组件的共享状态（ vuex ）和业务逻辑（使用纯 JS ）、 Vue 组件 和 CSS 模块如何搭配等问题。</p>\n<p>当前 MVVM 框架核心是“绑定”，做的事情主要是监测变化和响应变化，在 Vue 中它们分别对应着响应系统（学习推荐 <a href=\"https://github.com/cnlon/ob.js\" rel=\"nofollow\">ob.js</a>）和 Virtual-DOM ，相信业余时间学习一下会很有收获。</p>\n<h2>我的 2017 年</h2>\n<ul>\n<li>大量地做读书笔记</li>\n<li>把 <a href=\"https://github.com/cnlon/ejsonml\" rel=\"nofollow\">eJsonML</a>，<a href=\"https://github.com/vexiljs/vexil\" rel=\"nofollow\">Vexil</a> 重新拾起</li>\n<li>平衡工作和生活，确保不猝死</li>\n<li><strong>护发</strong></li>\n</ul>\n<p>原文：<a href=\"https://segmentfault.com/a/1190000007979219\" rel=\"nofollow\">https://segmentfault.com/a/1190000007979219</a></p>\n</div></div>", "<div class=\"topic_content\">1. 谢谢各位的鼓励\r<br>2. 大家一起努力吧\r<br>3. 健康第一\r<br>4. 多点时间陪陪家人、朋友</div>"], "reply": "85", "tittle": "《很高兴我没有猝死》- 前端新人的 2016 年总结和感悟", "comment": ["666", "就楼主持续一整年的 9117 的毅力，早晚要成为大牛。", "2017 年护发正式加入豪华晚餐系列", "来给楼主加油", "我跟楼主经历差不多 也是国企跳出来做前端，刚好也是一年。。差不多也是每天很晚下班周末继续去学习的状态，本以为进步得够快了，一看楼主还是自愧不如=。=还是感觉每天工作任务太多，好多时候晚上都得继续做工作上的活，自己学习的时间越来越少了，更别说自己手动撸个轮子了。。", "哇 就你这 9117 能坚持一个月又一个月的。。佩服。。记得多运动。。。", "厉害了我的哥", "我劝楼主，接下来少用框架做项目。", "学习能力很强，我跪了\r", "另外这么长的工作时间，建议多调养身体", "学习狂人", " 那用啥，复制粘贴自己的代码吗 23333", "牛逼！", "厉害…我也想工作……(*☻-☻*)", "9117 是什么？", "可以...", "LZ ，坚持！", "Webpack 是一个神器，但是“官方文档是一坨屎”（注：引用来源找不到了）\r", "\r", "完全同意，不需要找来源吧，直接去看官方文档就知道了，而且评论也是一致观点。。", "只看好 elm", "哥们儿,有个词叫 flag 不知道你了解不了解.(手动滑稽", "> 每晚下班后学习两个小时，用了一个月，把最基础的 HTML, CSS, JavaScript ，到 Git, Gulp, Less, Node(Express) 过了一遍。\r", "\r", "楼主你用了 60 个小时就学通了这一套？我只能说真神人也，换了我估计光是 JS 没 600 小时都学不通。", "2017 一大商机：来 V2EX 卖护发产品。", "总结的非常好，大家一起努力吧", "佩服楼主，新的一年调整 work-life-balance 吧", "同南通，为啥我身边没有这样的神人。。。大家都很安逸", "至于么……", "楼主学习能力真强，好奇楼主大学学什么的", "人生在于坚持", "不要随意立 flag 。", "真·学霸", "赞👍", "仅仅提醒卤煮一句话，不要用行动上的勤劳去弥补思想上的惰怠。", "文章不是楼主写的～最后有说原文在哪里。", "好吧，好像是同一个人～", "你必有一个锦绣的前程。", "一个月，每天 2 小时， 60 小时就成功入行了，真是 nb ！佩服！", "<strong>护肝</strong>", "牛逼， 2017 继续前行", "厉害", "两种可能\r", "楼主学习能力超乎寻常\r", "楼主有高人指点", "原以为自己学习能力很厉害，一看楼主感觉自叹不如啊。", "6666", "南通人路过！楼主厉害，佩服佩服", "我只能说真学霸", "年轻真好。", "个人观点：没有什么值得学习的， \r", "\r", "1.带坏风气， 自己 9117 ， 还好意思说出来～ ， 丢人。   个人更倾向于劝人缓慢进步，双休毫不含糊，健康第一，其他靠边，就算退步也无所谓。\r", "\r", "2.他只是在这里显摆的。毫无意义！", "好羡慕，现在年岁大了，有家庭了，坚持很难", "向楼主学习！", "同样是在国企，三年了，早就不想干了。也准备改变一下。目前学习中！", "后端狗今天学了双飞翼和圣杯布局，和楼主比起来，感觉好丢人。", "高人指点+学习能力很强\r", "楼主的经历没有普遍意义", " \r", " \r", " \r", " \r", " \r", " \r", " \r", " \r", " \r", " \r", " \r", "@所有人，谢谢，一起努力吧", " 工作第一！我算是比较幸运吧，有业余时间。一起加油~", " 谢谢指出！前段时间找工作时碰了壁，硬是恶补很多底层知识。", " \r", " \r", "举一反三、融会贯通，还是要花很多精力的", " \r", " \r", " \r", "之前在国企，工资低，试用期每天闲的只能在长江边抓螃蟹，这种生活安逸得让人难受", " 戳中了我的痛点，真心感谢指出~", " 谢谢指出，赞同“健康第一”", "护发.......................", "> 拿出全部精力，学了 1 天的 Java ， 2 天的 Kotlin ， 3 天的 Android ，一周的 RxJava, Dagger2, Firebase 等，做了个> 在线记事本的 Demo ，第三周开始开发，第五周上线，成就感瞬间爆棚。\r", "\r", "这。。作为 Android 开发小小吐槽一句，弯路走的不是一点半点。。。不过还是赞楼主的毅力和坚持，加油吧。", "其它行业转行前端的真是多", "2017 ，与楼主共勉", " 谢谢，当时学 Android 有人指点就好了", "绳命在于运动，与楼主共勉。", " \r", " \r", "共勉！", "上个月住院了我才感觉到，我应该好好休息，或者挺好的。", " 😟健康第一，劳逸结合，共勉！", "带我啊。我的龙", " 后面要学 go ，还要向你请教呢", "感觉楼主工作量不饱和呀 哈哈\r", "工作时间可以疯狂学习研究自己的东西，老板没说你？(我就被说了……)", " 哈哈，其实我也是以工作为重，任务紧的时候，自己的事情也是全部放下的。幸运的是，其实老板也写代码，很支持我的，真心感谢他~", "入门容易，精通难", " 需要沉淀一两年吧", "第一次留言！同南通、楼主还在南通工作么？感觉现在工作环境太安逸了、没有之前在杭州互联网公司工作的那股劲了。。。希望能留个联系方式、以后一起学习、身边就缺少一个标杆了。", "总结的很好，不过你说的这些技术包括社区里提到的很多我都没听过 我只知道 java SSH 、 C# MVC entity framework code first 、 jquery 这些主流的东西！ 你们学的那些东西 在我大庄公司估计很少用。 我觉得 技术这种东西掌握一门核心即可！ 懂得多真的容易混淆迷失自己的方向 给开发带来难度", "楼主这精力。。干造船一样不会差", "真是佩服这么强的学习能力", "纳闷为啥一致要学新东西，为啥不去撩妹呢", "加油！", "哈哈我也是干船舶的，只是我大二的时候就转行了～。当年我刚毕业的时候和楼主一样有干劲，晚上回来自己折腾，周末去图书馆写代码，现在不行了，自己写的小程序碰到 bug 都懒得去思考。吐槽一下，前端真是乱，花了点时间学了 vue 和 react ，真不比学一门语言简单到哪去。", " 不在南通。联系方式就不留了，建议定一两个有挑战的目标", " 了解多点总会是好事，但一定要有几个精通的", " 学渣…", " 17 年努力", " 大二改专业还是很明智的。框架多用用，等熟悉一个了就好了", " 谢谢"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>对方是铁塔集团某份子，省级集成软件部门的老总，简称 X 总。</p>\n<p>11 月份我老板帮友司的忙，友司出项目经理和 2 个开发，加上我跟另一个同事驻场（人员外包），配合 X 总手下某国企外包人员若干，干了一个月的活，期间对甲方各种吐槽。</p>\n<p>首先在甲方工作群共享文件中发现对方去年 2 月立项，一期原计 9 月底验收，我们入场的时候发现他们只是搭了一个大概框架，我跟同事几乎 997 干了 4 周，中间只休过 1 天，总算给他们弄起来了。</p>\n<p>入场前确认需求时 X 总表示让我们干的就是一些拖拖拽拽的工作（槽点一），给我们看到的文档中各功能仅限于截图，当天我就跟项目经理表示了，这绝壁坑。但是没办法，友司老总跟 X 总上司有都懂的关系，项目肯定是要做，但貌似 X 总跟他上司并不怎么对付，除了我跟我公司同事的活没毛病外， X 总对友司的 2 个开发做的工作各种挑骨头（槽点二）。工作第一周休了一天，之后 X 总就开启了惨无人道的 9X7 模式，要求所有人 12 月以前尽快赶工，期间还干了几个通宵（槽点三）。</p>\n<p>幸运的是，企业开发这种活在我们手里并不算很复杂（除了兼容 IE8 ，槽点四），虽然人比较讨厌，但最后 X 总去总公司演示一切顺利，我们也算扛锅成功，但 X 总一直拖着不给友司结算。尽管友司老总对我们两个救火队员数次表示了感谢，还自费请大伙搓了一顿，但这个活总归收的不漂亮，暂且不提。</p>\n<p>其实 X 总在活收官阶段就通过友司项目经理给我传达过招安意向，待遇不低，但那种乱糟糟的环境，加上随他高兴就可以开启的地狱模式，我想都没想就拒绝了，没想到 X 总没死心，元旦当天晚上通过工作群里私聊我要了电话，我给他描述了我的当前情况（当然我的情况本来也比 X 总那好多了）， X 总这才放弃，一顿寒暄后挂了电话。</p>\n<p>莫名舒爽的感觉啊！</p>\n</div></div>"], "reply": "5", "tittle": "年前服务过的一个甲方，元旦傍晚打来招安电话，我没有从，干得漂亮吗？", "comment": ["毕竟又能背锅的又会填坑的人比较少。。", "干的一点也不漂亮。\r", "干填坑且挖坑的人 /团队很离谱的情况下我从来都是开价十倍\r", "之后你还想用我之前就得掂量掂量给多钱才能让我动手\r", "\r", "所以我现在的任何客户找我都不会提太少的数字", " 既然想招安了，必定是不想出高价的。出高价的不都是帮忙性质的么", "算是走出了第一步\r", "当对方提出无理要求，可以内心平静且毫不犹豫的回绝，才算是入门", " 别闹，老板的关系必须要干，除非不想干了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>之前一冲动买个个苹果开发者账号，现在发现自己的好像用不上了，还可以用这个账号干什么？</p>\n</div></div>"], "reply": "23", "tittle": "闲置的苹果开发者账号怎么用？", "comment": ["低价收 100", "150", "200", "151", "99", "201", "出租 供没账号的测试用", "大家已经给出了最佳方案", " 不错。。。", "哈哈，我的开发者账号买来也是先闲置了一年，后来才上架 app 收回成本。\r", "lz 既然买了肯定是有开发 app 想法的吧，可以试试", "弄个 Safari 扩展的证书。给大家自己测试，比如 uBlock Origin 就是需要自己拿证书搞", "可以几个人合租共享，需要非常可信的人。我就非常需要一个可以合租的人，因为我自己 side loading 的一些 app 自己用，目前免费的只能 7 天，苦闷", "求靠谱合租", "比如合租弄来装 kodi ，七天重新弄一次太麻烦了", "202 收", " kodi 是什么？", "企业账号有么、？高价收", "给 messager 添加自己喜欢的表情包", " 啊 就是原来的 XBMC kodi.tv", " \r", " \r", "需要合租吗?", " \r", "确实要开发 app ，但是还不成熟，目前还上不了架", " 要啊，我现在要 side load 感觉太麻烦了，不过只用如果是平摊的话，价格太不实惠了，一年我最多出到 100 。而且合租还涉及到有人会乱用证书，导致你被吊销的……", " 可以加 QQ 详谈 3449511088"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>主要看见了这篇文章<a href=\"https://www.v2ex.com/t/331772\" rel=\"nofollow\">你们是怎样管理自己多个账户的账号和密码的？</a> 想分享下怎么简单的管理多个账号密码</p>\n<p>两个需要：</p>\n<ol>\n<li>算法生成的密码要唯一： <code>用户名 /邮箱 + APP/网站名 + 独立密码 -&gt; 唯一密码</code></li>\n<li>能方便的得到密码</li>\n</ol>\n<p>想法主要来自这两篇文章：</p>\n<ol>\n<li><a href=\"https://blog.blahgeek.com/wo-shi-ru-he-guan-li-mi-ma-de.html\" rel=\"nofollow\">https://blog.blahgeek.com/wo-shi-ru-he-guan-li-mi-ma-de.html</a></li>\n<li><a href=\"http://devnotes.org/note/Password-Generator.html\" rel=\"nofollow\">http://devnotes.org/note/Password-Generator.html</a></li>\n</ol>\n<p>上面第一篇文章密码字符的范围是 ASCII <code>63~126</code> 只有几个特殊字符，第二篇文章则是取的子字符串，都是字母和数字组合，相对第一个更弱了，自己结合两者改进了下，生成的字符是 ASCII <code>33~126</code> 包含了除空格外的所有可见 ASCII 字符。生成<code>15*5</code>的矩阵，根据自己的顺序取相应字符当作密码，比如取结果第三行再加几个字符当作自己的密码。</p>\n<p>这样能保证每个网站都有不同的密码，不必再记多个密码，只需记住一个就行, 密码生成算法见 <a href=\"https://github.com/mapleray/password\" rel=\"nofollow\">github 源码</a></p>\n<p>自己也做了个简单的 web 页面 <a href=\"https://mapleray.github.io/password/\" rel=\"nofollow\">https://mapleray.github.io/password/</a></p>\n<p>源码： <a href=\"https://github.com/mapleray/password\" rel=\"nofollow\">https://github.com/mapleray/password</a></p>\n</div></div>"], "reply": "22", "tittle": "管理多个账号密码的一些个人分享", "comment": ["可以可以， mark", "合适，收藏", "感觉和花密一个原理，不过支持开源", "已知用户名，网站，密码，是否可以穷举出主密码？", "先马克再说", "看了一下源码，用的是 sha512", "\r", "\r", "pwd: 4testOnly", "生成密码“算法”很简单的，因为也不需要可逆，做几个多对一的字符表映射就够了\r", "自己设定一下格式，确保大小写、数字、符号都有，缺哪个就做个移位，就完成了\r", "\r", "反正我就用 keepass 保存一些 2FA 的二维码和恢复码\r", "其他都用 js 脚本，做成 pentadactyl 插件，根据一个主密码算出来，自动填入 form ……\r", "主密码就完全脑记，任何地方都不留记录\r", ":命令 主密码 马甲\r", "OK ，搞定", "...上边那条为啥不能重新编辑\r", "http 被 block 了\r", " 理论上是可以的，但是实际并不现实，因为最后的密码是生成密码的子集，而且是自己选取的字符顺序", " 这个很赞，但是需要硬件支持，对于手机端 app 又怎么操作？只能取相对折中的办法", "网站 /APP 名 + 一串根密码", "\r", "\r", "也贴个自己的吧，我觉得一个主密码足够了，而且要能够保存主密码，免得每次都输。这种东西就是用起来方便就好。\r", "\r", "遇到单网站多账号，我基本就是把 网站名+后缀 存在一个 note 上，实在记不起来就翻一下。", "我还有一个考虑点就是，遇到不能粘贴复制的时候要能比较方便的输入。所以各种神奇的符号我就放弃了，通过长度来弥补。", " 你这个用 iPhone 的话必须是越狱了的吧，不然怎么模拟 USB 键盘啊", "想法很不错，但是很可能被穷举出主密码\r", "觉得完善一下，可以普及成一种服务", " 你没用过 minikeepass 么?\r", "本身就自带 copy 到手机剪切板\r", "\r", "切换到对应 app 黏贴就行了", " 不是 ble ，靠硬件模拟键盘", " 我知道啊，你不是说是通过 USB 口么？我比较好奇怎么用 iPhone 的接口模拟键盘的。", " 想法都差不多～只是我觉得加上特殊字符很有必要，对于特殊字符，复制也不算难事吧，即使手打也不是什么大问题。。。。", "先马为敬！我一直用的这个简化版的。", " \r", "反正都破不开。。。搞成键盘第一屏能打的符号还是有好处的，特别是真要手输密码了，发现手上只有一个设备的时候。。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>服务器上安装了 MYSQL 的全家桶，提醒工作站还有本体</p>\n<p>windows 版有个 INSTALLER ，可以接收更新推送，更新起来也很容易</p>\n<p>但是这玩意自从我从腾讯云香港搬到腾讯云广州后就不好使了</p>\n<p>于是我工单找了下腾讯云客服，因为 MYSQL 官方服务器正常推送服务器却被爆破怎么想也不大可能</p>\n<p>腾讯云客服全程在推皮球，扯到了影响业务直接说让我不要用这个服务了</p>\n<p>这处理方式也是感人，最后说要向主管部门投诉才开始接受我给的问题解决方案</p>\n<p>我的方案是让他们下 INSTALLER 去测试是否能连通，然后抓包获得地址，生产机器不可能用来搞这些玩意的吧</p>\n<p>于是他们抓出了 74.125.204.113 这个地址，去查一下 IP ，显示的是谷歌的 IP ……</p>\n<p>慢着，谷歌的 IP ？为啥 MYSQL 的推送更新的 catalog 地址是谷歌家的？！</p>\n<p>这到底是什么 GUI ，我有点不相信，但是又不敢擅自下定论，所以 V2EX 的小伙伴们能抓 MYSQL INSTALLER catalog 的 IP 来看看吗？这玩意用着还蛮不错的，当初在香港用了一年都习惯用它来更新 MYSQL 全家桶了</p>\n<p>如果是谷歌节点，被功夫网爆破也不足为奇了，但是 MYSQL 为啥要用谷歌的节点来推送更新？意义何在？</p>\n<p>如果真的是被爆破了，求个服务器用的安全梯子方法，经常听说的映射端口那是什么……有人指导下吗</p>\n</div></div>"], "reply": "4", "tittle": "MYSQL INSTALLER 内置更新 IP 被功夫网爆破，原因何在", "comment": ["倒是给个域名呀", " 腾讯云抓包没抓到域名，就给了我一个 IP\r", "然后我 V2 站内搜了一下，找到了一个同样的小伙伴 ", "\r", "貌似 INSTALLER 会请求 head ", " ，听他说换 HOSTS 也可以\r", "但是我换了 HOSTS 却依然提示无法连接，这就有点不懂了", " \r", "如果是 HTTP ，直接本地建个不管什么请求一律返回 200 的服务器，然后 HOSTS 指过去", " 根据楼上的方法，本地绑定一个 ", " ，然后再在 HOSTS 添加 127.0.0.1 ", " ，解决了这个问题\r", "然后 PING MYSQL 发现 23.76.67.137 这个 IP 在腾讯云广州三区 PING 只有 7MS ，更新用的话速度还是比香港差很远，但是已经比不添加 host 要快了不少"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>还准备搞一个小爬虫，在想代理怎么解决呢，现在结果需要登录才能查余票数量了。估计 server 端限制账户查询的频率和次数了。</p>\n</div></div>"], "reply": "16", "tittle": "12306 查询余票需要登录以后才能查询了", "comment": ["骚年加油，征服了 12306 验证码以后你会成为真正的大师", "刚试了下 查询不需要登陆呀", " 不需要么😂我直接查余票就给我返回 403 ，登录以后才可以，难道脸比较黑", " 那个还没想法😂就是想看看自己回家的票怎么比较好买", "还好看到你帖子刷了下票，刷到一张。感谢楼主😂", " 可能是查的太快了 或者太多了吧", " 不谢😂\r", " 大概两周前刷了一天的票😂但是也不会限制着么久吧，我换设备，换网都不行", " 有的时候他自己服务器也会挂掉😂", "\r", "参考一下这个", " 两三天了😂想起来要买返程的票了，这两三天都是必须要登录才可以查票", "😂", " 是接口换了 你 F12 重新抓一下", " 好吧 好像真的是不行了 我的也用不了了", "刚才看漏了 是接口换了 \r", "# 构建 URL\r", "url = '", "\r", "        date, from_station, to_station\r", ")\r", "之前的 queryA 变成 queryT 了~", " 就是 f12 看到的是 403😂， 12306 的前端要扣工资了啊。", " nice"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>像这个：</p>\n<pre><code>blob:http%3A//simpl.info/884da595-7816-4211-b6c3-607c444556ef\n</code></pre>\n<p>能下载到视频吗？</p>\n</div></div>"], "reply": "11", "tittle": "video 标签中 src 为 blob 开头的视频能不能下载？", "comment": ["可以，最简单的方式是将这个链接放到一个 a 标签，然后右键另存为（当然，如果可以在 video 直接右键另存为就最好啦）。", " 学习了。这是从缓存中下载吗？有些另存为时大小是 0B 啊", "会下载 blob 视频了吗？谢谢大神  教教我", " 什么叫 a 标签", " 一楼的方法可以。 blob 貌似是缓存在浏览器了，有些另存后正常播放，有些另存后是 0B ，不太清楚为什么。", " 可以加威信讨论吗 13304008488 教会有谢", " email 吧， ", " 文件怎么播放啊？？？", " 一楼", " 下载下来啦，，但是无法播放。。", " 上地址看看"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>用 mongodb 作为了自己博客的后台，最近不小心把 dbpath 下面的 WiredTiger 开头的几个文件删了。</p>\n<p>重启 mongo 后发现数据不见了。。</p>\n<p>现在方得要死，求各位大神，应该怎么恢复....</p>\n<p>除了 WiredTiger 开头的几个文件，其他都没动，<code>collection-0-34618515748982070.wt</code>这种类似的文件都还在。</p>\n</div></div>"], "reply": "5", "tittle": "mongdb 误删 WiredTiger 文件，求恢复方法...", "comment": ["This ", " ?", " 我擦..这意思是恢复不了吗？", " 如果硬盘空间是独享的话，当场拔掉电源然后拿去做 ext4 数据恢复可能还有救。", " 找到篇文章， ", " 似乎不用那么麻烦，能直接从 collection.***.wt 文件里读出数据", "你试试看呗，搞定了的话 V2EX 又能多一篇分享创造了 w"]},
{"content": ["<div class=\"topic_content\">我们主程最近非常喜欢抽象处理，以至于在开发过程中弄出一个表单系统出来。\r<br>什么是表单系统：就是前后端约束一些公用的样式，后端只要定义类型就可以在表单填写的时候渲染 相应的组件。听起来类似于组件开发模式。\r<br>我项目经验比较少，想知道有类似的开发经验吗？\r<br>为什么总是感觉这种东西有点鸡肋，在写前端代码的时候就像是天使折断了翅膀。</div>", "<div class=\"topic_content\">这么多人有都在推荐表单系统，有人可以讲讲表单系统的优劣吗？</div>"], "reply": "15", "tittle": "想聊聊 web 开发中的表单系统", "comment": ["\r", "\r", "duangduangduang", "表单生成器么。。企业应用经常这么搞，不这么搞每个人做出一个样以后怎么维护，一个页面几十个字段能写出几十个风格来\r", "就看你心情是全在后端生成，还是前端写一部分代码了\r", "简单的表单 curd+验证+前端+流程完全可以拖拽定制开发，国内已经有卖成熟方案了", " 请问这个成熟方案的名字", " 还真忘了，来我们公司宣传过，后端 j2ee ，如果想自己写逻辑要用 js...", " 顺便说一下，他家的方案是按站点收费的，两个站点的钱就六位数了", "\r", "\r", "\r", "\r", "通过后台添加模块，自定义模块的字段，字段类型，字符格式（正则定义了很多匹配规则）", "drupal 和 magento 的实体属性值模型 EAV", "这思路让我想起了 ", "不知道有没有适合 Java 的方案\r", "\r", "曾经尝试过自己写一个，工期太紧放弃了。大概思路就是在后台配置关联某个实体类，然后写一些简单配置信息表明是多少个字段，前端自动生成 html 代码\r", "\r", "觉得最困难的地方还是在布局上，那种三四十个字段的表单实在没有办法抽象出一个特别合理的布局方式，不知道有没有什么更优化的思路", "你需要的是 Django Form Widget", " 我很不容易才摆脱 taglib ，又来一个类似的东西。用 vue 直接撸不行？\r", " 还有 tablib\r", " 就是感觉不能通用，否则每个页面就要千篇一律。估计上面说的企业站中的 cms 风格都是一样的。", " 好的，谢谢推荐", " ", "    这个有 java 的表单你参考", "不是有个帆软的报告系统，可以自建表单", " 对，我就是要绝对统一，不要有任何发挥空间才好\r", "\r", "特别是在带领廉价人员冗余阵列做开发的时候，有时候真是管的越死越好，虽然我也觉得这样有点恶心"]},
{"content": ["<div class=\"topic_content\">2017 年了，今年是我成为码农的第 5 年。    \r<br>我上学的时候从来没有想过自己能搞编程，做开发。\r<br>高中的时候我跟所有的人一样，一直对上北大还是考清华纠结不易，后来我成功的被我的母校师范学院专科录取。我一个文科生，进入了计算机专业，我到现在也没明白当时怎么会选这个专业。\r<br>我们那一届深受学校重视，本科 4 年，大专 3 年，我们的专业学制就 2 年。估计学校是考虑到我们多上一年学，对祖国四化建设是个重大损失。\r<br>学校安排的课程很满，同时开设 Java ，.NET ，网页设计， Oracle 和 SQL Server 。第一堂 Java 课在看着老师牛逼的写下“ Hello Word ”，而自己从头到尾都没听懂时，我突然觉得自己脑子真不够用，不出所料第一学期我在挂科了。“没有挂过科的大学是不完整的”，在这句话的激励下，我开始整天开着电脑下载各种教学视频，每天孜孜不倦的学习。 Java 三大框架，数据库编程范式，网页设计各种各样的视频，这么看了一年算是入了门。\r<br>学校组织实习，找个了地方给我们培训，要求做一个图书管理系统，当时听到这个项目就觉得是一个大工程.三个月时间，我们一组人从数据库设计到网页设计，还有程序实现总算是能跑起来，可以演示给大家看。\r<br>开始找工作了，怀着忐忑的心情写好简历，一家家投递，都没有回复，那段时间真是难熬。最终第一份工作不是学了两年的 Java Web 开发而是自学三个月的 Android 开发。\r<br>2012 年 10 月到今天一直在做 Android 开发，水平却始终是个渣，能找到工作混到现在完全是靠当时的 APP 浪潮。所以我只说自己是码农，搬运代码的工人，刚好写的东西能跑起来而已。</div>"], "reply": "3", "tittle": "我是如何成为码农的", "comment": ["我也没想到自己会当码农，因为一年前我还是芯片设计工程师。。。\r", "大三计算机原理挂了三次，勉强补考过了。\r", "当时设计芯片要熟悉 linux 系统，然后自学 bash 和 vim, 正则， awk 等杂七杂八的东西。\r", "一开始用 perl ，深感这个语言很靠记忆力，因为放一周不看就完全不知道自己写了什么了，\r", "后来开始学习 python ，然后走上了不归路。。。", "93 年的时候，老爸去市里工厂做事，暑假带上了我，有天实在太热了跑到工厂里的控制室吹空调，看到一个电视机一样的东西可以用一个噼里啪啦的东西操作的，后来就对这东西有亲切感，然后上学的时候去旧书摊买电脑爱好者这杂志看，走上这条路自然而然", "找不到工作，正好有家收我"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这个如何适合？有推荐免费下载 HTML 模板的 website 吗？</p>\n</div></div>"], "reply": "15", "tittle": "想写个博客，却找不到适合的主题", "comment": ["不要脸地安利一波 ", "  （哼", "Hugo 的 Octopress 默认主题就不错：\r", "\r", " \r", " \r", "\r", "貌似还没我现在的好呢", "楼主现用的不是很好么……", " 总感觉欠缺点什么。", " 然而我刚刚从 octopress 跳到了 hexo...~~~", "当年搭 blog ，选样式、主题，又改写样式，花了好几天，结果最后就写了一篇文章。\r", "\r", "能坚持写，不管放简书也好，还是公众账号也好，是最重要的。", " 表示现在仍然还在纠结模板问题", "重点不应该是写吗 主题那么好看能吃吗", " 没有主题只是不想写的借口，哈哈...", "内容好什么都好，即使是没样式", "  这个不好看啊，实在话", "那还是别写了", " 我感觉挺好的，低调、简单 ^!^", " \r", " \r", " \r", "表示样式以重置"]},
{"content": ["<div class=\"topic_content\">最近看了几篇关于微信小程序的文章，分析都流于表面，照抄张小龙的话，比如“不打搅”，所以不能收藏，那对公众号也来一下“不打搅”怎么样？不能订阅，更新没有提示，要看文章只能搜索完整名字，这是“不打搅”？\r<br>\r<br>移动互联网一个基本的特点是随身，这使得基于位置的应用成为可能，而小程序就是定位为此。\r<br>\r<br>比如设想一下在餐馆用小程序，扫描二维码，点菜支付，“用完即走”在这里就是字面意思，离开了也就没有用了，自然也没有必要收藏，二维码才是合理的入口。</div>"], "reply": "6", "tittle": "微信小程序场景分析", "comment": ["做了 3 个小程序，一个审核通过，一个打回 2 次，一个还没递交\r", "\r", "\r", "可是没发现有啥是小程序特有的而 H5 不能做的", "html5 难道不是用完即走？并且还可以在非微信环境使用.", " \r", " \r", "可以调用微信的数据", " 什么数据？", "我也尝试了一下，感觉就是 ionic 或者 rn 嵌入到了微信里头，我没发现有什么特别的优势", "html5 都能做，微信就是想把所有场景都搬到微信里面来"]},
{"content": ["<div class=\"topic_content\">*扫码通过浏览器下载安装也会有问题；\r<br>*在手机建文件夹将 apk 复制到手机文件夹，再通过手机上的文件管理器安装也是一样的问题；\r<br>*问题的情况是在主界面按 home 键回到桌面，再进入 app ，主界面的 list 控件就不见了。\r<br>*但是 adb 和 360 助手安装的就没这问题。打包的 apk 是签名加混淆了的。</div>"], "reply": "2", "tittle": "adb install apk 和 360 助手安装 apk 正常运行，通过 qq 发送给同事安装运行就会有异常", "comment": ["这样描述没啥用，看 log 到底崩在什么地方", " 我已经找到了，原来是 app 主界面的启动模式不知道啥时候被改了。。。\r", "thx"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>开启了 ssh server 服务。但是一旦关掉 cmd ， ssh server 就被关掉了。 ssh server 也没有开机启动。</p>\n<p>有什么办法没。</p>\n</div></div>"], "reply": "15", "tittle": "Win 10 bash 子系统很奇怪", "comment": ["必须要有守护进程可能", "用计划任务开机启动一个 bash 放后台，在那个里面启动 ssh 服务等。", "不是 win 10 bash 的问题，在哪都一样，要有守护进程。", "你关掉 cmd 就类似于 linux 下关闭了 tty ，不用点黑科技，子进程肯定就被关掉了", "你是非 daemon 方式启动的 ssh server 额。", " \r", " \r", " \r", "\r", "你们确定玩过 win 10 下的？？\r", "Win10 目前从我的测试看，不支持 Linux 下的这种 daemon 。\r", "解决方法：\r", "只用过 ssh 登录。。。", " 因为 windows 就不支持 fork 呀", " \r", "build 14965 已经解决了这个，打开一个文件描述符就可以保持不被杀掉。不过我没试过。", "说明你是 linux 新手，我们都知道用 screen 的 :D", " Are you kidding me?", " 肯定支持， shell 脚本都是 fork 运行的。", " WSL 区别于 Cygwin 的一个地方就在于 WSL 有一个高效的 fork 实现。", "用 Docker 吧。", "用 ·service sshd start·启动试试"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://github.com/Jack-Sparrow/CSS-The-Definitive-Guide-4th-zh-CN\" rel=\"nofollow\">链接在这里</a></p>\n<p>CSS 权威指南第四版的第一章，试着翻译了一下，翻译技术文档果然不容易。</p>\n<p>瑕疵很多，期待大家指正。喜欢请给个星吧~</p>\n</div></div>"], "reply": "11", "tittle": "CSS 权威指南（第四版）第一章中文翻译", "comment": ["卧槽，这一版等了十年", "楼主再接再厉，全翻出来吧", "我点开了 lz 的那个网站但是我还是没有找到第四版的地址.....\r", "我想看英文版的..............", " 点开之后是作者的主页，下面有个 [Bookds] ，点开全是他的书", " 是啊，作者写得也慢， 12 年开始第一章，现在还没写完，等全部出来，然后再出中文版估计又得好久。。", " 后面的章节直接翻译放出来，感觉会侵犯版权啊，不太懂这方面法律，想了想翻译个尽量详细的摘要，反正外国人写书一向啰嗦，算是打个擦边球吧。。。", "麻烦可以给个原文链接吗？", " ", " 谢谢", "这本书不是第四版的全部内容吧，\r", "全部是这个吧 ", " 第四版在 O'Reilly 上先以每章节一本书的形式发行的，你发的这个链接是亚马逊预售的把各个章节整合在一起的版本， Product Detail 里面写着 Publisher: O'Reilly Media; 4 edition (August 25, 2017)，估计要到 8 月份才会出版"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>话说大家周末参加一起好的技术交流活动，都是通过哪些途径了解的</p>\n</div></div>"], "reply": "17", "tittle": "在哪里找一些好的线下交流的技术活动", "comment": ["去过几次线下交流，感觉收获不是很大。\r", "之后就一直在家埋头写代码了。。。", " 现在这些活动太多了，所以想找一些质量高的参加，可能会有一些收获，认识一些大牛", " 重点在于你在哪个城市", " 哈哈，忘记说了，在上海", "可以在 活动行 看看有没有座谈", "活动行吧。", "meetup", " ", "  是这个网站把", " SHanghai Linux User Group (SHLUG)", " 对", " 很赞的样子", "一般都是通过朋友圈了解的，还有朋友介绍。不过现在参加线下感受就是很少有特别干的活动，希望能参加些技术性强的活动", " Open Talk 还不错，经常在上海办，参加过两次，说运维和架构的比较多，感觉还是有点料的", "活动行看的多一点，还有开源中国 CSDN", " 感谢，活动行上的活动就是太混杂了", " 嗯，我也是这么觉得，感觉现在好多水活动", " 我关注一下"]},
{"content": ["<div class=\"topic_content\">比如 \r<br>\r<br>+1767659876\r<br>\r<br>+1 是北美的， +1767 是 Dominica 的，如何用代码判断这个号码到底是“+1  767659876 ” 还是 “+1767  659876 ”呢？</div>"], "reply": "6", "tittle": "关于电话国际区号，问个问题", "comment": ["+1. 就行了", "美国的电话号码是\r", "+1 (xxx)xxx-xxxx\r", "你这个号码用这个格式套不上，少一位，感觉应该是+1767 xxx-xxx", " @", " \r", "\r", "我这个号码是举个例子，并不是直接区分这一个号码，我想要的是一个规则，对所有的国际区号有效。\r", "\r", "另外号码是第三方接口平台提供的，格式我这边决定不了，只能去解析。。。", "所有北美洲的国际区号都是+1 ，区别只是后面的区号\r", "比如：\r", "美国-纽约：+1 (212)xxx-xxxx\r", "加拿大-安大略：+1 (613)xxx-xxxx\r", "多米尼加-圣多明各：+1(809)xxx-xxxx\r", "所以只要判断区号（第二到四位）就可以了。", "\r", "\r", "有各种语言的版本，用就好了。", " 👌非常感谢"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>    用户登录的时候，会获取该用户的权限入口列表和用户信息，这些数据一般都是查的多改的少，所以我想有没有一种办法，是可以用键值对的方式，以用户主键为建，然后把权限入口列表和用户信息作为值放进缓存，同时当我 update 该用户的信息或者权限时，这个缓存能够自己更新。我只需要每次都丢一个主键进去，然后就能获取最新的缓存。有没有类似相关的技术？？我对缓存这块不了解。</p>\n</div></div>"], "reply": "6", "tittle": "有没有哪种缓存技术是可以这样用的。", "comment": ["缓存能够自己更新？没见到过，一般都是触发更新，或者定时更新", "update(){\r", "    biz();\r", "    updateCache();\r", "}", "update  用户信息的时候刷新下缓存就好了啊", "更新用户信息的时候刷新缓存，也可以用消息服务来实现", "java 有 spring cache ，主要思路就是横切 update 类操作，每次 update 后更新缓存，而这个缓存的主要缓存的方法返回值，也就是说第二次调用这个方法的时候不会执行这个方法，而是直接返回缓存的结果，也是通过 aop 实现的。", "mysql 的权限管理"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>博客用<code>Django</code>自己开发的，比较简单</p>\n<p><img alt=\"6154316d55fbb2fb3b511f43464a20a44723dca7\" src=\"http://imgsrc.baidu.com/forum/pic/item/6154316d55fbb2fb3b511f43464a20a44723dca7.jpg\"></p>\n</div></div>"], "reply": "9", "tittle": "下午把博客样式重置了一下，感觉还挺好看的", "comment": ["挺好看的", " 只有桌面好看， APP 都是乱的", "不错 ，博客地址呢", " \r", "\r", "不知道会不会被删", "如何截取这么长的网页？", " Chorme 浏览器的 FireShot 插件", "丢一下 ", "materialize 吧", " \r", "是的，默认的小粉红色"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>今天逛了逛国产主流浏览器的官网，感觉这些国产浏览器官网真的是狂拽酷炫吊炸天啊，个人感觉好看度排序：</p>\n<p>QQ 浏览器 for MAC ： <a href=\"http://browser.qq.com/mac/\" rel=\"nofollow\">http://browser.qq.com/mac/</a></p>\n<p>其次是</p>\n<p>QQ 浏览器： <a href=\"http://browser.qq.com/\" rel=\"nofollow\">http://browser.qq.com/</a></p>\n<p>然后是</p>\n<p>搜狗浏览器： <a href=\"http://ie.sogou.com/\" rel=\"nofollow\">http://ie.sogou.com/</a></p>\n<p>然后是</p>\n<p>360 浏览器： <a href=\"http://se.360.cn\" rel=\"nofollow\">http://se.360.cn</a></p>\n<p>然后是</p>\n<p>UC 浏览器 for PC ： <a href=\"http://pc.uc.cn/\" rel=\"nofollow\">http://pc.uc.cn/</a> （最后那朵花好美）</p>\n<p>最后是</p>\n<p>百度浏览器： <a href=\"https://liulanqi.baidu.com/\" rel=\"nofollow\">https://liulanqi.baidu.com/</a></p>\n<p>V 友们还有没有什么产品官网 HTML5 效果吊炸天的学习一下，都来借鉴点灵感</p>\n</div></div>"], "reply": "96", "tittle": "目前国产主流浏览器官网 HTML5 特效都是吊炸天，感觉还是百度浏览器官网最 LOW", "comment": ["搜狗确实比较炫", "360 家那两款浏览器的官网也挺好的", "最讨厌这种要炫不炫 要简洁不简洁的", "百度浏览器经常换领导，没办法", "出于环保的需求，我还是不去看了", "chrome 的也改版了，建议加上去： ", "\r", "感觉还是 chrome 的好点，有些是感觉为了炫而炫，体验并不好", "百度：用户又不需要去我网站下载才能安装", "Vivaldi ： ", "uc 浏览器是视频弄得效果 ", " ", " 确实，我晃眼一看以为是 HTML5 弄的", "- - 浏览器起来好吃力。。", "liulanqi", "百度那个网页好 NB,\r", "我 ubuntu 上的 firefox41 直接卡死.", "百度啥不 low ，我就上张图，简直是 low 到爆\r", "?1\r", "我真的无法理解，无法想象\r", "这个图案和文字不是固定的，这还不是最 low 的，见过的最 low 的是：\r", "亲爱的[用户名]，记得一天 8 杯水哟～", "QQ 浏览器的效果最好", " chrome 的是 405 还是 405 ，还是 connect reset ？", " ", "\r", "同时给个链接，那朵花不懂我还以为是啥情况，后来发现是视频， 233333.\r", "\r", "还是感觉 QQ for Mac 的好看。", "虽然百度页面 low, 但百度域名长阿", " 哈哈， liulanqi ，就百度用的汉语拼音", "每每打开这样的页面，我 I3+2G 内存的办公机总是菊花一紧。", "好看有卵用。。看看人家 Chrome    ", "\r", "关键是性能 稳定性， 易用性。", "服了百度了，域名丑，内容简单，简单还最卡顿……", "百度的确实最单调难看，貌似官网一直都是这个界面，也该换个界面了吧，这个看脸的时代，用个快发霉的脸也好意思绑定全家桶啊", "你可以看看搜狗浏览器的首页\r", "\r", "FF 被鄙视了,还得换 UA 才能加载", "百度全系产品真是丑的不行。。。（个人审美）", "百度这个背景音乐感觉还可以\r", "不比产品质量比官网...", "以前没看过这些网页，第一次在 Chrome 下浏览也就搜狗的可以正常显示，其余全挂，是我网络的问题吗？\r", "第二次重开 QQ for Mac 显示正常了。。。\r", "看了三遍，只有搜狗和 QQ for Mac 正常，做得再好有啥用？\r", "还不如我的 Chrome 。。。", "猎豹表示不服，我的界面才是最 low 的！\r", "各种驱动加载，一堆屎", "FF+1 ， qq 浏览器的居然看不到特效", "“ Google Tango review: Promising Google tech debuts on crappy Lenovo hardware ”  联想又被鞭尸了", "搜狗光域名就够 low 的了", "从技术排个名次：\r", "1.搜狗 canvas\r", "往下的都是 css3 用的多与少的问题\r", "2.qq\r", "3.360\r", "4.百度 uc", "虽然百度的页面 low, 但百度有音乐啊（逃", "没发现只有百度浏览器的官网使用了 HTTPS 吗？", "很好，可是我还是不想换 chrome", "最讨厌自动播放声音的页面了", "还是我的 chrome 大法好。简约而不简单。", "看域名， browser ， ie ， se ……，百度家 liulanqi", " 吃了那么多内存还比一票国产浏览器卡，确实不简单。（手动斜眼\r", "\r", "哈哈", "要说展示的内容丰富估计百度最好了吧，页面设计也不差，其他几家感觉是为了炫而炫，我觉得百度的挺好", "公司一大，效率也就也来越低", "搜狗的好看，嗯。", " 要不然大内存用的少，多浪费。 （手动斜眼", "尴尬的是，用这些浏览器去浏览自己的官网，有时候会不兼容...", "其实炫酷的那一套，百度早就玩过了，当时我山寨了一个百度浏览器的官网，是长这个样子\r", "\r", "还有， QQ 浏览器的炫酷效果一直不兼容火狐……", "不敢用", " 这个特效还是很中庸啊", "很讨厌这种特效网页，百度的还好没有", " 可以啊。你是专业搞前端的吧。", "都挺好的，除了百度的（卡顿+自动播放 BGM ，差评", "楼主没发现 UC 浏览器用的是视频么\r", "![image]( ", ")", "搜狗的用 Safari 默认的 UA 上去没效果，换其他除 IE 11 一下的都行～", " 最 low 的难道不是那淋漓不尽的 logo 吗……", "这些 mess up with my 滚动条的网站我第一时间都是关掉的。我不知道有多少人真的认真看这种毫无内容又难以操作的网页，我感觉就是做网页的在那儿孤芳自赏。", " 确实酷炫", "我想知道，如果把 logo 去掉，会是什么结果。", "百度浏览器的北极熊在跑了 120 秒后，终于停下了。", "然后你就会看到全家桶了", " +1,网页不受滚轮控制特难受", "都是垃圾", "官网都懒得去打开", "UC 的好像是视频~", "呃 虽然产品有追求是好事，但是浏览器官网整这么花哨真的合适么....", "那么大个页面，一点有用信息都没，还自以为用户体验好，这种页面布局从几年前开始流行到现在，我反正是很反感，看见就关。\r", "设计开发出这些页面的产品十个有九是华而不实。", " 合适", " 请关", " 开心就好", "QQ 浏览器 for MAC 依然没人用", "百度好神奇， Chrome 上看有 5 个短横， Firefox 上看只有 4 个短横 233\r", "Mac QQ 那个在 Edge 上很卡\r", "记得 Firefox 渲染 css transform scale 很卡，不知道为什么。", "百度不一直都是 lowB 届的代表人物吗", "特效上 搜狗和 QQ 最好\r", "实际体验上 百度反而最好", "百度大多数产品 UI 都还停留在上个时代", "完全不觉得这些动来动去的页面有什么好看的", "好多浏览器就是 IE 换了件衣服，然后配上很多广告，就叫做浏览器。。。", "搜狗的最好，不卡也清晰", "搜狗和 qq 的的确不错", "感觉搜狗的最棒\r", "\r", "在百度做的第一个需求，使用百度浏览器调试时，导师问我：为啥不用谷歌呢？", " 你觉得这个怎么样", "没人提 Firefox 官网的咯： ", "\r", "\r", "我觉得这个最好看，其次是 Vivaldi 的： ", " 和我想的一样", " 说明你导师很清楚 google 浏览器的占有率。", " 这跟占有率无关吧，用着顺手而已", "我很好奇，贴内为啥外链是本窗口打开，评论区是新窗口？", " 如题", "谁知道他们用的 full page 插件都是啥？", "那这么说 chrome 的官网不是丑爆了？", "腾讯的网页我用 firefox 打不开\r", "\r", "腾讯这是啥意思", "官网都很漂亮啊", "百♂毒的 page 那个雪山😂", "canvas 做特效其实挺强大的，百度的 eChart 其实也是比较出名的，不能说他们没有做前端牛逼的人了。", "其实也不是很 low 啊，可能你们走在太前面了。对于普通用户而言，只是为了下载，找到那个下载按钮才是最重要的，另外，百度浏览器一直在用，感觉挺好的。", "所有这些都不是一个浏览器主页应该有的样子,  华而不实的特效, 营销的广告语, 浮夸的特性宣传 都只能给用户带来不信任感.", " 额，歌名叫起风前的相遇，但百度不知买没买版权\r", "\r", "锤子科技官网放音乐，应该会大大的写个版权声明"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>写代码， VA 还是 IPS ？</p>\n<p>目前看了 某基，两款显示器：\n1080p MVA 价格 1100,\n2k AH-IPS 价格 1699 。</p>\n<p>请问下， VA 可视角度真的很弱么？（看到三桑都做曲面的 VA ）</p>\n<p>是你怎么选择呢？谢谢。</p>\n</div></div>"], "reply": "62", "tittle": "请问 V 友对于 显示器的选择", "comment": ["VA 可视角度不弱，我现在就用的明基家的 VA ， DELL 的 2414 也有用过。\r", "\r", "实际体验来说 MVA 看一天也不太会累，但是 IPS 看一上午就明显会觉得有眼睛痛...\r", "\r", "而且 dell 的 2414 漏光很严重（似乎是通病），相比这台 MVA 来说整体感觉发白", " 谢谢，感觉发错节点了，是不是该放到“硬件“下面。", "目前有 2515h 和 2414h ，感觉 2515 比 2414 强不少，今年准备入个 p2715q 体验下 retina", "MVA 感觉色彩寡淡。。。可视角度貌似比 IPS 差点，不过也差不了多少吧。", "Dell 2414", "推荐 VA, 字体渲染效果比 IPS 好很多，眼睛不疼。", " \r", "\r", "我一直以为只有我长时间看 IPS 屏幕会觉得很难受。。。后来换成清一色的 TN 屏幕。。。\r", "\r", "所以 VA 屏使用体验相对较好？", "我用的 aoc q3277fqe  32 英寸 长时间看没压力，可视角度完全够用，即使是 32 的屏幕， va 有个优点 就是漏光比 ips 少，黑色场景显示更好，更适合看视频，不过我这个显示器 input lag 有点高，虽然没有专门的工具测，不过是要比我还有一个古董 tn 的显示器慢一拍的，反正我都能接受玩游戏时开垂直同步加上的 input lag ，无所谓啦，不对比就没伤害， va 屏的显示器貌似 input lag 都有点高", "我买显示器, 各种屏其实都无所谓, 就找大个儿的买, 28 寸起.", "LG 的 27UD68 ，一个月用下来感觉非常好", "戴尔 u2417h ，还有 16 比 10 的", "eizo 2750 纸模式", "我是喜欢 IPS ，从侧面走过来是色彩不对头看着不开心~ 据我所知 VA 黑场比较好，但眼睛舒适度我不觉得会有什么区别，觉得看 IPS 累可能也只是亮度开太高的原因。请问这个有什么依据么？", "去戴尔之家买", " 其实我也想问", "借地方问一下戴尔 U2717D 值得买么", " \r", " \r", " 之前看过一个测评，屏幕技术养眼排名： ASV>MVA>PVA>TN>IPS 。 ", "\r", "\r", "当然自己用过 TN 也用过 MVA 和 IPS ，确实感觉 IPS 最费眼（我一天要盯着电脑 8 小时以上，用 IPS 那段时间到下午眼镜就干涩的不行了，附带症状头疼，每天如此）现在用 MVA 基本一天下来只有一点轻微的感觉。\r", "\r", "至于色彩和可视角度，我觉得现在这个 MVA 屏并不比漏光的 Dell 屏差（漏光直接导致发白，怎么调都不行）... 当然了，我是码农，对色彩要求也没那么高就是了", " 当然，以上对比只是针对我的 U2414...\r", "\r", "高端 IPS 在控制好漏光的前提下，色彩好是肯定的！比如苹果那个 IPS ，看几次迷几次....", " 他也没有说养眼是什么意思，以及这个排名是什么理由。我猜测他认为色彩比较差的就会比较养眼？\r", "另外他认为“ IPS 需要更高的亮度来维持这些优点”也是完全没有道理的。\r", "\r", "其实 IPS 唯一的缺点就是黑场不行。但我认为这一点和可视角度比起来并不太重要。一般人用显示器不需要真正的全黑和高对比度。退一步说就算屏幕真的全黑了，屏幕反射的室内光源就成了影响黑场表现的新问题。\r", "\r", "我的显示器都是用色度计校色的，建议不自己校色的话不要买广视角显示器。", " 说错了，不自己校色的话不要买广色域显示器。", "为什么 ips 看一上午眼睛疼啊？是对比度太高的缘故吗？", "我的 ips 对比度很高，看电影真的很爽，写代码的话我的 lg 是可以调亮度色标的，调了之后没那么刺眼了。", "P2317H  还可以", " 其他地方也有看到类似的结论，其实不必纠结这个，不管什么面板，盯久了都对眼睛没好处，所以都是相对而言的。而且那个人实力基础和抵抗力也都不一样，结合自己情况选择呗。我也只是结合自己情况回答 lz 问题而已，完全没有黑 ips 的意思，只想表达 va 也没那么弱， ips 也并非毫无缺点(尤其是低端 ips ，漏光普遍存在，同样是 1500 预算的话我宁可选择 mva)。", "但是如果预算充足，则另当别论了。", " 上面说的是每个人视力基础不同，手机打字好痛苦", "要我选也选 VA 面板。\r", "\r", "另外需要注意的是否过滤蓝光，是软件过滤还是硬件过滤，以及调光方式是 DC 直流调光还是 PWM 调光（包含高频 PWM 调光)，否则闪屏真的很伤眼，学问比较多，需慢慢考虑，因为打开电脑人机界面最直接的就是显示器了。\r", "\r", "硬件配件这么多，其实我觉得显示器是最难选的。\r", "\r", "另外我感觉你选的显示器都太便宜了。", " 是不是明基自带有硬件滤蓝光，而你平时都未开启蓝光过滤。这样看下来， IPS 肯定逊于 VA ，是吧？", "我们以前说，液晶就看点距，其他都小事，", " 哈哈，并没有开启蓝光过滤，开启之后那个颜色我受不了，也可能是不闪屏原因？", " \r", "软件、硬件滤蓝光我不是很在意，因为我肯定一直开护眼模式。\r", "\r", "调光，现在明基和戴尔，大部分都应该 DC 调光了（这个购买前，都很好问清楚）。\r", "\r", "升降旋转支架也是必要的，可以调整到一个正确的坐姿（既增加了距离，又保护脖子，腰椎。当然，也是购买的最重要原因。）\r", "\r", "高分屏（ 2k)，调节 DPI 后，能显示得更清晰，眼睛看着也轻松。\r", "\r", "最后，学生， 2000 以内。求，还有除了 dell p2416d,benq bl2420pt 其他选择么？", " 点距小了，看不清？现在高分，支持都不错了吧？", "现在在用 2414h 漏光是通病", " 好像真有 PWM 调光的批次。", " 无漏光，不戴尔。", "直接买 5K iMac ，不仅显示器解决了，而且显卡和配套的 CPU 、主板什么的都解决了", "我只能说我现在关注的是 BenQ 明基 EW2775ME ， 27 英寸的， 1920 × 1080 ，缺点就是点距大，没记错的话是 0.31 多少的。\r", "\r", "另一款，明基（ BenQ ） BL3200PT 32 英寸 2K 分辨率， 2560× 1440 ，点距 0.276mm ，就是屏幕太大，也没蓝光过滤技术，可能和产品定位有关，太大屏幕，脑袋需要转，吃不消，价格也高。\r", "\r", "你说升降旋转支架最重要，我倒觉得在需要考虑的几项中最不重要，因为可以买个显示器支架，角度、高度随便调，主要注意显示器背面是否有符合 VESA 标准的安装孔即可，否则就要用无孔的显示器支架了，当然还需注意最大能承受几斤重的显示器。\r", "\r", "另外有点你说对了，与闪屏有关的电路调光方式确实和产品批次有关，这个难确认，产品参数中一般不写，只有厂里工程师最清楚。那么如何确定呢，只有多逛硬件相关论坛，所以我说不急的话，你就多看看。\r", "\r", "都过滤蓝光的情况下，对色彩还原度上来说，硬件肯定好于软件过滤方式。\r", "\r", "哦，对了，最好选个雾面屏。\r", "\r", "我不怎么给具体型号，只说笼统的注意事项的原因是，显示器我自己也在关注中，想换一个呢。。。。。。难选。。。。。。", "DELL", "纠正一下， BL3200PT 没有采用二代的硬件滤蓝光技术，只有软件过滤蓝光方式。", "有些品牌有些型号调光方式确实和产品批次有关。\r", "\r", "ps: 额，三连发， 怎么没修改发言选项，一发表不能改了。", " \r", "支架需要加钱。\r", "也不牢固（便宜的）。\r", "需要破坏桌子结构（夹持也会吧，有的显示器很重）。\r", "也用不到那么多调节。\r", "用久了会松？", "显示器支架我也没用过，没多大发言权，但我知道有打孔和夹持两种方式。\r", "\r", "我最近也准备给自己买一个把老显示器给固定上，因为颈椎难受。\r", "我现在用的显示器是老款无背孔的\r", " CCFL 背光 + TN 面板 + 非 PWM 调光 + 雾面屏， 22 英寸 净重： 5.8 kg 飞利浦的， 07 年 2500 多块买的。\r", "现看中了 Brateck T91W （ 13-27 英寸）无孔液晶显示器支架。\r", "\r", "现在显示器除非超 27 、 28 英寸 以上的，净重： 5.8 kg 的有吗？大概是节省物料了，现在的显示器大多变轻了，呵呵。\r", "\r", "桌子的话，除非是红木桌子啊？那值钱！否则厚实点的就可以了。\r", "\r", "\r", "\r", "我认为，现在都是 wled 背光，有蓝光和闪屏问题，所以每天显示器盯 8 小时以上，还是首先应该考虑护眼的问题。", "要不就是专业显示器，那是比较重的。", "保护眼睛那是最重要的，其次再考虑颈椎、腰椎什么的，以后再加个显示器支架什么的就可以了，顺序要搞对啊。", "DELL U 系列 真是爽", "索尼 KD-75Z9D  ，愉快的决定了。", "补上个数据，我现在用的 22 英寸, 1680×1050, 16:10, 点距:0.282mm ，我就觉得有点大了。\r", "\r", "再给个列表：\r", "19.0, 1440×900, 16:10, 点距:0.284mm\r", "\r", "16.4, 1600×900, 16:9, 点距:0.226mm\r", "20.0, 1600×900, 16:9, 点距:0.276mm\r", "\r", "17.0, 1680×1050, 16:10, 点距:0.219mm\r", "19.0, 1680×1050, 16:10, 点距:0.243mm\r", "20.1, 1680×1050, 16:10, 点距:0.258mm\r", "21.0, 1680×1050, 16:10, 点距:0.269mm\r", "21.6, 1680×1050, 16:10, 点距:0.276mm\r", "22.0, 1680×1050, 16:10, 点距:0.282mm\r", "\r", "18.4,1920X1080, 16:9, 点距:0.213mm\r", "21.5,1920X1080, 16:9, 点距:0.248mm\r", "23.0, 1920×1080, 16:9, 点距:0.266mm\r", "24.0, 1920×1080, 16:9, 点距:0.276mm\r", "\r", "22.0, 1920×1200, 16:10, 点距:0.247mm\r", "23.0, 1920×1200, 16:10, 点距:0.258mm\r", "24.0, 1920×1200, 16:10, 点距:0.27mm\r", "\r", "再大尺寸的点距多少，需要自己去查询了。", " \r", "建议你看看一些支架的评论、和视频。\r", "桌子（准确说是书柜），是放在家里的。老一辈人都比较那啥、、、毕竟不是自己买的，是吧？\r", "\r", "在目前 DC 调光+软件护眼 的大环境下，“支架“就可以很好的明确我的需求。与其追求“窄边框“（低端做工都不好）、“硬件滤蓝光”（加成本，还是会偏色？软件过滤的效果就很不错了，偏色也不在意）。\r", "\r", "其实，最重要的还是用眼习惯是吧？", "Z24n\r", "\r", "其实很简单。挑贵的没肯定没错。相同的尺寸分辨率，越贵越好。", "我目前有三台显示器。", "两台 2515H 。 25 寸。 2K 。", "一台 P2717H 。 27 寸。 1080p 。", "用起来都还不错。", "哦，知道了，我么 ... ... 去看显示器支架评论、视频了 ... ...", " 嗯， 1500 预算的话，如果能买 27 寸 MVA 的话是个不错的选择。", "在用明基 2420pt va 屏 2k", " 这款就是 ah-ips", " 你说的支架和那种可以升降、旋转的显示器底座有什么明显区别吗？为什么非要破坏桌子的那种呢？", " 看网上评测是友达 M238DAN01.0 面板。", "1K 左右的 VA 黄， IPS 黑色不好，就酱。", " 不懂，没理解你的意思", "DELL P2715Q\r", "我司标配，真的很舒服，眼睛不累", "好吧，查了一下，价格差太大，当我没说", "电子墨水屏", "明基（ BenQ ） EW2755ZH", "点距大，字大看着不累，我自己对 24 寸以上的不感冒，感觉 20-22 比较好，", "俩显示器 一个 mva(主)一个 ips(辅)\r", "偶尔看看片用 ips 比较爽"]},
{"content": ["<div class=\"topic_content\">ajax 跨域请求 php 后台，用 session 作为会话控制，没刷新一次页面就生成新的 sessionid ，无法记录上次保存的内容，怎么解决呢。</div>"], "reply": "19", "tittle": "ajax 跨域请求 php， sessionid 一直变化", "comment": ["cookie 不能跨域，要不把 sessionid 重写到 url 上？", "抓住问题的关键，为什么刷新一次，就生成新的 sessionid ？无非是两种情况。\r", "\r", "1.浏览器这边删除了 session （可能是某些反追踪插件的原因），自己用 Chrome 自带的调试功能，观察请求，看看 sessionid 在 cookie 里还在不在。\r", "\r", "2.那就是你自己的代码问题。这就没什么好说的了。不要浪费其他无谓的时间，专心找找 你 操作 session 和 cookie 的部分，看看你操作 cookie 的时候，是不是重置了什么东西。这一步，也能在 Chrome 的调试功能里看到一些 set-cookie 的 header", " p3p 说可以让 cookie 跨域，但是没有成功，把 sessionid 返回到前端再每次访问时提交过来，总觉得不安全。重写该怎么去做呢。", " 重写就跟你说的差不多吧， cookie 跨域需要设置 Access-Control-Allow-Origin ， Access-Control-Allow-Credentials 两个属性吧，服务端和网页都要设置。", " 如果没有跨域的话， sessionid 就不会改变，只要一出现跨域就会出现 sessionid 一直在变化， get 请求用 jsonp 可以解决， ajax 的 post 请求每访问一次就出现新的 sessionid 。", " 这两个属性我设置了，不设置的话，请求就过不来，数据都可以正常的提交和返回，就是 session 的问题一直没解决。", " ", " 我推荐读一下这个文章， 讲的蛮清楚的。", "  Access-Control-Allow-Credentials 这个属性，在 ajax 也需要添加一行代码 xhrFields:{\r", "                        withCredentials:true\r", "                    },\r", "这样确实可以解决 session 的问题，但总感觉前端参与处理的太多，能不能只动后台就可以结局呢。", " 好的，谢谢，我先看一下。", " 就加了一行代码就多了。。。强迫症啊", "13 楼正解 @", "正解", "13L 果然是正解", "跨子域的话要设置 php.ini 中的 session.cookie_domain = .mydomain.com ，跨域名的话只能网址带参数", "17 楼正解", "正解", "正解", "  ,这是我的一些历程,希望能帮到你，"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>#教你写一个 color 日志库，不止有代码还有原理。</p>\n<p>##前言\n在计算机里面， ansi 转义码是使用带内信号去控制格式化，颜色，或者其他的输出选项在视频流或者文本终端中的一种办法。编码这些格式化信息，就是在确定的字节序列中，把上述所说的 ansi 码嵌入到这个文本中。终端会去寻找命令去解释这些字符，而不是把它看作简单的字符码（ ascii ）。</p>\n<p>1970 年提出的 ansi 码，但是直到 1980 年的早期才普及在了迷你主机和大型机房中。它被使用在早期的电子公告板上，对比之前缺乏光标移动的系统，它改善了显示的效果，这导致了它被广泛的使用。</p>\n<p>尽管硬件文本终端，在 21 世纪已经日益稀少。但是不动摇 ansi 标准的影响。因为大部分的文本模拟器的解释工作，至少还有相当一部分的文本存在 ansi 转义序列。唯一的例外就是微软的 win32 console 。不过这些在微软升级到 window10 之后已经被解决了。</p>\n<p>所以这个古老的协议对我们现在的文本输出依然是有很重要的影响。</p>\n<p>###一条小命令</p>\n<pre><code>echo  -e \"\\033[1;31mI ♡  You \\e[0m\"\n</code></pre>\n<p>output:\n<img alt=\"\" src=\"http://i1.piimg.com/567571/616e3e5b5f76e21c.jpg\"></p>\n<p>不上图我写什么文档，对吧。这条命令可以用来简单的告白用。送给大家了。从这里我们引出了 ansi 对文本颜色的输出影响，看，就是图中字符的颜色发生了变化。利用这样的性质我们今天就要分享一下如何写一个彩色的日子库（ color log ）</p>\n<p>###CSI</p>\n<p>转义序列使用 ESC 控制字符开始,对于 2 个字符序列，第二个字符是 ASCII 的 64 到 95 。（@到_，还有所有大写英文字母和[]^），然而，序列中大多数是超过 2 个字符的，并以 ESC 控制字符和左中括号开始。序列被称作 CSI ，即控制序列引导器或者控制序列启动器的简称。这个序列的最后一个字符是在 ASCII 范围 64 到 126 。也还有一个单字符的 CSI (155/0x9B/0233 ） ESC[，这两个字符序列比单个字符形式用的更多，细节参看 C0 和 C1 控制编码。（下文会添加文档的链接），使用 UTF-8 编码的终端上，两种形式都使用 2 字节（ CSI in UTF-8 is 0xC2, 0x9B ），但 ESC[序列更加明了。</p>\n<p>###文本颜色</p>\n<p>文本颜色（和 SGR (Select Graphic Rendition)参数）使用 CSI n1 [;n2 [; ...]] m 序列来处理，如上所示，序列中每一个 n1, n2, ...就是一个 SGR 参数。因此，例如，你使用 30 ～ 37 表示前景色， 40 ～ 47 表示背景色。下图是一张颜色过渡图。\n<img alt=\"\" src=\"http://i1.piimg.com/567571/825cbd68f9587924.jpg\"></p>\n<p>###开始编码</p>\n<pre><code>package util\n\nimport (\n\t\"fmt\"\n\t\"time\"\n)\n\nconst (\n\tcolor_red = uint8(iota + 91)\n\tcolor_green\n\tcolor_yellow\n\tcolor_blue\n\tcolor_magenta //洋红\n\n\tinfo = \"[INFO]\"\n\ttrac = \"[TRAC]\"\n\terro = \"[ERRO]\"\n\twarn = \"[WARN]\"\n\tsucc = \"[SUCC]\"\n)\n\n// see complete color rules in document in https://en.wikipedia.org/wiki/ANSI_escape_code#cite_note-ecma48-13\nfunc Trace(format string, a ...interface{}) {\n\tprefix := yellow(trac)\n\tfmt.Println(formatLog(prefix), fmt.Sprintf(format, a...))\n}\n\nfunc Info(format string, a ...interface{}) {\n\tprefix := blue(info)\n\tfmt.Println(formatLog(prefix), fmt.Sprintf(format, a...))\n}\n\nfunc Success(format string, a ...interface{}) {\n\tprefix := green(succ)\n\tfmt.Println(formatLog(prefix), fmt.Sprintf(format, a...))\n}\n\nfunc Warning(format string, a ...interface{}) {\n\tprefix := magenta(warn)\n\tfmt.Println(formatLog(prefix), fmt.Sprintf(format, a...))\n}\n\nfunc Error(format string, a ...interface{}) {\n\tprefix := red(erro)\n\tfmt.Println(formatLog(prefix), fmt.Sprintf(format, a...))\n}\n\nfunc red(s string) string {\n\treturn fmt.Sprintf(\"\\x1b[%dm%s\\x1b[0m\", color_red, s)\n}\n\nfunc green(s string) string {\n\treturn fmt.Sprintf(\"\\x1b[%dm%s\\x1b[0m\", color_green, s)\n}\n\nfunc yellow(s string) string {\n\treturn fmt.Sprintf(\"\\x1b[%dm%s\\x1b[0m\", color_yellow, s)\n}\n\nfunc blue(s string) string {\n\treturn fmt.Sprintf(\"\\x1b[%dm%s\\x1b[0m\", color_blue, s)\n}\n\nfunc magenta(s string) string {\n\treturn fmt.Sprintf(\"\\x1b[%dm%s\\x1b[0m\", color_magenta, s)\n}\n\nfunc formatLog(prefix string) string {\n\treturn time.Now().Format(\"2006/01/02 15:04:05\") + \" \" + prefix + \" \"\n}\n</code></pre>\n<p>上面就是一个完整的彩色 log 的代码\n输出的效果：\n<img alt=\"\" src=\"http://i1.piimg.com/567571/3f5ad6c3a5abd683.jpg\"></p>\n<p>##完整代码\n<a href=\"https://github.com/liyu4/chill/blob/master/util/colorlog.go\" rel=\"nofollow\">完整的 colorlog 代码</a>\n<a href=\"https://github.com/liyu4/chill/blob/master/util/colorlog_test.go\" rel=\"nofollow\">测试代码</a>\n如果你需要在本地测试，请确保你搭建了正确的 go 开发环境，并且 down 下 <a href=\"https://github.com/liyu4/chill\" rel=\"nofollow\">https://github.com/liyu4/chill</a> 这个项目。找到 util 单元</p>\n<pre><code>yourpath 指的是你的项目路径。\ncd yourpath/chill/util\ngo test -v\n</code></pre>\n<p>##后记\n在其中 \\x1b[ 实现 CSI ：<br>\n转换前景色为黑色，使用\\x1b[30m<br>\n转换为红色，使用\\x1b[31m<br>\n如果使用加粗参数，灰色写作\\x1b[30;1m<br>\n获取红色加粗，使用\\x1b[31;1m<br>\n重置颜色为缺省值，使用\\x1b[39;49m    （或者使用 \\x1b[0m 重置所有属性）\n\\033[0m 重置为正常<br>\n\\033[1m 设置高亮度或加粗<br>\n\\033[4m 下划线<br>\n\\033[5m 闪烁<br>\n\\033[7m 反显<br>\n\\033[8m 消隐<br>\n\\033[30m -- /33[37m 设置前景色<br>\n\\033[40m -- /33[47m 设置背景色\n控制符 ESC 的常用表示方法\\e 、\\x1b(\\x1B)、\\033 都可以<br>\n\\e 指代 Escape ，对应八进制\\033 ，对应十六进制\\x1b</p>\n<p>###参考文档</p>\n<p><a href=\"https://en.wikipedia.org/wiki/ANSI_escape_code#cite_note-ecma48-13\" rel=\"nofollow\">ansi 转义序列</a>\n<a href=\"http://me2xp.blog.51cto.com/6716920/1437542\" rel=\"nofollow\">中文文档</a></p>\n</div></div>"], "reply": "27", "tittle": "用 go 写了一个彩色的 log", "comment": ["不错，支持一下。 go 貌似也有其他彩色的 log 库\r", "mark 下 以后学习~", "用 `tput` 也可以哦，参看我的 dotfiles 安装脚本 ", " 这是命令是兼容的吗？", " 有问题可以找我，一起学习和加油！（可加微信）", "fmt.Println 都输出到 stdout 了，我觉得你可以用 fmt.Fprintf ，在参数里指定一个输出设备，这样更加通用", " 是的， tput 的功能实际由 terminfo 和 termcap 提供", "  你的建议很好，谢谢啦！", " 懂了，底层是 termcap 那兼容性各种终端应该不是什么问题了，学习了。", "孤独的根号 3 \r", "\r", " = = ！", "  一辈子只做技术。", "github.com/Siruspen/logrus 挺好用啊... 也是彩色的, 就是丑...", " 如果你习惯了用这个，那么你可以直接改它里面的颜色那部分代码，改成你喜欢的样子。祝你五颜六色。", "弱弱的问一句，有妹纸会喜欢你的终端告白么？", "我也有个 golang 彩色的 log ", " 😂", " 开个玩笑的", " 看了一下，感觉弄复杂了。原理其实都是一样的。", "我也有个 golang 彩色的 log +1 ", " 厉害的，一定是有女朋友的人。", "好有爱~！", " 谢谢喜欢！", "还有的代码会闪光等等，当时用 for 循环把排列组合打印了一屏幕", "很棒的作品。支持。但是有一些小瑕疵。\r", "彩色代码很大程序上依赖于 shell 的实现。所以兼容性不是特别好。\r", "另外，这个可以作为程序中需要用到 printf 的地方的替代品，但是将其命名为 log ，略微言过其实。先抛开 logger 的各种特性不表，通常并不倾向于在 log 中打印这些字符，因为解析日志的时候会徒增麻烦。", " 是依赖于终端模拟器的实现，但是这是 ansi 标准的实现，所以对于多数的系统都是适用的，例外可能是 window 的控制台。不过在文档中提到了 window10 之后这个问题应该改善了。以上这段是基于理论说的，毕竟只在我的 mac 上测试过。后半段你提到的点很中肯，学习了。", " 组合这些效果应该是可以实现的， cool ！能把代码贴上来吗？", " \r", "\r", "代码很简单，就是 echo  -e 之类的多层 for 循环，数字用 i 和 j 代替而已。不过需要在 Linux 真正的文本模式（ Ctrl + Alt + 1 ~ 6 ）下运行，虚拟终端 console 下很多效果显示不出来。貌似个别代码还有声音。", " 厉害的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"1.jpg\" src=\"https://ooo.0o0.ooo/2017/01/05/586e0f0522422.jpg\">\n<img alt=\"2.jpg\" src=\"https://ooo.0o0.ooo/2017/01/05/586e0f0541bd2.jpg\">\n<img alt=\"3.jpg\" src=\"https://ooo.0o0.ooo/2017/01/05/586e0f05573b1.jpg\"></p>\n</div></div>"], "reply": "19", "tittle": "百度贴吧被 DDos 了? 打不开咯 百度 百度 灵魂摆渡", "comment": ["就因为 ping 不通，所以就说贴吧被 DDos 了？", "翻墙从国外可以访问，估计又是 IDC 的锅", " 大范围 ping 不通只能想到 DDoS", "福建联通没问题~~~", "我以为自己的网络出现问题- -！\r", "用 HKB 能访问。", "贴吧挂了，其他服务正常。", "客户端一直都行", " 一样，贴吧翻墙可以上", "话说百度贴吧上 https 了？", " 上了，而且好像是最近才上的。", "下午有段时间也是这样，然后我试着重新拨号，居然局端反馈我密码错误，然后等了毛 20 分钟恢复正常。。。", "请问这是什么软件？", "陕西移动可以正常访问，不过好像真比平时卡一些", "我能说在新疆贴吧十分钟抽一次吗", "突然意识到，百度的 ", " 和腾讯的 ", " ，域名的意思一样啊...\r", "\r", "十分， Ten Cent", "广西电信正常  也是卡一点", " 思维江化非常严重啊，就不能这样拆解么：  Te Nc Ent （注： ent 常为（ ear ， nose ， and throat 耳鼻喉科的缩写）） 我也刚刚想起，不知道老马当初起名的时候是否有考虑过这个问题", "就算 百度贴吧 挂了，挂的原因也绝不可能是 DDoS", "这个测试是什么工具"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>上班没事看书好不，可是一直看书也很无聊啊</p>\n</div></div>"], "reply": "50", "tittle": "上班没事看书，好不", "comment": ["...尽量还是别直接拿本书看\r", "宁可上技术网站看看技术资料啥的\r", "总感觉会让老板觉得你太闲了", "楼主要求是不是不要太高了", " 看的电子书，技术博客，不过看一天好无聊啊", " 不高啊，只是想看书不无聊", "当心看坏眼镜", "好不好看企业文化", "楼上说的对，一般看书是好的....", " 不好看才无聊", " 可一直看书很无聊诶", " 没👓", "工作不饱和啊~", "第一个单位不让我看书，然后我就果断跑路了", "这就是你看 金瓶梅 的理由？", "上班没事，说明你快被开除了", " 开了最好啊", " 你要不要看", " 跑的好", " 有点", "可以啊，编译的时候，手头没急活的时候，我都看书", "快看了一个月的书了", " 🐂，不无聊吗？", " 编译的时候看。。。", "看得好累，不知道看啥", "正好是新项目的空窗期，老大让研究开源项目，看了快一个月了。看书的话也类似。\r", "\r", "现在能做的就是多做分析总结，写成文档，发给领导看看。", "不好,书看事没班上", " 看的不无聊吗", "最近我也看英文资料，逛论坛，，上头没忙完，文档都写不下去只好看书", "没事看书是个加分项", "明明在看登山的专业书籍，却被同事以为在看小说。。。。。", " 什么登山类的专业书，我也喜欢登山", "看书不太好，网上资源那么多，你照着技术文档或者别人的 tutorial 自己做点 demo 也好啊。", "当蓝\r", "吼啊 🐸", "一直看书是很无聊，你为什么不睡会觉，这样回家精神更好😊", "工作不饱和啊~", "看看整个项目中别人的代码, 这样不会让别人感觉你很闲的样子", " 也不是太专业的吧，只看过严冬冬翻译的那几本，和登山圣经", "我用吃完晚饭这段时间，快把《德川家康》看完了。。", " 啊啊， 遇到一个同好了，这套书 13 本我高中的时候收集齐了，当年看了两遍", "看技术类的书，对着书里的例子撸代码，肯定没问题", " 撸完快忘了", " 🐂🐃🐄🐮", "明明是在刷 V2", "建议看电子版，那实体书看，马上事就来了。哈哈～", "无聊可以看小说啊～", "不想码的时候就看书，码不分场合", " 给你点赞", "作为一个程序员, 没事的时候你就只会看书吗?\r", "看看技术博客, 写写 demo, 上 github 贡献点代码, 可以做的事太多了吧, 只会一直看书还看得无聊.", "在我们公司看看相关书籍或视频都是可以接受的。\r", "不过有 Scrum Master 动态调整工作计划，自由可支配时间通常不会超过 1 小时。", " 会不会感觉和上高中一样", "作业少的锅"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>2016 年，人工智能发展火热。作为人工智能一个重要分支的深度学习，也正在受到大家越来越多的关注。 2016 年是深度学习高速发展的一年。在这一年中，无论是工业界、学术界还是广大群众都投身到了深度学习的洪流之中。在工业界，谷歌（ Google ）、脸书（ Facebook ）、百度、阿里巴巴等一系列国内外大公司纷纷对外公开宣布了人工智能将作为他们下一个战略重心。在人才方面，继深度学习界泰斗吴恩达（ Andrew Ng ）加入百度、 Yann LeCun 加入脸书之后，各大 IT 公司开始哄抢学术界大牛。斯坦福大学教授、计算机视觉领域领军人物李飞飞（ Feifei Li ）于今年 11 月加入谷歌；卡内基梅隆大学教授、机器学习领域顶级人物 Alex Smola 于今年 6 月加入亚马逊（ Amazon ）。在工具方面，谷歌、脸书、百度、微软、亚马逊等公司相继开源了各自的深度学习框架，谁能引领人工智能的潮流将成为各大 IT 公司的下一个战场。</p>\n<p>在学术界，深度学习继续推动着图像识别、视频分析、语音识别、语音合成、机器翻译、自然语言处理、人机博弈等各个领域的发展。在 2016 年中，深度学习概念已经不再局限在大学实验室或者顶级的 IT 公司里，随着 AlphaGo 战胜围棋世界冠军李世石、更多的无人驾驶车行驶在马路上、 Prisma 推出基于深度学习的图像风格转换应用、自动写作机器人的出现等等，大众越来越能切身的感受到人工智能所带来的改变。在下面的篇幅中，笔者将带大家一起回顾一下 2016 年深度学习领域都发生了哪些值得关注的大事。</p>\n<p><strong>3 月： AlphaGo 战胜李世石</strong></p>\n<p>在北京时间 2016 年 3 月 15 日的下午，谷歌开发的围棋深度学习系统 AlphaGo 以总比分 4 ： 1 战胜了韩国棋手李世石，成为第一个在 19×19 棋盘上战胜人类围棋冠军的智能系统。 AlphaGo 战胜李世石把深度学习的概念从学术界推向了大众，并点燃了大众对于人工智能的巨大热情。虽然 AlphaGo 不是第一个战胜人类世界冠军的系统，但 AlphaGo 的胜利绝对是人工智能历史上的一座里程碑。</p>\n<p>和 1997 年 IBM 的智能系统深蓝（ deep blue ）击败国际象棋世界冠军卡斯帕罗夫不同，完全依靠计算机的运算速度是几乎无法在 19×19 的围棋棋盘上战胜人类的。为了在完整的围棋棋盘上战胜人类世界冠军， AlphaGo 需要使用更加智能的方式。深度学习技术为这种方式提供了可能。在 AlphaGo 的核心组成部分中，估值网络（ Value Network ）和走棋网络（ Policy Network ）都使用到了深度学习的技术，这也是 AlphaGo 背后真正的大脑。</p>\n<p>虽然 AlphaGo 战胜李世石将人工智能推向了一个新的高度，但它的能力也不应该被过分放大，更不应该认为人工智能全面超越人类的时代即将来临。因为 AlphaGo 能够解决的仅仅只是在一个特定环境中定义好的问题，要将人工智能系统真正的应用到开放环境还需要研究人员更多的努力。这也将是 AI 未来发展的方向。</p>\n<p><strong>4 月： TensorFlow 发布分布式版本</strong></p>\n<p>虽然 TensorFlow 已经支持分布式，但如果类比 TensorFlow 和 Hadoop 系统，那么 TensorFlow 相当于只实现了 Hadoop 系统中 Mapreduce 计算框架的部分。要将 TensorFlow 真正应用到真实的生产环境仍然存在门槛。为了解决这个问题，才云科技将 Kubernetes 与 TensorFlow 结合，通过 Kubernetes 实现了对 TensorFlow 任务的监控、调度与管理，让 TensorFlow 的使用门槛变得更低。</p>\n<p><img alt=\"\" src=\"http://i1.piimg.com/567571/f595316a4ec79f8c.jpg\"></p>\n<p>为了解决这个问题， TensorFlow 于今年 4 月发布了版本 0.8.0 。从该版本开始， TensorFlow 开始支持分布式模型训练。分布式 TensorFlow 可以极大的加速神经网络的训练过程，上图展示了分布式 TensorFlow 的加速比率。从图中我们可以看到，通过 100 个 GPU 并行的方式， Inception-v3 模型的训练速度可以加快 65 倍，这使得原来需要半年的训练过程可以在不到 3 天的时间内得到结果。这也标志着 TensorFlow 从一个玩具变成了真正能用的工具。在 TensorFlow 0.8.0 发布不久， DeepMind 也宣布之后的所有系统都将基于 TensorFlow 来开发。</p>\n<p>虽然 TensorFlow 已经支持分布式，但如果类比 TensorFlow 和 Hadoop 系统，那么 TensorFlow 相当于只实现了 Hadoop 系统中 MapReduce 计算框架的部分。要将 TensorFlow 真正应用到真实的生产环境仍然存在门槛。不过，将 Kubernetes 与 TensorFlow 结合，通过 Kubernetes 实现对 TensorFlow 任务的监控、管理，可以有效解决这些问题。</p>\n<p><strong>6 月： Prisma 图像风格转换 App 上线</strong></p>\n<p>Prisma 是一款通过深度学习技术改变图像风格的手机 App 。该应用上线之后，在短短一个星期时间内下载量超过了七百万次，且拥有超过一百万的活跃用户。该应用的推出标志着深度学习技术不仅是一门科学，它更可以被应用于艺术领域。下图展示了经过 Prisma 处理之后的图片效果。 Prisma 的出现将深度学习技术从高深的学术研究推到了大众的日常生活，让其更加广泛的被大众所了解。在该软件之后，更多图像、视频风格转换（比如像脸书推出的 Caffe2Go ）、自动音乐作曲等软件被陆续推出。</p>\n<p><strong>7 月：谷歌智能数据中心</strong></p>\n<p>继 AlphaGo 之后，谷歌的 DeepMind 团队将深度学习的技术用在了智能数据中心上。通过增强学习（ reinforcement learning ），新的数据中心智能系统可以更好的配合机器内的风扇和数据中心的空调使得既可以保证所有机器的散热，又可以最大限度的降低能源的消耗。通过控制数据中心内 120 多种不同的设备，智能数据中心可以节省大约 15% 的能源开销，每年为谷歌节省数百万美元的成本。而且这只是深度学习在智能数据中心应用的开始， DeepMind 团队还在尝试安装更多的传感器和控制器使得数据中心的能源利用率可以进一步提升。</p>\n<p><strong>8 月： SyntaxNet 发布 40 种语言的语法分析模型</strong></p>\n<p>在今年 5 月，谷歌发布了基于深度学习的自然语言理解（ Natural Language Understanding ， NLU ）算法框架 SyntaxNet ，并且提供了训练好的英语语法分析器 Parsey McParseface 。在随机抽取的 Penn Treebank 新闻数据集上，该语法分析器可以达到超过 94% 的准确率。这样的正确率已经超过了以往所有的算法，并已经非常接近不同语言学家之间大约 96%-97% 的认同率。不同语言学家对同一句话可能有不同的分析，认同率刻画了他们之间彼此认同的概率有多高，这也大致给出了计算机可以达到的理论上限。不过这只是在文法非常规范的新闻数据集上，在谷歌从网页上整理得到的 Web Treebank 数据集上， Parsey McParseface 可以达到大约 90% 的正确率。</p>\n<p><img alt=\"\" src=\"http://i1.piimg.com/567571/ffc8fee3f1a26da0.jpg\"></p>\n<p>在继 Parsey McParseface 之后，谷歌于今年 8 月又开源了 40 种其他语言的分析模型，并且同时支持文本分割（ Text segmentation ）和形态学分析（ Morphological Analysis ）功能。到目前为止，通过 SyntaxNet 开源的模型已经可以分析覆盖全球半数以上人口的母语，而且在大部分语言上，分析的准确率都是目前全球最高的。上图展示了使用 SyntaxNet 中文分析模型对中文句子的语法分析结果。深度学习将自然语言处理问题中最基础的语法分析问题又向前推近了一大步。将这些模型开源将大大加速自然语言处理领域的研究进展。</p>\n<p><strong>9 月：谷歌上线基于深度学习的机器翻译</strong></p>\n<p>今年 9 月，谷歌正式发布了基于神经网络的机器翻译系统（ Googel Neural Machine Translation system ， GNMT ）。该系统基于深度学习技术，可以巨幅提高翻译的准确率。与基于短语翻译的传统机器翻译算法相比，基于深度学习的翻译算法可以直接翻译一整句话，这可以大大简化翻译系统的设计，同时更高效的利用海量训练数据。根据谷歌的实验结果，在主要的语言上，基于深度学习的翻译算法可以将翻译结果的质量提高 55% 到 85%。下表对比了不同算法翻译同一句话的结果。从这句话中，我们可以直观的看到深度学习算法带来的翻译质量的提高。</p>\n<p>不同翻译算法的翻译效果对比表：</p>\n<p><img alt=\"\" src=\"http://i1.piimg.com/567571/6b6db49d4dffe513.jpg\"></p>\n<p>从今年 9 月开始，在谷歌翻译产品中，所有从中文到英文的翻译请求都是由基于深度学习的翻译系统完成。谷歌使用的基于深度学习的翻译系统完全是通过其开源产品 TensorFlow 实现的，该系统目前每天处理了接近两千万次翻译请求。从中文翻译成英文只是谷歌翻译支持的一个语言对，之后谷歌还会将基于深度学习的翻译算法应用到更多的语言对上。</p>\n<p><strong>11 月： DeepMind 和暴风雪公司开始在星际争霸 2 上开展合作</strong></p>\n<p>在今年的 3 月， DeepMind 团队开发的 AlphaGo 战胜人类围棋世界冠军不是人机博弈的终点，相反，这只是一个开始。 DeepMind 在今年 11 月正式开启了和暴风雪游戏公司的合作，将他们下一个目标定在挑战星际争霸 2 这款即时战略游戏上。相比围棋，星际争霸 2 是一个更加开放的环境，对于深度学习系统的设计难度又有指数级的提高。首先，虽然 19×19 的围棋棋盘可能有多种不同的状态，但星际争霸 2 的状态总数几乎是无限的，再加上这款游戏对即时性的要求，所以将对整个深度学习提出更高的要求。其次，星际争霸 2 是一个信息不对称的系统，玩家只能看到自己的地图，这要求深度学习系统对“局势”做出判断。</p>\n<p>在 BlizzCon 2016 上，暴风雪公司宣布将开发一个对深度学习系统更加友好的 API ，从而正式开启与 DeepMind 团队的合作。上图的右侧展示了星际争霸 2 的正常视角，而左侧展示了提供给深度学习的视角，这样可以方便深度学习统更好的获取信息。相信在不远的将来，深度学习将被更多的应用到开放环境中。深度学习系统将在更多竞技运动中战胜人类的同时，也将在更多领域将人类从重复劳动中解放出来。</p>\n<p><strong>12 月： DeepMind Lab 开源</strong></p>\n<p>为了让深度学习系统能够自己学会如何解决复杂问题，继 OpenAI 开源了 Universe 项目之后， DeepMind 于今年 12 月也开源了 DeepMind Lab 。 DeepMind Lab 是一个专门为人工智能研究设计的第一人称 3D 游戏平台。在这个游戏平台中，智能体（ agent ）需要完成类似收集水果、走迷宫、穿越有悬崖的通道、使用发射台在空间中移动等任务。如今 DeepMind Lab 已经成为 DeepMind 内部的一个主要研究平台。</p>\n<p><strong>2017 年</strong></p>\n<p>相信深度学习将在以下几个方面将实现质的突破：</p>\n<p>深度学习将从大学实验室和顶级 IT 公司走向大众，更多的公司将通过深度学习技术解决实际的问题。随着深度学习工具的开源以及技术的成熟，越来越多的个人和企业将享受到深度学习技术所带来的好处。</p>\n<p>深度学习将覆盖更多的领域。从 2012 年深度学习突破了传统图像识别技术的瓶颈并取得了 ILSCRC （ ImageNet Large Scale Visual Recognition Challenge ）比赛的冠军开始，深度学习能被应用到了越来越多的领域。在 2017 年中，笔者相信深度学习将继续突破传统技术的瓶颈，并将被应用到基因技术、个性化医疗、自媒体、公共安全、艺术、金融等各个领域中。</p>\n<p>随着 AlphaGo 战胜李世石，深度学习系统在封闭环境下又取得了突破性进展。在 2017 年，相信深度学习系统将更多的尝试在开放环境下的应用。无论是无人车还是智能星际争霸 2 玩家或者是 DeepMind Lab 都将是深度学习在开放环境下的尝试。</p>\n<p><strong>作者简介</strong></p>\n<p>郑泽宇，才云科技（ <a href=\"http://Caicloud.io\" rel=\"nofollow\">Caicloud.io</a> ）联合创始人、首席大数据科学家。其团队成功开发全球首个成熟的分布式 TensorFlow 深度学习平台（ TensorFlow as a Service ），解决了分布式 TensorFlow 上手难、管理难、监控难、上线难等问题。基于此平台，才云大数据团队为安防、电商、金融、物流等多个行业提供有针对性的人工智能解决方案。归国创业之前，郑泽宇曾任美国谷歌高级工程师。从 2013 年加入谷歌，郑泽宇作为主要技术人员参与并领导了多个大数据项目。由他提出并主导的产品聚类项目用于衔接谷歌购物和谷歌知识图谱（ Knowledge Graph ）数据，使得知识卡片形式的广告逐步取代传统的产品列表广告，开启了谷歌购物广告在搜索页面投递的新纪元。他于 2013 年 5 月获得美国 Carnegie Mellon University （ CMU ）大学计算机硕士学位，期间在顶级国际学术会议上发表数篇学术论文，并获得西贝尔奖学金 （ Siebel Scholarship ）。</p>\n</div></div>"], "reply": "2", "tittle": "回顾 2016 年最受关注的深度学习发展记", "comment": ["准备学习一下。", "这算是刚发出来就 out 了么"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>1.包括访问时间 IP\n2.访问的所有网页\n3.每个网页的停留时间 鼠标滚动 复制等活动记录</p>\n</div></div>"], "reply": "14", "tittle": "有什么 JavaScript 可以监控记录用户访问网站的所有行为细节？", "comment": ["google analytics 不谢", "腾讯微云网页版你可以看下", " 这个能看到什么？", "话说楼主为什么不直接用 cnzz 的热点图或者百度统计呢？", "国内可以用 growing io 植入也比较简单", "刚装了 ublock 屏蔽这些东西 :P", " 是不是比 adblock 好用些？", " 是", "5 楼+1", "sandbox", "growing io +1", "zhuge io 友盟什么的", "google analytics 吧 ，便于我屏蔽", " 也许能帮到你"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这两天有人晒桌面贴，我就想着大家是不是也该晒晒电脑的容量呢。</p>\n<p>前几天清理了下 Mac ，删除了没用的，转移了不常用的进 NAS 。却发现 NAS 容量才用了 14%。有点后悔当时不该入 3G 的红盘而应该是 512G 的 SSD 。</p>\n<p>大家也来晒晒自己的容量吧。年终了，没清理整理电脑文件的小伙伴们也该整理整理啦。</p>\n<p>PS:手上的 Mac+NAS 差不多刚好用了一年。</p>\n</div></div>", "<div class=\"topic_content\">3T 的红盘打错成了 3G 的红盘，汗一下。</div>"], "reply": "68", "tittle": "2017 晒电脑剩余存储容量（年终了该整理整理电脑文件啦）", "comment": [" \r", "奇怪，之前在测试节点发图片地址直接显示的，这个节点却不行了。", "原来是主题里面直接贴地址无效，趁来得及赶紧编辑掉^-^", "然而 5min 过去了···", "几分钟前我已经把主题里无效的图片地址删掉了。 @", "存电影的话， 3T 不够用", "udev                    1.9G  4.0K  1.9G   1% /dev\r", "tmpfs                   391M  1.5M  389M   1% /run\r", "/dev/sda1               1.8T   25G  1.7T   2% /\r", "none                    4.0K     0  4.0K   0% /sys/fs/cgroup\r", "none                    5.0M     0  5.0M   0% /run/lock\r", "none                    2.0G  145M  1.8G   8% /run/shm\r", "none                    100M   52K  100M   1% /run/user", " ", " 虽然看着还剩一百多 G ，但总感觉你好像快不够用了。", "我就不发之前剩余几十 M 的囧样了，拼死删删删凑合用几天。感觉都不能删除，要常驻系统。。。", "\r", "双 ssd, 真心赞一个自己", " 土豪抱抱", "2012 年中 Mac 飘过，光驱位 128G ，硬盘位原 750GB ，目前还剩 700GB 左右~~~：）", " 之前跟你一样, 光驱位 128g , 硬盘位置 350gb =>1t , 然后由于是 windows, 为了保住 128g 的系统盘, 把 User 文件夹链接到了机械硬盘上, 确实 C 盘容量安全了, 但是性能变成了整个系统的瓶颈\r", "今年年底实在受不了了, 将 1t=>换成了 960gb 的 ssd. 目前瓶颈完美的卡到了 CPU 上.  \r", "\r", "ps. 我的 cpu 也是 2012 年的:)  thinkpad t420 i7", "\r", "两块 SSD 表示没压力", " 应该组 RAID0 这样可以整合在一起然后随便分区了。跟宏基学的", "  你牛。\r", " 空着这么多是啥心情。\r", " CPU 的话不像硬盘那样经常感觉到瓶颈吧。", "目前已经这样了，再买个硬盘？\r", " ", "剩余空间\r", "~30G/ 223G 笔记本\r", "<1G/ 500G 移动硬盘\r", "<100G/ 1024G onedrive\r", "<1G/ 128G walkman\r", "感觉要死了", " 12 年的 cpu 还是不行, 一般的时候不会有卡顿, 仅仅在跟 java 相关的时候, 比如 spring 编译, 比如 android studio 编译... 一下就能看出区别了", " 刚换的 SSD", "有个四盘位的 NAS ，起初放了一块海淘的 1T 红盘，快满了，然后趁特价京东买了一块 4T 红盘，然后，大盘剩余空间 3T ，小盘剩余空间 600G.....感觉填不满了......", "\r", "\r", "\r", "主机和两个 nas 的剩余，一直用不满。 nas 分别是 raid10 和 raid1 ，一个用来做网络硬盘和下载盘，另一个做备份和手机资料同步。", " 有点无语，明知用不了多少还弄那么大容量，看着浪费不难受么。\r", " 同情一下，不知道你哪来这么多东西要存。话说就算电影电视剧之类，可以网上看啊，这年头的网速在线看也没啥影响，并不是非得存自己硬盘啊。\r", " 忍不了的时候可以买新电脑了。\r", " 握爪，忧伤填不满。\r", " 用不满愁，用满了更愁。", "  \r", "笔记本装不下，只能挂移动硬盘了", "^^ >>> df -h                                                                                                                            22:10:49 \r", "文件系统        容量  已用  可用 已用% 挂载点\r", "udev            7.8G     0  7.8G    0% /dev\r", "tmpfs           1.6G  9.5M  1.6G    1% /run\r", "/dev/sda2       453G  161G  270G   38% /\r", "tmpfs           7.8G   89M  7.7G    2% /dev/shm\r", "tmpfs           5.0M  4.0K  5.0M    1% /run/lock\r", "tmpfs           7.8G     0  7.8G    0% /sys/fs/cgroup\r", "/dev/sda1       511M  3.6M  508M    1% /boot/efi\r", "tmpfs           1.6G     0  1.6G    0% /run/user/119\r", "tmpfs           1.6G   28K  1.6G    1% /run/user/1000", " \r", "\r", "C 盘买的时候比 D 盘贵", " 不，那些是剩余。。都满了", " \r", "Surface pro4\r", "256G 的 SSD\r", "2T 的移动硬盘\r", "128G 的内存卡", " 請問一下這個是什麼 app ？", " RAID 0 不方便，有时候突然挂掉，再启动就要等校验半天。", "刚入了一块 2T HDD （ 7 英寸目前最大的容量了）和 1T 的移动硬盘，把笔记本上的原装 1T 拷贝之后换成了 2T ，原 1T 塞到了硬盘盒里，还有一块 2T 的雷电 USB3 双接口移动硬盘。目前根本不愁存储空间。", "[img]https://ooo.0o0.ooo/2017/01/05/586e8e00bf33a.png[/img]", "16 只>=2T 的硬盘，春节后再入一只，没有都挂上，没法晒", "![目前最爱用的一台电脑（：]( ", ")", "还有个这个\r", "总容量 120G 还能多说什么", "扔在地上桌上柜子里和储藏室里的硬盘就不多说了，插着的硬盘里大概加一起也就 600G 剩余空间了。", "阵列柜路过", "你们怎么能用这么多……自从移动硬盘坏过我就明白了其实并不需要那么多 data 留着", " DaisyDisk", "文件系统           1K-块      已用      可用 已用% 挂载点\r", "dev              4062724         0   4062724    0% /dev\r", "run              4067264       844   4066420    1% /run\r", "/dev/sda8       63040396  19620184  40194872   33% /\r", "tmpfs            4067264    500080   3567184   13% /dev/shm\r", "tmpfs            4067264         0   4067264    0% /sys/fs/cgroup\r", "/dev/sda6       10249816   3864364   5841744   40% /media/storage\r", "tmpfs            4067264      2640   4064624    1% /tmp\r", "/dev/sda7         602404    101796    500608   17% /media/One\r", "/dev/sda1       39775912  25702696  14073216   65% /media/Two\r", "/dev/sdb1      209716220  72881052 136835168   35% /media/Three\r", "/dev/sdb6      255853564 225834408  30019156   89% /media/Four\r", "/dev/sdb5      255853564   6084496 249769068    3% /media/Five\r", "/dev/sdb7      251195164  48438424 189973636   21% /home\r", "tmpfs             813452         4    813448    1% /run/user/1000", "[尴尬]( ", ")", "路过\r", "![]( ", " )", " ", "今天双 11 买的 15 款 Mac Air 乞丐版：\r", "Macintosh              87.06GB 可用（共 120.11GB ）\r", "应用         其他       音频       照片       影片    备份\r", "27.57GB  2.31GB  1.78GB  1.34GB  47MB  5.7MB\r", "\r", "Transcend              129.74GB 可用（共 129.75GB ）", " 带色是加了什么？", " \r", "\r", "950 Pro + 4T 红盘", " 48t 都不够用，搞了 4 个 nas 后弃坑", " 🤝", "120G 的 mbp 还剩 43.9G ，台式的 2T 机械还剩 50G 不到，都是些好久不玩的游戏，正版盗版都有，小时候恨不得不睡觉狂玩游戏，现在满电脑的游戏，却提不起兴趣了， 128G 的启动盘 ssd 还剩 10G 左右，主要是桌面的 CRW 格式的原片", " WIN7 萌化主题..", " 好的，我去试试", "手贱装了 vs2015,C 盘快爆了。", "被提醒空间不足 n 次了 256g 的-。-", "FYI 标配是多少不记得了 显示的是 251 GB😂", " 该清理无用文件了。不然不难受么。\r", " 这样你都能继续用着。还不赶紧清理！强迫症表示不能忍。\r", " 用来一半，挺好的。既不浪费又不用担心不够用。\r", " 存储卡买了浪费了，不过你可以用来备份 timemachine 之类的啊。", "![mark]( ", ")", "看上去还是充足的 不过得把分区大小调整一下了\r", " ", " ", "![]( ", ")", " \r", "还够用", "没办法啊，资料越来越多（有点收集癖的感觉） 看到好的 repo 还是忍不住 clone 一遍（虽然用的时候是 composer cocoapods/carthage npm 重新下-。-）", "256G+256G SSD 的 Mac mini 的爬虫数据\r", "\r", "512G SSD + 1 TB 的台式机游戏\r", "\r", "256G 的 Mac book pro 的产品和设计\r", "\r", "5T+6T 差不多满了的大姐姐", " 你这是怎么做到了， 128G 还能剩这么多", " 电脑里就放点代码、音乐、常用文档之类的，还有 2 个 centos 虚拟机环境就没别的了。其他的不常用的都塞到 NAS 里去了。\r", " 代码之类的占不了多少地方吧。而且很多我觉得 star 了就好，需要的时候再 clone 呗。不然你 clone 了又不看和贡献代码有啥用。", "![微信截图_20170107001749.png]( ", ")"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>目前用的 mozjpeg ，软件压缩速度实在太慢了，特别对 10M 以上的图片，压缩要很久才结束，有没有压缩质量好而且时间特快的软件？</p>\n</div></div>"], "reply": "6", "tittle": "Linux 下最好的压缩图片软件是什么？", "comment": ["ImageMagick", "pinta", "gThumb", "ImageMagick +1", "ImageMagick", "tinypng?"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>主力 pc 机，一个 dvi 口和一个 vga 口，连了两个显示器。</p>\n<p>一个写代码，一个看效果，再想看文档的时候已然不够用了。</p>\n<p>现在手头还有两三台富裕的显示器，有没有什么简便的方法能用上的吗？</p>\n<p>主板上有三个显卡接口，多买块显卡可行吗？曾经找了一块显卡插上，两块显卡型号不同，识别不出来。</p>\n<p>那种一百多块的外接显卡怎么样，靠谱么？</p>\n</div></div>"], "reply": "8", "tittle": "有什么简便的多接显示器的方案？", "comment": ["只有一个 DVI 和一个 VGA ？你的显卡是半高卡？", " 啥叫半高卡？\r", "\r", "10 年的显卡了，当年 hdmi 还少吧", "莫非是还有一个 S-Video ？", "AMD 的 Eyefinity 表示屏幕墙毫无压力～", "集显+独显， BIOS 打开多显卡开关，然后就随便你搞了，你插满接口都行。\r", "我这里试过独显插 2 台，集显插 1 台， 3 台一起工作，没问题。", "以前 Windows 只能 1 个显卡，或 2 个相同的显卡，\r", "win10 好像可以 2 不同的显卡", "搞台 21 ： 9 的显示器吧", "升级下电脑就行了。买张亮机卡"]},
{"content": ["<div class=\"topic_content\">xshell5 和 winscp 同时连入，无奈下的东西太慢了，然后自己开梯子下打算用 winscp 传进去，却发现 winscp 异常断开，输入密码拒绝访问...尴尬了，这个时候 xshell5 还要用，无奈太慢了，去后台重置密码一波，还是熟悉的味道，还是熟悉的密码，这回都拒绝访问了？怀疑人生，重复 n 次，不少于 10 次，还是不行，是不是我电脑有毒，给客服密码他帮我登陆总行了吧，然后联系客服，客服说没什么问题，一切正常啊，然后也登录不了，还手把手教我重置密码😂😂。现在说工程师帮我解决。。叫我耐心等待。。有大大知道是啥原因吗，让我死个明白。。。</div>", "<div class=\"topic_content\">curl --remote-name --progress <a target=\"_blank\" href=\"https://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.3.tar.gz\" rel=\"nofollow\">https://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.3.tar.gz</a>\r<br>就是这个鬼东西。。。我重装系统了然后就又这样了</div>", "<div class=\"topic_content\">我对不起人民群众， sudo apt-get install -y git-core 的时候习惯性点了 yes ，禁止了 root 远程登陆！！！</div>"], "reply": "13", "tittle": "我的腾讯云服务器炸了，我是中奖了么？", "comment": ["被防火墙拉黑了吧", " 客服说正常啊", "你所在的网络环境是动态 IP 吗  ", "尝试重新拨号换一个 ip  ", "以前遇到过这种情况我就去这么解决的", "要想解决问题就把问题说清楚，拒绝访问是怎么拒绝访问，错误信息是什么", "1.建议在 3/4g 网络下测试一下看看是不是本地运营商的问题\r", "2.建议找找腾讯云有没有提供网页版终端 /紧急登陆方式 /vnc 等连接方式，先上机看看\r", "3.实在不行重装吧，尽量想办法做好快照，数据备份\r", "\r", "p.s:如果是千万云现在回复应该上百了，腾讯云还是要学习一个", " \r", " 在宿舍也不行，刚才是在公司。\r", "\r", " xshell 就提示拒绝访问，没有错误信息。\r", "然后我用 git 是可以登录， root 就不行。", "被拉进 hosts.deny 了吧。", " 试过换 IP 。现在重装好了。 TAT", " \r", "多次异常链接，可能会把你的 IP 丢进 /etc/hosts.deny 里面。 找到文件，然后把你的 IP 从文件里删掉就行了。 然后把你的 IP 填进 hosts.allow 里面。", " 不，我换 IP 了登录还是不行哦。现在重装系统，重装了 5 分钟还没好。。懵逼", "也有可能是 ssh 的最大连接数满了，  reboot 一下就好了。 如果 reboot 还不行，就可能是上面的问题了。", " 就只有 2 个 IP 。哎，真的好奇怪，不知道为啥 TAT 是不是我开着梯子原因？我重装了，谢谢解答，好梦：）", " \r", " \r", " \r", "可以看看我的 append ，一个 ruby 包怎么就会这样？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>用了为之笔记好久了，今天发现同步不了，一看才知道服务协议已经变更了。</p>\n<p>好了，现在可以付费，但 v2 上的帖子显示大家普遍担忧为知笔记撑不下去啊~；\n而换一个又得改习惯。</p>\n<p>另\n为知笔记数据保存在 My Knowledge ，如果不续费，可以自己用网盘同步资料库实现同步吗？</p>\n</div></div>"], "reply": "41", "tittle": "wiznote vip 试用到期", "comment": ["晚习惯不如早习惯。国内许多产品尿性不知道么？", "印象笔记 148/year", " wiz 原生支持 Markdown ，还是用 wiz 舒坦一些。", " 舒坦谈不上， 特别是在 macOS 中", "印象笔记三星活动搞了一年会员,打算到期之后自建 leanote 了", "已经给了一年的年费，感觉用完今年可能会转移了，或者是放到自己 GitHub 上面？虽然为知真的好好用，但是其实 onenote 也不错，而且不要钱，就是国内微软同步比较难，没试过挂 vpn 去上传", "已经把 wiz 的同步到本地了, 先弄了一个 leanote, 发现 chrome 上的插件不太方便.\r", "现在用 onenote, 插件也不错, 就是国内用慢一点.", " 这种回复简直流氓 说的跟 evernote 免费用户不能用一样（虽然有两个设备的限制，只能在两台电脑间同步）\r", "\r", "@楼主 wiz 难道没有在协议变更后，在应用首次启动的时候提醒收费信息嘛，我没在用，但我听一个同学说，提示是有的，可能你没留意吧~\r", "另外，真的需要就付费用吧，不需要的话就用脚投票去别的家或者是自建，用户习惯什么的，跟数据比完全不值钱吧。。。。。看你是在意这一点钱还是习惯了", "印象笔记就好了。。。 折腾啥呢 就是个工具么", " 看自己而已。。。", "出门右转，有道云笔记。", "50 一年 至于么。。", "虽然没写笔记了   但是已经用了好几年了  才 50 一年 直接支持", "成熟度、稳定性上， EverNote 比 Wiz 强得不是一星半点，但是 EverNote 最大的问题还是速度不够快，偶尔卡。", "mac 上实在太丑了，之前因为 md 转过去的，但是它的 md 支持也不好。\r", "还是 evernote 漂亮多了，虽然支持 md 比较麻烦，但是 md 写多了现在也没什么特别喜欢了，感觉直接写文档加一些样式也不错。\r", "淘宝先买 15 个月 evernote ，才 5 元", "60 一年吧，我觉得真用的话支持下也没什么阿，其实应该多一点档次 20 40 60 100 这样，大部分人如果没把空间或者流量用满会觉得亏", "不能写 md 的笔记软件拿来有什么用 ←_←\r", "wiz 外挂一个 vscode 写 md 很舒服啊", "为知笔记已经续费到 2019 年", "evernote 119rmb/6year", "wiz 直接续费 2 年，价格良心。", "比较了各种笔记工具，就为知笔记顺手。\r", "已续费两年。", "50 续了一年。真不想折腾", "200 续了 4 年，。。。。。", "evernote", "不用 onenote 的都是在折腾。\r", "evernote 公司都撑的艰难，各何况国内的模仿者们。\r", "\r", "涉及到数据的还是找个大公司的产品用安心点，无论是数据安全、隐私保护还是服务稳定性都比小公司好。\r", "\r", "不想花钱的， onenote 免费。\r", "舍得花钱的，一百多加个 onenote gem ，还用再找插件？\r", "\r", "还有第二个即点即输的笔记软件吗？？？？", "续费四年才 200", "刚去买了一年,有道云和为知结合来用(为知收藏网页比有道云靠谱很多啊)\r", " ", "leanote 能扔到坚果云吗", "反正我是续了两年,多级目录我是比较需要的,而且不想折腾了", " 怎么做到的？求告知谢谢。", "两顿饭的钱 , 多多支持这种良心公司吧", "续到 2024 了", "反正我是支持 wiz 的。十年前买的 CyberArticle ， 2011 年 wiz 官方宣布可以用老 CA 序列号换 VIP ，我一直没换，前两天想起来了，又去试了试，成功换了一年 VIP 。", "印象的剪藏，目前没有哪个可以比的，这个真的太好用了。\r", "\r", "我一般用印象收集整理，微信公众号的文章，网页的文章。他的插件还可以在浏览器搜索的时候显示相关笔记，太爽了。\r", "\r", "原创的笔记写博客，存本地，不用云。反正一般电脑随身带。", " 您的建议我会反馈给 wiz 的哥们的 谢谢建议", " 这也可以啊，我一直不知道啊，是直接联系客服吗？那原来的 cyberarticle 还能用不？", " 不用联系客服，在 wiz 里点击“升级到 VIP ”，然后有个“使用 VIP 卡”，直接把 CA 序列号粘贴进去点验证就可以了。原来的 CA 照样可以用。相当于 Wiz 给 CA 老用户的福利。", "前几天也买了。。。", "哈，今天下午发现为知同步失败，一看是要收费了，看了看我那几百条笔记，果断续费了，虽然 mac 上用户体验欠佳，但是拿来记笔记，我要求稳定，同步快就够了。", "一直是用印象笔记。。。最在意的就是隐私，在这点上 真心信不过国内公司", "印象笔记 淘宝充 1 年才几块钱。。。弄个 6 年的高级账户 新账号 也才 100 来块钱。。。"]},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"http://nvie.com/posts/a-successful-git-branching-model/\" rel=\"nofollow\">http://nvie.com/posts/a-successful-git-branching-model/</a>\r<br>\r<br>（另外，这篇文章也推荐阅读</div>"], "reply": "7", "tittle": "这种效果的图(流程图或者思维导图) 是用什么软件画的呢？", "comment": ["看了一下, 感觉很像用 keynote 手工撸的啊", "这种绘图风格的还真是第一次见. 搭车同问.", "omnigraffle", "这是两个类似的，但风格比文章里的差远了\r", "FlowChart ： ", "\r", "SequenceDiagram ： ", "百分百是 keynote 话的，而且网站上有源文件", " 可以提供下 源文件地址吗？", "sorry 没注意，在文章末尾找到了"]},
{"content": ["<div class=\"topic_content\">github 太慢，而且私有仓库不免费~\r<br>\r<br>我目前在用 <a target=\"_blank\" href=\"http://coding.net\" rel=\"nofollow\">coding.net</a> ，感觉界面不错，出现过一两次短暂的故障，可以接受~\r<br>\r<br><a target=\"_blank\" href=\"http://git.oschina.net\" rel=\"nofollow\">git.oschina.net</a> 看起来功能更多，界面没有 <a target=\"_blank\" href=\"http://coding.net\" rel=\"nofollow\">coding.net</a> 家的好看~\r<br>\r<br>大家一般用哪个？</div>"], "reply": "76", "tittle": " 和 ", "comment": [" 更接近 Github ， ", " 融合了一些团队协作功能进去，所以还是看你的需求了。如果就你一人用的话推荐 coding 。", "\r", "\r", "体验没得说，但是近来经常挂掉。", " 在国内肯本访问不了", "说错了，是在国外访问不了。", "oschina 更快 coding 体验更好", "都在用，之前还用过一个 ", "你关注一下 oschina 就知道 ", " 基本每个月都要挂的一两次，不知道现在有没有稳定点\r", "coding 不清楚，我是用的 bitbucket ，感觉还是挺不错的", "去年十月份前后的时候想用 ", " 来着，但试用过程中发现有些中文乱码了——搜索了一下发现 2015 年就有人提这个问题，被官方以底层问题拒之……\r", "\r", "目前没有私有需求，有的话准备自建服务了😂", " 无限私有仓库", " 我是天天都在用 git@osc ，虽然时不时有维护，那也会提前发公告，而且都在凌晨的时候弄机房切割之类的，稳定性还是不错的", "不过 @", " 说的对，在国外打开速度极慢", "我国内为了速度，用 oschina 的， coding 用过，特效很炫，其他好像没了", "Github 并没有慢到离谱，拉取到服务器速度完全可以接受。私有仓库算很便宜了。", "coding 吧，没有遇到过问题", " 个人使用 coding 提交代码经常 443,多提交几次就好了....不确定是不是我个人的环境问题.", "coding 体验更好，尤其是你的服务器在国外，使用 webhook 部署时", " 可能比较好，现在在用， ", " 用过几个月没发现什么问题， ", " 没用过。", " 说错了， ", "很神奇，我办公网能用 github ，但是居然用不了 git.oschina\r", "于是我辛辛苦苦的全部又迁移去了 github", "为何不试试 gitlab", " 我是作者，谢谢，感动 :~", " 我这里 github 完全被墙……", "如果你是个人仓库，用 coding\r", "如果你是团队仓库，用 osc\r", "\r", "coding 不支持很多团队合作功能，例如提 PR 等重要功能", "感覺 coding 的體驗好一下， 畢竟原來 是 gitcafe", "为啥没人吐槽 git@osc  下载仓库的代码需要输入验证码？", "coding", "只用 bitbucket", "github ， bitbucket", "没人用 Visual Studio Online 么？私有代码库， 提供 git 服务， 完美的团队协作，团队超过 5 人才收费， 说这个会不会被骂的狗血淋头？", "只选好看(｡･ω･｡)ﾉ♡\r", "\r", "相对来说 coding 的服务个人觉得还是要比 osc 会长久些，毕竟他的主业起家是这个，而且 git 服务也是联系其它核心业务的基础，因而 git 服务的存续与质量我认为是要好于 osc 的。", "推荐 gitlab ，另外阿里的也不错", " 挂了一个项目在上面，就再也没碰过了。 Visual Studio 太臃肿不想安装。", "自建 gitlab", "我从 oschina 转到 coding 了，基本只用命令行。", " 大牛，当时考虑到不知道网站背景，害怕服务随时可能中止，没想到都三年了还在", " 提供 git 服务，就算不装 vs ，也是可以用的", "coding 吧", "自己在用 coding 。。", " 楼主说因为速度原因放弃 GitHub 。你说 Bitbucket ，这个岂不是比 GitHub 还慢！", " 我也用过你家的，貌似你们的服务器只有一台阿里云主机，担心你们随时把网站关了！", " 用的无限 private ， 7 刀一个月， 但是这段时间天天要改 dns ，不然经常拉不下来", " 自用每次提交也没多少，我用着还行啊， github 慢是有时会被墙吧", " 我怎么记得 coding 是从 oschina 出来的，只是去年收购了 gitcafe ？", " 你说的对", "如果用的是阿里云主机，阿里自己的还可以，还可以配合他们自己的 Docker 构建服务。", " coding 有 PR 的啊，不过是 MR 和 gitlab 相似\r", "osc 我用的时候经常特别慢， coding 倒是也时不时挂过\r", "总体来说 coding 界面比较好看我用 coding", " coding 什么时候开始有 PR 了，我用的时候是没有的，还故意询问 coding 团队，那时还表示是开发阶段，并且团队协助并非免费业务", " 是 gitlab 改\r", " 自称自主研发，但我觉得像 gitlab 改，比如 “项目网络”\r", "\r", "改丑了！！！比 github 和 bitbucket 都丑！！！\r", "\r", "所以还是 gitlab 好", "从一开始就用 coding,功能够用就没有动力去尝试第二个了.", "  阿里有免费私有库吗？", "我都是一次性 push 到 coding 和 oschina....无论哪个挂了。。都不怕。。", " 一點關係都沒有。。。", "私人项目还是推荐 bitbucket\r", "开源项目 github 是王道", " 淘蝌蚪吗", "用过 ", " ，但还是比较小用没什么感觉。\r", "更推荐 github", " 感觉 coding 像是自研的，记得 coding 是 Java 写的,gitlab 是 ruby 写的,jruby 跑 gitlab 应该不太可能。", "gogs 自建", " 说错了，一个人适合 osc", "coding 最大的硬伤就是偶尔会抽风或者挂掉...其他还好", " 应该有的吧？我印象中他家 iOS 客户端开源的项目就是接受 pr 的\r", "不过我们自己只用同一个项目内不同分支的 pr", "如果只是使用远程仓库的话，两个其实差不多。\r", "而在线的私有项目， Coding 更好一些。\r", "\r", "但是都没 自己搭的 Gitlab 好。。", "coding 网络明显比 git@osc 要快。论及迭代速度，两家都很慢。", "coding 下班高峰期经常访问不了，提示不要下班时候提交，错峰提交，半年经验。", "刚从 gitoschina 切换到 codingnet 。 osc 的一个大问题就是如果 commit 修改的文件太多，就不给你看 diff 信息，这个不能忍。其他的 osc 还是不错的，也有 Android studio 的插件。 coding net 的缺点是不以代码为核心，打开项目的首页不是代码而是摘要。", " 至於 coding 就是不是從 ocschina 出來就不知道了，我記得做過 gitcafe 早期的付費用戶，記得 coding 在收購 gifcafe 好像僅是搞 web ide 的，收購之後就順著過 coding 這邊了。", "个人项目我选 bitbucket ，团队协作用 ", "推荐用 ", "很奇怪竟然很少人推荐 ", ", \r", "\r", "这么好的开源产品和无限免费服务真的是谁用谁知道,  \r", "\r", "而且一直保持非常活跃的开发, 体验又跟 github 兼容, \r", "\r", "小团队用云服务, 搞大了就自己搭一套.\r", "\r", "这款产品真的是良心产品.", "就冲 coding 这体验 也要用它啊", " 不错", " \r", " \r", "谢谢，因为自己团队也在用，所以暂时不会关闭的。\r", "当时 13 年开始的时候，真的是满腔热血，一心想做一个 git 托管服务。但是明显没有 coding 之类做的更好。也找不到商业模式。对应的 geakit ， gitcafe 都挂了～", "还是推荐 GitHub ，克服一下困难\r", "\r", "不过非要在这两个选，我选 ", " 有的  。不过我觉得 Gitlab 最好", "oschina 每个月挂几次吧，以前常用，用了 1 年，最后一个问题是导致库都必须换，就是没有 history 了咯。\r", "忍无可忍，换了 coding ，现在没有什么问题了。\r", "基本是半年才会遇到一个大问题，但是整体影响不大。\r", "服务更加稳定。\r", "\r", "而且 oschina 的问题，很难反馈到。\r", "\r", "coding 的问题，在冒泡里一发，技术和管理人员就跳出来了。。。", " 阿里云的界面，哈哈哈真的很阿里云", "他们本来就是一家公司。另外一个人出去了，弄了 coding"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>平时工作用 linux 系统多但是还不太会写脚本，最近开始写自动化脚本才觉得要好好系统学习一下，就推荐好的书或者教材啊，适合初学者的</p>\n</div></div>"], "reply": "22", "tittle": "求推荐 shell 脚本的教材", "comment": ["我当初学的是 linux 命令行与 shell 脚本编程大全。不知道现在有什么好书。", " 么么哒", "Shell 脚本学习指南", "mark 之", "我觉得你可以去看下 chef 感觉这个比脚本方便 用 chef-solo 应该就能满足你的需求了", "基本的教程 官方的也可以了", "随机帮助文件和参考手册是最好的 shell 教程。", "python 或者 ruby 吧， 何必折磨自己用 shell 呢？", "shell 手册居然还要推荐？！\r", "必然是钦定的 abs(Advanced Bash-Scripting Guide)", "现有生产环境脚本 + man + baidu/google", " 虽然也写了一些脚本，然而却没系统的学过😄 系统的学下可以少走很多弯路 Mark", "   里面有好几套 shell 的视频教程， 希望对你有用", "tomcat, redis, elasticsearch, kafka 这些软件的 bin 目录里面随便挑几个脚本看看别人怎么写的, 然后学一下 awk, sed, 再知道一下管道符,知道怎么用 sort, uniq, bc, curl 这些神器级别的程序就差不多了. 真不用系统学", "mark", " 这个不错 star +1", " 看这本就够了", "google ？", "shell 么，了解一下坑在哪，然后少写。\r", "\r", "不是特别简单的东西就用正经的强类型动态语言写。", "10 楼 +1", "人生苦短，我用 python"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>很多代码编辑器，在注释里写上 <code>XXX</code> <code>TODO</code> <code>FIXME</code> <code>NOTE</code> 关键字的话，这几个关键字是会被高亮显示的。</p>\n<p>那么你从什么时候开始知道这些的？</p>\n</div></div>", "<div class=\"topic_content\">看来还多人倾向于认为 TODO 等于 NeverDO ，我想你们说的应该是上班工作中遇到的问题吧。\r<br>\r<br>如果是自己的 side project 里的呢？</div>"], "reply": "59", "tittle": "有多少工作超过 5 年的程序员不懂在注释里添加 TODO FIXME？", "comment": ["我其实更习惯用 @", "  \r", "这个全盘搜索的时候 很容易匹配到..", "这跟工作 5 年有什么必然关系吗", "加上这个关键字，老板岂不是很容易知道我还有什么工作未完成？", "没工作都知道了，而且 IDEA 还有个 panel 把项目里的 TODOs 都列出来", "之前写 Minecraft Mod 的时候经常在自己的代码加 TODO 和 FIXME 做标记", "注释主要还是给人看的，如果工作超过 5 年都不曾使用，那说明这高亮注释对他来说可有可无。", "NetBeans N 年前就有 TODO 列表，还可以自己定义。", "工作都超过 5 年了难道还不知道，写了 todo 的意味着永远都不会做了呀！", "IDEA 配合 TODO/FIXME 和其他自定义注释简直不要太好用，提交代码之前检查一遍 TODOlist 已经成为习惯了。", "TODO 不意味着再也不 do 么", "一年的时候， vim", "todo 意味着再也不 do+1\r", "另外在注视里加这个有些 ide 需要插件才能实现，所以普及度不高吧。", "立 flag 哈哈", "不 do", "一般超过 5 年的都是直接 do 了，用不着写 todo", "TODO == TONEVERDO", "我已经忘了给公司写代码的时候里面留的 TODO 后来到底被 DONE 掉的比例。\r", "\r", "但是我自己的项目里，时不时的还是会干掉几个 TODO 的。", "加了 TODO 以后就永远是 TODO 了", " \r", "时间永远是不够的，当前永远有比做好眼前这个（锦上添花的）功能更重要也更有意义的事，所以不可能全部直接完成。", "话说目前 Android （ AOSP ）源码里面可以搜到 4090 个 TODO\r", "加上 TODO 之后，每次看到我都会想：哦这个有标记了，先做没标记的吧……", "用的最多的还是 @", ",需求变来变去,经常大段大段的废弃", "鸡肋。\r", "外部工具无法追踪开发历史。\r", "我更喜欢 bug 、 issues 管理和 review 工具比如 github ， 这些工具，同样可以完美的配合 Intellij 使用。\r", "git 分支 - 任务 - 外部工具关联的 issue 和 bug 编号， 三者能够统一起来。", "TODO 一般都是 priority 比较低的东西，一般是怕以后忘了，就随手写上。", "我很讨厌部署、提交代码的时候，编辑器出现的自以为很人性化的 todo 搜索。", "TODO 和 FIXME 究竟 DO 不 DO 或 FIX 不 FIX ，完全看年终奖发多少了", "整我", "一般都是直接全部全部写完吧，留尾巴有意思吗？", "自己的项目以及合作项目里会写 TODO 然后干掉\r", "\r", "公司的项目....我能稍微吐槽一下同事拿来当 IDEA 的高亮注释用么?已经做完的加个 TODO,为了注释比较醒目←◡←", "哈哈哈哈 TODO = NEVERDO", "有更好的工具能跟踪任务，写代码里面的往往不重要也不会去做", "對於自己的 side project ，我傾向於努力一次性從設計到完成，乃至開源。讓別人來發現問題，而不是留 TODO 坑", " 只是锦上添花不影响正常功能，并且还有自认为其它更重要更有意义的事情，那还添加 TODO 有什么意义，加不加没啥重要区别。再考虑到不同开发者想做的锦上添花的功能很可能不同，代码里面加 TODO 就更没意义了。", "工作 5 年的你是否知道 Stdafx.h 呢？", " 拿来卖钱的代码不可能开源的。\r", "\r", " 还是应该具体情况具体分析。在项目初期，为了尽快接受市场验证，需要尽快出能用的产品。这种情况下代码里 /项目管理里，留下一堆 TODO 还是很正常也没问题的。", "在我大一用 TextMate 的时候，看了一眼 Bundle 列表，就看到了这个功能。只不过大家都说了 TODO=NEVERDO ，主要是平时写了忘记了。又不长去搜。所以习惯于每个项目里放一个 org 文件写这种东西（之前用的 taskpaper ）。", "发现很多人不能正确区分 不懂 和 不做。", "打开 TODO list ，看到大批量的“// TODO Auto-generated xxx ” 就完全没有看下去的欲望", "哈哈哈，最看不惯项目代码里面一堆 // TODO Auto-generated xxx", "我喜欢用“ fuck ”做书签呢。 Vim 的寄存器都没有我的“ fuck ”好用。同样地，还有“ shit ”和“ shitshit ”， etc 。", " haha", "todo: 这段不改居然能工作，窃喜。不改了", "todo 这个 flag....", "知道，也有用到。", "-  crappy_code()\r", "+ #crappy_code() # Who cares this shit", " 所以只是加 TODO 没问题，而不是不加 TODO 就不好咯", "TODO 和 FIXME 列表一直默默的躺在代码里面没处理完过。", "表示工作第一个月就开始用 TODO 了，但是 FIXME ， XXX 等还真没用过", "Python 的话, PEP350, ", "这个和多少年工作经验有关系么？行动力强，不写 TODO 或者 FIXME 一样会 Fix 或者会做完，另外，也可以用其它自己顺手的方式去纪录。", "我是看到过很多项目结束了， todo 还没有 do 的。", "刚写了个 //TODO:  的看了这帖子 赶紧把这行删了 (出了 bug 再说   \r", "以前 明明自己觉得逻辑不对的代码加了 //FIXME: 然后已经在线上跑了好久了。。。。", "写 TODO 是为了把工作丢给别人去 do\r", "自己从来都不会去 do 了", "不可能不知道吧，随便一个开源库或框架里就有，导入 IDE 自己就显示。\r", "除非真的人一点源码都不看，一个库框架都不用。", "不过， TODO 等于让别人 DO 这倒是真的", " 哈哈哈 +1", "一年 协作的时候发现小伙伴的代码那样写 todo 竟然是黄色的哎 ws 还可以搜索 于是搜了下 clean code 里面也推荐", "TODO == NEVER DO 哈哈"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如果没有服务端，应该就没法做常见的 HTTP 缓存的处理逻辑了吧？那么还有那些可以进行性能优化的方式了？</p>\n</div></div>"], "reply": "16", "tittle": "静态博客，没有服务端，如何做性能和缓存优化？", "comment": ["既然是静态的那存储在磁盘里已经很高效了。如果能提升就是缓存到内存中。", "静态博客没有服务端这个说法就不对。。", "图片压缩\r", "CDN", "静态博客能有性能问题？静态站有 nginx 就够了，如果你需求简单也可以试试 lighthttpd ，差不了多少。瓶颈是网络，其次是磁盘。\r", "加 CDN 也只是加速访问而已\r", "\r", " 操作系统会缓存的啊，除非请求有相关性可以 preload 。不过那样又要跑程序了。大并发的情况下还不如直接上。", "全站 CDN", "推荐 service worker 的本地缓存方案，可以将静态与动态资源按配置缓存在本地的 cache storage 中，针对不同资源设置不同的缓存时间、缓存空间大小等，这样，就不需要去服务端配置缓存逻辑了。具体配置参见： ", " 可能题目有歧义，我没有说静态博客没有服务端，只是我的博客因为托管在 github pages 上，所有无法操作服务端", "减少 /合并请求，上 HTTP2 ，资源尽量放到一个域名下，因为冷门域名解析时间也很可观的，会造成白屏时间过长。", " 我托管在 github 上， nginx 等需要服务端操作的都做不了", "静态已经是最大的优化了。", " 上 CDN ，没别的了", "放对象存储里(或者 cdn)，上 http2 ，很多带 gzip 压缩", "噗，那还优化什么。。\r", "优化一下你的前端 ==\r", "减少前端代码，压缩 JS CSS ，静态文件比如图片放到国内云储存，试试 Staticfile CDN\r", "\r", "静态已经是最大的优化，再优化就是缓存到内存中，然而你操作不了服务器， Github Pages 也没有性能问题，有你也管不了。。。\r", "还有，就是用 CDN 缓存所有文件，包括 HTML ，把 CDN 当作服务器，然而 Github Pages 已经使用了 Fastly CDN 。", "对于服务端而言，往往是当你的某个请求有大量的数据库查询，耗时的计算时才需要缓存什么的，而你这个都已经静态化了，就是纯文件的返回，没什么必要再做多少优化了，再优化就是前端的优化了，资源合并什么的", " 请问 OSS 算不算一种 CDN 呢？一直不是很明白这两个的关系", " \r", "\r", "OSS 是云储存\r", "\r", "七牛 又拍 属于 云储存 + CDN\r", "百度云加速 属于 CDN"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>台式机原本有一个显示器，加上 10 年前高中期间买的一台破液晶，以及从丈母娘家搜刮来的一台破液晶。（感觉自己是个垃圾党）</p>\n<p>一台主用，一台用来看文档，一台还可以一直开着直播……</p>\n<p>好爽</p>\n<p><img alt=\"新家的办公桌\" src=\"http://ww1.sinaimg.cn/large/854b37c2gw1fbg5ine9ppj21kw16o4ie.jpg\"></p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>忘说了，2个显示器挂支架上。1个显示器用底座平方在桌面上。目前还不知道是不是能放得下。</p>\n<p>3个显示器的尺寸都不一样，我也不打算把他们挨个靠在一起，因为我用的是平铺式窗口管理器，所以这点没有关系。（平铺万岁~）</p>\n<p>等搬进新房再更新后续……</p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>已经搬进新家了。安装显示器的时候发现3件很尴尬的事情：</p>\n<ol>\n<li>较新的那台显示器没有VESA孔，没法装在支架上；</li>\n<li>古董的那台显示器因为用了杂牌DVI/VGA转接口，Linux下识别不出最佳分辨率。后来重新买了根质量好的转换线解决了。</li>\n<li>古董显示器的底座实在不知道该怎么拆下来，后来只能带着底座挂支架上。</li>\n</ol>\n<p><img alt=\"桌面双显示器\" src=\"http://ww4.sinaimg.cn/large/854b37c2gy1fec33h2wn6j21hc140npe.jpg\"></p>\n</div></div>"], "reply": "63", "tittle": "搬新家了，打算装 3 个显示器", "comment": ["书桌不错,求链接", "同求书桌链接", "书桌小了点", " 都是宜家买的便宜货，桌面和桌腿分开买，自己拼装。显示器支架是淘宝上另外买的。\r", "\r", "利蒙桌面￥ 119 ， ", "\r", "奥勒夫桌腿￥ 20 四个， ", "\r", "显示器支架（淘宝货）， ", " 没办法啊，老婆只分给我一个阳台，阳台宽度一共才一米三。", " 见 4 楼", "牛。", "桌子挺好看的,\r", "就是桌面小了点,", "这桌子怎么放得下三联屏", " 感谢，您给了我一个参考", " 支架高度调节方便么？", "三个一模一样的显示器才舒服……", "不如买个 P4317Q 这种显示器。不过画质一般了，据说背光也不太好。", "求推荐三屏显示器支架", "楼主给你个友情提示，宜家一米五长的桌子会轻微变形，（不要想啦，说得就是你这款）； 建议你的显示器支架下面再找个支撑", "仰望图吧基佬", "我喜欢直截了当说话，这桌子和支架有点便宜啊，楼主注意显示器重量，三个上去长期以往会不会压弯了啊 ？", "本来阳台 也有我一个 1.3 的地方， 后来做柜子了 😭", "这个逼  装的好", "宜家的桌子，能承受支架和 3 个显示器吗？", "宜家的品质，不敢恭维", "这个桌面是贴皮的，里面类似蜂窝状的……纸板\r", "我家桌面上两个单显示器支架，都是 27 寸，目前两个支撑点都可以肉眼看到翘曲\r", "\r", "楼主要想三个显示器安全……建议还是上 TB 订块厚点的实木台面，脚可以用宜家的便宜货", "显示器现都很轻，不是问题，主要是我想知道三个显示器干什么，莫非你就是传说中的炒股高级阶段玩家？", "明明是秀恩爱", "桌子小了", "桌子太小，支架很感兴趣，晚点看看", "我在设计书房的时候，就先设计了放 2m 长桌子的地方，现在很爽", "支架不错！", " 初步使用是，代码、文档、聊天\r", "聊天这个有点……", " 调节靠螺丝，调完基本就固定不动了。", " @", " 我用平铺式的窗口管理器，所以用尺寸各异的显示器也没问题，科科", " 我这个是 1.2m 的……", "得用 dock 吧\r", "mac 怎么接三个?", "   买三台 iMac >>>>(我逃。。)", "目测户型不大", " 这样的脚装上去能稳吗？", "宜家这商城只有上海才能用么", "桌子塌了怎么办", "一眼望去 书桌瑟瑟发抖", " 两室一厅，建筑面积 83 平米。", " 目前好像是只有上海可以", " 书桌跟我一样", " 桌子弯了就有理由买新桌子了。", "书桌小了， 80 宽的才可以", "同款桌子，用了一年坏的不成样子，建议新家不要买宜家了", "宜家的都是样子货，真心不如淘宝实木～", "同款桌子\r", "我桌上现在是 2 个 2417 和一个 pro\r", "压了一年了，中间弯下去的有点夸张\r", "建议你 3 个显示器，还是直接换了吧\r", "到时候就不是\"桌子弯了就有理由买新桌子了\"\r", "怕是“桌子弯了又要买 3 个显示器了”\r", "\r", "另外现在很多二手 27 的显示器都很便宜了\r", "我强迫症，显示器必须同一型号，同一批次。。。", "亲眼所见，这桌子放一台就会弯…\r", "\r", "放三台的话，估计会翻吧…", "宜家的品质，不敢恭维。", "这桌子也太小太矬了吧，怎么能配得上身份。。。哈哈", " \r", " \r", " \r", " \r", " \r", " 这么吓人…", "你确定这桌子能撑得住三台显示器？", "桌子太小了", "这个桌面中看不中用的.............", "旁边吊着的是投影机电动幕布线？", "键盘和鼠标放得下吗", "同建议换桌子，这桌子太轻了重心不稳，装个显示器支架对角不放几本书压一下总感觉桌子要翻，而且这么窄的桌子放三个显示器基本上贴脸上了吧", "又是晒么？\r", "\r", " ", "200 块的桌子你放小 2W 的重物在上面 .. 祝你好运 朋友", " 这线乱的看着强迫症不能忍。。。", "前几天看到这个帖子，觉得想法不错。\r", "\r", "本来想照着做的，后来一想，办公室和家只相距几百米，干脆家里别布置什么书房了，一切跟学习和工作的东西都放办公室，回家就是彻底放松，对我可能更合适。", " 请教一下 如何盒盖 MacBook 不休眠 ", "   ", " ", " 额，没有什么好的方法弄啊，视频线两根，显示器电源线两根，笔记本电源线一根，键盘线一根，鼠标线一根， usb 插口扩展器线一根，手机充电线三根，还有耳机线，噗。。。\r", "\r", "\r", " 先在打开盖子的情况下外接上显示器，然后关闭盒子，就不会休眠了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>spring mvc + spring data jpa 搭建的环境在加入 spring data jpa 后 , 启动报错, 日志如下:\norg.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userService': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private com.soccer.bat.repository.UserRepository com.soccer.bat.domain.UserService.userRepository; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Invocation of init method failed; nested exception is org.springframework.data.mapping.PropertyReferenceException: No property querytest found for type User!\nat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:334)\nat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1204)\nat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:538)\nat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)\nat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)\nat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:229)\nat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)\nat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)\nat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:762)\nat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)\nat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)\nat org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)\nat org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)\nat org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)\nat org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:5118)\nat org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5634)\nat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:145)\nat org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:899)\nat org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:875)\nat org.apache.catalina.core.StandardHost.addChild(StandardHost.java:652)\nat org.apache.catalina.startup.HostConfig.manageApp(HostConfig.java:1863)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:301)\nat com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)\nat com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)\nat org.apache.catalina.mbeans.MBeanFactory.createStandardContext(MBeanFactory.java:618)\nat org.apache.catalina.mbeans.MBeanFactory.createStandardContext(MBeanFactory.java:565)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:301)\nat com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)\nat com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)\nat javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1487)\nat javax.management.remote.rmi.RMIConnectionImpl.access$300(RMIConnectionImpl.java:97)\nat javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1328)\nat javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1420)\nat javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:848)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:322)\nat sun.rmi.transport.Transport$2.run(Transport.java:202)\nat sun.rmi.transport.Transport$2.run(Transport.java:199)\nat java.security.AccessController.doPrivileged(Native Method)\nat sun.rmi.transport.Transport.serviceCall(Transport.java:198)\nat sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:567)\nat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)\nat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.access$400(TCPTransport.java:619)\nat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$1.run(TCPTransport.java:684)\nat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$1.run(TCPTransport.java:681)\nat java.security.AccessController.doPrivileged(Native Method)\nat sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:681)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\nat java.lang.Thread.run(Thread.java:745)</p>\n<p>麻烦大家啦!</p>\n</div></div>"], "reply": "1", "tittle": "请大家帮我看下这个问题,谢谢大家!", "comment": ["已经解决了,谢谢大家, 问题是在 spring applicationcontext.xml 文件中配置需要 spring 自动注入对象的和 jpa 代理持久层实现的包路径配置不正确, 错误配置为:  `com.soccer.bat` 和`com.soccer.bat.repository` 这样对应包下的类不能被管理, 需要在之后使用`**` 匹配. 最后为变为这样:  `com.soccer.bat.**` 和`com.soccer.bat.repository.**`"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我是个普通的 PHP 码农，正式工作一年多一点了</p>\n<p>框架熟练 CI ，会用 yii2 、 TP3/5</p>\n<p>做的项目越多、越大，就感觉自己的架构水平越辣鸡；代码能写、能用，各种编程基本概念都懂，但就是不知道怎么合理运用它们。</p>\n<p>例如让我做个 xx 系统，需求我都明白了，但我总觉得自己写出来的代码不够优雅，尤其是如何划分一些类以及类之间的继承、抽象关系上，要么就是写着写着耦合度又提高了；在数据表设计上也是这样，属于那种 <strong>道理我都懂，但就是不知道怎么去做</strong> 的感觉</p>\n<p>所以我想问下各位，有没有那种用实际（或虚拟）案例来做分析，教授如何优雅划分类、设计表这样的教材？载体不限，书籍视频都可以，收费也行</p>\n</div></div>"], "reply": "62", "tittle": "感觉自己的架构水平好弱，请问有没有推荐的最佳实践教材？", "comment": ["php 不就应该是面条嘛,还能咋地.......", "别整这么多没用的 \r", "\r", "要想去搞什么优雅啊 耦合度啊 那你得放弃世界上最好的语言，转而去研究世界上最具有模式的语言： java\r", "你觉得这个代价值得吗。", "尝试下 Laravel 框架，看看源码", " 面条是啥意思？\r", " 你的意思是写 PHP 只要无脑面向过程就行了、完全没必要追求优雅吗？\r", " 看过不少框架源码，学到一些模式，但不知该如何合理运用在自己的实际项目中……", " Java=世界上最啰嗦的语言。", "JAVA 跟优雅没有任何关系，就是结构工整、语法啰嗦，追求优雅的话你可以看看 laravel ，关键字 repository ，推荐你看看这个 ", "少年听过 DDD 吗", " 谢谢。感觉 Laravel 都快成为优雅的代名词了。不过前阵子鸟哥才说过某优雅的框架执行速度不行啊……\r", " 搜了一下，看不太懂，有入门级的教程吗？", " ", "学架构没什么好教材，最好的办法就是工作中努力把事情做得更好，更接近完美。", " 感觉啰嗦+10086", "一年多谈啥架构，也没什么教材，架构本身就是掉坑掉得体无完肤总结出来的东西", " 感谢，有实际案例就会好懂一些\r", " 说的倒是容易……我也想“努力把事情做得更好，更接近完美”，但并不清楚该怎么做，也不知道这么做到底对不对", "优雅 -> scala\r", "结构 -> java", "Laravel 性能还好的，用 ", " 免去框架加载时间", " @", "  然而 Java 是典型的工业界语言， verbose yet obvious (Scala Cookbook 里的原话哇咔咔)", "程序设计是从需求分析阶段就开始了...不过现在干 php 的都挺不重视这个的", "设计类最主要的还是需要学习面向对象设计方法论，经典的比如 grasp 的创建者模式和信息专家模式在划分类时都是很有用的指导。这方面可以看看 uml 与模式应用 这本书", "进一步地，可以看看领域驱动设计，尽管可能受限于环境因素不能照搬，但理解它的领域模型聚合实体值对象领域服务领域事件等概念还是挺有用的。这方面的书写得都挺难看的...随便找本书翻翻了解下概念，然后可以去汤老师 cnblogs.com/netfocus 的博客上看看，他的文章写得很好", "最后，我的感觉，不一定对， php 这行业平均水平就这样了，写写过程式代码完成需求就行了，你弄些复杂的概念进来同事不一定看得懂，还影响同事间关系...业务代码翻来覆去就那样，平时工作里干的那些零零碎碎的工作对自己的技术提升真是有限，有时间多学点基础知识，搞点完整的复杂项目，这种提升才是真实的", "建议看看“企业应用架构模式”。架构模式很大程度上跟语言无关\r", "去大公司做大项目", "才工作一年，别想太多了，多干活多写代码，等你感觉代码哪里不爽了，或者哪里重复工作多了，再去看一些架构的书籍，就水到渠成了", "写 PHP 不就是图快吗，还要啥自行车", "同推荐 企业应用架构模式， 以及其作者  Martin Fowler 的博客", "一年。。 PHP 。。。谈架构。。", "语言只是工具，架构方案与语言关系不是特别大。现在 PHP 中的 ZF ， Symfony 框架，甚至 PSR （命名都是 Copy JSR ）都是从  Java 中获得灵感。\r", "\r", "不要为了什么追求架构，模式，想尽办法去看书，去套用。哲学上这叫形而上学，大部分情况下把简单的事情搞复杂。\r", "\r", "多写写代码，多进行实践，回过头来再去看看那些架构和模式，比较一下自己之前的方法，或许有顿悟的感觉，以后再应用就轻松得多。", "Unix 编程艺术", "《重构》。", "一直以为 php 和 jsp 一样，怎么快怎么来", "github 是最好的学习材料 多看看别人的 code\r", "但也不要太过于追求架构，如果跟同事一起开发，同事为了改代码，打开 7 ， 8 个文件才找到真正实现的地方，估计心理要骂娘了。", "《架构即未来》", "同 lz 差不多情况， 不过现在看框架的 源码，收获很大啊。", "一年。。。", "一年，还是做 php 的，谈啥架构？\r", "\r", "能快速出活就 OK 了，要啥自行车？", " 太偏颇了吧", " \r", " \r", " \r", "不好意思，我虽然是个普通的 PHPer ，但还是比你们有点志向的", "这种事情，真的需要场景和老师，比较经验向我觉得。多看看别人的源码吧。", "架构这个东西不是刻意就能学来的，工作中项目中可以多思考，而不仅仅是完成任务就行了。", "架构？还是结构？\r", "\r", "我猜楼主想问的是『怎么在代码里把类组织好』。\r", "\r", "除了多写，额，多写也没用，得看写什么东西。\r", "\r", "多造轮子，从零早起，慢慢就有感觉了。", " 写 php 几年，现在也写 python,java,scala ，何来比我有志向,哪看出来的？ laravel 的架构同时也是模式复用的结果， java 也有，语言之争也没啥意思。我是没看懂你 @我干嘛？", "架构和语言无关\r", "架构是一步一步演进出来的\r", "\r", "加油吧，先从重构做起，先把代码做到可测试化", "架构要结合业务吧，适合业务场景的架构才是好的", "架构就是你写代码的经验啊。 这东西是随着你开发经验来完善的。即使你看完了世界名师的架构框架，你没有从实践中总结出经验，你写出来的代码和现在的水平是相差无几的。", "你指的是代码层级的设计，这个和我们常规意义上说的架构联系不大。单说代码层级的设计的话，多写多修改，有经验了深刻理解下设计模式、重构，再反过来指导改进代码。再就是多看别人写的好代码，依葫芦画瓢。数据库的设计先读一本经典的教材，从了解范式入手。\r", "\r", "进入实践-读书-反馈到实践中的优化循环就上路了。\r", "\r", "书就先不推荐了，你应该已经有了比较多的代码实践，可以先了解常见的设计模式，然后读一个 mvc 、依赖注入类框架的源码。 PHP 系的可以看看 laravel 的源码。", "然后就是一些依靠自己平时多关注的最佳实践的积累了，比如看了 laravel model 的设计后你就会发现，一个关系型数据库表在设计字段的时候通常会加入 id 、 createdAt 、 updatedAt 、 deletedAt 等必要字段，然后自己思考后考虑到数据会存在类型、状态，所以每个表还会添加 type 、 status 字段。后来你又看到互联网 web 领域的后端应用一般要求最终一致性并注重低延时，所以你就取消了外键字段，用单独的 id 字段来记录记录之间的关系。\r", "\r", "没有多大诀窍，花时间去积累去关注。", " +1", " +1", " 问个问题哈，我还没到架构这个层面，咳咳 取消外键字段的话，那么数据一致性靠代码来保证么，咳咳咳，而且外键依赖不是只影响写入效率么，不影响读吧😊", "“看需求”\r", "\r", "不要为了应用某种设计模式而强行编码，有时候面条代码（面向过程）反而是更合适的实现方式。\r", "每一种开发理念都有其合适的应用场景的。\r", "（ JAVA 啰嗦，但是在合理设计文档充分的前提下， JAVA 很适合开发健壮性足够高的业务代码。）", "我就给你一个意见：你不要只看 PHP 好吗？", "从最近看 C#的 Orchard2 得到的经验是，多看优质的代码，受益匪浅", "架构这个东西和设计模式一样，属于一套形而上的东西，更像是先人把自己的经验进行总结后的产出。所以最好的方式毋庸置疑是看源码", "看框架源码", "个人感觉不用刻意追求这些东西:\r", "1. 平时多看好的项目的代码, 感觉到了自然就到了\r", "2. 可以追求好的架构, 可能会得不偿失\r", "3. 有时候是真没时间搞什么好架构", " 对对，我确实是想问“怎么在代码里把类组织好”以及“如何设计数据表”\r", " 额不好意思我点错了\r", " 请问“可测试化”是指单元测试吗？\r", " 感谢耐心回答，这么多人都推荐 Laravel ，我一定要去看看", "真考虑框架的速度，还不如自己写最基本的 mvc 比 85%的框架速度都快", "来呀，一起写 Java 呀。[滑稽]", " PHP 我也写过，写完之后发现这货真的是天生就是为 Web 而生的，而且 PHP 的优势就是快，写起来简单，架构能力这种反而是 PHP 的短板，放着 PHP 的长处不用为什么非要去发扬它的短处呢\r", "\r", "如果非要谈这些架构，为什么不用 Java ， Python 这种语言呢", "想要入门架构设计，推荐你读读软件架构设计，当然，如果你想要的其实是实现整洁优雅，你可能需要的是 effective 系列而不是学架构设计", " 如何设计数据表这是需要经验和结合业务来谈的，如果你想要避免设计出反人类的表，你可以读读 SQL 反模式这本书，还是有点用的，至于如何设计出最适合业务的，这个一般没有书讲，只能你自己去深入了解业务，或许可以查查领域模型设计相关的资料。", " 一致性是分几个级别的，一般来说，除了类似于支付宝设计资金流转这样的一致性极敏感业务， web 后端的一致性要求都不高，在 CAP[1] 中 Web 后端应用舍弃了 C ，而强调 A 、 P 。\r", "\r", "至于不用外键，这个原因很多，你可从 Web 后端应用的特点与外键的优劣来理解，可以参考这个[2]。举个例子， Web 后端的业务决定了删除数据记录以置脏位为实现，外键也受到了类似的限制。带外键的表写入效率低下是主要原因之一，外键不能支持后端数据库服务水平扩展（简单描述的话就是加机器）也是一个重要原因。\r", "\r", "[1] ", "\r", "[2] ", " 谢谢大佬，嘎嘎，从来没想过这个，涨姿势了 😄", " 抓了个现行 /滑稽", " 略有点尴尬，把 fork 版本发出来了 "]},
{"content": ["<div class=\"topic_content\">最近想开发钉钉和微信企业号的程序，但是都需要企业认证，请问大家遇到这样的问题怎么解决的？注册一个公司？</div>"], "reply": "4", "tittle": "如何注册钉钉微信的企业号", "comment": ["企业号可以选团队号，大多数接口都可以使用", "我就在考虑注册公司的事情 [不过是为了小程序和服务号", "记得微信的企业号不用认证也可以用自己的程序，只是会有频率限制吧。", "参加福利社里面的过年回家路的活动，然后他会自动给你创建 xx 的加油军团的组织，看了一下应该和企业类似的"]},
{"content": ["<div class=\"topic_content\">做过一些小项目，类似那种网上书城，简单 CRUD 的比较多。高性能，高并发，高可用几乎没碰过，当然并发编程的书还是看过。可感觉这三高真的需要一个平台，没有大的业务量练手真的不好实践~诶，好工作当然不好找😔</div>"], "reply": "9", "tittle": "下面这种情况，你怎么面试还是说直接 pass", "comment": ["应届毕业生的公司要求不是很高，我觉得主要看要面试什么公司吧", "应届毕业生，高并发，高性能，高可用都不会…确实企业对实习生要求低一些，还是能找到工作糊口…😭😭😭", "应届生，一个是是否可以好学，基础咋样，另外个就是看三个月之后的期望。不可能一蹴而就的能踩坑", "“会写 js 吗”", "难道你不是从这个过程过来的？", "有些公司你就算做了一年、两年都接触不到负载均衡、分布式集群。你做的不外乎是写业务，写接口，写 js 。然，这些东西上手起来也就那样，想要实践出真知的话，找个互联网公司从底层干吧，思维逻辑发散的话，你还怕找不到工作？", "从题主的描述来看，应该是一个新手， HR 在面试过程中，对于毕业生或者 1-2 年的新手来说，更多的是看中他们的学习能力，和对技术的热情，有热情有学习能力作为驱动，成为一个成熟的 developer 是迟早的事儿！加油！", " 那条评论我只是开玩笑的别介意😳，另外共勉😄", " ✌️"]},
{"content": ["<div class=\"topic_content\">JetBrains 发起了全球开发者生态系统调查，希望更好地了解我们的世界正在发生什么，并真正了解开发者及其需求。\r<br>中国的程序员们在我们的开发生态系统里占有重要的地位，当然不能缺席！\r<br>\r<br>请畅所欲言！参与问卷调查将有机会获得奖品！开始填写问卷：\r<br><a target=\"_blank\" href=\"https://www.jetbrains.com/research/devecosystem/#lang=CN\" rel=\"nofollow\">https://www.jetbrains.com/research/devecosystem/#lang=CN</a>\r<br>\r<br>期待听见伙伴们的声音。</div>"], "reply": "4", "tittle": "全球开发者生态系统调查－中国的程序员们为自己发声", "comment": ["已填写", "点进去发现我老早就完成这个问卷调查了，还有就是，楼主的 ID 很熟悉啊", "感谢支持:)", "近期还会有订阅优惠吗？上次半年订阅送半年的错过了。"]},
{"content": ["<div class=\"topic_content\">话说，去年某公司 CTO 现场 review 抽奖代码的场景，还历历在目啊~</div>"], "reply": "57", "tittle": "公司年会的抽奖程序，你们准备自己写么？", "comment": ["公司连年会都开不起了", "上一家公司写过，然后并没有用。", " 没有这么悲惨吧~~~应该是一等奖从一个 iphone 变成了一副对联吧~", " 是然后没有被抽中吧~", "去年写的抽奖程序，我们技术部一个都没中奖，表示这锅不好背。概率也就 1%而已。。。", "哈哈哈哈哈哈 公司刚倒闭 最近天天泡在图书馆里面", " 今年还搞不？技术部门中了大奖会被要求重抽一次么？", " 经济这么不景气\r", "\r", "本来我是计划打算推荐我们自己写的一个现场抽奖的应用： ", " 。现在我都不好意思打软广了~", "原来的公司年会，把员工头像都加到抽奖程序中，然后，舞台大屏幕不断的闪头像；\r", "大老板，喊了三次停。于是，三台水果笔记本，就被其他人中了...", "1. 现场拿 python random 一下。\r", "2. 微信公司群发红包，取极值。\r", "\r", "PS ：楼主你那个应用卖 99 元，发到 V 站不怕被喷吗？", "今年，不晓得有没有", " 微信红包，取极值，也才 200 吧。", " 是怕被封啊，所以我都不好意思了。。。\r", "\r", "但你说的这俩方式不好用啊\r", "1. random ，是要把 console 页面打上去么？\r", "2. 群发红包，不是现场抽啊", " \r", "\r", "1.电脑投影\r", "2.现场发现场抢\r", "\r", "你这个顶多是移到推广里。\r", "\r", "PS ：你们公司需要美工和文案。", " 不知道多少公司无脑到会把公司员工的姓名+手机号+部门这种人力资源核心资料发到公司之外的平台上", " 已经转达~~~", "群红包，最高的人拿奖。。这个最不撕逼", "摇奖这种事情，还是物理摇奖比较令人信服", " 物理摇奖这种传统的方式，现在还有多少公司在使用啊。\r", "话说未来 SaaS 的发展趋势，不说人力资源的数据，财务的数据也得放上面啊。\r", "说到数据安全，这是一个怎么也说不清的问题，一旦说公有云、第三方平台，都会涉及到。", "我们是关注微信号。然后回复关键词会发一个抽奖号。然后在大屏幕在摇奖。但特么网炸了就特么尴尬了，头像什么都出不来", "每年手动抽奖，一人一张小纸条。。。不需要什么程序。。。", "去年是一人一张纸条，各个 boss 抽奖，会后去领奖，并没有什么程序", "会\r", "\r", "去年做过一个基于山寨缩水简化版 2D 物理引擎的，大概是这个画风 ……\r", "\r", "\r", "\r", "今年打算做个升级版，哦耶！\r", "打算丢一点刚学会的 3D 五毛特效进去 XDDDDD", "补上视频 …\r", "\r", "总是显示不出来 … 好奇怪 …\r", "那就把网址贴这吧 v_show/id_XMTkwMTg1MzcyMA==.html", "没有年会，所以没有这方面的担忧", "为什么要写这个？直接发红包，红包金额最小的算中奖。", " 没懂一个程序卖 99 块怎么就会「被喷」了？程序员的作品这么不值钱？", "记得上 ", " 记得当场 code review 不然底下的攻城狮们总会有一种钦定的感觉 ", " ", "基本我写的各种抽奖程序都是带遥控作弊的 23333", " \r", "\r", "东西就摆在那边，我感觉定价不合理，就这么简单。\r", "请别上升到 [程序员的作品这么不值钱] 这种层面，撕不起。", "为了公平期间，还是要骰子吧哈哈", "我自己写？大奖必然是我。", "我们公司由我写，很多黑幕。。。。", " @", " \r", "\r", "关于一个功能的定价是扯不清楚的，主要看各自需求。有程序员闲着，花个半天功夫做一个用用，或者靠微信红包或者纸箱子，也许不值 99 。有的时候确切需要住了，花几百块钱买个也很正常。\r", "\r", "我们能互相反驳的只是事实，而没法反驳观点，因为观点都是个人的。", " 得是领导层要增大中奖率？", " 不怕被 review 代码么？", "去年就是自己写，领导要求加入“必定不中奖”和“必定中奖”两个功能，去年年会抽完奖小孩子上来玩差点露馅。。\r", "今年估计也是这样吧 233", "第一次参加年会中了台 ipad ，第二年公司不抽奖改抢红包了", " 类似，一部分人不让中奖，一部分人不让中一二等奖等", "首先，公司要有年会\r", "其次，年会要有抽奖\r", "再其次，公司还要有懂代码的 CTO", "去年用的今年就不能用了吗", "收藏了", "推荐 hi 现场", "直接用 js 写", "我就知道我待的这家公司写程序的那 2 位人员不能参与....", " 去年写代码的人可能已经离职了，也许那个程序只能跑在那个人的机器上。\r", " 这程序员有点亏。。。。。", "非技术类公司，我搞抽奖程序的，都要把自己从奖池里屏蔽掉。否则万一万一抽到自己就神 TM 满身是嘴也说不清了", "坚决不写。这东西自己部门的人中奖多，自然会被怀疑有猫腻。还是从现实的摇珠中抽取是最公平的。", "进场前先拍照，然后把照片放程序目录下，加载 ", " 序列生成，然后开始按序列显示图片。每停一次就把中奖的图片移除掉。每轮显示的图片顺序都是 ", " 生成的。", "写啊，照搬北京摇铁皮的搞法来搞抽奖。\r", "有质疑看代码就行了。", " 我突然想到，直接先群发微信红包，然后红包手气最差的几个人拿一二三等奖品不就好了吗。到时每个人都想抢少点红包 233", " 说的就是我司.................", "哈哈，我们公司抽纸团，作为 it 公司是不是 out 了", " 也许这种方式最刺激呢，最好是放个箱子，里面都是现金，直接用手抓。", " 红包这个好，公平", "钉钉里面有个空格年会应用有抽奖功能"]},
{"content": "", "reply": "1", "tittle": "你女朋友是个护士怎么样？", "comment": ["年轻人不要看太多角色扮演，灯一关还不是两条腿。。"]},
{"content": ["<div class=\"topic_content\">就是 ECDHE-ECDSA-AES256-GCM-SHA384 这种加密套件是可以的\r<br> ECDHE-ECDSA-AES256-GCM-SHA256 就不行了  \r<br>起码最新版的谷歌 55 和最新版的火狐不承认</div>"], "reply": "7", "tittle": "有没有懂密码学的解释一下为什么对称加密的摘要位数要比 AES 的大？", "comment": ["不光是 ECC 啊 RSA 也一样\r", "ECDHE-RSA-AES256-GCM-SHA384 是可以的\r", "ECDHE-RSA-AES256-GCM-SHA256 是不行的", "因为生日攻击，理想摘要算法的强度只有长度的一半", "New cipher suites MUST explicitly specify a PRF and, in general, SHOULD use the TLS PRF with SHA-256 or a stronger standard hash function.\r", "\r", "\r", "对称加密用的 Key size 和 Hash function 的长度没有关系。\r", "TLS 1.2 标准定义了很多加密 Key size 比 Hash 长度大的 Ciphersuite ，并且最新的 Chrome 和 Firefox 也支持一些这样的 Ciphersuite 。\r", "可以用 ", " 看浏览器支持哪些 Ciphersuite", "TLS 1.2 定义的 Ciphersuites 见 ", "根据木桶理论， Cipher Suite 中加密最弱的算法决定 Cipher Suite 强度。一般来说 hash function 是比同等位数的 AES 弱的，比如说 MD5(128bit)已经能被攻破了而 AES 128bit 还是好好的。所以一般来说都是配合比 AES 位数更长的 hash function 用。\r", "\r", "此外还有一个原因是 NSA Suite B 也是这么推荐的。 128bit AES + 256bit SHA2 + 256bit Elliptic Curve 或者 256bit AES + 384bit SHA2 + 384bit Elliptic Curve 。\r", "\r", "国产的商密 Cipher Suite 是 128bit SM1(只有硬件实现)/SM4(允许软件实现) + 256bit SM3 Hash + 256bit SM2 Elliptic Curve ，也差不多是按这个原则设计的。", " 你这个第二个连接挺厉害啊"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>打算新的建站用 centos ，稳定第一， centos 7.2 （ 1511 ） 和 7.3 （ 1611 ）哪个更稳定?</p>\n</div></div>"], "reply": "19", "tittle": "centos 7.2（ 1511） 和 7.3（ 1611）哪个更稳定？\r\n\r\ncentos 7.2（ 1511） 和 7.3（ 1611）哪个更稳定？", "comment": ["最新", "你 7.2 update 以后也变成 7.3 了吧", "一直更新才是稳定，而不是停在哪个版本号上", "既然是发行版本，应该都比较稳定吧。", "都很稳定 不用纠结\r", "\r", "直接上 7.3 吧", "定义一下\"稳定\"", "我把 2010 年买的第一代 i3 330m 的笔记本装了个 centos 7.3 丢到机房,用了段时间还是很稳定的～", " 直接上 7.3 会不会有很多的坑要踩？", " 一般来说，不是前一年的比较稳定吗？出现的错误，大家都实验过了", "其实你用到最新的 centos 都是 fedora 在几年前试验过的东西。\r", "不要用其他 repo （包括 epel ）、不要自己编译，一般都非常稳定。\r", "好歹也是给服务器用的系统，不会像 bug10 那样把 beta 版装作正式版推送。", "7.3,7.2 的 mlx4 内核模块有问题，使用 uverbs 对 vf 进行不当操作时会搞崩系统", " 不会呀，你向你要使用 c6 就玩不转 docker ，新版本发布往往是对旧版本打补丁，只要不是跨大版本，我一般都喜欢用最新版", " 感觉除了一些命令需要适应外，其它都还好", "小版本号没有稳定一说，你一更新就变成新版了，而且也是推荐及时更新的，避免安全漏洞\r", "\r", "如果你问 Centos 6 和 7 谁更稳定还有点意义", " 是不是 systemd 要中枪了", " 我超喜欢 systemd 的", "目前还是 6.5 让我感觉更放心点", " 你浏览一遍 7.3 的 change log 就知道了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><blockquote>\n<p>今天下午刚写了一篇博客，发出来大家一起分享一下。原文地址：<a href=\"http://www.jianshu.com/p/a898ef83f38c\" rel=\"nofollow\">http://www.jianshu.com/p/a898ef83f38c</a></p>\n</blockquote>\n<p>一个常规软件或者 APP 一般都是服务于某种商业或者非商业述求，我们平常成为“业务需求”。随着业务需求的扩张、一个软件会变得越来越庞大，越来越复杂。所以一般都会有一套完整的架构设计、研发流程以及质量管理体系来保证整个研发过程。关于“架构设计”，这是一个很大的话题，伴随着我们的业务需求，它会涉及到方方面面，我们今天来谈一谈其中的一个基础环节—— MVVM 模式。</p>\n<h2>经典的 MVC 模式</h2>\n<p><strong>MVC</strong> 是最常见的客户端软件架构之一，它历史悠久，简单好用，易于理解，而且目前常见的 iOS 和 Android 开发， SDK 和与其搭配的 IDE 工具都是默认以 MVC 的方式来使用的。但是我个人更喜欢 <strong>MVVM</strong> 模式，也一直坚持使用 <strong>MVVM</strong> 模式来工作了很多年。</p>\n<p>最常见的客户端架构有三种：</p>\n<ul>\n<li>MVC: Model-View-Controller</li>\n<li>MVP: Model-View-Presenter</li>\n<li>MVVM: Model-View-ViewModel</li>\n</ul>\n<p>在 MVC 里面， Model 是数据模型； View 是视图或者说就是我们的软件界面需要去展示的东西； Controller 是用来控制 Model 的读取、存储，以及如何在 View 上 展示数据，更新数据的逻辑控制器。</p>\n<ul>\n<li>对应到 iOS 开发中， View 约等于 Storyboard ， Controller 就是 ViewController ， Model 的话是需要我们自己去创建的一些实体（ Entity ） Class 。</li>\n<li>对应到 Android 开发中， View 约等于 Layout 中的 xml ， Controller 就是 Activity ， Model 同上。</li>\n<li>对应到 React-Native 开发中， View 约等于 Component 中的 render 函数部分， Controller 就是整个 Component ， Model 同上。</li>\n</ul>\n<p>这里为什么要说 View 约等于 Storyboard 或者 Layout 呢？因为 Storyboard 和 Layout 都被设计为一种界面（ View ）的描述语言，它描述了整个 View 应该长成什么样子，应该具有哪些控件。程序启动时，系统会首先读取 Storyboard 或者 Layout 文件，通过渲染引擎去把这种 View 的描述语言渲染成一个真正的 View ，此时此刻的 View 才是 MVC 中的那个真正的 <strong>V</strong>。网络上还有一些文章论调，说 Activity 并不能算真正的 Controller 等等，在这里我们就不纠结这些细节了。</p>\n<h2>VC 到 VM 的转变</h2>\n<p>我们前面有提到一个常见的 Controller （下称 VC ）中会包含 Model 的读取、存储等功能，除此之外还会有一些控件的事件绑定和响应，甚至还有网络请求等等。</p>\n<p>一个 VC 在包含了大量的业务逻辑后，代码就会变得特别的臃肿、不易阅读和修改。于是后来就慢慢延伸出了 MVP 和 MVVM 模式。 MVP 这里我们就跳过了，直接讲 MVVM 模式。 MVVM 模式顾名思义是由 Model 、 View 和 ViewModel （下称 VM ）组成，之前的 VC 变成了 VM 。怎么来理解 VM 呢？</p>\n<p>对于一个 Model ，比如我们要存储和显示一个人的信息，这个人具有姓名、年龄、性别这三个属性。这个 Model 的伪代码如下：</p>\n<pre><code>class Person {\n    String  name;\n    int     age;\n    int     gender;\n}\n</code></pre>\n<p>Model 的数据模型，和我们的业务需求或者说业务实体（ Entity ）是一一映射关系。而 ViewModel 顾名思义，就是一个 Model of View ，它是一个 View 信息的存储结构， ViewModel 和 View 上的信息是一一映射关系。</p>\n<p>以一个软件的登陆场景为例子，假设这个登录界面上有如下逻辑：</p>\n<ul>\n<li>用户名输入框</li>\n<li>密码输入框</li>\n<li>登陆按钮，点击登陆按钮按钮置灰，显示 loading 框</li>\n<li>登陆成功，页面触发跳转</li>\n<li>登陆失败， loading 框消失，在界面上显示错误信息</li>\n<li>错误信息可以分为两种情况： 1 、密码错误； 2 、没有网络</li>\n</ul>\n<p>那么我们下面来定义这样一个 ViewModel ：</p>\n<pre><code>class LoginViewModel {\n    String  userId;\n    String  password;\n    bool    isLoading;\n    bool    isShowErrorMessage;\n    String  errorMessage;\n}\n</code></pre>\n<h3>界面初始化</h3>\n<p>由于 LoginView 和 LoginViewModel 是映射关系，也称为绑定关系，那么 LoginViewModel 是怎样的数据， View 就按照怎样的数据来进行显示。界面第一次打开时，整个 LoginViewModel 的初始值为：</p>\n<pre><code>{\n    userId ： '',\n    password: '',\n    isLoading: false,\n    isShowErrorMessage: false,\n    errorMessage: ''\n}\n</code></pre>\n<p>那么此时界面为：</p>\n<ul>\n<li>用户名输入框显示为空白字符串</li>\n<li>密码输入框显示为空白字符串</li>\n<li>loading 框因为 isLoading = false ，所以不显示</li>\n<li>错误信息框 因为 isShowErrorMessage = false ，所以不显示</li>\n<li>错误信息框里面的文字为空白字符串</li>\n</ul>\n<h3>触发登陆</h3>\n<p>接下来，用户输入用户名和密码，点击登录按钮，在登陆事件里面触发网络通信逻辑，同时设定 isLoading = true ，伪代码如下：</p>\n<pre><code>function onLoginButtonClick() {\n    request(url, ...);\n    loginViewModel.isLoading = true;\n}\n</code></pre>\n<p>此时 LoginViewModel 的值为：</p>\n<pre><code>{\n    userId ： 'this is user id',\n    password: 'this is password',\n    isLoading: true,\n    isShowErrorMessage: false,\n    errorMessage: ''\n}\n</code></pre>\n<p>随着 isLoading 值的变化，因为 ViewModel 和 View 存在绑定关系，那么此时界面动态变化为：</p>\n<ul>\n<li>用户名输入框显示为刚刚输入的字符串</li>\n<li>密码输入框显示为刚刚输入的字符串</li>\n<li>因为 isLoading = true ，所以显示 loading 框</li>\n<li>因为 isLoading = true ，登陆按钮置灰，不可点击</li>\n<li>错误信息框 因为 isShowErrorMessage = false ，所以不显示</li>\n<li>错误信息框里面的文字为空白字符串</li>\n</ul>\n<h3>登录失败</h3>\n<p>接下来我们假设登陆失败，服务器返回密码错误，那么此时在服务器逻辑的相应代码里面我们去设定 isLoading = false ， isShowErrorMessage = true ，以及对应的 errorMessage ，伪代码如下：</p>\n<pre><code>request(url, {\n    success: function() {\n        ...\n    },\n\n    fail: function(err) {\n        if(err.code == 1000)  { // 假设 1000 表示密码错误\n            loginViewModel.isLoading = false;\n            loginViewModel.isShowErrorMessage = true;\n            loginViewModel.errorMessage = '密码错误';\n        }\n    }\n})\n</code></pre>\n<p>此时 LoginViewModel 的值为：</p>\n<pre><code>{\n    userId ： 'this is user id',\n    password: 'this is password',\n    isLoading: false,\n    isShowErrorMessage: ture,\n    errorMessage: '密码错误'\n}\n</code></pre>\n<p>接下来依然是触发界面变化，根据绑定关系重新更新显示内容：</p>\n<ul>\n<li>用户名输入框显示为刚刚输入的字符串</li>\n<li>密码输入框显示为刚刚输入的字符串</li>\n<li>因为 isLoading = false ，隐藏 loading 框</li>\n<li>因为 isLoading = false ，登陆按钮置为正常，可以点击</li>\n<li>因为 isShowErrorMessage = true ，显示错误信息框</li>\n<li>错误信息框里面的文字为“密码错误”</li>\n</ul>\n<h3>重新登录</h3>\n<p>用户修改密码后，重新点击登陆按钮：</p>\n<pre><code>function onLoginButtonClick() {\n    loginViewModel.isLoading = true;\n    loginViewModel.isShowErrorMessage: false,\n    request(url, ...);\n}\n</code></pre>\n<p>到这里相信大家都会知道了，错误提示框消失，显示 loading 框，登陆按钮置灰。</p>\n<p>所以这就是 MVVM 模式的神奇之处，让你不要去关心如何去显示登录框，如何去置灰一个按钮，如何去显示错误提示框又如何去隐藏它等等。当然，这里说的“不关心”并不代表不需要知道这些，完全不处理这些逻辑，只是在架构上给你一种更清晰，更简单的原则，那就是：</p>\n<blockquote>\n<p>“当任何外部事件发生时，永远只操作 ViewModel 中的数据”</p>\n</blockquote>\n<p>这里外部事件主要指界面点击、文字输入、网络通信等等事件。因为绑定关系的存在， ViewModel 变成啥样，界面就会自动变成啥样。</p>\n<h2>单向绑定与双向绑定</h2>\n<p>随着 ViewModel 的变化， View 会自动变化，那么 View 变化后， ViewModel 会自动变化么？比如用户在“用户名输入框”输入文字后， LoginViewModel 中的 userId 会自动存储输入值么？然后用户又删掉部分输入的内容， userId 再次立即变化么？</p>\n<p>这里就需要引入一个新的概念了：<strong>单向绑定与双向绑定</strong>。</p>\n<ul>\n<li>所谓“单向绑定”就是 ViewModel 变化时，自动更新 View</li>\n<li>所谓“双向绑定”就是在单向绑定的基础上 View 变化时，自动更新 ViewModel</li>\n</ul>\n<p>我们把前面登陆按钮点击后这一过程的代码再来梳理下，单向绑定模式下的伪代码如下：</p>\n<pre><code>function onUserIdTextViewChanged(textView) {\n    loginViewModel.userId = textView.text;\n}\n\nfunction onPasswordTextViewChanged(textView) {\n    loginViewModel.password = textView.text;\n}\n\nfunction onLoginButtonClick() {\n    loginViewModel.isLoading = true;\n    loginViewModel.isShowErrorMessage: false,\n    login(loginViewModel.userId ， loginViewModel.password);\n}\n</code></pre>\n<p>大家可以看到，我们需要非常明确的在 TexView 变化事件里面去重新设定 LoginViewModel 中的值，而双向绑定模式下，根据绑定关系，这一过程就隐藏性的自动完成了。既然“双向绑定”那么智能、简单，为什么还需要“单向绑定”呢？因为在真实的“业务需求”下，实际情况是非常复杂的，虽然 ViewModel 可以和 View 形成映射关系，但是它们之间的值却不一定能直接划等号。</p>\n<p>比如在界面上要填写性别，我们通常会提供一个下拉列表框，让用户选择。这个选择框里面至少有“未知”、“男”和“女”三种字符串值，而我们的 ViewModel 一般情况下并不直接存储这些字符串。因为 ViewModel 中的数据很大一部分情况下是来自于数据库、来自于服务器，而数据库和服务器中几乎是不可能直接把性别字符串存储在数据模型中的。一般会建立一个 int 类型的字段，用 0 表示未知；用 1 表示男人；用 2 表示女人。</p>\n<p>那么问题来了，在 ViewModel 中一个 gender 属性类型为 int ，值为 0 或者 1 或者 2 时，与其绑定的 View 怎么知道该如何来显示为“未知”、“男”或者“女”呢？</p>\n<p>所以“属性转换器”应运而生，在给 View 绑定 ViewModel 时，发现属性值不匹配，那么就需要设定一个属性转换器。反之亦然，当性别选择下拉列表框被用户改变时，用户选择了“男”，在双向绑定模式下，那么 View 依然需要在一个属性转换器的帮助下，把“男”转换为 1 ，然后设定到 ViewModel 中。</p>\n<p>上面只是最简单的一种在绑定不匹配时涉及到属性转换的情况，但是真实的世界往往会更加的错综复杂，双向绑定下的属性转换器随着业务需求的迭代常常会变得越来越庞大，而且因为绑定关系触发 ViewModel 和 View 的动态变化过程是隐藏不可见的，也给调试带来了极大的麻烦。</p>\n<p>所以后来大家在长年累月的使用过程中，发现单向绑定可能会是更合适的一种做法。</p>\n<h2>把数据的请求与处理放在 ViewModel 中</h2>\n<p>针对前面的登陆代码，我们再来做一次优化，得到一个更加合理的版本：</p>\n<pre><code>class LoginViewModel {\n    String  userId;\n    String  password;\n    bool    isLoading;\n    bool    loginStatus;\n    String  errorMessage;\n\n    Login() {\n        request(url, this.userId, this.password, {\n            success: function() {\n                ...\n            },\n            failed: function() {\n                this.isLoading = false;             //触发绑定关系，隐藏登陆 loading 框\n                this.isShowErrorMessage = true;     //触发绑定关系，显示错误提示框\n                this.errorMessage = '密码错误';      //触发绑定关系，设置错误提示文字内容\n            }\n        });\n    }\n}\n</code></pre>\n<p>可以看到，我们把整个登陆过程放在了 LoginViewModel 中，那么登陆按钮点击后这一套响应过程也相应的有所调整：</p>\n<pre><code>function onUserIdTextViewChanged(textView) {\n    loginViewModel.userId = textView.text;\n}\n\nfunction onPasswordTextViewChanged(textView) {\n    loginViewModel.password = textView.text;\n}\n\nfunction onLoginButtonClick() {\n    loginViewModel.isLoading = true;            //触发绑定关系，显示登陆 loading 框\n    loginViewModel.isShowErrorMessage: false;   //触发绑定关系，隐藏错误提示框\n    loginViewModel.login();                     //开始登陆\n}\n</code></pre>\n<p>大家看到没有，上面这段代码再也不处理任何的数据逻辑，不关心数据库、不关心网络调用，也完全不关心界面随着数据和逻辑的变化应该如何去设置控件属性状态等等。让我们再来复习一下 MVVM 的核心原则：</p>\n<blockquote>\n<p>“当任何外部事件发生时，永远只操作 ViewModel 中的数据”</p>\n</blockquote>\n<p>上面这段代码它不属于 Model ，不属于 View ，也不属于 ViewModel ，那它应该写在哪里呢？</p>\n<ul>\n<li>iOS 下依然写在 ViewController 中</li>\n<li>Android 下依然写在 Activity 或者 Fragment 中</li>\n<li>ReactNative 下依然写在 Component 中</li>\n<li>微信小程序 下依然写在 Page 中</li>\n</ul>\n<p>所以 MVC 中的 <strong>C</strong>，其实一直都默默的存在着，只是变得弱化了，一定要完整的讲的话，那就是 <strong>Model-View-Controler-ViewModel</strong> 模式。只有在理想的双向绑定模式下， Controller 才会完全的消失。</p>\n<h2>上帝之手</h2>\n<p>讲到这里，我们已经讲解完了整个 MVVM 模式的核心原理和使用原则，不涉及任何平台、任何语言。或者说只要你遵循以上的原则，写出来的代码都是 MVVM 模式的。但是还有一个最大的疑问，我们一直没有去探讨。那就是：</p>\n<blockquote>\n<p>ViewModel 是如何与 View 形成的绑定关系，凭什么 ViewModel 中的数据变化了， View 就会动态变化？</p>\n</blockquote>\n<p>我们之所以要把这个问题放在最后讲是因为数据绑定和动态变化这都是由具体的 MVVM 平台或者框架来实现的，跟 MVVM 模式没有直接关系。或者说为了达成 MVVM 模式，不同的平台、不同的框架提供了不同的实现版本来完成这一目标。当然，他们也都大同小异，核心原理差不多。</p>\n<p>先来说说第二个疑问：“为什么会动态变化”？其实这里是有一只“上帝之手”在帮你实现这个过程，当“上帝”发现某个数据变化了，然后根据“映射”关系去帮你修改那个控件的属性。但是，我们的登陆界面是否要显示 loading 框，是否要显示错误提示，这些都是我们的业务需求，“上帝”也并不知道你到底想要怎样。所以，所谓的绑定或则映射关系是需要开发者明确来告诉“上帝”的。怎么告诉“上帝”呢？这就需要你或通过配置文件或通过代码语句来设定。</p>\n<p>我们来总结一下这两个问题的答案：</p>\n<ul>\n<li>开发者在代码或者配置文件中设定 ViewModel 和 View 的映射关系</li>\n<li>“上帝之手”在整个软件的运行过程中监控 ViewModel ，自动变化这一切</li>\n</ul>\n<h3>设定映射关系</h3>\n<p>目前在几大手机 APP 开发平台下， Android 的 MVVM 框架是做得最完善、最智能、最方便的。让我们来看一看 Android 是怎么实现 MVVM 的。</p>\n<p>假设我们要实现一个“时钟”界面，这个界面可以显示“当前时间”，如果用户开启了闹钟功能，且同时显示“闹钟时间”。这个界面的简化描述文件（ Layout 文件）如下：</p>\n<pre><code>&lt;layout xmlns:android=\"http://schemas.android.com/apk/res/android\"&gt;\n    &lt;data&gt;\n        &lt;import type=\"android.view.View\" /&gt;\n        &lt;variable\n            name=\"mainVM\"\n            type=\"com.company.app.viewModel.MainViewModel\" /&gt;\n    &lt;/data&gt;\n\n    &lt;RelativeLayout&gt;\n        &lt;TextView\n            android:id=\"@+id/timeTextView\"\n            android:text=\"@{mainVM.timeText}\" /&gt;\n\n        &lt;TextView\n            android:id=\"@+id/alarmTimeTextView\"\n            android:visibility='@{mainVM.alarmEnable ? View.VISIBLE : View.GONE }'\n            android:text='@{mainVM.alarmTimeText}' &gt;\n    &lt;/RelativeLayout&gt;\n&lt;/layout&gt;\n</code></pre>\n<p>它具有以下几部分内容：</p>\n<ul>\n<li>该 Layout 具有哪些控件（布局属性这里就隐去了），可以看到这里有两个 TextView ，也就是文本展示控件</li>\n<li>该 Layout 和哪个 ViewModel 具有映射关系</li>\n<li>该 Layout 中的哪些控件的哪些属性和 ViewModel 中的哪些属性是映射关系</li>\n</ul>\n<pre><code>&lt;variable\n    name=\"mainVM\"\n    type=\"com.company.app.viewModel.MainViewModel\" /&gt;\n</code></pre>\n<p>这几行指定了 Layout 和 MainViewModel 类具有映射关系，且 MainViewModel 在整个绑定关系中的对象名字叫做 mainVM 。</p>\n<pre><code>&lt;TextView\n    android:id=\"@+id/timeTextView\"\n    android:text=\"@{mainVM.timeText}\" /&gt;\n</code></pre>\n<p>这几行指定了控件 timeTextView 的 text 属性 和 mainVM 中的 timeText 属性具有映射关系</p>\n<pre><code>&lt;TextView\n    android:id=\"@+id/alarmTimeTextView\"\n    android:visibility='@{mainVM.alarmEnable ? View.VISIBLE : View.GONE }'\n    android:text='@{mainVM.alarmTimeText}' &gt;\n</code></pre>\n<p>这几行中，和上面 timeTextView 控件的绑定关系类似，稍微不一样的是第三行。这一行描述了 alarmTimeTextView 控件的 visibility 属性和 mainVM 中的 alarmEnable 属性绑定在一起。</p>\n<p>visibility 属性用来控制 alarmTimeTextView 控件是显示还是隐藏。即 alarmEnable 为 true 则显示，为 false 则隐藏。但是有一个小问题就是在 Android 平台上，一个控件的 visibility 属性并不是 bool 值，而是一个 enum 值，分别是 VISIBLE 、 INVISIBLE 和 GONE 。在映射时，这里就需要一个属性转换器了。</p>\n<p>Android 的属性转换器比较直接，就是让你直接在绑定语句里面写上一些简单的逻辑代码。如果你的属性转换器过于复杂，还允许把这些逻辑写在一个正常的代码文件中，然后通过 Layout 顶部的 Import 语句引入。</p>\n<pre><code>@{mainVM.alarmEnable ? View.VISIBLE : View.GONE }\n</code></pre>\n<p>这行代码大家看字面意思肯定就能理解：如果 alarmEnable 为 true ，则 visibility 的值 为 VISIBLE ， 否则为 GONE 。</p>\n<h3>生成上帝之手</h3>\n<p>Android 平台的 MVVM 映射关系基本上就是这样来指定，那它的上帝之手又在哪里呢？特别的简单， Android 的 IDE 在编译代码的时候，会根据 Layout 文件中的绑定关系，自动生成一批 Java 代码插入到你的源代码工程中，这个过程你完全不用关心。你的 Layout 变化后，下一次编译时也会自动更新这些隐藏代码。</p>\n<p>所以 Android 平台下的 MVVM 模式是在框架代码和 IDE 工具的辅助下，来实现了整个工作机制。想了解细节的朋友看一看这篇官方文档。\n<a href=\"https://developer.android.com/topic/libraries/data-binding/index.html\" rel=\"nofollow\">https://developer.android.com/topic/libraries/data-binding/index.html</a></p>\n<h2>其他平台的 MVVM 模式</h2>\n<p>而 iOS 平台下想实现 MVVM 就没有那么轻松了，有一个叫做 ReactiveCocoa 的第三方库实现了大部分 MVVM 工作机制，但是还没有像 Android 那么傻瓜化，还需要你手动写代码来指定绑定关系。有兴趣的朋友可以看这篇文章：</p>\n<ul>\n<li><a href=\"https://www.raywenderlich.com/74106/mvvm-tutorial-with-reactivecocoa-part-1\" rel=\"nofollow\">https://www.raywenderlich.com/74106/mvvm-tutorial-with-reactivecocoa-part-1</a></li>\n<li><a href=\"https://www.raywenderlich.com/74131/mvvm-tutorial-with-reactivecocoa-part-2\" rel=\"nofollow\">https://www.raywenderlich.com/74131/mvvm-tutorial-with-reactivecocoa-part-2</a></li>\n</ul>\n<p>如何在 React-Native 下来实现 MVVM ，大家可以研究一下一个叫做 MobX 的库。</p>\n<p>那如何在<strong>微信小程序</strong>里面来实现 MVVM 呢？且看下回分解。</p>\n</div></div>"], "reply": "5", "tittle": "什么是 MVVM 模式？", "comment": ["本来以为是问问题的，想进来简单说一下 MVVM ，没想到被楼主教育了-_-", "非常感谢，正需要这方面的知识ˇ", "你只讲了“术”，却没有讲“道”。\r", "\r", "首先，传统 MVC 是由事件驱动的。\r", "MVC 里，是只有 controler 是控制中心， model 是数据的集合， view 是展示数据的地方，是一个笼统的分类。\r", "controler 订阅 view 上的事件，然后处理发生事件后的操作，比如从数据库获取 model 数据，最后将数据或者信息反馈到 view 上面。也就是说， view 层是只负责展示，比如布局，颜色，点击反馈什么的，它只能产生事件，然后被动地被 controler 更新。（参考斯坦福大学教授的关于 MVC 的公开课）\r", "\r", "MVVP 有哪些改变？\r", "\r", "首先， view 有了 model,和一部分 control 中用来更新 view 的操作.\r", "\r", "为什么会这样？\r", "\r", "因为由于数据的增多，要在 controler 里面写非常多的更新 view 的操作，很麻烦，而且随着业务的发展，如果 view 层变更， controler 里面也需要修改。之所以数据的增多是因为想在一个窗口里展示更多的数据和操作（ web 前端的 spa,android 里 tab 分页展示）。在以前， controler 里的 view 是由 jsp,aspx ， php 来一次性消费的，而现在是想多次消费。\r", "\r", "多次消费，消费的是 model 里的数据，所以才会提出所谓的什么 view-model 。\r", "\r", "所以，之所以会这样是为了多次消费，是因为有了需求所以才发明的。啊，前面那句话不对，其实是因为早就有人在实践中尝试过，然后如果没有这种规范的话，大家为了实现这种模式需要自己造轮子，麻烦，才传开然后公认统一的。所以，如果你编程过程中有哪些比较麻烦，你就可以思考怎么来创造一个东西了。\r", "\r", "如果你懂“道”，那么你也可以创造“术”。不讲“道”就开始讲“术”，就有点神棍的味道了。\r", "\r", "所以，没有必要多次消费的，或者数据量不是特别大的，就没必要搞什么 MVVP ，高射炮打蚊子，用途都不清楚。\r", "\r", "说个题外的，假如我们把 controler 里面的更新 model 的操作放到了 model 里面(model 一更新，后台数据库就更新)，那么就会变成了 ORM.如果把 ORM 与所谓的 view-model 结合，又会怎么样？好像 google 有个前端框架 meteor 大概就是这种思路（还未用过，仅猜测，求科普）。\r", "\r", "目前来说，都是事件驱动模型的，不知道还能有哪些需求然后变变变。\r", "\r", "如若有误，还望指正。\r", "\r", "PS:一图胜千言。", " \r", "\r", "1 、更新 Model 的操作永远都不要放到 Model 里面，严格意义讲 Model 一个真实世界的事物在计算机里面的一种描述、一种模型。系统不断的迭代，需求不断的变化，你的 Model 可能随时面临着调整，如果包含大量的存储逻辑，你一定会遇上痛苦的一天。\r", "\r", "2 、存储、更新 Model 的操作有一种叫做 DAO 的东西，放到 DAO 里面更科学。\r", "\r", "3 、每创建一个 DAO 要写大量重复性的代码，后来自然就诞生了 ORM 。 ORM 就是帮你干了 DAO 的活而已\r", "\r", "4 、客户端软件的发展比系统级的 Web 软件发展要早得多，所以 MVC 的概念最早是在客户端软件里面流行的。如何在 Web 里面采用 MVVM 我不是很清楚，不过至少在客户端界并不存在高射炮打蚊子的说法。本文并没有鼓吹 MVVM 一定优于 MVC ，怎么选择那是使用者的事情。从我个人情绪上讲，我更偏爱 MVVM 一些。\r", "\r", "5 、欢迎就我文章里面的内容提出意见或者建议，至于先讲道还是先讲术，个人喜好而已。不同的文章有不同的读者，大家觉得有收获就好。", "学习了，感谢 dannnnnny 老师科普，期待老师的更多分享"]},
{"content": ["<div class=\"topic_content\">本人对数据库本身不懂，想请教一个问题\r<br>\r<br>我使用了一个现成的程序来做控制系统的历史数据归档和检索，这个程序的数据库后端本身支持 cassandra 、 mysql 、 oracle ，我使用的是 mysql ，这两天看了一下子它的数据库表结构，发现它采用了如下的表结构来存储 array 类型数据，即一个 array element 一个 record （比如对于 float array ， 1 维 2 维任意大小 array 都可以存储）：\r<br>\r<br>CREATE TABLE IF NOT EXISTS att_array_devfloat_ro\r<br>(\r<br>    att_conf_id INT UNSIGNED NOT NULL,\r<br>    data_time TIMESTAMP(6) DEFAULT 0,\r<br>    recv_time TIMESTAMP(6) DEFAULT 0,\r<br>    insert_time TIMESTAMP(6) DEFAULT 0,\r<br>    idx INT UNSIGNED NOT NULL,\r<br>    dim_x_r INT UNSIGNED NOT NULL,\r<br>    dim_y_r INT UNSIGNED NOT NULL DEFAULT 0,\r<br>    value_r FLOAT DEFAULT NULL,\r<br>    quality TINYINT(1) DEFAULT NULL,\r<br>    att_error_desc_id INT UNSIGNED NULL DEFAULT NULL,\r<br>) ENGINE=MyISAM COMMENT='Array Float ReadOnly Values Table';\r<br>\r<br>其中 value_r 记录的是 array 的每一个 element 值， dim_x_r 、 dim_y_r 表示 element 的索引，如果有一个 10000 个 element 的 array ，那么就有 1 万条记录\r<br>\r<br>我的软件给这个程序提供数据都是一次提供整个 array 的全部数据，现在我担心它这种存储结构是不是严重制约入库效率啊，请教一下子有没有更好的解决办法，比如把整个 array （任意大小）作为一个对象一次性存档啊</div>"], "reply": "2", "tittle": "请教一个关于数据表设计的问题", "comment": ["你的想法是反模式，原表设计是对的。\r", "\r", "你的需求需要 NoSQL ，而不是使用 MySQL 。", " 对于 MySQL 这种表结构在存储大一点的数组是不是在存储和检索时存在比较大的性能问题啊？\r", "看来我得看看 cassandra ，是不是改为 cassandra 会更好一些"]},
{"content": ["<div class=\"topic_content\"><img src=\"http://ww1.sinaimg.cn/large/0060lm7Tgw1fbn1b5cw45j30ic19xwkf.jpg\" class=\"embedded_image\"> </div>"], "reply": "8", "tittle": "项目有需求，求一个合作方", "comment": ["原以为是只差一个程序员\r", "结果是只差一个傻逼", " 别一门心思闷着头敲键盘，多起来看看外边", " 没看懂…", "就差个程序员系列", "连程序员也不用了，就差个送钱的了", "起诉罗一笑的无耻爸爸罗尔？我看是没戏了，热点已经过了，网民的互联网记忆只有 14 秒", "只是缺个 SB 的项目，我觉得还是挺有意思的。\r", "不过，你发帖子发错地方了，这里都是搞技术的程序员的战场。\r", "\r", "搞营销或者互联网营销的公司，你应该去广告中国找合作伙伴，不过感觉你缺个广告中国的注册码 10 块钱一个，我可以送给你一个注册码，只需要你项目给我分成就行了，我要得不多，只要 7 成。\r", "\r", "哈哈哈哈哈哈\r", "\r", "发布信息找分类板块都找得不专业，我也是笑了。\r", "\r", "不过林子大了，什么样的鸟儿都有，总会有加你微信给你送钱的 SB 的。祝好运！", "又是只差一个程序员。。。\r", "\r", "诶不对，只差一个送钱的傻逼"]},
{"content": ["<div class=\"topic_content\">对工作而言，再多的福利，也不如做你自己！做自己，从厘米脚印开始！\r<br>\r<br> [关于我们] \r<br>厘米脚印由豌豆荚创始团队成员创立，聚集了一群来自腾讯、网易、微软、百度的资深设计师和工程师，拥有丰富的移动互联网产品设计和开发经验。\r<br>\r<br>我们一家「小而美」的互联网咨询公司，提供互联网产品咨询、设计和开发等服务，品类包括 H5 、微信、 App 、网站等。公司主页君等你来戳 <a target=\"_blank\" href=\"http://www.jiaoyin.cm/#/\" rel=\"nofollow\">http://www.jiaoyin.cm/#/</a>   我们致力于通过专业的咨询能力、标准化的流程来打造一个「专业」「靠谱」「可信赖」的平台，高效地连接我们的客户与自由职业者，让更多的自由职业者真正做到只工作不上班。选择我们，您将拥有稳定持续的项目来源，灵活自由地协调工作与生活。 \r<br>\r<br>我们有勤奋严谨的思考，严于律己的伙伴，短小精悍的流程，先进的生产力工具： Base 、 AsanaXero 、 Harvest 、 Slack 、 Code Climate 、 Adobe Assets ... ，抓住每个提升效率的微小机会。我们不断雕琢客户的产品，不断改善自己的服务，享受产品和服务在双手中升华的过程。对精品有着执着的坚持，其利虽微，却忠于内心。\r<br>\r<br>厘米的特别之处 \r<br>-品牌项目多、团队牛人多、热衷学习与分享，好玩还接地气^_^； \r<br>-我们的项目涉及到许多前沿技术，让您在流程上做减法，在技术上做加法； \r<br>-每一次的合作都会产生双向评价结果，讲真技术上要求还蛮高，评价意见绝对耿直中肯与细致，脸皮薄的攻城狮慎入哈☆〜（ゝ。∂） \r<br>\r<br>我们希望您： \r<br>1 、 3 年以上相关开发经验；自由职业者 / 兼职 (前提是白天可以响应)； \r<br>2 、有实际作品，能提供在线作品链接喔； \r<br>\r<br>掌握技术如下： \r<br>Python ：熟悉 Django ，有前端开发经验； \r<br>Node ：熟悉 express.js ，开发经验丰富，熟悉 PRomise 的优先； \r<br>Java ：熟悉 Spring MVC ，懂 Spring Boot 、 Docker 的优先； \r<br>\r<br>若您擅长以上任一技能，自信满足我们的条件，欢迎您即刻扫码，在线填写申请，我们会速速与您联系的～ \r<br>如有疑问请加微信 13121309051 ～ \r<br>\r<br>加入我们，做真正的你！~</div>"], "reply": "2", "tittle": "[北京] 厘米脚印寻找长期合作的自由职业伙伴 寻找热爱生活的你，视 Coding 为生命的自由职业伙伴", "comment": ["主页 404 了", "抱歉哈~http://www.limijiaoyin.com"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"http://semantic-ui.com\" rel=\"nofollow\">http://semantic-ui.com</a>\n感觉 semantic-ui 是见过的 css 框架（不包含 js 部分）里最好看、最优雅的了，但是实在是太大了，全部引用要 540kb ，我自己编译了 3 个组件就 200 多 kb ，而且在移动设备上的性能真的很差，头一回见到滑动屏幕都有部分渲染不出来的，而且项目目前只有一个作者在维护，对未来发展感到担忧。 senmantic 组件的命名方式是\"语义化\"的，比如按钮是\"ui primary button\"，所以把 semantic 的组件样式移植到 bootstrap 上的可行性怎样？目前有没有这样的项目？或者说有没有其他比较好看的 css 框架值得推荐？</p>\n</div></div>"], "reply": "4", "tittle": "semantic-ui 有没有可能向 bootstrap 上移植？", "comment": ["其他好看的 CSS 框架推荐 MDUI ： ", "好看=重", "非常难。 基本只能考虑重写了。\r", "不仅仅是 class 名字不一样的， 两者 dom 层级嵌套之类的都不一样", "你所说的移植是什么意思？要是喜欢语意化的 class ， 那么只能参考 semantic-ui ， 改 bootstrap 的 class ， 此外两者的理念不一样， bootstrap 注重的模块化， 较少依赖 js ， semantic-ui 注重 html 结构， 较多依赖 js 。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我一直以来读书是获取知识最好的方式，很长时间以来，我都在博客维护了一个 <a href=\"https://jysperm.me/booklist/\" rel=\"nofollow\">推荐书单</a>，最近又做了一些整理，为每本书都添加了简评，希望能对大家有帮助，当然如果能用我的推广链接购书就再好不过了。</p>\n<h2>计算机科学</h2>\n<ul>\n<li>\n<p><a href=\"http://www.amazon.cn/gp/product/B004BJ18KM/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B004BJ18KM&amp;linkCode=as2&amp;tag=jysperm07-23\" rel=\"nofollow\">深入理解计算机系统</a></p>\n<p>这本书从一个程序员角度描述了计算机底层的工作原理，例如信息的储存、算数计算、汇编和链接、处理器、编译优化、存储器、输入输出、并发编程等话题。对于 C 等系统编程语言的使用者来讲，这是一本必读的书，这本书会让你对你的写下的每一行代码的执行过程有一个比较系统的了解。对于应用级编程来讲，这本书也有很大价值，因为了解底层实现会有助于你更深刻地理解高抽象层次的编程语言是如何实现的。</p>\n</li>\n<li>\n<p><a href=\"http://www.amazon.cn/gp/product/B0011AP7RY/ref=as_li_tf_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B0011AP7RY&amp;linkCode=as2&amp;tag=jysperm07-23\" rel=\"nofollow\">计算机程序的构造和解释</a></p>\n<p>这本书以 Lisp 为例系统性地介绍了用于在构建大型软件时控制代码的复杂度的技巧 —— 将复杂的事物，通过隐藏细节的方式不断地进行组合和抽象。这本书将会让你认真地思考编程的核心过程 —— 抽象，帮助你设计出结构良好、可维护的代码。</p>\n</li>\n<li>\n<p><a href=\"http://www.amazon.cn/gp/product/B00OB1AODW/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B00OB1AODW&amp;linkCode=as2&amp;tag=jysperm07-23\" rel=\"nofollow\">计算机网络：自顶向下方法</a></p>\n<p>这本书以自顶向下 —— 从应用到实现的方式介绍了计算机网络各层次的设计和实现。这本书会帮助你对计算机网络各个层次所扮演的角色有一个概览性的了解，对于应用层编程来讲，了解 TCP 和 HTTP 的实现也是非常有帮助的。</p>\n</li>\n<li>\n<p><a href=\"http://www.amazon.cn/gp/product/B00PG0MM3C/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B00PG0MM3C&amp;linkCode=as2&amp;tag=jysperm07-23\" rel=\"nofollow\">计算的本质：深入剖析程序和计算机</a></p>\n<p>这本书同时介绍了「状态机」和「 Lambda 验算」这两种计算模型，深入地介绍了高层次的编译型语言如何被编译到上述的计算模型，但本书并没有太多理论性的介绍，而是用比较易于接受的例子来进行讲解。这本书会让你了解到计算机是如何拥有计算能力的，以及平时所使用的高级语言如何映射到基本的计算模型，也会教会你如何自己实现一个简单的编译器。</p>\n</li>\n</ul>\n\n<h2>软件工程</h2>\n<ul>\n<li>\n<p><a href=\"http://www.amazon.cn/gp/product/B0061XKRXA/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B0061XKRXA&amp;linkCode=as2&amp;tag=jysperm07-23\" rel=\"nofollow\">代码大全</a></p>\n<p>这本书通过上百个例子来介绍在具体编码工作中的「最佳实践」，这是一本当之无愧的「代码大全」，因为每一节都是相对独立的话题，因此本书很适合碎片时间阅读。这本书可能需要你有一定软件工程的实践才能理解其巧妙之处，因此建议每隔一段时间就重温一遍。</p>\n</li>\n<li>\n<p><a href=\"http://www.amazon.cn/gp/product/B004GV08CY/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B004GV08CY&amp;linkCode=as2&amp;tag=jysperm07-23\" rel=\"nofollow\">程序员修炼之道：从小工到专家</a></p>\n<p>这本书通过几十个较为零散的话题介绍了一个优秀的程序员在工作的过程中会遇到的问题 —— 如何挑选工具、如何协作、如何保证质量、如何管理需求和任务。这本书适合有一定工作经验的程序员阅读，并思考自己的工作中还有哪些改进空间。</p>\n</li>\n<li>\n<p><a href=\"http://www.amazon.cn/gp/product/B008B4DTG4/ref=as_li_tf_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B008B4DTG4&amp;linkCode=as2&amp;tag=jysperm07-23\" rel=\"nofollow\">编写可读代码的艺术</a></p>\n<p>这本书通过大量的代码示例和讲解，从标识符、注释、变量、流程控制、排版、组织代码、自动测试的角度细致地讨论了什么才是「优雅」的代码风格。这本书会让你重新注意起代码中不起眼的小细节，适合所有希望写出优雅的代码的人。</p>\n</li>\n</ul>\n\n<ul>\n<li>\n<p><a href=\"https://www.amazon.cn/gp/product/B01M0EHQ43/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B01M0EHQ43&amp;linkCode=as2&amp;tag=jysperm07-23\" rel=\"nofollow\">SRE: Google 运维解密</a></p>\n<p>这本书介绍了世界上最大的互联网公司如何在规模逐渐增长的过程中保证可用性的，从如何看待风险、部署监控、发布新版本、紧急故障处理、设计分布式系统、如何培养运维工程师等角度全面地介绍了站点可靠性工程师（ SRE ）所面临的挑战，推荐所有服务器端开发者阅读这本书。</p>\n</li>\n</ul>\n<h2>算法</h2>\n<ul>\n<li>\n<p><a href=\"http://www.amazon.cn/gp/product/B00SFZH0DC/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B00SFZH0DC&amp;linkCode=as2&amp;tag=jysperm07-23\" rel=\"nofollow\">编程珠玑</a></p>\n<p>这本书通过十几个例子介绍了如何写出正确的代码，并一步步优化使其短小精悍并拥有较高的性能，应用了排序、搜索、集合和字符串运算等最基本的算法。这本书会让你思考如何写出正确的、简短的、高性能的代码，毕竟只有在这样的代码的基础之上，才有应用其他软件工程方法的意义。</p>\n</li>\n<li>\n<p><a href=\"http://www.amazon.cn/gp/product/B00UI93JD8/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B00UI93JD8&amp;linkCode=as2&amp;tag=jysperm07-23\" rel=\"nofollow\">集体智慧编程</a></p>\n<p>这本书结合有趣的例子介绍了在数据分析、搜索引擎、文本过滤、预测和决策领域的一些算法，它们并不复杂，并且很有可能会在你的工作的某个部分中发挥作用。</p>\n</li>\n</ul>\n<h2>JavaScript</h2>\n<ul>\n<li>\n<p><a href=\"http://www.amazon.cn/gp/product/B007VISQ1Y/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B007VISQ1Y&amp;linkCode=as2&amp;tag=jysperm07-23\" rel=\"nofollow\">JavaScript 权威指南</a></p>\n<p>这本书事无巨细地介绍了 JasvaScript 语言核心、标准库以及浏览器提供的 DOM 和 BOM. 本书并没有由浅入深的结构，而是通篇平铺直叙地介绍，因此适合有一定 JavaScript 基础的人从头至尾阅读来掌握一些相对细节的 JavaScript 知识，或遇到具体问题时查阅相关章节。</p>\n</li>\n<li>\n<p><a href=\"http://www.amazon.cn/gp/product/B0097CON2S/ref=as_li_tf_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B0097CON2S&amp;linkCode=as2&amp;tag=jysperm07-23\" rel=\"nofollow\">JavaScript 语言精粹</a></p>\n<p>这本书用相对简短的篇幅介绍了如何使用 JavaScript 中最精华的部分编写优雅的代码。这本书适合对 JavaScript 仅有些许了解的人快速上手 JavaScript, 避免陷入 JavaScript 语法中的那些糟粕。</p>\n</li>\n<li>\n<p><a href=\"http://www.amazon.cn/gp/product/B0082226FU/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B0082226FU&amp;linkCode=as2&amp;tag=jysperm07-23\" rel=\"nofollow\">JavaScript Web Applications 中文版</a></p>\n<p>这本书通过从零设计一个 MVC 架构的 JavaScript Web 应用框架来介绍了如何控制大型 Web 应用的复杂度，也介绍了几个常见的开源 Web 框架。这本书适合 Web 前端开发者了解常见的 Web 框架的基本设计思路和工作原理。</p>\n</li>\n<li>\n<p><a href=\"http://www.amazon.cn/gp/product/B00CYM0Z8Y/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B00CYM0Z8Y&amp;linkCode=as2&amp;tag=jysperm07-23\" rel=\"nofollow\">JavaScript 异步编程</a></p>\n<p>这本书介绍了 JavaScript 中事件模型、 Promise 、 async.js 等异步抽象的设计和实现，同时也介绍了 Web Woerk 等在浏览器中优化性能的技巧。这本书适合所有 JavaScript 程序员增加对 Promise 等异步模型的理解，并在实践中挑选合适的异步模型。</p>\n</li>\n</ul>\n<h2>数据库</h2>\n<ul>\n<li>\n<p><a href=\"http://www.amazon.cn/gp/product/B00COG3W58/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B00COG3W58&amp;linkCode=as2&amp;tag=jysperm07-23\" rel=\"nofollow\">SQL 必知必会</a></p>\n<p>这本书由浅入深，概览式地介绍了 SQL 中和具体实现无关的那些语法，非常适合快速入门，了解 SQL 所提供的功能。</p>\n</li>\n<li>\n<p><a href=\"http://www.amazon.cn/gp/product/B00X65PE3E/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B00X65PE3E&amp;linkCode=as2&amp;tag=jysperm07-23\" rel=\"nofollow\">Redis 入门指南</a></p>\n<p>这本书从 Redis 的各种数据类型入手，介绍了常见的命令，其间穿插着数据结构设计的实例，后半部分也介绍了事务、脚本和持久化等高级话题。这本书非常时候新手入门 Redis 或有一定 Redis 使用经验的人了解一些细节知识。</p>\n</li>\n<li>\n<p><a href=\"http://www.amazon.cn/gp/product/B00C1W58DE/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B00C1W58DE&amp;linkCode=as2&amp;tag=jysperm07-23\" rel=\"nofollow\">高性能 MySQL</a></p>\n<p>这本书侧重于性能和可用性方面，先介绍了性能测试的基本原则，然后分别讨论了索引、查询对性能的影响，还介绍了如何配置分区和复制、如何配置高可用的数据库。适合已在工作中大量使用数据库，希望深入了解 MySQL 的工作原理来进行性能优化的开发者。</p>\n</li>\n</ul>\n\n<h2>杂项</h2>\n<ul>\n<li>\n<p><a href=\"https://www.amazon.cn/gp/product/B008XFDQ14/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B008XFDQ14&amp;linkCode=as2&amp;tag=jysperm07-23\" rel=\"nofollow\">HTTP 权威指南</a></p>\n<p>对于 Web 开发者而言， HTTP 是沟通前端于后端的桥梁， HTTP 本身提供了极其丰富的功能，就像其他的权威指南一样，这本书面面俱到地介绍了 HTTP 主要特性，有助于你在前端或后端开发中选择恰当的特性，在出现问题时进行更有针对性的排错。</p>\n</li>\n<li>\n<p><a href=\"http://www.amazon.cn/gp/product/B016MGW5G2/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B016MGW5G2&amp;linkCode=as2&amp;tag=jysperm07-23\" rel=\"nofollow\">Modern PHP 中文版</a></p>\n<p>PHP 的用户既有 Facebook 这样顶尖的互联网公司，也有一些连版本控制和依赖管理都不了解的业余开发者。这本书会介绍如何使用 PHP 中的新特性、常见的需求有哪些最佳实践、有哪些风格标准可以参考、如何进行测试、如何进行部署，以现代化的方式来进行 PHP 开发。</p>\n</li>\n<li>\n<p><a href=\"https://www.amazon.cn/gp/product/B018EOG4PI/ref=as_li_ss_tl?ie=UTF8&amp;camp=536&amp;creative=3132&amp;creativeASIN=B018EOG4PI&amp;linkCode=as2&amp;tag=jysperm07-23\" rel=\"nofollow\">Python 语言及其应用</a></p>\n<p>这本书非常适合已有一定的开发经验，希望快速了解 Python 的语法，并用 Python 完成一些简单的项目。这本书先是简略地快速介绍了 Python 的语法，然后介绍它在脚本、网络、数据处理等领域的应用，其间还介绍了很多相关的工具和第三方包。</p>\n</li>\n</ul>\n<h2>科普</h2>\n<ul>\n<li><a href=\"http://www.amazon.cn/gp/product/B009RSXIB4/ref=as_li_tf_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B009RSXIB4&amp;linkCode=as2&amp;tag=jysperm07-23\" rel=\"nofollow\">编码：隐匿在计算机软硬件背后的语言</a></li>\n</ul>\n</div></div>"], "reply": "13", "tittle": "JavaScript 和服务器端方向推荐书单（附简评）", "comment": ["赞！这就是我的 2017 书单了", "你应该列出阅读一本书所需要的知识储备或者说门槛", "虽然我读过大部分但是觉得书单并没有用，用到什么看什么比较快一点。", "哪位推荐一本最近的，称得上经典的， es6 的书？", " ", "前一段时间在学校 PT 发了一批经典电子书，计算机科学与技术与软件工程相关的，我也发一把，供参考，并请批评指教\r", "第一批\r", "01.《 C++ Primer 中文版》\r", "02.《 Effective C++ 中文版》\r", "03.《 Java 编程思想 （第四版）》\r", "04.《 More Effective C++ 35 个改善编程与设计的有效方法 中文版》\r", "05.《 UNIX 网络编程 第 1 卷 套接口 API （第 3 版）》\r", "06.《 UNIX 网络编程 卷 2 进程间通信 第 2 版》\r", "07.《 WEB 程序设计（第 7 版）》\r", "08.《人件 原书第 3 版》\r", "09.《人月神话 40 周年中文纪念版》\r", "10.《代码之美》\r", "11.《代码整洁之道》\r", "12.《嵌入式计算系统设计原理 原书第 3 版＝ COMPUTERS AS COMPONENTS 》\r", "13.《数据库管理系统原理与设计 （第 3 版）》\r", "14.《数据结构与算法分析 Java 语言描述 原书第 3 版》\r", "15.《机器学习》\r", "16.《汇编语言程序设计》\r", "17.《深入理解计算机系统 原书第 2 版》\r", "18.《离散数学结构 第 6 版》\r", "19.《算法 第 4 版》\r", "20.《算法导论 第三版》\r", "21.《编程珠玑 第 2 版 修订版》\r", "22.《编译原理》\r", "23.《编译器设计》\r", "24.《计算机图形学》\r", "25.《计算机程序设计艺术 卷 1 ：基本算法 第 3 版》\r", "26.《计算机网络 （第四版）》\r", "27.《设计模式：可复用面向对象软件的基础》\r", "28.《重构：改善既有代码设计》\r", "29.《高性能 JAVASCRIPT 》\r", "30.《高性能 MYSQL 》\r", "31.《黑客与画家 来自计算机时代的高见》\r", "\r", "第二批\r", "01.《 CSS 禅意花园》\r", "02.《 C 专家编程》\r", "03.《 C 和指针》\r", "04.《 C 程序设计语言》\r", "05.《 C 陷阱与缺陷 （第二版）》\r", "06.《 Head First Python 重视大脑的学习指南 中文版》\r", "07.《 Head First Servlets & JSP 中文版》\r", "08.《 HEAD FIRST 设计模式 （中文版）》\r", "09.《 JAVASCRIPT 高级程序设计：第 3 版》\r", "10.《 JAVA 核心技术 卷 2 高级特性 （原书第 9 版）》\r", "11.《 Java 核心技术 卷 I ：基础知识（第八版）》\r", "12.《 LINUX 程序设计》\r", "13.《 PYTHON 语言及其应用=INTRODUCING PYTHON 》\r", "14.《 UML 面向对象建模与设计》\r", "15.《 UNIX 环境高级编程 第 3 版》\r", "16.《代码大全 （第 2 版）》\r", "17.《具体数学 计算机科学基础=CONCRETE MATHEMATICS A FOUNDATION FOR COMPUTER SCIENCE,SECOND EDITION 第 2 版》\r", "18.《分布式系统原理与范型 （第二版）》\r", "19.《哥德尔、艾舍尔、巴赫——集异壁之大成》\r", "20.《并行程序设计 （第二版）》\r", "21.《思科网络技术学院教程 CCNA EXPLORATION ：网络基础知识》\r", "22.《操作系统概念： JAVA 实现》\r", "23.《点石成金（ Don't Make Me Think ）（原书第 2 版）》\r", "24.《现代操作系统 原书第 3 版》\r", "25.《程序员修炼之道 从小工到专家》\r", "26.《程序员的职业素养》\r", "27.《算法Ⅰ～Ⅳ（ C++实现）——基础、数据结构、排序和搜索 （第三版）》\r", "28.《算法心得 高效算法的奥秘 原书第 2 版》\r", "29.《类型和程序设计语言》\r", "30.《编码隐匿在计算机软硬件背后的语言》\r", "31.《计算机复杂性 现代方法=Computational complexity a modern approach 》\r", "32.《计算机程序的构造和解释 （原书第 2 版）》\r", "33.《计算机组成与体系结构：性能设计 第 8 版》\r", "34.《设计原本：计算机科学巨匠 FREDERICK P.BROOKS 的反思》\r", "35.《软件工程 实践者的研究方法 原书第 7 版》\r", "36.《面向模式的软件体系结构 卷 2 ：用于并发和网络化对象的模式》\r", "37.《面向模式的软件架构分布式计算的模式语言 卷 4 》\r", "38.《面向模式的软件架构模式系统 卷 1 ＝ PATTERN-ORIENTED SOFTWARE ARCHITECTURE VOLUME 1 A SYSTEM OF PATTERNS 》\r", "39.《面向模式的软件架构资源管理模式 卷 3=PATTERN-ORIENTED SOFTWARE ARCHITECTURE PATTERNS FOR RESOURCE MANAGEMENT 》\r", "发现和楼主书单很多相同的", "👍", "sicp 难道不是 scheme ?", "其实推荐来推荐去都是那些书……", "这些书么？全是大部头 如果没有一定基础的话不建议开头就学习。\r", "还有看这些书要很有耐心，可能你看了一半前面的就都忘了。", "看了你的书单，就觉得你是可以拿 100k 的大神", " 多谢。还是想看一些实战的项目。", " 哪个 pt 站？"]},
{"content": ["<div class=\"topic_content\">发现谷歌收录了我的网站一些分辨率较大的图片，于是突发奇想，我将其他网站一些图片等比放大是不是就变成一张高清大图了？比如一个网站上有一张 1920x1080 分辨率的图片，我用 php 将其等比放大为 3840x2160 然后保存我网站， 4k 分辨率对比于原始 1080p 分辨率，谷歌肯定更喜欢 4k 的大图吧，肯定会优先收录我的图片，这么想合理不？</div>"], "reply": "16", "tittle": "Google 怎样鉴别一张图片是不是原始分辨率", "comment": ["好像和收录无关吧。只是大图没设置搜索条件下，显示在前面。", "行不通，你看看它的以图搜图技术多牛 就知道它在图片技术上的造诣了", "google 如果不智能，那垃圾站要泛滥成什么样。\r", "像最近推出的 panda v4 刷下去一大批耍小聪明的。\r", "当然没有完美的算法，也有一小批躲过了。\r", "你有这个折腾图片时间，还不如想着 怎么写出一篇有深度的文章，怎么提高网页给用户带来的价值实在， G 和用户都不傻。", "随便搜下图片，然后指定超大分辨率，就会发现不少强行放大的图片", "这种影响用户体验的事情 迟早会被干掉", "哈哈， 有创意。", "估计被举报你网站就上黑名单了……要是我是用户我搜到这种图会抓狂的……", " 谷歌搜索总遇到一些菠菜类的网站内容，头部是菠菜，底部是别人正规站好比 iframe ，看了下源码有 base 标签。", "应该是，虽然我觉得这样挺缺德。顺便我觉得 google 的算法很牛但是并没有传说中的那么神，连中文文字搜索结果都能被各种垃圾搜索站充斥搜索结果，图片结果我估计就跟不会被干掉了，更何况之前搜一些 ACG 图片确实出现不少强拉成大分辨率的图，害我白高兴一场。", "谷歌中文搜索现在很烂，经常会搜到一些第三方的搜索网站，我屏蔽了很多但还是经常遇到，也没见谷歌管这些垃圾网站\r", " 泛滥的挺多啊...中文搜索常规词几乎不能用了", " \r", " \r", " \r", "我上面说的话从英文 g 角度上说的，很多知识来自各大 seo 博客。 中文 g 确实有些垃圾站，我想跟 g 退出 中文少了很多支持有关。\r", "无责任猜测:如果在 2013 年之前，做类似的英文垃圾站也能排到英文 g 首页。", " GOOGLE 上本来就一堆垃圾站……", "想多了", " @", " 别光中英搜 也别照着机翻词汇去搜索 试试其他语言。( •̀ ω •́ )y", "那首先，我问你，如何定义原始分辨率？\r", "如果我用 PS 新建了一个 800*600 的画布，随便画了点东西，然后放大到 1600*1200 ，发布到网上，请问，我发布到网上的图是不是原始分辨率？如果有人看到我那张图，觉得图片可能是放大过的，然后把它缩小到 800*600 ，然后转载了，请问那张图片才是原始分辨率？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近想写一些大家喜闻乐见的文章。想问一下各位网友，特别是对刚入 Web 前端或者 Node.js 坑的朋友，特别想了解哪一方面的知识？</p>\n<p>本人并不是大神，只是想在写东西的过程中也让自己的知识得到整理和复习，同时也能帮助到一写刚入门的朋友。特意发帖问一下大家的建议。</p>\n<p>（大神请轻拍）</p>\n</div></div>"], "reply": "17", "tittle": "想写点关于 Web 技术文章，问问大家的建议。", "comment": ["写一篇或者多篇可以在线上运行的项目", "为什么要为别人想那么多，自己擅长什么就写什么呗", "我觉得可以通过一个项目，从前到后，从入门到深入。\r", "比如技术栈： react + react-router + redux + webpack  + koa + mongodb \r", "\r", "你能从项目的架构设计，技术的运用，安全的考虑等各方面，通过一篇篇文章来详细讲解和记录，对刚入门的人来说，会有很大的帮助。", "写自己遇到的坑", " 同意，写技术博客主要先是给自己看吧，复习加锻炼笔杆子，至于别人，写的好了自然访客就多了！", "先写给自己看 写笔记，写心得", "先搞个大新闻 把 node.js 批判一番", " 真理，你写出来的东西首先是自己看的，自己就是第一读者，你管别人做什么？", "You are so versatile. Wonderful~", "来来  ....  给我博客做点贡献的时候到了.....  ", " 先写一篇 “ PHP 是最差的语言”", "我先 mark 下，回头拜读", "写工作中遇到的问题，然后解决思路，有 demo 最好了", "stream", " 惊艳！", "从入门到踩坑到放弃", " .....   提点意见呗. 还在完善中..."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>网站会有频繁的如下搜索请求：\n离 &lt;邮编 xxx&gt; &lt;1 公里&gt; 内所有的 &lt;餐馆&gt;</p>\n<p>以上：</p>\n<ol>\n<li>&lt;邮编 xxx&gt;为任何源地址，可以是一个 ip, 邮编，城市名字</li>\n<li>&lt;1 公里&gt; 为距离，也可以是 1 英里， 2 英里， 3 英里， 25 英里， 50 英里等</li>\n<li>&lt;餐馆&gt; 为类别，也可以是酒店等</li>\n</ol>\n</div></div>"], "reply": "35", "tittle": "哪个数据库 SQL or NOSQL 处理距离最方便？", "comment": ["mongoDB?", "不知道为啥这么多人推荐 mongo ？仅仅因为是 js 近亲？要说成本的话大学基本是都学过数据库啊，我记得我们学的还是 mssql 。。转换成 mysql 应该也没那么麻烦吧。。", "Postgres 做这个也很方便", "距离是可以换算的，没那么麻烦吧", "数据量大而且查询频繁的话，建议使用空间数据类型，前提是要有经纬度，建立空间索引，非常适合楼主这种空间查询。 \r", "\r", "主流的关系数据库都支持空间索引， MongoDB 貌似只支持 GeoRSS ， 不知道是否支持空间索引。", "mysql 5.7 以上", "ElasticSearch", "能装在内存的话（既然你有频繁查询）， ", "\r", "\r", "\r", "mongodb 不太适合。", "数据库主要功能不是运算！", " redis 功能有限，支持不了类别。 PG+GIS", "绝对是 postgresql 啊，速度快，原生支持点的数据类型，还提供相应函数， postgis 支持地理位置的处理。专业的都用这个", "支持 gis 最好的就是 pg 了吧", "mongod 和 redis 都有 geo api", "任意直线距离,大部分常规资料库都一样快阿.\r", "还以为是在问以道路为准的.\r", "\r", "如果是在一个路网内.依照交通和道路状况.计算出两点之间最短交通路径.这个才是比较需要考虑图论资料库或是有特殊要化的.", " 你说的这些也不需要图数据库， postgresql+postgis 完全满足要求，还提供对应的函数和索引。", "postgis +1", "postgis  不二选择", "我记得 mongoDB 自带地图查询功能吧\r", "特地找了一下官网的说明，你看一下就好了\r", "Postgres 。\r", "\r", "我刚刚把一个用了两年多， 5500W+数据量的系统，从 MySQL 导入到 Postgres 。", "做 gis 相关数据的应该都知道 postgres", "     mysql 还不支持地理位置查询", "mongodb 和 redis 都支持地理位置查询   之前项目我们用 mongodb 的", "可以直接用 PostgreSQL ，如果仅仅是这么一个需求的话可以参考地图分图幅的办法给每个餐馆和邮编分配一个网格号码，根据网格就可以直接遍历。这在空间数据处理里很常见。", "PostgreSQL  似乎对地理位置数据有特殊的优化", "推荐 PostgreSQL  ，千万用户，地理位置存储目前使用的 Mongo ，准备切 PG", "推荐 ElasticSearch ，之前用 mongo 性能太差", "redis 处理比 postgis 还方便", "不建议用 mongo db ，因为丫的不支持 ACID ，推荐 PostGis", " 应用层目前的换算成本高罢了，毕竟地球是一个球体，地表两点的距离不是直线", " 搜索业务要毛线 ACID", " 看精度要求，精度不高可以 GeoHash ，索引做的恰当还是挺快的。", "调百度、高德的 API 不行么，自己整不明白还非得自己做。。。？", " 不但没有 ACID ，性能也差，虽然是搜索业务，有两者都兼顾的为什么不用呢？", "如果楼主是类似生活 POI 兴趣点搜索的话，调地图 API 最快最容易。\r", "\r", "如果涉及到自有 LBS ， GIS 的话，还是推荐 PostgreSQL ，专业做这个。\r", "\r", "毕竟，谁都不知道未来需求，稍微“未雨绸缪”下也是值得考虑的。\r", "\r", "（不过，同样也得考虑学习成本，看回复不同数据库的选择和技术栈也有关系", "这种场景更考验的是如何设置缓存\r", "推荐使用 redis 与传统结构性数据库配合\r", "否则高并发场景下，仅仅凭数据库性能是远远不够的，除非你单机性能特别强特别强特别强"]},
{"content": ["<div class=\"topic_content\">我比较好奇，微信小程序可以提供滴滴的流量入口，钱包也有。滴滴会不会把钱包的入口关了呢？两个入口同时存在微信，会不会多余呢？而且钱包入口应该需要缴费给微信的吧。</div>"], "reply": "目前尚无回", "tittle": "关于微信小程序跟钱包入口问题", "comment": []},
{"content": ["<div class=\"topic_content\">来吧！我都已经卸载好多了！</div>"], "reply": "5", "tittle": "[小程序] 今天来晒一晒你的手机桌面的 APP 数量和你使用的小程序", "comment": ["手机终于可以卸负了", "终于不用打开每个 APP 都要提前看几秒广告了。。", "省了好多地方", "play 版的微信还没更新，用不了。。。。\r", "google 审核慢了还是腾讯提交的慢", "100 多个 APP ， 0 个小程序，完全不觉得打开微信之后打开小程序是多好的体验"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>建了个微信小程序分享群，欢迎大家一起来分享你最喜欢的小程序</p>\n<p><img alt=\"png\" src=\"http://7i7hhc.com1.z0.glb.clouddn.com/538444609154726037.jpg\"></p>\n<p><a href=\"http://mp.weixin.qq.com/s/qrhBW9p9acPMK-zULWRcMQ\" rel=\"nofollow\">http://mp.weixin.qq.com/s/qrhBW9p9acPMK-zULWRcMQ</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "你要的微信小程序终于来了", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h2>初衷</h2>\n<p>近日在学习爬虫的时候遇到一个小问题，当在抓取某些网页的时候，在线测试通过的正则匹配在用 PHP 抓取时却发现只能抓取某些非关键元素。\n经过排查，才发现在抓取该页面（是一个电商页面）时，该页面的详情页面是通过 JS 二次请求动态添加上去的，而 PHP(通过 curl 函数库的方式)只是将其静态页面抓下，所以正则匹配的不是整个渲染好的完整页面，而是一个隐藏了详情板块的页面。</p>\n<h2>解决方案</h2>\n<p>大致涉猎了一下，一般业界的解决方法有二：</p>\n<ol>\n<li>\n<p>分析 JS 文件，模拟 JS 中的请求</p>\n</li>\n<li>\n<p>想方法运行 JS ，抓取 JS 运行渲染完毕后的页面(本文讲述的方法)</p>\n</li>\n</ol>\n<h2>phantomjs</h2>\n<p>￼<img alt=\"file\" src=\"https://dn-phphub.qbox.me/uploads/images/201701/07/8738/IYkDQnXEq7.png\"></p>\n<p><a href=\"http://phantomjs.org/\" rel=\"nofollow\">phantomjs</a> 基于 WebKit 、开源的服务器端 JavaScript API, 采用了 WebKit 内核的 phantomjs 可以模拟浏览器运行网页，可以浅显的把它理解为除了把访问的页面显示出来。\n除此之外，其他浏览器具备的功能它都有了(DOM handling, CSS selector, JSON, Canvas, and SVG)，所以可以通过调用它来运行含有 JS 文件且需要运行的 html 页面，当然它的用处肯定不止这些， web 测试，页面截图，网络监控等等(详见官网文档)。</p>\n<h2>解决步骤</h2>\n<h3>Step.1 下载(编译)phantomjs 文件</h3>\n<p>这里有两种方式：</p>\n<ol>\n<li>\n<p>直接从<a href=\"http://phantomjs.org/download.html\" rel=\"nofollow\">官网</a>下载对应系统编译好的可执行文件,解压后移动到 bin 目录下即可</p>\n</li>\n<li>\n<p>从<a href=\"https://github.com/ariya/phantomjs\" rel=\"nofollow\">官方 Github</a>下载源码后编译为可执行文件。</p>\n</li>\n</ol>\n<p>我这里向大家介绍比较通用的法一：\n如图在官网下载对应你服务器系统的版本，</p>\n<p>￼￼<img alt=\"file\" src=\"https://dn-phphub.qbox.me/uploads/images/201701/07/8738/MhVEWyDqWn.png\"></p>\n<p>以 CentOS 为例，下载 Linux 64-bit 版本(32/64 区分好)</p>\n<pre><code>curl -O https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2\n</code></pre>\n<p>解压文件</p>\n<pre><code>tar xvf phantomjs-2.1.1-linux-x86_64.tar.bz2\n</code></pre>\n<p>移动文件到 bin 目录下</p>\n<pre><code>cp phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin\n</code></pre>\n<p>到这里就 phantomjs 的 install 过程已完成，不过最好测试一下能否成功运行。\n随意写一个测试的 js 文件，运行下看是否成功</p>\n<pre><code>phantomjs helloworld.js\n</code></pre>\n<p>若是不成功，按提示安装缺失的 libraries 后再运行。\n若还是不行，可以尝试用法二来获取 phantomjs 文件。</p>\n<h3>Step.2 通过 PHP 调用 phantomjs</h3>\n<p>正常来说到这里的话，我们应该先用 PHP 获取到对应页面的 URL ，然后用 phantomjs 执行后，获取返回的内容，再对其进行正则匹配(替代了原来的 curl 操作)。\n我在 Github 发现了有朋友已经封装了一个基于<a href=\"http://jonnnnyw.github.io/php-phantomjs/4.0\" rel=\"nofollow\">PHP-phantomjs</a>的包，还写了非常健全的文档，已为他献上 Star 。</p>\n<p>￼￼<img alt=\"file\" src=\"https://dn-phphub.qbox.me/uploads/images/201701/07/8738/H4bu5yWY6H.png\"></p>\n<p>由于文档是全英，我这里简单的介绍下关键步骤</p>\n<p>1.通过 Composer 安装</p>\n<pre><code>composer require \"jonnyw/php-phantomjs:4.*\"\n</code></pre>\n<p>2.初始化 JonnyW\\PhantomJs\\Client 类</p>\n<pre><code>$client = Client::getInstance();\n//这一步非常重要，务必跟服务器的 phantomjs 文件路径一致\n$client-&gt;getEngine()-&gt;setPath('/usr/local/bin/phantomjs');\n</code></pre>\n<p>3.简单的使用</p>\n<pre><code>$request  = $client-&gt;getMessageFactory()-&gt;createRequest();\n$response = $client-&gt;getMessageFactory()-&gt;createResponse();\n\n//设置请求方法\n$request-&gt;setMethod('GET');\n//设置请求连接\n$request-&gt;setUrl($link);\n//发送请求获取响应\n$client-&gt;send($request, $response);\n\nif($response-&gt;getStatus() === 200) {\n    //输出抓取内容\n    echo $response-&gt;getContent();\n    //获取内容后的处理\n}\n</code></pre>\n<p>4.加载完整 JS 的用法</p>\n<pre><code>$client = Client::getInstance();\n$client-&gt;isLazy(); // 让客户端等待所有资源加载完毕\n\n$request = $client-&gt;getMessageFactory()-&gt;createRequest();\n$request-&gt;setTimeout(5000); // 设置超时时间(超过这个时间停止加载并渲染输出画面)\n\n......\n</code></pre>\n<h2>总结</h2>\n<p>最近在看《数学之美》的时候吴军博士在“图论和网络爬虫”一章中提过，如今的网页很多是用 Javascript 生成，在面对这些网页时，网络爬虫需要模拟浏览器去运行。\n我也是在看完这一章后对这个点有所印象，这次遇到类似问题就朝这个方向去解决了。希望能给大家带来一点帮助和启发。</p>\n<h2>Contact me</h2>\n<p>如果有什么错误或者建议 OR 如果需要请教关于本主题的相关问题\n欢迎来邮与我交流和讨论！</p>\n<p>Email ：<a href=\"mailto:atrovervan@gmail.com\">atrovervan@gmail.com</a></p>\n<p>&amp; My blog:  <a href=\"http://rovervan.com/\" rel=\"nofollow\">ROVERVAN</a></p>\n</div></div>"], "reply": "1", "tittle": "Run JS While Grabing Web Page With PHP(用 PHP 爬取需要运行 JS 的页面)", "comment": ["支持下"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我换什么工具用 Markdown 写博客 在类似 ```   &gt; 等这种标签后总会出现不能生成为正确的 html 文件的情况,  我听说 hexo 使用的是与 github 上 markdown 一致的解析语法,所以我更换了 atom 但是问题依然存在,\n一直很纠结, 请大家有没有碰到过这个情况? 是怎么解决的?</p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>其实, 我不是缺 Markdown 编辑器, 只是 hexo和Markdown编辑器解释好像不一致 ,  因为在Markdown编辑器上可以正常解析的部分 使用hexo发布出来 页面就是乱码或者出不来页面.</p>\n</div></div>", "<div class=\"topic_content\">例如如下一段 hexo 命令生成页面就有问题了: \r<br>\r<br>---\r<br>title: test\r<br>date: 2017-01-07 22:55:54\r<br>updated:\r<br>categories:\r<br>permalink:\r<br>tags: test\r<br>---\r<br>\r<br>\r<br>#### 关于版本控制\r<br>\r<br>什么是版本控制？我为什么要关心它呢？版本控制是一种记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的系统。在本书所展示的例子中，我们仅对保存着软件源代码的文本文件作版本控制管理，但实际上，你可以对任何类型的文件进行版本控制。\r<br>\r<br>如果你是位图形或网页设计师，可能会需要保存某一幅图片或页面布局文件的所有修订版本（这或许是你非常渴望拥有的功能）。采用版本控制系统（ VCS ）是个明智的选择。有了它你就可以将某个文件回溯到之前的状态，甚至将整个项目都回退到过去某个时间点的状态。你可以比较文件的变化细节，查出最后是谁修改了哪个地方，从而找出导致怪异问题出现的原因，又是谁在何时报告了某个功能缺陷等等。使用版本控制系统通常还意味着，就算你乱来一气把整个项目中的文件改的改删的删，你也照样可以轻松恢复到原先的样子。但额外增加的工作量却微乎其微。\r<br>\r<br>\r<br>#### 本地版本控制系统\r<br>\r<br>许多人习惯用复制整个项目目录的方式来保存不同的版本，或许还会改名加上备份时间以示区别。这么做唯一的好处就是简单。不过坏处也不少：有时候会混淆所在的工作目录，一旦弄错文件丢了数据就没法撤销恢复。为了解决这个问题，人们很久以前就开发了许多种本地版本控制系统，大多都是采用某种简单的数据库来记录文件的历次更新差异（见图 1-1 ）。\r<br>\r<br>\r<br>其中最流行的一种叫做 rcs ，现今许多计算机系统上都还看得到它的踪影。甚至在流行的 Mac OS X 系统上安装了开发者工具包之后，也可以使用 rcs 命令。它的工作原理基本上就是保存并管理文件补丁（ patch ）。文件补丁是一种特定格式的文本文件，记录着对应文件修订前后的内容变化。所以，根据每次修订后的补丁， rcs 可以通过不断打补丁，计算出各个版本的文件内容。\r<br>\r<br>\r<br>#### 集中化的版本控制系统\r<br>接下来人们又遇到一个问题，如何让在不同系统上的开发者协同工作？于是，集中化的版本控制系统（ Centralized Version Control Systems ，简称 CVCS ）应运而生。这类系统，诸如 CVS ， Subversion 以及 Perforce 等，都有一个单一的集中管理的服务器，保存所有文件的修订版本，而协同工作的人们都通过客户端连到这台服务器，取出最新的文件或者提交更新。多年以来，这已成为版本控制系统的标准做法（见图 1-2 ）。</div>", "<div class=\"topic_content\">上面问题复现的文字,  我测试结果是最后一段去掉就正常了</div>"], "reply": "78", "tittle": "请问大家,使用 hexo 搭建的博客,使用什么工具写 Markdown 格式博客的?", "comment": ["vscode,自带预览", "mweb", "后来我就用随便的一个 markdown 工具写，写完了导出 evernote 做备份，顺便导出 html 格式拷贝到 hexo 里面。。。", "atom 和 mweb 。", "Atom ,And VS Code", "vscode", "VSCode +1", "Typora", "mweb +1", "  我用的 arch 好像 没有 linux 版本", "  请问这个是怎么结合的?", "  请问这是怎么结合的?", "我之前是打算自己写个 web 端，但是找不到合适的 html 编辑器（主要是适应手机", "有道云…写一篇有时候三五天，写完复制到 hexo", "vim", "   但是由 markdown 生成的 html 结合主题展示就不对了", "vscode +1", " 现在用 VS code 写\r", "github 的 MD 语法支持很好,加了个预览插件就可以用了", "notepad++", "Typora.", "Sublime txet 一直很完美啊，是不是你的语法有问题，能贴出来看看呗", "hexo 竟然不能预览嘛？还好没入坑 (￣^￣)ゞ", " hexo 在本地起个服务就可以预览了，不过不能实时预览。", "同有过这样子的问题，修改之后和主题效果不一样 t\r", "后来发现一个挺好用的 hexo 后端工具 hexo-admin 。\r", "可以看看我写的介绍[hexo-admin 博客后端管理工具]( ", ")", " \r", " \r", "hexo 是可以实时预览的，我当时也是因为有这个苦恼才做这个的\r", "同楼上说的是不是你语法有问题？\r", "试试```和>之前多空一行不知道能不能解决", "Atom ， django 写 blog 程序， Atom 写文章", "上面好多用 vs code 的看来可能需要跳个坑了", "不一样是不是 markdown 语法与 mathjax 语法冲突？这个要改 markdown 解释器的匹配", "买了 MWeb", "MWeb", " \r", " \r", "其实我想说：为何不入 Nikola 的坑呢？⇋_⇋\r", "最近就想找人安利这个", "github 上直接写", "atom", "MWeb ，没有之一", "mweb 传图床不要太方便", "vim", "解析不一致你可以修改 hexo 的主题，把你想要的样式加进去", " \r", " \r", "我把复现问题的例子追加到主题附言上了, 麻烦请帮忙给看看 到底是哪儿的问题?", "  我用 atom 预览是有的 而且 起着服务也可以预览,只是这个解析问题一直很纠结", "  是直接错误了, 要不就是文章出不来,要么是底部乱码", "webstorm 或者 vscode", "Typora 没有之一", "现在逮人就想推荐 @", " 的 MWeb ", "mweb 没有之一。。。", "我吃了 @", " 的安利，目前用 Typora ， Typora 就是个阉割的 Chromium 。 Typora 不够优秀，但刚好够用。", " 这是两种方案。如果要剪贴板插图的话 mweb 换文档库可能还方便一点。 vscode 没用过，但看他们说还不错，但是插件可能比较少。", " typora 只有 linux 版本才是 electron 写的，其他平台好像都是原生的吧？印象中是这样。", " 按说一般 hexo n 生成之后直接打开文件往下写应该没问题的.不过就你上面这一段的话我试了一下.我发现你两个 --- 之间,title,date 那些每一行最后有个空格,我去掉了之后好像就没问题了.虽然不知道为什么,但是你试试看能不能解决你的问题.另我用的主题是 Jacman,可能和你的有点区别.", " 忘了说, --- 那两行后面的空格我也一起去掉了,不知道有没有影响.", "---\r", "title: test \r", "date: 2017-01-07 22:55:54 \r", "updated: \r", "categories: \r", "permalink: \r", "tags: test \r", "---\r", "\r", "的---后面把空格去掉就没事了，至少我这里只出现了这个问题\r", "\r", "还有预览可以用 hexo server 命令就可以在本地预览", "vim+本地渲染", "或许你可以试下这个 ", "Haroopad - The Markdown enabled Next Document Processor\r", "\r", "#滑稽", "非技术类文章 Typora\r", "技术类文章 VSCode", "hexo server  底部会被截断，但是生成没问题\r", "尽量用标准语法 \r", "渲染用 pandoc\r", "\r", "其他问题就是 css 什么的，自己调就好", "Typora+u 图床", "VSCODE +1", "sublime", "vim...", "用 ghost 博客吧！自带 Markdown 实时预览编辑器", "  这一部分是 hexo n test 自动生成的, 然后我修改了 title  但是在 atom 里面没有发现有空格啊 ?  你是使用的什么工具发现有空格的呢?", "  我这是测试结果是最后一段去掉就正常了", "  恩恩 我是为了不来回切, 所见即所得 所以用 atom 写 避免 markdown 低级语法错误 浪费时间", " 我用的 macdown,不是工具发现的.看你给的东西 title 之类的解析不对,我复制我之前的上去就对了,对比了半天才发现是空格的原因.", "MacDown+1", "gitbookeditor", "   哦哦  那可能是解析不一样  我把最后一段去掉就好了  我估计肯定是因为空格导致 不过是最后一段的不当空格导致的", "MWeb....", "VSCode +1", "试试 “马克飞象“ ： ", "haroopad 免费跨平台 谁用谁知道", "日常用 Atom 写，不过 hexo 有个 hexo-admin 插件，可以直接在浏览器里编写和预览", "最后一段像其它 section 一样，小标题和内容之间空一行试试？", " 发现问题解决了就好～", "  这种方式 我试过了 不行", "   但是 不知道原因 ,以后还会被这种问题困扰 写的很难受"]},
{"content": ["<div class=\"topic_content\">上网找了半天都没找到，以前的 <a target=\"_blank\" href=\"https://www.weiyun.com/api.html\" rel=\"nofollow\">https://www.weiyun.com/api.html</a> 都无法访问了</div>"], "reply": "3", "tittle": "腾讯微云的开放 API 有人知道在哪吗？", "comment": ["可能是不需要开放吧，毕竟自家生态很强。", "关闭了", "在中间有一段微云的\r", "貌似要集成 sdk\r"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"\" src=\"http://mmbiz.qpic.cn/mmbiz_jpg/v6uP0lGcBZ76wbhDqibEia1zBMgNdqsW7wdH3kEu07C84o5KicBo5xABKrsU9Yibmk9tz8EFZ2ZZoN7ycT2It353icQ/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1\"></p>\n<p>过去这 10 年，无疑是云计算高速发展的 10 年，而作为一直关注云计算行业前沿技术变革的 ECUG Con ，也将于 2017 年，迎来它的十周年盛会。</p>\n<p>与历届 ECUG Con 一样， ECUG Con 十周年，大会仍然坚持以技术干货为导向，杜绝广告，专注于某个细分技术领域的实践分享，不求大而广，只求专而深，大会嘉宾和演讲内容都将由许式伟亲自把关。届时， ECUG 的老朋友，谢孟军、刘奇等将莅临现场，和众多的新朋友一起，给大家共同奉献一场云计算领域的技术盛宴。</p>\n<p><strong>时间</strong>： 2017 年 1 月 14 -15 日</p>\n<p><strong>地点：</strong>深圳市 南山区 粤海街道海天一路软件产业基地 5 栋 B 栋 537 报告厅</p>\n<p>分享嘉宾及议题介绍\n<img alt=\"\" src=\"http://mmbiz.qpic.cn/mmbiz_png/v6uP0lGcBZ76wbhDqibEia1zBMgNdqsW7wyORCWNr9s1Z7SLtLLHs77shxHrrkQ0K2VlczX9Sbp7E5aiaJjbbyRDQ/0?wx_fmt=gif&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1\"></p>\n<p>活动报名请戳<a href=\"http://www.huodongxing.com/event/9365841223700\" rel=\"nofollow\">「阅读原文」</a>。\n想要了解更多 ECUG 相关的内容 ，可前往 ECUG 官网: <a href=\"http://www.ecug.org\" rel=\"nofollow\">www.ecug.org</a> 。</p>\n<p>同时，敬请期待下篇 ECUG 嘉宾专访喔，你将会了解到：\n2007 年 ECUG 初建时，当时的云计算领域处于什么样的状态；\n十年来，国内云计算行业经历了什么样的发展路径；\n当前国内云计算产业所处的发展阶段及未来的前景预测。</p>\n<p><strong>彩蛋：</strong>正价购买双日门票的观众，可以凭票现场领取限量版 Gopher T 恤一件。</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "ECUG Con 十周年盛会：与大咖共探云技术最深度实践", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>看了小鱼儿公司 CES 的产品觉着还不错，想试试</p>\n<p><a href=\"http://www.leiphone.com/news/201701/LApNBzbvon5GUdqZ.html\" rel=\"nofollow\">http://www.leiphone.com/news/201701/LApNBzbvon5GUdqZ.html</a></p>\n</div></div>"], "reply": "1", "tittle": "有人知道百度 dueros 的 API 吗？", "comment": ["另外联想和 Amazon 合作的内置 Echo 的智能音箱开始众测了，明天截止报名。\r", "\r"]},
{"content": ["<div class=\"topic_content\">知晓程序注：\r<br>要想开发小程序，每个人都需要先了解 Flex 。小程序的开发框架使用了 Flex 排版布局，它能帮助开发者以最快的速度，构建美观而具有动态调整性质的小程序排版。\r<br>但是， Flex 在目前为止尚未大范围地推广和使用，甚至许多前端开发者，在上手小程序开发后才知道 Flex 。\r<br>那么，使用 Flex 到底有什么优势？ Flex 中有多少排版模式？如何正确使用 Flex 排版？\r<br>今天，知晓程序（微信号 zxcx0101 ）就来带大家看看 Flex 的正确使用方法。希望本文可以帮助大家，利用好 Flex 构建具有良好体验的小程序。\r<br>\r<br>\r<br>文 | 姜家志\r<br>微信小程序页面布局方式采用 Flex 布局格式，它是 W3c 在 2009 年提出的一种新的网页排版方案，可以简便、完整地实现各种响应式页面布局。\r<br>Flex 布局的主要特点是：能够让同级元素在不同的屏幕大小中，用最适合的方法填充空间。同时， Flex 提供了元素在容器中的对齐方式、对齐方向以及元素顺序，甚至被编排的元素可以是动态的或是不确定的大小的。\r<br>\r<br><a target=\"_blank\" href=\"/i/6M8v4uuxl.jpeg\" title=\"在新窗口打开图片 6M8v4uuxl.jpeg\"><img src=\"//i.v2ex.co/6M8v4uuxl.jpeg\" class=\"embedded_image\"></a>\r<br>\r<br>Flex 布局有如下特点：\r<br>•\t任意方向的伸缩\r<br>•\t在样式层可以调换和重排顺序\r<br>•\t主轴和侧轴方便配置\r<br>•\t子元素的空间拉伸和填充\r<br>•\t沿容器对齐\r<br>本文将会简单介绍 Flex 布局在微信小程序中的使用。\r<br>伸缩容器\r<br>在小程序中，设有 display: flex 或者 display: block 的元素就是一个 flex container （伸缩容器），里面的子元素称为 flex item （伸缩项目）。在 flex container 中，子元素都可以使用 Flex 进行布局。\r<br>•\tdisplay: block 指定为块内容器模式，总是使用新行开始显示，微信小程序的视图容器（ view 、 scroll-view 和 swiper ）会默认设置 display: block ；\r<br>•\tdisplay:flex ：指定为行内容器模式。在一行内显示的子元素，可以使用 flex-wrap 属性指定其是否换行、如何换行。 flex-wrap 有三个值： nowrap （不换行）、 wrap （向下换行），以及 wrap-reverse （向上换行）。\r<br>假设我们有以下的代码：\r<br>&lt;view class=\"flex-row\" style=\"display: block;\"&gt;\r<br>  &lt;view class=\"flex-view-item\"&gt;1&lt;/view&gt;\r<br>  &lt;view class=\"flex-view-item\"&gt;2&lt;/view&gt;\r<br>  &lt;view class=\"flex-view-item\"&gt;3&lt;/view&gt;\r<br>&lt;/view&gt;\r<br>使用 display: block （默认值）时，显示效果如下：\r<br>\r<br><a target=\"_blank\" href=\"/i/0R5SWXbUl.png\" title=\"在新窗口打开图片 0R5SWXbUl.png\"><img src=\"//i.v2ex.co/0R5SWXbUl.png\" class=\"embedded_image\"></a>\r<br>\r<br>改换成 display: flex 后，显示效果如下：\r<br>\r<br><a target=\"_blank\" href=\"/i/9qFI8ZScl.png\" title=\"在新窗口打开图片 9qFI8ZScl.png\"><img src=\"//i.v2ex.co/9qFI8ZScl.png\" class=\"embedded_image\"></a>\r<br>\r<br>我们可以从效果图中清楚地看出 block 和 flex 的区别，即子元素 view 换行显示（ block ）和行内显示（ flex ）的差异。\r<br>主轴和侧轴\r<br>Flex 布局的伸缩容器可以使用任何方向进行布局。\r<br>默认情况下，容器有主轴（ main axis ）和侧轴（ cross axis ）两种轴。\r<br>主轴的开始位置为主轴起点（ main start ），主轴的结束位置为主轴终点（ main end ），而主轴的长度为主轴长度（ main size ）。\r<br>同理侧轴的起点为侧轴起点（ cross start ），结束位置为侧轴终点（ cross end ），长度为侧轴长度（ cross size ）。\r<br>\r<br><a target=\"_blank\" href=\"/i/sXYN0rn0.png\" title=\"在新窗口打开图片 sXYN0rn0.png\"><img src=\"//i.v2ex.co/sXYN0rn0.png\" class=\"embedded_image\"></a>\r<br>\r<br>注意，主轴并不是一定是从左到右的，同理侧轴也不一定是从上到下。主轴的方向可以使用 flex-direction 属性控制，它有 4 个可选值：\r<br>•\trow ：从左到右的水平方向\r<br>•\trow-reverse ：从右到左的水平方向\r<br>•\tcolumn ：从上到下的垂直方向\r<br>•\tcolumn-reverse ：从下到上的垂直方向\r<br>如果水平方向为主轴，那个垂直方向就是侧轴，反之亦然。\r<br>四种主轴方向设置的效果图：\r<br>\r<br><a target=\"_blank\" href=\"/i/altNF1I6l.png\" title=\"在新窗口打开图片 altNF1I6l.png\"><img src=\"//i.v2ex.co/altNF1I6l.png\" class=\"embedded_image\"></a>\r<br>\r<br>图中的实例展示了使用了不同的 flex-direction 值排列方向的区别。\r<br>实例代码:\r<br>&lt;view&gt;\r<br>  &lt;view class=\"flex-row\" style=\"display: flex; flex-direction: row;\"&gt;\r<br>    &lt;view class=\"flex-view-item\"&gt;1&lt;/view&gt;\r<br>    &lt;view class=\"flex-view-item\"&gt;2&lt;/view&gt;\r<br>    &lt;view class=\"flex-view-item\"&gt;3&lt;/view&gt;\r<br>  &lt;/view&gt;\r<br>  &lt;view class=\"flex-column\" style=\"display: flex; flex-direction: column;\" &gt;\r<br>    &lt;view class=\"flex-view-item\"&gt;c1&lt;/view&gt;\r<br>    &lt;view class=\"flex-view-item\"&gt;c2&lt;/view&gt;\r<br>    &lt;view class=\"flex-view-item\"&gt;c3&lt;/view&gt;\r<br>  &lt;/view&gt;\r<br>&lt;/view&gt;\r<br>运行效果：\r<br>\r<br><a target=\"_blank\" href=\"/i/nGV8BALpl.png\" title=\"在新窗口打开图片 nGV8BALpl.png\"><img src=\"//i.v2ex.co/nGV8BALpl.png\" class=\"embedded_image\"></a>\r<br>\r<br>对齐方式\r<br>子元素有两种对齐方式：\r<br>•\tjustify-conent 定义子元素在主轴上面的对齐方式；\r<br>•\talign-items 定义子元素在侧轴上对齐的方式。\r<br>justify-content 有 5 个可选的对齐方式：\r<br>•\tflex-start ：主轴起点对齐（默认值）；\r<br>•\tflex-end ：主轴结束点对齐；\r<br>•\tcenter ：在主轴中居中对齐；\r<br>•\tspace-between ：两端对齐，除了两端的子元素分别靠向两端的容器之外，其他子元素之间的间隔都相等；\r<br>•\tspace-around ：每个子元素之间的距离相等，两端的子元素距离容器的距离也和其它子元素之间的距离相同。\r<br>justify-content 的对齐方式和主轴的方向有关。下图以 flex-direction 为 row ，主轴方式是从左到右，描述 justify-content 5 个值的显示效果：\r<br>\r<br><a target=\"_blank\" href=\"/i/ZaW1nSWul.png\" title=\"在新窗口打开图片 ZaW1nSWul.png\"><img src=\"//i.v2ex.co/ZaW1nSWul.png\" class=\"embedded_image\"></a>\r<br>\r<br>align-items 表示侧轴上的对齐方式：\r<br>•\tstretch ：填充整个容器（默认值）；\r<br>•\tflex-start ：侧轴的起点对齐；\r<br>•\tflex-end ：侧轴的终点对齐；\r<br>•\tcenter ：在侧轴中居中对齐；\r<br>•\tbaseline ：以子元素的第一行文字对齐。\r<br>align-tiems 设置的对齐方式，和侧轴的方向有关。下图以 flex-direction 为 row ，侧轴方向是从上到下，描述 align-items 的 5 个值显示效果：\r<br>\r<br><a target=\"_blank\" href=\"/i/kZVwvK6dl.png\" title=\"在新窗口打开图片 kZVwvK6dl.png\"><img src=\"//i.v2ex.co/kZVwvK6dl.png\" class=\"embedded_image\"></a>\r<br>\r<br>有了主轴和侧轴的方向再加上设置他们的对齐方式，就可以实现大部分的页面布局了。\r<br>希望大家可以通过本文，熟悉 Flex 布局，开发出体验更好的小程序。\r<br>原文地址： <a target=\"_blank\" href=\"http://www.jianshu.com/p/f82262002f8a\" rel=\"nofollow\">http://www.jianshu.com/p/f82262002f8a</a>\r<br>源代码地址： <a target=\"_blank\" href=\"https://github.com/jjz/weixin-mina/blob/master/pages/flex/flex.wxml\" rel=\"nofollow\">https://github.com/jjz/weixin-mina/blob/master/pages/flex/flex.wxml</a>\r<br>\r<br>目前国内首个小程序商店已经上线，诚邀大家入驻。 <a target=\"_blank\" href=\"https://minapp.com/?utm_source=v2ex&amp;utm_medium=tiezi20170114\" rel=\"nofollow\">https://minapp.com/?utm_source=v2ex&amp;utm_medium=tiezi20170114</a>\r<br>\r<br>\r<br>\r<br>\r<br>\r<br>本文由知晓程序授权转载，关注微信号 zxcx0101 ，回复「上手」获取全网最值得看的小程序上手体验系列文章。\r<br>快速关注知晓程序↓↓↓\r<br>\r<br><a target=\"_blank\" href=\"/i/76qS6xyXl.png\" title=\"在新窗口打开图片 76qS6xyXl.png\"><img src=\"//i.v2ex.co/76qS6xyXl.png\" class=\"embedded_image\"></a>\r<br>\r<br>知晓程序（微信号 zxcx0101 ）是爱范儿旗下专注于小程序生态的公众号。我们提供最全面、新鲜的小程序资讯（消息、观点、指南、活动）和服务，在这里你能了解到关于小程序的一切。</div>", "<div class=\"topic_content\">知晓程序建立了专门的小程序讨论群组，详情请点击 <a target=\"_blank\" href=\"http://school.17vsell.com/TollChatRoom/Detail.aspx?tollId=5176&amp;from=groupmessage&amp;isappinstalled=0\" rel=\"nofollow\">http://school.17vsell.com/TollChatRoom/Detail.aspx?tollId=5176&amp;from=groupmessage&amp;isappinstalled=0</a></div>"], "reply": "7", "tittle": "小程序开发必看！一篇文章让你了解 Flex 布局 By/ifanr", "comment": ["文章很不错", " 多谢支持", "配图好眼熟。。。", "图都是盗的", "“甚至许多前端开发者，在上手小程序开发后才知道 Flex ” 不至于吧，我一年前就 h5 上面用过了。", "既然图片都盗用了 Css Tricks 的那篇文章（谷歌搜 Flexbox 排第一的链接），不如直接翻译过来？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"http://kubernetes.io\" rel=\"nofollow\">kubernetes.io</a> 是不是被墙了？一早来了打不开</p>\n</div></div>"], "reply": "10", "tittle": "k8s 什么时候也被墙了？喜大普奔", "comment": ["可以访问，运营商网路问题", " 好的，谢谢", "啊,原来 k8s 官网没被拉黑啊,我一直都是翻墙访问的==", " 官网作用有限， 1.4 以后各个镜像都要搭梯子 pull 才是最痛苦的", " 我一直都是墙外 vps 拉,然后弄成 tar 包 scp 下载回来,无力吐槽==", " 我还见过用 dockerhub 构建的，可是就 dockerhub 那速度，也是各种醉", " v1.5.1 你可以使用 echo \"KUBE_REPO_PREFIX=registry.yourcompany.com\" >> /etc/profile", " 学习了，不过这得先维护个 registry 哦", "ustc 有镜像", " \r", "\r", "说的是 hub 的镜像，不是 k8s 的镜像哈"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>Go is TIOBE's programming language of 2016 <a href=\"http://tiobe.com/tiobe-index/\" rel=\"nofollow\">tiobe.com/tiobe-index/</a> #reddit</p>\n</div></div>"], "reply": "32", "tittle": "2016 年度语言出炉", "comment": ["作为一个新语言，相当不错了", "又年度了，这是 go 第二次年度语言了吧", "无论怎么样，前十肯定有 c c++ java js python php", " 已经不新啦  09 年 Go 就拿过一次年度语言啦", "我靠,现在整个 C 族都快比不过 java 一个了", " 语言成长时间长， 10 年以内的都很新。个人理解", " 世界上最好的语言都快跌出前十了。。。", " 瞎说什么大实话！", "不是说 go 只在中国程序员里比较火咩?\r", "难道是中国软件业在引领趋势?", "perl 居然这么坚挺啊。 还有汇编咋回事， 比最好语言还高，这尼玛 200%统计错了吧", "这一年里你们对 C 语言做了什么。。。。\r", "掉了 40%的份额", "V2 被黑语言榜冠军 Java 继续领衔流行趋势→_→", "php 跟 Delphi 一样的使用率了", " 并没有啊 你看下 github golang wiki 的 user 里面多数的还是 US", " 不是 php 吗， java 可比不过宇宙第一语言。", "V 站的评论里面，一般都会选择性的忽略 C#", "完蛋 拍黄片都快跌出前 10 了  java 依旧是老大  C 兄弟们依旧坚挺 看来编程行业也是斗智斗勇", " 是什么情况", "Java 还能火十年", ".net 厉害， go 加油", "语言历史越久，应用范围越广，根基就越牢固", "> The TIOBE Programming Community index is an indicator of the popularity of programming languages. The index is updated once a month. The ratings are based on the number of skilled engineers world-wide, courses and third party vendors. Popular search engines such as Google, Bing, Yahoo!, Wikipedia, Amazon, YouTube and Baidu are used to calculate the ratings. It is important to note that the TIOBE index is not about the best programming language or the language in which most lines of code have been written.\r", "\r", "大家要保持质疑的态度看这个数据，无疑的是在我这 **PHP 永远都是最好的语言！** **Long Live PHP!**", "我的 C", "为 Java 程序员而准备的 Go 指南\r", "\r", "我是坚守 C#", "php 怎么会沦落到和 Delphi 差不多的位置上去？ 不应该啊", "厉害了 Beta Go", "人家说口径粗说筛子，我看 tiobe 就一铁丝网\r", "\r", "看看 tiobe 是怎么定义流行度的\r", "\r", "基本就是拿一组关键字去搜索引擎搜，数搜索结果。。。\r", "1. 关键字一点都不准。只搜语言不搜代表框架，前端 js 直接进火葬场。世好语也直接火葬场。\r", "2. 地球最好搜索引擎 SO 没有权重 ?  太阳系最大同性交友平台 gayhub 没有权重 ? 黑人问号 ???\r", " \r", "\r", "VB Perl Dephi 这些语言基本都没人用还占那么高的位置也是醉了。", "search \"code\" in gayhub\r", "search \"programming\" in gayhub\r", "Tiobe 主要比的是一个语言在网上讨论的热度，相比之下新语言其实是更占便宜。 Java 和 C 这种通常用来入门的语言也会有很多新手讨论。总之并不能完全反映语言的流行和使用程度。", "是时候学 go 了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>譬如源是 114.114.114.114 ，就返回 11.11.11.11\n如果源是 115.115.115.115 ，就返回 22.22.22.22\n花生壳只能提供按运行商线路解析的功能 orz</p>\n</div></div>"], "reply": "4", "tittle": "哪个 DNS 服务提供商能按源 IP 返回 IP 的功能？", "comment": ["vxdns 有自定义区域。", "CloudXNS 免费版有一组自定义区域", "然而 114 之类 anycast 的 dns 源 ip 不会是这个的", "\r"]},
{"content": ["<div class=\"topic_content\">小程序很早出消息就让产品拿着公司的抬头去注册账号了，然后就一直比较忙，也就没放在心上(文档早就扫完了)，昨天凌晨刷着微信突然发现小程序～！\r<br>吓得我赶紧去微博上看看各位大牛的动态，还好是刚出的觉得松了口气。\r<br>但是昨天一天这个热度刷的，大家都懂的。领导当然就发话了，我们也要做一个小程序，虽然没要求立马出，但是也是尽快赶上这波潮流吧。苦逼的我没有设计，没有产品，凭着 hello world 般英语水平，只能帮领导写出个 hello wrold 了吧。\r<br>听说写出小程序就有年终奖了，我将信将疑的撸着代码。。。\r<br>ps:小程序 qq 交流群  189794847</div>"], "reply": "目前尚无回", "tittle": "别人家的小程序都上线了,我还在深夜撸着我的小程序代码！", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>没想到 0 点就发布了，建了个群，发新的小程序进去大家交流。\n后期主要讨论小程序的设计，开发，运营等。</p>\n<p><img alt=\"Paste_Image.png\" src=\"http://upload-images.jianshu.io/upload_images/424321-4347ea922108e93a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\">\n<img alt=\"Paste_Image.png\" src=\"http://upload-images.jianshu.io/upload_images/424321-3aa54c9747473854.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\">\n<img alt=\"Paste_Image.png\" src=\"http://upload-images.jianshu.io/upload_images/424321-71c3c5ac19734a92.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n</div></div>"], "reply": "19", "tittle": "建个群 讨论小程序的设计，开发，运营", "comment": ["你的微信是什么版本 \r", "为什么我的没小程序入口。。。", "大家共享下  看看现在有哪些小程序，我只有滴滴 跟 猫眼的", " 打开别人的分享，才有小程序的入口，这也是建群的目的", " 用过一个小程序之后就会有了，比如你在搜索框搜下『小程序示例』，进去之后随便点点，出来之后『发现』帧就有小程序入口啦（更像是你访问的小程序的历史记录）。", "小程序还要设计？", " ", " 可以直接在搜索栏搜索的", "需要打开任意一个小程序 然后就有了", "还是要邀请 。。。", "人满了，求拉。", " 不需要邀请了呀。你试试这个, 是关于书单的， ", "\r", "\r", "![]( ", ")", "加不进去啦呀", "人满的太快了...谁进了的留个微信号呗..", "人满的太快了...哪个帅哥进了的留个微信号呗..（星星眼✨）", "小程序设计 => 只能做微信爸爸让你做的\r", "小程序开发 => 只能用微信爸爸让你用的接口\r", "小程序运营 => 只能搞微信爸爸让你搞的事情\r", "\r", "友情提醒，被腾讯收购可以使用亲儿子接口", "拉一下呗   mazegod", "我们是孢子 ARVR 服务信息平台，创建了小程序群，主要讨论小程序和 arvr 的结合玩法。\r", "\r", "进群加微信 7707 61 627", "加我微信吧，我拉进来，群满了，系统不让扫码加入了\r", "\r", "\r", " \r", " \r", " \r", " \r", " 已加"]},
{"content": ["<div class=\"topic_content\">今天刚到的 type-s,发现打不了波浪号..你们有这种情况吗..</div>"], "reply": "11", "tittle": "hhkb type-s 怎么打不出来波浪号...", "comment": ["我记得是 shift+右上角？ 英文输入法下", " ± 打出来这货..", "shift+右上角\r", "会不会是键位设置问题？", " 后面 dip 是 011001,没使用别的方法修改过键位..就是很奇怪的感觉", "我的是 011000", " 我的是 011000 还特地确认了一下😂", "有可能 键盘没识别正常, 插其他电脑看看", " 最后一个是唤醒电脑的..", " 那可以把这个键盘删除,然后重新识别吗?", " 确实是没正确识别.在设置--> 键盘里重新识别了一下 ok 了.\r", "\r", "同时感谢大家 [笑脸]", "Mac ？右 Cmd + shift + ~"]},
{"content": ["<div class=\"topic_content\">没想到 0 点就发布了，建了个群，发新的小程序进去大家交流。\r<br>后期主要讨论小程序的设计，开发，运营等。\r<br>\r<br><img src=\"http://ww1.sinaimg.cn/large/0060lm7Tgw1fbjpsx8imzj30mi140wfn.jpg\" class=\"embedded_image\"> \r<br>入口\r<br>\r<br><img src=\"http://ww1.sinaimg.cn/large/0060lm7Tgw1fbjpsxcf4nj30mi140ta4.jpg\" class=\"embedded_image\"> \r<br>\r<br><img src=\"http://ww3.sinaimg.cn/large/0060lm7Tgw1fbjpswph1ej30mi140q4c.jpg\" class=\"embedded_image\"> \r<br>\r<br><img src=\"http://ww4.sinaimg.cn/large/0060lm7Tgw1fbjpsxgeoij30kw0r2taj.jpg\" class=\"embedded_image\"> </div>", "<div class=\"topic_content\">群已满 100 人，不好意思，我私人账号一般不加人，各位求拉的抱歉了。\r<br>有已经在群里的朋友，想帮忙的话可以代拉一下。</div>"], "reply": "100", "tittle": "微信小程序发布了，建了个群", "comment": ["难道要更新微信才行？\r", "可是没发现 app store 有更新啊\r", "没找到小程序", " 需要打开一个小程序后，才可以在 **发现**  看到入口", " 得先有人分享一下才行 哈哈哈", " 直接搜索一些公众账号，例如 毒舌电影社区 就会看到关联的小程序 入口就会出现了", "安卓体验超烂啊，经常点开小程序微信就失去响应了\r", "是个例么……", " 安卓 OK", "要验证…………", "小程序就是垄断魔抓下的畸形产物！", "需要邀请才能进群了哈。。。", "需验证", "需要邀请进群了。。。。", "求邀请，微信 chl_630", "这群还要邀请进群发二维码出来有什么用？", "求邀请  lorangex", "需要邀请了耶，那位拉拉俺，俺想问问，怎么取消小程序置顶的问题😂", "需要邀请 guofang888", "楼主  只能邀请入群", "需要邀请，发个二维码有卵用", "求邀请 Levi_Zhang", "邀请  kforeverrun", "群主已开启群验证，套路深", "群主已开启群验证，套路深", "少一些套路,多一些真诚", "怎么变成邀请才能进，还有这样套路", "给 lz 发个红包？", "邀请进，套路深，无形广", "进群要验证……", "需要邀请啊", "需要邀请啊！", "进群要验证，有点深奥。。", "什么群啊，还需要邀请？就小程序这么难用，我都懒得用", "Panchoxiang  求邀请", "邀请啊", "灰度发布的，不在名单里", "借用宝地打个小广告：微知小程序之家也重装上阵了，欢迎来瞅瞅： ", "需要邀请？", "ourDearPeter 求邀请:)", "furywarrior pls invite, thx", "求邀请 zx19940525", "名称完整且正确的话，直接就能搜到小程序。", "不知道哪里好玩了", "求邀请 lovekcity", "yeziahehe 求邀请", "微信小程序搜索不是模糊搜索的吗？", "niujhuang 求邀请", "zqpmaster 求邀请~", "anshengme 求邀", "求邀请  li10055", "F_Diav 求邀请", "bldxh1 求邀请", "小程序如果没有分发，没有入口的话，基本上只解决了，两（多）个人（非朋友）需要使用微信完成某些事情的场景。\r", "即：用完即走，无需安装 /下载！", "hzhydyy 求邀请啊", "喷了，这套路", "bytwo731270777 求邀请", "xu509324 求邀请", "ahajmy 求邀请", "hadwinzheng", "hadwinzheng 求邀请", "wbing-xu  求邀请", " ", " ", " ", " ", " \r", " \r", " \r", " \r", " \r", " \r", " \r", " \r", "\r", " \r", "求邀请 yyrjorg", "dabenAllen 求邀请", "igeeker  来个邀请。。。", "话说小程序怎么开发啊  个人订阅号不给微信认证  而小程序又需要微信认证。复杂的一笔", "来一个 pubby-rcp", "求邀请 chemandy", "楼上一堆求邀请的是傻还是拖？", " 你没动动手指，扫描一下 LZ 的二维码就说话是傻还是喷呢？", "求邀请 ZJSJKND", "求邀请 brandon2he", " 提高门槛....好像没啥错吧...", "求邀请 微信号： 178789751", "好用的小程序还没几个呢，你们建了快一万多个群了", "求邀请， yeluohanshan .谢~", "求邀请 lianniannancy", "yazhuanfei001 求邀请", "求邀请 Alexander_bing", "求邀请 Alexander_Bing", "求邀请 oceanus", "liangyuxing\r", "求邀", "LokiSharp  求邀请", "  \r", " \r", " \r", " \r", " \r", " \r", " \r", " \r", " \r", " \r", " \r", " \r", " \r", " \r", " \r", "拉一下呗  mazegod", "求拉 zww_veev", "我们是孢子 ARVR 服务信息平台，创建了小程序群，主要讨论小程序和 arvr 的结合玩法。 \r", "\r", "进群加微信 7707 61 627", "拉一个\r", "wxsongtianyi", "  只要是不要钱的，干啥都是无脑一窝蜂，你慢慢就习惯了。", "求拉一下： huangjunsheng0716", "求邀请 twocode", "rwecho@求邀请", "求邀请 PonyYC", "求邀请", "这么多微信号，不 base64 下吗", " 应该是😂😂😂"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>明天要上线~</p>\n</div></div>"], "reply": "14", "tittle": "有几人跟我一样按领导要求熬夜赶小程序", "comment": [" 更新了，只能帮你到这儿了", "出来了发 v 里让大家玩下", " 有 sublime 的吗?", "刚看了一个多小时慕课小程序的视频，睡觉，明天继续学。", "_(: 」∠)_ 你覺得會有人用嗎", "自从 H5 成为 PM 行话以来，小程序称为 PM 行话的日子即将到来", "我对面的哥们也是今天赶小程序，明天上线，其实都没有计划，就为占个坑", "+1", " 貌似有，不是我做的", "一键生成，已上线体验版", " 想问下如何一键生成", " 赞", "+1", "没想到还有这个。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近给<a href=\"http://xmake.io/cn\" rel=\"nofollow\">xmake</a>增加了一个新特性，对于一份工程源码，可以不用编写 makefile ，也不用编写各种 make 相关的工程描述文件（例如： xmake.lua ， <a href=\"http://makefile.am\" rel=\"nofollow\">makefile.am</a>, cmakelist.txt 等）</p>\n<p>xmake 就可以直接编译他们，这是如何做到的呢，简单来说下实现原理：</p>\n<ol>\n<li>首先扫描当前目录下， xmake 所以支持的所有源代码文件</li>\n<li>分析代码，检测哪些代码拥有 main 入口函数</li>\n<li>所有没有 main 入口的代码编译成静态库</li>\n<li>带有 main 入口的代码，编译成可执行程序，同时链接其他静态库程序</li>\n</ol>\n<p>这种代码扫描和智能编译，非常简单，目前 xmake 还不支持多级目录扫描，只对单级目录的代码进行扫描编译。。</p>\n<h4>开源代码的移植和编译</h4>\n<p>虽然这种方式，并不是非常智能，限制也不少，但是对于想临时写些代码进行编译运行，或者临时想交叉编译一些简单的开源库代码</p>\n<p>这种方式已经足够使用了，下面看下一个实际的例子：</p>\n<p>我下载了一份 zlib-1.2.10 的源码，想要编译它，只需要进入 zlib 的源码目录执行：</p>\n<pre><code>$ cd zlib-1.2.10\n$ xmake\n</code></pre>\n<p>就行了，输出结果如下：</p>\n<pre><code>xmake.lua not found, scanning files ..\ntarget(zlib-1.2): static\n    [+]: ./adler32.c\n    [+]: ./compress.c\n    [+]: ./crc32.c\n    [+]: ./deflate.c\n    [+]: ./gzclose.c\n    [+]: ./gzlib.c\n    [+]: ./gzread.c\n    [+]: ./gzwrite.c\n    [+]: ./infback.c\n    [+]: ./inffast.c\n    [+]: ./inflate.c\n    [+]: ./inftrees.c\n    [+]: ./trees.c\n    [+]: ./uncompr.c\n    [+]: ./zutil.c\nxmake.lua generated, scan ok!👌\nchecking for the architecture ... x86_64\nchecking for the Xcode SDK version for macosx ... 10.12\nchecking for the target minimal version ... 10.12\nchecking for the c compiler (cc) ... xcrun -sdk macosx clang\nchecking for the c++ compiler (cxx) ... xcrun -sdk macosx clang\nchecking for the objc compiler (mm) ... xcrun -sdk macosx clang\nchecking for the objc++ compiler (mxx) ... xcrun -sdk macosx clang++\nchecking for the swift compiler (sc) ... xcrun -sdk macosx swiftc\nchecking for the assember (as) ... xcrun -sdk macosx clang\nchecking for the linker (ld) ... xcrun -sdk macosx clang++\nchecking for the static library archiver (ar) ... xcrun -sdk macosx ar\nchecking for the static library extractor (ex) ... xcrun -sdk macosx ar\nchecking for the shared library linker (sh) ... xcrun -sdk macosx clang++\nchecking for the debugger (dd) ... xcrun -sdk macosx lldb\nchecking for the golang compiler (go) ... go\nconfigure\n{\n    ex = \"xcrun -sdk macosx ar\"\n,   sh = \"xcrun -sdk macosx clang++\"\n,   host = \"macosx\"\n,   ar = \"xcrun -sdk macosx ar\"\n,   buildir = \"build\"\n,   as = \"xcrun -sdk macosx clang\"\n,   plat = \"macosx\"\n,   xcode_dir = \"/Applications/Xcode.app\"\n,   arch = \"x86_64\"\n,   mxx = \"xcrun -sdk macosx clang++\"\n,   go = \"go\"\n,   target_minver = \"10.12\"\n,   ccache = \"ccache\"\n,   mode = \"release\"\n,   clean = true\n,   cxx = \"xcrun -sdk macosx clang\"\n,   cc = \"xcrun -sdk macosx clang\"\n,   dd = \"xcrun -sdk macosx lldb\"\n,   kind = \"static\"\n,   ld = \"xcrun -sdk macosx clang++\"\n,   xcode_sdkver = \"10.12\"\n,   sc = \"xcrun -sdk macosx swiftc\"\n,   mm = \"xcrun -sdk macosx clang\"\n}\nconfigure ok!\nclean ok!\n[00%]: ccache compiling.release ./adler32.c\n[06%]: ccache compiling.release ./compress.c\n[13%]: ccache compiling.release ./crc32.c\n[20%]: ccache compiling.release ./deflate.c\n[26%]: ccache compiling.release ./gzclose.c\n[33%]: ccache compiling.release ./gzlib.c\n[40%]: ccache compiling.release ./gzread.c\n[46%]: ccache compiling.release ./gzwrite.c\n[53%]: ccache compiling.release ./infback.c\n[60%]: ccache compiling.release ./inffast.c\n[66%]: ccache compiling.release ./inflate.c\n[73%]: ccache compiling.release ./inftrees.c\n[80%]: ccache compiling.release ./trees.c\n[86%]: ccache compiling.release ./uncompr.c\n[93%]: ccache compiling.release ./zutil.c\n[100%]: archiving.release libzlib-1.2.a\nbuild ok!👌\n</code></pre>\n<p>通过输出结果，可以看到， xmake 会去检测扫描当前目录下的所有.c 代码，发现没有 main 入口，应该是静态库程序，因此执行 xmake 后，就直接编译成静态库 libzlib-1.2.a 了</p>\n<p>连 xmake.lua 都没有编写，其实 xmake 在扫描完成后，会去自动在当前目录下生成一份 xmake.lua ，下次编译就不需要重新扫描检测了。</p>\n<p>自动生成的 xmake.lua 内容如下：</p>\n<pre><code>-- define target\ntarget(\"zlib-1.2\")\n\n    -- set kind\n    set_kind(\"static\")\n\n    -- add files\n    add_files(\"./adler32.c\")\n    add_files(\"./compress.c\")\n    add_files(\"./crc32.c\")\n    add_files(\"./deflate.c\")\n    add_files(\"./gzclose.c\")\n    add_files(\"./gzlib.c\")\n    add_files(\"./gzread.c\")\n    add_files(\"./gzwrite.c\")\n    add_files(\"./infback.c\")\n    add_files(\"./inffast.c\")\n    add_files(\"./inflate.c\")\n    add_files(\"./inftrees.c\")\n    add_files(\"./trees.c\")\n    add_files(\"./uncompr.c\")\n    add_files(\"./zutil.c\")\n</code></pre>\n<p>也许你会说，像这种开源库，直接<code>configure; make</code>不就好了吗，他们自己也有提供 makefile 来直接编译的，的确是这样，我这里只是举个例子而已。。</p>\n<p>当然，很多开源库在交叉编译的时候，通过自带的<code>configure</code>，处理起来还是很繁琐的，用 xmake 进行交叉编译会更方便些。。</p>\n<h4>即时地代码编写和编译运行</h4>\n<p>xmake 的这个扫描代码编译特性，主要的目的：还是为了让我们在临时想写些测试代码的时候，不用考虑太多东西，直接上手敲代码，然后快速执行<code>xmake run</code> 来调试验证结果。。</p>\n<p>例如：</p>\n<p>我想写了个简单的 main.c 的测试程序，打印<code>hello world!</code>，如果要写 makefile 或者直接通过 gcc 命令来，就很繁琐了，你需要：</p>\n<pre><code>gcc ./main.c -o demo\n./demo\n</code></pre>\n<p>最快速的方式，也需要执行两行命令，而如果用 xmake ，只需要执行：</p>\n<pre><code>xmake run\n</code></pre>\n<p>就行了，它会自动检测到代码后，自动生成对应的 xmake.lua ，自动编译，自动运行，然后输出：</p>\n<pre><code>hello world!\n</code></pre>\n<p>如果你有十几个代码文件，用手敲 gcc 的方式，或者写 makefile 的方式，这个差距就更明显了，用 xmake 还是只需要一行命令：</p>\n<pre><code>xmake run\n</code></pre>\n<h4>多语言支持</h4>\n<p>这种代码检测和即时编译，是支持多语言的，不仅支持 c/c++，还支持 objc/swift ，后期还会支持 golang （正在开发中）</p>\n<p>例如我下载了一份 fmdb 的 ios 开源框架代码：</p>\n<pre><code>.\n├── FMDB.h\n├── FMDatabase.h\n├── FMDatabase.m\n├── FMDatabaseAdditions.h\n├── FMDatabaseAdditions.m\n├── FMDatabasePool.h\n├── FMDatabasePool.m\n├── FMDatabaseQueue.h\n├── FMDatabaseQueue.m\n├── FMResultSet.h\n└── FMResultSet.m\n</code></pre>\n<p>想要把它编译成 ios 的静态库，但是又不想写 xmake.lua ，或者 makefile ，那么只需要使用 xmake 的这个新特性，直接执行：</p>\n<pre><code>$ xmake f -p iphoneos; xmake\n</code></pre>\n<p>就行了，输出结果如下：</p>\n<pre><code>xmake.lua not found, scanning files ..\ntarget(FMDB): static\n    [+]: ./FMDatabase.m\n    [+]: ./FMDatabaseAdditions.m\n    [+]: ./FMDatabasePool.m\n    [+]: ./FMDatabaseQueue.m\n    [+]: ./FMResultSet.m\nxmake.lua generated, scan ok!👌\nchecking for the architecture ... armv7\nchecking for the Xcode SDK version for iphoneos ... 10.1\nchecking for the target minimal version ... 10.1\nchecking for the c compiler (cc) ... xcrun -sdk iphoneos clang\nchecking for the c++ compiler (cxx) ... xcrun -sdk iphoneos clang\nchecking for the objc compiler (mm) ... xcrun -sdk iphoneos clang\nchecking for the objc++ compiler (mxx) ... xcrun -sdk iphoneos clang++\nchecking for the assember (as) ... gas-preprocessor.pl xcrun -sdk iphoneos clang\nchecking for the linker (ld) ... xcrun -sdk iphoneos clang++\nchecking for the static library archiver (ar) ... xcrun -sdk iphoneos ar\nchecking for the static library extractor (ex) ... xcrun -sdk iphoneos ar\nchecking for the shared library linker (sh) ... xcrun -sdk iphoneos clang++\nchecking for the swift compiler (sc) ... xcrun -sdk iphoneos swiftc\nconfigure\n{\n    ex = \"xcrun -sdk iphoneos ar\"\n,   ccache = \"ccache\"\n,   host = \"macosx\"\n,   ar = \"xcrun -sdk iphoneos ar\"\n,   buildir = \"build\"\n,   as = \"/usr/local/share/xmake/tools/utils/gas-preprocessor.pl xcrun -sdk iphoneos clang\"\n,   arch = \"armv7\"\n,   mxx = \"xcrun -sdk iphoneos clang++\"\n,   cxx = \"xcrun -sdk iphoneos clang\"\n,   target_minver = \"10.1\"\n,   xcode_dir = \"/Applications/Xcode.app\"\n,   clean = true\n,   sh = \"xcrun -sdk iphoneos clang++\"\n,   cc = \"xcrun -sdk iphoneos clang\"\n,   ld = \"xcrun -sdk iphoneos clang++\"\n,   mode = \"release\"\n,   kind = \"static\"\n,   plat = \"iphoneos\"\n,   xcode_sdkver = \"10.1\"\n,   sc = \"xcrun -sdk iphoneos swiftc\"\n,   mm = \"xcrun -sdk iphoneos clang\"\n}\nconfigure ok!\nclean ok!\n[00%]: ccache compiling.release ./FMDatabase.m\n[20%]: ccache compiling.release ./FMDatabaseAdditions.m\n[40%]: ccache compiling.release ./FMDatabasePool.m\n[60%]: ccache compiling.release ./FMDatabaseQueue.m\n[80%]: ccache compiling.release ./FMResultSet.m\n[100%]: archiving.release libFMDB.a\nbuild ok!👌\n</code></pre>\n<h4>同时编译多个可执行文件</h4>\n<p>输出结果的开头部分，就是对代码的分析结果，虽然目前只支持单级目录结构的代码扫描，但是还是可以同时支持检测和编译多个可执行文件的</p>\n<p>我们以 libjpeg 的开源库为例：</p>\n<p>我们进入 jpeg-6b 目录后，执行：</p>\n<pre><code>$ xmake\n</code></pre>\n<p>输出如下：</p>\n<pre><code>xmake.lua not found, scanning files ..\ntarget(jpeg-6b): static\n    [+]: ./cdjpeg.c\n    [+]: ./example.c\n    [+]: ./jcapimin.c\n    [+]: ./jcapistd.c\n    [+]: ./jccoefct.c\n    [+]: ./jccolor.c\n    [+]: ./jcdctmgr.c\n    [+]: ./jchuff.c\n    [+]: ./jcinit.c\n    [+]: ./jcmainct.c\n    [+]: ./jcmarker.c\n    [+]: ./jcmaster.c\n    [+]: ./jcomapi.c\n    [+]: ./jcparam.c\n    [+]: ./jcphuff.c\n    [+]: ./jcprepct.c\n    [+]: ./jcsample.c\n    [+]: ./jctrans.c\n    [+]: ./jdapimin.c\n    [+]: ./jdapistd.c\n    [+]: ./jdatadst.c\n    [+]: ./jdatasrc.c\n    [+]: ./jdcoefct.c\n    [+]: ./jdcolor.c\n    [+]: ./jddctmgr.c\n    [+]: ./jdhuff.c\n    [+]: ./jdinput.c\n    [+]: ./jdmainct.c\n    [+]: ./jdmarker.c\n    [+]: ./jdmaster.c\n    [+]: ./jdmerge.c\n    [+]: ./jdphuff.c\n    [+]: ./jdpostct.c\n    [+]: ./jdsample.c\n    [+]: ./jdtrans.c\n    [+]: ./jerror.c\n    [+]: ./jfdctflt.c\n    [+]: ./jfdctfst.c\n    [+]: ./jfdctint.c\n    [+]: ./jidctflt.c\n    [+]: ./jidctfst.c\n    [+]: ./jidctint.c\n    [+]: ./jidctred.c\n    [+]: ./jmemansi.c\n    [+]: ./jmemmgr.c\n    [+]: ./jmemname.c\n    [+]: ./jmemnobs.c\n    [+]: ./jquant1.c\n    [+]: ./jquant2.c\n    [+]: ./jutils.c\n    [+]: ./rdbmp.c\n    [+]: ./rdcolmap.c\n    [+]: ./rdgif.c\n    [+]: ./rdppm.c\n    [+]: ./rdrle.c\n    [+]: ./rdswitch.c\n    [+]: ./rdtarga.c\n    [+]: ./transupp.c\n    [+]: ./wrbmp.c\n    [+]: ./wrgif.c\n    [+]: ./wrppm.c\n    [+]: ./wrrle.c\n    [+]: ./wrtarga.c\ntarget(ansi2knr): binary\n    [+]: ./ansi2knr.c\ntarget(cjpeg): binary\n    [+]: ./cjpeg.c\ntarget(ckconfig): binary\n    [+]: ./ckconfig.c\ntarget(djpeg): binary\n    [+]: ./djpeg.c\ntarget(jpegtran): binary\n    [+]: ./jpegtran.c\ntarget(rdjpgcom): binary\n    [+]: ./rdjpgcom.c\ntarget(wrjpgcom): binary\n    [+]: ./wrjpgcom.c\nxmake.lua generated, scan ok!👌\nchecking for the architecture ... x86_64\nchecking for the Xcode SDK version for macosx ... 10.12\nchecking for the target minimal version ... 10.12\nchecking for the c compiler (cc) ... xcrun -sdk macosx clang\nchecking for the c++ compiler (cxx) ... xcrun -sdk macosx clang\nchecking for the objc compiler (mm) ... xcrun -sdk macosx clang\nchecking for the objc++ compiler (mxx) ... xcrun -sdk macosx clang++\nchecking for the swift compiler (sc) ... xcrun -sdk macosx swiftc\nchecking for the assember (as) ... xcrun -sdk macosx clang\nchecking for the linker (ld) ... xcrun -sdk macosx clang++\nchecking for the static library archiver (ar) ... xcrun -sdk macosx ar\nchecking for the static library extractor (ex) ... xcrun -sdk macosx ar\nchecking for the shared library linker (sh) ... xcrun -sdk macosx clang++\nchecking for the debugger (dd) ... xcrun -sdk macosx lldb\nchecking for the golang compiler (go) ... go\nconfigure\n{\n    ex = \"xcrun -sdk macosx ar\"\n,   sh = \"xcrun -sdk macosx clang++\"\n,   host = \"macosx\"\n,   ar = \"xcrun -sdk macosx ar\"\n,   buildir = \"build\"\n,   as = \"xcrun -sdk macosx clang\"\n,   plat = \"macosx\"\n,   xcode_dir = \"/Applications/Xcode.app\"\n,   arch = \"x86_64\"\n,   mxx = \"xcrun -sdk macosx clang++\"\n,   go = \"go\"\n,   target_minver = \"10.12\"\n,   ccache = \"ccache\"\n,   mode = \"release\"\n,   clean = true\n,   cxx = \"xcrun -sdk macosx clang\"\n,   cc = \"xcrun -sdk macosx clang\"\n,   dd = \"xcrun -sdk macosx lldb\"\n,   kind = \"static\"\n,   ld = \"xcrun -sdk macosx clang++\"\n,   xcode_sdkver = \"10.12\"\n,   sc = \"xcrun -sdk macosx swiftc\"\n,   mm = \"xcrun -sdk macosx clang\"\n}\nconfigure ok!\nclean ok!\n[00%]: ccache compiling.release ./cdjpeg.c\n[00%]: ccache compiling.release ./example.c\n[00%]: ccache compiling.release ./jcapimin.c\n[00%]: ccache compiling.release ./jcapistd.c\n[00%]: ccache compiling.release ./jccoefct.c\n[00%]: ccache compiling.release ./jccolor.c\n[01%]: ccache compiling.release ./jcdctmgr.c\n[01%]: ccache compiling.release ./jchuff.c\n[01%]: ccache compiling.release ./jcinit.c\n[01%]: ccache compiling.release ./jcmainct.c\n[01%]: ccache compiling.release ./jcmarker.c\n[02%]: ccache compiling.release ./jcmaster.c\n[02%]: ccache compiling.release ./jcomapi.c\n[02%]: ccache compiling.release ./jcparam.c\n[02%]: ccache compiling.release ./jcphuff.c\n[02%]: ccache compiling.release ./jcprepct.c\n[03%]: ccache compiling.release ./jcsample.c\n[03%]: ccache compiling.release ./jctrans.c\n[03%]: ccache compiling.release ./jdapimin.c\n[03%]: ccache compiling.release ./jdapistd.c\n[03%]: ccache compiling.release ./jdatadst.c\n[04%]: ccache compiling.release ./jdatasrc.c\n[04%]: ccache compiling.release ./jdcoefct.c\n[04%]: ccache compiling.release ./jdcolor.c\n[04%]: ccache compiling.release ./jddctmgr.c\n[04%]: ccache compiling.release ./jdhuff.c\n[05%]: ccache compiling.release ./jdinput.c\n[05%]: ccache compiling.release ./jdmainct.c\n[05%]: ccache compiling.release ./jdmarker.c\n[05%]: ccache compiling.release ./jdmaster.c\n[05%]: ccache compiling.release ./jdmerge.c\n[06%]: ccache compiling.release ./jdphuff.c\n[06%]: ccache compiling.release ./jdpostct.c\n[06%]: ccache compiling.release ./jdsample.c\n[06%]: ccache compiling.release ./jdtrans.c\n[06%]: ccache compiling.release ./jerror.c\n[07%]: ccache compiling.release ./jfdctflt.c\n[07%]: ccache compiling.release ./jfdctfst.c\n[07%]: ccache compiling.release ./jfdctint.c\n[07%]: ccache compiling.release ./jidctflt.c\n[07%]: ccache compiling.release ./jidctfst.c\n[08%]: ccache compiling.release ./jidctint.c\n[08%]: ccache compiling.release ./jidctred.c\n[08%]: ccache compiling.release ./jmemansi.c\n[08%]: ccache compiling.release ./jmemmgr.c\n[08%]: ccache compiling.release ./jmemname.c\n[09%]: ccache compiling.release ./jmemnobs.c\n[09%]: ccache compiling.release ./jquant1.c\n[09%]: ccache compiling.release ./jquant2.c\n[09%]: ccache compiling.release ./jutils.c\n[09%]: ccache compiling.release ./rdbmp.c\n[10%]: ccache compiling.release ./rdcolmap.c\n[10%]: ccache compiling.release ./rdgif.c\n[10%]: ccache compiling.release ./rdppm.c\n[10%]: ccache compiling.release ./rdrle.c\n[10%]: ccache compiling.release ./rdswitch.c\n[11%]: ccache compiling.release ./rdtarga.c\n[11%]: ccache compiling.release ./transupp.c\n[11%]: ccache compiling.release ./wrbmp.c\n[11%]: ccache compiling.release ./wrgif.c\n[11%]: ccache compiling.release ./wrppm.c\n[12%]: ccache compiling.release ./wrrle.c\n[12%]: ccache compiling.release ./wrtarga.c\n[12%]: archiving.release libjpeg-6b.a\n[12%]: ccache compiling.release ./wrjpgcom.c\n[25%]: linking.release wrjpgcom\n[25%]: ccache compiling.release ./ansi2knr.c\n[37%]: linking.release ansi2knr\n[37%]: ccache compiling.release ./jpegtran.c\n[50%]: linking.release jpegtran\n[50%]: ccache compiling.release ./djpeg.c\n[62%]: linking.release djpeg\n[62%]: ccache compiling.release ./ckconfig.c\n[75%]: linking.release ckconfig\n[75%]: ccache compiling.release ./rdjpgcom.c\n[87%]: linking.release rdjpgcom\n[87%]: ccache compiling.release ./cjpeg.c\n[100%]: linking.release cjpeg\nbuild ok!👌\n</code></pre>\n<p>可以看到，处理静态库， xmake 还分析出了很多可执行的测试程序，剩下的代码统一编译成一个 libjpeg.a 的静态库，供哪些测试程序链接使用。。</p>\n<pre><code>target(ansi2knr): binary\n    [+]: ./ansi2knr.c\ntarget(cjpeg): binary\n    [+]: ./cjpeg.c\ntarget(ckconfig): binary\n    [+]: ./ckconfig.c\ntarget(djpeg): binary\n    [+]: ./djpeg.c\ntarget(jpegtran): binary\n    [+]: ./jpegtran.c\ntarget(rdjpgcom): binary\n    [+]: ./rdjpgcom.c\ntarget(wrjpgcom): binary\n    [+]: ./wrjpgcom.c\n</code></pre>\n<h4>遇到的一些问题和限制</h4>\n<p>当前 xmake 的这种自动分析检测还不是非常智能，对于：</p>\n<ol>\n<li>需要特殊的编译选项</li>\n<li>需要依赖其他目录的头文件搜索</li>\n<li>需要分条件编译不同源文件</li>\n<li>同目录需要生成多个静态库</li>\n<li>需要多级目录支持的源码库</li>\n</ol>\n<p>以上这些情况， xmake 暂时还没发自动化的智能处理，其中限制 1 ， 2 还是可以解决的，通过半手动的方式，例如：</p>\n<pre><code>$ xmake f --cxflags=\"\" --ldflags=\"\" --includedirs=\"\" --linkdirs=\"\"; xmake\n</code></pre>\n<p>在自动检测编译的时候，手动配置这个源码工程需要的特殊编译选项，就可以直接通过编译了</p>\n<p>而限制 3 ，暂时只能通过删源代码来解决了，就像刚才编译 jpeg 的代码，其实它的目录下面同时存在了：</p>\n<pre><code>jmemdos.c\njmemmac.c\njmemansi.c\n</code></pre>\n<p>其中两个是没法编译过的，需要删掉后才行。。</p>\n<hr>\n<p>个人主页：<a href=\"http://www.tboox.org/cn\" rel=\"nofollow\">TBOOX 开源工程</a>\n原文出处：<a href=\"http://tboox.org/cn/2017/01/07/build-without-makefile/\" rel=\"nofollow\">http://tboox.org/cn/2017/01/07/build-without-makefile/</a></p>\n</div></div>"], "reply": "17", "tittle": "无需手写任何 make 文件，智能扫描代码进行自动编译", "comment": ["> 最快速的方式，也需要执行两行命令\r", "\r", "并不需要。你写一个 main.c 直接输入 make main 就出来可执行文件了", " 这样确实也可以。赞一个。", " 但是我说的是加上运行：\r", "\r", "gcc ./main.c -o demo\r", "./demo\r", "\r", "改成:\r", "\r", "make main\r", "./main \r", "\r", "还是需要两条命令，用; 合并后为： make main; ./main 这是最简的了。。\r", "\r", "如果用 xmake ，只需要执行：\r", "\r", "xmake run\r", "\r", "或者其缩写： xmake r 就行了", "赞，我也想做一个这个。关键是选择哪些文件被用到了。选最小集合。这个比较麻烦", " 这个确实很难完美处理 所以我现在只处理单级目录。仅用于一些小模块的快速编译。。 里面的源代码都作为可编译对象 。。里面通过检测 main 入口 来支持多 target 。。多级目录就复杂了 复杂工程 我暂时还是通过写 xmake.lua 文件来维护", "要是能识别常见构建系统的配置文件并转换就更好了。。。这样，所有软件都可以统一了", " 这个我以后也会考虑做进去 不过最近还是重点", ">> 用 xmake 进行交叉编译会更方便些\r", "怎么个方便法？有参数可以指定不同版本的编译环境么？", " 可以参考下这篇文档： ", "\r", "\r", "对于交叉 toolchains ，会自动检测工具链结构，通常情况下，只需要只需要指定整个 toolchains 的 rootdir ：\r", "\r", "xmake f -p linux --sdk=/home/toolchains_sdkdir\r", "\r", "就行了， xmake 会去自动探测 toolchains 的结构，找到编译器，以及自动检测 arm-linux- 等前缀。。然后直接编译。。\r", "\r", "只有很少情况下，才需要额外参数设置。。大部分情况下，所有都是自动检测的。。", "如果只是为了偷懒，用 1 楼那种就很好了。如果想稍微工程化一点，用 qt 的 qmake 也是极好的。\r", "基本步骤是， 1 ）写好你的源码； 2 ）用 qmake 分析你的源码，生成 .pro 文件； 3 ）生成 Makefile 文件； 4 ） make 。而且还支持多层目录啊……\r", "\r", "\r", "```\r", "# 来看看 qmake 有多方便\r", "$ pwd\r", "/tmp/tmp\r", "\r", "# 随手写了一个 main 文件，一个 header 文件：\r", "$ ls\r", "main.cpp header.h\r", "$ cat main.cpp\r", "#include <iostream>\r", "#include \"header.h\"\r", "\r", "int main() {\r", "    echo();\r", "}\r", "$ cat header.h\r", "int echo() {\r", "    std::cout << \"Echo is here\\n\";\r", "}\r", "\r", "# 先用 qmake 生成 qt 的 pro 工程文件\r", "$ qmake -project\r", "# 再用 qmake 生成 Makefile 工程文件\r", "$ qmake\r", "\r", "# 文件夹下：\r", "$ ls  \r", "header.h  main.cpp  Makefile  tmn p.pro\r", "\r", "# 编译\r", "➜  tmp make\r", "g++ -c -pipe -O2 -std=gnu++11 -Wall -W -D_REENTRANT -fPIC -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -I. -I. -I/opt/Qt5.7.1/5.7/gcc_64/include -I/opt/Qt5.7.1/5.7/gcc_64/include/QtGui -I/opt/Qt5.7.1/5.7/gcc_64/include/QtCore -I. -I/opt/Qt5.7.1/5.7/gcc_64/mkspecs/linux-g++ -o main.o main.cpp\r", "In file included from main.cpp:2:0:\r", "header.h: In function ‘ int echo()’:\r", "header.h:3:1: warning: no return statement in function returning non-void [-Wreturn-type]\r", " }\r", " ^\r", "g++ -Wl,-O1 -Wl,-rpath,/opt/Qt5.7.1/5.7/gcc_64/lib -o tmp main.o   -L/opt/Qt5.7.1/5.7/gcc_64/lib -lQt5Gui -L/usr/lib64 -lQt5Core -lGL -lpthread \r", "\r", "# 运行\r", "➜  tmp ./tmp \r", "Echo is here\r", "```", " xmake 这个特性既可以给偷懒的人用，并且它会自动生成 xmake.lua 。。\r", "\r", "你也可以进一步对其工程化处理， xmake.lua 完全支持复杂工程维护的，也支持多级目录。。\r", "\r", "并且完全不依赖 make ，不需要生成 makefile ，当然也提供了插件，来生成： makefile ， vsproj 等第三方工程文件。。", "而且 xmake 提供了各种工程默认，不需要手动创建 main.c ，只需要执行：\r", "\r", "xmake create -P ./test \r", "\r", "就可以创建一个简单的 console 工程，可以直接编译运行：\r", "\r", "xmake run\r", "\r", "各种 static/console/shared 工程，以及 c/c++/objc/swift 工程模板，都有提供（ golang 的工程创建以及编译也在支持中。。）", "编译工程也不需要，额外的 像 qmake 那样，还要执行命令去生成 pro 工程文件，一般情况，只需要执行：\r", "\r", "xmake\r", "\r", "就可以直接编译，完全不依赖 makefile 和 make 工具。。\r", "\r", "第三方 IDE 的工程文件生成，通过插件方式提示，只有在你需要生成 vsproj, makefile 的情况下（例如需要打开 vs 进行代码编辑），你再去生成就行了，通常情况下，只需要直接一键快速编译。。\r", "\r", "并且直接编译的效率，也是优化过的，自动多任务编译。。", "并且同时支持： ios, android, windows, linux ， mingw, 交叉编译等各种编译平台和模式\r", "\r", "之间只需要在配置的时候，快速换平台就行：\r", "\r", "xmake -p android \r", "xmake -p iphoneos\r", "xmake -p watchos\r", "xmake -p linux\r", "xmake -p windows\r", "xmake -p mingw\r", "\r", "只要代码跨平台，编译切平台、切 arch 都非常方便", " 点赞！", "支持支持，目前在用。", " 嗯嗯 感谢支持。。"]},
{"content": ["<div class=\"topic_content\">Parse 是不是要停止服务啊？ 然后找了 Firebase \\ apigee 国内好像都访问不了啊\r<br>\r<br>求 V 友推荐国内有没有类似 Parse 的免费服务</div>"], "reply": "7", "tittle": "求推荐，国内有什么类似 Parse 这样的后端支持平台", "comment": ["leancloud?", " 嗯，这个好像可以，还免费", "这是广告贴么。。。", "既然楼上都说了 我也就不矫情了\r", "\r", "\r", "有无 lean 云的 V 友,快来給我结帐啊\r", "\r", "\r", "其他平台的朋友，也歡迎来推荐", "wilddog", "  Firebase 有墙内版本，，，年前 Google 大会带来不少墙内版本的服务。", " 有墙内的？ 我没找到啊。。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>入口：在微信顶部搜索栏，搜索“ 小程序示例”，便会出现小程序的提示，点进去之后，微信中就会多了一个小程序的入口。与朋友圈等功能菜单同级。</p>\n<p>之前没有过多关注小程序，也没有刻意去找内测资格。今天算是第一次在微信上体验到这个功能了。感受的确是不错，不管是流畅性、还是各种逻辑方面，作为公测第一版，我觉得都能打出不错的分数，比预想中的操作体验要好。但也一直在想，哪些 app 会考虑用小程序替代 naive ？</p>\n<p>大家有什么感受呢？或者说有没有什么有意思的发现。</p>\n</div></div>"], "reply": "131", "tittle": "小程序终于上线了，体验过后和大家想象中有什么不一样呢？", "comment": ["与小程序相比，我觉得倒不如这个 [ionic view]( ", ")", "大厂商不入场，不能作到和 app 一样的服务，基本等于没有一样， so~\r", "反正我觉得这是一个圏投行大钱钱，同时又养活一大波所谓创客的东西吧。", " 这就是张小龙高明的地方，他不急，克制，敢于通过限制功能的方式来慢慢发展，温水煮青蛙。\r", "\r", "1. 原则上根本就不想提供微信内入口，据说目的是促使商家在线下推广，线下的二维码才是小程度的主要入口。\r", "2. 功能少，必须少，否则就不是“小程序”了。功能少，因此商家一开始不用担心 APP 被取代，程序小，才能确保快速载入。\r", "\r", "小程序肯定是不必要的，如果必要，就是要取代别人，要革别人的命了，是会被抵制的。它就是要引流，帮助商家。比如共享单车，如果扫码后要下载 APP 才能用，有的人可能就会放弃，但如果扫码后两秒钟就打开了小程序，马上可以使用，新用户就会自然使用了，体验后想要更多功能，可以下载 APP ，小程序和 APP 是共存的。", " 朋友圈里那些整天喊着小程序将取代 APP 的，    \r", "已经被我鉴定为脑残.....  ：）", "体验得有点晚（被各位的“热情”吸引住了）不过为啥我刚进去就是这种：\r", "\r", " \r", "\r", "👀", "我就想知道 微信让不让天猫做小程序", " 两个都有混合的意思", "个别小程序还是不错的", "所以 iOS 培训潮结束，下一个是 H5 喽？", " 所以小程序解决的是强需求问题 ,自带过滤属性,吃饭的时候陪家人,不看手机, 你要用,目的明确就肯定可以找到.", "感受就是现在 90% 的小程序都是垃圾，不是该有的场景，硬凑上来的；想象一下，微信去掉发现下面的入口和好友分享的入口，小程序会死多少；真正的场景就是官方说的，线下二维码是入口，用完即走；觉得膜拜单车可以升级下就比较符合场景了：微信扫一扫车身的二维码，解锁，骑走，锁车，微信付费；全程根本不关心小程序是什么，或者餐馆点餐，景区导览等场景还是比较符合的。个人意见~~", "今天用滴滴出行小程序打了个车，在 2 个界面遇到显示 BUG ，返回出去要点回滴滴还麻烦，还没推送。", "体验完了感觉只是笔 普通网页 快一点的网页应用。\r", "\r", "美团，点评等 App 还是不能删啊，毕竟有 Apple Pay + 白条 之类的优惠，微信里应该享受不了吧。", "还是强制要手机号（摊手", "naive ？？？？", "点外卖方便了许多..", "我支持流应用。有了 mui 还要个蛋小程序啊，哪天被腾讯看不顺眼就毙了，多少前车之鉴啊…", "  这个定位非常准确：“微信浏览器”\r", "\r", " 我坚持用 whatsapp 。", "入口在哪", "我觉得是垃圾。。", "我觉得小程序的推出只是贯彻了张小龙的工具主义的思想，即用完即走，他就是一个工具，对线下商户来说应该会有很大的方便，节省了很大的开支成本。按照他的思想，微信是工具，小程序也是。", "携程,去哪儿,快递 100 等,完全可以不用 app 了", "已经删除的 app 有：猫眼，饿了么，豆瓣，美团，节省了很多空间，只保留了一个大众点评，对我来说非常有用，等下个版本不断完善，估计会卸载更多 app ，本身就是工具软件却加了许多乱七八糟的东西，感谢张小龙帮我们返璞归真，我真的只想点个餐，不想看王祖蓝那张脸", " 扫码之后，登录手机号，支付押金一系列，真方便？", "之前以为和 H5 应用差不多，体验下来效果还是很不错的（出乎意料），比 H5 流畅很多，和 app 体验差不多了。而且不知道是不是微信有限制，目前装的小程序都没有广告╰(*´︶`*)╯", " 对于一个新用户第一次骑车的时候来说确实是方便了。\r", "\r", "一个新用户在路上看到摩拜单车要骑的时候\r", "正常的没有小程序的步骤是：打开微信扫一扫→从网页跳转到 App Store/应用商店→下载摩拜单车 App→打开膜拜单车 App→注册→支付押金→扫码骑车\r", "\r", "有了小程序的步骤：打开微信扫一扫→进入膜拜单车小程序注册→支付押金→扫码骑车", "就目前功能来看，怎么感觉就是 weui*jssdk 给打包了", "   ", " ", " 大哥，说你拼错了，你还在给我解释意思-。-", "车托之家强行要定位权限。。。不然进不去，你妹", " ，摸拜单车和 餐馆这块 非常适合小程序 ，表示赞同答主"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>因为是做测试用的，所以就没做密码，结果今天早上一看，库全被删了</p>\n<pre><code>{\n\t\"_id\" : ObjectId(\"58743f490c474c53fc948a96\"),\n\t\"Info\" : \"Your DB is Backed up at our servers, to restore send 0.1 BTC to the Bitcoin Address then send an email with your server ip\",\n\t\"Bitcoin Address\" : \"1J5ADzFv1gx3fsUPUY1AWktuJ6DF9P6hiF\",\n\t\"Email\" : \"kraken0@india.com\"\n}\n</code></pre>\n</div></div>"], "reply": "18", "tittle": "好像我们的 mongodb 测试库也被黑了", "comment": ["```\r", "2017-01-09T23:47:41.105+0800 I NETWORK  [conn336] end connection 223.93.176.137:45793 (10 connections now open)\r", "2017-01-10T07:56:22.767+0800 I NETWORK  [initandlisten] connection accepted from 46.166.173.106:58901 #338 (9 connections now open)\r", "2017-01-10T07:56:25.204+0800 I NETWORK  [initandlisten] connection accepted from 46.166.173.106:59922 #339 (10 connections now open)\r", "2017-01-10T07:56:26.868+0800 I COMMAND  [conn339] dropDatabase admin starting\r", "2017-01-10T07:56:26.984+0800 I COMMAND  [conn339] dropDatabase admin finished\r", "2017-01-10T07:56:26.984+0800 I COMMAND  [conn339] command admin command: dropDatabase { dropDatabase: 1 } keyUpdates:0 writeConflicts:0 numYields:0 reslen:56 locks:{ Global: { acquireCount: { r: 2, w: 1, W: 1 } }, Database: { acquireCount: { W: 1 } } } protocol:op_query 117ms\r", "2017-01-10T07:56:27.423+0800 I COMMAND  [conn339] dropDatabase cn_com_seo_facebook starting\r", "2017-01-10T07:56:29.493+0800 I COMMAND  [conn339] dropDatabase cn_com_seo_facebook finished\r", "2017-01-10T07:56:29.493+0800 I COMMAND  [conn339] command cn_com_seo_facebook command: dropDatabase { dropDatabase: 1 } keyUpdates:0 writeConflicts:0 numYields:0 reslen:70 locks:{ Global: { acquireCount: { r: 2, w: 1, W: 1 } }, Database: { acquireCount: { W: 1 } } } protocol:op_query 2070ms\r", "2017-01-10T07:56:29.920+0800 I COMMAND  [conn339] dropDatabase cn_com_seo_mis_auth starting\r", "2017-01-10T07:56:30.324+0800 I COMMAND  [conn339] dropDatabase cn_com_seo_mis_auth finished\r", "2017-01-10T07:56:30.324+0800 I COMMAND  [conn339] command cn_com_seo_mis_auth command: dropDatabase { dropDatabase: 1 } keyUpdates:0 writeConflicts:0 numYields:0 reslen:70 locks:{ Global: { acquireCount: { r: 2, w: 1, W: 1 } }, Database: { acquireCount: { W: 1 } } } protocol:op_query 404ms\r", "2017-01-10T07:56:30.736+0800 I COMMAND  [conn339] dropDatabase local starting\r", "2017-01-10T07:56:30.802+0800 I COMMAND  [conn339] dropDatabase local finished\r", "2017-01-10T08:07:22.807+0800 I NETWORK  [conn339] end connection 46.166.173.106:59922 (9 connections now open)\r", "2017-01-10T08:54:41.773+0800 I NETWORK  [conn338] end connection 46.166.173.106:58901 (8 connections now open)\r", "```", "密码不是应该在安装的时候就设置好的吗。", "mongo 有一个漏洞，需要用 bind_ip 做一下限制", "没有关闭 27017 的远程访问吧？", "hacker 很难再自己服务器上做备份，他这种方式估计打钱的人不多……其实他可以改变一下策略，把当前数据库的一些记录用 2 个密钥加密，留下接触方式，你接触到了可以获得一个密钥解密部分数据，要获得另一个密钥请打钱（逃", " mongo 不是强制要求设置密码的啊。", " \r", "1. bind 0.0.0.0:27017\r", "2. 一句 use admin 直接就 admin 权限了", " 设置密码不是一个基本素养吗?还需要被强制才去设置.", "顺便提一句，在阿里云上 bind 192.168.x.x ，还是能在外网被访问到的。", "iptables 的重要性这时候就体现出来了。。", "这句话怎么讲，今天你支持比特币，明天黑你服务器的经费里就有你出的一部分（笑）", " 啊？为啥", " 不知道哈。只踩过坑，不知道阿里云啥逻辑。", "前几天就爆了", "我阿里云的测试机每天都被清库，反正也只是用来学习的，被删了也不管🌚", "我今天仔细看了下，和楼主一样，都是被这个人黑的"]},
{"content": ["<div class=\"topic_content\">求助各路大神，想开发一个 nginx 模块动态从 zookeeper 获取配置参数，应该采用什么模块开发， upstream ？ event ？有什么可以参考的模块程序例子</div>"], "reply": "31", "tittle": "求助各路大神，想开发一个 nginx 模块动态从 zookeeper 获取配置参数，应该采用什么模块", "comment": ["给出一个自己的方案。\r", "\r", "java 先解析 nginx 的 conf ，监听 zookeeper ，动态修改 conf 文件。\r", "\r", "也就是利用了 zookeeper 自带的通知功能，用 java 桥接了 zookeeper 和 nginx 配置文件。", "可以试一下 QConf ， ", " ，一个分布式配置管理系统", " 感谢您的回复，但我还是想用最直接方式去做，不然我就用 bash shell 了，而且我只会 c 不会 java", " 感谢回复，其实我是想实现 后台 http 的 API 注册， nginx 发现该 API ，并及时更新 upstrem ，是不是有点异想天开^^", " 没太看明白 2333 ， QConf 是从 zookeeper 动态获取配置，然后对外提供接口获取最新配置，感觉跟你需求有点像就推荐了:)", "主要是看到国外有人这么做，想挑战一下，提升技能，一直想了解 nginx 开发，再一个跟上级承诺了，囧", " 仍然感谢", "有用 kazoo 、 java 的， c 写就比较重了，因为本身 zookeeper 是 Java 的。且这个场景不太适合，你写就明白了。得在 zookeeper 上挂钩子，还需要动态更新 nginx", "赞同 @", " 的方案，可以参考 consul2template ，非常简单可靠\r", "直接在 nginx 内部实现，要考虑的细节就会多很多，从工程收益来说，不划算。", "指个歪路，可以参考 bamboo", " 感谢回复，我已经了解了一些， zookeeper 有 c 语言的客户端 API ，并写了简单的 c 的测试程序，利用它的这个 API ， c 写起来也不是很麻烦，只是看怎么把这个客户端程序融合为 nginx 的模块", "内部用 bash 来调自带的四字命令？", " @", " 谢谢，我去了解一下", " 不懂", "nginx plus 提供微服务动态管理功能吧，这类肯定可以实现的", " 感谢回复，正是看到 nginx plus 可以实现又要收费，才想自己实现的，但自己又没做过 nginx 的开发", "这个要看什么配置参数。\r", "\r", "upstream 的话有一大把方案，但是基于 zk 的比较少。\r", "\r", "很多其他配置并没有 Nginx API 可以修改所以不能动态。\r", "\r", "我有一个 etcd 的你要不要试试", "推荐 confd, 写个配置文件和模板就能满足你的需求, 可以参考 ", "OpenResty + balancer_by_lua 基本可以达到你的要求。", " 主要是用于发现需要反向代理的 http API ，即 upstrem 的那些地址，这些后台也会注册自己的接口，如果方便，发一份 etcd 的实现到 ", " ，我参考一下，非常感谢  ：）", " @", " 谢谢，我去了解一下", " 请问 upstrem 配置的后台地址可以动态修改吗？", " 哦，看懂了，你的意思是可以得", "可以看看 nginx upsync", " 好的，谢谢", "\r", "\r", "在重写，所以这个目前还没用", " 嗯，主要是向高手学习  ：）", "nginx 自己更新自己， 这个恐怕有点艰难， 可行性我还没有尝试过。\r", "\r", "我这边是外建一个 register 负责处理注册请求， 有点像 confd ， 但有损耗， 需要 kill -HUB,\r", "\r", "不过我负责注册的请求时分布式的， 不影响业务， 目前也在想办法解决这样的问题。 关注。", "openresty", "同意 29 楼 ，用 lua", " nginx 已经有模块实现这样的功能 nginx upsync module"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我在 linux 下部署了一个 node 的站点，然后访问，发现静态文件基本在 30ms 内就完成了，但是请求的数据基本都是在 600 、 700ms 左右，我打印了下时间 mongo 的查询时间，发现每次查询都在 600ms 左右，但是我数据只有 60 条，为什么会这么久</p>\n<p>我又在 window 本地开了个站点，连接 linux 下的 mongoDb ，发现每次查询时间在 200ms 左右。代码是一样的，为什么会差距 3 倍之多呢？</p>\n<p>还有我吧 linux 下的 mongoDb 备份了一下，到 window 本地查询，发现每次查询都是在 40,50ms 左右，为什么会这样的，哪里有问题？</p>\n<p>说明一下，我的 linux 下配置很低，只有 1 核 1GB 内存，但是我就开了一个站点， cpu 使用率很低，而且 node 只支持单线程，这个应该没什么影响吧？</p>\n</div></div>"], "reply": "5", "tittle": "关于 mondoDb 查询耗时的问题", "comment": ["你这点数据怎么组织的，这配置虽然低，但这点数据查询条件写的再烂也不至于这么慢吧。。。", "按照你的排查情况，可能就是服务器的原因了。", "建议在 linux 下安装 mongo 客户端，试试速度。\r", "排除网络问题。", " 我也是这么想的", "找到原因了，是因为设置了账号密码，每次请求 mongo 都会去验证，导致查询时间变长"]},
{"content": ["<div class=\"topic_content\">用 qq 和微信的对比抛砖引玉一下：之前记得有 V2 网友在问，为什么微信电脑版不做成 qq 那样的界面，记得有网友说，界面做的一样那不就是 qq 了，其实我一直搞不懂微信和 qq 有啥区别，微信最初推广方式大家都心知肚明，的确是见不得人的不光彩事，但是目前微信的使用率超过 qq ，为啥？还不是互联网炒作概念，现在拿出你的手机上 qq 和微信，除了一个 header 是蓝色的一个 header 是黑色的，其余功能上有啥区别？微信电脑版如果不是强制要求手机登录，和电脑版 qq 有啥区别？\r<br>现在腾讯又来新瓶装旧酒，和当初炒作微信一样如出一辙（当然炒作小程序更光彩一些），热炒一个完全没任何新意的小程序，我就不知道这个小程序比 hybrid app 强大在哪？或者比 h5 web app 强大在哪？估计唯一强大的地方就是可以让用户多看几分钟微信启动时的地球图吧，而广大厂商深怕自己掉队，抢不到蓝海的第一杯羹，对这个皇帝的新衣趋之若鹜，也不管用户是否买账，抢到新鲜就好，等到最后才发现和 h5 网页一样时，才发现这就是一个屠夫穿着皇帝的新衣，对远方草原上悠闲吃草的羊说：来吧，小羊羔们，我家羊圈的枯草更美味些~</div>"], "reply": "24", "tittle": "QQ 和微信功能上有区别没？没有的话，那 H5 手机网页和小程序有区别没？", "comment": ["小程序和 H5 还是有一点区别的，我觉得腾讯到没有非常大力的宣传小程序，而且微信现在对小程序还是很克制的（入口太弱了），可能是他们也不知道小程序具体要怎么发展。\r", "倒是不知道小程序怎么戳中某些厂商的 G 点，每天各种吹捧小程序。\r", "感觉是大部分厂商，为了蹭一个热点，好提高知名度吧。", "利益驱使。。。。四个字总部", "qq 早期没有语音这个功能。", "至少朋友圈的消息只有好友能看见， qq 空间是所有人可见。\r", "还有就是微信好友删了就没了，当然可以再加但是比 qq 的要麻烦，配合上微信的摇一摇和附近的人等功能，其实就是一个约炮神器。\r", "微信的用户群体也不一样，覆盖各个层面(其实小学生比较少)，而 qq 的青年的用户群体为主，所以 qq 的业务以游戏为主。", "微信普遍都是以电话号码注册为主，当然微信早期不是，现在是。 QQ 却没有任何实名认证吧，指注册的时候。", "qq 和微信区别太大了吧，你只用来聊天估计觉得所有 IM 都一样", " qq 空间也可以设置成朋友圈那样", "QQ 功能多很多。比如在线协作，比如开视频会议，比如远程。", " 不默认提供就说明概念不一样，这种功能肯定是可以做的出来的", "小程序封闭， H5 开放。连 Android 都要出 Instant App 来让 app 里面的内容能够很容易被连接，搞个封闭的小程序也许只是这么几年短暂的过渡吧，我推测。", " ", "\r", "因为政策需要。。。。。。。。", "楼主完全吐不到要点，我只说要是只谈功能， 阿里一个晚上撸 10 个微信出来 你信不？", " 看来现在什么东西都有实名了，怪不得现在小学生都配手机了", "纯功能比 qq 功能多太多， 但是 QQ 太多功能和广告给人太多负担，微信的功能相对弱很多，但是手机上 主要的消息和通话功能做得不错，这大概是它崛起的主要原因。天天吃 海鲜牛排，吃腻了，换了青菜萝卜，大家觉得不错就都转过去了。\r", "\r", "虽然我手机上两个都用，但是 qq 里大家无人说话，群里还有些话，但是都比较边缘化，主流还是微信。说历史 QQ 更早，技术肯定也更强，但是我认为微信主要胜在轻巧上。最简单的例子，家里的老人 用 qq 都不太会用，为什么？太复杂，微信都会用，为什么？简单 ！ 所以回过头来看，为什么功能一样，微信会赢，并不是没道理的。搞技术的如果能全面的看一个产品，才真的能做出一个好产品。", "个人认为微信现在还是更加偏重为一个通讯软件（然而消息都不能自动同步算什么玩意....），而 QQ 毕竟是腾讯的看家产品，功能比微信不知道强了多少倍以至于每个人都有几个不用的功能，而且基本其它腾讯产品也都是以 QQ 来整合的", "QQ 先有的电脑版，手机 qq 是电脑版的延伸。业务繁多（各种钻各种服务）。微信是专门为移动设备而生的。虽然有 pc 版，但也只是一个小工具用来简单的查收信息而已。\r", "微信的主要关系存在于移动互联网背景下的手机通讯录中，当然如果你是老 qq 用户，微信早期支持从 qq 导入好友。\r", "微信功能简洁，没有像 qq 那样的各种业务，且私密性要好于 qq", "qq 和微信在垂直整合（功能、资源）这一点上走的是完全不同的两条路，对于浅层用户而言确实没有什么区别（不就是 IM 么），微信给人们的感觉就是比 QQ 轻，移动端优先，再一个你看 win 版 QQ 整合了多少东西进去。。我起初是拒绝使用微信的，理由很简答 -> 凭什么我打电话 20 秒能讲完的事情非得花个几分钟语音来来回回讲个不停。后来妹子一句话我就再也没回过头：“人家就是人家就是想和你多讲几句嘛” 👋", "互联网搞啥都需要流量啊，小程序的目的就是让小厂商能分到点腾讯的社交流量。独立的 APP 、网站肯定更好、可操作空间更大，但是引流要成本啊，小厂商在上边试验下肯定是不错的，做大了肯定还是要脱离这个平台的。大厂商肯定是不干的啊，阿里云市场不也能自己搞个生态圈？", "哪里看出来炒作了？\r", "小程序只在微信自己的公开课上提，没主动推送广告到用户微信\r", "只有使用过发现里才有小程序，不使用跟之前完全不一样，入口很克制了\r", "小程序搜索只能精确搜索，不能模糊搜索\r", "微信没有自己的小程序官方商店\r", "小程序从策划到正式上线用了一年时间\r", "以及各种设计规范和大小要求等等\r", "\r", "综上，微信在小程序上也是非常克制的。不克制的是各个科技媒体，以及想推广自己小程序的开发者。", "入口 流量", "凡是说 H5 的都是异端 可以烧一烧", "一般吹捧小程序的都是互联网圈那些不懂技术的人，包括产品经理、媒体人，因为微信被他们吹捧得很厉害，所以微信随便做个什么也很厉害，这群人一般都跟果粉重叠。", "小程序可以依靠微信公众号的入口 + 微信支付给腾讯带来新的商业模式。\r", "\r", "技术都一样？  07 年 iPhone 出来的时候估计你们都要想诺基亚也可以实现那些功能，苹果真垃圾。", "待机功耗差好多 说明一个是移动端起家 一个目前重点其实还不得不停留在 pc 平台"]},
{"content": ["<div class=\"topic_content\">文件功能是 检测是否存在某个文件 不存在就退出程序,存在就更新其内容(app.ini 文件), 但是运行了几次之后 360 直接报病毒了 , 请问怎么实现不被误报呢?</div>"], "reply": "48", "tittle": "随便用 golang 写了个小软件, 360 直接报毒怎么办呀", "comment": ["把 360 关了：）", "卸掉😂", "你是不是判断系统敏感文件的情况？", " var _file= os.TempDir() + \"\\\\xxxapp.ini\"\r", "判断系统临时目录里面的一个文件", " 你改一下代码，判断程序所在目录下的文件试试，马上就知道了。😀", "360 是最大的病毒软件？", "360 要你过审，你没有数字签名没有申报安全审核。乖！赶紧去 360 审核下。真的没骗你。", "不是有传说中的白名单吗。你得交钱。", "写代码还开着 360 ，这一届的 gopher 信仰不行啊", "写代码怎么敢开 360 啊～", "6 年前用 c#写的作业级别的小程序被 360 删掉后再也没有用过 360", "有闲心思黑 360 不如让楼主把程序样本提交给 360 让他们完善一下病毒库", "是不是 360 想上传你的那个文件而找不到其他借口啊？", "那只能卸载了 360 了", "你用 VC 写个 hello ， world ， 360 都报有毒。", "不交钱还想写程序，想多了。", "360 迅雷 qq 等等很多软件，说白了其实就是木马。\r", "ddos 攻击的时候就派上用场了，别以为天下真有免费的午餐。", "聚集用户，达到一定量以后，就可以充当裁判，为所欲为，排除异己，国内几个巨头都这种货色。没救了，只有政府制定合理规则才救得了这个行业。", "不给钱你就想搞程序？", "不写到 temp 目录试试,换个目录看行不行?", "可能是文件名的问题，和某个病毒的名字起一样了吧，换个名字试试", "或许这行为在杀毒软件看起来很像 trojandownloader😂", " 相反我觉得正是由于政府过度管控了互联网导致畸形竞争，才导致了今天国内寡头作恶的结果，因为常规市场太狭小。", "linux who 命令的简单实现代码保存在 wiz 笔记中，结果 windows 7 下每次点开那篇笔记都会被小红伞拦截报毒", "后来把小红伞给卸了  😂😂😂", "把 360╳╳了", " 不仅如此，政府已被替国产大垄断大龇产阶级说话的人牢牢掌控在手里头了。", "似乎不管用啥語言寫都會被 360 報毒 🌚🔫\r", "（除非搞個啥認證或弄個 Code signing ）（大概）", "...V 站的人还会开着 360 写代码 噗。。", "话说为什么要装杀毒软件？", "我以为程序员都是抵制和不使用 360 的。", "别人都 macos Ubuntu 写代码的 远离 360 珍惜生命", " 客户 pc 安装的有 我们放出去的软件不可能不做这个检测的.", "把 360 关了。。。", "删除所有毒杀", "卸载 360 :P", "2011 年写的行业软件就已经检测到本机有 360 直接弹窗不予提供服务\r", "请自行卸载 360", "不好意思，那个我问一下  360 是什么？", "手动滑稽", "不写代码也不敢开 360 啊", "卸载 360", "大学 VB 课程设计 交作业的时候 老师让把写好的程序 用 U 盘拷到他的电脑里 结果我刚把 U 盘插上 课程设计就被老师电脑里的 360 给杀了 当时我真的是绝望的...", "卸载 360", "卸载 360 呗", "360 是个处，有点敏感", "我以为这东西都是麻瓜才用的 为啥你身为魔法师也要用这种东西", "360 本身才是最大的病毒,所以我有话语权时都是把它 xiezai", "有一说一，我用电脑七年了，就从未安装过杀毒软件（有时候是 gho 安装的，启动后马上卸载）；最近三年用 linux 多，更没有用过杀毒软件。", "卸载 360"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题，质量稍微高一些的</p>\n</div></div>"], "reply": "16", "tittle": "有什么比较好的直播或者视频学习网站吗？ coding 或者技术课程的，国内外都行", "comment": ["国内的有慕课网，牛客网，实验楼等，其中实验楼是不是视频教学，只是提供教学文档和操作环境。", "硬广： ", "\r", "\r", "这是我的站点，专注于 Web 开发，后端是 PHP （ Laravel ），前端 Vuejs ，当然其他的一些涉及的东西也将：比如服务器，比如吹水。\r", "\r", "自我感觉质量还是可以的。", " 网站做得很溜，👍", "其实慕课网就挺好的，国外看有时候会卡。需要搜索特定的话， YouTube 上面其实也挺多很好的内容！", "youtube", "我学技术从来不看视频，因为视频获取信息太慢。。尤其遇到垃圾一般的讲师，对你来说就是浪费生命。 建议：直接看要学技术的文档，或者相关文章。 \r", "\r", "看视频的话 我只看搞笑视频跟电影", " 网站很好", "Udacity:https://goo.gl/Rtqq5J\r", "极客学院： ", "\r", "慕课网： ", "\r", "麦子学院： ", " 视频抓取的吗？", "网易云课堂", "国外的话 Udemy 经常搞活动，大部分课程都可以 US$10 拿下。 pluralsight 就比较贵 US$29/month 看全站视频\r", "\r", "视频教程作为入门到中级都很不错，但深入了解实践的话还要看书或者有高手带你。", " 视频都是我自己录的。", " \r", " \r", "\r", "感谢感谢", "学堂在线   有些理论性的 底层基础知识"]},
{"content": ["<div class=\"topic_content\">现在好多这样的跟风公司。吃苦的都是搞云计算的兄弟。\r<br>因为去年还在炒云计算。一窝蜂的招云计算。今年开始炒人工智能， AI 什么的。得类，一堆公司又去跟风做人工智能，看架势和搞云计算和大数据一个德行，狂招各种人工智能大拿。什么这博士那博士的。屌的不行。然后呢？然后依然只看到独角兽在前台挥舞。至于云计算和大数据？做不起来投入太大，然后洗洗睡。。该裁员的裁员，该 GG 的 GG 。\r<br>\r<br>所有这一切都是别人在主导，但实际技术是程序员鼓捣出来的。然后产品包装成一个一个屌炸天的名词， CEO 一下就牛逼了。程序员还是苦逼哈哈的做事。\r<br>\r<br>是不踏实么？不知道，只是突然有感而发。昨天和一朋友聊天， 20 来岁，大学没读完。刚做了 1 年的 java 。然后给我来一句：嘿，知道深度学习么？我要去搞深度学习和人工智能了。我一口老血差点喷屏幕上。老咯，跟不上时代的步伐了。忽悠为王，实干误国</div>"], "reply": "53", "tittle": "想想我们程序员为啥永远拿不到主导权呢？因为不会忽悠？", "comment": ["各有所长，能忽悠到投资也是一种本事，技术能实现很多事，不能实现的也很多，我喜欢技术是因为它即使不站在风口也能飞起来。", "来个知乎风，先问是不是，再问为什么。", "本来我又想说；\r", "\r", "老铁们，双击评论 66666 \r", "\r", "刷一波游艇， 点一波关注，关注上 10 个，我直播去他们公司面试\r", "\r", "老铁们，没毛病\r", "\r", "可话到嘴边就没说了，因为看到末尾的一句“忽悠为王，实干误国”   不经让我思考", "事实证明，会忽悠的程序员技术不行 hhhhh", " \r", "我也是不喜欢和人搞一些忽悠方面的事，不然我宁愿去做销售。\r", "不过现在这个时代，还是很多销售转的啊。全在天上，不带下来的", "目测这个帖子会火\r", "\r", "说一句，很多事从抽象的角度去看，会有一个总体的把握，往往会有不同的体会", " 这也只是个玩笑。真正实干的那是大拿。\r", "只有 1%的大拿，那么咱们这些虾兵蟹将就只能苦逼逼？\r", "\r", "我想表达的是，大多数程序员是脚踏实地的。但风气如此。不觉的有点担忧。。。\r", "\r", "会不会哪天去面试不说出几个牛逼的名词连饭碗都没了", " 这样看来大家的本意都是务实为主，奈何大环境造就我们不得不去接受一些忽悠，还要回反忽悠", "我还是那句话：从来没见过矿工靠挖煤又好又快当上煤老板", "前阵子面试了几个工程师，发现工程师的特点就是，有一说一，明显的感觉到他们都说的真话，特别实在，没做过就是没做过，不会就是不会。优良品质，挺好的", "先问是不是，再问为什么+1\r", "\r", "主导权是真针对人的，程序员只是一个职业，职业是无法代替人的，你这个议题本身就是伪命题。\r", "\r", "掌握的主导的程序员也有很多，会忽悠的程序也有很多，只不不过他们一旦这么做了，你就不认为他们是程序员了。", "你搞反了因果关系。\r", "\r", "不是因为做了程序员所以不会吹，正是因为不会吹，所以没法干那些靠吹的活，就只能当程序员\r", "\r", "所谓少壮不努力，老大干 IT 也就是这个意思.\r", "\r", "憋说了，我回去写代码了。", " \r", "\r", "这也不太对。\r", "\r", "因为程序员（作为一种职业）的工作很多都是可以被测量的，所以无法吹牛。比如你说的你写的程序并发超强，单机支持 C100K ，是真是假测试一下就知道了。\r", "\r", "但是生意场上真真假假很多东西是无法验证的，所以可以拿起来吹。哪怕吹不起来，只要包装成别的东西，混淆一下概念就能吹了。虽然很多东西看起来只是玻璃纸，但是由于商业利益不会有人去捅破（况且商业上很成功的老板，大都会互相吹捧，人抬人，没有原因不会去冒险得罪其他人）。", "情商不高", "因为不是技术主导公司", "经济系统不太可能一点泡沫也不产生…… 所以绝对务实的运行下去是不太可能的", "程序员自己觉得是自己技术不够……（ Anders Hejlsberg 和 John Carmack 笑而不语）。 P.S. 《打破自我的标签》这本书说明了为什么程序员有这样的倾向性。", "CEO 不忽悠客户不搅合市场谁给程序员发工资？\r", "看到这里，我真想说一句，现在看到好多培训班出来的（我无意黑培训的兄弟们）直接去面试，之后说什么两年开发经验，不知道哪里整来的专科证，之后稀里糊涂的就面试进去了，水平可想而知，微信登录第三方都搞不明白。拿着比我高那么多的工资，写着那么垃圾的代码，想想好想打人，再想想自己，就是不会忽悠，错过多少机会。\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "忽悠为王，实干误国", "我跟楼主一个看法，极其讨厌大忽悠、 PPT 架构师、什么火贴什么的装逼犯。\r", "我们程序员，说实话大部分都是比较实在的人，而从事销售、管理职位的人，忽悠简直是他们的本能，经常能把自己都忽悠信了。归根结底，不是一类人。本质原因还是社会太浮躁。", "曾经创过业，也忽悠过别人，但现在还是决定往技术方面走下去，以后社会经验更足了，有好的机会再出来也不迟😆", " 泥垢了啊，今天我看你这段话看了好几次了。。。", "这句话应该这么说：“想想我们程序员为啥永远放弃主导权呢？”\r", "为什么这么说？\r", "- 为什么不是你去拉投资，为什么不是你去做销售？\r", "- 你能自己拉来投资还要跟着别人干么？\r", "\r", "为什么拉来投资的会有主导权\r", "- 因为本身能拉来投资这个能力是稀缺的\r", "- 因为有资金就能招人干活\r", "- 招不到你还能招其他人呢\r", "\r", "具备某种能力，而且很专业这件事情本身和获得主导权，能获取财富关系并不大，除非你的技术是稀缺的，市场上除了你别人都不会，这种产品就得靠你技术出活，没有终归是出钱的说了算\r", "\r", "谁说拉投资， ppt ，嘴炮，搞关系不是能力？就你搞技术算能力？ Naive", "楼上说的很有道理。\r", "如果你只负责做程序那就做好自己这一份就行了。\r", "如果你想主导。 那你就得做很多非程序的事情。\r", "\r", "那你也就是老板了", "术业有专攻", "我也经常问我自己  是真的不会吹吗 ? 真的不会忽悠吗 ?  可能是吧 ,  也可能不是", " 我还准备发展一个老铁团呢", "在这个消费主义导向的时代，你价值的认可和评估和你获取的财富没有太大的关联，你所做的是或否迎合市场才是关键，而且你的专业能力的强弱也没有太大的关联，而是你的专业能力是或否在某个平台被发挥了，而且这个能力是稀缺的，有啥抱怨的出门左拐开个公司试试去，为啥不敢呢？想过么", "市场有种需求。有何不可", " 有理，嘴巴能吹出来也是一个本事吧我觉得能为公司赚钱创造的价值越大就能主导，这一阵子深深的感受到了", "总看到不成立的标题。求伯君算不算程序员？丁磊算不算程序员？雷军算不算程序员？\r", "你想几个程序员拿到主导权？！全体？共产主义？", "\"昨天和一朋友聊天， 20 来岁，大学没读完。刚做了 1 年的 java 。然后给我来一句：嘿，知道深度学习么？我要去搞深度学习和人工智能了。\"\r", "看不出来这有啥老血好喷的,感兴趣去学去搞有什么问题?", "厨师为啥永远拿不到餐饮业主导权呢？教师为啥永远拿不到培训业主导权呢？交易员啥永远拿不到金融业主导权呢？快递员为啥永远拿不到快递业主导权呢？建筑师为啥拿不到房地产主导权呢？\r", "\r", "拿到主导权的个例？各行各业都有啊。\r", "程序员拿出牛 X 的作品，进而创业成为老板的几率，对比其他行业，已经是最高的。", "mark 一下", "因为你干的是技术活", "没有客户技术再好有什么用", " \r", "\r", "补几个： 周鸿祎 李彦宏 马化腾", "程序员只面向老板输出, 但是老板是面向所有人输出. 老板只靠规模优势就可以在价值上击败所有普通员工", "是否主导跟是否程序员没有必然关系，看一下美剧硅谷，不同的角色所要面对的问题不同。在硅谷程序员作 CEO 也不稀少吧，当然中国是另外一回事，中国大约还没有摸到地平线在哪。个人亲身体会，云计算这种技术绝对主导的行业，靠吹牛就完全不行了，", " 我就是培训出来的，但是对于培训机构这种做法我也很恶心。其实说白了就是两边忽悠，忽悠学生来送钱，忽悠企业作为他们的人力输出。说实话我有个一块培训的，要学历没学历，要经验没经验，但是就是靠着学历造假简历造假进了某国内二线。。我 tm 还能说啥。。", "就是一个员工为什么要主导权？", "我是企业主，经常有培训来的。没有歧视。\r", "但是经常有培训的成员进来实习，是这样误导其他的员工,\r", "\"我们班的一个朋友伪造了 4 年经验，现在薪水高的很，你这样的人，伪造一下，出去找工作薪水高的很\"。。。。\r", "大家的面试题，工作经验，项目都一模一样，有意思吗\r", "说一句被容易被攻击的话，谁公司招募这样的员工，吃早晚", " 正解", "没有主导权我觉得是因为脑袋太简单，不是说笨，而是思考的问题太单一，你觉得程序很复杂，其实人与人之间的关系更复杂，对情商考验很大的，把自己逼出来交流、管理的能力，才能有主导权，如果你发动不了别人为你做事，当然会感觉没有主导权。", "想想你拿的工资是谁发的，他是因为什么才能发起这个工资。。。", "术业有专攻吧\r", "\r", "bsd 社区诞生了一个词叫 bike sheding 可以看看，意思是大家都不想担下项目失败的责任，而如果一个项目成功了又显然不是自己一个人的功劳，因此大事完全没人干。解决方法就是找一个统筹但是不干活的人，所有功劳都归他", "没啥好抱怨的，干一行熟一行，我选择这行的初衷是因为简单没风险。时间长了思维模式就在这个圈圈里了。\r", "当老板搞创业有很大压力，有时候可能一次失败就是万劫不复。", "又懂技术，又能吹的，才是大牛", "我以前是销售，现在写网页。。。", "承担风险的人才有主导权，你是吗？", "都程序员思维，\r", "你一个打工，要啥主导权？ 就认为你写代码就你重要了？\r", "你想要主导权，那就创业呗，有人拦你了？ 资金、口才、组织能力、管理能力，你有没有？", "马云说, 你的实体经济不行了.", "先问是不是，再问为什么"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>移动这边貌似消费达到一定额度就可以免费送 20M 带宽，目前自己平均月消费也超过了这个额度，刚刚移动妹妹打电话过来让我办理，于是突发奇想，目前家里 20M 电信宽带晚上访问国外网站已经渣成狗，没用过移动，听说移动访问国外网站速度很快，反正多牵一条移动宽带也不要钱，用两根宽带上网，能不能通过路由器什么设置，同一台电脑访问国内网站用电信，访问国外网站用移动？</p>\n</div></div>"], "reply": "27", "tittle": "移动免费送宽带，但家里有了电信，怎样实现访问国内网站用电信，访问国外网站用移动？", "comment": ["pac", "你需要一个刷了 openwrt 的路由，具体可以看看下面的帖子。\r", "你要先确定你家能不能拉 2 根光纤进来，一般情况下新修的小区只埋了一根光纤到弱电井（你家到弱电井）。", "第一年宽带免费，交 360 元装机费，送光猫。\r", "第二年 360\r", "第三年 720\r", "是这样的，所以并不完全免费", "一台电脑双宽带何必大费周章用路由器设置，上外网插移动网线，上朝鲜网插奠信网线。", "买个支持双网口的交换机就行了。\r", "\r", "应该不难弄", " pac 能实现这个？", "策略路由吧", "WayOS,RouterOS,爱快，小草。最主要是需要一个设备。", "软路由比较方便这么搞", "反正都比较折腾的，不如搞 2 个无线，国际需求大就连移动，要国内就连电信，只有切换", "静态路由？？不知道是不是这个名称，默认走移动网关，国内 ip 段走电信网关", " 移动所谓的光纤宽带是指光纤到楼道，双绞线入户\r", "\r", "其实移动宽带很多问题是因为铁通的工程验收全靠酒桌交情，各种设备都被各种截留偷换然后变卖，有朋友在里面做过，领导带他验收新小区的工程，在酒桌上就当着承包商说，这位小哥说行就行，说不行就不行，而他并不是专业人士", "还有很多人说移动宽带上下行对等是良心\r", "\r", "其实稍微思考一下就知道，这样的对等鼓励用户多上传，在网间结算费用上是对他们有利的，他巴不得你上传比下载多", "策略路由就行", "参考 ss 的国内国外分流和 MWAN3 的负载均衡。", "入户先不是只有一根吗", "需要一台可以做策略路由支持多 wan 的路由器，我在用电信+移动双线，目前在用的是 Mikrotik RB450G ，这个配置略微复杂了，不过你用的话我可以提供配置文件，你改个 pppoe 帐号就能用了……也只能帮你到这里了 :doge", "现在小区入户线都一根，你用不了两 isp 的。国内外都移动算了，不打游戏的话。", "你买个 Routerboard ，写路由表或者防火墙规则都可以。\r", "Routerboard 比 OpenWrt 靠谱一些。", "移动送的 20M 这个是有线通的，走的电视电缆，性能很辣鸡的。 50M 以上的是另外拉的光纤", " 也不是 我手机 88 的套餐 就可以 50M 免费宽带  河北移动", "这不就是多拨吗?", " 移動家寬到電信聯通都是穿透第三方出口\r", "哪來的結算...\r", "國際出口不是按帶寬買的 transit 就是免費互連或者對方付費", " 穿透肯定有，但是整张网全部靠穿透，这个听起来有点夸张了", "我家是一条电信 100m ，一条移动 20m 。用的 AC88U ，刷的 KoolShare 改版固件，装个策略路由插件。国内走电信，国外和 SS 走移动。", "入户光纤一般有两根纤的 一般用不到 接的话比较难接 你看工程队肯不肯帮你接"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>哈哈哈，把我的一套开源算法做成了小程序了！</p>\n<p>由于工作生活节奏不同，如今很多关系稍疏远的亲戚之间来往并不多。因此放假回家过年时，往往会搞不清楚哪位亲戚应该喊什么称呼，很是尴尬。然而搞不清亲戚关系和亲戚称谓的不仅是小孩，就连年轻一代的大人也都常常模糊混乱。</p>\n<p>“中国家庭称谓计算器”为你避免了这种尴尬，只需简单的输入即可算出称谓。输入框兼容了不同的叫法，你可以称呼父亲为：“老爸”、“爹地”、“老爷子”等等，方面不同地域的习惯叫法。快捷输入按键，只需简单的点击即可完成关系输入，算法还支持逆向查找称呼哦～！</p>\n<p>项目地址： <a href=\"https://github.com/mumuy/relationship\" rel=\"nofollow\">https://github.com/mumuy/relationship</a></p>\n<p>微信扫一扫，使用小程序：</p>\n<p><img alt=\"\" src=\"http://media.ifanrusercontent.com/media/user_files/trochili/45/02/45021d13c3db03ff7d42ab7bd0907ec006ebde77-cf4e41842513e68baff9a6435574b4b878b05745.jpg\"></p>\n</div></div>"], "reply": "48", "tittle": "过年过节必备小程序！亲戚关系计算器", "comment": ["延伸一下，做一个抢票小程序？\r", "抢票成功后推荐这个小程序", " 哈哈哈，感觉业务不相干啊！而且抢票程序就是坑！抢到了用户可以不付款，直接去 12306 付款！", "  \r", "发现了一个问题，我这个怎么就没有称谓了呢？算不算是 bug ？爷爷的兄弟姐妹的孙子，应该是和我们同辈的。", "要配合基因检测看看是不是真的亲戚： D", "网页版本：  家庭关系称呼查讯  ", "楼主，只要申请一个公司，发布的小程序和主体业务没有关系也可以过审吗？", "厉害了，不过不同地区习惯可能不太一样啊。", " 不算 bug ，是我没有这个数据", " 这个应该是我写的被别人拿去改造", " 支持不同称呼的输入啊！输出只有一种常见的", "7 楼正解，不过也挺有意思的，哈哈", " 输入支持多种称呼的呀，不会影响使用……而且现在人口流动大，就算同个地方的人，不同家庭称呼还是不一样的！", "不错， 挺有意思的~", " 我试了爸爸的姐姐，输出的是姑母，听起来好别扭。。我家里都是叫姑妈，我那里也有叫姑姑的。姑母真的太别扭了。", " 不过这个创意真的很赞，而且那么及时地支持了小程序，界面也很有趣～", "用了下 有意思", "支持一个", "叔叔的老公叫什么", " 叔公 (逃…", " 2333", " 哈哈哈，叔叔的老公。。。。", " 我是为了区分爸爸的姐姐，还有爸爸的妹妹……不同地方叫法不一样啦，只是做参考", " 可以吧，审核不是很严格，只要不做别人的牌子", "赞一个\r", "感觉这种计算器已经成为 Hello World 一样的存在了", "可惜啊，处处有方言，我家不适用这个", "姐姐的女朋友该叫什么？\r", "妹妹的女朋友该叫什么？\r", "哥哥的男朋友该叫什么？\r", "弟弟的男朋友改叫什么？\r", "\r", "--来自湾湾的疑问", " 因为程序无法确定你家到底怎么叫啊！就算同个城市也有不同叫法！只能以一般的称呼为参考……但是算法的输入支持各种叫法", "抢票不至于，既然是过节使用，可以加一下关系以及送礼评估，比如春节探望该送什么，以多少钱为标准，网上其他地方或者相近地方的人对于这个关系都是什么类型、什么标准的， 类型标准出来了就可以挂广告推荐在线购买的东西了，好像越来越复杂了， 各种奇特、温馨礼物在线销售啥的。", "还是问老妈更快", "我很好奇。。怎么过的审啊，难道是新意？", " 人家不管你有没有新意，就是应用符合规范吗？有没有明显的 bug", " 小程序当然是专注做一个功能", "申请的企业版的 公众号？", " 爸爸的妹妹的老公的爸爸，查不出来了", "涉嫌歧视非异性恋哦", "建议增加个倒插门的开关。。毕竟称呼会反着来", " 中国异性恋有什么特殊亲戚称呼吗？", " 女朋友不是亲戚。。。。", " 你姐夫，嫂子，弟媳，妹夫算不算", " 算啊！女朋友不算亲戚啊", "我以前在 Google play 上下过一个台湾人做的“三姑六婆计算器”，界面简直一模一样啊", " 那你的观察能力可能需要加强了……首先这个是扁平化的设计，再者配色和布局不一样，然后操作不一样！那个每次点击都需要手工点“的”，然后中途会询问", "果然还是问老妈来的快..(有的时候你根本不知道他是哪辈的...", " 你要是没看懂，当我没说，", " 表示携程小程序抢票免费 抓紧时间", " 我已经回答啦～没有你要的答案我也没办法了", "楼主 我申请转载到我个人网站 ", " 欢迎啊！"]},
{"content": ["<div class=\"topic_content\">又来拉流量了~\r<br>\r<br>本文概述了 RSA 算法流程及一种有意思的攻击方式(timing attack). \r<br>\r<br>\r<br><a target=\"_blank\" href=\"http://mp.weixin.qq.com/s/eU3AmoFVco7Hgj4__lNbhQ\" rel=\"nofollow\">http://mp.weixin.qq.com/s/eU3AmoFVco7Hgj4__lNbhQ</a> \r<br>\r<br>有做安全的朋友么, 实际场景中有没有这种攻击方式?</div>"], "reply": "29", "tittle": "RSA 算法及一种意想不到的攻击方式", "comment": ["想起来原来看 tornado 的时候一篇文章，就记得里面比较字符串的问题，还真是巧\r", "好有趣的方式", "因为好像通过统计运行时间总感觉不太靠谱, 这个运行时间对环境太敏感了, 比如网络, 内存, CPU 负载等等都会影响.\r", "\r", "记得看过文章，这种感觉不靠谱是不靠谱的.", "感觉就是一种取巧的爆破了……不过还是学习了…", " 要有靠谱的那就真的大新闻了。。", "这有啥意想不到的？很常见的攻击方式", "这 ......时间盲注？", " 所以我的密码都带一个闽南语字符", " 一般密码学算法最后都会用芯片去实现，所以运行时间都是固定的\r", "\r", "\r", "\r", "现在拿的出手的算法实现，基本上时间、功耗、辐射这些旁路攻击都要能防御", "卧槽，微信里面居然都有代码高亮了，真没想到", "这种旁道攻击现在越来越多了。。。全是脑洞，之前还有用监听隔壁房间噪音破解数据的。", "这也是密码学里一类攻击方式。", "好吊的样子，我用这些算法都只知道找库直接用的，原理都不清楚。", "攻击思路是很踏实的，可以理解为一种基于时间的盲”注”，但个人认为，基于时间的盲注，在 sql 注入的应用中，因为执行的注入成功时，使用的 sql 语句，所需要的时间更长(长的很明显)，所以备受推崇; 但如果只是在后台执行了字符串判断，而且用了位运算，是否会让这种注入方式的时间差很小，很易受到影响?", "\r", "\r", "\r", "php 5.6 还专门增加了一个方法： hash_equals\r", "\r", "比较两个字符串，无论它们是否相等，本函数的时间消耗是恒定的。\r", "本函数可以用在需要防止时序攻击的字符串比较场景中， 例如，可以用在比较 crypt() 密码哈希值的场景。", "感觉好可怕。。服务器性能太好也危险啊 2333", "这个思路是蛮可以的", " 你从哪看出来样式和微信有任何关系的?\r", "难道这不应该是由 hexo 直接导出来的 html 吗？\r", "想到了另外一个侧信道攻击的案例，那个真的是劳动大的飞起。\r", "文章找不到了，内容大概是一种劫持任意 tcp 的方法。", "问题是书里都有讲这个的……大家难道不是早就知道了吗？\r", "所以才要让大家用公认的那些库，不要自己随便瞎实现，更不要觉得自己牛逼去造一个什么加密算法……", "Timing Attack 很早就提出了", "不是什么新闻", " 在这个函数的说明中，还有一条 note:\r", "非常重要的一点是，用户提供的字符串必须是第二个参数。\r", "为什么呢？\r", "单纯的只是比较，这里应该是二进制安全的，所以强调这个顺序的原因在哪呢？", "? Timing attack 也不是什么新闻，涉及到核心业务逻辑的加解密签名验证使用现成库的方法是最稳妥的方式，已经被考虑到了", " 对不起，我不知道微信公众号是怎么发的，也没见过他们的编辑器。", "没什么可怕的， AES 也能被侧信道攻击。", " @", " @", "  @", " 只能说明本人才疏学浅，知识面还太窄。\r", "  文中也提到了这个例子哈。\r", " 确实是，安全方面的都是防范于未然。\r", " 表面上想这些因素确实很敏感，因此有不靠谱的感觉也正常吧？估计只有自己亲自实现了才感觉靠谱。 :)"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>虽然说社区讨论 Python 的确优越于其他语言，但是对于招聘信息来说，还是太少了，在拉钩昨天搜了下，关键词 Python 才 8 页，什么鬼啊。</p>\n</div></div>"], "reply": "9", "tittle": "年底了 Python 找工作怎么这么难？", "comment": ["话说工作不都年初好找吗？- -", "还是 php ， Java 好找， Python 通常都是在加分项里，妈蛋", " \r", " \r", "年底年初 Python 找人都不是很多。", "看贴不仔细，差评。 t/333541\r", "\r", "社区讨论是用来装逼的，你竟当真？", " 不是一个路子的", "是不是工资要太低了，应该 20k,30k 尽管叫", " 干脆自己当老板", "代码撸得好，我相信 20-30k 应该有的。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>四周以来，几个小伙伴在做云爬虫易用性上下了很多功夫，功能和交互上都保持了每周两次 push 的节奏，不足还很多，现在问题是，大家对爬虫的应用场景有什么看法，我们下一步想要做定制，开放 api 。</p>\n<p><a href=\"www.zaoshu.io\" rel=\"nofollow\">想做到最好的造数，主页在这里 zaoshu.io</a></p>\n<p>想想很欣慰，四周以前我们还是一团糟，现在已经基本功能比较清楚了，关于云爬虫的前景，应用场景，需求，希望大家都来聊聊。嘿嘿。\n欢迎合作</p>\n</div></div>", "<div class=\"topic_content\">希望大家能一起探讨爬虫的应用场景和商业模式，欢迎加微信 Zaoshuio 。</div>", "<div class=\"topic_content\">这周又上了全新的 ui ，撒花，耶！</div>", "<div class=\"topic_content\">链接失效了，地址在这里：\r<br><a target=\"_blank\" href=\"http://www.zaoshu.io\" rel=\"nofollow\">www.zaoshu.io</a></div>"], "reply": "70", "tittle": "关于云爬虫用户场景和需求的讨论帖", "comment": ["把标换了吧，弄个纵泰的标好么...\r", "\r", "另外，爬虫为什么要做云...", "想做个好用的通用爬虫嘛，顺便解决数据量大硬盘不够的问题，哈哈", "之前用这个爬虫试了一下监控链家每日成交价。。。确实很方便，只用了几分钟就搞定了每天定时监控。。。但是。。。一周后过去看数据，结果发现竟然只保存了最近几次的结果，爬了一周的数据竟然没有保存，每天的邮件推送里面也没把数据推送过来，只是给个链接让自己过去取数据。。。虽然是免费服务吧，但是感觉数据应该按量计费而不是按次计费", "已抓取数据免费保存 1 周，付费用户保存 30 天。。。\r", "\r", "唔。。这样的计费模式如何", "爬取直接转 rss/atom", "额，好奇你们这“使用范例”，是怎么根据用户的浏览器历史自动生成的吗？", "感觉这行越来越泛滥了。。技术倒都是前几年的", "你能把淘宝的各种商品爬下来吗？", "做这块的太多了，做好了，分一杯羹是可以的；但是市场规模估计玄乎。", " 做雲好處是可以 cache 住對目標站點的壓力 這跟某些大博主提倡大家用 rss 訂閱一個道理 不過我覺得這個服務目前做得還是很一般", " 这个稍微有点苦衷，之前邮件出了点问题，现在这样是过渡一下。\r", "按理说一周的数据是保存了的，我在后台再看一下。", " 还是只能按量收费，时间不是主要问题。", " 对，不一样地点不一样。", " 第四周忙东忙西的，技术上好多还没上。", " 关键就是应用场景，我觉得应用场景还需要思考。", " 应用场景思考这个不能闭门造车 最好的办法就是产品好用 前期免费给大家随便用 从用户的行为中去分析大众需求", " 说得对，现在定制个人服务免费，网站功能是全免费的目前。", " 啊，说错了，定制个人服务收费，网站功能全免费。", " 感觉怪不好意思的，求加微信 Zaoshuio", " 哈。。。没事，当时就是随手测试一下，也不是真的需要抓数据。。。感觉这种服务还是挺方便的，如果我要用的话，一般就是用这种服务做简单的页面监控用，比如就监控某个页面的某几个数据，每天定时抓下来，并保存下来。 再高级点的功能就是，把每次抓到的数据聚合一下，出个表格之类的。但是只能保存最近 10 次的结果，这个就不太友好了，可以把限制改一下，比如限制保存的记录行数或者空间占用之类的。。。毕竟我每天抓几次数据，每次就存几个数，多存一些也不会额外占用资源吧\r", "\r", "\r", "我用这种服务的话，一般都在抓很简单的，数据量很小东西的时候。。。复杂的需求或者规模大的需求，一般也不会用这种服务了", " 其实是没有删掉还在服务器上，之前出了个问题，就是定时任务邮件无法取消的 bug ，所以先这样过渡，实在不好意思。", " 我用着还行。。\r", " ", " 谢谢支持，哈哈，欢迎探讨", " ", " ", "即刻？", " 不是，就随便讨论", "这东西开源么？对爬虫也比较感兴趣", "建议商业模式:\r", "\r", "工具和储存都免费开放给大家,让人用你们的工具去抓取有价值数据,然后提供一个市场来交易数据,你们从中抽成", "试用了一下，首先觉得邮件注册的确很友好，但是可能不能限制用户使用...同样比较赞同按使用量计费", "这个字体 我能吐槽吗？", " 目前不开源", " 想法好棒！", " 谢谢您的时间和耐心，谢谢。", "使用了一下，前端做的还是很不错的，不过之前在 v2 也看到很多人在做了，持续观望 ing", "功能还是太弱了，还不能接入 sdk ，抓取速度真的好一般，如果是给一些互联网公司运营和编辑用还可以，如果想给开发者用的话，还是先开源吧", " 数据堂就在做这些事情，卖数据、抽取规则还有数据 API 接口", "春风得意，自我感觉良好，真是呵呵哒。\r", "试用了一下，就感觉是个玩具。\r", "不说其他，就说神箭手云爬虫，你们跟别人差的也不是一点半点", " 给不会编程的做一点简单的应用可以， api 定制是将来的方向。", " 刚开始一个多月，肯定有差距啦。", " 有建议直接提，这本来也是个讨论帖，也欢迎提 bug 。", "只能爬取当前页吗？如果我想爬取所有分页的数据怎么做？", "分页的数据没办法爬，我就放弃了。还是继续做神箭手的付费用户吧。。还有什么云爬虫，求推荐。", "\r", "\r", "什么元素都选不了。", "能不能特定的检测某个数据变化呢  比如 epub.sipo.gov.cn 我想追踪每天发明专利公开和授权的数量变化 设定了这个网页抓取不到数据啊", "桌面版的开源程序： ", "\r", "\r", "和造数功能接近，很好用，可以参考。", " 爬取分页在你的工作台里设置规则可以做。", " 我们可以把现在的 bug 修复以后专门帮你自定义。", " 分页现在其实是完全可以爬的，在你的控制台的设置规则里。", " 很强大，感谢。", "爬虫这个问题，和 ad block 工具某些方面有点类似，其目的都是帮助用户舍弃“无效信息”，直接获取“有效信息”\r", "但争议性非常大，建议还是低调，盈利以服务性质为主，而不能以内容作为衡量\r", "做得好，还可美其名为“聚合”，做不好、做大了还是难免成为被告的", " 是啊，说得有道理。", "为啥页数只能是 1-100 ？", " url 总量不能太大，目前", " 不能用正则匹配吧？是不是需要复制所有的分页 Url 。", " 哦哦。昨天那个设置页码的页面没有弹出来，我以为不能设置分页。现在可以弹出来了。。如果有文档就好了。", " 分页现在除了总量有限制，要改进的看来还有很多。", "神箭手", "支持需要登录后才能爬取的页面么?", " 现在还不支持。", " \r", " \r", " 新的界面要出来了，谢谢大家的意见。", "基础服务肯定要稳定： ip 库（可分价格档）、自动打码、允许小号模拟登录、 api 导出、 api 种子导入。\r", "\r", "最最关键当然还是稳定！稳定！稳定！不要动不动就服务宕掉、莫名的卡顿、代理 ip 全线被禁等。", "前三个月功能迭代上心血很多，稳定性上确实……只能说逐步改进，这周马上又要出一个更好的新版了。\r", "如果还愿意赏脸。吼吼", " 求加微信 Zaoshuio", " 求给您发红包", "404 啦", " 现在还 404 么", " 我这还是 404 哎。。", "今天还是 404", " 求问哪个，我这边测了好多个都正常运行", " 低级错误  超链接变成了 ", "  ..."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><blockquote>\n<p>是时候来 V2EX 宣传一波了..</p>\n</blockquote>\n<p><img alt=\"initpintu_副本.jpg\" src=\"http://upload-images.jianshu.io/upload_images/4181079-35b035aa79e57da3.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<h2>相关链接</h2>\n<p><a href=\"http://szhshp.org/comics.html\" rel=\"nofollow\">《 10101 》全章节列表</a></p>\n</div></div>"], "reply": "1", "tittle": "[程序员漫画] 《10101》EP0：我太受欢迎了该怎么办", "comment": ["棒，加油。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>见到的一片很接地气的微信文章，感觉挺好玩的。另一个角度来分析，猜测小编应该完全是一个非互联网用户。而且可能还是个妹子~~~</p>\n<p><a href=\"http://mp.weixin.qq.com/s/QLKTYylpNs0k2AmwV1YTUw\" rel=\"nofollow\">http://mp.weixin.qq.com/s/QLKTYylpNs0k2AmwV1YTUw</a></p>\n<p>支持一下撒：谢谢咯。历史记录里面最新的一篇。</p>\n<p><img alt=\"http://7d9hs5.com1.z0.glb.clouddn.com/511257186330484742.jpg\" src=\"http://7d9hs5.com1.z0.glb.clouddn.com/511257186330484742.jpg\"></p>\n</div></div>"], "reply": "13", "tittle": "最接地气的小程序分析文章~", "comment": ["很有意思的小姑娘，欣赏其认真写文章的态度。 Up 主认识的话，好好对她哈。", "熟悉的味道", "\"他说他想开发一个软件，把所有的 app 都引入进来，只要安装了这个软件，所有的 app 功能都可以用\"\r", "\r", "这不就是 iOS 或者 Android 系统吗……通俗点这不就是一台手机吗", "小程序不是可以代替 app 的东西，类似 bs 和 cs 架构的东西，有些是无法替换的，不过有些可以", "截图没有对齐......\r", "实在忍不了.............", " 已经关掉文章了，看到你又重新打开看了一遍，果然没对齐...", " 难受，你为什么要说出来", " 强迫症", "是个妹子，男朋友是个程序员（不知道现在是不是老公）\r", "记得来 V 站打过广告，我还和妹子聊了几句。。。。", " 你咋根据微信文章推断出她的 V ID 的～😒", "  其实很简单，首先扫下微信二维码关注下，然后微信会有个提醒是嗨你好，我是 beryl 。。。。等很长\r", "第二 V2EX 个人用户主页都是 ", "    直接替换 ", "\r", "发现发个三篇文章，第一篇是宣传公众号的。。。其实就这么简单", " 小柯南呀你。我可以根据你的头像推断出你喜欢赵奕欢。 0o0", " 刚才去你的网站看了下。然后看了你的简介。厉害呀。专注于安全的。我也对网络安全感兴趣。果断关注了。"]},
{"content": "", "reply": "20", "tittle": "小程序好火啊，是不是该给自己的 APP 也搞一个小程序版呢？另外求推荐一款不坑的后端云，适合个人创业前期不花钱的那种。", "comment": ["所以你说的已有的 APP 也是没有服务端的？", "个人创业不花钱？", "不花钱，不坑\r", "美国也没有这样的美事啊", "你知道为啥没有么？谁敢做这个，不被羊毛党剪破产才怪。", "其实国外是有的，免费、功能受限，虽有坑、但能用。但被大量用于科学上网之后。。。", " \r", "这不是挺多的吗？ LeanCloud bmob DroiBaaS 不都是免费的后端云吗？ DroiBaaS 是最新推出的貌似还有送代金。可以先申请下来再看看。", "个人没法申请微信小程序-_-||", "个人创业不花钱？大家都当老板", "楼主想弄小程序？\r", "\r", "先开一家公司", "Google Play 上的微信还没有。。", "有那种前期不花钱，但是后期不能迁移去别家而且要分成的。", "小程序从注册到审核通过遇到的那些坑 ", " D 大", " 你好..", "Maxleap, DroiBaaS, LeanCloud, Bmob 是在知乎上看到有人在讨论的\r", "LeanCloud 讨论多些， DroiBaaS 刚出的样子，不过似乎很有竞争力。。。", "国内的 BaaS 基本开发阶段都可以做到免费，用户上来了才收钱的样子。本来的话会推荐 LeanCloud 和 DroiBaaS 两家，但是 LeanCloud 突然大涨价，强制每月最低消费 900 ，已经对初创团队和个人开发者非常不友善了。那家 DroiBaaS 最近在做活动，优惠蛮大的样子，而且单价在几家比下来也是最低的，之前有在 CSDN 看到别人做读写测试，性能也是几家里边最好的", "免费的后端基本上是没法用于生产环境的，个人玩玩还差不多。", "小程序是不能个人注册的吧？利益相关，睿江云销售，目前我家的云充多少送多少，按日消费，暂时没免费活动，但也不坑你，强制使用多久。", " 恩，基本也就是开发时候免费，用户量上来了总归要补点的。重点就是不要被强 X ，明明我那点用户一个月只要 50 块的资源就够了你非要收我 900 ，那你就去吃屎吧"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h3>页面底部引入 require.js 和 main.js</h3>\n<pre>&lt;script src=\"require.js/2.3.2/require.min.js\" defer=\"\" async=\"true\" data-main=\"js/main\"&gt;&lt;/script&gt;\n</pre>\n<h3>main.js</h3>\n<pre>require.config({\n\n\tbaseUrl: 'libs',\n\tpaths: {\n\t\tjquery: 'jquery/2.2.4/jquery.min',\n\t\tbootstrap: 'twitter-bootstrap/3.3.7/js/bootstrap.min',\n\t\tsuperplaceholder: 'superplaceholder/0.1.1/superplaceholder.min'\n\t},\n\n\tmap: {\n\t\t'*': {\n\t\t\t'css': 'require-css/0.1.8/css.min'\n\t\t}\n\t},\n\n\tshim: {\n\t\tbootstrap: {\n\t\t\tdeps: ['jquery']\n\t\t},\n\t\tsuperplaceholder: {\n\t\t\tdeps: ['jquery']\n\t\t}\n\t}\n\n});\n\n\n// bootstrap\nrequire(['bootstrap'], function (bootstrap) {\n\n$('[rel=tooltip]').tooltip() // tooltip\n$('[rel=popover]').popover({trigger:\"hover\"}) // popover\n\n});\n\n// superplaceholder\nrequire(['superplaceholder'], function (superplaceholder) {\n\nsuperplaceholder({\n\tel: keyword,\n\tsentences: [ '关键词 1', '关键词 2', '关键词 3', '关键词 4' ],\n\toptions: {\n\t\tletterDelay: 80,\n\t\tloop: true,\n\t\tstartOnFocus: false\n\t}\n})\n\n});\n\n</pre>\n<h3>首页 HTML</h3>\n<pre>&lt;input class=\"form-control input-lg\" type=\"search\" id=\"keyword\" name=\"keyword\" placeholder=\"\"&gt;\n</pre>\n<p>效果如： <a href=\"https://kushagragour.in/lab/superplaceholderjs/\" rel=\"nofollow\">https://kushagragour.in/lab/superplaceholderjs/</a></p>\n<p>以上，一切正常</p>\n<h3>次页&amp;其它页</h3>\n<p>其它页面当然也同样引入了</p>\n<pre>&lt;script src=\"require.js/2.3.2/require.min.js\" defer=\"\" async=\"true\" data-main=\"js/main\"&gt;&lt;/script&gt;\n</pre>\n<p>但是报错， Uncaught ReferenceError: keyword is not defined</p>\n<p>如图</p>\n<p><img alt=\"546664ED-35A7-4515-A99A-B36AE47E899A.png\" src=\"https://ooo.0o0.ooo/2017/01/11/5875b9662e04f.png\"></p>\n<p>因为只有首页才有 input 定义了 id keyword ，其它页没有\n不太会用 requirejs ，求指教</p>\n</div></div>"], "reply": "18", "tittle": "想请教一下 require.js 的问题", "comment": ["这是 JS 语法错误呀，先 document.getElementById 呀", " ....", "原因不是那个 superplaceholder 的配置里的 el: keyword 导致的么，你既没有全局的 keyword 变量，也没有一个 id 为 keyword 的元素……", " 是啊，原因是在这，首页 <input class=\"form-control input-lg\" type=\"search\" id=\"keyword\" name=\"keyword\" placeholder=\"\"> 中的 id 实际就是。这个页面一切正常也不报错，但是次页 因为没有 input 和 id keyword 就报错了，所以，不知道怎么搞了。", "看一下 superplaceholder 的配置参数，拿其他地方的例子比对一下", " 嗯，但这跟 superplaceholder 的配置参数没啥关系了！很显然就是，引用 requirejs 后，这样来写 是全局的，所以像其它次页 如果没有定义这个 id keyword 就会报错。", "头像似曾相识 ", " 帮我解决问题，我 都是 你的！", " \r", " \r", " \r", " \r", "\r", "其实还是 按需加载依赖的问题，第一次用 requirejs ，求指教", "1. superplaceholder 在报错的页有没有用，没用就想办法别加载\r", "2. 如果有用，那为什么会没有 keyword 这个元素，在报错的页应该是用哪个元素\r", "\r", "你告诉我是 1 还是 2 我再看看问题……", " \r", "1 、在报错的页 就是因为没有定义 id keyword ，因为是全局引用了\r", "<script src=\"require.js/2.3.2/require.min.js\" defer=\"\" async=\"true\" data-main=\"js/main\"></script>\r", "而当中的 main.js superplaceholder 的 el:keyword 其实就是 input 里 id keyword\r", "<pre>\r", "require(['superplaceholder'], function (superplaceholder) {\r", "\r", "superplaceholder({\r", "\tel: keyword,\r", "\tsentences: [ '关键词 1', '关键词 2', '关键词 3', '关键词 4' ],\r", "\toptions: {\r", "\t\tletterDelay: 80,\r", "\t\tloop: true,\r", "\t\tstartOnFocus: false\r", "\t}\r", "})\r", "\r", "});\r", "</pre>", " 所以 我的理解是，这个需要做按需加载依赖的配置！次页没有 input id=keyword 那么就不要加载 main.js 里的 superplaceholder", " 您可能一直都不知道 keyword 到底是什么玩意儿。。。主帖写的了，效果 效果如： ", " 你的 main 同时用于 2 个页，其中一个页需要 superplaceholder ，一个页不需要，自然是要你的 main.js 写逻辑来判断的\r", "\r", "if (document.getElementById('keyword')) {\r", "    require(['superplaceholder'], ...)\r", "}\r", "\r", "这是很基本的程序逻辑，和 requirejs 也没啥关系", " 谢谢，我刚才也是这样来做的 虽然看起来解决了问题，但貌似失去了使用 requirejs 的初衷，本来用它就是想做库的按需加载依赖管理。因为第一天用 requirejs ，所以没太深入理解", " requirejs 的按需加载不是这个意思……如果你的 superplaceholder 还依赖其它的东西，它能帮你把这些依赖加载进来而不把其它不需要的一起下载，这是它的作用，但最入口的那一次判断是你要做的", " 嗯嗯，谢谢指教！正在看文档！非常感谢你", "keyword  上下文都没有，加个两引号可好？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>工作也差不多好几年头了，如今孩子也要出生了，车也换了个骚气的，房子也勉勉强强买下来了。我现在终于可以静下来想想我这几年学习和使用的语言了。</p>\n<p>我的一个语言其实 C/C++. 那会刚出道，对于语言也站在越是贴近机器，就越高级。但是，但是，但是发现 C 在当时就业来看，被 java 完虐，就是放在现在，也差不多如此。而且我对于 C 的入门也是那本红色的《 C Prime 》第四版 -- 是我在杭州的图书馆门口的旧书摊上淘到的。但是到手后，花了 40 元钱，那个开心啊。</p>\n<p>后来去深圳，工作需要，开始 java 的使用。一则呢之前有学习过 java ，二则能 java 当时流行的是 1.5 版本，很多特性都可以在 c++中找到原型。所有理解起来也快。而我学 java 的入门则是《 think in java 》，那本书事无巨细，简直是走火入魔啊。</p>\n<p>那会很多新语言也开始崭露头角， ruby 啊， python 啊， PHP （你敢说 PHP 是世界上最好的语言，我就打死你信不信）等。那时我接触了 scala 。但只是属于兴趣性的看了下。并没有然后。一直到后来我加入一个创业公司，然后开始正式在工作使用 scala + playframework 。怎么说呢， scala 真心比 java 好用，而且对于函数式的编程支持也不错。加上后来的 Akka-actor ，在异步方面也很是 nice 。</p>\n<p>在创业期间，和同个公司的前端同事一起讨论语言的特性。这个家伙能喜欢 coffeescript ，而我则认为不够地道。所以我列举了 ruby 的若干好处，什么君子协定啊，以人为本啊。这个具体可以看看《松本行弘的世界》。而 ruby 的元编程， lambda ，以及我还是要在说的以人为本的思想也对我后面的编程产生了不小影响。</p>\n<p>后来呢，后来呢，后来就来阿里了。开始也是写 java 方面的。后来发现做我桌子前面的那个不起眼的前端居然是推动国内 node 以及前后分离的先锋。既然大牛在身边，肯定要互相交流，学习。学习着学习着，额，就开始做前后端分离（当时确实刚好适合），而语言自然选择了 node 。目前也一直在开发。在阿里现在，基本上代码一部分用 node 写，一部分用 java 写，俨然一个全栈的感觉。</p>\n<p>现在呢，我已经学完 golang 基本语言和范式，也尝试了写了一些代码。真配上 docker 化的大潮，微服务上 go 的使用必然是一个很好的选择，所以进行中呢。</p>\n<p>想必看到着的朋友有兴趣，那么不妨联系我 xuyifeng11@gmail.com 。\n我现在开发的 AI 领域的智能产品 - 阿里小蜜。</p>\n</div></div>"], "reply": "31", "tittle": "node java scala golang python ruby 我学那么多的语言有什么用？", "comment": ["直接拉到下面 好吧", "于是是个阿里招聘贴？干嘛不发到招聘节点", "道理我都懂，可是 PHP 真的是世界上最好的语言→_→", "结尾的转折有些突兀，不够好", "小蜜有用 golang 么", "我的一个语言其实 C/C++. 那会刚出道，对于语言也站在越是贴近机器，就越高级。------ 这句话貌似说反了?", "牛气", "PHP 真的是最好的语言，因为大部分的开发都是面向业务驱动的。\r", "现在 PHP 在这方面能做到 Java 的三四倍的开发效率，至少在我们项目里是这样的。我高中毕业那时候开始学 Java 的，接触 Java 也近十年了，只有去年开始学 PHP 之后，才把自己很多在框架层面的想法得以实现。\r", "PHP 可以在面向过程和对象方面无缝切换，不俗的动态语言特性以及简练本质的语言内涵，让人在设计 Web 框架的时候醍醐灌顶。 PHP 7 之后的静态类型的增强，也可以大大提升了业务代码的规范。\r", "而且随着 Swoole 的底层协程的成熟和天然支持分布式横向扩展的 TiDB 数据库发展，也将使 PHP 在高并发的业务驱动领域游刃有余。\r", "普通开发么，就使用 FastCGI 方式部署，简单耐操，一上传文件就生效。", " 当时的理解。觉得越是底层越牛逼", " 其实是顺便发下招聘贴。主要是还算分享下多语言开发的心得。就目前来说， node ， java ， go 在不同场景使用，觉得很有趣", " 正在用。应用 docker 化，所以有些地方会用", " 来人啊，这里有个异教徒！！！！", " 这里有还有个异教徒，兄弟们，操家伙", "现在人工机器人做的普遍撇的很 还是调戏京东真人客服好玩", " 少年，在你的手机上，在淘宝中，试试  [我的小蜜] 你会有惊喜的。", "没有银弹", " 你对面的不会碰巧是朴灵吧。。。", "这个招聘广告写的不错啊", "这文字内容跟 python 和 php 有半毛钱关系么", "PHP 真的是世界上最好的语言", " 还没到异教徒这么夸张吧。只是思考久了之后，觉得很多程序开发的复杂度都是人为造成的，而且自己在 Java 方面又没有好的方式去解决。\r", "比如，我就认为 Spring 框架是过度设计的典范。现在自己写代码都是强制要求在同一层领域之内，类继承不能超过 3 层，否则就算设计有问题，可以找到更好的方式去实现。这也符合，我对“三生万物”的理解。", "呵呵，我就只有呵呵了", "PHP 真的是世界上最好的语言 +10086", "我桌子前面的那个不起眼的前端", " 我也就说笑而已，对于语言，我一直观点是最适合的场景用最适合的语言", "语言说白了只是一种表达的工具，没有好坏之分，只有合不合适。", "想打广告就打，写这么多太累....", "在这问题上纠结还不如设法让这些语言各司其能、各尽其用。", "看着 id 进来的。。。", "看你这个 logo 我就知道是谁", "  有兴趣阿里做智能产品吗，这里有酒有肉，有技术，没有妹子"]},
{"content": "", "reply": "51", "tittle": "你们的公司都要求写年终总结吗?", "comment": ["不写。。。\r", "周报都不写，推行不下去\r", "行政的还叫了人开个会想让我们写，技术的领导在会上说写这个没用，他一周汇总一次就够了，其他人纷纷附和 :-)", "有绩效考核，绩效考核表里要对半年的工作进行总结。", "体制内必写", "写了个，绩效考核，不知道发多少钱", "不写，写个毛线。。。", "有绩效考核 里面需要写", " 你牛逼啊", " 你们领导敞亮", " 感觉还在使用传统管理模式的公司都还在搞这些吧", "会写年总部的吧，周总结", "之前是这样的：每天早上有个晨会，晚上下班前要群里发日报；周五提交周报；每月上交工作总结；每季度上交上季度工作总结及下季度工作计划；年底要交年底工作总结，向领导述职，同时编写下一年度工作计划。\r", "\r", "嗯，有一段时间就是这样，每天上班都感觉蛋疼的要死，不是因为混日子，是因为特么的一半时间都在计划或者总结，干活的时间越来越少了。", "给公司写确实没用,  都是套话,  但是给自己写确实是有必要的", "我司和年终奖挂钩，你说写不写？", "总结得看是为了搞管理形式，还是真心要看成果，做规划。\r", "\r", "至少，自己认真做一次年度总结，也是对自己的负责", "写了，内容写一年来干了哪些东西哪些项目。话说在总结之前， leader 觉得你没干啥事打酱油的，没啥好脸色。但是总结完成之后， leader 才知道你做了好多东西，态度确实改变了不少", "写了，上网随便 copy 的一份。这个其实就是 HR 的工作，不然人家怎么忽悠老板呢", "昨天给我们发 excel ，让我们给同事打分，注意是 excel ，每个同事七八项内容，十多个同组同事，这要认真得分少说半个小时，最好还要指出同事们的缺点，匿名的。\r", "\r", "怎么都觉得有种人人揭发，人人喊打的架势。", "写啊。。。我觉得其实写写也挺好的。。。别上来就反对啊\r", "就当写一个日记 写给自己看的啊。。", "我也写了，开始是拒绝的，后来写完，发现职业生涯的不足之处，然后定了一个小目标。", "程序员不应该些，版本管理工具上都有这一年做了什么。当然个人写写博客总结一年还是可以的，做成公司任务就没必要了。", "刚写完，还要求做 ppt ，我让我们部门就用 word 写一份就 ok 了", "离职\r", "下一题\r", "\r", "这个，个人总结和团队总结还是非常必要的，写 PPT ，上去讲", "有的，叫半年度 OKR 总结。", "写年底绩效评估，和年终奖以及来年工资涨多少挂钩，必须认真深刻的写！", "每天有日志，项目完了有总结，年终也有", "刚刚收到通知，周一要交 16 年的总结和 17 年的个人规划。然而十分不想写。", "年会都不开了，年终奖更没影\r", "年终总结还是要写的", "不写。。。 \r", "日报周报都不写，没人鸟", "写了 260 个字。。有要求写周报，基本两周才应付以下", "写日报周报的都是傻逼公司", "老板叫我们写年报，今年总结和明年规划，晚上 7 8 点说的，让我们晚上交。。。。够傻逼吧，\r", "然后我本来就准备辞职了，拖了 2 3 个星期，又让我交的时候直接辞职了", "不写，写在绩效里。。。", "自己做 fmea 还差不多，还能方便他人。其余总结都是扯蛋。", "我从毕业后的第一个公司离职就是因为要每天写总结，每周写总结，每月写总结……\r", "至于每年的总结我还没到一年就炒了那个老板……\r", "\r", "要的总结不是那种每天做事儿的 summary 是那种类似要有感想有肉的随笔性质结合做的事儿……\r", "summary 这种是必须的", "公司没让写，自己对过去一年的经历写了个总结", "16 年总结,17 年计划\r", "写起来至少花个半天,所以我把简历先写了[doge]", "去年写了五千字，不知道领导看没看，反正待遇没变化。今年于是写了六千字", "一份总结用了 3 年。。每年就加一小段", "写啊，不写大 Boss 那知道你干过什么啊！年终奖怎么给你发？来年你怎么好意思要求涨工资？\r", "话说不写年终总结我都不知道自己干过这么多活。", "公司不写，自己会写", "写 美其名曰 Performance Review\r", "还要求 manager 跟每个人 1-on-1 总结过去一年 展望未来一年", "没年终奖写什么总结(手动香菇滑鸡)", "网上下个模板", "不写周报的程序员往往都是工作效率欠缺的， 不信回测一下自己的时间管理", "上个公司写，在网上想办法抄了一篇，然后开会被点名说......", "活都干不完，没时间写", "于情于理，肯定要写年终总结啊", "2016 年我还记得自己为什么加入 XXX 吗？（陈述）\r", "这是一家气氛活跃，有激情，开放的互联网公司，在这里可以学到很多以前从来没有的东西。\r", "2016 年我在 XXX 对应的岗位上这一年，我做出了哪些成果？（业绩或成果先总后分，年度-月度请举证具体的数据和事实）\r", "1 ， XXX 整个系统的维护，模块的修复升级。 2 ，\r", "2016 年我在 XXX 奔跑中收获哪些成果？（先总年度，后分月度，截图例证）\r", "2016 年我为 XXX 做出了哪些卓越的贡献？（突出成就请列举）\r", "2016 年我在 XXX 个人能力上得到了哪些提升？（认知和技能，请列举和对应的举证）\r", "2016 年我在 XXX 做过的最具成就感的一件事？(陈述并举证)\r", "2016 年我在 XXX 发生的最难忘的一件事?（陈述并举证）\r", "2016 年我在 XXX 最感恩的一个人或一件事？（陈述并举证，如无可不写）\r", "2016 年我在 XXX 最想对这些同事说声：“谢谢”，因为他们？（陈述并举证）\r", "2016 年我在 XXX 发现还有很多的不足需要提升？（请列举不足点和提升方法）\r", "2016 年我在 XXX 创业的第一年一起成长，我觉得 XXX 现有哪些方面做一下调整，对公司会更好？（列举）\r", "2016 年从你的视角，如果评选对 XXX 成长最有贡献的伙伴你认为是哪几位及原因？（举证）\r", "2016 年我最想在年会上听到总经理分享什么？（推荐）\r", "2017 年我希望自己在团队中担当什么角色，为什么？（举证）\r", "2017 年我希望在 XXX 实现哪些目标？（请一一列举并对目标进行具象和量化）\r", "2017 年我希望总经理可以做出哪些调整，对 XXX 的发展会更好？（采纳后获得谏言奖）\r", "2017 年我对于 XXX 的奔跑目标和形式有哪些建议？（请具体，采纳后奖励）\r", "2017 年对于 XXX 的发展你有哪些建议觉得可以加分？（附加）", "这东西就不能自动扫描 git ，扫描邮件，以及其他一些输出然后自动生成吗？否则我年度总结写的再牛， git 里没几行代码，也很少有人邮件找我，不是任我胡吹了？", "1.写日报发钉钉群； 2.在公司的 PMS 写日报； 3.周报； 4.每月绩效考核表； 5.加班 /调休申请表...", " 这个模板可以"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>本人高中毕业三年，玩了两年多。后来想想成为一个软件开发者真不是那么不现实，第三年开始自学编程，先后看过《 C Primer Plus 》（中文版），《 Objective-C 基础教程》（中文版），《 Cocoa Programming for OS X 》（英文版，能看懂，但只看了十分之一）。\n然后现在手头上有一台 MacBook Pro 15\" mid-2015 ，前几天先后开发出了两个 Mac 平台的小字典应用（调用了网易有道的 API ），和一个查字典的应用（调用 trackingmore 的 API ，为什么速度很慢），都很不完善，我的信心，甚至是现在在这里发问求意见的信心，都是来自于那个小字典应用，打那以后我觉得我对开发软件有了最初始的认识，毕竟以前都是很枯燥地在学习语言。然后有信心后，我觉得自己又不安定了，自己的眼界开阔了一些，目标也开阔了一些。\n然后问题来了，虽然我最爱苹果（很久以前也装过黑苹果，很喜欢苹果），但是貌似真的是得不到的永远在骚动，昨天就买了配件准备配一台 Linux 主机，想装 Ubuntu 来。\n现在没有职业，希望以后工作也能自由一点，当然要自己喜欢。\n现在有三个想法，首先是留在苹果平台继续学习开发 macOS app ，毕竟竞争大，不是那么简单能够赚钱的。二是投奔 Ubuntu 去，毕竟很久以前就喜欢 Ubuntu 了，如果坚持一段时间能够开发出一个好用的 Markdown 编辑器那就好了，因为我很喜欢 Markdown ，喜欢开源。\n真的到现在也不知道程序员到底有哪几类。。。年龄也 23 了，虽然一直在学习，可也一直在纠结，明天早上希望能不再纠结了。谢谢大家，能不能给我一些意见。\n或者可以说说哪些职业更有前景，看着我自己怎么这么傻白甜。。。</p>\n</div></div>"], "reply": "15", "tittle": "职业规划，请求大家帮忙给给意见", "comment": ["先找份工作。", " 在表哥外贸公司", "积攒点经验", "逃离 IT 行业", " 对，我想着是先多学习，然后能够自己玩", "先拿大学文凭", " 哈哈啊哈，实在不行就跟爸妈卖布去，真的喜欢 IT", " 或许吧，但我觉得无论在校内校外，只要有目标，并为之努力就不算浪费青春。事实上大学文凭估计是不会拿了", " 不做点好成绩出来真的只能自己玩了", " 等你真正入行了才知道，还是把时间留给生活的好", " 嗯，我知道程序员都不容易，走着看吧", "作为爱好就好了，偶尔上论坛聊天。", " 你说的可能对我来说是真理:)", "把大学缺的东西补下，补的过程中也会 知道自己到底喜不喜欢这个行业。", " \r", "你这句话换个行业也适用。。。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>入一块当备机？女生可以入一块防身吧</p>\n</div></div>", "<div class=\"topic_content\">万恶的 v ，这种 thread id 不应该屏蔽掉然后拿出来卖钱的吗 hhhhh</div>"], "reply": "64", "tittle": "落鸡鸭回来了，诺基亚 6， 1699", "comment": ["向黑恶势力低头了。\r", "\r", "PS 我是输入 thread id 进来的", " 抬头看了看。。。好 6 的 thread", "可以。 6 连号，可以拍卖广告了。", "下一台安卓机就是诺基亚了！\r", "(这个 thread 真是 6)", "官方说今年接下来还会推出几款机型，从这个低端机的水平来看，我觉得还可以期待一下后面的。", "情怀价", "333333 （逃", "鉴于当前国内手机市场发展的这么迅速，消费一千多可以买到许多参数看起来不错的国产手机。\r", "\r", "那么问题来了，大家会对 1699 的 Nokia 6 买账么 ...", " 诺基亚 6 除了 430 的 U 不大好看，屏幕、工艺什么的都还可以，适合不打游戏的人群。", "半年后 699", " [仅] 国内首发，感觉像是贴牌机呀", "333333 厉害了", "最长待机 32 天是怎么待得..", "不会忘记当年诺基亚第一部安卓机器给我们带来的伤痛……", "对于最多打个斗地主的我来讲 应该够用了吧~而且除了 U 我觉得其他都还可以吧", "nokia6 那家贴牌公司的域名是去年注册的。", "据说是富士康的皮包公司.....", "诺基亚第一部安卓设备 Nokia N1 给我留下了不错的印象，后续有旗舰机的话会考虑买", "6 连号啊。。。。。", "nokia 厉害的不是他摔不坏的质量吗，当然 meego 很棒.毫无亮点的 6 买了真是为情怀了.", " 这个不知道是广告，，，如果真的 32 天，还是可以考虑的。", "如果只是卖个情怀的话，希望还是 Connecting People 的开机铃声，握手画面。。。", "这链接真神了", "233333", "富士康贴牌机，系统才是最坑的", "贴牌妥妥的", "  @", " \r", "\r", "Nokia Lumia 920 是一代神机，当时完全可以正面对罡 iPhone 的，而且正值 iPhone 自己的 4s ， 5 ， 5s 青黄不接，不过可惜的是被微软这个猪队友给害了，那个木马真心是让人恶心！\r", "\r", "最后上个 Lumia 920 的神 PV ： ", " 当年的 WP 机器也是典型的高价低配坑掉了，当中诺基亚功不可没。完全是落后安卓一个时代的配置。\r", "要正面跟 iPhone 打也得有个跟 iPhone 相当的心啊", "如果 653+全网通的话，相信很多人会买单的， 400 估计就会有很多人等降价了", "喜欢 maemo 和 meego", "向大佬低头", "不是贴牌机，不是贴牌机，不是贴牌机。 Nokia 6 由 hmd global 公司出品，该公司由诺基亚前员工组成，现诺基亚公司有其董事会席位，授权其使用诺基亚品牌设计生产发售手机，因原诺基亚手机业务中生产部门被微软出售给了富士康的子公司，故新款诺基亚手机由该富士康子公司负责生产，简介详见维基百科。", "所以啥时候开始卖！", "只能说这个手机价格有点尴尬，也不再是之前高价转低价的“传统”了（还记得之前高价卖一万然后慢慢卖到一千么？……这还是一年。）造成很多惯性消费者都想希望等最新一代 iPhone 降价。当然淘宝也是造成诺基亚非常被动的原因（因为据说中国诺基亚是有禁止串货），为此保修问题经常被拒绝（好像是）", "黑莓不也是卖品牌贴品牌卖出去的嘛。", "就看是不是情怀了。", "这几天或评测关于 诺基亚 6 肯定多一些。", "据说跟原生系统比较像（请问 Google 全家桶？……）", "这对于我们原生党来说是亮点。（虽然对部分不懂用的部分人来说可能是坏点）", "明面上是诺基亚，实际上是富士康的贴牌手机，设计什么都是富士康做的，最后贴了诺基亚的牌子", "亮了。。", " 至今还再用 920 的路过", "iPhone 7 移动\r", "Lumia 925 联通\r", "\r", "都是主力机……\r", "但是 925 也该换了\r", "\r", "我就想知道 Nokia 6 的升级版本什么时候出。", "相信我，我坚决不卖挪鸡鸭的手机。不要问我为何，现如今的挪鸡鸭手机烂的可以！\r", "\r", "如果有其他品牌会做 windows （具体不知道现在移动版系统叫什么名字）手机，我也会买。\r", "\r", "我只是想证明，挪鸡鸭我一生黑！之前买的国行百元挪鸡鸭神机简直烂到爆！", "智商税系列……\r", "骁龙 430 拖 1080P ，连耍猴米都不敢这么干\r", "而且 incell 屏幕，已经可以预见一大波触摸失灵的返修\r", "\r", "本质就是富可视贴 nokia ，只卖中国，京东报销", "感觉最近几年诺基亚总是跟不上形势，热衷于研发过气儿产品。", " 我也希望有 Google 全家桶。", " 看官方视频，做工真不错。。。", "骚黄的 920 还藏在柜子里面。", "当你们用 nokia 的时候我在用 blackberry ，所以没情怀……", "纪念帖留名", "这颗 u 简直 666 ，卖情怀也不能这样子阿，真当大陆人傻钱多吗", "可以考虑入一个当二奶机，不过也只是考虑...(逃", "还是先观望一阵", "赞 url\r", "然后，如果诺基亚出侧滑（如 n97 ）手机的话（ android ），我是非常乐意收藏的。\r", "毕竟和同类直板机竞争，也就 logo 值钱", "  @", " 论工业设计， Nokia 是唯一可以对罡苹果的，领导层不给力，可惜了一大票工业设计的工程师。苹果举证三星抄袭的时候，就是拿的 Nokia 当例子。这些年来，唯一让人眼前一亮的产品： iPhone 4/4s ， Nokia Lumia 920 ， MacBook Air ，小米 MIX 算半个吧。要是 Nokia 早日除掉木马上 Android ，自己弄个 UI ，也就没三星什么事了。 Nokia 内部管理绝对是出了很大问题，真是可惜了一票牛逼的工程师。", "当时苹果买断了整个铝外壳加工的产能，同期的三星 Galaxy S4 都是一股子塑料感，能把聚酯材料做成 Lumia 920 那个样子的，除了 Nokia 没有别人了。", "没用过诺基亚的手机，当年流行诺基亚的时候我是用 HTC 的，，，钻石 1 ， G1", "什么诺基亚，其实就是富士康以前的富可视，那个牌子没做起来，就买来了这块金字招牌。。。。", "如果是 Sailfish OS 我還會考慮下", " nokia 内部根本没什么管理，大伙放松的很，整天就是闲扯淡", " 对， Nokia N1 的系统更新后不能 root 。", "699 可以考虑", " 哎，记得第一部智能手机还是 5320 （还是用的我弟淘汰下来的）。当时满满的惊喜啊", " 不得承认， N 粉太多了，昨天 JD 预售 6000 多部，一会就没了。", " 我怎么觉得你说的是 Apple 手机。。。", " 653 的话，价格应该和 Samsung C9 Pro 差不多， 3000 左右了。", "333333  留名"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>在家呆了一个多月，我需要准备些什么来面对来年到深圳的面试呢？</p>\n</div></div>"], "reply": "2", "tittle": "深圳招 Python 的多不多，年后准备过去了。", "comment": ["不多， python 过时了（逃）", " 你要被揍，逃"]},
{"content": ["<div class=\"topic_content\">树莓派 3B 没有带 hdmi 的显示器\r<br>用网线连接 PC 和树莓派，分配给树莓派本地连接的接口 IP 地址，打开 cmd 用 arp -a 查看网络接口信息查找树莓派的 IP\r<br>已确认为树莓派 ip ，并且可以 ping 同此 ip ，但此 ip 未开放 22 端口，端口扫描后发现未开放任意端口\r<br>使用官方 Raspbian 固件和 Ubuntu MATE 固件相同\r<br>如何解决？</div>"], "reply": "9", "tittle": "树莓派不开启 22 端口", "comment": ["sudo raspi-config", "没显示器就换 arch", "raspberry 2 的镜像默认就是开了 22 端口的啊。难道 3 还要不一样？", "贴一些自己的回答：\r", "\r", "树莓派 Raspbian 系统更新信息\r", "\r", "翻译一下：\r", "\r", "2016-11-25 ：\r", "  *默认情况下禁用 SSH;可以通过在启动分区中创建名为“ ssh ”的文件来启用\r", "  *启用 SSH 时启用密码更改，默认密码不变\r", "  *包括 Adobe Flash Player\r", "  * Chromium 浏览器中的硬件视频加速更新\r", "  * Greeter 现在使用的外观设置，而不是 pi 用户的最后一次设置的背景图像\r", "  *更新版本的 Scratch\r", "  *从 raspi-config 和 Raspberry Pi 配置中删除 Rastrack 选项\r", "  *能够禁用图形启动初始屏幕添加到 raspi-config 和 Raspberry Pi 配置\r", "  *外观设置对话框制作标签，以在小屏幕上更好地工作\r", "  * Raspberry Pi Configuration 现在需要当前密码才能更改密码\r", "  *各种小错误修复\r", "  *更新固件和内核\r", "\r", "最新版本的树莓派系统，默认关闭了 SSH 功能，所以，你需要把 sd 卡插在 Windows/Mac 电脑上，可识别的分区上，创建一个空文件，名字是 ssh ，以开启 SSH 功能。\r", "\r", "\r", " 非常感谢", " 这个禁用真是蛋疼", " 查了一晚上，查到开始怀疑人生了", "\r", "我用最新的树莓派系统也遇到这个问题，掉坑里了", "sudo raspi-config\r", "高级选项里打开 ssh \r", "不过 目前我用 mac 终端\r", "ssh ", " 连接不成功\r", "ssh xx.xx.xx.xx -l pi 这个连接没任何问题\r", "好奇怪，还在研究中！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>将<a href=\"http://www.opendigg.com/\" rel=\"nofollow\">OpenDigg</a> 上小程序开发相关的项目整理到了 Github <a href=\"awesome-github-wechat-weapp\" rel=\"nofollow\">awesome-github-wechat-weapp</a>，看过很多 Github 的 awesome 系列都是创建一段时间后就不维护更新了，我们可以做到只要 OpenDigg 还维护，这个 awesome 系列会定期同步更新到 Github 。欢迎 star 和提交项目。</p>\n</div></div>", "<div class=\"topic_content\">链接是 <a target=\"_blank\" href=\"https://github.com/opendigg/awesome-github-wechat-weapp\" rel=\"nofollow\">https://github.com/opendigg/awesome-github-wechat-weapp</a></div>"], "reply": "5", "tittle": "做了个小程序开源项目库集合", "comment": ["可以，很小程序", " 其实主要就是个.d.ts", " 既然开源了就是希望更多人看到 总该写下描述和介绍信息，有个截图什么的，否则很难让人 star 的。", " 因为还没搞完......，编译那一块的还在想怎么处理，做不能收到复制文件"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>为什么我的 ansible 在开启了 persist 的情况下，居然要 1.0-1.4s 呀\n而 ssh 居然只要 0.6s</p>\n<p>ansible sp -a \"echo hello\" 这种</p>\n<p>如果复制 ansible 的命令，居然只要 0.1s</p>\n<p>好想 ansible 一个连接只要 0.1s 呀</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "有人用过 ansible 没有？", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>比如<code>网易云音乐</code>, <code>摩拜单车</code>.....................</p>\n</div></div>"], "reply": "84", "tittle": "为什么国内的一些 APP 不在 google play 上 上架？", "comment": ["中国绝大部分安卓用户都上不了 google play ，所以在这上架没什么意义。", "网易云音乐是更新就上架，然后更新完了就下架了，基本这个节奏。", "懒", "我觉得还有个原因吧，国内应用大多喜欢在后台搞搞小动作，上 google play 估计审不过", "盛气凌人", "主要还是国内没什么人用 google play store ，我个人觉得 google play store 权限管理更严格也导致厂商不乐意上架", "12306 ，用过都知道", "用 CM13 隔三差五提醒你某某非 google play 市场下载应用危害手机安全 要求删除..", "以至于还得在下载一个国内的市场。无奈", "前几年的时候，国内地址无法在 Google Play 注册开发者，必须使用香港或海外地址。", "没有国际化需求的 app 都不怎么上架 play", "自从有了小程序  京东 滴滴 美团 没在 play 上架也无所谓了", "上架一般都是市场推广人员做的，像 google play 需要翻墙，三星应用商店界面不友好，再加上基本没量，所以很少有推广人员主动上架，除非 app 类型很特殊或面向海外。。", "网易云音乐是有的\r", "上架 google play 还得重新做个版本，目前的版本肯定是上架不了的。你拿着注册开发者账号的账单，找财务找产品经理找领导去报销，他们会说，这是什么账单上面的网站都打不开怎么能给你报销。", "网易云音乐买的版权是国内的。。。上 play 干啥", "国内的这些权限一堆能通过？分分钟被下架的节奏！", " 你黑的开心就好", "国内下的软件 googleplay 经常报危害软件，每次付房租都得重新下个 app 然后删了......", "产品经理懒惰，没别的原因，又没坏处的事情。", " Google Play 跟根本审核不出来，流氓软件巨头大众点评和美团（美团好像下架了），杀掉后基本是瞬间自启动，使用手段让软件保持工作中（绿色守护必须选择强制关闭），这俩软件傲立于中国流氓 app 之首。", "网易云音乐是搜索不出来，但在下在历史里可以看到的，或者用酷安页面跳转到 play", " 为毛在上面搜不到啊？", "国区 play 商店是有网易云音乐的", " 此商品无法在您所在的国家 /地区购买或下载", " 香港有吗？", " 我用香港的 VPN 试试", "不舍得花注册的费用？( 还是说他们认为用他们产品的人不会上 play 商店", "我连微信都是此商品无法在您所在的国家 /地区购买或下载", "为啥要强加？搞笑", " 强加->上架", " 香港不清楚，改 hosts 打开的就是国区了。不过还得看 google 账号是哪个区的。我号登上国区自动切到美区，也是没有网易云音乐的。", "网易云音乐上架了。只有国区可下载而已", "网易云音乐一直可用啊😯", "什么是 google play ，从来没见过啊", "主要原因是某墙。\r", "\r", "其他原因有：国内应用乱要权限、后台自启互相唤醒等", "1 、作为 QIANG 内国，大多只软件都只做国内市场也就不考虑 PLAY 了\r", "2 、国内软件都是流氓，因此也通不过 PLAY 审核，以至于像 QQ 、淘宝之类的想上 PLAY 做国外市场还得推出一个国际（良心）版本", " +1 @", "  +1", "很多通不过审核", " \r", " \r", "\r", "你们是什么样的公司 上架到市场要产品经理决定？没有负责市场渠道的？不要乱黑啊", "从我们的经验来看，主要原因就是国内的第三方 SDK 完全没底裤，会偷偷的收集用户隐私，这个会导致 APP 无法上架。\r", "\r", "我们之前就是因为 ShareSDK 收集隐私， Google Play 将我们下架。", "一般说来两个原因：\r", "\r", "1 ， Google Play 的中国客户少\r", "2 ， Google Play 对应用有一些非常基本的要求(隐私方面，有些功能 /行为不允许)\r", "\r", "所以有很多境外用户的国产应用，怎么都会在 play 上架。高德地图和百度地图，支付宝是典型例子，它们都被 play 下架过一次或多次，但会为了重新上线而改正一些做法。\r", "\r", "我们认为国产应用多是毒瘤主要是因为那些应用不符合 2 提到的基本要求。\r", "\r", " \r", "\r", "UC 还要厉害，它在 native 层用了一个很巧的方法，能绕过强制停止", "  ", " play 有国区？", "版权问题", " 效率高、盈利好的创业公司。", "小团队里产品也负责渠道不是很正常吗…", " \r", "hahaha 不知道为什么\r", "\r", "说权限审核的太扯了， google play 实际非常宽松，搞小动作好多都检查不出来，一般不让上的版权问题居多", "说的一般人能打开一样→_→\r", "Google 这网站不存在", " 你曾经在没锁区的时候装过 所以会一直保留", " HOSTS ？", " 如何去国区？", " 一旦锁外区了就回不去了", "微信更新也比国内市场慢几天，比如说现在大家都用上小程序了， play 上还没有更新。", " @", " \r", "那不见得，比如 Google Play 上搜“央视”“新华”就能搜出一堆应用", " Google 账户没锁区的话改手机 hosts 就行了。 root 后可用 go host 软件改", " play 上的那个版本前几天更新的那次就可以用了。大概还没推倒你。", " 只要以前国区下过，锁美区一样能下，但是那些没下载过的就没办法了……只能 apkpure 解决了……", " play 上还是 6.3.32 ，没有小程序", "用户又打不开 google play ，除了香港用户。\r", "想上架又通过不了审核。\r", "\r", "国内各大 Android 应用商店没看到有哪家会审核开发者是否滥用权限或访问用户隐私，以致于出现不给权限就不让你用的流氓行为。 Android 的应用环境几乎开放到没有“警察”去管理其行为。  \r", "\r", "工信部倒是每季度 公布“不良 APP ”，记得百度成为了 BAT 里唯一一个上榜的（百度手机助手,百度浏览器）。\r", "\r", "我宁愿工信部插手管这事。", "国内安卓生态和国际上完全不一样，最起码流氓（滥用）行为是可能会被人举报的，但是在国内这些流氓行为又是应用生存的根本。\r", "GFW 下，服务国际用户就要有国际的计算资源，不一定收益能跟得上，性价比低。\r", "分成问题，虚拟服务的话需要使用应用内支付， Google 会抽走大概 15%的交易额，心疼吧？\r", "应用内好像是不能集成自动下载更新的逻辑的，只能从 Google Play 上下载更新，或者链接到 Google Play 。\r", "\r", "总之呢，国内 Android 市场很大、很自由， Google Play 相对中国开发者来说市场很小、限制很多，不过情怀做 APP 的话在哪里发布都会受欢迎的。", " play 有国区的，改 hosts 就行。国区和其它区最大区别就是没有除了应用以外的东西，比如电影、音乐这些。你看这个你就知道是不是国区了。未登录状态下，访问 play ，再判断。", "说句别的，网易云音乐在墙外很多音乐由于版权无法播放- -", " ...大清亡了大兄弟。 5 号 play 上更新的，微信用了分批推送 没推送到你而已。", " play 的微信上周升到 6.5.3 了", " 再说句别的，买个会员什么都有了。", " 大学的时候用过修改 hosts 好慢，现在都用 ss ，没想到现在用 hosts 这么快。不过退出了还是日本区。。不管怎么清除 dns 还是重启都没用😂", " 对， google play 的 WPS 比国内应用商店的干净很多", "我今天想看直播准备去下个直播软件但是 google play 里面居然没有几个常见的直播软件，我相信更大一部分是因为权限问题，自己在手机自带软件商店下了一个熊猫 TV 第一个要求获取的权限居然是定位 一直播平台想要看我位置我要不知道是要干嘛", "上架了没用户，没用户还上个屁", " 新版本没推送倒你而已。", "微信确实没有更新啊，难道是中国区更新了？ \r", " \r", " \r", " \r", " \r", "灰度推送", " 这是传说中的八字不合，五行相克么。。。 ", " ", " 昨天刚刷完机从国区下载的，有小程序啊", " 当然有，而且中国区连付费应用都出现了", " 对啊，所以我怀疑是不是只有国区更新了，我是美区毫无动静。", "提供两个 Google play 提示有害要求卸载的 app ：京东金融，联通手机客户端", "網易云 我這裡看有啊~ 用了香港 VPN 看就沒了~", " \r", "\r", "感觉还好吧。", " 你用的哪里的 VPN", " 如何进中国区、", "国人使用居多的话，上了也没用。。。。不是谁都可以翻墙。", " 据说修改 hosts 可以进"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>有人说，处理文件的时候用 try except ，那很不 pythonic,用 context manager 就很好\n例如：</p>\n<pre><code>try:\n    with open('D:\\nothing_here.exe') as fd:\n    # do something here\nexcept Exception as error:\n    #handle error\n</code></pre>\n<p>也有人说 for 循环里写 if 也很不 pythonic ，应该用列表推导。我就想听听大家的意见</p>\n</div></div>"], "reply": "15", "tittle": "你们认为怎样的代码才算是 pythonic", "comment": ["最近有个项目需要用到 python ，原来这写到一列的代码叫做列表推导，酷炫！😂", "在 python 控制台中输入 import this ，就会输出 python 之禅\r", "\r", "个人理解就是使用 python 的特性使得代码更加的高效，简洁，可读", "你能跑，别人看得懂就行了", "不兼容，低性能， list comprehension+list slicing+参数缺乏类型甚至鼓励忽略类型的写法+第三方库缺乏 typehint 等导致读不懂，编码灾难，第三方库都统一安装到全局 py 二进制，游标卡尺，没有办法格式化代码", " \r", "然而 this 的源码一点都不 pythonic 。。。", "啥是 pythonic ， guido 去 google 还得学怎么写规范的大家能读懂的 python 编码风格", " 这就尴尬了。", " effective python 里说了，不要过度使用列表推导，改用 for 循环嵌套就用 for 嵌套", "如果你认同在 production 代码中去掉不必要 try except ， context manager 就是更好的选择\r", "\"也有人说 for 循环里写 if 也很不 pythonic ，应该用列表推导\", 个人认为这个可能要分情况吧， list comprehension 目的是生成 list ，如果 for 循环的目的不是生成 list ，那么还需要用到 list comprehension 么？难道 for 都需要写成 list comprehension 才算 pythonic... 更不用说其中是否包含 if. 而且 list comprehension 的性能也是在生成 list 的时候才比一般的 for loop 更快，如果不生成 list 那么 list comprehension 的性能是比 for loop 更差一些。\r", "当然最重要的一点是，如果工作在一个团队中，代码是需要容易理解的，追求风格之类的考虑很难说是重要的.\r", "其实 pythonic 这种提法，我个人认为是为了让大家\"正确\"使用 python ，使用 python 中最优的解决方法，如果你越接受这种\"正确\"的解决方法，那么你就越 pythonic ，是这么个意思吧？", "你用 golang 就不会出现这么无用的问题了", " 啊，刚入门，还在熟悉语法中~", "总结起来还真不好说，可能结合几个例子会合适点。我自己感觉的话就是，一个算法的几个代码实现中比较简洁又不会过于依赖语法糖导致难懂的那个。", "能用原生语法、标准库的，就用那些", " 对，只要查一下 if err != nil 的数量就行，哈哈。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>请问，滴滴打车 司机端使用的电话号码是虚拟号码，请问哪里有这样的服务购买？</p>\n</div></div>"], "reply": "14", "tittle": "滴滴虚拟号码服务", "comment": ["阿里小号，和多号。", " 可以集成在自己的 APP 里面吗？", " 这样的需求我就不知道了。", "像 58 同城，租房找房，双方都是一个其他的号码，是不是虚拟号码就不知道了", "滴滴用的七陌的服务好像，提供这种服务的有好多家", "找电信服务商就可以，可以生产动态号码。按需定制", "阿里的“私密专线”，容联云通讯的“号码卫士”（滴滴貌似用的这个）\r", "\r", "个人应该申请不到，我猜的", "容联云通讯 SDK", "yunpian 有\r", "个人开发者也可以用。", " yunpian 是什么呢", " 好的。感谢", " 好的", " 阿里的我申请了，申请不到", "自制就是了\r", "找电信签个多路电话 sip 接入"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>哈哈哈哈！！！当我说在写这边文章的时候，妹子已经追到了，哈哈哈哈哈！！！</p>\n<p>其实东西是一年前写的，妹子早就追到手了，当时就是用这个东西来表白的咯，二话不说，先看<a href=\"http://honggc.b0.upaiyun.com/romantic-words/index.html\" rel=\"nofollow\">效果</a>（点击屏幕可显示下一句）</p>\n<p><img alt=\"stars\" src=\"http://honggc.b0.upaiyun.com/blog/starsss.gif\"></p>\n<p>原文地址： <a href=\"https://hongguancheng.github.io/2017/01/11/romantic-words/\" rel=\"nofollow\">https://hongguancheng.github.io/2017/01/11/romantic-words/</a></p>\n<p>demo 演示： <a href=\"http://honggc.b0.upaiyun.com/romantic-words/index.html\" rel=\"nofollow\">http://honggc.b0.upaiyun.com/romantic-words/index.html</a></p>\n<p>github 地址： <a href=\"https://github.com/hongguancheng/romantic-words\" rel=\"nofollow\">https://github.com/hongguancheng/romantic-words</a></p>\n<p>背景地址： <a href=\"http://codepen.io/iamfrontender/details/yNVPeX\" rel=\"nofollow\">http://codepen.io/iamfrontender/details/yNVPeX</a></p>\n</div></div>", "<div class=\"topic_content\">看到很多人说字看不清的问题，我在 windows 上看了一下，是看的不是好清楚。。。然后换了个字体，提高了下字的识别度，加快了一下字的速度。。。</div>"], "reply": "130", "tittle": "泡妞神器，我把他称为程序员的浪漫哈哈哈哈", "comment": [" 是 ex 了，记得他 github 后来还出了另一个", "虽然调了，但是 windows 还是非常不清楚啊", "什么的东西啊。。。看半天不耐烦，看不下去", "c = [\"蔚蓝星空下\", \"男孩独自坐望\", \"星海闪烁\", \"仿佛在问\", \"为什么你一个人\", \"我在等一个人\", \"一个女孩\", \"这个女孩\", \"真没什么好的\", \"性格很倔强\", \"脾气又不好\", \"还很强势\", \"但男孩觉得\", \"这都是表面\", \"在他的眼中\", \"女孩任性起来\", \"耍起混来的时候\", \"真的很可爱\", \"可是\", \"就是这样的她\", \"也非常的脆弱\", \"也有\", \"伤心难过的时候\", \"而男孩\", \"看着她\", \"想要做一千件事\", \"让她开心起来\", \"却总是放下\", \"已经攥紧的拳头\", \"空荡荡\", \"因为男孩知道\", \"女孩心中有个人\", \"那是一座女孩\", \"筑起的城堡\", \"男孩走不近\", \"只能呆呆望着\", \"其实他也知道\", \"这样很傻\", \"但是放下\", \"却做不到\", \"在城堡外\", \"继续等待\", \"男孩再次抬头\", \"望向星空\", \"嘿\", \"女孩\", \"我能成为\", \"你的星星吗\", \"小小的星光\", \"不过分炙热\", \"不会灼伤你\", \"让你耍赖\", \"给你依赖\", \"给你幸福\", \"等待着你\", \"Always\"]", "不知道说什么好，好感动，祝早分。", "有这个功夫去接个外包赚个几千万吧块给你女朋友买个 包 啊什么的, 比搞这个强多了吧", "现在是大数据时代！所以说有成功的数据么", "这只是你认为的浪漫，要时刻提醒自己不要做只感动自己的事。", "感觉双眼已瞎", "怎么挑快", "这个东西真辣眼睛", "QQ 空间以前这种有很多啊。。。", "恕我直言，太墨迹了，女孩得多有耐心才能看完啊。\r", "别怪我说的不好听，，感觉有点矫情。。个人感受==", "只能骗骗小孩", "就我个人而言，点啊点的，太特么墨迹了。", "这种只能感动作者本人~", "我居然看完了，累死了，太墨迹", "感觉看不到最后就关掉了", "好好珍惜。这样的女票不好找，居然能坚持看完", "我他妈居然看完了", " way to ex...", "要表白就当面表白，别整这些没用的，浪费时间，人家还不一定高兴。", "太长了，没看下去", "\r", "\r", "歪个题\r", "刚入行的时候 也觉得这种很酷\r", "\r", "ps: 没 flash 插件的浏览器看不了", "本来今天高高兴兴", "哈哈哈，我也是，没看完，就看不下去了，赶紧过来看评论！", "心疼你的女友", "程序员怎么可以有女朋友，差评！", "太难识别了，真的能看到最后的姑娘估计本身就想法", "楼主说用这个来表白 为什么这么多人说成送礼物呢..."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><ol>\n<li>实习在学校属于必修课两个学分，一般是 8 月末到 9 月中旬一个月的时间给学生实习；</li>\n<li>我打算申请国外学校，所以实习效果应该不是很重要，而且这段时间正好是联系教授的时间，事情可能比较多；</li>\n<li>但是并不想一直待在学校（坐标南京），如果能找到合适的机会也非常想去实习；</li>\n<li>TAB 实习生招聘开始的比较早（ 3 月份吧）要准备的也比较多，但好像实习期是持续三个月的？这样的话到时我可能没法专心实习那么久，而且学校不一定能放行，花精力准备笔试面试可能就浪费了；</li>\n<li>大家能不能推荐一些对实习时长没有严格要求，技术氛围也很好的一些公司，如果是非常有名的公司也能在简历上加一点分吧；</li>\n<li>非常感谢。</li>\n</ol>\n</div></div>"], "reply": "6", "tittle": "TAB 暑期实习一般从什么时候开始，持续多久？", "comment": ["BAT 终于改变顺序了", "TAB 实习一般是三月份开始内推吧 一般是七月初／七月中旬入职\r", "\r", "所以你只要暑假开始去实习到九月中旬 时间都是够的 而且不转正想提前离职也大都没什么问题", "不到一个月？\r", "那只能给你安排点帮忙跑跑测试之类的杂活吧", "T 这边是拿到实习 offer 就可以申请入职了，最晚好像是 7 月中旬，不过时间最少的也有两个月吧。\r", "\r", "根据楼主的描述，我觉得找学校的实验室实习一个月吧，不耽误你的时间也不影响实习单位的项目。", "今年在 A 从 7 月 20 日到 9 月 10 日摸了个鱼，不过出国的话又想水还是去 Intel/IBM 之类的比较好？", "你申 phd 陶瓷吗？那似乎去实验室更好一些？ ms 似乎不用陶瓷？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>需求：需要知道有人开始下载，是否下载完成。<br>\n思路：通过 php 的 fpassthru 发送实际的文件数据，并在开始前和结束后写数据库。<br>\n代码：</p>\n<pre><code>$db = new DownloadDB();\n$db-&gt;exec(\"INSERT INTO tblDownloads(info) VALUES('下载开始');\");\n$db-&gt;close();\n\n$filepath = '../files/file1';\n@header('Content-type: application/octet-stream');\n@header('Content-Disposition: attachment; filename=' . $filename);\n@header('Accept-Ranges: bytes');\n@header('Content-Length: ' . filesize($filepath));\n@header('Cache-control: no-cache,no-store,must-revalidate');\n@header('Pragma: no-cache');\n@header('Expires: 0');\n$file = @fopen($filepath, \"rb\");\n@fpassthru($file);\n@fclose($file);\n\n$db = new DownloadDB();\n$db-&gt;exec(\"INSERT INTO tblDownloads(info) VALUES('下载完成');\");\n$db-&gt;close();\n</code></pre>\n<p>问题：还没有下载完，就写了“下载完成”到数据库中了，甚至是和“下载开始”同时写入数据库的。<br>\ntblDownloads 表有时间字段，可以看到下载完成和下载开始是同时写入数据库的，也就是中间的 fopen-fpassthru-fclose 这些耗时为 0 。<br>\n而我的理解是 fpassthru 应该将数据全部推送给用户后才返回，是不是有缓存机制？  要怎么能按我预想的进行？<br>\n环境： Linux+nginx+fastCGI</p>\n</div></div>"], "reply": "37", "tittle": "请教一个 nginx 做下载服务器统计下载信息的问题。", "comment": ["网页上通过 js 来实现：下载完成后触发一次 js 请求，服务器做记录", " 谢谢，但还是希望能在服务端实现。 js 不考虑。", "不判断文件就写数据库 hhh", " 你好，是我的代码哪里有问题吗？我确实不清楚，请指教。\r", "但是文件../files/file1 是存在的，我在自己的电脑上测试，可以下载，下载后文件也是正确的。\r", "但是下载需要几分钟，而一开始浏览器弹出选择保存文件位置的时候，“下载完成”就写到数据库中了。", " \r", "php 将文件发给了 nginx ，完成\r", "nginx 慢慢的再传给客户端", " 跟我猜想的一样。那有什么办法可以达到我的目的吗？比如修改 PHP.ini 或者 fastCGI 或者 nginx 的配置文件。", "找下 Nginx 的模块", "  \r", "--prefix=/etc/nginx\r", "--sbin-path=/usr/sbin/nginx\r", "--conf-path=/etc/nginx/nginx.conf\r", "--error-log-path=/var/log/nginx/error.log\r", "--http-log-path=/var/log/nginx/access.log\r", "--pid-path=/var/run/nginx.pid\r", "--lock-path=/var/run/nginx.lock\r", "--http-client-body-temp-path=/var/cache/nginx/client_temp\r", "--http-proxy-temp-path=/var/cache/nginx/proxy_temp\r", "--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp\r", "--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp\r", "--http-scgi-temp-path=/var/cache/nginx/scgi_temp\r", "--user=nginx\r", "--group=nginx\r", "--with-http_ssl_module\r", "--with-http_dav_module\r", "--with-http_flv_module\r", "--with-http_mp4_module\r", "--with-http_gunzip_module\r", "--with-http_gzip_static_module\r", "--with-http_random_index_module\r", "--with-http_secure_link_module\r", "--with-http_stub_status_module\r", "--with-http_auth_request_module\r", "--with-mail\r", "--with-mail_ssl_module\r", "--with-file-aio\r", "--with-ipv6\r", "--with-http_spdy_module\r", "--with-cc-opt='-O2 -g -pipe -Wp,-D_FORTIFY_SOURCE=2\r", "-fexceptions\r", "-fstack-protector\r", "--param=ssp-buffer-size=4\r", "-m32\r", "-march=i386\r", "-mtune=generic-fasynchronous-unwind-tables", "--with-http_realip_module\r", "--with-http_addition_module\r", "--with-http_sub_module", "不知道为什么用这么奇怪的方法来解决问题…然后用更奇怪的方法来修正奇怪的方法导致的问题……", " 哦，还有什么更好的办法吗？", "说实话，我也觉得用 JS 是最简单的\r", "开始前统计很简单，用 auth_request 配合 PHP 就行\r", "但是结束后统计很难\r", "主要是 Nginx 之类的会有 buffer ，还有 sendfile 这类\r", "如果只是为了统计开始结束时间和下载的区段的话，你可以直接写 Nginx log 事后分析", "sendfile 设为 off ，试过了，没用。\r", "代码在 apache 下是没问题的，下载成功才写入“下载完成”。\r", "我在这里也是问问，多学点知识。实在不行就换 apache 服务器算了。", "上网查了一下，貌似和 with-file-aio 模块有关，但是 nginx 模块好像都是编译的，不能关闭？", " 其实我也这么做过，不过大部分都是 php 在卡着而不是 nginx 。\r", "\r", "fpassthru() 函数输出文件指针处的所有剩余数据。\r", "该函数将给定的文件指针从当前的位置读取到 EOF ，并把结果写到输出缓冲区。\r", "摘自： ", "\r", "所以在这之前先清除缓冲并禁止。\r", "#设置执行时间不限时 。\r", "set_time_limit(0);\r", "#发送内部缓冲区的内容到浏览器，删除缓冲区的内容，不关闭缓冲区。\r", "ob_flush();\r", "#发送内部缓冲区的内容到浏览器，删除缓冲区的内容，关闭缓冲区。\r", "ob_end_flush();\r", "#将 ob_flush 释放出来的内容，以及不在 PHP 缓冲区中的内容，全部输出至浏览器；刷新内部缓冲区的内容，并输出。\r", "flush();\r", "所以实际上前面加几句：\r", "set_time_limit(0);\r", "ob_end_flush();\r", "flush();\r", "感觉就好了。。", "顺便说一下，可以改用 readfile 而不用 fopen", "nginx 负责发送数据，要统计开始和完成，当然依赖 nginx 了。", "流输出+限速 就能统计到了吧", "  将代码改为：\r", "set_time_limit(0); \r", "ob_end_flush(); \r", "flush(); \r", "$file = @", "($filepath, \"rb\");\r", "($file);\r", "($file);\r", "和：\r", "set_time_limit(0); \r", "ob_end_flush(); \r", "flush(); \r", "($filepath);\r", "都试过了，还是一样。", " 那要怎么做呢？", "我这边测试是正常的，视频在这里： ", " 。\r", "\r", "set_time_limit(0); \r", "ob_end_flush(); \r", "flush(); \r", "('Content-Length:299711208');\r", "('Content-Type:application/octet-stream');\r", "('Content-Disposition:attachment;filename=WindowsXP_SP2.exe');\r", "('http://speed.myzone.cn/WindowsXP_SP2.exe');", "挂个 inotify 在 nginx access log 上，然后写数据库？", "  可能还是和 nginx 的模块有关吧。\r", "我又详细测了一下，改代码位置，改 header ，都和你的一样了，还是存在这个问题。", " 按你说的上网搜了一下，确实是个可行的思路。\r", "明天试试:)", " php/nginx 问题？不清楚，手头是 win 下的，理论可行没错。", "最简单的做法应该是利用 nginx 的 internel routing", " *internal", " 你换个本地文件发送试试。\r", "远程文件读取太耗时了，耗时就可能和客户端下载时间接近了。", " 楼主的描述是计费后才开始下载，说明这时已经执行完毕并输出缓冲。\r", "而我这个是立即执行的，有缓冲也应该是远程文件下完后才输出。", " 不要说那么多。直接试试使用本地的大文件（不用太大，下载方需要 3-10 秒内下完即可），看看能不能记录到准确的下载耗时。我觉得用 apache 的 mod_php 是没问题的， nginx 的 fast_cgi 不行。", " 我试着写了写，不能计算到准确的下载耗时。\r", "不过之前是帮楼主解决下载之前卡住的问题。\r", "现在把代码改成了这样，问题在于如果 readfile 换成 sleep 就可以准确的统计到：\r", "<?php\r", "set_time_limit(0);\r", "ignore_user_abort(1);\r", "ob_end_flush();\r", "flush();\r", "$time=time();\r", "('Connection:Close');\r", "('Content-Length:299711208');\r", "('Content-Type:application/octet-stream');\r", "('Content-Disposition:attachment;filename=WindowsXP_SP2.exe');\r", "('1.exe');\r", "while (!connection_aborted()) {\r", "file_put_contents('1.txt',time()-$time);\r", "die();\r", "}\r", "?>", "Reply    31\r", "lslqtz   刚刚\r", " 我试着写了写，不能计算到准确的下载耗时。 \r", "不过之前是帮楼主解决下载之前卡住的问题。 \r", "现在把代码改成了这样，问题在于如果 readfile 换成 sleep 就可以准确的统计到： \r", "<?php \r", "set_time_limit(0); \r", "ignore_user_abort(1); \r", "ob_end_flush(); \r", "flush(); \r", "$time=time(); \r", "('Connection:Close'); \r", "('Content-Length:299711208'); \r", "('Content-Type:application/octet-stream'); \r", "('Content-Disposition:attachment;filename=WindowsXP_SP2.exe'); \r", "('1.exe'); \r", "while (connection_status() != 0 || connection_aborted()) { \r", "file_put_contents('1.txt',time()-$time); \r", "die(); \r", "}\r", "?>\r", "突然感觉代码写错了...", "然后又想了想，改成 while (1) {}里面加 if 会好一点。。\r", "如果在里面的 if 判断到连接被结束了，就断开连接。\r", "\t  Reply    32\r", "lslqtz   1 分钟前\r", "Reply 31 \r", "lslqtz 刚刚 \r", " 我试着写了写，不能计算到准确的下载耗时。 \r", "不过之前是帮楼主解决下载之前卡住的问题。 \r", "现在把代码改成了这样，问题在于如果 readfile 换成 sleep 就可以准确的统计到： \r", "<?php \r", "set_time_limit(0); \r", "ignore_user_abort(1); \r", "ob_end_flush(); \r", "flush(); \r", "$time=time(); \r", "('Connection:Close'); \r", "('Content-Length:299711208'); \r", "('Content-Type:application/octet-stream'); \r", "('Content-Disposition:attachment;filename=WindowsXP_SP2.exe'); \r", "('1.exe'); \r", "while (1) {\r", "if (connection_status() != 0 || connection_aborted()) { \r", "file_put_contents('1.txt',time()-$time); \r", "die(); \r", "} \r", "}\r", "?>", " 我感觉，尝试在发送文件的代码做下载耗时统计的做法是歪门邪道（极大降低了 php 的性能）。\r", "js 或者 access log 或者 nginx module 才是正确的做法。", " 是的，很费资源。\r", "但我还是去实现了他 xD 。", " 我本来专业不是做这个的， nginx 用得更少。\r", "有没有现成的 nginx 模块可以实现这个？还有 nginx 模块是不是只能编译进 nginx 里才能用？\r", "我看 nginx 的配置没有像 apache 的配置一样设置模块。", "  似乎没有现成的。日志里面可以记录下载的大小和下载耗时，将这个弄成单独的一个日志文件，然后弄个脚本去做定时处理吧"]},
{"content": ["<div class=\"topic_content\">爬虫实践基于 webmagic ，提供一个例子用于层次化主题帖子和二级帖子及内容。\r<br>\r<br>webmagic 介绍 <a target=\"_blank\" href=\"https://www.oschina.net/p/webmagic\" rel=\"nofollow\">https://www.oschina.net/p/webmagic</a>\r<br>\r<br>5 分钟实现爬 oschina 帖子 <a target=\"_blank\" href=\"https://git.oschina.net/ihuotui/webmagic-sample\" rel=\"nofollow\">https://git.oschina.net/ihuotui/webmagic-sample</a>\r<br>\r<br>目标\r<br>\r<br>1 遍历主题列表\r<br>\r<br>2 读取主题详情页，获取目标文件或者图片或者内容\r<br>\r<br>3 （可选）读取主题详情页下一页，获取目标文件或者图片\r<br>\r<br>4 （可选）下载目标文件\r<br>\r<br>说明，使用 redis 作为进度保存。\r<br>\r<br>基于以上目标\r<br>\r<br>1 写了一个抽象类 AbstractPageAndSubPageProcessor 作为遍历抽象，子类集成后，实现一些逻辑就可以运行。\r<br>\r<br>2 使用 DownloadUrlFileThread 来下载具体文件。\r<br>\r<br>3 测试方法运行 test 目录的 AbstractPageTest</div>", "<div class=\"topic_content\">不过觉得框架的处理页面只能单个 processor ，应该设计成责任链，然后可以根据不同的页面写不同的 processor 。</div>"], "reply": "9", "tittle": "爬虫实践基于 webmagic，目标用 5 分钟就可以爬一个网站（你懂的）", "comment": ["臃肿的 java 推荐你学下 golang\r", " 差不多，工作主要语言是 java 所以只能用 java 写了。", "唉  java 看一半就没学了.", "webmagic 设计还是很好的", " 写过一个跟你这个很像的，也是抓黄图的，也是用 golang 写的，然后又跳坑了，用回 java", " 为啥啊兄弟，我那个是轻量级的，还有重量级的幽灵蛛，不过我没用过 不好评价。\r", "golang 好维护。", "5 分钟可以开始爬一个网站", " 国内还是 java 用得多，另外 golang 的异常处理让我感觉不习惯", " 嘿嘿"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近本人在老师的要求下和别人一起开发一个基于 PHP 的比赛项目</p>\n<p>可是一起开发的小伙伴坚持用 PHP 5.3 作为测试环境以及用 ThinkPHP 3.2.3 作为开发框架</p>\n<p>本人暂时还不会 Laravel 等一些优秀的框架，因此我觉得应该使用 ThinkPHP 5 是个不错的选择</p>\n<p>他的看法是：</p>\n<ul>\n<li>TP5 作为一个新的框架 BUG 比较多</li>\n<li>TP5 对大多数项目组成员使用的 PHP 5.3 的支持不是很好</li>\n</ul>\n<p>而我认为：</p>\n<ul>\n<li>一个新的框架反而更能得到框架作者的技术支持</li>\n<li>即使有 BUG 也能在作者的帮助下进行修复，甚至为这个框架贡献自己的代码</li>\n<li>PHP 5.3 作为一个已经不提供后续支持的版本应该被新的版本取代 例如 PHP 5.6 或者 PHP 7</li>\n</ul>\n<p>目前的状况是争论无果，老师可能觉得他是学长，只是跟我说多配合学长，我感觉很无奈。</p>\n<p>各位在工作和学习中有没有碰到过这样的情况呢？又是如何解决的？</p>\n</div></div>"], "reply": "13", "tittle": "一味的考虑兼容性而使用淘汰（不提供技术支持）的东西有必要嘛", "comment": ["比赛项目其实可以用新框架", "选你们最熟悉的，比赛项目就不要闲着没事踩坑了", " 是的 我其实最近有想要学习 Laravel 但这个比赛时间相对比较紧张了 因此想使用一个相对熟悉一点的框架\r", "但他们认为比赛不是给个人用来学习新东西的\r", "我认为参加比赛的意义学到新东西比拿奖更重要吧", " 我认同您的观点", "旧项目很难推动更新\r", "新项目要看情况， python 很多人都在还用 old release, javascript 都在用 release, rust 都在用 nightly.", "客户给钱什么都给他做 他想用 php4 只要钱给足了 都好说", " 哈哈 我觉得一般客户不懂这些 例如“给我做一个 app ”、\"给我做一个网站\" 具体的需求还得我们主动要", " 目前手上有几个负责运维的项目等待用新框架重写中…… 对于旧项目确实没有太大的重写的动力", "学生？ 为什么用这么久的版本？你们还考虑什么兼容", "选用的最熟悉的 +1\r", "\r", "不过还是特别建议学些新的东西，毕竟继续用着旧版本不是很好的办法。", "服务端你也想跟前端玩兼容性？？？\r", "服务端装个 php5.4 5.5 5.6 7.0 真的很难么\r", "大家都用一个 php 版本很难么，又不是给用户用的，辣么多浏览器，前端要做兼容的。无语", "旧版本坑都被别人踩过了，解决方案比较多，新版本坑可能造成项目停滞，而比赛耽搁不起， so", "我上大学的时候怎么没碰到你这样的学弟？  \r", "大学时真是寂寞如雪"]},
{"content": ["<div class=\"topic_content\">以前开发的支付宝支付，一直都好好的，最近扫码支付开始出现问题。看了 firebug ，发现是支付二维码的页面，有来自阿里一些二级域名 https 协议下的 js 或者 css 连不上。提示“您的连接不是私密连接”。\r<br>\r<br>我自己的网站没有使用 ssl 。\r<br>\r<br>不知道大家有没有遇到类似的问题</div>"], "reply": "2", "tittle": "大家做支付有没有遇到 chrome 打不开支付宝的情况", "comment": ["升级你的 chrome 到最新版本", "没有任何问题"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"\" src=\"http://wx2.sinaimg.cn/mw690/a88a2c0cly1fbn5jiwamzj20kz1790uf.jpg\"></p>\n<p>感觉说个话太磨叽了…………</p>\n</div></div>", "<div class=\"topic_content\">很多人争论的点都是问问题之前先暖场对不对，其实我想说的也只是这人说话比较磨叽，即使是开始问我问题了五分钟的事也能说四十分钟。\r<br>\r<br>在我问出第一个怎么了的时候很明显已经想听问题了，但他仍然在“暖场”，他十句话都没有说出来他到底有什么问题。\r<br>\r<br>他是我本科的一个学弟，几年之前在图书馆加过我的微信，关系不是很熟，我能做到的也只是有问必答，以前曾表达过有问题请直接说，不过他还是这样，我觉得我也只能说到这个份上了，我俩的熟悉程度还没有好到让我可以更直接的教他如何做人如何沟通之类的。\r<br>\r<br>他不是我的同事也不是我的同学，作为一个不是很熟的学长我能做到的是以后依然会有问必答，但我本身没有想要跟他沟通的欲望和需求，所以应该不会考虑建立什么“合理高效的沟通机制”。\r<br>\r<br>当然，吐槽别人也是不对的，我也有一定的问题，谢谢大家。</div>"], "reply": "136", "tittle": "[深夜吐槽] 一个学弟，后来去某软读研了，每次问我问题我都很烦。。。感觉交流起来有困难", "comment": ["聊天工具问在么的人。。我基本都不回，爬借钱", "每次问在吗的，都是问我借钱什么的麻烦事", "我就是那个学弟 ", "哈哈", " 很重要，时间真的挺重要，你没有接这个话题还可以，一旦接了别人拖延你时间你不做又不是，做又要等他磨磨蹭蹭，有什么事情一次性说完然后再最后感谢一波再好不过", "其实问在吗这种事情，我都是一些比较时效性的东西（比如借点小钱😂）至于问问题，我基本都是等熟人在的时候看看，毕竟别人时间很重要", "我是属于会用在么的，不过不会等别人回才说事情，一般是在么？", " 然后后面就直接把要说的事说了，等对面回复", "次数多了 烦的话我一般就直接删好友了。。我觉得你态度挺好的", "关键是他总是向你索取，这才是烦的深层原因，如果他总是对你付出，比如假设他是个土豪，每次问一句在吗，得到答复后就给你发红包，或是一个大方的老板问一句在吗就给你发奖金，或者是个技术大能主动来关心你帮助你，或者是个美女想请你吃饭看电影……即使用“在吗”开场也不会烦吧", "估计你学弟对你有意思哈  ；）", "在吗", "我觉得这样已经挺好了。\r", "\r", "如果提问者是用语音来提问，你感受下。", "1 可能觉得跟你不熟不敢太直接，毕竟大部分关系都需要客套几句（可能程序员的特性可以接受有问题直接说吧，不过生活类的事有求呢？如果是拒绝或者否定类的回答，他会觉得你是很生硬、不高兴的态度）\r", "2 可能他也是抱着高效筛选的态度，先说一下领域 如果你不熟的话他会直接去找别人，避免浪费双方的时间", " 语音，这个厉害了。现在聊天我看见语音就不看了，还管你找我干什么，为什么不打电话，我一个个点一个个听巨麻烦，，", "一种有效的方式就是:你让他每句话至少 100 字,这个看起来就不会很罗嗦了. 他这样零零碎碎的发消息你就会感觉很烦而且半天也说不出啥...", "也许他只是打字慢而已。。笑~\r", "本人打字太快，经常被人吐槽，后来别人不得不他语音，我打字。。", "就因为你理他 才会觉得这样.  自己制造的烦恼", " 我感受过… 还是这位学弟……", " 已鉴定，你对他容忍度真高", "受教了，  之前 很多时候请问人家问题都是先客气的问在么， 是否有时间，能否帮忙解答一下..", "参考： ", "\r", "问在吗的人一律拉黑", "淡定，下次要他直接说问题就是的。", "学妹还可以，学弟\r", "\r", "-在吗？\r", "-不在", "我也碰到过这样的人，他问我问题，我一般会第二天再回复", "这问题问的，在问之前至少得写好问题描述，居然要等到问的时候才描述问题，而且还是断断续续的。", "真心，经常遇到这种 \"在吗\"\r", "\r", "我一般直接回：不在", "学弟还睬他啊,男的就自力更生啊,学妹可以加微信", "A:在？\r", "B:不在，快滚。", "A :在吗？\r", "B ：不在。\r", "A ：别玩啦，有一个问题。\r", "B ：嗯\r", "A ：是分类的。\r", "B ：哦\r", "A ：一直没有突破\r", "B ：嗯\r", "A ：你有接触过吗？\r", "B ：哦？\r", "A ：分类算法的。\r", "B ：嗯？\r", "……\r", "\r", "我会是这样回复的。\r", "不弄不明白我只会回这样的。\r", "而且很大部分我都是在无视。", "你让他发邮件，组织一下语言", "不能老是以为索取，要表达感谢，下次不回他了就好了，绝情", "咱们国人不是比较含蓄么，正常，不可能直接上来就是一大推问题说完。", " 不错。。这种神烦，明明已经回答了，但是绝对不会认真看你说过的话。。。", "r#131 @", " 楼主的意思是，问个问题 没必要三次握手，直接一句话 把问题说明白，实际上我提问，一般来句\r", "请问，然后直奔问题， 人家有心情回你 自然会回你，不回你 也没什么好说的，毕竟大家都很忙。", " 我感觉在你那个链接里，回复感觉很正常并教训楼主的人要多些，是男女区别对待麽", "别总问我在不在，在不在的。 \r", "你说让我怎么回答你？ \r", "我说在，你跟我借钱怎么办！ \r", "我说不在，你请我吃饭怎么办！ \r", "我说在，没好事怎么办！ \r", "我说不在，有好事落下了怎么办！ \r", "所以有事直接说！ \r", "这样我好知道我在还是不在！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我有个系统每小时有差不多两百万的数据进来，这些数据几乎所有最终都要写库，但不是所有数据都是插入，而是大部分为更新操作。库中个别表量越堆越多，最多的已经接近 6 千万，少的也有千万以上，而且还在缓慢增长。于是我发现写入时间越来越慢，目前写库的平均时间需要 50 到 70ms ，那么我想请教一下大家：</p>\n<ol>\n<li>我的 mongodb 这个写入时间是不是正常？</li>\n<li>我 mongodb 的版本为 2.6.4 ，是库锁。如果升级 3.0 以上支持表锁之后性能会不会提升非常明显？（比如平均写入时间缩短为 20ms 以下甚至更小）</li>\n<li>关于拆表：目前有定时任务在跑，定时移动旧数据到历史表，但是这个扫描全表并移动的过程也很漫长（今天凌晨 2 点跑到现在都没跑完）。所以还有没有更好的拆表方案？</li>\n<li>mongodb 是不是本身更偏重于读操作，所以我的场景不适用 mongodb ？</li>\n<li>其它哪些库更适用于我的应用场景？</li>\n</ol>\n<p>希望大家指导一下我这个资历尚浅新手，谢谢大家！</p>\n</div></div>"], "reply": "24", "tittle": "关于 mongodb 频繁写操作的性能问题", "comment": ["不说别的，先升级先升级先升级\r", "3.2 的 Document 锁给写性能带来的提升是非常非常巨大的", "先说结论， mongo 是垃圾\r", "\r", "mongo 锁粒度最高版本只到了表级别吧，放弃了事务之类的 insert 性能只是 mysql 的 3 倍，连 join 都不支持\r", "\r", "你扫表用 skip 的话等于自杀， skip 等于 mysql 的 offset ，通常优化手段肯定就是区间查找了，但是 mongo 不支持自增的 int 主键。。。一个折中就是每次 insert 的时候用 collection 的数量做自增 int 加索引，当然了这个是不准的，但是可以用来区间遍历\r", "\r", "update 本质上是根据索引找到记录然后更新记录和索引，性能肯定没有专门为 insert 优化的快。。。。每小时 200w 数据 qps 就是 555 吧，既然木已成舟就这能上 mongo 的 sharding 了吧，多部署几台。。。谁把 mongo 这种玩具拿到生产环境支持大并发", "mysql/postgres 现有的成熟方案不用，自讨苦吃", "1-2. 3.x 效率会高一点，不多，不是神器。我们现在在亿级别插入大概是 200ms+....嗯，不过我们抖动太大，不是很有参考价值，而且 IO 瓶颈...\r", "3. 大量日志类型数据分拆我现在做法是按月分，自动写入当前月。但是看你的情况大概要分到日了。但是这方案缺点很明显。\r", "4-5. 大部分场景 SQL 数据库都可以处理。", "换了一个性能好点的机器，大概是 20ms 以下插入", " 锁粒度在 3.0 提供的 WiredTiger 就是 Document 级别啊，没记错的话，从 3.2 开始有了基本的 join 了", "\r", "\r", "\r", "如果 lz 老实用 mysql/postgresql 的话， 2*12 核=24 线程的机器在 1 亿数据量上 update 的 qps 至少都 2000 以上，他这个 qps 绰绰有余。。。上了 3 亿了 mysql 分库表区方案还很成熟，直接分就完了。。。。我不信一个新的 feature 就能本质上提高多少 qps ，如果真的本质上提高了 qps 那只能说明原来很烂", "这类数据情况不分表（区），肯定最后索引不在内存里面，然后 btree 模式的索引写性能剧降。\r", "换个其它模式的引擎试试，比如 rocksdb 或者 toku 之类的。", "不如用云服务。", " update 操作的主要瓶颈是 log flush 时的磁盘操作吧？那个测试报告没给出磁盘配置", "正好打算这周末学 mongodb ，难道不用学了，接着用 mysql ？", "这里这么黑 mongo 吗？\r", "\r", "我们好几个表几亿都没拆还不是在跑...\r", "\r", "不管是什么数据库都要按需求来吧优化吧。", "mongo 3.2 每天几百万数据 update ，没有 sharding ， 也没分表，感觉性能没有那么糟糕啊。\r", "已经实践过的技巧：注意 update 时候的条件，有没有索引。 另外如果数据安全性要求低，可以不确认安全写入磁盘，直接返回。\r", "\r", "另外，不管用什么数据库，还是要想办法能不能把多次 update 给合并成单次。\r", "\r", "MongoDB ，太多人把它当万能药了，结果发现传统 SQL 数据库遇到的问题它也会遇到。", "才发现是 mongodb 2.6, 这还是 MMAPv1 吧，建议测试一下 3.x 的 WiredTiger. WiredTiger 是行锁，不是表锁。基本上就相当与 MySQL 的 MyISAM 和 InnoDB 的区别。", "看内存使用，看 io ，看 cpu 使用量,你这样说没意义啊，总的来说 3 比 2 很大差别就是有数据压缩，写性能也有所提升，不过 mongo 和 MySQL 相比内存不太足够的情况下性能非常低，我们现在也在用 mongo,每日写入也几百万,不过不是同一个表,延迟基本低于 10ms,毫无压力", " 感谢解答！在我接手之前用的就是 mysql ，后来因为我们数据的字段经常会增减改变，于是就把 mysql 换掉了，我会去了解一下 postgresql 的，看看它是不是适用于我们的业务场景，非常感谢指路！", " 感谢解答！目前改动量最少的方案就是升级了，我会去了解尝试一下的。", " 感谢回复！“换了一个性能好点的机器，大概是 20ms 以下插入”，是指亿级的数据量也能在 20ms 以下吗？另外这个“性能好点”是什么配置的机器呢？", " \r", " \r", "感谢回复！请问你们写入的平均时间大概是多少？另外，除了分表还可以怎么按需求优化呢？", " 感谢回复！目前我 update 的条件都是有索引的，而且也是批量的，就还不知道是不是不确认就返回，我会去试试看的。", " 是的，最开始测试的机器 IO 比较差", "mongo 最高到表锁？？？？ 黑人问号？？？", " 我机器比较差双核 4G 内存，机械盘，写入速度大概 1000/s"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>今天上午打开自己 github ，看有人提了一个 issue<br>\n<img alt=\"\" src=\"http://rpgame.net/pics/pylt-issue-1.png\"></p>\n<p>标题如此振聋发聩，我精神一震，以为必有高论。</p>\n<p>结果打开一看……<br>\n<img alt=\"\" src=\"http://rpgame.net/pics/pylt-issue-2.png\"></p>\n<p>玛德劳资辛辛苦苦写了一年的项目，结果第一个 issue 就被人一个空 issue 拍在脸上。</p>\n<p>真是日了狗了，好气啊。真想说一堆粗鄙之语。</p>\n<p>这种乱提 issue 不给细节的真的是……</p>\n</div></div>"], "reply": "38", "tittle": "现在有的人提 issue，不立文字，全靠意境，我真是服了！", "comment": ["哦", "了", "哈哈哈哈 楼上的回复 估计让楼主更加伤心", "你应该感到开心，说明终于有人用你的代码了。\r", "也许是你的文档写的不够好呢？用户按你步骤操作，结果失败，用户也很生气的好吧，其实你也浪费了他的时间，\r", "所以他生气的时候，懒得再继续浪费写 issue 了，但是又不忍心不提出来，让别人继续浪费时间。", "如果你是有几百上千 star 的项目，才有底气说， details please ！", " 并没有，我那代码是 c99 一个依赖都没有，根目录一个大大的 CMakefile.txt\r", "直接 cmake 一下， gcc/clang/vs2013+就都能编译了。\r", "而且又标着 WIP ，版本号还是 0.0.9 的初级阶段……", "但是已经有的特性是货真价实的，而且 master 能正常运行。我也不知道为什么就被 not working 糊脸了？", "所以是不是真的压根儿就不可用?", " 当然 working ，功能少罢了", "发出来让大家用用啊，好东西都不分享 真是。", "not reply.", " 东西比较复杂，还没做到自己满意的程度，到时候来 V2EX 再发", "\r", "\r", "是这个吧", "已经在 gayhub 上面回复了～ v2 观光团", " 一血，一时不忿啊……\r", "\r", " 啊，是的，见笑了。", " \r", "压根没文档，这事情 换位思考吧，两边都没什么大毛病我觉得。", " +1", " 谢了，但也不提倡观光。\r", "\r", "只是跟大家分享一段经历，对个人来说有则改之无则加勉吧。\r", "\r", "开发者还是希望看到积极的回馈。", "Issue 描述不清晰是很常见的一种情况，楼主不必惊慌，用户的系统环境千奇百怪，遇到奇葩的系统不工作其实也正常。\r", "\r", "你未来可能还会面临如下情况：\r", "\r", "* 练 GitHub 的： ", "\r", "* 由于其他软件不会用导致的： ", "\r", "* 宣泄个人情感的： ", "\r", "\r", "良好的 issue 交互情况：\r", "\r", "* 提 issue 的人描述清晰： ", "\r", "* 提 issue 的人跟踪 bug 有始有终： ", "\r", "* 提 issue 的人提完顺带 fix ： ", "\r", "* 作者自提自修的：我的项目很多 issues 是这个情况，为了后面发 changelogs 记录版本变更（ ", " ）\r", "\r", "不过也有我觉得比较难处理的情况：\r", "\r", "* 提的 issue 构想太大，作者 hold 不住： ", "\r", "* 和作者本意相矛盾： ", "\r", "\r", "总之，做开源很重要一点就是和用户保持交流，等项目用的人多了以后责任也会变大，所以不能太随意。让我们沿着老一辈开源先驱的足迹，不忘初心，继往开来，奋勇前行。\r", "\r", "PS 我的 GitHub 是 ", " ，欢迎关注。", "\r", "\r", "Hello there\r", "----------------------------------------------------------\r", "\r", "I am Mengyang Li(李梦阳) aka mayli, 25yrs old, programmer, from Tianjin, China, living inCalifornia.\r", "\r", "I am working as a Software Engineer, and write some scripts on weekends.\r", "\r", "And here is my Blog: ", "\r", "\r", "\r", "Services\r", "============\r", "\r", "enjoy:\r", "- [mc 1.7.6]: Server: veryamt.com:25565, dynmap, US, public\r", "- [mc 1.8.0]: Server: mc.veryamt.com:25565, dynmap, CN, whitelisted\r", "- [altitudegame]: Server: ", " [27275-27280], public\r", "- [iodined]: Server: ", ", ping me for password\r", "- [teamspeak3]: ", ", public\r", "- [tracker]: BitTorrent tracker\r", "- [podcast]: radio2podcast, 天津人民广播电台\r", "\r", "Interested in\r", "- Linux Kernel\r", "- Network Application (Web&P2P)\r", "- Virtualization & Emulation\r", "- Data Visualization\r", "- Distributed Computing\r", "- Embedded Systems\r", "\r", "I am using\r", "- Renren / Facebook\r", "- Fanfou / Twitter\r", "- Google Plus / Code\r", "- Github / BitBucket\r", "\r", "Languages\r", "- Mandarin (Simplified Chinese), English.\r", "- C/C++, Python, Java, (bash, js, sql, prolog, matlab, etc).\r", "\r", "Contact\r", "- Email/Gtalk/MSN: mayli [dot] he [at] ", "\r", "- mayli #ubuntu-cn@Freenode\r", "- last update: Wed Oct 22 12:33:36 EDT 2014\r", "\r", "是 @", " 这位?", "哈哈。。", "  6666  Old driver, takes me fly", " +1", " 似李！何处不相逢", "项目挺棒的，一直也想写个 Python 的解释器。 Star 了！", " \r", "    * 宣泄个人情感的： ", " \r", "一不小心又看到 \tjustjavac 这个 md 大神 2333", " 老死机啊", "我加了个无意义 label 来收集这类 issue ，比如： ", "***", "可以试试看 GitHub 的 issue 模板：\r", "  赞 ！", " md 大神是什么意思?话说好像经常看到他", "31 楼 +1", " 技术上没看到什么有影响力的大项目， markdown 收集写的 6666 动辄成百上千的 star", " 233333 ，原来是这样", "理解你的心情，就像你开发一个 APP 或产品，你努力的优化，改善体验，好的时候不给你评分，稍微一点 bug ，立马打一分，骂垃圾...", "直接 close 就好，还是太年轻"]},
{"content": ["<div class=\"topic_content\">背景：\r<br>\r<br>楼主在武汉一家很 low 的搞 IDC 和外包的公司，公司要进军云计算领域，楼主就被招过去了，现在工作满 10 个月了，早就转正了~\r<br>\r<br>楼主搞云计算的工作至少是超过公司期望的，虽然公司期望很低，但搞云计算整个公司就投入两三个人，就这点投入这块业务自然就没有做起来~\r<br>\r<br>现在公司又准备进军人工智能和大数据了~\r<br>\r<br>然后公司接了个大单，楼主就被调过去做各种售前，打杂的事情~可惜楼主不是超人，表现得不太好，两次绩效不达标~~\r<br>\r<br>公司就想以绩效不达标来辞退我~\r<br>\r<br>HR 找我谈的时候，就让我交接工作，赔偿的事一字未提~我说了赔偿条件，她说要找老总沟通~\r<br>\r<br>现在的情况及问题：\r<br>1.我有跟公司签劳动合同，但是公司没有给我副本，公司好多人都没有副本，好像这种情况打官司都能另外赔一个月工资的\r<br>\r<br>2.公司是否能以绩效不达标辞退员工不赔钱？\r<br>\r<br>3.楼主还有好多加班记录，晚上和周末的加班是否能以 1.5 倍或 2 倍系数兑换工资或者调休？\r<br>\r<br>4.万一跟公司协商不成，走劳动仲裁或打官司麻烦不？打官司成本高不？能及时顺利的拿到钱不(有些公司就喜欢拖你)？\r<br>\r<br>5.怎样做才能最大保障楼主权益？现在要收集什么证据吗？</div>"], "reply": "96", "tittle": "快过年了，楼主被公司裁员了，公司还不愿意赔钱，请 V 友支招~", "comment": ["你需要一个律师。", "关注， 爆公司名。 收集证据， 找律师仲裁", "公司心真大,不好好专一个放心 吃枣药丸", "直接仲裁 一波到位", "SEO 大军还有 30 分钟抵达战场。", "保存好上下班的打卡记录还有加班的，然后找劳动仲裁", "Mark ，同在武汉，关注后续", "这种破公司还做什么 AI 和大数据？笑话", "其实就是让你公司的员工知道，公司是怎么对待员工的，这公司迟早 wanwan", "武汉的 IT 氛围不是很好~", "\"她说要找老总沟通~ \" 这种估计就是帮你提一嘴，不会帮你争取的。 建议你还是自己找老总", "直接仲裁 仲裁百分百判劳动者赢\r", "但如果公司后台很硬 则可能在落实判决的时候执行不到位\r", "比如说封了账户啊 但是里面没钱\r", "但建议仲裁", "楼主能不能把加班记录和没有劳动合同副本、无理辞退这些证据整理好，可以试试发到我们的黑店曝光社区 ", " 看看，临过年裁人大多数是不想发年终奖之类的吧。。。把公司名捅出来避免更多人上当", "兄弟，记住！ v2 的老铁们一直站在你的身后。\r", "\r", "老铁们，双击评论 66666  \r", "\r", "刷一波游艇，我直播去他们公司搞事\r", "\r", "老铁们，点一波关注 ，没毛病", " 你这个网站是用什么程序做的啊？", "我就好奇投入两三个人，怎么做的云计算……", "签合同不给副本可以拍照保存，和 HR 的谈话记得带录音笔。而且引导 HR 说出你已经在这里工作了多长时间的事实。再找个律师咨询一下，一般律师都愿意接这样的活，基本上稳赢的。", "打卡记录 工资流水 社保记录\r", "先仲裁，不满意，再起诉\r", "一般都会胜诉，但是周期较长", "同在武汉。不要羞涩， 把公司名字爆出来， 都看看是哪个 sb 公司不给合同。", "10 个月前进军云计算.....\r", "10 个月后进军人工智能和大数据......\r", "\r", "这公司流弊。", " 拿 openstack 改了下 web 界面", " \r", " \r", "等楼主拿到钱了，好好给它做一波 seo~", "lz 强势点，没有解决不了的事情。\r", "1.加班的时间转换成天数，转换成 rmb.\r", "2.不满一年的离职至少一个月的赔偿。", "仲裁吧，仲裁不麻烦，不需要你花钱，而且可以不需要律师。\r", "\r", "但你问的这些问题，最好还是找个律师咨询一下，应该一小时内可以咨询完成，付费咨询就行了。", "什么公司,爆出来，让大家找工作时候规避下😄", "武汉有大的 idc 公司？", "现在感觉不妥就马上开始收集证据啊。 等你去仲裁 他们可能会把证据 清楚干净。 楼主最近去找 HR 谈话，记得录音。", "收集能收集的到的所有證據，趕緊去勞動仲裁，簡單粗暴。", "劳动仲裁简单粗暴\r", "搜集各种证据 你觉得拿得上的证明你工作过 证明他给你开工资 证明工作时间 证明非自愿调岗的信息 然后去仲裁", "希望不是天楚", " 用 nodebb 做的 自己改了一些东西，好像你也在深圳？不知道你是做什么的呢？有空聊聊？我的微信号 MonsieurDingue", "简要回答：\r", "1. 没合同根本不影响劳动关系是否成立（工资流水，完税证明，五险一金，工号牌，签有你名字盖公司红章的任何资料均可以相互佐证）\r", "2. 辞退，需要先证明员工不能胜任岗位，再经过公司培训上岗还不能胜任。（你描述的是调岗，坚持调岗未经你同意就行）\r", "3. 加班有具体相关法律规定，仲裁提出要求即可。\r", "4. 麻烦和成本都在时间方面。\r", "5. 证据不需要太多，劳动仲裁偏劳动者方面。你能掏出任何一两个证明你在这家公司上班 10 个月的证据就行。相关可以自己搜索阅读 “劳动合同法”以及“举证倒置”\r", "\r", "参照这篇走流程等仲裁开庭就行 ", "建议楼主直接申请劳动仲裁。去劳动仲裁填写一份材料，就是把问题写清楚然后就可以回家了，在家里准备些已有的证据，证据不多也没关系，因为劳动仲裁是站在劳动者这边的。劳动者提取问题，如果公司否定了你提出的问题是需要公司出证据的而不是你！就怕公司作假··~这个流程一般一个多月然后开庭·~~  一般公司都不会到开庭的就会和你私下解决，因为一旦仲裁公司败了公司以后在政府上的一些事就有点障碍了！！", "我也是年底被裁员了，今年刚从深圳回武汉，就遇到这样的事，武汉的 it 氛围真不行，感觉武汉的公司很多只有有个圈钱的概念就开始去做产品，然后产品的实力又不行，做着做着就垮了，这样既坑自己也坑员工。\r", "建议楼主随时录音，不要随便签字，最后走仲裁就行。", "爆公司名", "公司裁员是需要加赔员工工资的，楼主可以部下当地的劳动局，可能需要准备些材料。", "同被裁员，但是给了钱的。", "借楼求问，目前有没有相关机构提供付费的劳动仲裁咨询以及讨薪的一站式服务？", " 快法务上面有", " 没错，我之前一个公司就是，产品就一概念压根没盈利空间，就靠套融资活着……", "公司名字呢", "关注， LZ 要坚持到底", " 不是天楚~但是天楚发生什么事情了呢?", "劳动合同不是认定劳动关系的唯一凭证", "问一下 公司 GG 了，没签劳动合同，也没交社保，也没有赔偿，能仲裁吗？", "收集证据，从公司邮件开始存档，截图或者打印，等日后仲裁用", "我擦，问我啊楼主，这种事情。你别签字，你这个可以给两个月，不给你就耗着，注意收集各种音频或者视频的证据", "仲裁即可 轻松便捷", "如果不是太多，还是算了，你耗不起的说", "武汉的 IDC ，没几个，我心里有人选了 哈哈哈哈", " 特喵的全 V 我就认识你一个 !", "最低俩月赔偿，放心，直接告诉公司，不赔偿就去劳动仲裁。现在去年前还能出结果", "垃圾公司怎么这么多", "seo", "告诉她们不赔钱就仲裁，仲裁一定赢得", "老板是外地人或许还可以讲一下道理，如果是武汉当地人的话，那我觉得还是得走法律强制手段，毕竟民风在那里", "1.我有跟公司签劳动合同，但是公司没有给我副本，公司好多人都没有副本，好像这种情况打官司都能另外赔一个月工资的。\r", "\r", "离职赔偿是 N+1 ， 10 个月按 1 年算，也就是 2 个月赔偿，副本这个不影响，你要他给你就完了。公司一般不会耍花招，因为不签合同赔的更多。\r", "\r", "2.公司是否能以绩效不达标辞退员工不赔钱？ \r", "\r", "不能，得赔钱。\r", "\r", "3.楼主还有好多加班记录，晚上和周末的加班是否能以 1.5 倍或 2 倍系数兑换工资或者调休？ \r", "\r", "理论上能，但是执行起来很麻烦，而且这么做也不好。\r", "\r", "4.万一跟公司协商不成，走劳动仲裁或打官司麻烦不？打官司成本高不？能及时顺利的拿到钱不(有些公司就喜欢拖你)？ \r", "\r", "这个得看地方，我感觉武汉应该不至于太差，不找律师成本很低，赢了一般都能顺利拿到钱。拖欠的成本太大，公司不傻逼不会这么做，傻逼的话两败俱伤，但是企业的损失绝对比个人大很多。\r", "\r", "5.怎样做才能最大保障楼主权益？现在要收集什么证据吗？\r", "\r", "主要就是书面的离职通知。最大的保障就是别让这事影响你的生活和新的工作。这钱基本能拿到，拿不到就当交学费了，摆在心态，把精力放在下份工作中。", "刷一波佛跳墙，我直播去他们公司搞事。", "直接劳动仲裁，不麻烦的", "不要在武汉搞 IT, 绝对不要", "关注、支持露珠！坚决不去武汉。", "1 、 n+1 的赔偿标准：首先先要明白 n+1 是什么？ n 就是你在公司的工作年限，楼主如果已经入职 10 个月的话 n 应该为 1 ；+1 的意思是三十天待通知金（金额为本人的一个月工资），这个是什么意思呢？就是说如果公司今天通知你立马走人，那么这个 1 是必须要给的，但是如果公司说从今天开始一直到 30 天后你仍需在公司上班工资照常结算， 30 天后走人，那么这个 1 是可以不给你的。\r", "2 、按照楼主的说法，入职的时候应该是以技术职能类入职的，后来转岗到业务岗，请问在转岗的时候公司有没有安排专门的培训给你以适应新岗位，如果没有将来仲裁的话可以作为一个支持。\r", "3 、和 HR 谈赔偿（记得用手机录音），态度一定要强硬，不要怕没有合同的事，真的仲裁起来，公司会自己乖乖交出来的，如果公司不能拿出，赔的更多。\r", "4 、如果最后谈判破裂，只能走仲裁这条路。首先要清楚的是劳动仲裁 99%都是倾向劳动者的，准备好你在这家公司的工作证明，如工资流水、社保记录等，你所需要付出的就是时间成本；其次要知道，劳动仲裁也许会影响你的背景调查，也就是如果你在入职下一家公司的时候， HR 对你做背景调查，可能会介意这点。（ ps.真正的背景调查，一般只对总监、 vp 以上做，其他就是打打电话之类的吧）", "我也有被恶意欠薪的经历，当初是在深圳，恶意欠薪 8000 元。\r", "以我过来人的身份，你跟公司商量赔偿基本没用，因为他们就是打算压榨你的，所以：你最好找个律师全权负责，律师专业点，很多流程你自己都不了解；他们会帮劳动仲裁，劳动仲裁不成，就法院一审，二审；劳动仲裁一般是 3000 到 6000 ，深圳地区，当时我找了一个最便宜的，一审之前的律师费是 3000. 官司打赢了，费用对方出。\r", "\r", "\r", "回答你的问题：\r", "1.我有跟公司签劳动合同，但是公司没有给我副本，公司好多人都没有副本，好像这种情况打官司都能另外赔一个月工资的 \r", "\r", "这项基本没影响，因为，不签劳动合同就工作，罚得更多！\r", "这个你要搜集相关的上班记录，打卡记录，工资流水，证明你在这家公司工作过，\r", "\r", "2.公司是否能以绩效不达标辞退员工不赔钱？ \r", "不行！\r", "楼上已经说了，按 N ＋ 1 赔偿。\r", "\r", "3.楼主还有好多加班记录，晚上和周末的加班是否能以 1.5 倍或 2 倍系数兑换工资或者调休？ \r", "绝对算加班工资，你千万不要心软。\r", "有加班记录非常好，搜集加班记录，到时候律师会在仲裁书里面写上让被告付加班费的主张。\r", "\r", "4.万一跟公司协商不成，走劳动仲裁或打官司麻烦不？打官司成本高不？能及时顺利的拿到钱不(有些公司就喜欢拖你)？\r", "先问清楚对方赔不赔钱。 我觉得协商你基本会吃亏，加班费对方基本不给你。我建议直接劳动仲裁。\r", "\r", "5.怎样做才能最大保障楼主权益？现在要收集什么证据吗？\r", "就是找律师告他。 上班记录，打卡记录，工资流水\r", "4.万一跟公司协商不成，走劳动仲裁或打官司麻烦不？打官司成本高不？能及时顺利的拿到钱不(有些公司就喜欢拖你)？ \r", "\r", "5.怎样做才能最大保障楼主权益？现在要收集什么证据吗？", "坚决仲裁啊，我上家公司就是这样，我从来不惯着违约的企业，很多身边的同事都认为仲裁浪费时间，耗不起。我其实非常不理解：仲裁和找下家工作并不冲突，你填表之后等着开庭就行了，该找工作找工作，哪里需要耗时间？就算请假去开庭，你去开庭也是为了挣钱拿赔偿，上班也是挣钱，没有本质的区别！", " hhhhhh", "收集证据, 然后拿着证据直接去仲裁, 证据足够的话 仲裁人员直接来你们公司调节(上次我们找公司要赔偿, 劳动仲裁的工作人员直接说:你把证据收集好,带过来,我和你一起去公司调解)", "我记得劳动法规定：一个月内不签劳动合同，赔双倍工资吧。。。。。。", "没有劳动合同副本。。。。这心也是大的。。。", "武汉...唉\r", "我老家院子里有个伙计在武汉搞了个公司，宣传单上做云计算，大数据， AI 机器学习\r", "公司才 5 个人...\r", "已经接了几百万的单子...", "听起来像是皮包公司", "武汉企业不惜牺牲自己将武汉学子输送到全国，这是一种什么精神……\r", "\r", "不过劳动合同不给副本，你也敢在那做？", "问下加班记录怎么搞到的呢？", "搞技术的怎么被安排去做售前了, 这不赤裸裸的坑人吗", "我的一个同学也被同样套路了，一家杭州的上市公司，大家来说出自己心目中的答案", "  手动给你的回答点赞。\r", "\r", " 千万别让这个破事影响了楼主的生活。", "参考这个电影 office space", "欢迎楼主来我们这里尝试下，我们这边研发的都是大爷，都是老大，不过工作地点是在广东佛山。", " 建议增加地区筛选", "大打官司很麻烦，最终获得应得的，其他要更麻烦的去争取", "我觉得找老板聊聊的成本最低", "求爆公司名，直接打入黑名单！", "  \r", "\r", "其实我没看好题目，这个题目正确回答是\r", "不去和老板谈，让网友教你打官司，这很 V 站，没毛病", " 感谢您的建议 我们会加入地区筛选和很多其他功能，现在正在策划改版和开发手机 app", "我读了后面的回答，补充一下我的答案：\r", "打官司不麻烦，花 3000 到 4000 块找律师帮你全部解决。剩下你的你该干嘛干嘛就行了，不影响找工作。\r", "你千万不要心软，坚决打官司。 当时欠我 8000 块，后来打官司我拿到了 11000 （含 8000 工资＋ 3000 律师费）。其实还可以拿到更多，加班费", "在武汉呆了三年的人从没遇到这样的事。帮顶", " 打赢了对方负责律师费？", "  是这样的", "现在的公司，很多用人的时候就开始急招，不管三七二十一，不用的时候，或者公司业绩不好的时候，有开始赶人。哎，可怜我们这些工作者", "武汉确实这种很多  爆下公司名  有机会可以去会会它", "搜集证据直接劳动仲裁，没毛病。", "武汉的公司大部分搞外包和通信的吧？ 其他的好像都不行", "虽然我不是武汉的,但是我知道一个武汉的公司.好像挺符合你说的.我想问问 是不是明源.", " 不是明源~", " 外包公司居多，打着各式各样的名头，还有部分就是总公司在北上广的，最近入职了一家公司，本来总部在武汉今年搬走去深圳了。", "支持爆公司名， 防止后人被坑", " \r", "因为一旦仲裁公司败了公司以后在政府上的一些事就有点障碍了！！\r", "------------\r", "说对了，现在 正协 换届 进行时，有仲裁记录的 boss 想做委员？想都别想。有大把老板想挤进来呢，不缺你一个。\r", "什么有拒绝拆除违建记录的老板被取消资格的公告，我看过好几张了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>目前因为要爬取大量数据， php 血统就是单线程的没办法，只能多弄几个进程来爬取数据，有时候一个进程会出错出现假死的情况，要停止我也只能把整个虚拟机停止了，这样也殃及了其它几个进程害得他们也被迫关闭，那么问题来了，我怎样把这个出错的 php 进程给关了，不伤害到其它 php 进程？</p>\n</div></div>"], "reply": "9", "tittle": "PHP 中怎样终止单个进程？", "comment": ["不是 CLI 模式？为什么要停虚拟机？不懂。", "？？？虚拟机\r", "多进程的话，你 ps 一下，看哪个运行时间超长了就 kill 掉呗。或者程序自己也可以处理呀，找到为什么假死才是正道", "不能再 php-fpm 里跑长期任务， ignore_user_abort 也不行， set_time_limit 也不行， memory_limit 还是不行，总之就是不行\r", "\r", "用 php-cli", "cli 的话 ps 一下再 kill 一下不就行了  ", "难道 lz 的爬虫是在 fpm 里跑的吗。。", "fork 子进程跑队列爬，直接跑那不找事吗？", " 为什么不行呢？我就是用 php-fpm 跑长期任务，挺好的啊？能解释一下原因么，谢谢", "system(\"kill {$pid}\");", "拿到子进程 id kill 掉？", " 因为我始终没法解决 php-fpm 中的进程退出问题，别的还好，我也是不信邪的类型\r", "基于 php 的任务队列处理，各框架也是专门针对 php-cli 应用做了路由和组件，这些也暗示了长期稳定任务的确要 php-cli"]},
{"content": ["<div class=\"topic_content\">个人和公司两台电脑都需要收邮件，之前一直用 thunderbird ，可时间长了经常会遇到 4G 限制的问题，现在连归档目录都 4G 满了，不得不换邮件客户端。\r<br>于是把公司 linux 电脑的客户端换成 n1 了，试用了一周发现竟然不能在收件时仅下载，保留服务器端邮件？？翻遍了设置都没找到，这些最基础的功能竟然部支持？？</div>"], "reply": "10", "tittle": "Linux 下的 nylas n1 邮件客户端不能保留服务器端的邮件？", "comment": ["是不是协议的问题，前两天配置邮件的时候查了一下， pop3 协议下只会下载你的邮件，邮箱里什么都不会去动， imap 协议则是线上线下保持一致，你可以从这方面尝试一下。", " 我是 exchange...", " pop3 协议也是可以删除服务器上的邮件的", "这个软件  不是开始收费了么...........\r", "\r", "本来做的挺好看的........结果收费了.......  就放弃了.......", " linux 下的似乎没收费啊。。", " \r", " \r", "另外 n1 不支持 pop3.。。", " 我是折腾企业邮箱的时候看的网易的介绍，细节上没有去求证。难道是 exchange 的锅，我折腾的时候试了 n 个客户端也没说给我把服务器端的邮件干掉啊。", " 客户端并没有收费吧？哪怕收费的话，你也可以拿着源码自己编译一个", " \r", " \r", "\r", "我的已经用不了了....  提示什么 api 什么鬼 的 我忘了........\r", "\r", "现在不用那个了....... 总感觉 它会收集我的邮件.....\r", "\r", "现在还是用网页版的 outlook 吧...... 为什么呢......因为..  我害怕我设置公司邮箱和个人邮箱时,经常弄错.比如用个人邮箱给同事发邮件(这个没啥),如果用公司邮箱给个人发了什么重要的东西.可就完啦....不想被公司安全部门请喝茶...", " \r", "我也不确定，现在两个电脑收到的邮件不一致，然后发现 n1 没有这个设置选项"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"//shang.qq.com/wpa/qunwpa?idkey=4af439a1b9973ba065cd1116ef344f86a889517eebf3d394f2ad109be532166b\" rel=\"nofollow\"><img alt=\"2\" src=\"//pub.idqqimg.com/wpa/images/group.png\" title=\"2\"></a></p>\n<p>交流外包信息，技术问题</p>\n</div></div>"], "reply": "7", "tittle": "小程序很火，建个外包群来交流", "comment": ["不想用 qq 了", "求头像大图", " ", "\r", "\r", "善用 google 啊，自取，半小时后删图。", " 没激凸，差评(`へ´*)ノ", " 差评别找我啊，我只是搬运工", "点加群，怎么没反应？一个灰色的网页，二维码显示不了啊", "想加入，能直接贴 QQ 号码吗?"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>laravel 项目部署在虚拟机上挂载的 windows 目录下，在虚拟机上配置 nginx 服务器，项目为什么访问不到？提示： No input file specified.</p>\n<p>项目拿到挂载目录外面就可以</p>\n</div></div>"], "reply": "11", "tittle": "laravel 框架问题", "comment": ["求助", "没挂载到，看看 php-fpm 和 nginx 的配置部分", " php-fpm 的用户是 www ，之前以为是文件夹权限问题，把挂载文件夹权限改为 777 ，不行\r", "您指的配置会是哪块影响呢？", "fpm 路径错了，找不到脚本  ", "老生常谈的问题。。", " 把项目移到挂载目录外层就可以了啊，/data/wwwroot/project ， project 文件夹是挂载的 windows ，项目移到 wwwroot/下就可以，没改过配置啊", "拍黄片 69", "laravel 是要挂载到 laravel/public 目录下面，并不是根目录", " nginx 配置方便贴出来看一下吗", " \r", "\r", "nginx.conf\r", "\r", "user  root  root;\r", "\r", "worker_processes auto;\r", "\r", "error_log  /home/wwwlogs/nginx_error.log  crit;\r", "\r", "pid        /usr/local/nginx/logs/nginx.pid;\r", "\r", "#Specifies the value for maximum file descriptors that can be opened by this process.\r", "worker_rlimit_nofile 51200;\r", "\r", "events\r", "    {\r", "        use epoll;\r", "        worker_connections 51200;\r", "        multi_accept on;\r", "    }\r", "\r", "http\r", "    {\r", "        include       mime.types;\r", "        default_type  application/octet-stream;\r", "\r", "        server_names_hash_bucket_size 128;\r", "        client_header_buffer_size 32k;\r", "        large_client_header_buffers 4 32k;\r", "        client_max_body_size 50m;\r", "\r", "        sendfile   on;\r", "        tcp_nopush on;\r", "\r", "        keepalive_timeout 60;\r", "\r", "        tcp_nodelay on;\r", "\r", "        fastcgi_connect_timeout 300;\r", "        fastcgi_send_timeout 300;\r", "        fastcgi_read_timeout 300;\r", "        fastcgi_buffer_size 64k;\r", "        fastcgi_buffers 4 64k;\r", "        fastcgi_busy_buffers_size 128k;\r", "        fastcgi_temp_file_write_size 256k;\r", "\r", "        gzip on;\r", "        gzip_min_length  1k;\r", "        gzip_buffers     4 16k;\r", "        gzip_http_version 1.1;\r", "        gzip_comp_level 2;\r", "        gzip_types     text/plain application/javascript application/x-javascript text/javascript text/css application/xml application/xml+rss;\r", "        gzip_vary on;\r", "        gzip_proxied   expired no-cache no-store private auth;\r", "        gzip_disable   \"MSIE [1-6]\\.\";\r", "\r", "        #limit_conn_zone $binary_remote_addr zone=perip:10m;\r", "        ##If enable limit_conn_zone,add \"limit_conn perip 10;\" to server section.\r", "\r", "        server_tokens off;\r", "        access_log off;\r", "\r", "include vhost/*.conf;\r", "}\r", "\r", "\r", "php-fpm.conf\r", "\r", "[global]\r", "pid = /usr/local/php/var/run/php-fpm.pid\r", "error_log = /usr/local/php/var/log/php-fpm.log\r", "log_level = notice\r", "\r", "[www]\r", "listen = /tmp/php-cgi.sock\r", "listen.backlog = -1\r", "listen.allowed_clients = 127.0.0.1\r", "listen.owner = www\r", "listen.group = www\r", "listen.mode = 0666\r", "user = www\r", "group = www\r", "pm = dynamic\r", "pm.max_children = 10\r", "pm.start_servers = 2\r", "pm.min_spare_servers = 1\r", "pm.max_spare_servers = 6\r", "request_terminate_timeout = 100\r", "request_slowlog_timeout = 0\r", "slowlog = var/log/slow.log", "       vhost  \r", "\r", "server\r", "    {\r", "        listen 80;\r", "        #listen [::]:80;\r", "        server_name ", ";\r", "        index index.html index.htm index.php default.html default.htm default.php;\r", "        root  /data/wwwroot/project/iron/public;\r", "\r", "        include none.conf;\r", "        #error_page   404   /404.html;\r", "        include enable-php.conf;\r", "        location / {\r", "                try_files $uri $uri/ /index.php?$query_string;\r", "        }\r", "        location ~ .*\\.(gif|jpg|jpeg|png|bmp|swf)$\r", "        {\r", "            expires      30d;\r", "        }\r", "        location ~ .*\\.(js|css)?$\r", "        {\r", "            expires      12h;\r", "        }\r", "\r", "        location ~ /\\.\r", "        {\r", "            deny all;\r", "        }\r", "\r", "        access_log  /home/wwwlogs/www.blog.com.log;\r", "    }", "你可以弄一个其它页面比如 a.png ，看看能不能访问得到。如果能访问到，就是访问 PHP 配置段的问题。"]},
{"content": ["<div class=\"topic_content\">在通往程序员的路上不容易……</div>"], "reply": "2", "tittle": "原来治愈系就是讲一个比你更惨的故事，然后灌碗浓浓的鸡汤……", "comment": ["进来等着被治愈的被楼主一句话致郁了", "我也不是。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>2016 年对于 APICloud 来说，是增长的一年，更是收获的一年。这一年里， APICloud 的产品经历了两次巨大更新和升级，为原生开发者带来了全新的产品 SuperWebview ，为传统企业和互联网公司解决 App 定制难题。 APICloud 从移动应用开发专家蜕变、升级至移动应用开发+定制的良性生态系统。接下来的时间， APICloud 将从 6 个方面梳理 2016 年的过往，敬请期待！</p>\n<h3><strong>用数据说话</strong></h3>\n<p>使用 APICloud 的开发者现已超过 40 万人，他们创建了超过 60 万个移动应用。平台中云编译总数超过 220 万， API 调用次数超过 150 亿次，开发者每天在云编译中生成的安装包超过 5000 个。</p>\n<p>在 ToB 行业中，与 APICloud 达成深度战略合作的伙伴超过 100 家。 2016 年新增及更新的模块数量超过 400 个，其中有近百位开发者为 APICloud 平台提供了多样化的付费模块，获得了非常可观的收入，与 2015 年相比增长了 6 倍。这样爆发式的增长速度高于前两年的总和。</p>\n<p>去年 9 月， APICloud 全新上线 App 定制平台，经历短短几个月的时间，定制平台帮助近百家企业， App 项目总金额超过 1500 万元。</p>\n<p>APICloud 坚守每周一次更新的节奏，持续为开发者和企业带来更多的新产品及服务。</p>\n<h3><strong>APICloud 产品升级</strong></h3>\n<p><strong>APICloud 召开发布会，重磅发布 SuperWebview</strong></p>\n<p>SuperWebView 使用“半翻译式”的原理将大量网页代码在运行时翻译成可调用原生的 API ，以此获得原生 App 的功能和体验。 SuperWebview 的出现必将加速 Web 技术在 Native App 中的融合，并且在优质的 Native App ，甚至超级 App 中发挥更大的作用。任何一款 Native App 在集成 SuperWebview 之后，都可以大幅缩短迭代周期，支持功能的动态增加。由 Web 技术实现部分的功能更新无需再反复提交 AppStore 审核。用户也无需重新下载安装。</p>\n<p><strong>全新上线 App 定制平台，为企业带来移动应用解决方案</strong></p>\n<p>以快速、高效、成熟的 APICloud 移动应用开发技术作为基础，结合服务于大量企业客户的丰富经验，“ App 定制服务”帮助客户快速完成 App 全链条的开发和上线。项目交由 APICloud 管理，可大幅缩短开发时间。</p>\n<p>“ App 定制平台”的多重优势还解决了很多传统 App 定制服务的痼疾，包括“沟通不畅”“实施过程不透明”“失败风险高”“开发周期长导致无法挽回”“实施方能力弱”等等。</p>\n<p><strong>模块 Store 支持一键支付、分类查看及版本选择功能</strong></p>\n<p>在模块 Store 中，新增了每一个模块详情页，并提供一键支付和分类别查看功能。开发者可以方便购买模块和分发授权码。</p>\n<p>APICloud 持续在对模块、引擎等基础服务进行优化，但为保障已使用模块老版本应用的稳定性，推出了版本选择的功能。多版本模块用户可以选择使用新版本或上一版本。</p>\n<p><strong>模板 Store 使企业低成本获取成熟 App 应用</strong></p>\n<p>APICloud 精选电商类、 O2O 类、社交类和资讯类等最热门行业的多种模板。模板从 App 前端、后端、管理后台到云服务器一站式交付，提高项目的上线速度。其核心价值是让企业在低投入的情况下快速上线成熟的产品。 APICloud 联手优质的移动应用企业，将已成熟商业化运作的 App 转化为模板提供给客户，使企业实现从想法到上线的快速演变，商业模式的完美落地。</p>\n<p><strong>新国际版注册流程正式上线</strong></p>\n<p>美国、日本、澳大利亚、新加坡、韩国、马来西亚、加拿大以及中国香港、台湾的小伙伴们，使用本地手机号和邮箱即可注册 APICloud ，使用 APICloud 平台的技术和服务。</p>\n<p><strong>APICloud 强力推出 VIP 服务体系</strong></p>\n<p>在坚持免费提供核心技术的基础上，推出了“增值服务”来满足企业更高层次的服务支持需求。 APICloud 的企业 VIP 服务包含优先技术支持、渠道打包、在线培训课程、认证工程师考核。</p>\n<p>6 月 27 日为企业用户提供了权限管理、高速打包通道多项专属服务，让开发工作变得安全、高效、便捷！</p>\n<p><strong>云服务支持 Git 代码托管</strong></p>\n<p>APICloud 推出 Git 代码托管后，开发者可以使用自己的公有或私有 Git 平台进行 APICloud APP 的代码管理。一切的代码相关操作均可以在第三方 Git 平台上完成。开发者在无需依赖于 APICloud 平台进行代码管理，也无需将代码上传至 APICloud 平台的情况下，一样可以开发 APICloud 应用。</p>\n<p><strong>启动页闪屏广告</strong></p>\n<p>APP 启动后，通常要初始化数据， 1-2 秒后出现应用具体内容界面。在这段时间可以展示一些内容，通常是品牌 logo ，广告等内容。 APICloud 封装好了启动页闪屏功能，您只需要上传相应图片，在 App 启动时，即可看到闪屏已被设置为您上传的图片。</p>\n<p><strong>数据云容器 Docker 上线</strong></p>\n<ul>\n<li>专属的运行环境，独立的负载处理，容器级别的服务隔离</li>\n<li>自定义容器的配置，无 API 调用次数及流量限制</li>\n<li>支持提交代码，自定义功能扩展</li>\n<li>优先技术支持，优先使用高级功能</li>\n</ul>\n<p><strong>云编译支持引擎版本选择和固件版本选择</strong></p>\n<p>云编译保留 DeepEngine 的 10 个最近历史版本，默认使用最新版本进行编译，允许用户选择回退使用历史版本引擎进行编译。</p>\n<p>用户可以自主选择应用所支持的最低 iOS 及 Android 固件版本要求，为了达到更好的体验，很多应用有一定的固件要求，在云编译页面中增加固件版本选择，方便开发者对其进行配置。</p>\n<p><strong>开发控制台增添“我的账户”</strong></p>\n<p>在开发控制台中，新增“我的账户”功能，在其页面中，开发者可随时查询企业版服务、云服务账单、云服务使用明细和模块购买记录。此功能的上线，方便开发者对自身购买的服务形成系统、完善的使用管理。</p>\n<p>To Be Continued ……</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "[2016 年终总结上] 有关 40 万移动应用开发者的未来", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近老是有老外给留言，今天有一条是这样的，请大牛帮忙翻译下，实在看不懂，这是打广告么？</p>\n<p>Bardzo fajna strona, znalazam tutaj mnóstwo fajnych materiaów które poszerzyy moj wiedz. Fajnie e s w sieci takie strony.</p>\n<p>[url=http;//<a href=\"http://jakirower.co.pl\" rel=\"nofollow\">jakirower.co.pl</a>]Kross level b2 recenzja[/url]</p>\n</div></div>"], "reply": "3", "tittle": "有没有大牛帮忙看下这是什么意思？", "comment": ["这是机器人 spammer.", " 明白了，谢谢"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>字母上中下三排，预打字的时候，手指是在第二排（摸着凸出来的小点），然后，如果需要按第一排或者第三排的字母， case1:四个指头一起移到第一排 /第三排;case2:对应的一个指头移到第一排 /第三排。。。不知大家听懂了没，我目前是 case2 ，发现同事是 case1.。。</p>\n</div></div>"], "reply": "78", "tittle": "询问大家一个十指盲打时手指摆放的问题，谢谢。", "comment": ["😳我不知道，但我就是会打", "从来没想过这个问题，怎么舒服怎么快怎么来，并没有盲打强迫症，低头以下还能锻炼脖子不是~", "我都是瞎放，凭感觉，如楼上所说，怎么舒服怎么来。。", "食指 FJ,其后向左向右依次摆开就好.\r", "手腕的位置是基本上固定的,有些键盘需要 4 个手指要上,有一些只用一个手指上去.\r", "反正按完一个键后还是都要回来的.", "刚学计算机的时候有教过,但是基本还是食指和中指用的特别多,大拇指按空格\r", "\r", "怎么舒服怎么来~", "从来不会出现 case1 那种，感觉整体移的人会少吧", "虽然我是标准放法。。。但是真正按键的就那 4 ， 5 个手指", "分键盘,不用太教条.\r", "我就是笔记本和台式键盘用不同指法", "我敢说你肯定喜欢 vim ，重度强迫症患者，哈哈，开玩笑开玩笑", "要是一直打数字，肯定整体移到 number row ，但一般是不移的。", "lz 提醒我了，以前打数字命中率一直不高，学习一下整体移到数字列", "标准姿势啊 F-J 大拇指空格", "看懂了，正确的应该是 case2 ，只不过移动按键下去的时候其他手指是翘起来的", "看手的吧。无名指和中指 case2 ，食指和小指 case1 ，手残党表示怨念。。。", "我跟你们的摆法都不一样， asdf jiol 分别对应除了大拇指以外的，因为 io 的使用频率大与 kl ，而且因为键盘的摆放并不是最中间而是偏左，所以我才这样摆放的。\r", "\r", "另外就是怎么舒服怎么放不是么", " 另外就是我经常打拼音就是，，打代码感觉略慢了，特别是对 nm 两个会反应迟钝，", "case 3: 四指抬起……", "我都是靠感觉打字  =.=", "我打字只用一个小拇指，打得飞起", "F 键和 J 键上各有一个小突起，左右手的食指先放在上面再开始打字", "跟着感觉走", "随便打。 我感觉我打字从来没用过小拇指。。", "case1 ，特别是输入数字的时候。", "感觉怎么放都会回到自己最舒服的位置", "case2.5 ，食指单独出动，其余三指一起出动。", "我不知道我是怎么放的，但是我 LOL 是王者。", " 厉害", "这让我想起了一个词............   二指禅......\r", "\r", "大学有个 学计算机的室友..........   念了四年... 毕业的时候 还是二指禅..........  两个食指 在那敲啊敲啊....", "以前大学玩魔兽， 4 年竞技场，各种快捷键，现在 code 盲打毫无压力。。。😂", "CTRL,WSAD....左邊定位完成...\r", "上下左右....右邊定位完成.....\r", "...........好像暗示了什麼.......", " 为啥听了莫名喜感", "一开始手指位置放对，其它的就是纯经验。", "标准二指禅 感谢搜狗不比别人打得慢。=.=", "QQ 聊天学会了用那种，就用的是哪种。哈哈", "FJ 键，一般键盘上这两键上有凸起部分便于识别", "左手 awef ，右手 jio;", "左手正常，右手只用中指敲来敲去，，也不知道怎么养成的习惯，直到一天 同学提醒才发觉，，，", " 这个屌", "同看感觉，觉得哪个顺手就怎么弄，我盲打基本上是手乱放的", "感觉勾手按下面键的时候超级难受，所以一般会整体上下移", " 在学会标准指法之前我也是这么想的", "建议去练一下标准指法，绝对和现在的打字速度不一个档次。至少能比你现在的水平提高 20wpm 。这种东西就是不练不知道一练吓一跳。\r", "\r", "我大概练了一个月左右，每天的练习时间在一个小时左右，现在效果已经很显著了，主键区所有按键（是所有按键哦，包括符号和修饰键）都不用移动手腕。对提升编码速率非常明显。", "我是 case3 ，食指字母的时候，另三键不动。打完以后收回食指。其它字母的时候，食指基本不动，其它手指受牵连会有小幅度的连动。", "Case1 会很慢的，除非是按 F1-12 否则手不会整个移动……", "哈哈。盲打随便放了。键盘无字，手也随便放，这样都能打正确，服不服？\r", "脑子里还记了好几种键盘布局。", "home row", "没有特别注意过这个，但我应该是 case 2 。因为我有个手腕垫，发现我打字时手腕并不移动。", "这不能算是一个问题吧，闭着眼睛正确打出来就行了，管你用几个脚指头呢。", " 王者求带，^_^", "每次都是随便放，感觉到了就 OK", "觉得楼主问跟走路是先走左脚还是右脚差不多……", "左手食指放 D 键上", "以前是二弹指，现在已经练就了一阳指。", "一指禅。。随便放，如果按错了不用看自然就能根据打出来的字母调整到正确的位置上", "盲打的定义不是不看屏幕看键盘吗\r", "随便怎么摆都行 -_-!!", "完全看感觉 放哪里无所谓 知道自己手在哪就好\r", "\r", "我打了一些字做测试 然后拍了个视频看一下自己的状态：\r", "\r", "打完任何字手都不回位，除非用双手食指中指打数字整个手上移的，或者打特殊符号。\r", "比如打了 E ，那么之后无名指中指就会停留在 WE 上不动", " 我也是，打完指头不回到中排字母上，仍然留在之前的那个按键上。。", "左手:\r", "大拇指=Space, 食指=D, 中指=W, 无名指=A, 小指=Shift\r", "\r", "右手:\r", "不固定,但在触摸到键盘的时候一般是放方向键上", "打字这个东西莫名其妙的就练起来了, 还是盲打. ..\r", "等到知道规范指位的时候, 已经纠正不回来了....\r", "尝试过按照那个什么标准指位图打字, 但是速度惨不忍睹, 后来索性怎么爽怎么来", " 标准游戏手，不过我也是这样。哈哈哈哈", "键盘布局有很多种，不同布局指法可能有区别。\r", "\r", "建议可以尝试一下微软的人体工程学键盘，分分钟纠正指法问题。", "Vimer 路过！\r", "\r", "各种快捷键，我都不知道怎么就按出来了", "打字机显然是 case1 。电脑键盘基本是平的，布局越来越挤，而且按起来不费力，所以大致介于 1&2 之间", "盲打只能打出 T 型区域和四周 shift 等等按键，第一排和移动键需要看键盘。 \r", "\r", "初中时暑期无聊，去外面那种电脑培训班上过课，严格按照标准指法打字。现在习惯就是手碰到键盘，手指就各就各位了。现在想想，当初这决定，还是挺有意义的。", " 是的,经常玩 fps,不过完全不影响打字,标准 108 键随便背", "r#28 @", " 我这么多年也一直是二指，去年开始才尝试换种方式，现在大概用 4-5 个手指\r", "但是二指确实很快", "观察了一下自己打字时候手指的习惯， case1 和 case2 都不可能达到绝对的程度吧。", "数字那行需要 case1,其他够的 case2", "盲打从来没有注意过指位…一般左右就两个手指敲，右边 3 手指头敲，完全靠长时间摸键盘的习惯性反射……", "怎么舒服怎么来，为了所谓的标准指法，搞个肩周炎啥的，就不值当了", "按照规定的来，摸着 F 和 J 的图起点来定位。\r", "\r", "- - 毕竟学过...", "case 3: 左手食指 F, 右手食指 H 中指 J. vim 用户肯定有这样的.", "指法一直没学会，觉得很别扭，特别是用小拇指的时候。目前也是凭感觉打，不用小拇指，只用中间三个指头，大拇指空格", "我都是按一下再回来，然后摸摸小豆豆在不在", "写代码主要要按旁边的符号啊👋", "食指 fj 基准点。。。。后面依次排开。。。哦。。。。。我是八指禅 。。。。。。。。。", "跟着感觉走.怎么舒服怎么来.", "看你们吹了半天牛逼，我就真想笑了，有人能告诉我怎么盲打么？我干了好几年程序猿打字还得看键盘怎么整？  马德不许笑π_π"]},
{"content": ["<div class=\"topic_content\">个人使用，打算写个小程序，定时检测空气质量，有污染时给家人发微信提醒</div>"], "reply": "21", "tittle": "有没有免费好用的查空气质量的 web api 接口", "comment": ["全国空气质量指数 app 作者被约谈了", "北京上海成都这种的话可以抓美国大使馆的空气质量检测仪的推特，好处是不怕数据出处被约谈。。", "直接抓页面解析", " 个人用，不公开，应该不会请喝茶吧", "\r", " \r", " \r", "\r", "多谢两位，不过这两个站点的数据怎么不一样啊，而且差距还挺大，看了下上海，目前一个 71 ，一个 139 ，几乎差一倍", " 看了下上海美领馆的监测推特，似乎不太稳定，好多 No Data", "我只想知道我要信哪一个数据", " 有一个把一部分 2.5 算到 10 里面去了,两个对比对比\r", "数据来源,限制", " \r", "多谢，仔细对比了一下， ", " 的数据，大部分都比 ", " 要高，唯独最重要的 2.5 数据，显著低于 aqicn 。\r", "呵呵，这大概是传说中的污染治理措施吧。", "注意一下国标和美标的不同 ", "#reply51\r", "买个空气质量检测仪", "最近刚入手一个罗技 G502 可以控制鼠标 LED 。\r", "从美领馆 twitter 获取数据 用蓝 黄 橙 红等级改变鼠标 LED 灯的 python...\r", "结果一直是橙色눈_눈", " 666", " 大佬 Python 控制 rgb 灯怎么弄的 我搜了下没搜到诶", " 请问这是怎么做的啊? GitHub 上有吗?", " \r", " \r", "\r", "罗技 G 系列实验室有 SDK..照明 SDK 里有一个 LogitechLedEnginesWrapper.dll \r", "python 可以用 ctypes 直接调用\r", "LED = ctypes.windll.LoadLibrary( 'LogitechLedEnginesWrapper.dll' )\r", "具体方法看文档", " 成了 感谢一个"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"hightopo\" src=\"https://github.com/aleen42/PersonalWiki/raw/master/post/topological_webgl/1.png\"></p>\n<p>之前在掘金看了一篇不错的文章，是关于 WebGL 实现拓扑树的展现吧。所以，分享到自己的 Wiki 中。我想问问有认识这位作者的朋友吗？请问，这位作者的研究值得看吗？</p>\n<ul>\n<li>Wiki 链接： <a href=\"https://github.com/aleen42/PersonalWiki/blob/master/post/topological_webgl/topological_webgl.md\" rel=\"nofollow\">https://github.com/aleen42/PersonalWiki/blob/master/post/topological_webgl/topological_webgl.md</a></li>\n<li>原文链接在此： <a href=\"http://www.hightopo.com/blog/453.html\" rel=\"nofollow\">http://www.hightopo.com/blog/453.html</a></li>\n</ul>\n<p>小弟看了一下文章列表，感觉是同道中人！！</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "有认识这位搞 WebGL 的叫 Eric 的程序猿吗？", "comment": []},
{"content": ["<div class=\"topic_content\">看书看博客或者学习源码是好事，但总感觉不实际敲键盘还是变不成自己的。\r<br>\r<br>定期造轮子写玩具?\r<br>\r<br>还是有什么别的每天可以干些的办法?</div>"], "reply": "45", "tittle": "程序员有什么可以持续提升自己的办法?", "comment": ["多逛逛 B 站舞蹈区", "多在分享创造节点发帖子。\r", "\r", "或者少上 V2 。", "制定学习的计划", "side project", "找个好看的女朋友", "不百度，自己写一个你认为不错的脚本或者程序，如果你写不出来，那就是你不会的，需要去掌握。", " \r", "我觉得能在百度的情况下写出正确的代码才是真本事 😂", "去做自己不知道的事情", "女装（跑）\r", "（ 1 ）改别人留下的坑->提升调试、阅读代码的能力\r", "（ 2 ）推翻别人的坑->提升项目架构能力", "接单", "竞技秒选半藏并通知队友速来重建帝国", "多吸取新思想，然后用新思想写新框架，解决其他框架解决不了的问题", "把自己的知识结构梳理一下，你自然会发现还有很多东西没有深入，可以干的事情还有很多。", "know what you want and fight for it.", "提升代码美感。", "楼上好多不正经 233 ，不过说真的参与开源是一个非常不错的提升自己的方式（前提是自己的基础要比较扎实）", " +1", "逛 gayhub 和 看书 瞎折腾", "系统规划，持续学习", "少上这里", "少和那个玩守望屁股的那种人交往 23333", "不扯，务实一点！", "少玩游戏,多运动", "女装+1", "变态一点", "女装+1", "多运动+1", "多看书", "你可以尝试去教一些人 菜鸟还是很多的\r", "在教人的同时 你就是在提升自己\r", "加些菜鸟群 进去装逼带教人", "做外包，最好的学习方式，你会遇到各种问题各种没做过的项目", "看书", "1. 学会融入英文环境，在微博、推特、 HN 等平台广泛接触新知识，并记录吸收。\r", "\r", "2. MOOC 课程，非常好的提升自己的方式。\r", "\r", "3. 加入开源社区，与全世界的开发者交流想法。\r", "\r", "总之我认为要让自己的视野保持在一个比较高的层次，去接触相关领域的优秀程序员，前沿知识，保持好奇心和积极性，树立终生学习的概念。", "敲源码 233", "大 JJ", "做个有用户使用的产品，然后各种坑你都能踩到了。", "每天写代码，读别人的代码，\r", "去做有实际用户的项目\r", "每天刷题 ，例如 ", "\r", "去教菜鸟和小孩 用他们懂的语言", "加入技术主导的公司，和比自己牛的人一起工作，提升以后继续跳槽。。", " 很多程序员不 google 百度就写不了代码呢", "楼主图标是个 com2us 手游的图标。具体什么关系?", "我有空就开发 ", " ，已坚持多年。买域名、搭服务器、搭 SSL 、运营、维护，都是对自己的训练。在这上面试用各种新技术， Kotlin ， Spring Boot ， Gradle ， Ebean ， Vue.js ， HTTL …… 现在这些技术都不新了，走入千万家了:)", "要有复仇要报，要有后宫要纳。要有共青团要斩。\r", "\r", "动机最要紧。。。爱  恨。\r", "\r", "\r", "多做小项目。   短平快。进度感明显的。\r", "\r", "\r", "纯粹的为了学而学，然后自我感觉良好了一缸。我觉得是不长久的。 还是要有外部效应\r", "\r", "\r", "\r", "教", "教别人！\r", "\r", "教是最好的学。\r", "\r", "写是最棒的读。\r", "\r", "新陈代谢了一缸！", "目标：做英文应用或接欧美的外包，赚老外的美元。然后就发现有许多东西需要学", "楼主头像游戏已玩过的飘过", "多打游戏放松"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>对的， meitu 自己内部除了搞了一个 php 版本的 kafka consumer group ，还搞了一个 golang 版本的。</p>\n<p>为什么不用已有的? 主要当前已有的版本设计有些不符合我们的预期，比如:</p>\n<ul>\n<li>consumer 启动消费，应该要么全部分区成功，要么启动失败而不能是部分，之前踩过这个坑</li>\n<li>日志耦合到依赖库，依赖库日志量巨大，线上不得不关闭。如果有问题没有任何日志可以排查。</li>\n<li>重试机制比较奇怪..</li>\n</ul>\n<p>综上我们内部自己基于 sarama 和 go-zookeeper 开发了自己的版本，并在内部线上使用一段时间。</p>\n<p>现在放到 github 上面来，欢迎 pr 或者拍砖。</p>\n<p>地址: <a href=\"https://github.com/meitu/go-kafka-consumergroup\" rel=\"nofollow\">https://github.com/meitu/go-kafka-consumergroup</a></p>\n<p>php 版本见之前主题: <a href=\"https://www.v2ex.com/t/330413\" rel=\"nofollow\">https://www.v2ex.com/t/330413</a></p>\n</div></div>"], "reply": "6", "tittle": "golang consumergroup 开源", "comment": ["已 star", " 感谢支持哈", "资瓷~", " 甚可思", "你是怎么 解决这些问题的？", " \r", "\r", "1. 启动部分失败直接退出并提示信息(这时候一定是有问题才会占用失败)，处理完重启。\r", "2. 提供一套独立的日志接口"]},
{"content": ["<div class=\"topic_content\">摩拜单车小程序不能打开闪光灯嘛，晚上扫不了码呀。\r<br>好像摩拜单车还不让在 app 和小程序里同时保持登陆状态，最后只好默默地把 app 装回来。</div>"], "reply": "27", "tittle": "昨晚使用摩拜单车小程序的一个小问题", "comment": ["打开手电筒啊", "扫码界面的右下角就是打开手电筒开关啊。", "跟你说 最好别开手电筒 开了手电筒的识别成功率要远小于开让相机开夜景模式", " \r", " 木有啊 我是 iOS 微信的小程序 可能 Android 的小程序能拿到这个权限吧\r", "\r", " 不开手电筒从来没扫成功过。。。", "不能在系统里直接开么...", " 我也试过 一进扫码界面手电筒就被关了", " 调整好角度，不要拍到车牌的反光就行了，很简单", "充值的时候你一样得装回来", "先用系统相机开闪光灯拍二维码，然后摩拜的扫描从相册扫描", "OfO Play 上的版本这个就做得非常好，主界面解锁区域右上角就一个快捷开关闪光灯的手电筒图标。", "晚上怎么调整姿势，都有一片的反光\r", "所以，每次都扫好一阵", "越来越觉得输编码开锁比扫码快，可能是手机垃圾吧", "ios 的微信里可以呀，我昨天刚用的", " 我的是这样\r", " \r", "没看到在哪里开手电筒呢", " 楼主你呆萌得可以。你家苹果不是上划一下就能手电？我真是想笑了", " 你自己亲自试过吗……在扫码节目打开手电筒后退出 control center 的同时手电筒会自动关掉。", " 我真是想笑了", "老老实实用 app 吧。。", "😄😄😄 谁能解释一下这个雕塑的含义～\r", " \r", "\r", " ", " 安卓是有的\r", "你可能用的是假摩拜（笑）", " 微信小程序的摩拜单车的确没..", " \r", " ", " 可能需要亮度低于一定值才会出现", " 请问你是怎么发的新浪微博的图片呀", " \"轻触照亮\"几个字是微信按照摄像头当前光线强度自动判断弱光环境才出现的。可以试着用手指头遮住摄像头创造弱光环境试一下。说实在的，微信这个自动感知弱光的设计还是很赞的。。。", "哦\r", "对了\r", "我 nexus 5x 7.1 现在每次用摩拜都会把后台的网易音乐给搞崩溃！\r", "是打开照相机的时候！", " 红黄蓝争抢上位"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>觉得小程序不光有用，有的也很好玩，所以做了个好玩榜，现在就是少了点投票</p>\n<p><a href=\"https://www.wxappr.com/apps/fun\" rel=\"nofollow\">https://www.wxappr.com/apps/fun</a></p>\n</div></div>"], "reply": "5", "tittle": "做了个小程序好玩榜，你觉得哪个好玩？", "comment": ["反馈一下\r", "-填写小程序名称等信息提交如果没有进入第二步小程序名就被占用了\r", "-填写信息 hing 麻烦，各种截图二维码\r", "-界面一股清流，比那些小程序商店清新一点\r", "-楼主是不是考虑一下去那些个小程序商店抓小程序数据，毕竟填着 hing 麻烦", " 本站也有意开源", " 你说的很有道理！如果没发布名字就会被占了", "这么多小程序了，玩几个先"]},
{"content": ["<div class=\"topic_content\">他说，既然他提交了错误的数据就应该给 500 的页面。明明可以对错误做统一的处理为啥还要做验证～\r<br>说服不了他，\r<br>我真的是尽力了_(:з」∠)_</div>"], "reply": "88", "tittle": "同事宁愿把 500 页面丢出去也不愿意对提交的数据做验证。", "comment": ["500 就是他的统一处理", "他只是懒，换个时间和他说下，比如周一", "你们上司不管这事么？总是 500 影响企业形象啊", "错误的数据是啥？客户端不做校验么", "那么就有机会 SQL 注入了，以及各种 DOS 。", "能出 500 ，说明是异常了，这种代码一般都会有漏洞。看他代码，找个漏洞“自己造”个数据让系统崩溃 /误删 /清空等等，让他认识到错误。还不听，就让老板认识到错误。\r", "\r", "如果是他经过判断，自己抛的 500 另说~", " 客户端的检验也是很被动的，不说他们也不做。", "能出 500 直接接住了不就完了么。。给用户显示个友好页面这么难么", "客户端提交了错误数据，不应该丢 4xx 么？", "没有测试人员吗", " 他所给的 500 ，是因为客户端提交了错误的数据，导致服务端出现了异常返回的。也就是说他并没有处理这个_(:з」∠)_", " 都是一些很小的问题，他认为这些数据都应该是经过了客户端验证的，所以他代码里面很少会有接住的代码。然而我们的前端的小伙伴也并不主动去验证数据|･ω･｀)", "告诉他 500 错误属于服务器错误，是他的工作错误。\r", "\r", "让他记录到 Log.每个月统计 500 错误数量，作为他的 kpi 。\r", "\r", "客户端的错误叫 4xx ，和 5 开头的没关系。", "按照 HTTP 标准，验证出错是应该返回 422 的\r", "\r", "```\r", "422 Unprocessable entity\r", "\r", "The request was formatted correctly but cannot be processed in its current form. Often used when the specified parameters fail validation errors.\r", "```\r", "\r", "另外，服务端验证能更有效的保证数据的准确完整，楼主可以试试通过这个缺陷把系统搞崩溃掉来证明你是对的（慎重，同事关系也很重要）。", "电源插头插反了就是应该爆掉，不应该友善的设计保护电路。\r", "汽车撞墙上就是应该去死，不应该友善的弹出安全气囊。\r", "红灯时候过马路就是应该被车撞死，不应该设计行人路权最大的交通规则。\r", "\r", "不懂得设计里的防呆设计，这叫见识短。\r", "见识短没关系可以学，但连一丁点浅显的人性化思想都没有，这叫僵硬直板的技术型思维。\r", "\r", "但以上都是表象。\r", "我一直认为，不懂换位思考的根本原因，就是自私。", "我他娘的一个门外汉都知道前端后端都要检验数据，说白了，你这同事欠 X", "觉得这个得分前提,大家不能一上来就\"爆\"他!\r", "如果一个页面有特么 N 多输入框,每个框的值校验不一样,输出提示又各不相同,业务指导不明确,主要是开发时间紧,换了是我,也是直接 500...我得考虑我先要活下去,再来谈你们的用户体验...", "这代码能用？试用期都活不过吧", "。。 500 页面？？后端写的接口返回处理的结果就可以了啊，他保证了安全以及给出对应提示，展示的页面这些不应该是前端做？？为什么要爆他捏？", "相信我，默默做好自己的。提高自己然后跳槽。不然你会得罪人，最后也干不下去。", "相信我，默默做好自己的。提高自己然后跳槽。不然你会得罪人，最后也干不下去。", "其实这个问题就是到底是应该前端负责校验还是后端.我认为都需要，并且前端校验要更严格一些.", "既然 http 协议定义了 500 ，那肯定有它的用处。", " 真的很疯狂，服务端验证当然是必需的。不过呢，你别得罪人，日子还得接着混。说两三遍，他不接受意见，那就算了。", "500 强", "你是他领导吗", " 不是。。。。", " 你管的多了", "楼主要不来我公司吧……", "500 根本就没去验证数据咯", "然后他把 500 改成了 200 ，一律返回：服务器内部错误，请重试。", "看是什么样的页面呗，给自己人弄得临时小工具，确实不必要瞎折腾", "告诉他很多路由器，运营商劫持 500 ， 404 啥的错误。", " \r", "其实“业务指导不明确”这个最关键，要是明确的话倒是可以第一版本先直接 500 ，后续再升级。可要是不明确的话就完蛋了。", "一个正常的网站一般很少会出现 500 页面\r", "这绝对属于后端的错误、异常\r", "并不是他所说的“处理流程”", "必须是应该丢 400 页面啊。", " “他认为这些数据都应该是经过了客户端验证的” 后端不应该信任提交的数据是常识。就这一点就可以往死里喷他。", "老大跟我们后端说,绝对不能让用户看到 500 开头的...", " \r", "我就想不明白，那家伙难道不知道数据可以伪造吗？就这种水平完全是项目的灾难啊。", "撸主去知乎一类的网站看看“ HOW TO work with the ones you don't like ”", "这个得看各种因素，本身前端就有一次校验，然后后端有一个数据需要 int ，后端直接强制转换成 int ，然后不是 int 的时候抛出 500 也不会有什么危害，同理没传某个参数导致 key 不存在而抛出异常，而不会有什么危害。反正不要出漏洞就好了，非正常数据前端应该拦截，绕开前端过去，抛 500 无可厚非。反正一句话，他写的东西不被攻击就好了。", " 这个在理", "既然知道什么数据是错的，什么是对的为什么不约束？让他走一条路，明知道此路不通硬要人走，然后到断头处再回头？", "某种程度上，开发的水平体现在严谨、高效，人都是懒的，但是有水平的人会想办法用好的方式解决", " 业务的数据校验确实要做，那么问题总是出在谁做，虽然我只是产品的，但是我都知道，严谨的情况是要共同验证的，而且验证的机制需要同步，客户端验证为了减少接口请求，服务端验证为了严谨， 500 这种在我理解是系统崩溃，根本不在业务范畴", "因为他懒，永远不要相信前端校验。\r", "\r", "无论是 js,还是 Android ，还是 iOS 都不能相信。", "前后端都要进行校验。\r", "前端校验只是减少不必要的请求，有问题发现在萌芽状态，减少错误提示的延迟，体验也好一些。\r", "服务端做校验是必须的，如果你的数据不做校验，任其异常，指不定要出什么幺蛾子。\r", "\r", "对于你同事的这种行为，我表示鄙视！", "有一说一\r", "Docker Daemon 的 API 大部分客户端错误都叫 500", "还有人直接不返回的", "发地址，让 v2exer 们教他做猿", " 不要侮辱技术性思维，这就是懒+不负责任", " \r", "> 觉得这个得分前提,大家不能一上来就\"爆\"他! \r", "> 如果一个页面有特么 N 多输入框,每个框的值校验不一样,输出提示又各不相同,业务指导不明确,主要是开发时间紧,换了是我,也是直接 500...我得考虑我先要活下去,再来谈你们的用户体验...\r", "\r", "你没看懂，楼主的同事的方案是什么都不验证，只要服务端有异常就返回 500 。而不是验证后不通过统一返回 500 。", "懒，或者没信心处理好。", "没啥大不了的，顶多就是不小心输入错误数据的用户看着一个 500 一脸懵逼呗", " 最怕空指针异常 2333", "其实也说明后端程序不够健壮，后端不应该依赖前端的输入。换句话说，不管前端做不做校验后端都要做，后端一定要把好门，因为后端的校验是最后一道安全门。", "提交错误数据应该报 400 错误，而不是 500 错误，说明请求数据错误", "实际上，他应该检验，不过对于你就是多管闲事。 \r", "不管前台后台验证要么需求讲清楚，要么让测试催。 \r", " 对于电脑小白，看到 500 没准会怀疑电脑中毒或者坏了", "一般这种人，要么就是偷懒，并且 pm 和老板还漠不关心的，要么就是对用户体验一点概念也没有。", "他可能是面向工资在编程，而不是把编程，实现产品作为一种艺术。", "揍一顿就好了", "其实。。 500 有啥不好的。。看了这么久也没看明白，谁规定 500 非得跳出个错误页面了。。 api 接口不是通除了返回信息来判断，通过 status code 也很常见啊\r", "比如说封装个 error 方法，在提示错误的同时设置 status code 不是很正常么？", "我只知道按规则来，自己犯的错为什么要别人给你擦屁股", "没有标准，只有适合（考虑公司团队规模，产品规模，业务规模，应用场景因素等太多了）\r", "假设功能只有内部人用，极速开发等场景，我负责的项目，省略后台校验没问题。\r", "lz 没说明这件事儿的背景，吃瓜群众们不要乱说", "接收到错误的入参确实不应该用 500 ，使用 400 Bad Request 会更好一点。\r", "\r", "话说 500 的服务端错误一般应该是会记录详细的错误日志的吧？ 如果用户输入错误都是返回 500 的话倒不失为一个 DOS 的攻击入口", "  500 错误作为 kpi 这事情以前我们公司还真搞过，但效果就呵呵了 -- 同事搞个 try catch 然后所有的 500 都改成 404 (/ □ \\)", "我建议你报警", " 不是内部功能，是对外给客户的", "你们两个的要求不一致。 一个要求是健壮性，一个要求是正确性。至于谁对谁错，就得你们产品的技术要求。", "qa 提个 bug 在系统里面,不改就算事故...", "401 402 403 404 什么的可以合理使用, 500 不能接受啊,500 浏览器的提示是服务器崩溃.", "他这不是懒,他只是太将就了,他没有那种希望自己做出的东西要尽善尽美的欲望.他不适合干这行.", "加入 KPI 体系", "500 一般是服务器代码异常了，异常了就说明是代码有 bug ，需要修复。期望的是 500 永远不要出现，一旦出现就要找到原因并直到它不出现。\r", "用户数据校验失败应该是返回 4xx 错误更合适，这种应该有个合理的提示告诉用户。", "服务端应该校验客户端提交的数据。", "加入 KPI 体系 +1 \r", "\r", "我们这后台主要做 RESTful API 。 HTTP 状态码一律 200 ，消灭 5xx", " 然后他在 nginx 加了个 error_page 的配置，全部改成了 302", "不应该是服务端和客户端都要做验证吗，是我理解错了吗？", "客户端验证是为了更好的用户体验，错误提示什么的，服务端验证是为了程序能够安全的运行，都得做！！！", " \r", "\r", "RESTful API 的话\r", "\r", " HTTP 状态码 **不能** 一律 200", "你管他干嘛，领导自然会管他的", "而且你是想当场说服他让他马上承认错误并且谢谢你？一般人都会下意识反驳你的，面子啊。", " \r", "极致的 RESTful http 状态是有语意的，全 200 还不够啊，哈哈哈\r", "不过这个经常被乱用，处理起来也麻烦，感觉大部分场景都是约定一下选几个粗来用", "这个同事肯定不对，后端肯定要校验的。但是，如果领导都不管的话，楼主为啥要操这个心？", "一些理论不可能出错的数据（除非用户攻击）直接强转，错误抛 500 没什么问题。\r", "例如：文章 id ，正常都是数字，有人尝试注入报 500 没什么问题（友好 500 页面，不能把 sql 爆出来）。", " \r", "\r", "我们偷懒了，除了 404\r", "直接返回 json 格式的字符串。错误码，错误信息都放 json 里。", "@产品经理", " 又黑 docker😂", "抛 500 没问题，但是这个 500 一定得是他写的代码抛的，而不是未经处理的服务器出错抛的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>先谢谢各位大大~<br>\n如下一棵树：</p>\n<pre><code>       1\n    /    \\\n   2      9\n  / \\    /  \\\n 3  4   5    6\n   / \\\n  9  10    \n</code></pre>\n<p>传入一棵树头节点，导出的结果应该是从下往上 从左往右顺序的数组<br>\n上述的导出应该是<code>[9,10,3,4,5,6,2,9,1]</code>这样的数组</p>\n<pre><code>vector&lt;int&gt; tree_leaf(TreeNode* note) {\n        \n}\n</code></pre>\n<p>我考虑了个思路，但是没能写出运行成功的代码，希望前辈指教啊。。</p>\n<ul>\n<li>在递归循环过程中，设置一个 <code>int layer</code>  记录当前的层级  ，在全局用一个<code>vector&lt;vector&lt;int&gt;&gt;array</code> 的方形矩阵记录下每个层级的值</li>\n<li>在这个逻辑中，递归退出的基点遍历到某节点左右树枝均为空，此时用返回层级为 0 ，并同时记录当前节点的值为<code>array[layer].pushback(current_note.value)</code></li>\n<li>根据上述逻辑。在图中 3 遍历完了的时候， 3 这个节点的 layer 还是没能拿到，此时回到 3 的父节点 2 ， 2 再去右子数遍历到 9 ，这时 array[0].pushback(9),但是之前的 3 却无法再次被遍历到无法入数组了，这个该如何解决呢？</li>\n<li>这个可以用队列循环的思路来做，但是如果用递归如何完成呢？  谢谢各位大大。</li>\n</ul>\n<p><strong>在下最近被递归，特别是 递归中返回值利用 ，还有 临时的压栈值 给搞糊涂了，如果有相关的教程或者书籍推荐，在下真是不甚感激啊！！</strong></p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>此问题已解决，谢谢各位大大！</p>\n<p>今后有同学看到该帖时，如与我有相同疑惑，可参见 9楼 srip 同学提供的  <a href=\"https://siddontang.gitbooks.io/leetcode-solution/content/tree/binary_tree_level_order_traversal.html\" rel=\"nofollow\">思路</a>。 祝大家刷题愉快~</p>\n</div></div>"], "reply": "27", "tittle": "请教递归，有兴趣同学进啊", "comment": ["按层遍历而已。挺简单的啊。请预习数据结构。😃😃😃", "从上往下，从右往左进行广度优先遍历，再逆序", " \r", " \r", "谢谢大大，这种遍历一般都是用队列循环思路。 请问这类问题用递归可解吗？  最近在练习这个。。", "循环+stack = 深度优先遍历（深搜）\r", "循环+queue = 广度优先遍历（广搜）", "用栈更简单吧", " 怎么说？", "第一反应是用层序遍历， 然后把每一层的合起来就好了。 层序遍历嘛，就感觉用循环比较容易。 如果想要语法形式上的递归的话，  用一个新的函数，把循环的时候的变量作为参数传进函数就好了。好像这样就是尾递归而已，如果用不支持循环的语言来实现的话，可能就只能这样了。\r", "\r", "如果形式上的递归还不够，一定要用递归的方法的话，我也没想到要怎么做……", "树的先序 /中序 /后序遍历，说层序什么的请重修数据结构，谢谢。", "关键词 level order traversal dfs 。\r", "\r", "代码可参考 ", "\r", "最后把 vector of vector 压扁即可。\r", "\r", "具体说到你的思路，在这题目中不需要返回值，因为你不需要把东西返回给上一层，一直向下遍历把数字塞到 vector of vector 内部就可以了（因为你最后才把 vector of vector 拍扁）。你需要实现的是这么一个递归函数 void dfs(vector<vector<int>> &array, TreeNode *node, int curr_level)", "递归的话，先序 /中序 /后序 遍历整颗树\r", "然后对每个节点的深度进行标号 入队\r", "然后按深度 1234 逐个出队就好了吧", "bfs 用递归不是蛋疼嘛？ 乖乖循环多好。\r", " 那要请教 Level Order Tree Traversal 是该用先序、中序还是后序呢？", " 挺好奇按照你说的这三种方法怎样输出楼主的结果", "BFS 啊 朋友...", " \r", " \r", "\r", "这个问题里面只要确保同一个节点的子节点访问顺序是先左后右，用先 /中 /后序遍历都可以，只是在 DFS 递归时要额外携带当前深度信息，以及按深度区分的二维结果数组，遍历完成后组合结果即可。", " \r", " \r", "\r", "用 BFS 非递归实现也可以。如果不考虑移出队列的操作， BFS 时所使用的队列中最后的内容其实已经接近这题目所要求的结果，只是在按层数排列上是相反的。\r", "实做的时候，在 BFS 中增加一个额外的二维数组，每次有节点放进 BFS 队列时同时更新这个二维数组即可。\r", "实现效率上因为是迭代式的，会比递归算法高效很多。", " czheo 同学给出的方法就是先右后左哦。我挺奇怪的是，回复问题只说访问子节点的顺序，算是解决问题了么？", " 大概你没仔细看，我说的是在 DFS 递归实现时需要先左后右。 @", " 给出的是在 BFS 时通过先右后左的办法，最后再一次 reverse ，既解决了我上面说的正常 BFS 时层数顺序相反的问题，也无需用到二维数组。\r", "至于我最开始的回复，只是吐槽层序这个说法而已。", "  层序这个说法有什么可以吐槽的呢？", "你们到底在瞎逼逼啥，我不是都给出答案了吗， bfs 十行代码的问题。 talk is cheap 。。。", " 因为我觉得层序是描述的这个问题本身而不是解法。", " 那你仍然觉得我应该重修数据结构吗？", " 瞎逼逼当然就是没目的地逼逼。 lol", " 既然你问到了，从你上面的回答来看，我觉得是的，你应该重修数据结构 :D 为了避免彼此在这么无聊的问题上继续浪费时间，不如让我们愉快的互相拉黑吧 :))", "层序遍历一遍再反过来就好了", " 抱歉，又想了想，确实是我在抬杠，请接受我的歉意。总觉得自己已经过了上网和人瞎逼逼的年龄，看来还是自己修炼不够。", " 好的，那就🤝。 我一般也不在网上跟人争，但是之前莫名其妙被叫要去重修，关键是不说明原因，我实在是很不爽。 大家都是读书人，还是应该就事论事，创造一个良好的氛围。如果你去 stackoverflow 和 quora ，即便别人说的再傻，我估计你也不会这样说。 我个人觉得国内的社区氛围没那么好，每个人都有责任。"]},
{"content": ["<div class=\"topic_content\">rt,不过有另一点感受是,用熟几个快捷键效率确实很高</div>"], "reply": "4", "tittle": "mac + hhkb,在 eclipse,vim 下的快捷键是不是好多?感觉要学不过来了..", "comment": ["万年 vim 党，程序员的效率关键并不是在编辑器上啊兄弟，感觉你有点强迫症，纠结过头。", "如果你要做一个打字员的话,那么键盘的速度确实非常重要!", " 主语言是 java ，在公司主要用 eclipse,自己的项目用 idea", " 显示不是。 不过思如泉涌的时候还是快那么一点好阿 [哭哭脸] "]},
{"content": ["<div class=\"topic_content\">例如说内网环境下， TCP 关闭拥塞算法和不关闭有什么区别。</div>"], "reply": "10", "tittle": "我在想， TCP 能关闭拥塞算法吗，关闭后和关闭前有什么区别。", "comment": ["感觉真关闭了丢包会爆炸。", "直接进入恶性循环：拥塞，丢包，重发，拥塞", " 这样感觉和 UDP 没什么区别了，不过 UDP 有没有重发不太清楚。\r", "禁用重发的话就是一直丢包了吧，手动指定可利用最大带宽呢？", "内网都能拥塞，赤裸裸的想马儿跑又不想马儿吃草\r", "不出国，跑 UDP 一样能飞", " 某些小运营商会对限制非 DNS 的 UDP ，因为 P2P 泛滥。\r", "\r", " UDP 没有重传，重传必须在应用层实现。", "手动指定可利用最大带宽有什么优势吗？网络通信随机发生又不一定一直占用数据链路，制定带宽必然限速，整体吞吐量就下降了。这对追求通用、底层的流式运输层 TCP 来说， exo me ？？？", "关键雍塞控制是 TCP 协议的一部分阿，不管你具体选择什么算法，总得要有一个算法。我建议你多学学基础网络，提高下姿势。", " 我觉得手动指定带宽能避免关闭拥塞后的大量丢包...", " 是可以，但你没明白我的意思..", " 明白是明白了...\r", "感觉这在公网的情况下用一个好的拥塞算法或者关掉手动限制最大带宽也不错（机子不坑的话...）"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>2016 年对于 APICloud 来说是增长的一年更是收获的一年。这一年里 APICloud 的产品经历了两次巨大更新和升级为原生开发者带来了全新的产品 SuperWebview 为传统企业和互联网公司解决 App 定制难题。 APICloud 从移动应用开发专家蜕变、升级至移动应用开发+定制的良性生态系统。</p>\n<p>接下来的时间 APICloud 将从 6 个方面梳理 2016 年的过往敬请期待</p>\n<h3><strong>APICloud 引擎加速</strong></h3>\n<p><strong>针对部分机型进行专门渲染优化</strong></p>\n<p>APICloud 在 DeepEngine 的基础上推出的公测版引擎该引擎针对三星、小米等大屏 Android6.0 及以上手机进行了专门的优化适配 APP 在窗口动画切换内容滚动等渲染性能和用户体验上有非常显著的提升。</p>\n<p><strong>APCIloud 云修复功能升级增加热启动功能</strong></p>\n<p>在之前的云修复版本中 APP 功能更新完毕后用户在下次启动 APP 时才可以看到更新后的效果。而在增加热重启 APP 功能后用户不用关闭重启 APP 就能立即体验到新增功能让新增功能立即生效用户体验更流畅。</p>\n<p><strong>APCIloud 与腾讯达成深度合作</strong></p>\n<p>1)在动态编译 SuperWebview SDK 时针对 Android 平台我们提供了基于 APICloud 核心引擎的版本和基于腾讯 X5 引擎的版本供开发者选择如果开发者勾选了腾讯 X5 的版本动态编译后的 SDK 中即搭载 X5 引擎。</p>\n<p>2)在编译 WebApp 时针对 Android 平台我们提供了基于 APICloud 核心引擎的版本和基于腾讯 X5 引擎的版本供开发者选择如果开发者勾选了腾讯 X5 的版本则编译后的 APP 将使用 X5 引擎加载您的 H5 站点。因 X5 引擎兼容微信的缘故该 H5 站点将拥有其在微信当中运行效果和体验。</p>\n<p>3)在聚合 API 中提供了名为“ webBrowser ”的内置浏览器功能模块该模块内部集成了 X5 引擎方便开发者在 DeepEngine 中使用 X5 引擎进行 H5 页面的展示。该模块通过可定制度高的“ BrowserView ”和独立 Browser 类似于微信两种方式提供 API 。</p>\n<p><strong>iOS 引擎兼容性能更优秀的 WKWebView</strong></p>\n<p>使用 webkit 内核更快的 javaScript 引擎 GPU 提供硬件加速渲染更流畅页面滚动过程中不阻塞 css 动画以及图片渲染等内存消耗大幅减小。</p>\n<p><strong>APICloud 引擎开放同步接口机制大量 API 接口支持同步返回数据</strong></p>\n<p>端 API 同时兼容同步和异步操作带来更灵活的编码方式。</p>\n<p>异步接口使用 module.fun({param}, callback);</p>\n<p>同步接口使用 var ret = module.fun({param});</p>\n<p><strong>App 引擎开放自定义下拉刷新功能模块</strong></p>\n<p>传统的下拉刷新动画和模式已经无法满足用户挑剔的视觉体验。 APICloud 开发引擎下拉刷新模块机制开放后 Android 和 IOS 开发人员可以根据该机制灵活开发任意效果的下拉刷新模块供开发者使用实现任何符合开发者 APP UI 设计场景的下拉刷新效果同时官方还开源了一套 iOS 、 Android 版本的下拉刷新模块的模板代码模块开发者可以根据这套模板简单更改后即可定制出新效果的下拉刷新模块。</p>\n<p><strong>Apploader 和自定义 loader 支持断点调试</strong></p>\n<p>电脑上写的代码终究要在移动终端呈现最终效果。所以真机调试对移动开发者来说还是很重要的现在 APICloud 的 apploader 和自定义 loader 都可支持在 Android4.4 及以上手机中配合使用 Chrome 进行真机调试实时跟踪 app 的内存情况执行流程让开发者更容易查找 app 的错误原因提高开发效率。</p>\n<p><strong>增加 frame 事件回调轻松实现“内置浏览器”</strong></p>\n<p>在 APP 中调取外部 HTML5 链接时实时监听 frame 状态轻松实现“内置浏览器“功能让用户在 APP 内体验像在微信中打开美团外卖优惠页的加载效果。 APP 内嵌入浏览器内核可获得更多视频格式、文件格式支持在流量、页面加载速度、 H5 效率等方面为用户带来更好体验。</p>\n<p><strong>引擎开放 UI 模块沉浸式效果适配机制</strong></p>\n<p>APP 的“沉浸式”效果由引擎统一适配并开放 API 给模块模块仅需根据 API 判断后做简单的平移即可适配轻松支持“沉浸式”效果。</p>\n<p><strong>适配 Android 6.0 和 7.0 机型</strong></p>\n<p>Push 防杀优化网络请求适配硬件加速适配过渡动画适配不同厂商 ROM 适配更多优化工作还在持续跟进。</p>\n<p><strong>优化 download 、 imageCache 缓存策略</strong></p>\n<p>兼容更全面更多不规范服务器环境下的资源访问大幅减少本地存储空间占用。</p>\n<p><strong>iOS 引擎支持应用 ATS 配置</strong></p>\n<p>允许开发者对 iOS 应用的 plist 进行 ATS 相关配置灵活应对苹果 AppStore 针对 APP 是否支持 HTTPS 的审核政策。</p>\n<h3><strong>模块 Store 多样化增长</strong></h3>\n<p>2016 年 APICloud 新增和更新模块共计超过 400 个实现实时性的快速增长更结合时下潮流功能重点推出音视频和直播等模块功能为开发者多样化、丰富品类的选择。模块包含 APICloud 官方推出的模块、与 APICloud 平台建立合作关系的第三方服务商提供的模块以及 APICloud 用户贡献的模块。模块 Store 真正成为了一个围绕 APICloud 平台的开发者生态体系。</p>\n<p><strong>官方新增更新基础功能模块</strong></p>\n<p>由 APICloud 官方新增及更新模块有 70 多个其中包含计步器模块、高德定位、阿里云直播、云之讯短信验证、自定义拍照、可自定义样式添加示意图标的折线图等多种开发者强烈呼吁发布的模块。</p>\n<p>APICloud 在研发新模块的同时还不忘对已有模块进行更新和升级、不断完善让平台开发者用起来更加得心应手简单几行代码即可完成复杂的功能需求。重点优化升级的新模块有图片剪切、底部 /顶部导航条、单项 /多项选择器、加载进度条、滑块选择器、可随手指拖动移动的按钮、 coverflow 效果图片轮播导航等数十种类型的模块。</p>\n<p>APICloud 秉承为开发者服务的中心思想对已发布模块开发不断添加新的功能点。例如高德地图、百度地图模块添加支持 closeBubble 、添加放大缩小监听等功能微信模块添加 lang 参数支持自定义语言隐私模块的每个接口回调函数添加 details 参数返回权限详情等。另外对 fs 、 db 模块添加了同步接口 audio 、 netAudio 添加了来电打断事件的监听 trans 模块添加 md5 编码功能 3DTouch 增加动态配置应用快捷菜单的方法等共计完善几十个功能点。</p>\n<p><strong>合作云服务商新增更新模块</strong></p>\n<p>2016 年 APICloud 合作云服务商提供了各种类型模块多达 58 个其中最新发布的重要模块有</p>\n<ul>\n<li>雪落无声启动系统常用设置页面的接口</li>\n<li>汉王识别模块系列</li>\n<li>付钱拉聚合支付模块</li>\n<li>网易七鱼客服模块</li>\n<li>神策统计分析模块</li>\n<li>美洽客服模块</li>\n<li>亲加视频直播相关模块</li>\n<li>保利威视视频播放器模块</li>\n<li>苹果银联支付模块</li>\n<li>贝宝支付模块</li>\n<li>谷歌分析模块</li>\n<li>七牛云存储模块</li>\n<li>又拍云存储模块</li>\n<li>高德导航模块</li>\n<li>anyRTC 视频直播相关模块</li>\n<li>芒果广告相关多种模块</li>\n<li>万普实际广告模块</li>\n<li>蓝牙打印机模块</li>\n<li>腾讯统计分析模块</li>\n<li>百度统计分析模块</li>\n<li>友盟统计分析模块</li>\n</ul>\n<p>第三方服务类模块的更新升级的重要有</p>\n<ul>\n<li>个推模块优化提示安全性</li>\n<li>天翼模块后台支持自定义通知内容</li>\n<li>保利威视模块优化红米频繁回调卡顿问题</li>\n<li>Becloud 添加苹果支付功能</li>\n<li>QQ 模块添加分享文本接口</li>\n<li>微信分享登陆模块支持分享给好友</li>\n<li>科大讯飞语音识别模块添加多种发音功能</li>\n<li>趣拍云直播模块添加支持 iOS 平台</li>\n</ul>\n<p><strong>个人开发者新增更新模块</strong></p>\n<p>个人开发者提交了众多模块功能为 APICloud 大生态贡献一份力。其中不乏质量优秀深受喜爱的功能。例如腾讯视频播放器、乐视云直播、阿里推送 SDK 、趣拍视频、腾讯直播播放器、网易云视频、滴滴打车 SDK 、百度语音识别、百度鹰眼模块、阿里百川电商模块、百度全景图、百度广告模块、声网视频直播模块等同时还在不断完善已有的模块功能如 audioPlayer 模块添加电话打断事件功能。</p>\n<p>更多模块信息可浏览 APICloud 官方网站-模块 Store</p>\n<p>To Be Continued ……​</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "[2016 年终总结中] 凝聚 365 天的移动应用开发技术精华", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://www.v2ex.com/t/333447#reply11\" rel=\"nofollow\">https://www.v2ex.com/t/333447#reply11</a></p>\n<p><a href=\"https://www.v2ex.com/t/334374#reply3\" rel=\"nofollow\">https://www.v2ex.com/t/334374#reply3</a></p>\n<p><a href=\"https://www.v2ex.com/t/333261#reply23\" rel=\"nofollow\">https://www.v2ex.com/t/333261#reply23</a></p>\n<p><a href=\"https://www.v2ex.com/t/334337#reply23\" rel=\"nofollow\">https://www.v2ex.com/t/334337#reply23</a></p>\n<p>这么闲不如来合作写小程序啊~~~</p>\n</div></div>", "<div class=\"topic_content\">我觉得是前端遭轮子的 成本太低了，就那么几个语言。本来前端很简单，复杂是轮子 标准多造成的</div>"], "reply": "63", "tittle": "为什么搞前端的喜欢造“轮子”？", "comment": ["轮子再多，功能都不适合每个人。只能造啊", "因为前端变化快吖", "因为前端随便改，挂了最多页面丑一点，数据也不会丢\r", "而且前端 js 一家独大，前端开发不搞出点大新闻会被遗忘\r", "比如服务器渲染，以前提前后端分离的是一群人，现在要把渲染扔回服务器的还是那群人，好气啊\r", "都竞价排名了你还考虑 seo ，真是写着 jquery 屮着汇编的心", " \r", "也是，看别人配色不爽 改一改就又是一个~~", " \r", "啥变化了，除了 html css 标准，不 一直都是 js 嘛？ 后端程序员求教", "后端也喜欢啊", "前端变化快么，这么多年了浏览器不过从 ie6 兼容跳到 ie9 而已，你如果说 nodejs ，那你说 12306 撑起全国的春运、淘宝的双十一升级个 nodejs 就够了？而且光淘宝改进各家网银趴窝怎么办", " \r", "不服，比如？\r", "我个人的观点是能 copy 就 copy", " \r", "对啊，标准没怎么变，轮子倒不少", " 就是 js 变的快的，你这个还没研究明白就又出了一个新的，就在你还没反应过来的时候又变了……", "所有人都喜欢造轮子，不只是前端", "大概是前端应对的问题比较杂乱吧", " 是前端自己梦想一统全世界，除了浏览器， App 和后端到桌面到游戏，哪个你找不到一堆解决方案和语言", "不造轮子怎么学习……\r", "可能我比较笨吧……只有造出来才敢说懂了某个东西", " \r", "给好的轮子贡献代码啊~~~", "不仅仅是前端喜欢造...", "其实我觉得应该是脚本语言不需要很漫长的编译，我觉得我一天的编译时间都可以干好多事情了。。。", "都喜欢造轮子的，不过前端更容易造出声势来。。", " \r", "你这句跟“男人都好色”有什么区别？ 没毛病，但也没什么用，凡事有个度啊兄弟", "以己度人", "别人造轮子是别人的事，你到帖子下面留不要造轮子难道是轮子伤害你了？", " 围观大神的回复", " \r", "那你倒是逐条反驳啊，“度”的有错？", " \r", "举个骚例子，我在你旁边拉屎估计伤害不到你强大的内心~~ 这是公共论坛啊兄弟。", "前端现有的轮子用起来特别不爽吧。", " 就一条，因为你菜。\r", "你在 ", " 发的破轮子有人喷你了么，你的 github 上有给别的轮子贡献过代码么？", " 哟你还别说，又是贡献 readme 又是贡献注释的，内容还是给自己『拉屎』打广告\r", "\r", "完了 airyland 大神被喷了。。这是良心货啊，说句话比某外卖公司的那套好多了", " \r", "1.我是很菜啊，所以不用自己写的就不写，总好过制造垃圾\r", "2.懂什么叫造轮子吗？项目里写 的基于 goquery ，看不到？你来帮我爬？\r", "3.https://github.com/dmlc/mxnet/pull/4336 自己看", " 哈哈哈这 PR 你还好意思拿出来，反应有点慢啊", " \r", "看得懂英文吗？看不懂让别人给你翻译下。", " 嗯嗯感谢你的注释对知名轮子做出的卓越", " 贡献哈哈哈，打漏了不好意思", " 别人刚拿着你这个 PR 开刷..你自己还拿出来炫耀.笑出声", " \r", "~~~~~不是所有人都跟你 一样蠢，没有解释的必要。", "我觉得任何一个人，在任何一个领域，没有一年以上的专职投入之前，是不合适说这个领域“简单”的", " \r", "“本来前端很简单，复杂是轮子 标准多造成的”\r", "我没说简单啊兄弟", " 哈哈哈你别误会，我实在是看你又是喷良心满满的大神又跑到别人贴一下刷帖骂人才这么激动。\r", "\r", "任何 contribute  哪怕是注释哈哈哈也是值得鼓励的，我本意没有想指责这个的意思。\r", "\r", "不过这个笑料我打算存下来，你确实也不用解释了，已经 block 你躺下要睡觉去了。\r", "\r", "上 v 站本来不应该喷的不好意思哈，祝你有个好心情。", " 本来前端就不简单，我依旧是如上的意见", " \r", "欢迎，拜托多发几遍~~~ 要发原帖俄，别发些断章取义的！", "看源码能有造轮子学的多？而且.. 小程序也没什么难度啊. 我觉得还不如造轮子..", "来，一起写吧。公益项目『书单』小程序 ", " +1\r", "\r", "感觉造轮子是为了学习吧 看源码一上来就跟着人家的思路跑了\r", "\r", "自己造轮子 可以捋清除解决问题的思路吧\r", "\r", "然后再和别人的轮子比较下 提升的很大", "学习别人源码的最好的方法就是做一个比别人更好的东西,\r", "腾讯疯狂致敬,像素借鉴,到头来玩的人还是第一,甚至有其他厂商的玩家求腾讯 copy 的,\r", "造轮子是必然", "因为许多人觉得自己的界面只需要简单轻便的小轮子，不需要那种卡车式的大轮子，但是，别人的小轮子又不一定适合自己，所以只好自制罗。", "因为车型多，同一种轮子跑不起来😹", "Naive 啊。造轮子又不是什么奇怪的事情。人家只是说不要重复发明轮子。\r", "再说，你看看真实世界的轮子，牛车的木头轮子你放倒 F1 赛车上跑？？想清楚这个你就懂了。¯\\_(ツ)_/¯", "主要是适合自己", "前端简单？", "造轮子才能更快的进步啊，看完源码后难道没有想一试身手的冲动？", "主要是因为前端人多，热闹，有活力。以前只能由 server, native 做的事情，现在发现利用前端技术也能实现，于是纷纷移植，因为前端轮子多，开发快，天生跨平台。", "前端技术是相对“简单”，易用，但楼主说复杂的是轮子，这话不对，复杂的是业务。不是轮是故意把自己弄复杂，是因为当业务复杂到一定程度的时候，为了重用和可维护性，只能上轮子。", "不造轮子，哪来的 KPI ？", "真是无聊透顶，不写前端的不要每隔个几天就跳出来说前端造轮子了好吗，烦死了，这论坛都看到过十几遍了", "浏览器端相比服务端要考虑的东西少太多了，说简单没什么问题", "看了一下楼主贴的地址，里面描述了一堆前端的“轮子”，这里我对于这个“轮子”打了引号，是因为我觉得那篇帖子里面所提及的东西，并不是都是“轮子”。里面的东西都是在针对的性的解决一些问题，有一些是一些平台想拉拢开发者做的一些所属他平台的配套前端工具，有一些的确是轮子，但都有一些年份了，并不是最近才出现的，只不过最近还在更新。", "出现这种情况，我觉得还有一种可能性是，一些服务器人员，他们被迫写了一些前端的东西。前端的发展本来就开发思想上就有缺失，这时候后端人员来开发前端，给这一块带来了一些程序开发的思维。然后前端人员结合这样的思维，把这些思维和前端业务结合起来，于是乎又出现了一个轮子。其实是一个进化的过程，并不像后端开发，生态那么完善。", "前端就好比衣服，年年出新款式，可以不穿新款式的衣服，但是会被同类人说落后了~", "先问是不是再问为什么\r", "前端轮子有后端多？ 后端动不动就是造个语言，然后各种配套的框架，参考 Swift/Go/Rust/Elixir ", " 真是无知者无畏   前端随便改？ 挂了最多页面丑一点？ 前端挂了还能用吗？", " 这我就不知道了，前几天某薯片厂的汽车宣传页面一个 font 加载 15s 不照样上线了么", " v2 全球工单系统天天叫唤的还少", " 但是复制来不能完全使用，有些地方还是要做小的修改的"]},
{"content": ["<div class=\"topic_content\">技术类为主，虽然有 Kindle 但还是喜欢看纸质书，很喜欢英文小说那种，很轻体积小，便于携带。不知道技术类的书有满足这一要求的书吗？我能想到的有 JavaScript the good part 和程序员的数学？</div>"], "reply": "116", "tittle": "请问有啥比较薄便携但值得反复看的书吗？", "comment": ["  为何没人吐槽你？？话说你出差看这个好么！！！！", "出去时间长的话，《明朝那些事儿》 1234567 ，纸质的也不重。时间短的话，有时候翻翻知乎日报。", "最近在看一本叫《简单逻辑学》，感觉就是重温了一边《离散数学》，还不错哦", "唐诗宋词?", " 求资源 ..", "菜根谭\r", "孙子兵法\r", "三十六计", "有啊。 各种小本子", "同推荐《明朝那些事儿》", "《儿歌三百首》", "你不知道的 Javascript 上卷，黑客与画家，浪潮之巅", "知音。。。。。。", "《毛主席语录》", "古兰经（逃", "道德经", "《有限与无限的游戏：一个哲学家眼中的竞技世界（美）詹姆斯·卡斯》", "《正则表达式必知必会》"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h2>职场</h2>\n<p>在我们过往的周报里，小编引用过一些关于“高级程序员”的文章， 譬如<a href=\"http://ninjadevops.com/weekly/2016/12/17/ninja-devops-weekly.html\" rel=\"nofollow\">“怎样才算高级程序员”</a>\n今天， 小编再贴一篇：<a href=\"http://omar.io/2017/01/10/the-types-of-engineers.html\" rel=\"nofollow\">\"几种类型的软件工程师“</a>:</p>\n<ul>\n<li>\n<p><strong>The Under-Engineer 经验不足的工程师</strong> 使用扩展性低， 不易阅读，效能差的解决方案， 并且这种解决方案往往有不能覆盖所有的情况， 并且往往需要其他工程师重构。</p>\n</li>\n<li>\n<p><strong>The Over-Enginee 赶时髦的工程师</strong> 刚刚学习了某一种新技术，迫不及待的跟所有人分享这种新技术可以解决一切问题。 他们会试图通过增加过多的可扩展性及抽象层次来解决所有问题。 譬如那些刚刚学习了设计模式的年轻人们。</p>\n</li>\n<li>\n<p><strong>The Engineer 恰到好处的工程师</strong> 注重解决方案， 而不是纠结于某项技术，语言或技术。 他们清楚他们的任务是了解问题，并提出解决方案。</p>\n</li>\n</ul>\n<p>虽然小编不喜欢所谓的’初级‘， ’高级‘， 但这三类型的确是一条从新手到大牛的进步之路。  <a href=\"http://omar.io/2017/01/10/the-types-of-engineers.html\" rel=\"nofollow\">详细请阅读原文</a></p>\n<p>有兴趣的读者可以继续阅读另一篇关于职业观的文章： <a href=\"http://bravenewgeek.com/you-are-not-paid-to-write-code/\" rel=\"nofollow\">You Are Not Paid to Write Code</a></p>\n<h2>阅读</h2>\n<ul>\n<li><a href=\"http://coolshell.cn/articles/17607.html\" rel=\"nofollow\">从 MongoDB “赎金事件” 看安全问题</a></li>\n</ul>\n<p>很多在公网上裸奔（没有配置密码）的 MongoDB 被黑， 并要求支付比特币以恢复数据。</p>\n<ul>\n<li><a href=\"https://cloudplatform.googleblog.com/2017/01/how-we-secure-our-infrastructure.html\" rel=\"nofollow\">Google: How we secure our infrastructure: a white paper</a></li>\n</ul>\n<p>Google 发布关于安全的白皮书。</p>\n<h2>参与</h2>\n<ul>\n<li><a href=\"http://stackoverflow.blog/2017/01/The-2017-Stack-Overflow-Developer-Survey-is-Now-Live/\" rel=\"nofollow\">The 2017 Stack Overflow Developer Survey is Now Live</a></li>\n</ul>\n<p>在过去的几年里 Stack Overflow 每年都会邀请世界各地的程序员们参与他们的调查， 2017 年的问卷也已经上线， 小编已经提交了！ <a href=\"https://www.surveymonkey.com/r/92SGNSF\" rel=\"nofollow\"><strong>点此直达</strong></a></p>\n<p>如果感兴趣： <a href=\"http://stackoverflow.com/research/developer-survey-2016\" rel=\"nofollow\">Developer Survey Results 2016</a>:</p>\n<ul>\n<li>69.1%的程序员跟你我一样都是自学成才的</li>\n<li>在美国， 28.3%的新工是是通过朋友推荐的</li>\n<li>34.9%的参与者认为是最大的挑战是： 不切实际的期望</li>\n</ul>\n<hr>\n<p><a href=\"http://ninjadevops.com/\" rel=\"nofollow\">来源: <strong>NinjaDevOps.com</strong></a></p>\n<p><a href=\"http://ninjadevops.com/feed.xml\" rel=\"nofollow\">Rss 订阅: http://ninjadevops.com/feed.xml</a></p>\n<p>微信订阅: wechat</p>\n<p><img alt=\"wechat\" src=\"https://raw.githubusercontent.com/devopshub-org/devopshub-org.github.io/master/_resources/qrcode_wechat.jpg\" title=\"wechat\"></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "DevOpsWeekly#10 职场里的三类程序员， MongoDB 赎金事件， Google 安全白皮书, Stack Overflow 2017 调查问卷", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://github.com/szpnygo/NoWordsChat\" rel=\"nofollow\">https://github.com/szpnygo/NoWordsChat</a></p>\n<p>正在开发，刚完成了 UI 的一部分。上班比较闲，就做这个东西。晚上回家再做会。\n经验有限，慢慢开发调整完善。采用 MVVM</p>\n<p>IM 接入第三方的腾讯 IM SDK 。后台准备用 leancloud,想尽量做到不需要一个后台。注册一个服务就可以改造成自己的用。</p>\n<p>功能介绍：和微信差不多，只是不能发文字，只能发图片、表情、定位之类的。有个表情仓库，允许大家上传表情。就是老司机斗图用的。</p>\n</div></div>"], "reply": "8", "tittle": "正在开发一个无聊的无语 APP，要的就是无语", "comment": ["本末倒置了吧", "再开发一个无聊的无聊 APP ，只能加好友不能聊天，要的就是无聊", " 这个就是学习技术用的，所以直接放 Github 上了。\r", "\r", "而且本身也是有一定功能的", " 通讯录 APP", "要我就开发一个 app ，只有一个页面，是全白的页面。", "很棒", " 屏幕手电筒？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>各位晚上好，我是武汉一名大二学生（按照知乎的标准，我的学校在武汉本地算是最低级的专 A 吧），学的软件技术专业。</p>\n<p>之前上大学之前自学过一些服务端语言，比如 php ， asp （最原始的用 vbscript 写的那个 asp ，不是现在的 <a href=\"http://asp.net\" rel=\"nofollow\">asp.net</a> ）等语言，然后平时做一些前端页面都是用的 bootstrap 和 Amaze UI 。</p>\n<p>现在学校要做结业项目（学校教的 JAVA ），然后自己也想业余做一些项目充实 github ，想尝试一下前后端分离开发，打算系统的自学一下前端，学了几天 vue.js 发现自己对于 ECMAScript 以及 JavaScript 基础都不是很牢（因为之前学 html ， css ， JavaScript，jquery 看的书都是那种地摊上很简单的入门到精通系列，只讲最基础的 JavaScript 语法， dom ， bom 就完了，什么闭包，原型链，面向对象之类的都没提到过，这类烂书大家几年前也都看过吧），打算从头再学一学前端。</p>\n<p>现在学 vue.js ，涉及到单.vue 组件开发的时候就要用到 webpack ，发现涉及到了一些 node.js 的知识，比如说 npm 以及一些插件的配置等等，感觉学前端的话 JavaScript 是一定要学好的，目前网上自己查了查发现 JavaScript 高级程序设计这本书口碑很好，请问大家觉得怎么样呢？然后学完之后 node.js 该怎么学？有什么书推荐吗？网上推荐深入浅出 node.js 的比较多，各位有什么看法（我看过一些视频，但是比较喜欢实体书，当手册查查也好，看着也舒服）， ECMAScript6 我打算看看阮一峰的 ECMAScript 6 入门，后面 vue.js 应该会比较好学一点吧。</p>\n<p>各位看看对于我的学习路线有什么需要改进的地方吗？求指点迷津，谢谢！</p>\n<p>整理好书单寒假回家就下单了！！！</p>\n</div></div>"], "reply": "21", "tittle": "打算自学前端，求资深前端工程师给本小白指明一条道路", "comment": ["现在是大二，我觉得先不用急着学 vue 和 node.js ，可以先把 javascript 的基础打实再说，顺便也把 HTML 和 CSS 也学下。", "按 0 基础么？个人推荐还是国内的 w3school ，虽然很多人批判，但是你要知道\r", "（ 1 ）按照 w3s 能很快做出东西来，这是坠重要的，基础看再多没有产出很容易有挫败感\r", "（ 2 ）他写的不全，有的过时，但是在浏览器上跑着没错就行，而且旧的东西又不是不兼容\r", "等做出点东西，然后开始用 bootstrap ，这个框架是很好的，简单，不需要多少 js 代码，网上有大把主题和模板可以用，试着用 bs 做点东西，就知道各个标签是干嘛用的了，这个时候你 js 和 css 包括 html 应该已经有个比较完整的认识了，再回来补基础\r", "就跟没人推荐新人直接看 thinking in java 一样，哪里有 0 基础就直接学 ecma6 的", "本科大三🐶都学的不及你的一半，唉～", " 我一个是自己本身很热爱开发，对这些新奇的东西都很好奇，学校专业学 JAVA 进度很慢，学 JSP 一个月了还没讲到过滤器。所以业余想把前端学好（做个全栈工程师也很酷吧）， javscript 基础打牢到比较专业的程度的话一般要多久时间呢？\r", "\r", "\r", " 也不算是 0 基础吧，我对于基本语法， dom 和 bom 的 api 还是懂得。 w3s 我看过，他更多是作为手册来用，不适合用来精通吧。 bootstrap 我有学过，用的也算很熟练，但是现在想先把 js 搞好，没空研究 css ， sass 这些，所以这框架我觉得我学到这种程度就够了。如果深入的话你觉得我 sass 该怎么学呢？（比如说怎么把一个页面中相似的公共样式抽象出来，作为一个模块，而不是整个页面里面一个标签就写一个样式）\r", "\r", "\r", " 我一直很好奇，现在很多本科学校学的编程都很基础，对于 js 学得都很基础，更别说各种新奇的 MVC ， MVVM 框架了，但是外面企业要求都是各种精通 angularjs ， vue.js ， sass ， less ， nodejs 等等，请问这些企业都是哪里招到的人？", "接着回复，为什么我那么推荐先学 bootstrap ，因为这东西很大一个好处可以让你学习语义化和规范化，经常看面试说语义化，那语义化到底是什么？很多人 html 基础不牢固，写出来除了 div 就是 div ， table 连区分 tbody 和 thead 都不会，也不知道 ul 、 li ，甚至连 a 、 span 这些都用不好，更别说 h5 新增的标签。标签乱用， css 自然写的也西撇，选择器什么也是各种层级嵌套，毫无复用度而言。\r", "\r", "所以打好基本功再学会飞，至于 es6 我感觉你知道就可以，在 ie11 没被淘汰之前（看这样 win7 想淘汰掉很难，因为 win7 的架构实在太屌了，估计比 xp 折腾的更久），浏览器上跑的还是 es5 甚至 es3 的代码， chrome 屌不，再屌你 promise 不挂库能用？所以至少五年内能熟练编写、调试 es5 、 es3 都是基本功（说 codemap 的我就笑笑，真正挂 codemap 你就知道到处起飞这里断点不能打那里断点停不住是个什么感觉了），至于直接上 node 后端的，我想看看互联网大潮退去之后还能活下来几家。\r", "\r", "vue 好、 react 好，可是页面部分不还是你自己来写？ js 学的再牢固，让你实现个简单的布局不会、居中不会、动态适配个宽度高度不会，那你说 es6 学再好有什么用？逼站事件告诉我们，人家做页面被称为切图仔的比你做组件的绩效要高，我要是老板我也这样，有大把的轮子不用干嘛花钱造新的，何况这轮子都是新的。", "刚看到回复，那你好厉害哦，大二熟练使用 bootstrap ，你可以测试一下你的基本功，自己写一个基本的组件，比如菜单、选项卡、对话框这些，如果能写出来代表基础没啥问题了，试试加点难度，比如说对话框不用插件自己实现拖动等\r", "\r", "如果这都没问题，真可以回去看犀牛书这些了，或者你要开始学 vue 估计也就是一两个月的事， vue 本来以为很灵活的东西这东西最后看不上 vuex 也得自己实现一个 vuex\r", "\r", "所以我现在开始推 react 了， react 把 redux 扔了一样用，以前学过的东西都没事\r", "\r", "楼主前途无量啊，我大二的时候还在沉迷魔兽台服呢", "我觉得还是看书，打好基础，基础最重要。\r", "\r", "Javascript ： JavaScript 高级程序设计、 JavaScript 语言精粹、你不知道的 JavaScript 。\r", "CSS ： css 权威指南、精通 css 高级 web 解决方案、 css 揭秘。\r", "至少看一遍吧。", "大学二年级难道不应该先学好算法，数据结构，操作系统么（逃~", "前端学起来其实也没什么, 就是 MVC 除 angular 以外的学一个, 最好选轻型的. 如果只想学怎么用, 那么就做个复杂点的网站, 如果想学架构, 就在会用的基础上读读几个轻型 MVC 的源码, 理解活用就行了.\r", "前面说的是 JS 前端, css 和 html 啥的没什么好说的, 写多了自然会熟. css 有个兼容性的问题, 但是不碰正式项目磨练不出来, 这个遇到什么解决什么吧\r", "nodejs 没什么学习的好办法, 那上面的技术和前端技术一样更新非常快, 现在搜出来的博客文章还有书上的内容很多都过期了, 所以不如直接看官网文档了解一下所有的功能, 然后掌握几个著名的框架, 最主要的是多做项目, 实践出真知嘛\r", "数据库方面, redis 和 mango\r", "另外好好掌握基本的 linux 服务器搭建和维护", " 我也感觉，大一的微积分、线性代数和大二上的概率论如果学不好，尤其是概率，以后想转什么机器学习门都没有\r", "牛逼的人可以看两眼论文就把公式推出来，我这种 2b 的别人给我讲我都听不懂", " \r", " \r", "\r", "机器学习没那么神，国内单就业需求而言，不那么理想\r", "\r", "另外专科之类的计算机专业的不会教数据结构与算法，\r", "第一，这玩意要如果要配合讲算法复杂度分析，\r", "需要点数学功底，但是很多人上大学后连等比数列求和都忘记了\r", "（实际上我是靠背和翻书的）\r", "第二，单纯的讲算法 数据结构的实践开发应用，自学的书籍一大把，首推 (算法第四版)\r", "第三，实际开发中，老板不会给你时间去实现一个 quicksort 或者 优先队列，把框架学好，\r", "使用更高层次的抽象去实现业务中需要的数据结构，\r", "像 Java 有 Collection 框架 C++有 STL 容器 boost 中有大量的算法库，\r", "C 有 Glibc （不过讲道理，很少看到有人用，国内连 glibc 容器翻译的资料都没有）\r", "\r", "\r", "实际上操作系统这门课，我觉得大部分搞开发的，没必要一头扎进去，\r", "需要的时候翻开 CSAPP 找下索引，配合 Google 能解决大部分底层性能问题\r", "\r", "另外现在有几个做业务类应用开发的，敢说自己在最底层的抽象上搞开发的？\r", "很多写 Java 的，写了 7-8 年，连线程是怎么一回事都不知道，更有甚者连 引用跟值类型都不分，\r", "当然你不能写了几年 C++连内存堆栈 对象内存模型都搞不清楚，这种 C++程序员肯定是没人敢一起工作的\r", "\r", "一言以蔽之，做应用，就暂时忘记底层吧，专心做好系统设计 后期做好优化 就差不多了", "大二和我大三学的一样。寒假准备啃掉 es6 和 vue.js 看看，\r", "\r", "关于面向对象我感觉你还是看 Java 吧，我试着学了一个月的安卓做了个简单抓取页面并且展示出来的 demo 才感觉到了一点面向对象的好处，共勉吧", "不理解楼主为什么会去学习 asp 这样过时的东西？", "不代表公司观点, 我在饿了么的感觉是对开发业务本身会更看重, 比如 Vue 的话, 做页面, 建构工具公司有现成的, UI 组件公司有现成的, 需要开发的主要是路由, API, 数据抓取, 以及各种场景的调试, 这会需要比较多的经验和相关领域的理解. 然后对于编译工具本身, 对组件的底层实现和优化, 对 Node.js 开发如果有经验, 那么你还能做些其他的东西.\r", "\r", "ES6 的话会常用到, 但工作当中也不会抠细节, 还是根据团队规范. 算法在前端遇到比较少, 当然算法方面的意识还是需要有, 只是说在 js 当中很难直接用到. 面相对象, 闭包, 原型链, 之类的, 某种程度算是敲门砖吧, 业务开发当中更多是把 js 当做 DSL, Vue 有 Vue 的用法, React 有 React 的用法, js 语言特性太杂, 没人开心全都去用.\r", "\r", "能找机会参与写写实际的项目积攒点经验用处会更大一些.", "肠胃 = =", " 因为我学的第一门编程语言是 VB6.0 ，然后 asp 的服务端语言推荐使用的就是 vbscript ，所以直接拿来用了\r", " 我有学过 php ，也阅读过一些框架的源代码，对面向对象有所了解，但是对于 js 里面的那些面向对象的 api 不是很了解，包括闭包，作用域这些我在写 php 的时候完全没有用到过这些概念。都是顺手写下来一气呵成，也可能是我写的项目都比较小，不是很规范吧。\r", " 我看过一些人放出的前端工程师面试题，发现问到了很多 ECMAScript 的一些语法细节，我还是想系统的学一学。况且我也没有 nodejs 基础，涉及到 SSR 服务端渲染等功能我都懵逼了。。。\r", " 啊？你是？\r", " 我看见知乎重构用的是 react ，但是听说 react 需要多学一个 JSX 语法对吗？我希望先学一个简单的可以直接用的，能学的东西越少越好，毕竟我还半年就要去实习了。\r", " 这些我们专科基本上不学，都是学一学怎么使用 IDE 啊怎么使用各种现成的轮子。其实专科学的东西真的很浅，不课外自学的话，去外包公司我觉得现在的大专生技术都很成问题。", " \r", "别学大公司的工作方式, 他们是根据业务来的\r", "我说的基本上就是最短学习路线.", " 面向对象我感觉更讲究思路吧，目前我体会到最大的好处就是封装，每个实例化对象就是一个模块，互相间不干扰，同时面向对象设计也是设计模板，稍加修改在任何相同场景都能使用比如 Ajax ，减少了重复写代码的量又美观，有兴趣的话你去看一下对象（ object ）的数据结构吧\r", "\r", "就目前来说我感觉 node.js 还是学完了 es6 再说吧，里面带有 es6 的语法，关于作用域的话 es6 有说，还有就是阮一峰的 es6 教程关于 babel 可以不看做个了解，因为配置他说的太多太多了，一下我差点转不过来。", " 哈哈，那至少学好英语", " 嗯, 服务端渲染这种原理性的东西真是铺得越来越广了, 我当时社区一点点刷出来这个技术, 一边跟着看. 没想到对你们来说反而是一瞬间要学大量的东西, 是挺不一样.", "哈哈  你的崇拜者，贴吧知乎都知道你的。你可是大神 = ="]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>朋友实习包括就业都是直接走的某国企一线岗位，嫌弃工资少，累，最重要的是不体面。去之前也没询问过我相关的问题以及技术方向，就和另外一个朋友搭伙去培训了。我听说之后就询问说你学的什么，他说 java ，我说后端还是安卓，他说 java 。我当时就懵逼了，我说你没问好方向就去学了？他还是就 java ，我也就没说什么。 4 个月培训，听身边的朋友说，晚上回去也不敲代码，打游戏。马上找工作了，我问你们项目怎么拆分的服务，服务框架用的什么，通通不知道，说会 spring ，我不太相信。马上有外包公司来班级招聘了，貌似很兴奋，我觉得好无语。真把程序员当傻白甜的行业了？一名合格的程序员哪有那么简单。等他回来我该怎么办，管还是不管？本身不想管这种态度的人，但还是朋友，该怎么巧妙地不影响关系的解决这个事？在此谢谢各位了。</p>\n</div></div>"], "reply": "55", "tittle": "朋友在某班培训 Java 后端，马上完事了啥也不会，说回来让帮忙补课，拒绝还是怎么办？", "comment": ["倾囊相授", "偶表弟表妹也不懂这些，都找到工作了，做测试。\r", "而且，如果是因为吃过苦希望有所改变的人，应该不会完全没努力过的...楼主要相信他可以的", "给钱吗？给钱你就帮。", "他有问题 自然就解答了 顺便告诉他要做什么 该做什么  只是口头教学 在朋友身上多花些时间 不过分吧", "就说你学的是 JavaScript ，不懂 Java", "即使去之前没问你\r", "回来也未必会要你管\r", "要你管也未必会听你的\r", "听你的你也未必有耐心教\r", "你教了也未必会感激你\r", "感激你也未必会让你啪\r", "\r", "简单来说，\r", "\r", "帮他规划下学习路线，最多找些书和资料，让他自己去学，具体问题可以问你，问你的问题只教解决思路。", "好吧，知道了，谢谢各位！！嘿嘿", " 我对别人的提问从来只告诉他解决思路，简单点的问题就直接叫他看文档。我感觉我还算是比较有耐心的人，毕竟谁没事会教别人解决方法么。结果是一段时间后没人问我问题了。蛤蛤蛤蛤蛤蛤\r", "我发现我码畜这行现在的情况基本不存在问问题，只存在讨论解决方案的优劣以及思考方式的不同。因为大多数问题是可以直接通过网络解决的，能进码畜这行的最基础的能力就是解决问题。如果直接过来问问题的，基本没机会，他就是想过来直接问你答案。:）", "不要管。\r", "\r", "自作多情对被人未必是好事。\r", "\r", "不论是别人心里，还是事实上的。", "哪凉快，哪呆着，他本身就不是会学习的人，你要是教他，会累死你的", "关键是出力不讨好。现在找不到工作会怪培训班，你管了之后就怪你了，最后朋友也没得做，这种人这种例子实在是太多太多了", "你都说了是 [朋友] \r", "如果这么不着调，你大概指点一下 看他是否上心！如果还是天天 JAVA 、 JAVA 、 JAVA 的。。。至少你也尽力了。", "结果是一段时间后没人问我问题了\r", "\r", "就这个结果来说，咱们的做法没毛病。", "不管。有专门的老师教都不用心，你又能教出个啥样来", "不要管", "估计你说的他也听不进去，少管为妙，到时候又拖油瓶赖上你了更烦。。。", "某国企一线，工资少，累，我猜是三家运营商？", "要有原则\r", "有时间的前提下，提点就好了", "培训班收多少钱，你也开什么价", " 建筑的，某铁。跨行了的", "铁塔～", "我觉得是真爱", "不管他，等他四处碰壁。", "这种事情不是你要不要管，而是他愿不愿意让你管。\r", "如果他真正喜欢这一行业，自然会向你请教的。\r", "某培训出身走了不少弯路的路过。。。", "让他重听呗，大部分的培训班都支持重听，不就占个位置么。", "这种人就得让社会好好操一下，你在旁边看戏就好", "请拒绝。培训班虽然臭了，但是一些速成的东西还是会教的。晚上不敲代码，只打游戏那谁也救不了。", "没别的 薪资高 学几个月出来就能拿上万 \r", "不说别的 换做是事业不如意 工作不顺心 刚出来一脸迷茫的学生以及各种为钱发愁的那批人  能抵挡这个吗？\r", "你们觉得可笑 学几个月出来拿上万？ 因为欲望（钱）\r", "能拉他一把就拉一下吧 唉。。。。。。", " 不如说 python ， js 和 java 有相同字母，会认为骗人的。。。", "尽量让他挖掘一些问题 来问你咯 ， 有针对性有目标才能进步，对了，头像那狗卖吗", " 哈哈，我也觉得头像那狗好萌", " 😆", "不用管的，学的时候这样我觉得是正常的，等真正碰到具体问题了，会问你的，到时候具体问题具体解答即可，这种大方向的，让他自己来", "╮(╯▽╰)╭，我有一个大学同学 跟你这个差不多（我们都是非科班，但我是自学狗，他报了培训班）\r", "\r", "\r", " 没用的，人家培训完，面试了很多家 都是没项目经验被拒绝了\r", "\r", "\r", "一，因为没有项目经历，又不是科班出身，压根找不到工作，\r", "他总跟我说 自己只会 CRUD ，根本不会编程的思维，\r", "我跟他说，编程无非四点，\r", "1.学习一门编程语言并了解这门编程语言的风格（面向对象，面向过程，函数式等等）\r", "2.组织数据（数据结构），\r", "3.描述如何操作数据（广义上的算法），\r", "4.针对软件需求的变化学习模式并运用，提升代码的复用性（设计模式）就这么简单，并没有什么难的\r", "\r", "\r", "我让他去学一下基础的 队列 栈 链表之类的，以及相关的算法，自然而然就能了解如何形成代码的思维了\r", "他回答我说，算法那些东西用不上，公司要的是基础，\r", "（实际上  数据结构 与 算法就是编程思想的基础，这些年 IT 技术表明上说变化，实际上玩来玩去，万变不离其宗，就那么回事）\r", "\r", "（\r", "实际上任何工作 或者解决问题的能力 都是套路，玩得多 成老司机了 自然就轻车熟路了，\r", "他面试的时候有一道商户排队处理的业务，他不会做，后来拿给我，\r", "这实际就是一个优先队列，人家又没让他自己实现优先队列，但是他 Java Collection 框架都玩不转，这题他面试遇到的时候能解？\r", "）\r", "\r", "二，码农门槛虽低，但是学习能力 跟学习意愿还是要的，\r", "我不想吐槽 好多人毕业之后 已经丧失了学习的能力\r", "\r", "\r", "三，他跟我讲了好多 上课老师讲的模式，例如潘金莲找王婆 等例子\r", "（\r", "虽然我是自学的，但是我很想吐槽 培训班讲 Design Pattern ，\r", "因为设计模式 在课堂上是讲不清白的，很容易把人就带沟里了，\r", "实际上 设计模式是服务于业务需求变化的，设计模式本身并不难，\r", "难在针对业务需求 ，以及对变化的预测 然后运用对的设计模式\r", "如果没有实际的业务开发经验，去学 设计模式 很容易走火入魔\r", "）", "听 6 楼的吧", "要你补的话你就说正好想办个补习班，让他帮你找下生源，然后你讲的时候让他免费听。这样让他选择好了。", "据我了解， 4 个月 JAVA 后端培训，学费两万多的。", "r#37 @", " 加上吃住 4w 块 很正常", "自己不努力的人你再怎么帮都没用的。\r", "\r", "妈蛋打了一大段自己的经历结果网络信号不好发送失败就再也找不回来了， chrome app 你可以的", "嗯嗯，谢谢各位的意见，嘿嘿。", "交了钱，不问老师，问你干啥？学 4 年本科 cs 出来啥也不会的大有人在，何况本科还有高考来淘汰一部分人，培训班就学 4 个月能会啥？那些培训班出来的大牛，进去的时候本身就很厉害了，如果比尔盖茨去微软之前来培训班上两节课，是不是说明只要在培训班上两节课就有机会成为微软总裁？我们公司 40 岁大叔培训班 4 个月出来的，包装了简历，坑死了……", "国企还不体面，，，难道当程序员搬砖体面么。。。", " 一线。。估计是流水线上的工人吧。", " 电信客服接电话的，体面么？", "这种人就不要让他去祸害程序员圈子了吧，拉低程序员档次.", "最后说一句，连码农门槛这么低的技术岗位，自己认真学 学不会的话，直接跳楼吧，\r", "高考刷下来的人 一大把，各省能上二本线的，一般智商在平均水平附近，如果这都不行，你让那些高考就被刷的孩子们情何以堪", " 你自学的话水平应该也不高吧", "r#47 @", " \r", "我没说我水平有多高，我只是说码农入门门槛确实低，这是事实\r", "我从来没有歧视报培训班的人（我个人是因为经济条件，否则我也想报班，报班可以让我少踩好多坑），\r", "我只歧视那些报了班不好好学的人（因为很多报班的人，花的都是家里的钱，本来读完大学花的钱就不少了，如果报个班培训转行，还吊儿郎当的，不把这个当做入行的门票，好好学，那不是辜负了家里人的期望）", "丢网站给他呗", "想多了，做好自己就行了", "这个你教不来的。\r", "自己要养成学习习惯还好，不然往往耽误了你好多的时间啊。", " 接电话不都是临时工么...", " 可能是吧", "楼主其实你还蛮怕他找到工作甚至好工作的 那样你就尴尬了……", "丢套 OJ 网站，让他刷完全部 Easy Medium  然后复习下往年的培训班三大框架的视频 \r", "去搬砖应该是没问题了，"]},
{"content": ["<div class=\"topic_content\">最近研究了下某条视频，破解了 web 端 js 签名，下载 so so 快。流量大到搞得都被封 ip 了，不过这些都可以解决。\r<br>\r<br>然后研究了某手视频， web 端比较弱，没啥可以下载的，于是研究 app ，请求有签名，不过不是问题，通过代理，把所有请求拦截了，然后下载 so so 的快。不过手机点击是个问题，但是有自动化工具，所以又不是问题了。\r<br>\r<br>说了这么多，就是好奇有没有其他人也有同样的需求，能否变现啊？</div>"], "reply": "14", "tittle": "搞了个 app 爬虫，挺好玩，能卖吗？", "comment": ["直接在人网站上看就好了，又没广告。同质化很多，微博大号都会转。", "偷偷拿了别人的数据，自己玩下就好了，如果想以此获利，等着法律制裁吧", "这类程序就算开源都得写上“仅用作学习”之类。\r", "之前弄了个美剧搜索的，是基于 v 友进行优化的，感觉技术思路可以共享，但是拿来赚钱，不太可能。\r", "传送门： ", "\r", "（数据是 rrmj 的~）", "哦，许多公司暗地里都干着这样的勾当，减少重复造轮子而已。", "这是视频爬虫吧？不是 App 爬虫？", "直播类 app 的爬虫，是否也有研究？", " 爬 app 内容，大部分都可以。", " 直播应该可以，就是获取 hls 地址而已，没深入研究。", "很多 Web 上面严格控制权限的业务。\r", "到了 app ，就有偷懒下放权限在客户端校验的情况，另外就是一些本地体验优化的业务，喜欢用 app 生成签名的形式做加密，而签名的密钥则永久有效，服务端只校验加密数据，不校验请求有效期。\r", "\r", "挂代理爬 app 里面的数据可以卖，尤其一些严格限制需要登录才能处理的业务。但是最值钱的还是拿到密钥和加密处理之后，卖发帖留言这类的刷量数据。", " 有直播 APP 的数据需求，能否加个联系方式？", " 124242477 ， 能否咨询下？", " 反编译过 app ，各种混淆加密，感觉很难找到密钥，难度太大，所以才有了在代理层面拦截所有请求。", " 已加", " 感谢推荐 确实是一个很不错的东西"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>本人学生， 2017 年 9 月即将面临找工作，可是昨天身感不适，去医院检查了，查出血压偏高， 144/108 ，我想问下程序员入职前体检会测血压吗？如果会测，高血压还允许入职吗？</p>\n</div></div>"], "reply": "21", "tittle": "急：程序员高血压", "comment": ["血压必测项目\r", "\r", "入不入职不清楚", "1. 稍微吃点降压药物 避免麻烦\r", "2.长期跟踪随访 身体是自己的", "不影响入职\r", "\r", "自己去医院检查看看什么情况，保重身体", "允许，但是自己保重自己，没人会在乎你的健康，除了你和你的父母，且行且珍惜！", "去做腹部+泌尿系统 b 超", "不会影响你入职\r", "但是你这么小就高血压，要好好查一下原因 \r", "楼上说的 B 超还少了肾动脉 B 超", "不影响，自己注意就好", "兄弟，你这是经常熬夜吧，年纪轻轻的，应该没问题的，早睡早起调理一下。", "如果体检，很容易被查到", "很多公司入职前都是要体检的  轻度高血压通常不影响入职.\r", "你说的不适是胸闷头晕吗？\r", "楼主别紧张 白大褂高血压是很常见的情况  而且电子血压计相对误差要大点.  放轻松些  身体没有不适的时候去个药店之类的地方再量下血压.\r", "如果不放心 或者血压还是偏高,去心内科门诊去申请个盒子挂上,检测 24 小时的血压和心率.\r", "重要的是确诊 仅仅是一次的血压结果不能说明什么的哦.\r", "祝你健康.", "入职之后听到需求变更了，千万别心急。\r", "话说，程序员有职业病的很多，平时多多注意锻炼身体，定期检查一下自己的血压。", "高血压一般不会影响入职\r", "你这是刚走上工作岗位就这么高的血压？找医生看看，确定问题所在，该调整的调整，该吃药的吃药。", "高血压要小心，如果是重度高血压早点吃药吧，不然脑出血等着你。", "这有什么关系, 多测几次总有一次正常, 取那次就行了, 你就说你有点紧张, 一般医生都不 care.", "建议做个全面体检 楼上说没关系不 care 的真是不拿自己身体当回事\r", "猝死不可怕 可怕的是明知自己有问题还去作死的", "我也有高血压，换几家公司体检都没事。\r", "有一次体检医生量过血压后问我是不是入职体检，还帮我把血压写低了一点。\r", "所以不是什么大事，不用急。自己身体自己注意点，按时吃药就好了", "大三高血压，医生如下建议：\r", "1 、控制每天的食盐摄入，不超过一个啤酒盖一半的量\r", "2 、调节作息时间，保持正常的生活和作息时间\r", "3 、调整心态，正确看待高血压和调整自己的脾气\r", "4 、时常监控\r", "说说自己，发现自己血压变高是大二的时候，游泳课体检时发现的，之前自己体重增加了 20 斤，大学以前从不熬夜，大学后也开始在 2 点后睡觉。虽然每两天跑一次五公里夜跑，但是血压没有太大变化。因为体重没有变化。\r", "自己现在吃得清淡，同时正常休息，前几个月买了血压计偶尔测量。表示没有之前的心跳加速和累感了。希望能够一直坚持，共勉吧～", "12 点之前睡觉\r", "少盐饮食多吃水果\r", "控制体重多锻炼\r", "\r", "——————————  四年工作经验程序员血的教训。\r", "\r", "99%的可能你做不到，不过工作几年你就明白了。", "同高。。", "多运动？", " 头像可以"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>在公司笔记本外接显示器，为了不总扭着脖子就外接了个键盘，因为在家一直用个青轴，怕拿到公司吵到其他人才又买了个茶轴在公司用。结果刚到中午就有一个同事表示对声音敏感无法忍受键盘敲击声，让我回家去用；后来我又问了一下周围的几个同事，他们都没什么感觉；也有几个用 hhkb 的我感觉音量也差不多（也许是高 T 加成？），所以使我开始怀疑我是个假人。目前不知道怎么办，所以打算先把青轴换过来用着。所以想问问大家是否遇到过这种问题，怎么解决的。</p>\n</div></div>", "<div class=\"topic_content\">我一个萌新当然不和老员工计较这种小事了，但是在容人这方面我只能嘿嘿嘿一笑；假设我资质更老我猜也听不到这种意见。\r<br>所以不如升华一下这个问题，比如什么是公平，哪个叫正义，即展开一个少数人利益问题大讨论~</div>"], "reply": "108", "tittle": "如何在公司优雅地使用机械键盘？", "comment": ["同一时期的键盘，我打坏了两把，然后公司给换了个游戏键盘，一敲周围同事都受不了，问我键盘哪里来的，告诉他们是公司买点，就没下文了。\r", "所以，同理可推，你去公司申请一把键盘就好，不要用自己的。", "机械键盘的声音本来就比较大，尤其是青轴，如果遇到声音敏感的同事，再小的声音都会敏感的，除非你使用笔记本上的键盘，再用很小的力气敲击\r", "\r", "本身机械键盘的结构设计就决定了声音要高于普通键盘", "推荐 静音红轴", "茶轴声音不大啊, 主要还是触底碰撞钢板发出的声音", "上周刚把家里的青轴搬到公司去了", "早上的撒旦", "有些人打字很用力，我旁边用薄膜键盘能敲出机械声音", "就算是笔记本自带键盘，也能啪啪啪的响呢"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>看了各位 2017 2016 的晒桌面帖子 全都很高端，不禁感叹自己处在一个开发效率低又吵闹的环境下，刺耳的交换机声，吵吵的电话和同事交流声，身为 5 年工作经验的程序员在这种环境如何健康的成长？</p>\n<p>极讨厌常时间活在自由的 CODE 世界却又回到机关单位看领导的眼色，没有出色的项目经理当老司机，也没有对编程热爱崇尚创新的员工可以交流，似乎这里只有我一人爱它！ 感觉其他程序猿都是混口饭吃。 虽然在这里能得到充分的时间。</p>\n<p>为了找到真正属于自己的编程方式，属于自己的电脑桌，我鼓起勇气购买了 HHKB ，并打算下一步完善自己的效率！ 有多少人为了冲破穹顶渴望“自由”“安静”“高效”？</p>\n<img src=\"http://wx2.sinaimg.cn/mw1024/9d31ae83ly1fboxqsre3tj20ta0e1dgj.jpg\">\n</div></div>"], "reply": "104", "tittle": "在 萌购 日亚买了 HHKB 。感觉今天才正式成为程序猿···", "comment": [" MAC 散热好，一般开发的话不会有声音，如果桌椅不合适的话 可能就需要支起来 就需要外接了", " HHKB 是键盘... 所以有点关系吧哈哈", " 相反吧 我的环境有时候很吵 所以不在意按键声", " 是的，停产了，马云家和二手东还有好多库存货， NEK 4000 最遗憾的是没有无线版。 现在是 Sculpt Ergonomic ， 小键盘独立的。"]},
{"content": ["<div class=\"topic_content\">书接上文：\r<br>\r <a target=\"_blank\" href=\"/t/329592\">/t/329592</a>\r<br>\r<br>现已达成一致，过程如下：\r<br>\r<br>报价软件授权 99800 不含税，帮解决历史数据导入问题，遭还价 99800 带发票，然后后续有该单位底层办事人员来电暗示领导比较贪小便宜给买点东西能方便尽快达成一致，隐式索回扣。\r<br>\r<br>最后经过七八天的扯皮，于昨日（ 2017.1.10 ）达成一致并签订合同，报价 99800 ，税点新列一个名目，首次安装、数据转换服务费 9000 元，加总 108800 给开票，并赠送了该单位一台用于管理该系统的专用平板电脑（其实就是我花钱买了个 iPad Air2 128G 送给他们领导玩，二手东下单给他们办事的委托送给领导，然后领导拿到还来了个电话客气一下，顺便问我 iPad 没有发票怎么保修啊）\r<br>\r<br>合同昨日已签，甲方承诺电子汇票三日内开出（预算已经过审批），我通过外包网站雇了个他们省的人代表我公司去他们单位给我拷数据，按照我的指示处理数据，并安装新的带授权的系统。安排的人明天下午去他们单位，也是他们合同约定的电子汇票开出截止时间。\r<br>\r<br>至此，该案基本告一段落，感谢各位在之前帖子对我个人的支持和意见建议。\r<br>\r<br>\r<br>以下 at 几位明确坐等后续的朋友作为提醒 不一一 at 了避免打扰\r<br>\r<br>@<a target=\"_blank\" href=\"/member/fuxkcsdn\">fuxkcsdn</a> @<a target=\"_blank\" href=\"/member/Jimrussell\">Jimrussell</a> @<a target=\"_blank\" href=\"/member/tomato3\">tomato3</a> @<a target=\"_blank\" href=\"/member/wjm2038\">wjm2038</a> @<a target=\"_blank\" href=\"/member/wz2520020\">wz2520020</a></div>"], "reply": "155", "tittle": "还记得上次的盗版软件黑科技案么，后续进展通告给关心的朋友。", "comment": [" 还真有后续： D\r", "\r", "哈哈，挺不错的。\r", "精通业务的开发者，真少见！", "刚回复一条被吞了？\r", "\r", "---\r", "\r", " 精通业务的开发者呀。稳得一塌糊涂！", " ==学到了\r", "\r", " 这样子，人生又充满了希望\r", "PS ：回复太多有限制。。", "稳", "火钳刘明", "好羡慕 dalao", "稳啊 老哥，我悟出了一个道理。\r", "机会永远不缺，好好做好现在的事情就行了～", " 是这个理， Just do a good job 。", "学习了，楼主牛逼", "记录可还原的操作日志老牛逼了", "楼主从埋下黑科技到能很好的处理掉这种撕逼起来很难缠的事情，楼主确实牛逼！！！", "楼主好牛~", " \r", "写涉及钱的系统 我从最开始学习 web 开发时候就有这个习惯\r", "每一步对数据库的操作都做 op_log\r", "这样可以回溯各种不平账，或者代码出问题被渗透攻击出现问题的地方\r", "可以从 op_log 还原操作比较麻烦，但是记录哪怕是用来看的，都是很有必要的\r", "我的自己的框架里面都有完整集成的 oplog 类去处理这些东西", "厉害，这波不亏，就当给自己发了个年终奖", "厉害了 word 哥", "老司机稳", "历害了， word 哥。\r", "\r", "果断以后个人项目统一用 go 写，用 php ， java 啥的都不保险啊。", "老司机稳", "厉害，为自己维权", "BSD 大佬", " \r", "用 PHP 写也没问题的 \r", "把一些基础的东西封装进扩展里，然后就可以玩授权战术了", "厉害了大佬", "我只是想知道，百分之 x 不入库，那这部分数据是怎么找回来的呢？", "楼主这一整套流程，真的 6", "楼主好赞", "10 万以下是不用招投标，其实超过一些也可以，拆开来就是，法子多的是。\r", "并且水厂这种的，大部分地区都改制了，好多地方更是纳入城投的上市公司的，空间还是不少的。", " lz 说了有 log 的 每一条数据都有 log 但是不一定被计算（应该这样的", "果断学习 go", "楼主太牛了，真是长见识", "其实附上第一次帖子的链接会更好，给没读过第一次帖子的读者了解下前因后果", "看错了，有链接 o(╯□╰)o", " 原帖没仔细看，打 log 啊", "好，创收了，一年搞个几单，轻松死了", "厉害了  新技能 get", "历害历害历害", "稳", "学习了，也需要写一个报表系统，学习相关技术中 找机会得联系上楼主，问一些相关技术问题", "想知道楼主的 oplog 是怎么弄的", "哈哈，这个厉害了", " 这个要看什么系统啊，而且也不是只光开发要钱，你维护啥的。成本也不是只算这些，而且你技术专利啥的也要钱吧", "楼主厉害～～～", "很感兴趣楼主的软件授权保护是怎么做的，有什么可以参考的实现方案吗，谢谢", "我们那的绿城水务就是上市公司……\r", "\r", "还有你不签每年的维护补充合同么？", "厉害了 word 哥", "不防盗版几乎一定会面临盗版... LZ 厉害了", "看来是不涉及先后顺序问题啊。。。最近为这个问题头疼死。", "楼主很棒，用技术捍卫了尊严。", "赞", " \r", "对这种维护没啥兴趣，费时费力\r", "\r", "一锤子买卖不是 BUG 不管\r", "\r", "经过时间验证基本也没 bug ，当时写的时候各种测试做的很完善\r", "基本的后续维护就是换硬件给重装，收 500 一次+路费+住宿费\r", "其他问题程序的健壮性可以自己应对", "仔细看了楼主的两个帖子，收获颇丰（如何应对盗版， oplog 这些）\r", "楼主对于这些可能发生的事情都有了万全的准备和对策，处理起来也是非常合理合适，真是经验丰富。\r", "现在自己也想单干，但经验和资历都还差些，估计想像楼主这样写出健壮性和正确性非常好的可能还需要历练。\r", "有个小疑问，法务和财务是不是都由外包来做的？", " \r", "在北京圈里有个专门对自己人提供这种完整服务的公司\r", "对公账户收款，签合同，完整的授权转让机制\r", "\r", "您说的财务，其实就是这套对公收款的体系，我自己也有公司，但是用我自己的公司签合同，综合成本没有用这个公司的体系低。我自己公司进了对公账户并开发票，想完整提现到我个人账户损失要在 9%~11%之间，而用他们的即使开增值税发票，财务成本也会很低。\r", "我公司跟该公司、我个人跟该公司控制人日常有更高层面的合作，这种个人的收款的让他公司帮忙走一下流程他不收我费用，财务成本多少就扣成本就完事了。\r", "\r", "至于法务支持，他公司也提供，但是你本人要懂法确定大方向，以及注意要点。这些法务工作人员大多对条文、合同订立之类非常精通，但是落实到细则时候很多时候缺乏经验，你需要提前给他们法务人员点明重点要避免的坑，可能存在法律问题的地方，只要你能提到，他们会用十分丰富的法律知识给你把东西做得很完美。", "说明 golang 在语言层面之外还是有不少优点啊。\r", "\r", "2 进制代码---避免别人查看代码查找问题。\r", "部署容易---直接都能给别人了。\r", "开发快速---做小功能容易。", " \r", "其实只是当时我刚入 golang 大坑还在蜜月期啥东西都想 golang 做……\r", "要是现在我肯定回归 php 了……", " \r", "\r", "当你准备一份 apache 部署手册，一份 Nginx 部署手册，客户问你要 iis 的手册，你给了他之后，他再给你一个万网空间让你上传，你会发现还是 golang 好啊……\r", "\r", "看了你的帖子，刚准备搞个 electron+golang 的程序玩玩，感觉 golang 做核心 /性能 /保密部分的代码很不错。\r", "\r", "再准备看看 gloang 的 vm ，那么就是 js 负责界面， golang 负责部分核心代码， vm 里的 js/lua 负责一些可配置的脚本，感觉不错，挺好玩的。", "老哥，稳！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>前景提要: <a href=\"https://www.v2ex.com/t/328641\" rel=\"nofollow\">https://www.v2ex.com/t/328641</a></p>\n<p>上次事件 我觉得有的 V 友说的挺有道理:公司招我就是要解决问题的</p>\n<p>也跟老板说了当前的安全隐患,老板看起来并不重视.</p>\n<p>这些算是技术方面的.</p>\n<p>下面有其他方面的奇葩事.</p>\n<p>由于刚去,上月交社保啥的,当时说好的是 有公积金的.</p>\n<p>这个月发工资:扣了 1300 ,问了同事一下为啥:</p>\n<p><img alt=\"\" src=\"https://i.imgur.com/JmlH69u.png\"></p>\n<p>我第一次见员工把公司该交的那份社保也交了的.并且,也没给我交公积金.</p>\n<p>ps:原本就 3 个技术岗位,两个 ios 和我.老板想让其中一个 ios 走,就没跟人家交社保.</p>\n<p>周一去摊牌.</p>\n<p>顺便 求个职 ,坐标北京,工作 2.5 年,学历大专,岗位就 java 吧 ,邮箱 base64 : cWlueGkxOTkyNjdAZ21haWwuY29t</p>\n<p>求不吭</p>\n</div></div>"], "reply": "18", "tittle": "还记得\"for 循环用的出神入化,sql 拼的清新脱俗\"吗?后续", "comment": ["这个属于无理由克扣工资加不缴纳社保了", "同第一次见识还能这样交", "收入 10K+ ？", "员工把公司该交的那份社保也交了", "如果觉得恶心 可以好好看看合同 并且收集证据快到一年了 去劳动仲裁告他 因为是 12 个月内有效", " 15", " 刚入职一个月", "究竟是什么公司，竟然敢这样玩", "支持走", "去举报公司啊。狗黑心的。", "员工把公司该交的那份社保也交了 666666\r", "这种公司不走还留着过年？", "劳动仲裁啊 这种公司还留个毛脸面", "去找劳动仲裁，一告一个准，要是不付钱以后法人连飞机都坐不了", "我在想 如果有独立办公室 会不会还要把独立办公室部分的房租电费也交了……", "我突然想起来最近社保基数调整了然后我的工资就没几百了😂", "楼上很多人没有见识过 HR 这么玩的吗？\r", "面试谈薪酬的时候，说给你 10k\r", "是指公司花在你身上总共 10k ，其中把社保、公积金、补贴啥的都算进去了，牛逼一点的把年终奖也折算进去\r", "所以到手的会少很多", "这个公司太垃圾了，赶紧走人。", "宗旨：光脚的不怕穿鞋的；你不仁我不义；\r", "直接走龙洞仲裁"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><ol>\n<li>之所以性能和 H5 持平是因为他本身就是 H5 + JSBridge ， 而不是 React Native 或 Weex 的 JS + Native 的方式。</li>\n<li>因为微信没能开发出足够流畅的游戏引擎，就假借各种公众号之口说苹果不让做游戏。（前期还有宣传苹果不让小程序做直播，如今疼讯家直播就上了小程序。）</li>\n</ol>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>引自<a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/devtools/details.html?t=201715\" rel=\"nofollow\">官方说明</a></p>\n<blockquote>\n<p>三端的脚本执行环境聚以及用于渲染非原生组件的环境是各不相同的：</p>\n<ul>\n<li>在 iOS 上，小程序的 javascript 代码是运行在 JavaScriptCore 中，是由 WKWebView 来渲染的，环境有 iOS8、iOS9、iOS10</li>\n<li>在 Android 上，小程序的 javascript 代码是通过 X5 JSCore来解析，是由 X5 基于 Mobile Chrome 37 内核来渲染的</li>\n<li>在 开发工具上， 小程序的 javascript 代码是运行在 nwjs 中，是由 Chrome Webview 来渲染的</li>\n</ul>\n</blockquote>\n</div></div>"], "reply": "72", "tittle": "关于小程序的两个猜测： 1. 性能体验和 H5 几乎持平， 2.不能做出流畅的游戏。", "comment": ["游戏收入才是苹果商店大头。", "即便是 2017 ，你可以回想下你在手机上玩到的 h5 游戏最好的是哪个，对于我来说，当然是 flappy fog ，其余的无一例外 native", "更正一下，是众筹的小鸟", "小程序不是 HTML5", " 所以猜测不是苹果不让，是微信为了遮羞。", "小程序的性能在大范围动画上还不行，很卡", " 那你用 react native 开发一个游戏咯，小程序不就是 reacT naTive 么", " 我昨天在 iOS8 上看了一下，小程序是启动了一个 WKWebView 来运行的。能执行 alert ，可以确定小程序是运行在 webView 容器里的， 也就是用的 HTML 。", "忽略主题", "苹果和微信有协议  不允许上游戏", " 谁告诉你小程序是 React Native 的？想当然可不好。", " 看我的拼写 为什么 T 是大写的呢", " 那就有意思了，如果他的容器真是 WebView 那性能还不如 Weex 呢\r", "不过最终还是要用安卓或者 IOS 源生的调试工具看最后渲染出来的是组件还是 html dom 元素\r", "能执行 alert 不代表就是混合应用啊", "貌似有人提到动画的局限性，所以，我认为楼主说的在理", "即使能做出来游戏，费的流量也不会比直接下载少，不值。", " \r", " \r", "小程序比单纯的 HTML5 好的地方是可以“渐进增强”，即使现在是 webview 做的，完全可以升级到 native 。", "其实我觉得，不会是因为协议问题吧。", "  \r", "\r", "如果 iOS 平台没有微信、 QQ ，卧槽，那估计也是废了。\r", "\r", "应该不是协议的问题，是性能不足，动画一多就跪", " 渐进增强并不容易，现在小程序 native 的部分包括 tabbar ， toast ， alert 等脱离页面内容的东西，页面内并不能渐进增强。要么彻底换掉，要么用 webview 。", "Android 上打开开发者模式的显示布局边界可以看出某些控件（地图视频 Tab ）是原生的，而且小程序规范语法有审核，普通 HTML5 加载到微信的 WebView 少不了各种检查预处理什么的，性能应该会好点吧", " 意思是用 cycript 可以把那个 WebView 容器选出来执行 HTML 相关的 js 代码， alert 能跑，那么其他 dom 自然没问题，虽然没细究，但是可以肯定。因为如果用 cocoa UI 去渲染，那么只需要用 JavaScriptCore 就可以了，根本不需要 WKWebView 。小程序这一套用 WebView 来渲染比用原生去做要好处理得多，别的不说，就 canvas 那一套规则就不容易搞。至于性能怎么样，就看使用场景了。", "小程序是 native+html 结合的控件", "游戏可以做，有 Canvas 。\r", "体验嘛，见仁见智。", "所以小程序应该降温了么？ 但我还是做了一个， ", " ，需要体验的可前往 ", " 进行注册", " ", " 是 H5 ， 类似 phonegap 之类的套路。", " \r", " \r", "\r", "问了内部的人，是 native 的。大概就是 native + html 结合吧，像楼主 append 里列的 非原生组件 的渲染。", " \r", "\r", " \r", "\r", " \r", "\r", "跑在浏览器里的不一定就是 HTML,小程序的渲染是微信自己用 js 开发的一套渲染引擎，没有用 HTML 渲染，效率比 HTML 高得多", " 对的。", " \r", "跟安卓一样， native 那是顶部 navigation ， alert ， actionSheet 之类的。内容部分就是 HTML 。你那内部人估计也没搞清楚。\r", " 你猜的？\r", "\r", "证据：\r", "\r", "[choose(WKWebView)[0] evaluateJavaScript:\"document.getElementsByClassName('desc')[0].innerHTML='Im webView'\" completionHandler: nil];\r", "\r", " \r", "\r", " ", " 你不要告诉我小程序在 webView 容器里面基于 HTML 开发出了一套不需要 HTML 渲染，效率比 HTML 高得多的 UI 引擎！", " 只是用了 webview 里的 js 引擎，用纯 js 绘制一个视觉控件，不行吗？", " \r", "就像页游，用 flash 渲染的，也没有用 HTML", "奇怪，早期的文档中确实写了是使用类似 reactnative 的方式渲染的，现在怎么没有了，不过真说起来这性能真的是不行，用 webview 渲染还真有可能。。", " 楼主补充了。  ", "\r", "iOS WKWebView ， Android Mobile Chrome 。在 WebView 里面你不论是写 HTML 还是用 js createElement 那是一样的。谈不上性能差。况且小程序就是写的 HTML ，那个 wx-view 跟 div 是一个效果。", "试试用 Chrome 去调试 WebView 看看； ", "  你对 js 理解太局限了， js 并不是非要依赖 HTML 的，和其他语言一样，也是具备图形绘制能力的，完全可以自己绘制一个自己的界面。", " js 的确并不依赖 html ，执行的时候也只需要 JavaScriptCore （ iOS 平台）即可，但小程序『是由 WKWebView 来渲染的』，那很明显是（部分）转成了 html ，最终由 webview 来渲染的。\r", "\r", "之所以我加了个部分，是因为有些组件（例如上面有人提到的地图）就是 native 的\r", "\r", "\r", " 我也记得我以前看到过是全部以 native 渲染的，估计在实现上踩坑了，然后又得赶着上线，只能先这么用了", "  WebKit 才是 HTML 渲染引擎， webview 只是一个集成多种引擎的容器。小程序如果是 HTML 的，应该可用 window 和 document 对象，但并不支持，所以也不能用 jQuery", " \r", "想要全 native 渲染基本就靠企鹅无限制的堆人力去做 binding ，而且 iOS 一放 beta 就开始全组加班的画面是不是太美了。。。    \r", "不过大厂有的是钱，说不定就这么搞 2333333", " 再次确认了一下，是 native", "楼上一群人连 jscore 和 x5 是什么都不知道。。。所以想当然的说是 html 。。因为他们只知道 html ，，他们觉得 webview==html ， 无知是可怕的，可怕的是无知还要说出来", " 你想多了，在 WKWebView 里面只有一个渲染视图引擎，就是 WebKit 。你举出第二个来？小程序不能用 window ， document 是小程序屏蔽了，不让你用。我前面那两张图就是测试了，就是在微信的那个 webView 实例里面，用 document 去修改视图。你要是还是觉得不是 HTML ，你可以说一下小程序的实现原理。\r", "\r", " 官方文档里写了， ", " iOS 是由 WKWebView 来渲染的。\r", "\r", " 你以为的 jscore 和 x5 是什么？ X5 基于 Mobile Chrome ， Mobile Chrome 是什么？浏览器啊，你现在告诉我浏览器跑的不是 HTML ？你来解释一下小程序的实现原理。", "小程序其它是用易语言做的。", " 人外有人，山外有山，你说话的语气，真让人受不了", "不让用 window 或者 document 可能是因为用原生的方式不太稳定,先用 webview 用着,但是保持以后 reactnative 语法的兼容性.", "有直播类的小程序？我正在做这个产品规划。", "就流畅度， Android 上的小程序比 H5 好太多了。。。", "大 web 一统天下指日可待。", " 好大的口气，没看见 LZ 的 append 吗？『是由 WKWebView 来渲染的』『是由 X5 基于 Mobile Chrome 37 内核来渲染』，我们讨论说是 html 是基于这一点来判断的。既然你那么厉害，那你来告诉我， webview 除了渲染 html ，还能渲染神马？别告诉我是 css 和 js 。装逼是要给出干货的，不然你就是傻逼了", "不管如何，小程序的体验确实比一般的 HTML5 应用好非常多", "就是 native 加 html", " 这个解释非常合理", "初代苹果不允许三方 app 。微信完成了这个轮回。", " 好歹上了个 cycript 的运行时分析，支持方都是靠脑补", "感觉就是 super webview", " 还真的是 js 。。。", "本身就是下发 js 代码 通过 x5 或 jscore 解释器  最终调用的原生组件啊。。。", " 你想说的是像 react native 那样吗？那的确和 html 没关系，人家也没用的 webview ，就只是 jscore 解释运行而已。但是你看清楚了小程序说的是『运行在 JavaScriptCore 中』『由 WKWebView 来渲染』，换句话说，最终调用的还是 webview ，那自然很合理的就能推测是翻译成了 html 。而且 29 楼 @", " 也给了例子，你要是调用的是（除了 webview 以外的）原生组件，哪来的 document 给你改？", "小程序的产品定位就不是为了做游戏", " 这个是怎么看的 😳", "大概主要运算单独一个 js 线程了吧， ui 就不会被 block 了", "哪来那么多争论的，就现在使用体验来看，不管是 ios 还是 Android ， H5 都比小程序差了一大截-_-", " 越狱设备， ", "\r", "\r", "\r", "\r", "\r", "现在还在坚持小程序是 native 的人你们是多闭塞啊？", "小程序是一个产品，不是什么技术解决方案，它的目的是建立一个属于腾讯的庞大生态圈，技术什么的都是次要的。\r", "之所以小程序的开发语言高度抽象，就是为了将来可以无缝切换升级底层技术。", "不是微信实现了一套 jsbridge 嘛  难道我想错啦。。。。", " 正解，我早上起来写了一篇博客——[纠正对微信小程序的一个认知]( ", " native 。", " 手抖，敲错了，是：[纠正对微信小程序的一个认知]( ", ")", "我的一些猜测：\r", "\r", "应该就是普通的 Web 技术来实现的, 比普通的 web app 体验要好的原因是小程序他有自己的一套框架, 如果框架既定的话，微信就比较容易来实现一些性能优化.\r", "而常规的 web app 体验的好坏和开发者的水平有直接的关系.\r", "我相信能力强的开发者做出来的 web app 体验未必会比小程序差多少.\r", "\r", "还有一个重要的原因在于 native 环境可以对 web 的一些关键步骤做增强\r", "\r", "比如我现在负责实现公司的 native-to-web bridge, 在启用 bridge 后体验确实会好不少.\r", "而且还有很多优化的余地， 比如把资源放在本地，然后采用某种策略来动态更新本地资源而不依靠 browser 来更新资源, 效果应该还会好不少. 这一步是我现在正在尝试的方向\r", "\r", " 还有一句话想说： NO Magic ！不必要过分迷信和臆想, 都是可以通过自己分析出来的嘛....", "产品考虑业务，总裁考虑战略，我们程序员才考虑性能。", " rn 就是用了 webkit 渲染的啊。。 wk 就是 webkit 里面的啊，但 rn 不是 html5 啊。。。。。大哥你是得有多菜。。。。", " 看到这里可以确认你是无脑喷了"]},
{"content": ["<div class=\"topic_content\">每次看到别人乱七八糟的代码，心里就很不舒服，老是想改改，你们有这种感觉吗？</div>"], "reply": "56", "tittle": "强迫症患者做程序员是一种什么体验？", "comment": ["挺好，公司以后的 code review 就全拜托你了", "希望你终究会变成 只见森林不见树木. \r", "森林 = 接口和框架结构\r", "树木 = 函数", "做程序员大忌就是随便格式化别人的代码", "就算是烂代码也跑成了稳定的烂代码。没事别乱动，否则你那是闷声作大死。", " 啊,这..", " 不改心里又很不舒服怎么办,不看吧,还不行", "体验是加班更多了，因为总想写得更好", "头发白了，驼背了，眼睛花了", "我还在学习中。别说别人的代码，看见自己几个月前的代码都没法忍", "能正常运行的代码就是好代码。\r", "\r", "写好测试，反正有 VCS ，改完还能通过就行，不行就回退回去。", "有这种感觉，看到乱七八糟的代码就喜欢手贱给格式化下，看上面大神这么说，下次不敢随便乱动了，哈哈， 233", "不要改 改了总有一天你会付出代价\r", "\r", "_(:3)∠*)_", "看到一个文件有多种缩进方式的会去手动修改，看到代码冗余太多的会去改，看到可读性差的代码会去改变量名或者加备注，上班无聊的时候会去审查代码。\r", "现在好很多了，除非能预期到有很多很多的空闲时间，否则不会打算去把整个项目重构掉，因为脑子单线程，比起手贱更讨厌写一半放那里的感觉，另一方面，项目也越来越大了。", "别改\r", "\r", "有必要的话自己写个中间层，把自己的代码和别人的代码隔离，你自己的代码想怎么改就怎么改", "自己写的代码好就行，别管别人的代码。", "给个 git 。我一直想看看强迫症写的代码", " \r", "\r", "我就很喜欢和强迫症一起合作啊，我自己也是强迫症啊，哈哈～～～", " 如果编码风格不一样的话就不愉快了", " 是的，最要命的就是{}，我喜欢 \r", "Func () {\r", "\r", "}\r", "因为这样占用空间小，碰到一个喜欢\r", "Func()\r", "{\r", "\r", "}\r", "这样的，然后就进入了死循环模式，还好有 vim ，我一上来直接 gg=G ，然后等我改完 commit 之后，脑补他打开的样子，一本满足～～～ 哈哈", " 前半部分跟我好相似", " 知己啊,哈哈", "我很喜欢看倪匡的访谈，感觉对于治疗强迫症是非常的有效。\r", "倪匡写小说从来不修改（他破吉尼斯世界纪录的写作量理论上也不允许太多修改），以至于他的长期读者可以从中找到非常多的“纰漏”，他却很坦然，错误必须存在，况且写小说，体裁上本来就是虚构的成分为主，别人疑问南极怎么会有大白熊？他说我喜欢大白熊，所以大白熊就在小说里出现了，至于在南极还是北极？在南极也没问题啊，又不是地理杂志。台湾也有不少修正他小说情节和续写的版本，也同样受欢迎，看看你想做倪匡还是做修订版作者吧～\r", "\r", "还有个日本的摄影师荒木静惟，宝丽来作品都可以办摄影展，有些作品的构图、用光简直可以用“一塌糊涂”来形容，用严肃摄影的眼光来看简直不可理喻，如果强迫症，这怎么可以办得到？他用手动相机时，过片与按下快门之间几乎为零的时间间隙，在我看来根本就不存在思考的，所有我又去看了透露荒木经惟心路历程的图书（自传）。\r", "\r", "最终，我发现那些功成名就的脑力劳动者，通常很高产，高产可以解决很多问题，他让你有足够的作品用来总结、自省，同时又能充分消耗掉你的创作时间，你没有时间去否定自己，比如我是否该停下来先解决不够完美的问题？答案是不必。\r", "\r", "总的来说，他们不是拿时间来总结，是拿行动结果来总结，别人拿来总结的时间，他们仍然用来进行创作。而他们对于自己作品的不足，有足够的坦诚（黑体加粗）来面对，对于自己的作品尚且如此，更何况别人？所以倪匡是一个非常崇尚个体自由，并且尊重别人自由的人。\r", "\r", "现在我很少希望去改变别人，我只希望自己能够坦诚（黑体加粗），这很重要，特别对于疑似强迫症患者。", "“萝卜快了不洗泥”原来可以有如此高大上而又清新脱俗的表达方式", "最讨厌这种人，自以为是.别人的代码要你改什么，出错了你负责吗？有 BUG 了算谁的.", "完美主义 + 强迫症 + 拖延症 = 一事无成的废物", "少年  我给你指条明路：处女座程序猿就应该学 Golang(笑", "老板：老李，你过来，你开发的服务出问题了!\r", "楼主：呵呵，老李完蛋了。\r", "老李：老板，上次楼主改过我代码，是他弄的。\r", "老板：哦，叫他加班修好就别来上班了，估计挺累的。哦，是以后都不用来上班了！\r", "楼主：……", "我就是，强迫症很严重，对代码的完善程度和格式有很高要求，我的代码基本不用测试也无 bug 就是因为写的时候考虑的很周全，项目组的代码规范和 code review 我也是唯一一个作为普通员工参与的，但是因为经理也不在乎这个，提出问题同事也都不会改，所以项目的代码乱七八糟的，但测试也都能过，各种打补丁的方式修 bug 。这也就是我决定离职的原因，好好的一个规整的项目从 0 开始变成了现在这模样。不过哪怕别人代码再差也一动不要动，不动出问题都是别人的，你就减个空行那出问题都是你的，避免给自己揽事。\r", "其实作为程序员，先解决有没有，再解决好不好，是对的，因为大家拼的都是速度，晚一步市场就被别人占了。不过于我而言，我无法做到这样，除非我做到决策层，不用审阅代码了，那可以。毕竟强迫症不好改。所以能遇到一家大部分人都有代码洁癖的公司真的是我的幸运吧。", "i dont care \r", "就是改", "代码风格什么的只要大家都用一套，就可以，哪管再烂的风格只要大家一起用都出奇迹，何况很多时候开发都是一个人写模板其他人抄\r", "\r", "我要求的就一点，英文标点符号后面空格，这是英语的语法\r", "其余的，什么括号有没有空格，等号都没有空格，大括号有没有空格，问题不大，都是 IDE 还在乎这点\r", "有的项目是 php 后端，那前端就走 c 风格，用小写下划线分割\r", "有的项目是 java 后端，那前端就 java 风格走驼峰命名\r", "这点应变能力都没有就别写代码了", "强迫症怎么不写注释, 看来你病的还不严重", "我觉得 go 这一点做的不错，格式已经订好了，看你们能乱成什么样", "上次有个强迫症在发布的时候把 sql 格式化了一下\r", "`select sum(*) as count`\r", "格式化之后变成\r", "`SELECT SUM(*) AS COUNT`", " .kt 是什么语法？导的是 Java 的包，语法却和 Java 有些出入。", " kotlin JVM 语言。", "真正的强迫症程序员应该是反复起来洗手，坐下擦键盘，擦显示屏，系统文件一有问题直接重置系统，桌面图标必须按照颜色排列，程序变量起名必须有规则等等，这才是强迫症", "强迫症要么当老大，规则你定，要么啥都不说管好自己就可以了", " 又被你说中了。。。 我一天洗手 20 多次，基本上只要感觉手上稍微有点汗（只是感觉），就会跑去洗一次。。。严重的时候一天洗过 30 多次，冬天好点。。。 一个月一瓶洗手液，后来实在受不了洗手液洗完后滑溜溜的（感觉有洗手液残留），全部换香皂了，双十一囤了好多香皂。。。。", " 我擦，最不能忍每行后面跟个空格啊，特别是类 C 的语言，每行后面有空格感觉就跟尿尿没尿干净一样，我只要发现代码有一个地方出现这种情况，必%s/\\s\\+$//全部给干掉。\r", "\r", "最喜欢 VBA 里面写完一行回车立马自动给你格式化，等号两边自动加上空格（ VBA 默认的。。。）。", "要学会接受这个世界的不完美，你才能感觉到快乐和幸福", "原来是说代码风格……", "不能忍受回收站里有东西", "this is society, mate", "如果你没有足够强大的确信，不要轻易动别人的代码。否则你会死得很难看。老司机忠告。真的。", "这种强迫症只能打个引号了，遇到复杂的场景实现需求还来不及，还管长得漂不漂亮？\r", "\r", "想要好看可以写 python 嘛。", " 公司的产品大忌就是，这个代码是某人的代码，那个代码是那人的代码，大家都只能维护自己的代码", "如果你又更好的方法，去改进别人的代码，并且提醒一下当事人，双方都有改进当然更好。\r", "但是如果你不能明确的知道这段代码是干啥的，尤其是那些很老的代码，建议还是不要乱动的好。", " 不会的，只要第一个人写出模板，大家都是复制粘贴一个风格，至于维护性，这个必须要定期代码审查\r", "怕就怕一知半解的程序员，太菜的什么也不会只敢复制粘贴，太牛逼的知道软件工程不呼呼乱来，那种一知半解的，学一点东西就敢魔改框架的，才是可怕", "确实第三种太 TM 可怕了，只能用单元测试来杜绝这样的人", "这算啥，目前手上一个二手项目。其中一个类 96 个成员变量 6 个全局变量。 cpp 6 千多行。没测试。到处都是超长函数。\r", "\r", "我也是活不下去的节奏了。", "一步一格式化、保存，一次还不放心、必须多来几次，看到别人代码老想改", " 强迫症表示最讨厌 python ，结尾不用个分号很难受，编码时为了提高目视效率，会把很多有规律的较短的代码放在同一行上，然后用 Tab 分开， Python 完全没办法用这种方式愉快玩耍。", " 有规律的较短的代码应该成为函数，不应该放在同一行，这样不仅不能提高目视效率，还会增加他人阅读代码的难度。", " 道理是这样的，可是我碰到的很多项目反而喜欢不封装，一个是函数跳转，出栈入栈会增加额外开销，当然你可以说写成 inline 类型，偏偏有很多不支持 inline ；第二很多 time critical 的系统，连短一点的，或者可以 predictable 的循环都做 unrolling ，所以这个也不是绝对的，即使封装成函数，也会把多行放在一行上的，做 code review 的时候，都还是要看的。", " 只讲道理嘛，最佳实践的 trick 太多了。不过 review 的时候多行的意思应该更加明确吧。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>假设我在父控制器中放置一个 Bootstrap 风格的 alert 框，用于提示错误，类似如下效果：\n!()[<a href=\"https://ww1.sinaimg.cn/large/006tKfTcjw1fbrff61vqcj308q03pglq.jpg\" rel=\"nofollow\">https://ww1.sinaimg.cn/large/006tKfTcjw1fbrff61vqcj308q03pglq.jpg</a>]</p>\n<pre><code>&lt;body ng-controller=\"ParentController as parentCtrl\"&gt;\n  &lt;!-- 这里有一个 alert ，用于显示错误 --&gt;\n  &lt;div ng-show=\"parentCtrl.alert\"&gt;&lt;/div&gt;\n  &lt;div ng-controller=\"ChildController as childCtrl\"&gt;\n  &lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n<p>在 js 文件中，我在控制器 <code>ParentController</code> 中定义了变量 <code>alert</code>：</p>\n<pre><code>app.controller('ParentController', [function() {\n  var self = this;\n  self.alert = null;\n}]);\n\napp.controller('ChildController', [function() {\n  // 那么这里应该如何访问到 ParentController 中的 alert 呢？\n}]);\n</code></pre>\n<p>现在我想做的，是当 <code>ChildController</code> 中某些操作出现错误的时候，给 <code>ParentController</code> 中的 <code>alert</code> 赋值，这样那个错误 alert 框就可以显示，不知道应该如何写 <code>ChildController</code> 的代码呢？</p>\n<p>现在有一个折中的办法是，将 <code>ParentController</code> 中的 <code>alert</code> 元素绑定到 <code>$scope</code> 中，即如下：</p>\n<pre><code>&lt;body ng-controller=\"ParentController as parentCtrl\"&gt;\n  &lt;!-- 这里有一个 alert ，用于显示错误 --&gt;\n  &lt;div ng-show=\"alert\"&gt;&lt;/div&gt;\n  &lt;div ng-controller=\"ChildController as childCtrl\"&gt;\n  &lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n<p>相应的 js 文件如下：</p>\n<pre><code>app.controller('ParentController', ['$scope', function($scope) {\n  $scope.alert = null;\n}]);\n\napp.controller('ChildController', ['$scope', function($scope) {\n  $scope.alert = {\n    type: 'alert',\n    info: 'Error...'\n  };\n}]);\n</code></pre>\n<p>但是现在的 AngularJS 不都推崇的是直接将要显示的数据绑定到控制器上，而不是向控制器中注入 <code>$scope</code> 变量。因此想请教一下大家正确的方法，或者是在单页面应用中，如何正确地显示错误框。</p>\n</div></div>"], "reply": "6", "tittle": "关于 AngularJS 中子控制器访问父控制器中元素的正确方法", "comment": ["我也又遇到过类似的问题，用的`yeoman`生成的一套系统，所以整个架构和写法上和你贴出来的有点不同。我在 child state 通过$scope, 类似 `$scope.ParentController.alert`的形式去获取和更新的。", "绑定到$scope 是一种方法，还可以自己写一个 service 来搞定多个 controller 之间共享数据的问题", " 诶？写给 service 如何来共享数据呀？我能想到的只是单向传递，如果 service 里面的值变了，如何保证 controller 的值也跟着改变呀？😄", "手机写了一堆，忘了保存，待会换电脑来写。", "这是典型的父子通信问题，但是并不符合你的业务逻辑。\r", "在 NG1 中，如果真的要使用父子通信，最优雅的办法是采用一个共享的服务来解决，当有涉及模板时，应创建一个指令，任何子控制器都通过相应的事件来触发指令。使用共享作用域的 scope 的方法实际上不好的，你代码中的父级作用域其实就是类似 rootScope ，当他们被越来越多的变量、对象占有时，很难通过控制器之间的切换累释放内存。其次当你需要调用他们的时候也会很难，特别是你的控制器代码被复用时，其他人很难知道需要在父级再做一件这样的事。这就违背了 NG1 中自治的哲学。\r", "\r", "如果要达到这一点，至少要保证你的任何控制器不依赖于其他控制器，任何指令可以直接使用而无需在控制器中为它准备一些元数据，任何服务也是注入即使用。这其实是很难的，因为你要做一些额外的工作来达到这一点，比如强制自己不使用非当前作用域的变量、函数，通信采用服务与事件等等。但是它们带来的好处也显而易见。\r", "\r", "业务逻辑中， Alert 这样的问题常常会带有一个基础的模板，我建议是将它包装成一个指令，使用 Alert 相应模板，然后在较高层作用域的模板中编译(让子作用域都可以享受)，当你需要它显示时，在控制器中发出相应的事件来触发这个模板显示与隐藏。\r", "还有一种更优雅的解决方案，新建一个 alertModule ，将控制器、指令、服务全部挂载在 alertModule 上，再让业务的 module 依赖它，即可以使用相应的方法来触发这个弹窗模块。\r", "\r", "你可以参考一下我写的两个模板，它们分别是挂载 window 和挂载 module 方式。\r", "\r", "\r", "angular-mobile-tips 使用了很多有意思的技巧，是一个典型的 NG1 插件，可以尝试模仿它写一个。", " 非常感谢，我先研究一下你给的那两个模版。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>前几天被一篇文章<a href=\"http://mp.weixin.qq.com/s/hQLUjvttTPgfd9qO1l-i6A\" rel=\"nofollow\">《为什么说 2017 年你必须要学习 Go 了》</a>刷屏了，我原本也学过一点这门很火的语言但是没有真正用过，于是点进去看了下觉得功利+不靠谱。码农闻到了 bad smile 就是不吐不快，今天来战一战 go 语言吧。</p>\n<p>第一段大篇幅写“硬件限制”，讲对多核的利用+对 cpu 高效率利用多么重要，的确这个很重要，各语言肯定都在追求做好这件事。</p>\n<p>第二段讲 goroutine ，我觉得 goroutine 是好东西但是和多线程比肯定不行啊， goroutine 本质上是把异步回调的代码用同步的方式来写（语言底层处理了细节，所以性能上和异步回调并没有差别），你要比和 libevent 之类的异步事件库比啊；而且你黑 python 多线程也就完了， java 的多线程那么好那么工业级的东西。实际上 goroutine 的确比异步回调写起来容易了，单身业务逻辑多线程同步方法写肯定是最简单的。那个（ Beautiful,straight code/Efficient concurrency ）表严重不同意，静态类型的 c/c++和 java 在可读性上会比 erlang 、 clojure 差么，会和 js 、 perl 、 python 这些脚本语言在一个层次上么？而且性能还要看场景的，你这么钦定了真的好么。</p>\n<p>第三段 go 可以编译成二进制的确很震撼，不过既然没有消灭 gc ，那你说 go 的是一个 runtime 不是虚拟机我也无话可说。然后讲 go 的性能怎么不提 gc 了， rust 也是编译成二进制消灭 gc 消灭 malloc/free 的。</p>\n<p>第四段讲 go 代码容易维护，举了一堆 go 没有的特性然后来把这个当 feature ，我觉得很搞笑。然后 Go 和其他语言非常不同这一点我承认，但是这也是我学习 go 的时候非常不适应的原因。我觉得一个语言最珍贵的品质应该是解决问题而不是与众不同的语法，在我这个 go 初学者眼里 go 除了编译成无依赖二进制和 goroutine 这 2 个杀手级 feature 以外，作为一个开发者我看不到它有别的创新，甚至有很多业界广泛使用的 feature 没有做。我学过语言也学了半打了吧，我很烦一些编程语言搞一些特立独行的语法，如果你这个语法没有带来新的 feature 那么老老实实学 c/c++或者 java 就完了嘛， go 语言看起来丑说到底还是语法想搞的特立独行。</p>\n<p>然后我比较同意的是他把 Go 的兼容性拿来说了一下，这也是我非常看重的。另外代码维护就不得不提第三方库管理机制吧？</p>\n<p>最后说 GO 的背后是 google ，这个潜意识不就是社区驱动的语言不如大公司驱动的语言么，我认为这是非常功利的说法。 mysql 背后就是大公司， postgresql 背后就社区，二者都做的很好，而 google 为啥还迁出 mysql ； java 背后还是 sun 是 oracle 呢，微软和 google 不是还被恨咬过么。实际上一项基础设施技术一个大公司主导好不好这个还是不好说，大公司投入肯定好，但是大公司为了自身业务有的情况会和社区有分歧，实际上 go 官方对社区的意见就没有社区驱动的 rust 重视嘛（ rust 由 mozilla 公司驱动）。 Facebook 为了满足自身也无需要弄出了 hack 也没法强加到 php 身上，因为基础设施肯定要服务大多数开发者。</p>\n<p>我个人就是个土包子喜欢实用皮实的技术，我讨厌装逼的技术 /工具 /库 /语言，对我来说啥是装逼的技术呢？\n重复造轮子，把自己包装的逼格很高，忽视兼容性，性能差，和业界现有的工作缺乏继承关系，故意弄得不兼容。</p>\n</div></div>"], "reply": "115", "tittle": "对《为什么说 2017 年你必须要学习 Go 了》这篇文章的疑惑", "comment": ["在小公司然并卵", "我最不能忍的就是 Go 强制规定了{}的风格", "这争来争取也是有劲。\r", "学不学好像搞的多学这门语言，会丢失一个女朋友一样。\r", "合适了，需要用了，学不就好了。", " 这样说不对把, 世界上又不是只有客户端编程. 微软自从被 Sun 告了之后就在 windows 中移除了对 Java 的原生支持, 现在也没多少 Java 写的 PC 端程序, Java 还不是一样成为了工业级语言火遍全球.", "我关注 golang 是因为最近某热贴里，有人的私活用 golang ，最后结果赚了几 w.\r", "\r", "让我发现 golang 的确还是有些很实用的点的。\r", "\r", "至于你们在吵的，不知道在吵啥。\r", "\r", "讨论语言的不讨论怎么赚钱的，是因为工作太不饱和么？\r", "\r", "有这吵架的功夫多学几个语言几个库不好么。", "渣渣来过，学会 golang 再来一拼。", "另 golang 需要扶墙，这里 ", " 大概也就只有语言风格（函数式和命令式？）的区别了。。。", "这种营销文章确实让人反感，很多语言都有。不过楼主你对 golang 理解错了好多，尴尬。", " 总结的很到位", " 感觉和 nginx 好相似", " 话说你这个 vpn ，有什么意义？一般简单的码农还不会自己开 vpn 了。", "需要应用的场景，就会去用那个语言。产品、语言都是给不同的需求决定的。\r", "\r", "并不是说一个语言就是万能的，最强的。需要用到就好了。", " 是不是你每天的工作是做饭？码农就得全部自己做啊，什么想法啊", " \r", "Erlang 是 Actor 模型做线程同步， Go 是 CSP 模型。\r", "Erlang 是 FP ，不允许有变量， Go 更像 C 。\r", "Erlang 是编译到字节码，用虚拟机运行，平台差异用虚拟机抽象。 Go 是编译到原生程序，坑多，但性能更好。\r", "Erlang 的 GC 和调度比较适合大量使用 Actor 模型。 Go 的调度似乎也牛逼，但 GC 目前还有些问题，不适合用 Goroutine 写时间要求很高的代码。\r", "用 Erlang 写好代码比较容易，心智负担比较小，模式匹配很爽。用 Go 写起来比较罗嗦，心智负担大，但同时也更加灵活。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>github 地址： <a href=\"https://github.com/OYsun/VueCircleMenu\" rel=\"nofollow\">https://github.com/OYsun/VueCircleMenu</a></p>\n</div></div>"], "reply": "23", "tittle": "简约至上，美炸天的 Vue 圆环菜单组件", "comment": ["美炸天太标题党了吧...", "还不错", "看那张 gif ……如果你是指手机转动那个，还行。\r", "如果是说手机里那个菜单……", "哇 不错", "开场片头比正片好看系列", "确实好看，不过我电脑屏幕炸了，楼主你看着办", "为什么不来个 demo 呢？", "已 star,正需要一个按钮变形的源码看一下", "为楼主的审美担忧。", "这手机咋也转？浓浓金坷垃 style", "炸天。。。  没有什么实用性的东西，不过指不定哪个领导或老板喜欢这样的", "还是那句话，一切技术的终极都是审美。\r", "技术可以练，审美还是看天赋。", " 审美看环境，比如从小就开始看中央电视台那必然很难达到世界平均水平的审美", "这叫简约？", "木有 License 不敢用", "哈哈哈  ，标题美炸天了", " +1", "辣么夸张", "太夸张了吧。。", "额，今天一看发现好多吐槽，好吧，标题党了，标题过于夸张了，其实只是想让大家进来看看。学生一枚，将做出来的东西开源出来是为了更好的在社区中成长进步，大神们见笑了哈。", "另外有人私信问我开头那个 GIF 图是怎么做的，其实我在学编程的时候，在大一大二学了两年影视特效，那个 GIF 图是用 AE 做的。", "动效有点反人类", "666 学生党做成这样已经不错了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>日本互联网产业落后和封闭的状况最近是否有所改变，他们对于人才的需求量是怎样的，是否存在跳槽涨薪的可行性？或者不考虑日企，在日本的欧美公司工作的体验和在国内的外企相比有怎样的区别？</p>\n</div></div>"], "reply": "1", "tittle": "日本有哪些互联网企业值得加入？", "comment": ["日本人是典型的只做他们认为对的事，而不跟风做快的事的民族。\r", "\r", "日本的互联网公司，基数比较小，不像国内到处都是创业公司。并且由于社会老龄化的缘故，公司的年龄层普遍比国内的要大一些。所以对人才的需求量不如国内大。并且日本互联网公司对外国人一般要求语言比技术更多，比如日语尽量要 native ，日语不会英语也要能流畅对话才行。\r", "\r", "日本的大部分互联网公司业务都比较稳定。公司生存的时间都比较长久，融资的故事也相对少的多。\r", "虽然收入在日本的 it 行业也算较高水平，但是由于日本整体社会结构的原因，无论你干什么行业，薪资水平都差不到太多。所以跳槽的涨薪程度比较低。\r", "\r", "日本的欧美公司大部分都是日式的管理模式，再融合了欧美的自由度的一种管理模式。其实总体说起来跟国内也没什么太大的区别。毕竟外企的管理，不论是日本还是欧美，都甩国内企业管理一大截。\r", "\r", "\r", "日本整体比中国加班更严重。但是互联网除外。在互联网这个本来加班就很严重的行业里面，日本由于严格的法律制度，是很难强制你加班的。换句话说，加 1 分钟的班都要给你 1 分钟的钱。\r", "再加上日本的假期整体比中国多不少，企业员工的年休一般是 16 天起。（互联网行业）并且你要请假就算是安倍来也没法阻止你请假。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>欢迎转载, 注明出处即可</p>\n<p><img alt=\"10101.Ep5.GEN.jpg\" src=\"http://upload-images.jianshu.io/upload_images/4181079-dc467a24d9390cc1.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<h2>相关链接</h2>\n<p><a href=\"http://szhshp.org/comics.html\" rel=\"nofollow\">《 10101 》全章节列表</a></p>\n</div></div>"], "reply": "1", "tittle": "[程序员漫画] 《10101》EP5：中毒啦", "comment": ["图已挂...请绕过此贴..."]},
{"content": ["<div class=\"topic_content\">Chrome 书签同步插件求推荐，我知道是月经贴，但是我就找不到适合我的。不要 Chrome 同步，不要 xmarks(一些重复的空文件夹同步一次来一次），水星扩展我登录不了，求推荐谢谢。。！！！</div>", "<div class=\"topic_content\">OK ，试用了一下 Chrome 自带的，确实很方便，然后今天重装系统，书签又是重复，误删一个，关掉梯子，然后全部删除，再备份一次，然后全部没了，不要跟我提本地的备份，刚装的系统找不到。。幸好我有备份=。=</div>"], "reply": "62", "tittle": "Chrome 书签同步插件求推荐，我知道是月经贴，但是我就找不到适合我的。", "comment": ["能说说为什么不要 Chrome 自带的同步吗？我一直用着没觉得有什么问题啊，无缝同步书签和扩展。", "Chrome 同步还需要插件？不是登录 Google 账号就好了吗", "关掉 Chrome 自带的书签同步，然后只用 xmarks\r", "这几年没发现过有重复同步的问题", "同问为什么不用 Chrome 自带的同步，用了几年没问题", "本身不是自带同步么？", "估计 lz 不能 fq ，所以同步不了", "raindrop+1", "用了快 5 年的 Chrome ，书签一直自带。", "自带的吧,只要梯子好,完全自动同步", " \r", " \r", " \r", " \r", " \r", "统一回复，不喜欢，可能是以前买不起梯子残留下来的阴影，反正感觉不太想用 Google 的同步服务=。=\r", "\r", " \r", " \r", "好的，谢谢我去试试:)", " \r", " \r", "嗯， UI 很好看，就是不知道为什么不能直接读取我浏览器的书签，是我姿势不对？\r", "and Get 1 year for just $19 (that's less than $1.6/month!)\r", ".......这波有点尴尬。\r", "所以我只能用 google ？：(", " 我一直用 xmarks, 最近整理书签时发现几个嵌套多层的文件夹里面的书签不见了, 准备换别的工具试试", " 对啊，好讨厌啊 TAT 曾经那么好用 TAT", "那就用腾讯浏览器", " 拒绝=。=我领完 CF 的道具然后就卸载了，乐此不疲", "我比较想知道 Safari 和 Chrome 之间有没有比较好的同步方法。", "购入一个 VPS 自己搭建一个 V-PN ，选择最便宜的配置 也是足够使用的，", " 目前在用阿里的 8 刀，过阵子还有 do 优惠，还是学生党，所以不是梯子的问题，是想找别的选择", " icloud", "xmark????", "xmarks ,chrome 火狐都可以", "还是推荐用自带的吧， fq 之后，登录 google 账号都 ok 的，如果在网页上也登陆 google 的话，连搜索历史都能保存。这样找一些以前搜索的网页很有用。", "raindrop++", " \r", " 上面有说哦，有空文件问题；\r", "\r", " 没办法的最后办法吧\r", "\r", " 收费==", " 不用买专业版，免费的肯定够用", "能上网就能翻墙，翻不过去想办法翻", " 免费的不够用么？", " @", " 还真不够很多文件夹包着文件夹", "\r", "不用啥插件，自带 chrome 书签同步效果， chrome 商店也能用。。", "发现没人提 EverSync ，楼主不妨一试\r", "chrome 火狐都可以", "我收藏了 900 多个书签用的还是 chrome 自带的同步，自己分类详细一点感觉很好啊，除了有时要编辑略微有一点麻烦。其他的都很好啊，尤其是全平台同步。", "登陆 google 账号就好了，什么都能同步", "逐步发现，很多问题只要先搞个梯子发现都不是问题了。", "自带的非常好用", "xmarks 同步很慢，不知道 raindrop 如何？@UnisandK @", " @", "这为啥算月经，有你这种奇怪需求的应该没几个吧。纳闷为啥不直接换个浏览器，也没看出你对 chrome 有什么刚需，连自带帐号都不肯同步。", "同不理解，自带的啥毛病没有， fq 不行那还不如不用 chrome ，不能及时更新的话也挺麻烦， flash 这种渣插件得不到更新会有安全问题。", "360 极速浏览器， chrome 内核，同步服务器在中国，满足你的一切需要。", " 同样想知道, 目前的情况是, mac 端 chrome 的书签插件才能满足使用, Safari 没法用,这样导致在 ios 端也得弄个 chrome, 但是用起来很尴尬, ios 还是 Safari 体验最好\r", " mac 端 chrome 没法用 iCloud 插件的吧, 老提示只适用于 windows 平台", " 室友就在用，但我选择拒绝", " 😂😂😂是这样子吗。 chrome 用的习惯了，想继续用，不代表我就用里面的所有服务啊ಠ~ಠ", "其实我觉得， chrome 上没有比自带同步更好的功能了", " ಠ~ಠ 不跑题的终于来了，感谢╰(*´︶`*)╯", "换浏览器", "Raindrop.io +1 ，但我觉得楼主应该自己考虑下书签对你来说是干什么用的，是经常访问的网站清单，还是收藏资料文章，还是学术参考的 Reference 网站或论坛，对不同的需求可能适合的工具就不一样。比如收藏资料文章这类需求明显 Evernote 或者其他笔记类工具会更实用。我主要拿 Raindrop 来做 Reference 类网站或者论坛的整理。常用网站清单就放 Safari 就好了因为我觉得 Safari 体验比 Chrome 好所以只用 Safari 我废话真多 2333", "只要 Google 还提供书签，它就是最佳选择。\r", "然而 Google Reader 、 Google Code 等等说砍就砍根本不考虑用户还要接着用。\r", "但你也不能保证别的服务寿命期更长。", "你需要一个 SS ，而不是书签同步插件", "一直用 xmarks", " 很不错。", "手动保存下来同步到云上……", "xmarks++", "直接自带的", "楼主，明知道这种情况很多人会跳出来说直接用 Chrome 同步，你偏不在主题中说明。。这就多了好多噪音。。", " =.=第一次感受到大家的执念；\r", "\r", " 我有谢谢\r", "\r", " 就是嘛。不是你有我就一定要用吧\r", "\r", "\r", " 哈哈哈哈。。不多不多。只是懒，什么东西都扔书签.jpg", "本身不是自带同步吗？", " 你是故意的吧😂😂😂还是没看清楚其他楼", " 我错了，抱歉，没有看清问题描述，话说我一直用自带的同步，感觉还行，自己的书签不太多。", " 我再试试楼上推荐的，不过最后可能会顺应民意😁😁", "收费？改一下 hosts 不就完了…", "raindrop+1 高顔值", " ", " 试试我做的书签应用！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>某市，我有个一好哥们在一个跟自来水有关系的公司\n他委托我做了一个采集自来水数据的软件\n做的是 web 化的，给一线采集直接用的，直接用手机微信打开网页录入原始数据</p>\n<p>不是自来水公司收水费的，但是有关系，具体就不透露更多了</p>\n<p>当时用 golang 写了一个程序，自带 webserver 的，纯属赠送性质，象征性收费不到 5000 元</p>\n<p>因为 golang 是静态编译，直接把 linux-64 windows 的二进制全部拷走，找个电脑装上就能用</p>\n<p>数据库是 sqlite3</p>\n<p>因为实在是勾不上成本，当时跟哥们商议，这个价格是白送价，你行业有公司感兴趣，帮我介绍几个我卖给他们，卖两三个成本就出来了，当时哥们领导拍胸脯保证用好了给你推广到同行业公司，当然我是把这个当放屁的</p>\n<p>当时系统是我给装的，他们为了自己能方便管理重启啥的，用的 windows server 2008 ，所以 EXE 拷给他们就能运行，简单到爆，初始化数据库什么的程序里都有自动逻辑判断</p>\n<p>这个软件是有授权系统的，当然我没说，检测硬件和历史数据，以及设定值，最后得出是否合法，一个比较智能的判断系统</p>\n<p>检测到没有合法授权怎么办？弹窗告诉你买注册码？弱爆了。作为各种黑科技的实践者，咱哪能弱成这个样子……</p>\n<p>软件检测到授权不合法，从初始化生成数据库结构的时间点 A 计算，维护一个变量，初始值是 0 ，每 30 天增加 1 ，最高自增到 5</p>\n<p>软件的所有写入类查询(update insert delete),有百分之这个变量的概率不真正执行到数据库，当然现在五个月过去了，百分之五的查询不执行，错误数据也很 high 了……</p>\n<p>今天早晨 9 点，一个陌生城市的陌生电话给我来电话，表示用了我的自来水数据处理系统五个月，数据明显不太对，问有没有办法解决一下。初步估算了一下，影响数据价值人民币 104000~130000 之间，因为是直采数据，还有时效性，绝对没有备份</p>\n<p>现在我在想，是要他五万好呢，还是要十万好呢</p>\n<p>老子的软件是那么好盗版的么！ 23333333333333</p>\n</div></div>"], "reply": "231", "tittle": "防盗版软件黑科技又一案例", "comment": [" \r", "移动公司领导家里都是这玩意装个华为 sip 可视电话，还有直销的正规 400 ，还有直销的特服号码，比如铁路订票， 12306 客服这俩都是铁通接入的，都是公网 sip 直接对接\r", "这玩意你要么是正规接入 要么是关系通天 自己是搞不到的\r", "我的 ipad 基本就是 24 小时用 bria sip 在线维持这个固话的，还没有月租市话和本地移动手机随便打，联通电信本地 6 分，长途就比较坑了一律标准计价，长话费 6 秒钟 7 分钱……\r", "\r", "\r", " \r", "现在看，基本就是哥们的领导拷给兄弟单位用了，得利估计应该是没有的，估计顶天请喝一顿酒。因为我当时有明确交代服务器故障换机器重装都得找我换机器不能用，而且跟哥们强调过这个问题，我任何情况下都不会收哥们钱无论他要给谁装， 5000 元也是后来才有的最开始就是免费的帮他的忙，当时他觉得白干不好，跟领导商量，最后弄出来 5000 的预算，单位就拿得出这些了，毕竟事业单位不招标采购不好交代。\r", "\r", "\r", "\r", "另外，感谢所有关注后续的，这个需要时间的，电话只来了一次，已经表示你们不是我公司客户没有合同，我跟公司核对一下事情再说。同时给予支持，对方表示问题严重要快点，我表示我们公司的任何软件的任何问题我们都能解决，现在问题在于经过查询没有合同，需要商务部门确认这是怎么回事，只要你是我们的客户，程序都可以放心用数据问题我们都能解决。由于日常薅羊毛常态，手机通话记录都有完整录音，已经核对过没有任何说法不严密的地方，晾晾他们再说。\r", "\r", "\r", "预计周一联系一下洽谈价格和交易章程，能达成一致好办；达不成一致我又没损失只能借用微软的一句话了，您可能是盗版软件的受害者。", "逻辑炸弹嘛， PO 主明知后果植入恶意代码，还洋洋得意地来发帖，带上截图一取证，主观故意存在，处罚是从重的。\r", "\r", "“楼主没有主观恶意，体现在楼主没有主动传播该软件，没有通过该软件获取不当利益”\r", "和我就蹭蹭不进去，我以为我长得帅她不会报警差不多一个思路。杀人放火是恶，打人一巴掌就不算了。\r", "\r", "咪咪小是她不对，出轨就是你的不对了。两件事分别追究。\r", "\r", "话说搞技术的都这样了？时间都花在整人上了", "本可以明确提示的没有必要这么阴险\r", "\r", "本来也没什么,这种事情也上不了台面,不过楼主感觉还是很得意, 这样就更无法苟同了", "长见识了...", "有人用盗版，出问题，找作者，作者让他们购买正版，作者还没想好要多少米。就是这么个事，上升到犯罪。什么事情都要上升到法律，政治正确？那用盗版属于什么行为？不用也不会有这样事情吧？真走法律手段了。作者是不是很冤枉，被盗版，还要收到惩罚？谁保护作者？", "这种我很久以前也做过类似的，不过也就是弄个崩溃而已。。。虽然想过用 rsa 加密后传到服务器，但是后来作罢了", "感觉不用那么担心吧，毕竟连城市都不一样，一个自来水公司要跨省查另外一个可不是那么容易，地方政府没有那么大权利干涉到全国的", "精彩。\r", "等后续。", "厨子甲编了一本菜谱卖给餐馆 A 用， B 餐馆看着不错就偷偷地搞来了这份菜谱拿去做菜结果食物中毒了，那餐馆 B 难道还能起诉厨子甲恶意投毒不成？", "这个 NB ， get 到了。", "20161226 UPDATE \r", "已经提供正式报价单给该单位\r", "另外确认该单位为改制国企不是事业单位\r", "\r", " \r", "\r", "\r", "各位关注本案的，参与讨论本案的，下面圈几个提醒一下，欢迎一切持赞同和反对意见的朋友探讨，支持除了 PD 以外的正版软件，人人有责（ 23333 我这里还得黑一下 PD ）\r", "\r", " @", " @", " @", " @", " @", " @", " @", " @", " \r", " @", " @", " @", " @", " @", " @", " @", " \r", "\r", "\r", " PHP 是最好的语言 +1s\r", "\r", " \r", "很多受迫害妄想症没办法， GOV 公信力缺失就这恶果。\r", "\r", " \r", "当初就没想卖软件赚钱，因为根本不知道这个小圈子都有啥公司和单位，完全没有路子，就像给市政做一些特殊配套的公司，你知道肯定有，但是你除非市政有人否则你根本不知道具体干这个活的公司是哪家。这个就是你盗版我我不爽的案例。\r", "\r", " \r", "这个跟你举的案例还有一定不同，当然你这个比逻辑炸弹贴近多了，逻辑炸弹是犯罪无疑", "支持 lz  码农虽然写代码 但是也得适当会一些保护自己的辛苦成果的手段啊~~~", " 厉害了。。恭喜一下吧。。希望以后别真的。。。", " 使用来源不明软件造成损失的，使用者应负部分责任，至于作者是否需要负责，可能要也可能不要……\r", "\r", " 所以关键还是要看对方背景。有背景的，报警，走 286 ，能不能成功另外说，但肯定能把作者弄得一身骚", " 生动形象", "跟国企打交道，千万别这么搞，这个事确实你占理，但吃亏的往往是你，这种案例太多了。", "皆大欢喜", "后排围观。\r", "看到那么多事儿逼也是醉了，都是被洗脑了还是屁股问题啊。\r", "问了公司的两个法务，楼主根本一点问题都没有。强行起诉都难，不知道为什么那么多争议，服。", "建议 lz 慎重点 如果对方是事业单位或者强力国企 你这做法扣个恶意传播和破坏计算机系统的帽子就得进去了 不过连这点软件开发能力都没有的企业 估计也就是屁大点的已经市场化的国企了 应该没啥权力", "为楼主点赞！\r", "希望楼主能持续更新本帖，想知道后续能否顺利收到款", "长见识了...用盗版软件这都能洗..", "厉害了 楼主", " 你的前半句话是对的，后半句话可不对，这个例子举的不合适。至于原因嘛\r", "怎么现在都用 golang ， golang 做 web 很厉害吗？", "虽然不敢苟同楼主的这种做法，但是还是觉得楼主处理问题的方式很值得学习", " 不知道你回复的是几楼。但我说的就是性质问题，有恶意和无恶意。或者说专业点，有主观故意和无意，这也是我举例的本意：对于普通人来说，买菜刀可以削水果、可以切菜，当然也能杀人。但是另一个就只能是后一种目的了，所以我国法律并不禁止买卖菜刀，但是一定是禁止枪械的。当然就算是菜刀最后的结果就要看你有没有恶意了。楼主的反盗版措施明显是为了反盗版而不是故意损害别人的系统。另外你举例子的私设电网本身就是违法行为，这种事情本身就可以预知到会导致他人的严重受伤甚至死亡。和本案例性质不同。", " \r", "\r", "当时开发时候正是 golang 的火热期，刚精通没多久，用 golang 写了不少运维工具\r", "\r", "反正也没语言要求就用这个搞了搞 web 而已", "  就好像用盗版 EXCEL 算错帐。 你能去告微软说为啥你的 EXCEL 让我算错帐么？ 除非跨省到这个自来水当地的公司。 否则哪里有那么容易玩手段的。 而习大大上台以后 敢跨省的地方 还有多少？", "经验 get: 学 go 能赚钱", " 你知道什么叫主观故意吗， bug 是主观故意的？", "长见识了"]},
{"content": ["<div class=\"topic_content\">有没有微信的同学出来确认一下啊</div>"], "reply": "目前尚无回", "tittle": "微信支付分了 1 亿的额外年终奖，是真的么？", "comment": []},
{"content": ["<div class=\"topic_content\">比如一些抓不到 log 的崩溃问题。和其他第三方 sdk 兼容的问题等等。\r<br>此时公司的项目如果到了 deadline 。比较急的话。一般是怎么处理的？</div>"], "reply": "2", "tittle": "大家对使用三方 sdk 中出现的问题是怎么协调的？", "comment": ["提 issue+发邮件+打电话+。。。", " :D 还可以 QQ 。。。"]},
{"content": ["<div class=\"topic_content\">老罗在上次演讲中，演示了科大讯飞的语音助手，很神奇，现在自己用了一下，感觉还不错~\r<br>\r<br>突然想到我的另外一个需求\r<br>\r<br>youtube 上面很多 python 的大会视频，不过都是英文的，自己英文水平很渣，勉强过了六级~\r<br>\r<br>理论上应该可以将视频下载下来，转换成语音，再将语音变成英文文本，如果能将英文文本翻译成中文文本就更好了，再进一步，顺便加上时间轴，有点像美剧翻译了~\r<br>\r<br>大家有用过这种服务或 api 吗？效果如何？</div>"], "reply": "8", "tittle": "关于英文视频教程的语音识别及翻译~", "comment": ["不用啊 \r", "YouTube 上就带这功能啊\r", "实时翻译啊，\r", "比如 TED 都可以", "youtube 视频如果口音重，或者有俏皮话、俚语就不知道翻译的什么鬼。", " 我有一些收费的英文视频教程，因为版权问题肯定不能上传到 youtube 上面哈~那怎么破？", "YouTube 自带语音识别。\r", "个人觉得很难有公司在这方面超过 Google 了，最起码论性价比的情况下。", "现在英语语音识别不是不靠谱， youtube 那个实时翻译误差就挺大的，连英语都不对，自动翻译出来的中文就更不靠谱了", "讯飞的语音识别不仅支持普通话，英语，还有好多种方言，还有随声译模式（中英，英中）", "youtube 自带, 不过我觉得直接开字幕就好了. 不理解可以慢慢研究. 带中文字幕比较试用于电视剧之类的娱乐", "其实能把语音抽出来,转成英语就差不多可以了.因为机翻的技术文档实在不堪入目..."]},
{"content": ["<div class=\"topic_content\">首先谢谢大家的回复！\r<br>看大家的推荐，真有种眼花缭乱的感觉。\r<br>如果只从 Framework 的 安全性&gt;性能&gt;代码可读性（结构）,等方面综合考虑，用简单一句话说一下，哪个比较好？</div>"], "reply": "71", "tittle": "Yii,Laravel,Thinkphp 这 3 个哪个好？", "comment": ["Laravel", "Flask", "Rails", "lara", "估计在这里你只会听到前两种\r", "\r", "但是我实在用不惯 Laravel", "koa2", "说 Flask 和 Rails 的是来砸 PHP 的场子的吗？", "Symfony>Laravel ， Laravel 用了一堆 Symfony 的轮子可见 Symfony 的代码质量有多好。", "spring", "一堆人答非所问，我推荐 Sinatra :-)", "SpringBoot", "哪个看的爽，就学哪个", "ruby  on rails", "楼主问的是 Yii,Laravel,Thinkphp 当中哪个好，回答别的的是在秀智商？？", " 肯定是 rails 好 laravel 抄的 rails 啊", "都用一遍，自己喜欢哪个用哪个", "Laravel", "设计结构  Laravel>yii>thinkphp\r", "应用普及   yii>thinkphp>laravel", "楼主有引战嫌疑", " \r", " \r", "没意识到他们避免了一场愚蠢的战争么？", "讲真，有功夫折腾 Laravel 不如早点转 Java 。", "都试一遍，哪个适合自己就用哪个", "什么前提都没有 问这种问题是意义不大 比如小项目根本没必要用框架 composer 安装必要组件直接用就够了 自己写有时候更快活\r", "\r", "如果比较闲不妨看着文档走一遍流程 demo 用谁最习惯就用谁", "我从 12 年开始就用这个头像了。", "用过 CI and Laravel 没有用过 TP", "安全性： ", "\r", "\r", "laravel 和 yii2 差别不大， tp 估计安全不太好\r", "\r", "\r", "性能：可以看出 laravel 性能很差\r", "\r", "代码可读性，这个就是上手难度的意思，我个人认为 tp 和 yii2 设计上差不多， laravel 概念多也更难。。。鸟哥 2 次吐槽 laravel 很难。。。\r", "\r", "最后社区，由于 laravel 很会忽悠社区很火，基本上很多轮子都能找到， yii2 社区也不错，我 yii2 阵营的。。。\r", "\r", "理念上我当然认同 yii2 了", "django", "居然没人喷 TP ，好意外，😂", "为何不考虑 CI ， github star 仅次于 laravel ，但学习曲线小太多，如果不是大型团队项目， CI 会是最佳选择", "个人开发 laravel ，商用项目开发 yii2 ，个人意见", "laravel 好是好，上手比较难，学习曲线陡，综合起来 yii2 比较合适，特别是可以快速生成后台 curd 功能", "ThinkPHP 从 5 开始也很安全了，只要保证数据库编码是 UTF8 ，然后所有外部参数都用 input 函数接收，理论上不会有什么安全问题。实在不放心装个安全狗或者 360 主机卫士，然后接入一个 cdn 。 ThinkPHP 上手肯定是最简单的，没有什么复杂的概念，各种类库 API 都很很有规律性，简单明了，学习曲线不大。招人也好招。\r", "\r", "YII 我学过一段时间，网上的中文教程太少了，就算是中文社区，到现在也没有一个能拿出手的完整的官方手册。更别说类库手册了。但是它的开发确实很快速而且安全。比如说他的 cookie 默认加密，然后前端视图层部分也封装了很多助手函数，只不过这些东西让编写模版的前端来看可能会有点难度。\r", "\r", "Laravel 目前社区还是非常活跃的，从文档来看我觉得他的文档要比 YII 易懂，结合国内很多视频教程，上手我觉得会很快的。安全性很高，比如说 cookie 加密， auth 门面等等。", "这是 XXX 在 V2EX 上被黑得最惨的一次，楼下继续", "如果只在这三个中选的话，推荐 laravel.\r", "\r", "如果选择范围放宽点的话，推荐 CI 。", " \r", "laravel 的文档： ", "\r", "\r", "yii2 的文档： ", "\r", "\r", "我当成看 laravel 文档学了 2 个星期没学会，我就 xdebug 单步调试想搞清楚框架原理（一般经验 php 框架我单步调试走一遍就懂了），但是 laravel 是唯一一个没法单步调试的 php 框架，因为封装太变态了，而且刷版本太厉害都出了 4 个版本了（ yaf/phalcon 这种扩展框架不算）。 yii2 看着看着就会了，文档我倒是觉得比 laravel 好。。。", "yii2 的文档： ", "laravel ", "怎么还有人推荐 CI ……", " CI 有什么问题？很简单的轻量级 web 用 CI 不行么？静听高论～", "yii 入门比较难，个人感觉", " 你来看看我们 Javaer 用的框架，运行时字节码修改，动态代理类，各种拦截注入，自定义 DSL 编译器，框架本身实现比任何 PHP 框架都复杂的多，但是使用却很容易。", " 微微脑容量小，太复杂的东西学不会， django 也说容易、 laravel 也说容易，但是微微就是学不会。学会了也没法定制一些功能", "同样单线程 为啥不用 node.js ？", " 很久以前， CI 是我的容忍极限了，但是自从转了 Java ，神码框架都不觉得复杂了，甚至开始嫌弃某些框架太过简陋和高耦合", "elixir plug", "yii2", " 其实还好，能自己成功安装上，跟着教程走一走，还是比较好入门的", "cowboy", "yii2", "Ci", "自己写着玩 我选 ci", "这两个里面 看项目数据处理情况，如果不提项目类型，首选 yii2 。 laravel 的 orm 对一些场景特别合适，对某些场景就一半了\r", "\r", "\r", "ThinkPHP.... 你 TM 是在逗我？", "Laravel 和 yii2 都很不错，所以我选择 Phalcon", "phaclon+1 ， phalcon 一出，谁与争锋", "楼主没说明场景。。。\r", "安全性要求高可选 YII2\r", "要想写得爽可以选 Laravel\r", "作死可以选 ThinkPHP 。。。", "springMVC", " 听过别人这么说,你觉得是为什么呢?", "Since 2009 无数大神开光 只要遵循开发规范 安全和性能没有任何问题，不少大公司内部都在用 yii ，甚至现在用 1.x 依然很安全， Yii 2.x 你值得拥有", " 我擦，怎么又是听别人说啊， CI 有啥大毛病啊，漏洞啥的么？真心想知道～～～", " 谦虚了，上次记得你自己搞出来个 PHP 8 来了的，绝壁不是脑容量小的那种类型。 ", " \r", "\r", "所以新手到底选哪个入手？", " 大神帮我看看 laravel5.3 的这个问题\r", "\r", "安全性，当然是 laravel ， SQL 注入一项，就够了", " 毕竟听别人说可以张口就来啊.\r", "\r", "Yii/Laravel 都可以,tp 适合在国内用", "这么告诉你，你要想简单快速开发应用 thinkphp 够了", "本来对 thinkphp 还有点好感，现在出了 thinkphp5 以后，对 thinkphp 好感全无。看一下 thinkphp5 的文档，单字母函数全部废弃，数据库层、验证、命令行等大量核心功能完全抄袭 laravel 。我就想说一句，如果你所有东西都跟 laravel 一样，我干嘛不直接用 laravel ？要你何用？", "phalcon !", " 我也不知道啊,我就想问问你为什么用 lavarel 不如用 java,在知乎也看过别人这么说,他说的是 laravel 像极了 java 的 spring 那一套", "有功夫用 thinkphp 还不如用 laravel", " 毕竟 java 轮子多，毕竟 java 好找工作，就这两点基本上可以秒杀了～ PHP 不就图个短平快么？", " 简单轻量的框架有很多选择，比如 Slim"]},
{"content": ["<div class=\"topic_content\">上个月升级 MacOS Sierra 之后, 原来用的 Karabiner 就不能用了, 给作者捐钱了然而还是没有做支持. 原来的键位映射都失效了, 就 Caps Lock 还能用是系统映射一下. 现在最难受的还是冒号的事情, 感觉写代码的速度都有点被拖慢了, 经常打错要反应过来. 求助求助, 有没有人想到办法可以直接映射啊?\r<br>\r<br>那个 Karabiner, 作者直接重写了, 结果到现在很多功能还没做支持, 好忧伤.\r<br><a target=\"_blank\" href=\"https://github.com/tekezo/Karabiner-Elements/commits/master\" rel=\"nofollow\">https://github.com/tekezo/Karabiner-Elements/commits/master</a></div>"], "reply": "9", "tittle": "macOS Sierra 怎么把分号冒号互换", "comment": ["我觉得用 hammerspoon 应该可以，思路是： hs.hotkey.bind 注册分号和冒号为热键，在接到按下分号或冒号时 :disable() 关闭热键，然后 hs.eventtap.keyStroke 发送冒号或分号，抬起按键后重新 :enable() 热键。", "好像.... 用 keyboard maestro 很简单的啊.....   输入:  输出;   输入; 输出: ....  \r", "\r", "![]( ", ")", "楼主能分享一下什么场景下分号冒号互换能提高编程效率吗？", " 大概是比如 Scala, golang 这些 statement 不需要分号，而显式类型声明(Scala)或赋值声明(Go)又要用到分号的", " 习惯吧, 我在 JavaScript, CoffeeScript, Clojure 当中都会用到大量的分好, 用了一年多已经形成肌肉记忆了. 也就 JavaScript 里分号贼多.", " \r", " 我试试, 还得确认一下 Sierra 的支持. 本来 Karabiner 也是蛮简单的, 不支持升级后的 OS.", " standard js 不写分号😂", "\r", "\r", "摘抄关键部分&修改:\r", "\r", "Create a file at ~/Library/KeyBindings/DefaultKeyBinding.dict, and put the following content.\r", "\r", "{\r", "\t\";\" = (\"insertText:\", \"\\U003A\");\r", "\t\":\" = (\"insertText:\", \"\\U003B\");\r", "}\r", "\r", "重新登录 / 重新打开程序。", " 真是无比简单粗暴的解决方案. 顺便问下为啥我配置 \"\\\\\" 的时候会出错了, 试了一会才搞定, 转义有点奇特.\r", "\r", "```\r", "=>> cat DefaultKeyBinding.dict\r", "{\r", "\";\" = (\"insertText:\", \"\\U003A\");\r", "\":\" = (\"insertText:\", \"\\U003B\");\r", "\"\\\\\\\\\" = (\"insertText:\", \"\\U007C\");\r", "\"|\" = (\"insertText:\", \"\\U005C\");\r", "}\r", "```"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近自己有个懒人需求，想在自己卧室某个固定的点上，放一些饮料，零食，然后让机器人帮我去拿，拿完放到床下的固定某个点（起点和终点都是固定的）。不考虑物品高度问题，就假设是在一个二维的面上移动，拿东西。什么碰撞的算法我也想自己捣鼓，可是我对硬件完全不懂。我只知道需要很多传感器，比如距离，扫码之类，定位，移动的车和 cpu ，这些要去哪搞，有现成的东西随便拼一拼就能用的吗？最终做成一个可编程的指令，比如\"拿可乐\"，自己能找到起点，扫码（物品摆放我会按照机器人方便的方式来摆）拿到可乐，然后跑到终点。这东西会不会很难完成。</p>\n</div></div>", "<div class=\"topic_content\">感觉现在的风气都怪怪的，可能是因为点赞式向导的平台太多了，很多回复都是为了引起其他人注意而非为主题关注的核心。。。然后这种单身梗在 v 站上太多了，可不可以走心点回复。。。</div>", "<div class=\"topic_content\">谢谢各位了，就我这需求估计得上几 k 买个可编程积木了。。。有看中一个，反正楼下有 v 友说自己搞费用也不低，直接买一个算了。</div>"], "reply": "28", "tittle": "想做个卧室懒人拾东西的小机器人需要做什么准备。", "comment": ["需要单片机 /arduino/arm/pi 作为控制单元\r", "需要一个包含履带或轮子、码盘等的可移动的平台\r", "需要可以拿取物件的机械臂\r", "\r", "硬件不懂的话，大概可以尝试从淘宝购入各种现成的履带底盘、步进电机实现的机械臂、各种传感器成品、一个树莓派之类的较强的控制单元，然后把所有组件连接到树莓派的 GPIO 上\r", "\r", "然后就没有然后了", "大学时候做过仿真版的，在中科大的仿真系统里边做这类事情，没做过硬件~~", "我觉得简单一点主体可以做一个自动循迹小车，再增加机械臂抓取机构。 Arduino + 树莓派", "铜球。 我以前想找个可编程的电源开关， 发现要么只能用自家 app ，要么集成度太低。\r", "不知道现在智能机器人是否有简单好用的开发平台。", "为了每次你机器人都要麻烦，仓库的货要摆得很好，对于懒人，这才是折磨吧。", "楼主还是放个自动售卖机那种吧，机器人并不是一定要是人样的。", "下床多走走\r", "或者你就把吃的堆床边", "你确定不是需要一个女朋友？", "楼上确定女朋友不会反过来把楼主当机器人用？", " 正好“做一个机器人”", "只知道树莓派可以做到你说的这一点。或 UNO R3 等。", "以前做过避障机器人 你需要的有 Arduino 或者树莓派 小车底盘 电机 电机驱动模块 机械臂 舵机 语音模块等 上述的都可以在淘宝上找到", "也想做一个，想做个可以聊天的，跟着满屋走的", "我觉得简单点，机器人就是一个篮子，下面带个轮子，你要就走过来，不要走回去就好了", "电路城 ", "\r", "这里有一些开源的设计你可以参考看看\r", "\r", "不过可能需要先学习一下硬件部分的知识", "最难的就是机器人“拿”东西这一步，在卧室里其他的寻路避障都是读 API 就能搞定的体力活。\r", "比较偷懒的办法是给饮料零食套个 wrapper （或者说放在 wrapper 里），这样就抽象成标准件了，然后机器人去拿标准件，再把 wrapper 放回去。", " 我觉得这样确实会简单很多，机器人带个可以伸缩的机械手臂，里面是个篮子放的各种东西，然后通过 app 召唤过来，比定点取东西人性化多了", "实际上我觉得这里玩电子的不多。。推荐你还是上阿莫电子论坛问吧。", "给你一个我大概想了一下需要的物料：\r", "1.主控：上 STM32 （需要学过电子才能自己组建主控）或者直接买个 Arudino ，或者树莓派这种现成主控方案，建议后者\r", "2.电源（有线？无线？自己确定）\r", "3.你说的你有固定路线，完全不懂电子的话，那么就可以搜索一下“寻迹小车”看下原理，很简单，就固定走一条路线，但鉴于你这种还需要来回走（可选择圆圈走一个圈，或者做成可前进后退的那种），所以可以在寻迹小车基础上通过软编优化下，基本原理不变；\r", "4.机械臂：机械臂的选择，臂力或者握力是需要多少，根据你要拾的东西去估算，另外机械臂的驱动，驱动芯片肯定要选择好；\r", "5.车体，这个也可以买现成的。\r", "------------------------------------------------------\r", "成本不低，而且可能你软件过关，也可能因为硬件没搭建好而完成不了，或者没你想象中那么带感。。", "可以看啦 shadowrobot", "Raspberry Pi", " 666666", "支持楼主动手。\r", "你最好用自己熟悉的工具和平台来做，要不然时间投入会远超出你的想象。\r", "没玩过单片机、嵌入式开发的话，我赌十块钱你三天内就抛弃这个想法了。\r", "\r", "另外，建议搜索下有没有开源的方案比较接近你需求的，在前辈的基础上做。\r", "机械部分的东西，有现成的就买现成的。\r", "\r", "祝你顺利，完成后发个贴，预祝 2018 年见。", "难点在机器人怎么拿东西，其它的都好办。", " 这货也太靠谱了。", "so cool", "硬件工程师，最大的难点是机械手。", "刚看到一个文章说,就算现在阿法狗能虐便人类围棋大师,但是还是对\"拾取地上的衣服\"无能为力, 对它们来讲太难了...."]},
{"content": ["<div class=\"topic_content\">原文：\r<br>Our hardware achieves the same effect as would a sequential execution of the assignments shown in the tables of Figures 4.18 through 4.21, even though all of the state updates actually occur simultaneously and only as the clock rises to start the next cycle.</div>"], "reply": "8", "tittle": "to achieve the same effect as would something, 这里的 would something 是什么语法？", "comment": ["倒装。= as sth would", "as 接倒装句", "\r", "有点类似虚拟语气的语法，但虚拟语气我理解一般用于条件或假设。\r", "此句中感觉没有假设的意思，所以不太确定是不是属于一种非常正式的虚拟语气用法。\r", "\r", "有没有比较权威的语法解释链接？我自己没有找到。", "谷歌：虚拟语气 倒装", "核心成分是\r", "Hardware achieves effect as if execution would.", "楼上都是对的。但建议如果不是要考试的话，就别研究什么语法了，越研究越晕。 这种句式多读 /用 /听 到几次就有感觉，下次自然就理解了。", "虚拟语气 + 倒装啊。说我们的硬件能达到和 sth 同样的效果，这里隐含了假设的意味：我们的硬件是这样，假如换作 sth ，效果也是一样的（但二者实质上并不一样）。后文 even though 解释了为什么只是效果一样而实质不同。", "要链接也真是。。。随便翻本合格的语法书都有"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>向大家请教一个问题，一个大文件分成多块上传，每个请求只带上其中一片数据，怎么算出整个文件的 md5 ？ btw 用的是 php</p>\n</div></div>"], "reply": "24", "tittle": "请教一个 md5 的问题", "comment": ["整个文件的 MD5 只能用整个文件的数据来算。。", "比较简单的做法是自己实现一个 md5 算法，然后每个 block update 之后把 context 存下来……", "你上传之前 拿全文件计算好 不就好了吗", "前端计算\r", "楼上已经说得很清楚了。\r", "我再补充一点， MD5 现在很容易被碰撞，如果条件允许的话建议上 SHA256", " context 貌似是不可序列化的，不好存..", " 所以说自己实现", "所以说还是 SHA3 好， 随便 update 。输出 HASH 长度也是随便定的，方便多了。", " MD5 很容易被碰撞？虽然的确有碰撞的，但说很容易，还是有点夸张吧。", " 不加盐的 MD5 确实很容易。\r", "而且好像在哪里看到个说法是普通 MD5 应被视为已被破解的加密方式了。。。", " md5 能碰撞但是要做出具备攻击能力的碰撞可是几乎不可能\r", "\r", "md5 可以流式输入，你必须建个队列，从第 0 块开始到一块就计算一块，如果到的顺序是 1-4-0-2-3 的话，你得等到 0 到了以后一起算 01 ，再等 2 到了把 2 给 update 上去， 3 到了再把 34 给 update 上去", "另外一个办法是，如果你的切块的算法是一致的话，每块单独算，再把所有块的 md5 合起来再做一次 md5 其实也是可以保证效果的", "LZ 只是用 MD5 验证文件完整性吧？不涉及密码或加密数据，你们谈碰撞、破解的有意义么？\r", "\r", "传输总有个拆分和合并的过程，做完了再验证不就好了？", " \r", " \r", " \r", "我只是指出一种更安全的方式的而已，毕竟能用 MD5 的地方一定能用 SHA-2 解决。\r", "如果只是考虑验证完整性，用 checksum 或者外加纠错码就足够了。", "“年份用两位数表示就足够了”\r", "“ IP 地址用 32 位整数就足够了”\r", "“ 16K 内存可以满足所有人的需求”\r", "“又不涉及金钱，干嘛要上 HTTPS ？”", " 如果 SHA1 的话碰撞难度和 MD5 差不多，如果是 SHA256 的话性能是 MD5 的 1/3 左右， SHA512 和 SHA256 性能相当，看需要取舍吧", "俩不同文件同 md5", "md5 彩虹表跑明文", "碰撞是第一个意思", " 其实就服务端来看， OpenSSL 在近些年的硬件上跑 sha1 和 sha256 的性能都差不多了，取决于实现，不过楼主如果用前端 js 实现估计就没办法了。", "php md5_file", "前端可以计算出整个文件的 md5 值，然后分片发送给后端，全部传完，后端按照既定的切割算法把文件合并了，然后 md5_file()，比对一下前端计算的值就可以了吧。\r", "btw 楼主分片上传有什么 demo 可以参考推荐吗", "  [不加盐的 MD5 确实很容易] ，这个和碰撞没有关系， MD5 碰撞是指两个不同的字符串或文件算出来的 MD5 相同。\r", "\r", "通过穷举或字典计算 MD5 值对比来获取原字符串，这个不是碰撞。", " 密码或字符串容易被碰撞，文件几乎不可能被碰撞", "MD5 会被碰撞是指 不同文件(数据) →相同 MD5\r", "目前还没有工具能够做到 不同文件(数据)→相同 MD5→指定功能和内容\r", "彩虹表跑 MD5 密码和碰撞没啥关系,这个是可逆性,并且 MD5 本身不可逆,依靠强大的彩虹表可以对比出原数据.\r", "离不能用的时候还远呢...... 足够了", " \r", " \r", "\r", "随手在网上搜了篇文章 ", "\r", "这个问题重点不在于安全，校验文件的方法有很多，我只是指出 MD5 并不安全。当然如果题主确定价值足够低没有被搞的意义的话用什么方法都行。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>支付宝新特性:你的朋友能帮你找回登录密码，然后各自免密支付，很赞的功能，赶紧去找朋友圈翻前两天晒支付宝的土豪</p>\n<p><a href=\"http://weibo.com/1704750133/Eq8QObGt7\" rel=\"nofollow\">http://weibo.com/1704750133/Eq8QObGt7</a></p>\n</div></div>"], "reply": "1", "tittle": "支付宝新 BUG", "comment": ["给你钱了么"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我走的时候还有 7 个人\n产品去了阿里\n测试去了腾讯\n老板去了百度\nHR 转战另一家创业公司\n另一个女产品回家生孩子去了\n而我走之前就走的技术总监去了美国\n运营总监出国度假</p>\n</div></div>"], "reply": "28", "tittle": "老东家创业公司散了, 前同事分别去了 BAT", "comment": ["拿好不谢", "那你发这贴主题是什么", "所以你们没成阿里巴巴    成了打工的", "告诉大家别创业了？", "还剩下的两个呢?", "创业公司  总的还是失败的多的  很正常", "创业失败了，都还是有归宿的，大家上。", "都散了，就说一下做什么产品的，有什么经验教训么", "赶紧创业吧，成了吞并 ATB ，败了也有 ATB 接盘", "不论成功与失败，都是一段宝贵的经历", "你去哪了", "lz 只是在陈述一件事，不过，然后呢？", "楼主在憋大招？", "下面。。。没了。。。", "然后呢，说说做什么的吧", "然而楼主没去 bat", "然后呢", " .就年底没事干, 上班就逛逛 v2,知乎,gayhub 啥的...我看 v2 很多人也这么发帖的啊.", " 产品形态类似知乎, 但是定位又不像知乎, 因为没有知乎前期李开复这样人物的资源, 本质上是个社交产品.", " 剩下两个我就不知道了.", " 没啥然后 ╮(╯_╰)╭", " 我去薯片了", " 谢谢, 确实收获真挺大的. 比起在大公司, 在创业公司中, 事无巨细都是自己去摸索着搞的, 很多东西都是自己定, 所以确实是宝贵的经历.", " 其实那已经是去年初的事了, 前两天突然有个前同事跟我聊天才跟我说的以前老同事的去向. 前年中旬的时候处于公司的得意期, 大环境也还没完全进入资本寒冬. 就感觉那时候人们虽然也知道创业是 100 家里面成功那么两三家, 然而依然相信自己就是那两三个幸运儿.", "是公司成就了你们啊  哈哈哈", " \r", "我想应该是：\r", "\r", "“我们都有光明的前途”", " \r", "所以 lz 和后面七位都是“让领导先走”？"]},
{"content": ["<div class=\"topic_content\">朋友的网站是用 asp 做的 让我帮忙改下 \r<br>\r<br>大概就两处：\r<br>\r<br>一个是后台展示数据的页面，可以在页面上修改 \r<br>\r<br>还有个就是在前台数据展示的页面做一点修改 \r<br>\r<br>哪位有时间帮忙弄下啊 具体需要详谈  我微信 13163263783</div>"], "reply": "37", "tittle": "寻求懂 asp 的朋友解决一下小问题 相应报酬", "comment": ["asp 。。。。，.net 的话还行", "我以前学 VB ，然后微软说放弃 VB 了，我又学 ASP ，微软又说放弃 ASP 了，我又学 windows mobile ，微软又说放弃 windows mobile 了。\r", "以上不是笑话。", "zblog asp 用户+应用开发者飘过。。", "我会，但是 10k 以下的活不准备接", " 微软没放弃 VB 吧，至少 ", " 支持到现在", " +1s\r", "我会，低于 5 小时工作每小时报价 2K5 ，高于 5 小时工作每天报价 10K\r", "\r", " \r", " 和传统 VB 基本是两码事了", " 目前国内 IT 企业还有用 ", " 的吗？", " \r", "IT 企业没见过\r", "\r", "不过在企业里的某些 IT 倒是会用 ", " 写程序\r", "我在铁路就见过一些技术自己用 ", " 写工作用的独立功能小程序", " 节哀～\r", "\r", "不过微软的产品使用周期还是挺长的，即便是被官方抛弃的产品。\r", "现在都有人在用 VB6 写东西呢", " 楼主留个邮箱吧，我有空时联系你。", "“朋友的网站是用 asp 做的 让我帮忙改下 ”\r", "\r", "那你改呗。", " 技术都是有进步的好吧，你说前端那么多年放弃了多少东西了，难道改个名字就不是原来的味道了？", " 现在你在做什么..", "大家尽管大胆开价，然后让楼主给朋友看这个帖子。", "唉。。。这两天才给一个朋友的朋友做了个货品管理、下单、订单和评论的项目，才收 2000 软妹币。。。现在都能开这么高的价格了么。。", " 不过用轮子写 简直就是抢钱 平时一定要多造好轮子(逃", " 我要是会 asp 就不来求教了。。", " 太贵了 请不起。。。", " 给朋友做的嘛 就当友情价了 不算亏", " 我今天有点儿空，如果简单的话我可以做了，留个邮箱吧。", " asp 程序员不太好找。而且考虑到以前的 asp 写的那叫一个乱，读代码都能读死你。", "asp 这样的每个小时需要加 1k 的精神损失费", "asp  一个小时就能入门。", "楼主大概是想花个几百了事。 不过这不太可能。", "改一行 100~论行收费", " \r", "VB6 是好东西\r", "最重要的是他是最后一个能鼠标随便点点就做出来程序而且不会被反编译的语言", " 刚开始我也是这么想的 但是看了之前的代码就放弃了。。", " 深有同感。。", " 额 确实是这么想的。。我以为懂 asp 的话蛮简单的吧。。", " 早知道 asp 这么好挣钱 我就转行了。。", "  多谢了，修改的页面已经找人做了，新做的页面好像成本挺高的样子，我朋友估计嫌，这个不着急了我就自己琢磨琢磨吧。。。", "我会啊，要帮忙吗？", " 相比 VB ， Delphi 才是好东西\r", "Lazarus 能鼠标随便点点就做出来程序而且编译器 IDE GUI 库都开源", " \r", "Delphi 跟 VB6 的易用性差距巨大\r", "我就靠着小学时候的 qbasic 底子完全 0 基础自己琢磨加百度就能用 VB6 写出成熟的卖了好几千块钱的程序……", "楼主那个代码看得头大，花了 2 个小时下了一堆断点才追到问题。\r", "\r", "asp 、 ruby 、 node 接单，摊手", " 幸苦了。。", " 我看过那个代码，很麻烦。懂 asp 还不够，得懂编程。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>别的应用如 chrome/safari/iQiqi/网易云音乐 等都是可以正常抓包，\n为什么 command-line client 上使用 curl 就非得加上呢？</p>\n<p>猜测其他应用默认上 charlse 的代理，疑惑的是因为什么让 curl 如此不同？</p>\n</div></div>"], "reply": "6", "tittle": "charles 抓包，为什么使用 cURL 要加上 --proxy 8888", "comment": ["Bash 不走代理", "默认端口 1080", "有些程序实现会隐式地自动去找系统设定的代理，有些则需要显式地手动指定，有些干脆没有接口。", "curl 默认不会去走代理.", "因为 Chrome 用了系统代理配置，一样走了 Charles 代理", "这个问题的答案是： Charles 并不抓包"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>看到 jetBrain 最新的测试版支持了 0 延迟输入（ zero-latency typing ），就随便翻了翻 google ，发现老外对这个还有专门的研究，据说是手感更棒，对人体神经反馈更快，所以人输入文字会更舒适，更符合人体工程学云云帕拉帕拉帕拉帕拉……</p>\n</div></div>"], "reply": "43", "tittle": "别老想着买啥机械键盘了，都来关注一下键客界的 G-SYNC： 0 延迟输入", "comment": ["搜出了一堆显示器？", "从不看参数，更相信自己的双手", " 楼主说的 xx 界的 xx 是类比……\r", "\r", "不过这个类比不对吧， gsync 又不是强调延时低，而是画面没有撕裂…相反 gsync 延时其实是高的…", "G-SYNC 这个只支持 windows 吧。\r", "\r", "v2ex 的人都是吃 apple 大的。\r", "\r", "怎么会去用 win 呢。\r", "\r", "他们的 macbook pro 键盘屏幕宇宙最强。", "个人认为这技术用在游戏里比较容易感知到差异。平时写东西，即使有个几十 ms （假设值）延迟也不太影响。当然没有肯定更好咯。", " 楼主说的不是 G-Sync ，只是做了个类比。跟 Mac VS Win 也什么没关系。", " 有影响。你用惯了好东西再用垃圾才会有感觉。", " 的确是，用了多年 mac 不想用 win,\r", "\r", "就像耳机一样，以前以为几十块的也很好啊，但现在买了上千的，听惯了，就知道什么是好什么是不好", "其实时间并不卡在触发, 而是卡在 键程上面. 我感觉延迟时间都是在 从敲击开始 一直到达触发点之前的那段位移上.", "现有的机械键盘已经做到 8ms 反应，再压缩难度挺大成本挺高收益不大…", " 嗯...键程和手感关系又很大，电容屏倒是 0 键程_(:з」∠)_", " \r", "延迟和特定的应用有关系\r", "\r", "竞技型的 FPS(1)游戏时：\r", "120/144 FPS(2)且低延迟的显示器就是比普通的 60 FPS(2)显示器好\r", "关闭 VSYNC/三重缓冲就是比开启它们好\r", "\r", "职业选手能更仔细地感受到它们的区别。", "一大堆人在说 gsync ，笑死我鸟", " +1  看来 v 友们的语文还要再学习一个啊。。。", "人体工学有用，但 0 延迟几乎没用，现在好点的机械键盘都是 1000hz(1ms)的。\r", "然而，就算是 8ms 的延迟的机械键盘打音乐游戏也打得足够准确了。", " 当然，打格斗游戏这类拼反应速度的或许有点用，但人类的反应速度基本都是上百毫秒的延迟...", "有意义吗？\r", "除非直接接脑袋输入，要不要光手指的延迟都比键盘高。", "写代码的瓶颈完全不在这点延迟上..", "我还真以为是脑电波输入呢， 0 延迟，呵呵", " \r", " 可惜是黑苹果吧。苹果官方已经停掉 mac desktop 产品线了。只留下 macbook 了。\r", "\r", "官方机器哪有 N 卡。", " 雷电外接嘛", "G SYNC 和延时啥关系", "垃圾玄学，有种过双盲", " 目前还没有看过这种评测，网上说的可以接入雷蛇 core 的都是理论，苹果就是故意不兼容你还能咋滴。\r", "\r", "苹果必须自己出一个自己的才完美兼容。", "这和键盘没关系， jetbrains 的延迟是针对自己 IDE 说的，\r", "\r", "因为 jetbrains 会索引很多信息，以前的 IDE 反应有点慢影响体验。 Jetbrain 加入这技术，输入体验就和普通的编辑器差不多了（和 vs code ， vim ， emacs 这类比）。\r", "\r", "这个帖子的标题思路极其混乱，讨论的东西和机械键盘， G-SYNC 都没关系，估计楼主两样都没仔细用过。", " 说到脑电波我就想起 UMind 的耳机。", " 可怜我正版 idea 和 gsync 都有。。。。", " 画面不撕裂下保证低延迟哦，低延迟，这不关系就来了？", " 就怕认真这两个字，很多技术不是拿来就能用的，更不能望文生义。\r", "\r", "买了 jetbrains 的全套产品，不代表你理解 ide 的功能。\r", "买了 g-sync 的显卡和显示器，也不代表你所有的游戏环境更好（ g-sync 有其应用范围）。\r", "\r", "楼主是买了这两样产生错觉，一本正经的胡说八道。当然我能理解这点，买完东西总是有个兴奋期的。", "后台索引工作应该限制 cpu 使用量，更不应该影响到与用户的交互。\r", "本就应该做好的事情，居然还起了个名字。\r", "对他们公司的产品没多少好感，都是 java 界的烂 IDE 衬托而已。", " IDEA 用了 5 年了， G-SYNC 用了 1 年了吧\r", "\r", "应该不是兴奋，我觉得广大关注打字舒适的用户可以把目光从硬件转移到软件上，当然给你造成是兴奋的感觉，也许是我用词不当？不过你这个推论我也觉得蛮厉害的，哈哈，有趣，虽然不对", " 老外有个 Blog 对比了各种 IDE 下输入延迟的对比表格，从 VIM 、 Emacs 到各种 IDE ，结果看来是大家似乎都不太关注这一点。希望这个烂 IDE 公司这次做法，能让其它 IDE/Editor 厂商看到，大家一起在这方面努力。\r", "\r", "想想，其实程序猿工具发展余地还挺大的嘛", " 你用过机械键盘， jetbrains ide ，还有 g-sync 的显示器，你追求高品质的用户体验，这我理解。我用的也是同样的配置。\r", "\r", "但我一直要说的是：你的帖子的题目和内容，和你想要表达的东西完全不是一回事！你想说的只是 jetbrains ide 推出一个新特性，这特性能加速该 ide 的输入速度（以前有明显延迟，影响体验）。你按这个话题说就好了。\r", "\r", "可能我最近有点强迫症，看见文不对题（这篇太显眼了）的帖子就多说两句。", "不可能做到 0 延时，按键必须要一个几 ms 的消抖。", " 你就当我理科生文科不及格好了", "所以这个是软件能实现的功能？不用特定键盘支持？\r", "只给了一个 Gsync 名字，难怪楼上都在讨论显示器……", " JetBrains 的最新 IDE 都支持", "哈哈，我来引战。就结果而言 GVim 完爆 Emacs 。参考 ", " 还真被你翻到了，我就是看了这篇里面开头就提到了 G-SYNC 。\r", "\r", "结果这帖子一大半变成显示器技术研究，另一小半变成讨伐这技术和 G-SYNC 扯不上关系，完全没人关注啊。\r", "\r", "本以为这种大家天天靠着吃饭的东西，使用率实在是高的不得了，怎么就没人关心呢？", " 我第一个回帖首先肯定的就是低延迟（输入）在电竞 /游戏中应用的合理性。随后的补充提到的该技术应用在“输入文字”这个情境下，影响不大。另外从头到尾我都在讨论主楼的“ 0 延迟输入（ zero-latency typing ）”， 跟 G-sync 这个显示技术没关系。你的回复是否会错意？", " 抱歉，没用过垃圾。还真没发现哪款 IDE/TextEditor 的文字输入延迟大到人体可以感知的程度。\r", "\r", "麻烦你下回先把主帖的内容读一遍再回复，谢谢。", " \r", "\r", "你说的有道理"]},
{"content": ["<div class=\"topic_content\">女票手机昨儿被偷了，气愤中。。。今天骗子给我发诈骗账号密码的短信，里面有个伪装 icloud 页面的的链接\r<br><a target=\"_blank\" href=\"http://www.apple-icloudc.cn/I_APPID2/?YVJXKGNJUCKFRWSQRLITRTJIYIMDKOGPFYHTIKHJ\" rel=\"nofollow\">http://www.apple-icloudc.cn/I_APPID2/?YVJXKGNJUCKFRWSQRLITRTJIYIMDKOGPFYHTIKHJ</a>  \r<br>看了他的源码，如果真有人输入帐号密码了，会把信息 post 到 ../IPASS.asp ， 无奈，后面就不知道怎么搞了，希望大家都来瞅瞅，有空的一起搞搞啊。。</div>"], "reply": "81", "tittle": "搞搞这帮小贼。。。", "comment": ["这些网站不需要备案的吗", "   不知道啊，不过刚才查了下，没有备案信息。。。。。。", "如果你不知道怎么搞，就试着写个脚本提几十万垃圾数据到他们数据库", " 大陆地区才有备案一说。。。", " 关键是这个是 CN 域名啊。。。", "昨天在新网注册的域名，服务器在香港，没有备案信息， QQ 应该是小号。\r", "\r", "```\r", "所有者\t蒋立平\r", "Registrant Name\t\r", " \r", "所有者联系邮箱\t", "\r", "Registrant E-mail\t\r", " \r", "注册商\t北京新网数码信息技术有限公司\r", "Sponsoring Registrar\t\r", " \r", "注册日期\t2017 年 01 月 07 日\r", "Registration Date(UTC+08:00)\t\r", " \r", "到期日期\t2018 年 01 月 07 日\r", "Expiration Date(UTC+08:00)\t\r", " \t\r", "· 此域名到期日仅供参考。实际到期日期请咨询其注册商。\r", "· 如未在实际到期日期前续费，将导致域名使用异常，如网站无法访问等。\r", " \r", "域名状态\r", "Domain Status\t正常状态（ ok ）  \r", " \r", "DNS 服务器\r", "Name Server\tDNS1 ： ", "\r", "DNS2 ： ", "\r", "\r", "118.184.45.161\r", "香港 安畅网络(亚太)有限公司沙田数据中心(沙田火炭黃竹洋街 8 号新鴻基物流中心 3 楼)\r", "```", " cncn 域名也可以不备案解析的。", "这种网站可以去举报。", "cn 域名是要实名注册的 不过这资料应该拿不到的...", "瓜子汽水鸡块辣条\r", "小板凳", "cn 要备案，所以就弃了", "关了。 DNS 解析去掉了", "…@feather12315\r", "我的错，没关", "整个上千万的数据，撑死他的服务器", "看看这个 url  ", "\r", "\r", "结果是 403 啊，说明目录存在，很有搞头，谁去用工具爆破一下这个目录。。。\r", "\r", "而且是用 《逆风工作室 Netbox v3.0 201005 》 做的。。看看有没有什么漏洞", "欢迎去阿里 110 举报，避免他人财产损失", " cn 域名不用国内的主机不需要备案", "记得有个帖子说也是遇到这种，然后他就写了个脚本 post 一堆垃圾数据，还扫描到了 100 多个同类型的网站，之后就忘了\r", "我也遇到类似的盗号的，我的做法是往那个页面发十万还是一百万（ 0 没得数 XD ）条垃圾信息，结果第二天就关站了", "后台 ", "\r", "\r", "然后搜了一下所谓紫缘管理系统，应该是专门做钓鱼网站的", "去举报一下这个网站吧 \r", " 备案是接入环节的事情，域名本身无备案的说法。虽然确实叫域名备案，实际审核的是接入服务提供商", "# language: python\r", "\r", "\r", "    def post():\r", "        url = '", "'\r", "        data = dict(sjname=123,\r", "                    sjpass=123,\r", "                    submit='登录')\r", "        headers = {'Cookie': 'PWSBMJSDSUIPPUOMDATL=OXVIFWPVJALCSXQNBGYOKCMAUQLNROTEDYSJIMEY',\r", "                   'Origin': '", "',\r", "                   'Referer':'http://www.apple-icloudc.cn/I_APPID2/?YVJXKGNJUCKFRWSQRLITRTJIYIMDKOGPFYHTIKHJ',\r", "        }\r", "        req = urllib.request.Request(url, data=urllib.parse.urlencode(data).encode(), headers=headers)\r", "        page = urllib.request.urlopen(req).read().decode('gbk')\r", "        print(page)", "def post():\r", "    url = '", "'\r", "    headers = {'Cookie': 'PWSBMJSDSUIPPUOMDATL=OXVIFWPVJALCSXQNBGYOKCMAUQLNROTEDYSJIMEY',\r", "               'Origin': '", "',\r", "               'Referer':'http://www.apple-icloudc.cn/I_APPID2/?YVJXKGNJUCKFRWSQRLITRTJIYIMDKOGPFYHTIKHJ',\r", "    }\r", "    i = 0\r", "    while 1:\r", "        i += 1\r", "        data = dict(sjname=i,\r", "                    sjpass=i,\r", "                    submit='登录')\r", "        req = urllib.request.Request(url, data=urllib.parse.urlencode(data).encode(), headers=headers)\r", "        page = urllib.request.urlopen(req).read().decode('gbk')\r", "        print(page)\r", "\r", "if __name__ == '__main__':\r", "    post()", "怎么就被搞挂了....", "这个网站现在已经没法访问了。", "哈哈，程序员不好惹", "好像，那个网站有 cdn ， 跑死了就没戏了，慢慢跑，跑流量 1T 300 元，可以跑到小贼破产啊  ～～～～\r", "\r", "import urllib\r", "import urllib2\r", "import threading\r", "import time\r", "\r", "print 'ctrl and z stop the program'\r", "thr=input(\"how many thread do you need : (the thread should be lower then 10 , otherwise gg)\")\r", "cycle=input (\"how many cycle do you need : \")\r", "address= raw_input(\"plaese input the address\")\r", "start = time.clock()\r", "\r", "def printf(i):\r", "    for x in xrange(cycle):\r", "       down(x)\r", "       end = time.clock()\r", "       print '  '  +  'T' + i + \"    \" +\"using: %f s\" % (end - start)\r", "\r", "\r", "def down(x):\r", "    url = (address)\r", "    d=urllib2.urlopen(url)\r", "    data = d.read()\r", "    print x,\r", "\r", "def test():\r", "    thread_list = []\r", "    for i in xrange(thr):\r", "        sthread = threading.Thread(target = printf, args = str(i))\r", "        sthread.start()\r", "        thread_list.append(sthread)\r", "\r", "if __name__ == '__main__':\r", "  test()", " 紫缘是专门做钓鱼网站卖给别人的，几年前的 qq 钓鱼网站也是他们的杰作", " \r", " \r", "停止解析了，不过还可以通过原 IP 118.184.45.161 继续 POST", "据相关报道称，这个紫缘的作者早被抓了？", "取消解析了而已，源站 ip 118.184.45.161 ，后台管理 ", " 你真快\r", "admin\r", "admin\r", "admin", " \r", "这个早就被人搞过了，某乎上相关文章", "IP 是 51idc 的，去举报呗", "为什么我手机端的 V2EX 不能发表主题", "这应该是一条黑色产业链\r", "有人专门偷手机有人专门钓鱼\r", "这种钓鱼网站在手机浏览器比如 safari 是不会提示的，在 pc 上 360 会提示（之前上过当，输过密码，然后几个苹果设备的数据都被抹了。。", "厉害了，表哥们", "苹果手机都是这一套产业链。偶尔还会以假的苹果客服给你打电话。前面没有上海的区号。不行就发钓鱼信息，钓鱼邮件来骗取 appleid", " 点击一次登陆  然后 重新访问这个地址就能进后台  是漏洞？", "喂，已经被玩坏了！", "沙田  上次有个骗子给我发短信，网站就是放沙田的，二话不说打了他 3 天，然后删站", "完全挂掉了~", "强  完全挂掉了", "已经被玩儿坏", "我错过了各位大佬的好戏", " 死掉了。。 ", " ", "长时间不上当骗子会冒充客服打电话，如果是 qq 邮箱的话会加你的 qq", "可啪", "效率好快啊。。", "点个赞", " 厉害了，哥", "好不容易找到个可以玩的 这么快就被玩坏了 你们不能温柔点么。。", "来晚了 没得玩了", "没得玩了", " 以后对这类好玩的东西，期待能搞个订阅＋邮件提醒功能。哈哈", "我也想玩玩的。没想到已经被你们玩坏了。", "并没有来晚，只是任务升级了\r", "\r", "服务器还活着，骗子应该是换了个域名绑定上接着骗其他人去了。\r", "$ curl -I 118.184.45.161\r", "  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r", "                                 Dload  Upload   Total   Spent    Left  Speed\r", "  0  1193    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0HTTP/1.1 200 OK\r", "Content-Length: 1193\r", "Content-Type: text/html\r", "Content-Location: ", "\r", "Last-Modified: Fri, 21 Feb 2003 12:15:52 GMT\r", "Accept-Ranges: bytes\r", "ETag: \"0ce1f9a2d9c21:c4e\"\r", "Server: Microsoft-IIS/6.0\r", "X-Powered-By: ", "\r", "Date: Mon, 09 Jan 2017 00:08:19 GMT\r", "\r", "不是做安全的并不清楚除了 dos/ddos 还能做啥，该怎么折腾楼下继续", "你们玩儿得太快了吧。。。", "干得漂亮！！！", "118.184.45.161 ， ping 了一下，速度还挺快。端口扫描，开放了 80 、 3389 端口。既然开放了 3389 远程桌面端口，远程上去先看一下，服务器是 Win server 2003 ，相信各种漏洞补丁打的可能性不高，那接下来就去网上找 3389 入侵案例咯。我相信他的用户名是 administrator 。接下里看楼主的了。", "会不会连 IP 都更换了？", "哈哈哈， 666666.\r", "惹怒了一群程序员..笑死我了", "你们，哈哈哈～这种就应该狠狠的玩！", "其实程序员才是真·黑客", "应该 118.184.45.161  118.184.45.162 这两台都是属于这个骗子的，安装的操作系统都是一样的。", "  多谢多谢。。\r", "   多谢多谢。。   这就去看案例……\r", "  多谢各位了， 这肯定是一个黑色产业链，手机丢失后不到一天就进入诈骗环节，那说明小贼已经销赃完，说不准都往下走了几个环节了，说明这个流程很成熟，只是有些人不管罢了。。。   那。。。。 只能自食其力喽。。。", " cn 域名不一定要备案，但买到后会有个实名审核的过程，反正我的全没备案，就只作了实名。", "  已经按照你的信息  报沈阳市刑警指挥中心备案   多谢！", " 阿里云 cn 域名好像不需要备案也", "楼上的禽兽  这么快就给玩完了", " 不管哪里注册的 cn 域名都需要上传实名信（身份证照片等）息审核后才能解析", "已经玩坏了啊。。", " 最可怕的是某些人也参与了。。。", "可怕-- ！！！！！", "登录不了。。谁知道服务器密码的？远程连接桌面，不知道密码。", "你们太强了", "早知道 V2EX 上大家这么厉害 去年丢手机时候也发上来让大家玩玩好了", "iis6 各位可以试试看玩玩", "看着大家玩的这么开心,我说一句吧.\r", "其实你们这样搞钓鱼网站,对他们没什么大影响,post 垃圾数据更是一点用都没有,我找到几个大量 post 的 ip,直接一个 sql 命令就删了,顺便把你 ip 封了.\r", "\r", "域名不值钱,一天换 10 个域名都挠痒痒\r", "至于 DDos,叫机房换个 ip 就行了,一天 500 块钱的成本对于钓鱼者来说,都是预算内.\r", "\r", "技术角度是打不倒钓鱼的,除非是根源切除整个产业链.", " 162 这个居然还在开机， mstsc 都还能连得上。只可惜不知道密码啊"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h3><strong>开发工具丰富扩展</strong></h3>\n<p><strong>APICloud Studio 、 Sublime Text 、 Webstorm 支持 WiFi 真机同步</strong></p>\n<p>WiFi 真机同步：可以通过 HTTP 方式，同步工具插件中的 APP 代码文件到真机上，由于当设备和工具插件在同一个 WiFi 环境下时，文件传输速度非常快，所以 WiFi 真机同步操作相比 USB 方式速度要快很多，并且工具插件中会进行智能处理，每次只同步只会更新有修改的文件。</p>\n<p><strong>APICloud Studio 、 Sublime Text 、 Webstorm 支持实时预览功能</strong></p>\n<p>WiFi 真机实时预览：可以实时在真机上加载并预览指定页面的运行效果，方便开发者在真机上实时调试页面布局和 JS 代码执行（包括 APICloud 扩展 API 调用）。</p>\n<p>与在 PC 浏览器和其他模拟浏览器上预览方式不同，在真机上进行页面的实时预览，可以确保调试预览的效果与 APP 在手机上真实运行的效果一致，从而最终提升 APP 整体开发效率。</p>\n<p><strong>APICloud 新增 Atom 开发工具</strong></p>\n<p>APICloud 为 Atom 编辑器全新推出了开发工具包。其中包含新建应用模板,页面模板,WiFi 真机同步,流式日志输出等核心功能.。在 Atom 编辑器中的 Package 找到 apicloud 插件即可使用，便捷高效。其最大优势在于插件工具完全开源，开发者可自定义设置和使用。 Atom 编辑器插件上线，为喜欢 Linux 系统、偏爱 Atom 编辑器的开发者又多了一重选择。</p>\n<p><strong>APICloud 增加 CLI 开发工具，适用于所有开发者</strong></p>\n<p>这是一款适用于终端 /命令行的开发工具，它基于 APICloud 核心开发库开发，包含新建页面模板、新建应用模板、 WiFi 同步等核心功能等核心库已有功能。</p>\n<p>CLI 工具最大意义在于，无需下载任何软件，直接利用电脑中的终端或命令行程序即可使用 CLI 工具，以此来开发 APICloud 移动应用。这款 CLI 工具将覆盖至几乎所有的开发者。对于开发者来说，现在可以在任意喜欢的文本编辑器中进行 APP 开发。</p>\n<p><strong>APICloud 重磅推出适用于任何开发环境的开发工具核心库</strong></p>\n<p>APICloud 开发工具核心库可支持新建页面模板，新建应用模板， WiFi 同步等核心功能。开发者可基于此核心库，定制各种编辑器插件或者将 APICloud 的开发调试功能与已有的自动化业务流程结合，提升开发效率。</p>\n<p>建立开发工具核心库的最大意义在于，以往 APICloud 提供的是一个个独立的插件，而现在将直接把底层的各种能力开放给开发者，开发者可以基于 Node.JS 语言下开发的插件，开发者可以自由定制各项功能。开发工具核心库缩减了开发工具的体积，更加方便和实用。</p>\n<p><strong>新加 es6 脚手架，高效优雅开发 APICloud 应用</strong></p>\n<p>使用最新的 es6 、 es7 语法，在 JS 层以模块化的方式，打破前端开发与原生开发次元壁，采取模块式前端开发，拥有更友好的混合开发体验。自有安装 npmjs 上各类标准模块，海量功能呼之即来。开放的 webpack 、 bable 配置，自由定制与集成其他业务工作流，与 APICloud CLI 命令行工具无缝融合，使混合式开发更加智能、高效。</p>\n<p><strong>APICloud Studio 中支持可视化 AUI 控件插入</strong></p>\n<p>开发者选择 UI 模板后，一键插入正在编辑的代码中， APICloud Studio 为你立即自动生成 HTML 、 CSS 、 JS 代码（操作：在 html 页面中单机右键，在列表中选择插入 AUI 控件）。</p>\n<p><strong>APICloud Studio 集成 emmet 快速代码输入</strong></p>\n<p>支持仿 CSS 选择器的语法进行代码自动生成，极大提高 HTML/CSS 代码的编写速度，最快输入 2 个字母即可完成一行代码的编写</p>\n<p><strong>APICloud Studio 支持在本地生成应用正式安装包</strong></p>\n<p>无需将代码提交到 APICloud SVN 服务器，即可在工具中编译正式包</p>\n<p><strong>APICloud Studio 支持使用代理网络</strong></p>\n<p>方便开发者在受限制的网络中通过代理网络使用 APICloud Studio</p>\n<h3><strong>开发者服务更新</strong></h3>\n<p><strong>新增开发者视频教程</strong></p>\n<p>1)入门基础：</p>\n<p>入门概念篇：新手入门必看视频，手把手教你如何创建第一个 APICloud 应用，初步了解 APICloud 开发。</p>\n<p>初级代码篇：初级 APICloud 开发必看视频， APICloud CTO 带你走进 APICloud 开发，让你短时间内玩转 APICloud</p>\n<p>2)开发工具：</p>\n<p>Sublime 使用教程-----windows 版本</p>\n<p>Sublime 使用教程-----mac 版本</p>\n<p>Sublime 开发工具 windows 版 /mac 版本必备视频，从安装到开发环环相扣层层嵌套，让你快速掌握</p>\n<p>3)模块开发：</p>\n<p>模块开发篇 iOS</p>\n<p>模块开发篇 Android</p>\n<p>iOS 原生模块开发者必备视频，教你如何开发 APICloud 模块，把自己的技术转变为财富的诀窍</p>\n<p>4)SuperWebView ：</p>\n<p>APICloud CTO 分享 SuperWebView 公开课： SuperWebView 工具必备视频， APICloud CTO 带你轻松完善原生 App</p>\n<p>SuperWebView （ iOS ）： SuperWebView 工具必备视频， APICloud 技术大牛带你轻松完善原生 App</p>\n<p>SuperWebView （ Android ）： SuperWebView 工具必备视频， APICloud 技术大牛带你轻松完善原生 App</p>\n<p>更多教程信息可浏览 APICloud 官方网站-视频教程</p>\n<p><strong>新增及更新开发者技术文档</strong></p>\n<p>1    新手开发指南</p>\n<p>2    屏幕适配原理及实现</p>\n<p>3    开发模块设计规范</p>\n<p>4    模块开发指南_iOS</p>\n<p>5    模块开发指南_Android</p>\n<p>6    模块审核规范-iOS</p>\n<p>7    模块审核规范-Android</p>\n<p>8    启动页闪屏广告使用指南</p>\n<p>9    云修复使用指南</p>\n<p>10 版本更新使用指南</p>\n<p>更多文档信息可浏览 APICloud 官方网站-技术文档</p>\n<p><strong>新增开发者开源代码</strong></p>\n<p>Demo 实例、 APICloud 模块、开发工具、前端框架及文档、云 API SDK 五大类 50 余个免费开源码共你下载，让你开发更轻松更便捷。</p>\n<p>更多代码信息可浏览 APICloud 官方网站-源码</p>\n<p><strong>APICloud 认证工程师项目启动，全国范围进行考核</strong></p>\n<p>“认证工程师”是 APICloud 授予专业水平高，开发能力强的开发者的一个证书，经受严格的考试，经过官方的认证，拿到认证工程师的开发者不仅有了个人专业能力的权威证明，更有机会成为 APICloud 定制服务的供应商。这概念一经推出，就受到了开发者们的关注和欢迎。在他们的眼中， APICloud 从一个单纯的技术提供者，变为了能力认证和变现赚钱的平台。</p>\n<p>认证工程师的考核已成功在广州、北京、上海、济南等 30 所城市成功举办，已有超过 1000 名开发者通过审核成为认证工程师。</p>\n<h3><strong>AUI 重新架构</strong></h3>\n<p>AUI 2.0 重新架构，完成了从一个单纯的 UI 框架到真正能适合项目开发框架的转变，采用容器+布局结构+控件的嵌套形式，方便开发者快速布局样式。</p>\n<p><strong>rem 的使用</strong></p>\n<p>为了兼容不同分辨率移动设备， AUI 2.0 版本中使用 rem 进行尺寸控制。 html 默认定义的尺寸为 20px ，那么 1rem=20px ；开发者在定义尺寸及字号时可以根据此比例来控制，比如， 14px = 0.7rem*20 ；</p>\n<p><strong>列表布局</strong></p>\n<p>AUI 2.0 对列表布局进行了重新架构，分普通列表布局、媒体列表、选择器列表、表单列表、卡片列表等，在保证兼容各个版本机型的前提下使用响应式布局等分布局；</p>\n<p><strong>工具栏类</strong></p>\n<p>导航栏、底部工具栏、 tab 切换菜单、提示条、搜索条、按钮组等，全部归类于继承 aui-bar 的容器中，少量的代码即可实现丰富的工具栏布局样式；</p>\n<p><strong>JS 组件</strong></p>\n<p>AUI 2.0 新增及优化了下拉刷新、轮播、弹出菜单、底部弹出框、底部分享盒子、折叠面板、懒加载等常用的 JS 组件，样式及动画效果保留了原生系统的风格，同时方便开发者进行扩展。同时 JS 组件的调用方式统一使用 API 对象的接口调用书写规范；</p>\n<p>2017 年， APICloud 将持续为移动应用开发者，为广大企业用户提供更丰富的产品与服务，继续完善 APICloud 生态系统。</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "[2016 年终总结下] 坚持 52 次版本更新，只为不断提高开发者的使用体验", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h1>容器圈头条</h1>\n<p>汇总一周容器圈热点资讯，让开发者了解最 <strong>in</strong> 的容器技术，让企业熟知最实时的国内外容器行业动态，欢迎关注。</p>\n<p><img alt=\"_\" src=\"http://i1.piimg.com/4851/e2b96399d198a3df.gif\"></p>\n<p>2016 眨眼过去，又到了外行忙着过年，内行忙着总结的时候。回顾一下近三年容器技术发现线， 2014 年以 Docker 为主的容器技术在云计算圈子初露锋芒； 2015 年是容器技术风风火火的一年，可以用 \"扩张与进化\" 来概括； 2016 年当我们再次谈起容器时，“已死” 和 “永生” 成为了它的主题。 2017 年容器技术会带给我们什么样的惊喜与惊吓 ？请允许小编为大家呈现 《容器圈头条》第 1 期的内容。</p>\n<h3>一、 大趋势 “容器市场已起飞， 2020 年市值将激增至 27 亿美元”</h3>\n<p>根据 451 Research 最新的云计算市场监测报告，应用程序容器市场将从 2016 年的 7.62 亿美元增长到 2020 年的 27 亿美元。如果该预测准确，那么应用程序容器市场将比 OpenStack 更具影响力。届时，大量初创公司和成熟供应商将纷纷进入容器市场。在 2017 年，整个市场也将持续处在一个高度并购洗牌的局面，主要涉及管理、编排、监控、安全和持续集成 /连续部署方面。</p>\n<p><img alt=\"\" src=\"https://static.oschina.net/uploads/space/2017/0112/184948_0Xdz_2940129.jpg\"></p>\n<p>详情请戳 👉 <em><a href=\"https://my.oschina.net/u/2940129/blog/823897\" rel=\"nofollow\">https://my.oschina.net/u/2940129/blog/823897</a></em></p>\n<h3>二、 大事件  “ Docker 开源容器运行时组建 Containerd ”</h3>\n<p>Docker 公司宣布将 containerd 从 Docker Engine 中分离，并捐赠到一个新的开源社区独立发展和运营。 Containerd 的开源意味着企业可以基于此构建自己的容器管理软件。同时，为了避免 Containerd 与 Docker 或其他商业实体存在关联， Docker 计划明年把 Containerd 独立出来，并交由中立基金进行管理。</p>\n<p><img alt=\"\" src=\"http://i1.piimg.com/4851/3541028b5375c32c.jpg\"></p>\n<p>详情请戳 👉 <em><a href=\"http://www.infoq.com/cn/news/2017/01/Docker-Containerd-OCI-1\" rel=\"nofollow\">http://www.infoq.com/cn/news/2017/01/Docker-Containerd-OCI-1</a></em></p>\n<h3>三、 技术角 “ CoreOS 的 tectonic 新发行版支持 Kubernetes 自我管理”</h3>\n<p>CoreOS 继收购 Kubernetes 版 Git 之后，更新了自家 Kubernetes 商业发行版 Tectnic ，增加了无停机更新的功能。 CoreOS 的 CTO Brandon Philips 声称已经做到使用完全相同的 APIs 和函数监控 Kubernetes 和 applications ，并把所有的功能集成到 Tectnic 控制台钩子函数中，用户只需点击一下按钮就可以完成部署。</p>\n<p><img alt=\"\" src=\"http://dockerone.com/uploads/article/20170107/04dbd5d5dd14bda58ba7125c1fe775cb.jpg\"></p>\n<p>详情请戳 👉 <em><a href=\"http://chuansong.me/n/1464632551335\" rel=\"nofollow\">http://chuansong.me/n/1464632551335</a></em></p>\n<h3>四、 科普文章 “容器技术的前世今生”</h3>\n<p>容器技术历经数十年的雪藏，近几年在云计算领域大放异彩。成名的背后是历史的必然，还是由一个个偶然堆砌；容器技术与虚拟化技术之间有着怎样千丝万缕的联系；它的火热发展与 Docker 这个划时代的开源项目又有什么关系？ 请允许小编带大家进入这一期的走近科学，噢不，是走近容器之 “容器技术的前世今生”。<br>\n<img alt=\"\" src=\"http://i1.piimg.com/4851/73bd0e5019ec0f0a.jpg\"></p>\n<p>详情请戳 👉 <em><a href=\"http://www.ithome.com.tw/news/91848\" rel=\"nofollow\">http://www.ithome.com.tw/news/91848</a></em></p>\n<p><strong>这一期的容器圈头条就到这里，欢迎下期再会。</strong></p>\n<h3>作者简介 |  Evelyn</h3>\n<p>DaoCloud 容器技术开源团队成员，曾在 Intel DCG 部门担任 Cloud Engineering, 对分布式调度框架 Mesos 有深入学习，对集群资源管理有一定经验，目前致力于 Docker 容器技术的研究和实践。 Evelyn 所在的容器技术开源团队，在 DaoCloud 主要负责容器生态的开源工作。</p>\n</div></div>"], "reply": "2", "tittle": "『道客船长的航海日志』容器圈这一周发生了哪些大事记？（第 1 期）", "comment": ["话说道客船长翻译成 Captain DaoCloud 会不会更好😂", " 有道理！！ 😂"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>先说下自己现在的情况：</p>\n<p>前端：</p>\n<ul>\n<li>熟练使用 React/Redux</li>\n<li>熟练使用 webpack/gulp 等工具</li>\n<li>熟悉 css 属性，普通的网页布局基本上都可以无压力不用框架写出来</li>\n<li>用 React/Redux 独立开发过超过 10K 行代码的项目（我知道代码行数并不能说明太多，主要是想表达有一定的实际经验）</li>\n</ul>\n<p>后端：</p>\n<ul>\n<li>熟练使用 PHP CI 框架</li>\n<li>现在正在用 express 开发新项目，纯 API 化（配合 React ）</li>\n</ul>\n<p>其他：</p>\n<ul>\n<li>喜欢漂亮的设计，也会自己尝试设计，但是并没有系统学习过设计课程</li>\n</ul>\n<p><a href=\"https://github.com/gao-sun\" rel=\"nofollow\">我的 GitHub</a></p>\n<p>现在自己并不满足于仅仅会使用 /熟练，想要学习一些进阶的东西（不限于前后端）。比如大型应用相关的分布式部署／性能优化等。恰逢现在前端蓬勃发展，如果能给一些流行的开源项目做出贡献也很不错。对于个人来说，还没毕业是学习知识的好时机，也希望自己在职业发展中更具有竞争力。</p>\n<p>不知道大家有什么建议，在此请教各位。谢谢啦！</p>\n</div></div>"], "reply": "5", "tittle": "请教各位前后端进阶学习方向", "comment": ["通关出宝贝   副本掉装备  多实战。。。", "能实现 =》\r", "  1.能更好的实现（算法）\r", "  2.能应对变化的实现（架构）\r", "\r", "写代码无非是这样的过程。学习了跟“算法”、“架构”有关的新知识之后，再去拿自己之前写的东西做实验，看能否用新知识改进之前的东西。然后再写新东西的时候，直接用之前实验的成果。", "前端比我好啊~\r", "可以假设网站有 10 万并发，配合 apache benchmark 进行压测，对项目进行优化。\r", "往架构设计层面学啊~", " 谢谢！\r", " \r", " 十分感谢两位的建议！之前学过比较长时间算法，各种基本的算法都可以应用。感觉往架构方面学确实不错。", "创业，做自己想做的项目"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>目前有十万张图片，每张图片对应不同的浏览量、收藏数以及回复量，当然这三个量肯定是越大表示这张图片越有意思，但是怎么具体来量化一张图片有意思的程度呢？比如 A 图片浏览量、收藏数以及回复量是 2000:100:10 ， B 图片是 900:150:8 ， 怎么来具体量化排序 A 图片和 B 图片到底哪个最有意思？</p>\n</div></div>"], "reply": "6", "tittle": "如果设计一个算法：一批图片中，根据每张图片浏览量、收藏数以及回复量来定量排序最有意思的图片？", "comment": ["设置权值，比如可以设置浏览：收藏：回复 为 1:3:4  然后根据这个比例对应 2000:100:10 计算出来结果，数值越大代表越有意思，当然了这个值可以根据实际情况再做调整", "\r", "\r", "\r", "\r", "\r", " \r", "ryf 的 ranking model 基本过时了，不再适用于当前需求，这些 model 和公式都太弱了。\r", "ranking 问题是机器学习的一个经典问题。 lz 的问题本质上和图片搜索引擎的 ranking 问题没有区别。\r", "\r", "工业界最常用的方法是用 ctr 做训练目标来训练一个模型出来。", "回覆量可以刷.很难分辨有效量\r", "收藏量大致上准.\r", "浏览量受到机器人影响.大致也准.\r", "\r", "我个人的图片网站有做的:\r", "个人图台使用的是参观者都给予惟一 hash.都入后就将该用户 hash 整合在一起.\r", "记录每一张图片在画面上\"完整呈现\"时的秒数.\r", "\r", "分析:\r", "被收藏的图片完整呈现多久被搜藏.延伸题目:马上搜藏跟看很久才收藏的意义.\r", "观看多久算是用户挂网.并排除.\r", "收藏后再次被使用率.\r", "用户回文是否灌水.用户是否有效.\r", "发文者特性比例分析.\r", "回文者特性比例分析.\r", "搜藏者特性比例分析.\r", "\r", "此图台利益与使用者利益交叉点.也就是这网站要赚钱又让用户不讨厌或是更喜欢的方法.\r", "如何吸引用户将本网站推荐给他人.\r", "\r", "基本上这本来就是一个很复杂的题目.\r", "只能尽可能的收集用户的行为.\r", "在去分析这真的是否有趣.\r", "排序意义不大.", "简单解的话就是置顶权重规则来计算，复杂解的话就用机器学习算法训练权重", " 过时不过时我不知道，但是如果楼主想要快速实现排序功能，那么从这六种排序方法中找一种适合自己的，是最快的方式，也是最省钱的方式。\r", "\r", "当然作为研究，去学习一下机器学习没问题。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>今天看了看网易 LOFTER 首页： <a href=\"http://www.lofter.com\" rel=\"nofollow\">http://www.lofter.com</a>，标示自己“使用无损图片压缩技术，上传图片保留高质量细节”，我就很好奇，因为我曾经把 github 翻了个底朝天都没翻出个 JPEG 无损压缩技术出来，都是有损压缩技术，抛开免费开源的，连大名鼎鼎商用的 jpegmini 也是有损压缩技术，难道网易真开发出了无损 JPEG 压缩技术，有开源的轮子吗各位 V 友？</p>\n</div></div>"], "reply": "25", "tittle": "lofter 标示自己使用无损压缩技术，到底目前存不存在 JPEG 无损压缩技术？", "comment": ["我记得 jpg 本身就是一种图像压缩标准。隐约记得图像的未压缩格式是 raw ，音频是 wav ，视频是 mov ……", " 那 LOFTER 这种说法本身就是错误的吧", "JPEG2000 格式支持无损压缩\r", "轮子 ", " 我个人觉得是这样没错。但是 wiki 上有这么一段话你应该感兴趣：\r", "“ JPEG 的压缩方式通常是破坏性数据压缩（ lossy compression ），意即在压缩过程中图像的质量会遭受到可见的破坏，有一种以 JPEG 为基础的标准 Lossless JPEG 是采用无损的压缩方式，但 Lossless JPEG 并没有受到广泛的支持。”", "如果是无损，应该就是“上传图片保留一切细节”了吧…不过查了维基，还真有无损 jpg\r", "\r", "“ Lossless JPEG 是一種無失真的圖像壓縮標準，在 1993 年由 Joint Photographic Experts Group （聯合圖像專家小組）組織創建和維護，但是現在也可以用來代表 Joint Photographic Experts Group 所創建的無失真壓縮，包含了 JPEG 2000 還有 JPEG-LS 。”", " @", " 没错，我无知了。还真有无损 jpg\r", "看说明是无损压缩的 jpg 在压缩后还可以恢复到压缩前的状态，这个有点厉害了。这帖等养肥了再来学习。", "其实我一直觉得有损比无损高级……\r", "\r", "把重复的数据字节用更短的形式表达，实现体积缩小，并且可以根据该算法逆向推导出原始文件，这个倒好理解。\r", "\r", "但是有损是丢弃图像部分细节，却还保证基本的可视，而不是让图像直接崩掉，这个我才觉得更高级……\r", "\r", "不过具体实现细节是怎样我也没研究过，坐等养肥了学习。", "我们平常使用的 jpg 全称 JPEG ，是联合图像专家小组 1992 年制订的有损压缩标准\r", "如 ls 所说， jpg2000 同样是联合图像专家小组制订的标准，但是文件后缀并不是 jpg ，而是 jp2 或者 j2c ，支持有损压缩、透明通道等。但是显然大多数浏览器都不支持这个格式\r", "无损压缩的压缩率是极其有限的，不是因为无损压缩不行，是因为 JPEG 有损压缩实在太厉害了，除了离散余弦变换、游程编码、 zigzag 编码、霍夫曼变换算法的牛逼以外，色度抽样压缩法针对人眼设计，可以在人眼几乎察觉不出的范围内压缩 90%以上的体积，但是这一过程，也相当于只保留了小数点后两位\r", "所以你看看他图片体积和格式其实就基本能看出是不是有损了，如果格式是 jpg ，那 100%是有损的。", "无损压缩是很正常的，\r", "了解一下相关压缩技术就可以得知，\r", "只是一般用的压缩格式标准为了文件大小的极致追求上，\r", "优先考虑了牺牲可容忍的图片质量误差，\r", "通用的打包 zip 格式就是一个显然的无损压缩例子，\r", "如果说， zip 能实现，其他文件不也是同理了。", "订正一下：并不只是色度抽样一个因素导致了 90%的体积压缩率，但这一步里包含了绝大部分信息的丢失。", "楼上说的对，浏览器对 jpeg2000 的支持有限， 如果文件后缀是 jpg ，那 99%是扯淡。剩下 1%是把 png 后缀换成了 jpg", "人家说无损，又没有说是 jpeg 无损。楼上说的那种直接压缩 zip 确实也算一种方案。（而且， Lofter 可以无损地存下你的图，不代表你浏览的时候都得要用你那张无损的啊。）", "MIT 的 Linear Algebra 上大致讲了一种有损压缩方法，有点像傅立叶变换。（先找到图像像素最主要得到那个变化趋势，然后再不断设定频率更高的波的相位，来拟合原来的数据）", "明显说的是上传图片不压缩。。", " 1992 年的 jpeg 就运用了傅立叶变换。和你说的一样。", "Dropbox 的 lepton\r", "Lossy Image Compression with Deep Learning 深度学习压缩 JPEG\r", "\r", "The gold standard of compression for JPEGs (JPEG 2000) has been beaten for the first time by an approach using deep learning, built by a team at Twitter. Prepare to see many more iterations on this idea! Read the paper …\r", "JPEG 图片的黄金压缩标准 (JPEG 2000) 这么多年来第一次被打败。\r", "\r", "\r", "\r", "试试就知道了，上传再下载回来，两张图做减法（ PS 就行吧）", "明明说的是上传文件(or 图片)不压缩而已", "原文写的是：`使用无损图片压缩技术，上传图片保留高质量细节，当你手机处于 wifi 网络，将自动加载全高清图片。`\r", "\r", "意思是说，在服务器上保留了一份你上传的原件，如果你手机处于 wifi 网络下，就下载原件显示，如果不是，肯定就下载压缩过分辨率的图片喽", "据我所知 lofter 用了很多 webP 格式的图片 不是 JPG 格式的", " compressive sensing 可以关注一下，现在好像在图像压缩领域还没怎么用", "压缩感知并不是用在压缩的，而是可以看做在采集端就进行稀疏采样，以突破香农采样定理，目的是为了一步干完采样 压缩两件事。(主要用在医学图像)\r", "如果想要压缩的轮子自己玩玩，可以用 ffmpeg ，各种压缩标准的 lib 都有， jpeg ， jpeg2000 ， h.264 h.265", " 按逼格来说，无损应该更高级，毕竟这个是终极追求。\r", "按技术来说，无损压缩已经发展到了一个瓶颈，再花力气在上面也没啥意义，现在真正值得发展的是有损压缩。", "安利一个新的无损压缩格式， FLIF ， github 上能搜到"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>先说一下运行环境， i5 8G virtualbox+centos7 单核</p>\n<p>iperf 使用 tcp 测速，往同一台宿主机的另一个虚拟机发送数据， cpu 几乎不占用。\n但是使用\"-b 100M\"参数指定带宽时，发现 sys 占用很高， iperf 的占用几乎为 99%</p>\n<p>iperf 使用 udp 测速，也是往另一台虚拟机发送数据，随着\"-b \"指定的带宽越高，占用的 cpu 也越高，其中占用的 sys 也越高。</p>\n<p>用 strace 跟踪，系统调用最多的是 nanosleep, 问题是， iperf 就是通过 sleep 系函数来限速的，但为什么会占用 cpu 这么高呢？</p>\n</div></div>"], "reply": "1", "tittle": "请假一个 iperf 占用 cpu 的问题", "comment": ["调用最多，不代表占用 CPU 最多。。。实际 sleep 是让出 CPU 的操作。 sys 高的话确认下是不是软中断的问题或者看看 tcp 的状态是否有异常。实在不行 systemtap 或者火焰图上去，一下就看出来陷入在那块占用了 CPU 。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>开发环境 windows ，在新的线程中处理数据接收报错： OSError: [WinError 10038] 在一个非套接字上尝试了一个操作。错在__execute__中的 self.request.recv(8192)，不使用线程的话没有问题。请教大家问题在哪了</p>\n<pre><code>@log(\"任务已准备开始。。。\")\n    def start(self):\n        if not self.status[\"started\"] and \\\n                not self.status[\"finished\"]:\n            self.status[\"started\"] = True\n            t = threading.Thread(None, self.__execute__)\n            t.start()\n        else:\n            raise TaskAlreadyStartedError(\"任务已经开启，不能重复开启相同的任务。。。\")\n            \n@log(\"正在执行写入任务...\")\n    def __execute__(self):\n        filename = self.fileInfo.get_name()\n        full_path = self.backupDirectory + \"/\" + filename\n        total_len = 0\n        with open(full_path, 'wb') as file:\n            while True:\n                try:\n                    data = self.request.recv(8192)\n                    if not data:\n                        break\n                    file.write(data)\n                    total_len += len(data)\n                    self.currentProgress = total_len\n                    self.report_progress()\n                except Exception as error:\n                    if total_len != self.fileInfo.get_size():  # 客户端提前关闭\n                        self.status[\"finished\"] = False\n                        self.status[\"stopped\"] = True\n                        if self.auto_rollback:\n                            file.close()  # 释放当前文件句柄，否则造成文件无法回滚\n                            try:\n                                self.rollback()\n                            except Exception as rollbackerror:\n                                logging.error(str(rollbackerror))\n                    logging.error(str(error))\n                    break\n\n        if total_len == self.fileInfo.get_size():\n            self.status[\"finished\"] = True\n            self.status[\"stopped\"] = True\n            print(\"任务%s 已经把文件%s 保存到%s\" % (str(self.taskId), filename, self.backupDirectory))\n</code></pre>\n</div></div>"], "reply": "4", "tittle": "Python 开一个新的线程接收 socket 数据出错", "comment": ["你只贴了部分代码， 我推测你在执行 start()之后紧接着 close 了 socket 。在非线程模式下， execute 执行完之后才 close 的，所以没问题。而在线程模式下，刚启动线程， socket 就被 close 了，所以就抛了那个错误", " 我竟然没有发现这么低级的错误， join 一下，然后就好了。", " 因为是基于 python 的 ThreadingTCPServer 开发的，一般情况下不需要显式关闭 socket ，所以没有注意到这个问题", " 666 。不看代码而答出错误所在。我服。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>突然 fn+数字键不是输入 F1 ， F2,...F12 了， 变成 mac 的功能键了，调整音量 调整亮度什么的了</p>\n</div></div>"], "reply": "2", "tittle": "poker2 求助", "comment": ["Mac 默认不都是这样的？", " "]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题：想统计每次 api 请求的信息，又不想对现有业务造成影响。（ php 环境）</p>\n</div></div>", "<div class=\"topic_content\">多谢各位，准备用 awstats 做日志分析，用的比较多，集成也比较简单</div>", "<div class=\"topic_content\">感谢各位 v 友的建议，根据自己的情况，我选择了使用 awstats 做 api 统计，简单小巧，不影响业务功能。能统计分时段，分来源，分地区的情况，感觉还不错，也推荐给大家看看。 <a target=\"_blank\" href=\"http://blog.easeapi.com/archives/552\" rel=\"nofollow\">http://blog.easeapi.com/archives/552</a></div>"], "reply": "9", "tittle": "咨询 V 友一个问题：后台的 api 接口统计及后续报表有没有现成的方案推荐？", "comment": ["对 Nginx 日志做统计也可以吧", "日志分析啊， elk 方案。。", "你的意思是把请求的所有信息存储下来，然后不影响返回，是吧？\r", "那就做异步任务啊，比如用 celery 这样的", " @", "  @", "  结合实际情况，我还是选择分析日志吧。铜板不够感谢的！多谢各位！", "说说规模撒", "laravel 的话 可以在中间件做啊", "提供三个方案。\r", "1. 打日志分析，对老代码影响最小\r", "2. 在调用 api 的时候往 influx 里扔记录，还可以顺便做个健康监控\r", "3. api 前面加一个 tyk ，统计很简单，连权限都帮你做好了- -", "同推荐 tyk", "elk ， kibana 基本被我拿来当用户访问分析系统了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我现有的代码里接入的是百度的免费 ip 识别服务，最近我想转成付费的 ip 识别服务： <a href=\"http://apistore.baidu.com/apiworks/servicedetail/2422.html\" rel=\"nofollow\">http://apistore.baidu.com/apiworks/servicedetail/2422.html</a>\n然后发现百度的 apistore 对新用户关闭了，没办法买，而如果换成别家的成本又太高（改代码之类的）\n有啥办法么？</p>\n</div></div>"], "reply": "22", "tittle": "百度的 ip 识别 api 似乎对新用户关闭了，我有啥办法买呢？", "comment": [" 的这个 360rmb 的也可以： ", "\r", "不过它的返回参数格式和百度的太不一样了，要改好多代码", "我这里就可以买，买个百度老账号试试？", " 你卖么？或者能帮我买个 100RMB 的么，把 api_key 给我我可以多出点钱买下来也行啊", "我毕竟感兴趣的是百度的高精度 ip ，但是好像没地方可以接入了吧。", " 企鹅， NTE0OTQyOTgx ，卖就不卖了吧，云盘不想搬动= =，可以给你买", "我这里可以买，企鹅： MjE0MzU4NTA2Mg==", " 谢谢你，我是爬虫工程师 /php 后台，你帮我这一次遇到爬虫 /后台相关的地方，尽管找我帮忙", " 举手之劳，木事", " 谢谢， V2EX 好温暖。。。不过 mikicomo 同学试了一下似乎最后也会被卡住，我就放弃了", "换个 api 要改好多代码？模块化怎么做的？", " 高精度那个好像是以前申请过 api 的话还能继续用下去的.\r", " 讲真， ipip 的数据精度比百毒的好多了", " 我这个可以直接到付款界面。。\r", " +1", " 高精度我觉得还是百度强，毕竟百度的地图界面访问一次就记住地址。。", " 我加了个班，刚完成切换到 ", " ，主要是百度返回的经纬度和 ", " 的经纬度不一样。。。我并不需要百度的高精度，只需要定位 ip 在某个省+城市就 ok 了", "ipip 不就是专门做这件事的么。。。", " \r", "记得 ipip 也曾经展示过 百度所谓 高精度的数据进行对比 \r", "实际对比情况来看 百度这个高精度数据 在准确性确实并不如 ipip\r", "\r", "后来据说是百度要求 ipip 撤下 对比数据的展示 然后不了了之了", "淘宝也有啊。 ", " ，就是有 10qps 限制。", "我用的是百度地图 IP 定位的 API ， IP 定位后也有地理位置信息", "高精度没有。。。\r", "我记得 nyavm 的 amy 好像提供了一个", "建议买高老板的 "]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>RT ，楼主是武汉一名大专生，从大一开始比较关注专升本方面的信息动态。</p>\n<p>说起专升本的想法其实很简单，觉得自己自学编程以及在专科层面学的东西真的太过于浅显，越学到后面发现自己学的东西越少。最终到了一个瓶颈。比如说我写爬虫，了解到的就有多线程，协程，异步，多进程等等各种方式加速抓取内容。但是目前我自学了半天也就对多线程有所了解，其他的协程啊，锁啊这些概念都不是非常理解。甚至对于线程安全这个概念也是在学了 python 写爬虫的时候才有所了解。（之前学 php 的时候，对于 php 版本选择一直选得都是非线程安全版本，只知道它速度快，根本不懂为什么，现在终于懂了）。包括现在写数据库，对于数据库里面的索引类型， redis 里面的存储类型选择，也是之前参加蓝桥杯比赛的时候简单粗略的看了看数据结构的书才有所了解，不然也不知道该从何选择。</p>\n<p>平时逛逛知乎，看看别人写的专栏，也深深意识到了自己的差距，更加下定了专升本的决心。但是仍然遇到了一些问题。</p>\n<p>专升本要考英语，但是考的是通用大学英语，平时我只对计算机方面的英语有所了解。之前考过两次四级，第一次 330 ，第二次不知道成绩，感觉肯定是过不了。想请问一下各位英语都是怎么学的？</p>\n<p>还一个计算机组成原理，里面考的知识非常抽象，尤其是讲 CPU 寄存器部分，好像就是死记硬背那些指令和寄存器的作用，教科书上也都是各种生涩难懂的概念，完全没有一种启发式教学，从入门循序渐进的教学过程。给出来的题目更加就是书后面给答案，然后考试照着答案写。我感觉仿佛回到了高中时代背题目，不求甚解，只求记住。不知道各位从本科大学过来的人自己当年学这门课是什么感受？</p>\n<p>还有就是你们身边专升本上来的人觉得他们有什么不同吗？大家怎么看待专升本的？</p>\n</div></div>"], "reply": "64", "tittle": "这里有专升本成功的人吗？或者身边有朋友同事是专升本上来的？觉得收获与意义大吗？", "comment": ["只能说看多就熟了，这些东西，用心看用心学。无他，唯手熟尔。加油", "组成原理还要背指令和寄存器吗？我没背过…\r", "\r", "我看到这些类似的知识点的时候，因为计算机的从底到顶都是被人设计出来的，所以我考虑的是：\r", "为什么会有它？它为什么被发明设计出来？如果没有它那有什么替代方案？相比替代方案它的优缺点如何？\r", "\r", "通常我知道了一个东西为了解决什么问题被设计出来以及它的必要性，就当做自己理解它了。\r", "\r", "其他的问题我就解答不了了。", "加油  看到好多考 行政本科的", "根据 2016 年 Stack Overflow 的调查: 69.1%的参与者认为他们是自学成才, 认为自己有计算机科学相关学士学位的有 19.7%\r", "\r", "\r", "我是国内二流本科, 毕业十多年里用到毕业证 /学位证的时候:\r", " - 上海居住证 (记得是要求本科)\r", " - 国外工作签证 (基本上要求是本科)\r", "\r", "换过几份工作, 有些要求最低学历是本科, 只是提交电子版给背景调查公司. \r", "\r", "建议:\r", "1. 学好英语;\r", "2. 尽早升本;\r", "3. (每天) 坚持学习.", "江苏叫专转本，本质一样的，限制是最高只有二本（以前只有三本）。\r", "\r", "体验就是：因为专转本是允许跨专业的，虽然转本后是本科三年级，但是班里还是好大一部分同学没有专业基础，决定了很多课程的深度。\r", "\r", "然后就是自己的经历了，可能只跟学校有关。专科的机房资源比我转本的后的那个机房资源不要好太多，转本后的上机课少的可怜，而且还有很多很愚蠢的规矩（比如实验报告要手抄，包括代码）。其实槽点还是很多的，可能也会有一些好学校，不过我省的状况大概就是只有行情不太好的学校才会收转本生。\r", "\r", "当然，多两年静心读书的时间还是值得的，操作系统、编译原理都是在专科没有接触过的课程。而且本科的话继续读研也更方便一些。", "别想那多，想考就考。", "重庆专升本一枚，现在求职觉得确实本科学历选择面更宽，即便是在我要转行的情况下。但是银行、事业单位、国企对专升本文凭歧视比较明显。不过比较坑的是，重庆的专升本原则上并不能跨专业，所以如果你专科选错了专业的话，就比较呵呵了。", "认真学就有用，只为证应该用处不大", "几年前没有意识到本科的重要性，现在很后悔没升本。", "西北地区专升本一枚,专科读的软件技术,本科读的计算机科学与技术,明年 6 月份毕业,现在在武汉中南一家互联网(算是互联网把)公司实习.怎么说呢...虽然专科三年学的软件技术,但是跟没学一样,数据结构,数据库,高级语言...几乎所有的课程都不会,简直就是混到毕业...本科之后才开始学了点东西,也基本都是自学的...不过本科还是有必要的啊...想读就读啊...我感觉我技术到现在还是一般,不多既然走了这条路就得不断学习啊...", "感觉每个地区专科到本科的方法都不一样，就像是广东省里面分两种。专升本和专插本，前者的学历听说某些企业不认。反正学历这种东西对于出社会还是非常有帮助的。", " \r", "同重庆，问下：\r", "1.专升本，选本科院校是在网上选吗？是考之前选，还是考完之后选？\r", "2.如果拥有免试资格（无需考试），都没有成绩了，本科院校怎么衡量你呢？还是无条件录取？", "背景：华南地区专升本一枚，目前毕业 1 年零 6 个月。\r", "\r", "收获：如果没有选择专升本的话现在应该是在某运营商或者 IDC 做机房维护、又或者在设备厂商做售前，\r", "          因为我之前是学网络工程的，大专的时候参加了 2 年的竞赛，成绩尚可。\r", "\r", "          现在的情况是从事 Web 开发，普通国企。\r", "         \r", "      稍微总结一下，比较实际的好处是选择变多了，本科的学历很大程度上比大专好使，再者毕业生落户的政策一般都要求本科，一些福利也需要本科学历才有，不过这也是你多花了近两年的时间换来的。\r", "\r", "     PS ：求职的时候一般是看你的最高学历，目前没遇到过专升本学历被差别对待。", " 我不是重庆的勉强答一下，关于免试，我那年的政策是直接选学校，无条件录取，不过今年政策有所变动，变更为单独考试，单独出卷，只考文化课。", "是时候该打好基础了\r", "首先建议 lz 学好英语，从事 it 技术要经常用到英文资料， rfc 什么的，如果英文不好你就只能学习二手资料。\r", "计算机基本功例如组成原理,操作系统，算法。但背寄存器和指令就没有必要了，每个硬件平台指令集不一样，只要知道栈帧的调用过程原理和几条常用指令就行了。", "大公司都要全日制统招的本科。。。。。。。。能升快升，不然以后后悔，我也是应届专升本过来的。除非你是特别的聪明，如果觉得自己没什么特殊的话。。。。我建议还是尽快准备升，对将来好处实在太多了。", "我就是专升本升上来的，但是你想的太多，这个毕业证只是给了你一块不太好用的敲门砖，咱们这一行真的需要自学为先呐。", "没用", "合肥地区的情况是：凡事讲究学历的，都要求 985211 ，凡是不要求学历的都直接招大专生，包括野鸡大专。", "读大学并不是为了学知识找工作，好大学有两个好处\r", "1.有好的学习氛围\r", "2.同学比较靠谱，将来是天然优质人脉\r", "\r", "你有以上两点需求强烈建议升本。证书本身没有任何用，仅仅为了有个证书找工作，就别折腾了", "当然要结合反汇编学啊。。。\r", "\r", "我之前拉你玩 pwn ，你说不会还不就是不懂这些东西 。。", "楼上说得都对，至于考试真不难", "非常有必要 \r", "\r", "作为一个大专生，一些面试被 k 这个其实到真无所谓。   然而一些行政服务或者机会都要求本科....才比较蛋疼，不过好在一点后者的要求只要是本科就可以。", "考一个吧，我也是专升本上来的，多读了一年。", "有一同学专升本，最后当了小学老师，教语数外什么的。感觉是否要专升本，主要是看你目标行当对学历有没有要求，另外能学到什么，还是看个人", "我一个 70 后就是专升本上来的啊，不过估计对现在的人没啥参考价值了。我当年初中就有电脑了，然后自学的。其实专科本科那点东西我自学了七七八八了，也就是补充一下理论知识。", "本科快毕业表示都听不懂... 感觉自己水水的", "看你决心。\r", "我见过专升本，读研，最后到北大读博士的。", "我选择从高中起点开本科回炉重造。", " 考试是学校报名，志愿是自己投，会出当年能录取的学校自己选，免试不清楚，我有同学是免试的。\r", "\r", "提一句，如果能专升本就全力以赴，带来的好处出乎预期，比如想去美国读研，想进国企，都必须全日制本科", "直接出国念啊，成绩好去好的学校不是问题", " 成绩好还需要考虑专升本的问题么？", "面对这种学或者不学的问题，我有个办法就是列一个不学的好处的清单。只要清单里存在一条，省事，那就学。\r", "\r", "「几乎所有因为偷懒妄图逃避的事情，最终都需要加倍的时间与精力来弥补。」", "还是有用的", "985 的人在这里回帖会不会挨揍", " 那可真不好说，有蛮多人工作了一段再专升本，国外预科成绩都很好的哈，人总会变的啦", " 揍死你，逃、、、、", "给你讲一下我同桌的故事。\r", "高中时是一个普通学校，他英语还不错，其他科目一般。预考基本在一本线左右，但是高考结果比一本线低了四五十分，于是复读。\r", "复读的分数还是和这个差不多，最后进了一个专科学校\r", "在专科学校里坚持了自我，三年后专升本，之后搞定了托福，本科毕业前套磁成功，直接去波士顿大学直博了，专业是经济学。\r", "他明年毕业，打算定居美国。我很佩服他的能力，羡慕他的成就。", "居然没人提专升本前途无量这个梗？", "专升本还是有必要的，而且我也没看出专升本的毕业证和学位证与全日制的两证有什么差别", "   毕业证注明了是专升本, 学位证没区别", " 这是什么梗?", "考", "英语针对专业等级考试进行准备即可。\r", "\r", "计算机组成原理如果想理论结合实际的学习，有一本书叫《自己动手写操作系统》，能够帮助到你\r", "\r", "专升本除了专业知识外，其他用处都很大。\r", "\r", "如果你获得了学位证，它代表你的学力，以便你日后能够再次进修，比如 38L 说的案例，同时在各种资格申请中也至少有基础入场券。\r", "\r", "相比之下学历证在日后意义不是很大，能帮助到你的地方较少。", "有必要。在你意识到差距以后升本科阶段可以让你专注在学习上，而边工作边学习是很吃力的。", "我是。\r", "\r", "其实专科和本科的学生没什么区别，等你考上了你就会发现大部分本科生的实际能力和专科生差不多（当然总体还是本科好一点），本科最重要的是你能遇到更容易地遇到和你志同道合，专心钻研编程技术的同学和老师，他们给你的帮助远远大于本科学历所带来的意义。\r", "\r", "如果只是为了本科文凭好看一点，那就是白白浪费两年时间。", "大部分回答没抓住重点，专升本分两种。\r", "\r", "一种升统招本，也叫专插本，考试有一定难度，也不是所有学校都有这个机会，这个基本很本科一样待遇。\r", "一种升自考本，基本就花钱买学历，基本上和专科没区别。\r", "\r", "PS ：我们看人不看学历，就看技术。", "PS2 ：不过公司招聘新人时会刷学历，要不成本太高。", " 博士学位说明你同桌确实很厉害，吐槽一句基本上大部分的国外大学只要学费够付的上，想去读还是比较 easy 的", " 吐槽一句去国外读硕士都是不需要托福不需要 GRE 不需要陶瓷的（手动滑稽", " 虎扑 JRS ？", "我也重庆的 专科生 工作过三家公司 都没人问我什么学历 都是后来大家熟了吹牛时偶尔说过 目前还没有发现和本科生有什么区别 开发这一行更多看的还是能力 加油", "我也是专升本的，能好好学习也是可以的。", "针对组原说一下：组原课的目的是教会你自己动手造一个电脑（主要是 CPU ），并针对这个过程探讨了其中一些相关问题解决的思路与方法。\r", "这些寄存器不是需要死记硬背的，他们的出现（比如 PC 、 IR 、 MBR 、 MAR 等）是为了建立一个电路运算与控制的模型，有一个逐步形成的脉络。组原内容相对比较简单的，你需要的仅仅是找一本好的书仔细研习一遍。", "如果可以，请务必参加统招专升本。\r", "差别挺大的，专科生参加校招，简历都难以通过，除非你已经不错的项目经验，扎实的计算机功底。刚毕业的学生，凭着学历＋不错的专业知识功底，通过校招加入较大企业，是个非常好途径。。。", "前几天闲着没事，筛了一下公务员国考、省考、事业单位等的岗位要求，专科基本上就是没什么希望……常见专业是没什么希望的，本科的范围就大很多，还有，全日制和国民教育系列也是不一样的……", "本科证是一块敲门砖 但是当你的能力超过了这个敲门砖的价值的时候 你可能就不会去想值不值得升本 升本的意义何在了", "看了 LS 大家的经历，我也说一下我的好了……\r", "\r", "之前读一个野鸡大专，读一年就休学了，因为家里出了点事，之后就出来上班，倒是当时公司 A 没什么太多的要求， 经理满意就行，所以顺利入职……\r", "两年后想跳槽到某财务软件的本省分公司，不出意外学历卡住了，当时面我的技术经理让我问问学校能不能把文凭搞出来，当然野鸡大专是傲娇的，不靠谱的辅导员不愿意帮我去问，就黄了……\r", "中间因为被公司 A 派到某国企公司 B 驻场，待了好几年，人家就是不考虑招我，这事儿都没提到学历的问题，这个时候是看关系，但是没法，甲方不要你……\r", "\r", "之后报了网络教育，学历倒是真的，国民教育系列里面的远程教育嘛，两年半学制， 12 年入学， 14 年 7 月申请毕业证的时候忙别的事，毕业论文没来得及交，延后半年， 15 年 3 月拿到的毕业证，学信网有登记的那种。\r", "\r", "从此，即使你拿着一个专科文凭，但是找工作 [全日制] 就与你无缘了……\r", "\r", "然后 16 年 2 月，又报名了专升本的网络教育，也就是专升本，目前拿到 50 学分， 84 学分可以毕业，两年半学制……有了之前的经验，目测 18 年 3 月左右可以毕业……\r", "但是，依然只要招聘单位要求 [全日制] ，就白白拿这两文凭了~ 学校还都是很有 985211 系列的，但是连校门的砖块都没摸过怎么好意思说你拿的是这学校的文凭呢……\r", "\r", "所以，如果还在学校里面，能读统招全日制的专升本，就大胆去搞。\r", "\r", "之前的野鸡大专，在我离开后次年开始搞 [专本套读] ，貌似跟西南科大合作的……拿到野鸡大专文凭，再+1 年就可以拿到西南科大的本科文凭，属于什么系列的不了解……\r", "\r", "很多事情，在学校里面是不知道的，出来以后才知道生活还是不容易的……", " 家教很严非处女", "有时间就升呗。至少你纠结是否读研的时候不用考虑“同等学力加试”", "可能对你没有参考，我是所谓的 3+2 ，也就是所谓的三年专科两年本科，这在高考之后报志愿的时候就定下了，所以说我不用考试就能去一所二本上两年学就能拿到本科学历，看上去和普通的本科没什么区别。\r", "如果是为了学习，一定要选择好学校，如果只是为了学历的话那做好要考虑一下。因为不论是你专升本还是后来考研成功，你的第一学历永远是专科。当然要是这个学历没有用的话我又为什么读这个专本衔接？我觉得只要是有机会，当然是学历越高越好，要是读的不是 3+2 的话，我估计我就要自考本科和专升本双修了……\r", "写了这么多发现好像什么都没写？老毛病了。总结一下，有机会就上吧。", "本科学的也是一样的，我是本科，但是是会计专业，法律方向。毕业当码农，并没有觉得和计算机专业的同学有多少差距，都是自己倒腾出来的东西，不在于你的学校。计算机行业里证书并没有那么有用。个人认为本科可以追求，但是不要抱希望与它会给你多大的能力提升……", "可以的，我也是专科，打算升本。\r", "混进一些圈子本科是最低标准了，能做到还是很有必要的。\r", "\r", "再说，升本不只是为了升职就业，也可以提高自我修养，达成人生成就。", " 所以你还是在校生吧"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>了解过 Electron .</p>\n<p>现在好奇为什么网易云音乐的 Mac 版能做这么小（ 9.9MB ）。\n今天在翻里边的资源的时候，发现里边有个文件（ resources.pack ）占了一半大小（ 5.1MB ）</p>\n<p>想看看是什么东西，就当作压缩文件打开，结果需要密码</p>\n<p><img alt=\"screen shot 2017-01-17 at 11 45 56\" src=\"https://cloud.githubusercontent.com/assets/7829098/22007000/99e7dad4-dcaa-11e6-92ba-d39a8f234603.png\"></p>\n<p>所以想问一下，网易云音乐 Mac 版的技术细节。</p>\n</div></div>"], "reply": "20", "tittle": "网易云音乐 Mac 版使用了什么技术？", "comment": ["都看到了 start.html 了你还不明白吗？", "我想知道网易云音乐另外一个技术，为什么在 CD 转动那个界面卡顿严重，向下翻页到评论那就好了呢", " 肯定是 Html5 没跑了，但是为什么只有 10MB 不到呢？", "网易的 nej", "不带 cef 了么 linux 和 win 版本都是这货", "我记得 linux 版本的，国外 ip 居然没限制版权", " \r", " \r", "不太了解 NEJ 。用这个东西打包的本地应用不带 CEF 么？", " 对的，实测", " 使用了内置的 webkit 内核。\r", " (这个项目已弃坑，仅仅是参考实现)", "我觉得可能是 qt5 呢", "提一句：这个密码异常容易获取", "同疑问难道没有 CEF?", "mac 上当然不用 cef ，这货打包后体积太大了", "阿卡琳！", "这个 resources 文件应该是核心代码。\r", "Windows 版替换这个文件会使得整个程序的版本和功能发生变化。", "混合编程，一断网连页面都不来", " 求个提示", " string resource", "czh9r3xgGxdaOw9b8qrizM1FWMBQBAztdCDjbYz5r46a97EFQ0uP5c8EL56rqgC38nmlqVBNlHbgGEjToQeRkPcpLQjuQ1y2TNRYW59euPbbLlVQ32saq2j7TdvfZnSe"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>中心思想: 要根据自己周围环境的实际情况选用框架.</p>\n<p>说个事, 最近做外包, 学校项目, 做公众号应用, 打算用 vuejs</p>\n<p>和后端商量了一下做成 SPA. 后端先是一脸懵逼, 然后想了一下, 说: 那就做前后端分离吧</p>\n<p>没日没夜 9/12/7 做了一个月 (再接外包我直播吃屎</p>\n<p>今天发现了个问题</p>\n<p>TM 谁来接手这个项目的前端?</p>\n<p>师弟师妹连 npm 是啥都不知道, 看 vue 文档第一页就看不懂.** 现在师弟师妹最多会个 bootstrap 和 jquery **</p>\n<p>现在老师跟我说, 要么你用 vonic 重写一遍, 让后面的人接手吧</p>\n<p>问题来了:</p>\n<ol>\n<li>\n<p>用 vonic 重写一遍有区别吗? 后面的人接手会简单?\nps: 我怎么感觉根本不可能平滑过渡到 vonic...</p>\n</li>\n<li>\n<p>请问各位外包做完怎么交接?</p>\n</li>\n</ol>\n</div></div>"], "reply": "72", "tittle": "搞前后端分离, 自己坑哭了自己", "comment": ["你这是自己坑自己，和前后端分离没关系", "前后端分离与本案并无关联，倒不如说因为前后端分离，你还有救。", ".... 明显是想多了，坑坑更健康，回头接手的人还是会骂你的。", "那为什么不用 weui+jQuery WeUI ？简单又方便。", "外包就应该简单明了，搞所谓的高新科技都是坑自己啊。。。", "这关前后段分离什么事。\r", "\r", "不会 vue,不会 react 都不是事。\r", "\r", "jquery+backbones 不就搞定了。", "。。。是这样的，现在的前端基本都还停留在 jquery 。。。", "vue 比 jquery 什么的要简单吧", "挑技术栈不要挑自己擅长的，要挑大家都会的", "高数都能过，连 vue 都不会用？看一周够了", " 对, 写 SPA 还难一点, 还不如直接切页面算了", " .\r", "\r", "嗯, 曾经我也是这么以为的, 然后我发现大家情况不同\r", "\r", "接外包用高科技就是在坑自己..", "明显是不愿意学罢了， vuejs 好歹国人出的，文档啥的都很多，\r", "\r", "如果英文可以，还是 reactjs 配合鸡翻好， reactjs 社区还是蛮强大的，有坑都被踩过了，\r", "\r", "npm 的学习曲线并不陡峭，实在不行，上官方的脚手架 就是了，单页的 v-router 也很好用\r", "\r", "\r", "关键还是看项目，，你一个页面如果根本就没几个控件，用户交互一个手就能数过来，\r", "\r", "弄 vue reactjs 搞前后端分离那都是扯淡\r", "\r", "别看网上吹的 vuejs reactjs 神乎其神，实际上根据需求 评估技术团队实力，该怎么来就怎么来", " 跟前后端分离啥事。。", "像 v2 如果有人脑抽 ，现在说要重写一遍，页面功能需求不变，全部用 vuejs 写一遍前端，\r", "\r", "我保证提出这个建议的人要被打死\r", "\r", "像 v2 这样的页面交互需求，两只手就能数清楚，整那么多框架进来，简直就是瞎扯淡 \r", "\r", "最后，千万别听知乎忽悠，搞工程的，就要自己去实践，要前后端分离 可以，先根据业务做个超小原型 demo\r", "\r", "出来试试水，看看 分离不分离的优缺点在哪里", "什么叫前后端分离? 前后端什么时候合体过?", "配合此帖看 ", "\r", "\r", "\r", "还有饿了么的 ", "不知道 npm 是什么没影响。以 webpack 为例，你把架子搭好，把 package.json 和 webpack.config.js 的参数配置写好，告诉师弟师妹开发和打发布时该执行啥命令就行了。他们只需要学会用 vue.js 就行。要真学会全套东西， linux+node.js+express+webpack 还真挺费时间的。", " 前端改页面得看后端脸色的时候", "血的教训", "自己团队的问题，不要误导他人。", "这个案例，前后端分不分离，前端都要有人接手不是？", "前后端分离跟这个没关系吧…", "感觉你换成最原始的 jsp 什么的，然后后来的人就会吐槽这位师兄为什么不用前后端分离、为什么不 xxx 、", " 用 mint-ui 被坑哭了!", " 因为本来想用 jsp 就算了\r", "\r", "q397064399 被吹得神乎其神的框架根本没想象中美好!  用 vue 重新 v2 真的是脑子有坑", "我司新来的一个程序员，也未接触过 vuejs 。我用 elementuUI webpack 搭好框架，他对着文档也能直接撸起袖子干了。", "这跟前后端分离有什么关系？？？", "一开始没分配好谁来做就动手显然是会出问题的，和楼上说的一样，这和前后端分离一点关系都没有，和用什么框架也没关系，实际上这也是一种“就差个程序员”类型的错误……", "说得好像不用前后端分离就不用写前端似的", "我们公司的公众号那边用的 react ，说是跟 weui 配合方便，后台才用的 vue 。\r", "感觉推技术肯定是要考虑团队的情况的，像我们公司 ios 平台的 app 用的 rn ，就是考虑到团队经验不足强推 swift 或者 objc 也不会有好结果，还不如坚持用 rn ，缺点也就忍了", "被 vue 工具链搞懵了吧， 233", "不接地气也是个问题啊。哈哈", "其实感觉你这个还好。我司一个案例，后台系统采用前后端分离，第一版本上线后，运行正常。谁知 cto 说，后台系统不需要界面好看，要做到没有前端参与也能写。于是，又将前后端合在一起开发了。。。。。", "只能说接的人智商不足", "刚开了个新坑 考虑到公司都是写 java 的 果断没上 redux 还是用的 event emit 感觉良好", "做新人培训，只会 jQuery 现在在市场上找不到工作的。再说 vue 的学习成本很低的，楼主把项目使用的技术点解释清楚即可。", "我想说，不分离你就不用写前端？\r", "只能说你选了个不熟悉的前端框架坑自己", "外包不要搞太好，最后坑死自己。\r", "在安全稳定的前提下，能多简单就多简单，怎么省事怎么来", "很多前端只顾自己刷简历好看不考虑实际情况，在大家对 mvc ， mvvm 毫无概念的时候用 vuejs 啪啪啪写完了，然后发现，艹，没人能接。。", "vue 两小时上手半天放弃，坑！\r", "\r", "reactjs 三小时上手，三天做完。", "跟前后端分离无关，跟你的队友有关，哈哈", "前后端分离没关系 +1", "确实和前后端分离好坏无关，  和 Vue 好坏无关，  和 jQuery 好坏也无关，是你没考虑你这项目的维护性.....   私以为如果你是公司项目 你一个人做前端这样还好了 至少可以说是为了项目以后扩展性，但是外包就不至于了吧 搞这高大上吃力不讨好啊", "前后端分离本来就是对团队要求较高的，人员也是成本，维护也是成本，看自己权衡了~", "开心就好，学弟学妹让他们自己折腾。 vue 门槛本来就不高", "vue 直接就对着文档开干了。还需要学？", "会前端的看不懂 vue 的文档我就表示，一定是他们的水平不行，开了再招人就可以了。", "推荐看下这篇老文，司徒正美谈前端技术选型\r", "vue 上手真的不能更简单了 多找点教程看看。。发俩入门教材给你\r", "\r", "还是 lz 太年轻 - -", "npm 还需要什么学习成本，就当包管理工具用，配合 package.json 构建、测试和部署都能直接操作，这都懒得学，那还是别当程序员了。", "要是我，直接前端 bootstrap3+jquery,后端 springMVC ，妥妥的大家都会", "我在学校也想这么做项目，但是得考虑团队的接受程度和学习能力啊。。。\r", "所以还是走老样子吧，这东西自己搞搞还行，尤其是同学关系，你指导他们也不愿意听的。。。", "这是如何在做项目的同时为未来储备人才的问题吧？与选型什么样的技术没什么关系，就算你选了 jQuery ，问题也会变成，学校教的全是 Java ，完全没有会 JavaScript 的学弟", "npm 也要学？前端开发谁没用过。。。前后端分离， REST 风格架构已经好多年了。", "和题主情况一样，不过我已经忽悠学弟开始学前端了~23333", "敢于尝试是好事", "这是前后端分离史上被黑的最惨得一次", "除非你的前端比淘宝还复杂，否则 jquery 绝对能胜任。", "vuejs 需要会 npm 吗？\r", "前后端分离和 vuejs 有必然关系吗？\r", "bootstrap + jquery 就不能做前后端分离吗？", "Bootstrap + jQuery 也能前后端分离呀。 Vue.js 比 jQuery 还简单吧", "这不是说反了，明明 vue 撸页面比 jquery 撸页面简单，它们的区别就像电脑打印机与橡皮铅笔一样。", "两耳不闻前端事，一心只搞后端基", "这是 vue 在 v 站上被黑的最惨的一次", "分离最重要的是接口统一化", " \r", "\r", "吓得我再去喵了下 vue 的文档…………\r", "\r", "发现我对简单的理解可能错了。", "vue.js 发现真的很简单 没搞定估计是中文理解的问题 毕竟理解能力不同 个人认为 vue 的 doc 写的真的很明白 要是简单逻辑 jquery 完全没有问题", " 瞎说什么大实话 ;)", "spring MVC + react 路过， react 拿来写复杂的组件，比如需要通过 ajax 获取数据的，其他的都是用 jsp 来写", "既然都外包了，还有后续人接手？不都是一次性项目吗？要加功能就给钱带你加功能这种？", "接外包请用成熟的技术，进度可控，风险可控。"]},
{"content": ["<div class=\"topic_content\">虚拟化现在的主流厂商是 vmware ，思杰，微软(hype-V)，红帽(kvm)\r<br>\r<br>一个问题哈，比如说有一些商业软件，很贵的那种，比如 autocad,adobe 家的 photoshop 等~\r<br>\r<br>我买一个高配服务器，通过虚拟化或桌面云的技术，分成 N 个虚拟机，这个软件版权费怎么算？\r<br>\r<br>只买一套给 N 多人用算违法吗？</div>"], "reply": "3", "tittle": "关于虚拟化与正版软件版权问题~", "comment": ["要看软件本身的授权。\r", "\r", "比如 RHEL ，就有两种授权，一种是普通的，按照 CPU core 收费。\r", "\r", "所以你的一个 VM 上给了 16 个 core ， RHEL 会按照 16 个 installation 收费。\r", "\r", "RHEL 还有个是 Vitrual Data Center 的授权，允许给不限数目的 VM 使用。", "以 photoshop 的授权为例， ", " ， 这么做是违法的", "VMWARE 有 CPU 数量和 core 的设置，就是为了应对软件授权问题，设为两个处理器，每个处理器一个 core 的价格更贵些，而单个处理器两个 core ，性能一样价格却会低很多，这种情况针对操作系统多些，例如 windows server ，对于一些专业的软件具体要看授权协议了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题, 见到好几个论坛跟这个网站很像(可以说完全一样), 配色, 动态效果之类, 包括帖子列表显示频繁发帖者, 点进去帖子右边显示时间线之类. 很好看.</p>\n<p>我对前端不熟, 猜测是有那个框架提供了这样现成的模板(难道就是 React, 或者别的框架也可以很容易造出来这种效果? 比如 Angular?), 可以很快撸出来的? 否则为什么大家长得都一样. 请教大家.</p>\n<p>另外这样的网站是不是主要的工作量是不是靠 Javascript 动态从后台拉数据啊, 类似 RESTful 的模式? 传统的后端填 template 然后发送页面到前端的模式, 貌似不太好弄?</p>\n<p>谢谢谢谢, 我在这方面小白, 问题有点多.</p>\n</div></div>"], "reply": "8", "tittle": "请问 ", "comment": ["这是个论坛，开源项目，叫做 discourse", "客户端的，点右键看源码。", "后端是 Rails ，前端是 Ember.JS", "查看源码的话可以看到：\r", "<meta name=\"generator\" content=\"Discourse 1.7.0.beta6 - ", " version 753a65833a8ae8839dc7eb2692fe14dde069b8b2\">\r", "\r", "所以如 1 楼所说，用的是开源的 Discourse ，项目地址： ", "![]( ", " )", "好吧，我来回答。。。\r", "\r", "\r", "\r", "chrome 上有一个插件： wappalyzer ，可以看到当前标签页里的网页有用到哪些技术，就是 6 楼 @", " 的那个，插件地址为： "]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>网上收集到的知乎用户动态数据，数量大概有五万，包含了计算机主题下所有子主题所有最佳回答者<br>\n已去掉敏感信息,共享给各位兄弟作研究之用<br>\n<a href=\"https://pan.baidu.com/s/1eS7OpV0\" rel=\"nofollow\">下载链接</a>\n密码 8pj2<br>\n如果使用 scala,可以使用 json4s 来解析出数据,相应的 case class 在 README.txt 里面</p>\n<p>PS: 杭州有哪位大大的公司招聘数据分析菜鸟(是数据分析不是数据挖掘)吗？两年半嵌入式 linux 开发经验<br>\n会 pandas,SQL.底层的东西厌倦了，想多接触业务</p>\n</div></div>"], "reply": "5", "tittle": "共享一下收集到的知乎用户动态数据，大约五万用户", "comment": ["这简历还行", " 哈哈  兄弟是在挖苦我吧\r", "ps: 帖子差不多一天了，这么好的东西才一个回帖 真是心寒 :)", " 你要是做个网页版能直接看查询分析结果估计狗们闻着肉香就来了", "来一份简历看一下 ", " 现在还在老家    \r", "可否到了杭州再发简历？"]},
{"content": ["<div class=\"topic_content\"><img src=\"https://ww2.sinaimg.cn/large/006tKfTcly1fbuiv8b426g30ag05wqv8.gif\" class=\"embedded_image\"> \r<br>\r<br>如图\r<br>\r<br>命令是：\r<br>convert -coalesce name.gif -gravity SouthEast -draw \"Image Over 0,0 0,0 watermark.png\" output.gif\r<br>\r<br>测试源文件：\r<br>\r<br><img src=\"http://ww4.sinaimg.cn/mw690/70f86863gw1fbpx3dtsg4g20ag05wx5g.gif\" class=\"embedded_image\"> \r<br>\r<br>求解决办法，谢谢</div>"], "reply": "11", "tittle": "imagemagick 水印 gif 时候遇到的问题（内详有图）", "comment": ["效果很好，看这猫被水印吓的翻了个身", "convert -coalesce name.gif -gravity SouthEast  -geometry +0+0 null: watermark.png -layers composite -layers  optimize output.gif", " 哈哈哈，有趣\r", " 大神好厉害。。。话说这个是什么原理？", "  应该是 Gif 是由多个图层组成.加水印的也要加在各个图层上.\r", "如果在 Mac 上使用 预览应用打开 Gif 图的话,它会在左右列出组成的各个图层.", " 为什么原来的代码就不行呢", " 补充一下，忘了说了，只有一部分 gif 会出现这种情况，还有别的都是很正常的打上了水印，如果是图层的话应该是因为有的图层比较小。只是不知道这两个命令的原理区别。", "gif 分帧，再上水印，再合并", "源文件画质很差啊，楼主处理过的感觉更好，除了那个水印", "可能因为 gif 帧大小不一样", "   ” gif 帧大小不一样“ 正解。这会导致水印位置漂浮不定 又加上透明。 换个图层合成方式就好了", " 哈哈哈哈"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>例如：我买了一张 G4775 ，从上海到南昌西\n然后我想查一下什么时候到南昌，那我就需要知道这辆车的时刻表，请问大家有这个样的 api 吗？</p>\n<p><img alt=\"\" src=\"http://i1.piimg.com/567571/b136c9de7fc4d475.jpg\"></p>\n</div></div>"], "reply": "26", "tittle": "火车票的时刻表查询接口，大家有知道的吗？", "comment": ["12306bypass...自己抓包也没那么难吧", " 大哥， 12306 的链接里面有个 train_no 这个是随机变化的，另外 12306 的查询接口要验证码。", " 谢谢你！", "好巧。。我买的就是这趟列车", " 这个接口下线了。", " 这个接口下线了", " 是嘛，你到哪里", " 能提供一个返回 json 的吗？", " 上海到南昌", " 尼玛 这么巧", " \r", "这种简单的 html 页面的你直接找个 htmlParser 解析不就好了。", " 握手，我是 26 号出发的", " 不是太明白，能详细说说吗？加我微信吧  convertxy", "  找到 data.queryLeftNewDTO.station_train_code=='G4775'的那条， arrive_time 就是到南昌的时间", " \r", " \r", "\r", "我也这班车哈哈， 25 号。", " \r", "楼上给出来的这个网址 ", "\r", "请求参数 trainNum 就是一个车次，你直接一个 get 拿到网页数据，然后解析 html 格式的网页就能这个车次的时刻表了。", "要不，你写个正则提出来也行啊", "这个不是在手机 12306 客户端里面就有时刻表吗？", " 恩", " 我 23", "我是自己用提取的。\r", "\r", "\r", "用这地址返回的参数。", " 我的做法是造出了那个请求链接。你的思路也很有启发性！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>怀着一番热情想要研发一款开源的聊天机器人，但手中只有一台公司配的 mac ，每做一次训练要三四天的时间，想要购置一台高配 GPU 的台式机却囊中羞涩，租阿里云的 GPU 一小时收我 20 块钱，每用一个小时心里都在滴血，于是有了一个想法\n<a href=\"http://www.shareditor.com/blogshow/?blogId=122\" rel=\"nofollow\">http://www.shareditor.com/blogshow/?blogId=122</a></p>\n</div></div>"], "reply": "79", "tittle": "满腔热血：在家里搭建一台 GPU 云服务共享给人工智能和大数据爱好者", "comment": ["然后被拿来挖矿了", "然后楼主跑路了哈哈哈", "楼主的意思， 800 个人，信任你，每个人给你 9.9 ，然后你拿着 8000 块钱凑台服务器？给每个人用仨小时？首先人家凭啥信任你，其次你的网络质量如何，服务器稳定性如何，管理系统是否可靠，客户的数据安全能否保障？而且你这也没有可扩展性，可延续性。别的方面，不说后续的， 800 个人，每人 3 小时， 2400 小时，后面的人这要排三个月都不止？", "你们好不容易找到的车牌，楼主每天回家就能看你们的车开撸， 233", " 他面向的应该是玩神经网络的人，玩字很重要，因为可以回避很多问题\r", "\r", "但我还要提一个问题， 3 小时不够训练语料。。。基本训练不了稍微大点的东西。玩玩 neural-style 倒是够了。\r", "而且写控制台页面和接口会消耗巨大的精力，考虑到安全性和易用性，我也觉得你应该放弃。直接放个捐款页面就好。\r", "如果硬要做，还提一个，散热必须做好，室温 15 度拿风扇吹机箱拖个 1070 还 80 度的老机箱真是心疼。", "相对写 gpu 计算的程序，有这个时间和精力考虑这个，买个 1080 也不贵啊", "这居然是个成年人的想法", "买个神舟笔记本。。。", "有点意思啊  我之前也算过一笔账， 4 核 16g 内存 ECS 一年费用 8000 多，都够我买一台高配物理机了.", "于是我买了一台 Alienware 15R2 ，平常放在家中，网络唤醒， Windows 宿主机远程桌面进行 GUI 操作， CPU 型计算在 Virtualbox 虚拟环境中隔离进行，需要的服务通过路由器端口映射出来.", "我顶楼主，共享经济和虚拟化不是什么天方夜谭。", "然后开发一个共享平台，然后数据 p2p 传送，然后通过共享平台操作。", "你家的取暖器不错啊", "\r", "还不如在这里添加一个项目", "突然想到那个 [每天多学习 1% 的时间，推导出可以每天学习 25 小时] 的埂……", " 为啥不买个 server ？", "这个想法老早就想过了，之前还写在了市场营销课的期末作业里面去……这个想法是很不错，但是有很多问题的：\r", "\r", "1.当时我算了一下，如果商业化运营，光是初始投入都已经天文数字了。后期维护又是一笔费用。\r", "\r", "2.营销重点在 gpu ，而 gpu 技术迭代太快，也就意味着差不多每两年需要更新硬件，成本远比 CPU 要贵得多。深度学习是很吃 gpu 的。也就意味着对于用户来说，长期上其实并不划算。而且基本上都是用老黄的核弹，价格也是核弹级别。当然，如果能写个成熟的完美支持 a 卡的 ML 库的话，说不定农企会和你 py 交易一下。\r", "\r", "3.自己也弄 ML 业务，把自己深度学习的平台放在自己的云上面去，充分利用资源，摊分成本，对用户来说更为好。可是自己 ML 业务又是更多的成本，增加运营难度。\r", "\r", "不过当时写这想法时候， alphago 还没战胜人类。感觉当时 ML 还不如现在火。或许现在弄也许会成功。╮(╯▽╰)╭", " 9 块 9 你买不了吃亏， 9 块 9 你买不了上当", " “ 3 小时不够训练语料”，你提醒了我，这里有商机啊", " 街头放个钱箱弹唱卖艺的多数都是开着宝马过去的，重点在于成就自己成就大家", " 成年人的心思不懂了吧", " “通过路由器端口映射”，这个有文档说明吗？分享下吧", " hiahiahia, 你是资深人士，我懂了", "有话直说：一个 GTX1070 解决不了的问题，买 4 路泰坦同样解决不了~", " 你很有想法，我看好你", "买 100 台神舟笔记本......不管想法有多糟糕,支持你 哈哈哈", "如法炮制，我有 9.6G 妹子图（性感 自拍 日台）， 9.9 包邮谁感兴趣 2333", " 9.9 毛的话我可以买 96G..", " \r", "你没看懂我的意思呀", "我感觉至少先是买了设备再说分担租用 比先众筹再买会好很多 9.9 招 800 人 别人等的时间都把活干完了", " 开个玩笑 =.=别认真~~其实我硬盘满了~#手动滑稽", "楼主貌似忘了一点， 花 20 元可以随时上机， 在你这只要 9.9 但是得排队呀。\r", "另外，看了楼主这系列的文章受益匪浅， 不过好多内容过于简略， 不上不下， 有点难受。", "  看起来你的聊天机器人是 seq2seq 。\r", "我也在关注自然语言处理的相关内容， 不过不是聊天机器人，而是文章分析提炼敏感内容。最近查阅了一些 RNN LSTM 的资料，感觉没有太好的实现模型啊。", "不是连着网给别人用就叫“云**”的，你这顶多是个上世纪就有的时分系统", "原谅我家网络差，几分钟了 lz 的网站还是打不开", " ", " server 的需求不大，主要是充分利用我的高配家用笔记本. 平常在家可以玩游戏办公，开发的时候有需要就通过公网访问 virtualvox 里的虚拟主机", "且不说其他， 1 小时 20 块钱那个性能是你这组的多少倍？\r", "总共 8000 块钱，人家预付给你，有人要排三个月的队用三小时，最后机器归你，这小算盘打的真牛逼……\r", "\r", "三个月一个节点净赚 8000 ，这买卖阿里云估计都口水流一地……", " 这个不错", "楼主的网站很不错", " 重点根本不是 GPU ，是网络带宽，我的训练数据 20G ，拿什么传给他？", "楼主博客不错，收藏了。", "其实我觉得一般人电脑还是有的 真有兴趣搞这个花个一两千买个卡来玩玩也是可以的", " 哈哈，顺丰到家，快递开门😃😃😃😃", " 这是什么网站啊？", " 蓝盘 顺丰 23333", " 搜一下 sixa 怎么难吗。", "看了楼主哥们的博客，对于 8K 而会囊中羞涩 表示非常不可思议。。。", " 刚看了是用亚马逊。", "这个行业都存在多少年了\r", "楼主听说过 GPU Farm 么\r", "都是按几角钱每核心每小时的起价算。。。\r", "还只按运行时间算钱\r", "\r", "至于阿里 20 一个小时的机器\r", "起一个等环境搭好一天都过去了\r", "它不是这么用的啊", "ucloud 的 GPU 云主机看了下好像只要 4.76/小时 不过貌似要提工单开权限。利益相关：俺是 u 厂的。\r", " 说的对， GPU Farm 存在了那么多年了，以前看美院的同学用的比较多。不知道现在能不能用在 ML 上。", "看 lz 的博客这么厉害 怎么买台电脑的钱都没有呢...", "供个参考吧.  我现在用的训练机子是上图，训练满载时风扇隔着一扇门都能听到，同时散热还是专门找人设计的风道，用的大型 tower case 。\r", "\r", "nlp 中 seq2seq 相关任务，在这样的机子中，需要 2 ～ 3 天才能收敛到一个较好的 performance 。 在众多模型中，选出一个能用，至少要做 30 ～ 50 次训练。不止这样能否让楼主的热血冷静些", "共享的还满腔热血？有多少热血？", "无 GPU 不机器学习，有 GPU 赶紧下个 stream", "说的我心痒痒的，我想众筹买个房。", "这是否说明，做机器学习是没钱途的", " 最有钱途的是 nvidia", "玩这个 8000 你都不想出？", "LZ 只是不想自己出钱，顺便动了下脑筋，来到这里看到大家不买账，不过我觉得别处还是有人买账的啊哈哈~", " \r", "我对这行一窍不通\r", "这个训练操作时候 CPU 和 GPU 都满载么？ CPU 和 GPU 的性能要求都如何？对存储介质 IO 的速度要求高么？\r", "我这单位倒是有大量带宽，不要钱的电力，基本硬件也不贵哪去，还有大量淘汰的服务器 CPU 可用，也就是需要自己采购 GPU ，可以搞搞这个玩玩。", " 基本上都是满载。对性能要求挺高的。 GPU 起码要 Tesla P100 的级别了吧。", " \r", "硬件满载可以预计\r", "\r", "CPU GPU 同时满载是同时跑不同算法还是拆分同样任务？\r", "想了解一下调度细节 还有对存储访问速度的要求", " 我们没有 gpu ，只在集群的 cpu 上跑。\r", "\r", "数据并行或者任务并行都有相应的并行算法，不过数据并行相对简单一些。\r", "\r", "核心可以简单理解为一个迭代优化的式子，目的是使参数收敛。就好像求抛物线的那个最小值，一点一点求梯度，一点一点逼近。\r", "\r", "同步异步算法都有，太快了收敛性不好，收敛稳定的速度会很慢，所以有的时候需要具体问题具体分析，根据不同算法的特点进行平衡。\r", "\r", "存储访问指的是内存还是硬盘？我们是都读到内存里的…… 内存肯定是越快越好，另外如果跨节点需要相互通信的话这个地方也容易成为瓶颈，所以我们用的 infiniband 。", " 自己淘个二手 750ti 来跑一次就知道了。\r", "\r", "训练时 gpu 满载， cpu 空闲，硬盘 IO 根据数据集而定。\r", "\r", "一个显卡不能同时跑多个训练，所以众筹肯定不靠谱的。", " \r", "现有常用 X86 架构下， RAM 最大也就 192G 了，不知道这些训练算法本身是否极吃内存。毕竟感觉这种学习数据源可能动不动就 80G 的\r", "很多纯计算领域内存都是爆炸的利用，反而不太敢把原始数据都拉到内存里面去\r", "只是粗略的想了解一下通用领域的这种性能的机器的实际开销模型\r", "\r", "感觉看前面的意思 可能并不吃 CPU 只是非常吃 GPU", " \r", "单位硬件很多， Tesla 也不是不能借一块过来临时用用，还是基本一窍不通的问题，先了解了解模型，做做硬件结构设计的估算", " 关键放家里噪音问题是个大问题，我前两天把家里 660Ti 老电脑收拾出来组了个 raid 想做爬虫+舆情分析服务器用，结果因为噪音太大被女朋友否决了🙅", " 从回复来看，你对 deep learning 这块了解不足。 学而不思则罔嘛，个人建议是不要想太多，找几个热门模型直接上手体验。", " 单结点 64G 内存，多结点就很多了，一部分一部分加载到内存也不是不可以，就像外部排序那样，不过应该避免等待读数据，我嫌麻烦一般都是直接全读进去的。\r", "\r", "吃 CPU 跟吃 GPU 区别不大，吃的都是计算资源，只不过一般都不喜欢 CPU+GPU 混合编程，单独对比 CPU 和 GPU 可能 GPU 性价比好一些？不过我确实没用过 GPU ，说不准。\r", "\r", "单位硬件多的话可以拿现有资源组个小集群试试，有没有 GPU 都能跑。", " \r", " \r", "\r", "我并不是想介入这个领域去搞点啥\r", "只是想了解这块对硬件的需求和使用率等一般情况，有个初步认识\r", "因为可以预见到未来会有需求 需要让我搭建这种环境去跑点啥东西", " 嗯，我对硬件的理解是性能好就跑的快一些，性能一般就跑的慢一些，同样需要迭代循环 10k 次，差别就在于哪个的单次循环快。另外核心多也相当于并行了。\r", "\r", "我以前在 2010 年的惠普本上装 caffe 一样跑，现在在集群上跑无非快一些，也有土豪在单机上装四路泰坦或者组 GPU 集群的。都能跑，看你们是想跑的有多快。\r", "\r", "另外机器学习的任务主要是训练模型的时间长，模型训练好了之后实际做分类预测之类的任务花的时间就不长了，资源利用率高不高主要看你们这方面的任务多不多。\r", "\r", "所以我觉得如果不是专门搞这个方向的话，不是很有必要新买一堆 GPU 卡。", " 192G 是怎么得来的结论？", " 该除除灰了～", " \r", "不是结论 是通行的不特意砸钱的服务器（一般是双路）基本最大都堆到 192G 不产生非线性成本", "aws g2.2 large 每小时 0.7usd\r", "我在用这个", "如果是 gan 网络，我觉得硬件成本还要加", "楼主的链接访问不了啊，是不已经被 v 友玩坏了", "Azure 现在也有 GPU 主机了， NC 系列是 K80 ， NV 系列是 M60 ，其中最便宜的是 NC6 ，每月$493.83 ，平均下来每小时$0.686 ， 6 核心 E5-2690v3 ， 56G 内存， 380G SSD ， 1 x K80", "[接上面]\r", "最贵的是 NV24 ， 24 核心 E5-2690v3 ， 224G 内存， 1.44TB SSD ， 4 x M60 ，每月$2172.85 ，平均每小时$3"]},
{"content": ["<div class=\"topic_content\">在上家公司通过了阿里云 ACP 的认证，看文档的时候看的自己冷汗直流哈~\r<br>\r<br>我感觉公有云会抢许多运维的饭碗，至少是很多中小公司初级运维的饭碗，甚至是架构师的饭碗~\r<br>\r<br>负载均衡，自动扩容， mysql 主从及分布式，搜索， ELK ， nosql ，安全，监控，块存储，文件存储， CDN ，大数据等~\r<br>\r<br>阿里把常用的功能或软件，拆分成一个一个细小的模块，再配合友好的界面，大多数是可视化操作，直接在网页上点点点就完成了~</div>"], "reply": "31", "tittle": "感觉公有云会抢许多运维的饭碗，甚至系统或运维架构师的饭碗~", "comment": ["用工具和理解工具后的原理是两回事。不然出问题时，就不知道怎么解决了。", "说实话，再过 10 年吧，软件这行业大概应该能发展到所有东西都自动化的程度。\r", "到时候只需要一些操作工程师和计算机科学家，而不需要什么程序员了。直接生成代码这种事情实际上在很多行业比如汽车行业，早就实用化了。根据设计图就可以直接生成代码。\r", "\r", "\r", "小程序，运维自动化，这些都是朝编程越来越简单无脑这个方向在走。", " 解决不是有阿里云工程师吗", " 软件自动化,那系统运维呢", "解放这些人的双手，让他们可以去考虑更高层次的问题", "这是大势趋势，自动化、流程化、微服务化", "技术差的“运维”的工作会被抢，技术好的运维会被抢着要.", "嗯，初级没人要，没人入行，高级的抢都抢不到", "有危机感是对的，会淘汰大部分初级工程师", "Google Sre 的工作模式差不多就是未来运维的工作模式。", "那就开一个吧", "这类公有云服务也需要运维，饭碗并没有被抢、只能说是集中到了别的地方。\r", "\r", "而且，好的技术员(运维 or 架构)要保饭碗肯定不仅仅只靠专业知识、还要看自身综合实践能力。", " 赞同，将来大家都期望空中楼阁。", "的确是这样的， 机器取代人。 比如现在再培养一个围棋选手，意义已经不大了。", "其实我也觉得过几年有可能初级没人要，高级招不到。。现在的小型企业很多都有用云了，做游戏的用腾讯云，电商的阿里云等等。。估计过两年运维培训机构都不好忽悠人了。", "大一点的也会上私有云，整个运维都是一体化方案了", "所以运维需要学习的更多了", " 说到 一体化方案， 看看 我们这个能行不  ", "我一点也不觉得这些在抢我们的饭碗，这些东西也是需要有人来维护的。不是公司用上了就行了，你需要针对你的产品去逐渐了解和优化这些东西。举个栗子，同样是装系统，新手和老手装出来的性能和安全性就不一样。不是按照文档操作安装完了就完事了。", "不会， 由于成本。\r", "真正用过就会发现还是有点贵的。。。", "不会。\r", "\r", "全在公有云上的运维表示一样累。", "会省一些事,特别对小公司来说,维护这些公有云也是运维的活", "公有云相当于把运维外包了嘛。大公司应该还是会选择自己架。", "原来根本不存在运维这个岗位，都是技术总监自己随便捣腾几下。以后有了运维，主要是这一块需要有人长期经营，我认为以后一个经验丰富的运维不会失业，因为不管阿里云多牛 X ，公司还是希望有人去用心经营运维。", "所以过去运维和系统管理员折腾本地和自己机房的设施，现在都转向折腾共有云端的基础设施。\r", "\r", "只是玩耍的平台从需要自己跑机房变成远程在线直接搞了，也不用扛机器+跪着爬着抽插线缆了。\r", "\r", "别以为有了公有云，任何一个会开关电脑的人都可以轻易给公司组建维护应用平台了。\r", "\r", "云公司技术支持，高级的也是要花钱的服务，且也没人 /团队专门一路跟着你家业务服侍啊。\r", "\r", "虽然 aws 技术超给力，还是通用 /平台本身技术支持；可以提供架构和方案咨询，自家应用平台还是自己人更熟悉啊。\r", "\r", "正常(良心)共有云不掌控任何客户敏感信息 /帐密, 客户自己应用平台里出了问题，公有云可管不了。", "[公有云相当于把运维外包了嘛。大公司应该还是会选择自己架。]\r", "\r", "公有云是把底层硬件软件和常用软件服务的维护给外包了，客户自己私有的架构设计组建，还得自己维护。\r", "\r", "类似：乐高公司提供功能多样可靠的玩具模块，怎么搭配调节，还是得玩家自己来搞。\r", "\r", "当然，若只是跑个最普通的 web/wordpress 这样的货 ，那是可以有云端一键方案。", "aws 的 server less 也是个很好的方向，运行时系统完全自动维护自动伸缩，搭配 aws 自家的完全托管的存储和数据服务，只要按它 sdk 的编码规范玩，几乎是可以不管机器和架构，只要安心写业务逻辑代码就是了。", "看过 Google 的 SRE 吗？\r", "\r", "自动化是永远跟着需求走的，大量公司千篇一律的需求自然可以用千篇一律的公有云方案。", "值得一提的是， 我司除了 200 多个实例用的是云， 很多自动化的需求都是运维开发实现的。。", "我们公司做的是企业级定制云 PaaS ，还能混混。。。", " 感觉很好地展现了 amazon 的技术水平。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>尝试了各种方案：</p>\n<ol>\n<li>ttyrec + tty2gif/ttygif ：时间长了后，生成 gif 太慢，效果也不是很好</li>\n<li>LICECap 工具录屏生成 gif ：效果不尽如人意，画质太差</li>\n<li>ttystduio: 画质也不是很满意，而且生成文件很大</li>\n<li>mac 自带的 qucktime 录屏 mov + ffmpeg 转 gif + convert 优化 gif 大小：最后的方案</li>\n</ol>\n<p>mac 自带的 qucktime 还是很强大哦的，直接选取需要录屏的区域，直接进行录制就行了，最后生成 mov 文件。。</p>\n<p>但是用默认的 ffmpeg 参数直接转换成 gif ，画质很差，后来终于从老外的 github 上搜了一段脚本（原始 url 找不到了， = =）。。</p>\n<pre><code>#!/bin/sh\n\npalette=\"/tmp/palette.png\"\n\nfilters=\"fps=$4,scale=$3:-1:flags=lanczos\"\n\nffmpeg -v warning -i $1 -vf \"$filters,palettegen\" -y $palette\nffmpeg -v warning -i $1 -i $palette -lavfi \"$filters [x]; [x][1:v] paletteuse\" -y $2\n</code></pre>\n<p>里面通过使用 ffmpeg 预生成调色板，来提高 gif 的画质，并且通过设置缩放比率、帧率来压缩文件大小。。</p>\n<p>使用方式：</p>\n<pre><code>mov2gif  xxx.mov xxx.gif 800 1\n</code></pre>\n<p>这是我这边设置的参数，由于我是录制终端视频，帧率设置为 1fps ，就已经足够了，不然文件太大。。</p>\n<p>然后再用 convert 进一步压缩 gif 大小：</p>\n<pre><code>convert xxx.gif -fuzz 5% -layers Optimize xxx2.gif\n</code></pre>\n<p>如果不加<code>-fuzz 5%</code>，优化粒度不大，这个参数可以将图片附近区域相近的颜色合并成相同值，进行压缩，通过这行命令，基本上可以继续压缩 50%的大小（对于终端视频，大块颜色都是背景色）</p>\n<p>最后，晒下我这边的录制效果（顺带打个小广告 ：）</p>\n<p><a href=\"http://www.tboox.org/cn/project\" rel=\"nofollow\"><img alt=\"usage_demo\" src=\"http://www.tboox.org/static/img/xmake/usage_demo.gif\"></a></p>\n</div></div>"], "reply": "16", "tittle": "mac 上制作终端演示视频并生成 gif", "comment": ["赞一个", "其实给别人演示用 asciinema 足矣呀\r", "你录制的那个帧数像是幻灯片一样\r", "一定要 gif 的话我一般用差不多这类参数，稍作微调\r", "\r", "-r {5-15}\r", "-b:v {<=500k} \r", "-maxrate {<=1000k} \r", "-pix_fmt rgb24\r", "\r", "效果类似这样（ ", " ）：\r", "steam 上 有个软件 叫 shareX 免费", " asciinema 我也用过 录制效果不错 还能上传到他们的网站 但是需要跳转过去才能播放 加载很慢 弄成 gif 有即视感感 可以直接看 嵌入 readme 效果不错 帧率低点 无所谓", " 回头我试试 谢谢", " 我录的比较长 你那些参数录制的 gif 文件会很大", " 1.7MB 好大啊", "嵌入 readme 的大 gif 比 asciinema 加载更慢=。= (github 的话）\r", "展示 terminal 而非直观展示界面的话， asciinema 的文字更直观。\r", " \r", "\r", "非要用 gif 图的话， gifsicle 试过没", " 因为帧数高， 1 帧每秒的话只要 200K\r", "在我看来在 V2EX 发主题和回复 5MB 以下的 gif 都是合理可用的，我不会为了压缩而牺牲质量，当然如果支持\r", "\r", " 还行吧，实际长度超过 15 秒的录屏我觉得 gif 并没有什么优势", " *如果支持 asciinema 嵌入回复的话，我肯定不会在 V 站用 gif 呀", " 没试过 一会我试下 谢谢", " 我看了下 gifsicle 貌似只是个 gif 的合并 编辑 生成工具，有点类似 convert 。。没法录屏", "github 上超过 2m 的 gif 。。我之前试了下。。 github 很容易缓存到一半，就再也加载显示不出来了。。 = =", "是的， gifsicle 优化的 gif 好像比较好.", " 哦哦 我试试。", "我用的是 Snagit ，挺方便的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>看代码整洁之道，有提到：</p>\n<blockquote>\n<p>函数应该做一件事，做好这件事，只做这一件事。</p>\n</blockquote>\n<p>书中也说了：</p>\n<blockquote>\n<p>判断函数是否只做了一件事，有如下 2 种判断方法:</p>\n</blockquote>\n<ol>\n<li>函数是否只是做了该函数名下同一抽象层上的步骤；</li>\n<li>看是否能再拆出一个函数，该函数不仅只是单纯地重新诠释其实现。</li>\n</ol>\n<p>看的时候感觉有些疑惑，自己知道函数应该只做一件事，但是该怎么去合理的划分出“这件事”？\n同一抽象层又该怎么去定义？</p>\n<p>再比如说有个初始化系统的函数，他肯定会调用多个其他函数，比如初始化内存 /硬件等，那么做什么算是做“一件事”，而做了什么算是超过了“一件事”的范围呢？</p>\n<p>在这儿先谢谢各位啦！</p>\n</div></div>", "<div class=\"topic_content\">感谢各位的回复，让我对这个问题有了更深理解。感谢已发送，这两天一直在重构……</div>"], "reply": "13", "tittle": "函数应该只做一件事，那么该怎么去定义和划分好“一件事”？", "comment": ["没明确标准，可以回归出发点来判断。做好一件事只做一件事情的目的是啥？提高复用，降低耦合，控制复杂度，便于测试维护等。因此可以看看现有代码是否阻碍了这一目标。", "这个还真不好界定，具体问题具体分析", "业务函数和单个功能函数区别，当是单个功能函数就尽量单一，方便测试，假如功能函数测试完成，业务函数的测试就简单了。业务函数当然是各个功能函数的组合。\r", "要思考，不能死读书。", "加入收藏，坐等收获。", "Cyclomatic complexity\r", "\r", "我个人一般会让它保持在 10 以下，超过 10 就认为多件事情一起做了，就重构逻辑。", "然而通常情况下由于习惯好，复杂一点的函数也最多 7-9 ，基本不会等到写完发现超过 10 才重构。", "函数只做一件事情的核心思想是优雅代码和可测试。\r", "让人家一看就明白的代码。\r", "能写单元测试的代码。\r", "例如\r", "saveUserOrder(..){\r", "orderNo=getOrder();\r", "saveOrder(orderNo,...);\r", "saveDetail(orderNo,...);\r", "}", "这么说吧，现在存在两段逻辑十分相似，那么进行脑内假设：如果，其中一段需要修改，另一段也必须做出相应的修改，那么可以判断这段逻辑应该在同一个函数，并且分别由两个地方调用。如果不是，那就不应该提炼出来，保持冗余。", "1. 如果一段代码有两处以上地方用到，那么应该独立出去。\r", "2. 如果某个变量、常量来自其他模块，而且处理这个变量时没有涉及到其他数据， 那应该把处理代码放到对应的模块去。\r", "3. 函数内生成的新变量，需要进一步处理时， 例如：需要用到不方便引用的数据，渲染打印，文件 IO ，数据库存储等，考虑将代码独立出去。", " \r", "我也同意这个, 之前没写过测试的时候对于这个问题也很费解.\r", "其实 TDD 一定程度上解决了这个事情, 如果你发现业务代码根本无法写出测试来, 那么就重构到能测试为止.\r", "测试方法不应该向一个迷之黑盒中扔几个参数然后期待奇迹发生.", " 可能他们没有接触过 TDD 。", "个人观点：\r", "\r", "要相信代码是给人看的，只是顺便让机器来执行，所以可读性第一。\r", "\r", "基本方法是分层和解耦，每一层能一目了然就好，例如：\r", "把大象装进冰箱里的程序。\r", "主函数层是这样几步：\r", "1. 把冰箱门打开；\r", "2. 把大象装进去；\r", "3. 把冰箱门关上。\r", "其中引用了三个函数，拿函数 1.“把冰箱门打开”来看又细分为如下步骤：\r", "1. 找到门把手；\r", "2. 判断把手的触发类型；\r", "3. 将门把手调整为开门状态；\r", "4. 判断门是朝哪个方向开；\r", "5. 打开门（返回）。\r", "\r", "这些没有硬性的标准，是纯粹主观感知的，自己写完可以看一遍，通过篇幅、分段（块）等自己判断一下是否足够“一目了然”。\r", "\r", "判断是否是“一件事”本身是无法精确实现的，全靠对函数的主观定义，比如如果我把函数定义成“打开冰箱门”，那这个函数就只能做打开冰箱门的事情，但如果定义为“开关冰箱门”就可以用来开或关冰箱门，这确实也可以理解为是“一件”事情。\r", "换个角度来说，对于函数的规划是根据需求来不断变化的，所以做项目的时候要关心这个功能以后的发展方向是什么样的，然后根据对未来迭代对这个功能的修改进行适当的扩展性和维护性的设计，以后需求变成这样的话这个函数是否好改，改完后是否还能保持较好的扩展性和维护性。这需要经验。", "其实我觉得正确的姿势是先写代码，完成功能最大。然后开始逐步优化重构。\r", "\r", "这种事情做多了，就可以跳过写功能代码的步骤，直接上模块化的代码。能做到这个的，不是大神也是大拿了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>之前一直用 Atom 写纯前端的东西，偶尔会用 Sublime / VSC ，</p>\n<p>最近准备写 Node ，刚入手没什么经验，大家能推荐下 IDE 或者 编辑器 吗？</p>\n</div></div>"], "reply": "52", "tittle": "大家写 Node 一般用什么 IDE / Text Editor ?", "comment": ["vsc 的 node 调试器非常好用。", "vsc 可以智能补全几乎所有第三方库", "vsc", "WebStorm", "WebStorm", "WebStorm 很好", "我们 vsc ｜ webstorm 各一半", "VS Code + Code Runner Extension: ", "\r", "不用任何配置，直接运行 JS", "WebStorm 宇宙第二 IDE", "vs", "vsc", "vs 很好，写扩展很方便。插件越来越多。", "为啥我感觉根本不用换 IDE 。。 和前端一样样的。。。", "看你是啥水平和啥工作环境了，普通的没啥门槛， 原子编辑器就行。", "要是 debug,工作流，版本控制，问题追踪和任务，又不爱想折腾配置， jetbrains ", "的绝大多数 ide ，都附有完整版的 webstorm 功能。", "vscode + typescript", "WS", "sublime ，好用飞起", "直接将 sublime 用到的快捷键调成和 xcode 一样。", " 第一是啥...", " VS 啊（逃...", "不管中途尝试了各种编辑器（ vs code ， sublime ），最后我还是会到 Webstorm 的怀抱", "WebStorm 宇宙第二 IDE", "vim", "Webstorm 集成了非常非常多的工具间.", " visual studio 啊", "VIM.", "没有 atom 的么。", "Sublime Text\r", "Brackets(启动比较慢,前者秒开)", "vim", "Brackets +1", "sublime 插件比 vsc 丰富，关键快", "继续 atom 啊", "vs code +1", "webstrom + typescript", "只有老夫一人用 intellij 吗？。。。", "一直用 sublime ，觉得挺好的", "恐怕 atom 。", "写 coffee ， vim + syntactic + coffeelint 。\r", "\r", "一个同事原来用 Windows + webstorm + svn ，现已经被我带到 Linux + vim + syntactic + coffeelint + git ，因为我要求他提交的代码都通过 coffeelint 。", "vim + Spf13 + youcompletme + tern.js + tmux + powerline + node-inspector", "打算长期用 vsc", "vsc 插件全一点， debug 还是 webstorm...", " 哈哈我也是的", "有谁和我一样用记事本的吗？", "sublime 啊, 那么多主题那么多插件~", "vscode 是神器", "图省事用 WebStorm 、 VS Code ，后端前者先入为主，后者能很好支持前端各种复杂的编码环境（如同门的 TS ，结构特殊的 VUE2 ）\r", "喜欢免费开放的用 Atom\r", "喜欢高度定制和折腾的用 Sublime 、 Vim\r", "\r", "以上只是流行的东西，关键用自己用着顺手的就行。", "atom....", "有人和我一样喜欢用 spacemacs 的吗", "WebStorm 大法好", " Vim 写 coffee 没有很好的补全插件啊", " vim 自带补全足够了，代码码的不是速度，用补全不单是为了少打字，而是为了不要打错字。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>自己一个网站，都是自己辛辛苦苦用键盘敲出来的数据，纯原创站，自己很用心在做这个网站，但是说实话，一个新手都可以用火车头不费吹灰之力把我的网站数据全爬过去，其实如果不是谷歌的话，我想了很多种防爬虫的手段，比如：</p>\n<ol>\n<li>js 生成数据，抓取 phantomjs 之类的 headless 浏览器的特征码， ban 掉它</li>\n<li>同一个 ip 短时间内抓取数据太多， ban 掉它</li>\n<li>没有 header 之类的访问， ban 掉它</li>\n<li>检测客户端访问抓取 css 文件没有，没有的话就 ban 掉它</li>\n<li>客户端 js 加密一个 token ，和服务器端公用一个 key 来解密，每次提交都要验证这个 token</li>\n<li>学习Flickr一样，任何搜索结果只显示4000个结果，避免一次性清仓大处理被爬虫抓完了，后台把sitemap所有数据提交给谷歌，但是貌似这样会不会伤及SEO，毕竟内链之间就断开了</li>\n</ol>\n<p>感觉这些合在一起基本可以过滤大部分新手了，但是，这些很有可能把可爱的谷歌爬虫给误伤了，现在服务器端验证 header 为 Googlebot 貌似也不起任何作用，都可以伪造，大家有哪些防爬虫但是不会误伤谷歌爬虫的完美方法？讨论一下，谢谢</p>\n</div></div>"], "reply": "45", "tittle": "到目前为止，到底有没有一种防爬虫但是不会误伤谷歌爬虫的完美方法？", "comment": ["不是可以通过 IP 验证吗", " 谷歌有哪些 ip ？", "搜索关键字：\r", "google crawler 验证", " 谢谢，世界上搜索引擎还有很多， bing yandex 百度 搜狗之类的  感觉验证完好渺茫", "如果不嫌麻烦能不能先放部分数据，部分垃圾数据，等过个一两天再把真实数据更新上去", "天真", "没有。即使假设有，再不济，我去抓 google 不就好了。", "这个真没有", "把所有的数据展示都放到 canvas 里面显示，或者生成图片。", "折中方案就是显示一半，剩下的加个强验证，通过后显示，", "不用每次访问都验证 IP 啊，首次见的（疑似） bot 验证，过了的 IP 就加入到你特定的白名单里", "没有， 而且各引擎为了评估网站是否针对它们吐数据作弊， 都会有其他非公开的 UA 和 IP 段的爬虫做检验， 你这样反而适得其反", "useragent 可以判断", "楼主能不能告诉我地址我想练练我的爬虫技能...", "内容里面随机插网站名字 /网址，别人相当于给你免费宣传了", "搜索引擎原创识别才是最根本的吧\r", "另外就是版权的法律保护，国外如果 copy 的话貌似可以直接主机商关站的", "ip 确实可以哈 ", "\r", "$ host 66.249.66.1\r", "1.66.249.66.in-addr.arpa domain name pointer ", ".", "你都把衣服脱光了给人家看了\r", "你说你要怎么样保护密秘？？\r", "\r", "你可以把整个网页变成一张图片\r", "\r", "你也可以把整个网站做成一个 flash", "你不放网址我们怎么帮你提高一下？（捂脸", "纯原创的话，一天你写不了几篇文章。所以，哪怕你技术上屏蔽了别人，你无法阻挡别人去复制啊！", " 兄台爬过网易云的吗，我被里面的加密难住了", "您使用的 IP 访问网站过于频繁,为了您的正常访问,请先输入验证码", "可以数据不要放全\r", "让浏览引擎索引到关键字和标题就行了\r", "\r", "用户浏览的时候多点一下才能拿到全部的 content\r", "感觉现在挺多国外网站这么干", "难道 你们不知道 有 selenium 这东西？？？", "插个题外话，以前还真的爬过 canvas 画的数据。比如下面这个 URL 里面：\r", "\r", "\r", "\r", "一些具体的数字就是用 canvas 画出来的。\r", "\r", "办法就是先截图，然后调用 OCR 识别图片上面的数字。\r", "当时用的 tesseract ，对数字的识别准确率还蛮高的（当然对图片有些简单的放大和二值化处理之后，准确率才上来的）。\r", "\r", "不过，上面这个腾讯的视频指数页面，有些别的反爬处理，很难搞，最终还是放弃了。", "不知道有没有人可以通过法律角度讲讲可以怎么做。", "把 Google 的 as 添加到白名单", "我们是实现一个 漏桶 来处理这样的事情的， 针对流量分析一下 ip 均匀请求量 自动调整漏桶大小， 如果爬的比较猛就直接 ban 掉 ip ， 值得一提的是 这样的方法防不住有心的爬虫， 总的来讲我们是想挡住恶意的高频请求用户\r", "\r", "至于完全的防爬， 我觉得是不可能懂， 人家真想要你的数据， 办法多的是。。", "那估计就只能靠 ip 识别了", "楼主是产品？", "  我去试试看，能详细点告诉我爬哪些项目吗？", "只担心 googlebot ，不担心真实用户吗，在乎 seo 就别在乎爬虫，只要爬虫直接去爬 google 缓存，再强的反爬虫策略也没用", "谷歌蜘蛛可以判断 ip 的 hostname", "客户端生成 cookie 二次请求才呈现数据 很多航司网站是这样做的 你可以找一下相应的工具", "没有,再厉害你能把用户的屏幕给关了吗?所以你可以换一种方式,比如让文章个性化,让别人一看就知道是你.", "不可能，我可以模拟得你监测不出来。\r", "Keywords:\r", "- nightmare\r", "- phantom\r", "- selenium", "并没有，只要正常的用户能看到，爬虫就能爬到，只能尽量在不损害正常用户的体验情况下，提高爬虫获取数据的成本", "没有。", " 就是歌手最热歌曲的页面，想获得 songId", "前端分两套，正常业务页面和 SEO 页面，把能暴露出去的且希望搜索引擎爬到的防盗 SEO 页面里，正常页面做好防爬措施，使用流量技术+搜索引擎配置的方式引导搜索引擎去爬 SEO 页面。", "只要网站还允许普通人访问就阻止不了(定向开发的)爬虫，只能提高门槛。\r", "\r", "模拟浏览器行为绕过客户端验证：楼上 WildCat 说了\r", "模拟网络绕过 IP 验证：代理池\r", "\r", "另外也可以直接爬谷歌 :)", "咋不放出网站", "Google 访问的时候自带了 user agent ，写明是 Google bot ，但是，如果爬虫知道你的规则并且伪装 Google bot 的话。。。。", "Google 没有一种机制可以验证 Google bot 的身份吗？不如说自带给 token ，需要验证这个 token 才知道它是不是 bot", " 反查 ip ，谷歌官方做法"]},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"https://getstream.io/\" rel=\"nofollow\">https://getstream.io/</a>\r<br>\r<br>一个用于简化 social feed 构建的 API ，每个月 300 万次免费额度。</div>"], "reply": "目前尚无回", "tittle": "GetStream.io", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>2017 年的开年，朋友圈先被一圈小程序的新闻刷爆了。小程序未出之前，许多媒体声称这将颠覆 App 。可是小程序推出之后，媒体的声音不像之前那样一边倒了。 App 开发人员估计还要继续忙碌下去，因为整个 App 开发行业的创新依然保持着非常强劲的增长势头，而对于很多企业而言，移动营销策略也会显得愈发重要。</p>\n<p>身处在这个 \" 移动 \" 的时代，作为创业者的你是否也想从这个庞大的市场里分到一块蛋糕呢？毋庸置疑，移动领域里的创业速度将会变得越来越快，对于即将到来的 2017 年，这个行业又会发生些什么呢？移动应用开发专家 APICloud 将会给你寻找答案：</p>\n<p>有专家预测， 2017 年的 App 应用下载量将会突破 2500 亿，整个移动科技市场规模将会达到 770 亿美元。未来除了智能手机 App 应用之外，我们可能还需要与可穿戴设备、智能汽车、以及物联网设备配套的 App 应用。</p>\n<p>因此，对于移动科技领域里的创业充满了机遇，基于云技术的 App 应用和服务将会更加重要，用户需要可分享且支持跨设备实时同步数据的移动技术，该领域将驱动更多创新。</p>\n<p>不过随着时间的发展，一些移动应用开发趋势将会逐渐凸显。</p>\n<p><strong>LBS 功能将成为重中之重</strong></p>\n<p>如今几乎每部移动设备都搭载了 GPS 功能，基于位置的服务（ LBS ）将会为用户提供更多实时信息，并按照地理位置提供个性化服务。</p>\n<p><strong>AR 功能在 App 中的普及</strong></p>\n<p>很多品牌商旗下的 App 应用将会加入增强现实功能，以支持商品的促销推广。但随着时间的发展，会有越来越多移动应用整合增强现实功能。</p>\n<p><strong>人工智能使得 App 不仅是个软件，而是个定制管家</strong></p>\n<p>想象一下，一幅图片可以按照你的心情随时变化，肯定会有不少乐趣吧。越来越多的 App 开发人员开始把机器学习和人工智能技术添加到 App 里，这很可能会彻底颠覆移动应用行业。</p>\n<p><strong>物联网将会变得一个有利可图的移动市场</strong></p>\n<p>2016 年，物联网市场已经十分火爆了。在移动应用的支持下，物联网行业在明年会发展的更快，医疗健康、教育、网络安全、智能家居、汽车等行业将会出现更多 App 应用，为用户提供服务。</p>\n<p><strong>移动安全将变成 App 的首要任务</strong></p>\n<p>随着智能手机的普及率和渗透率越来越高，移动安全也比以往任何时候都显得重要。能够提供更好安全体验和更出色安全功能的移动应用，将极可能获得成功。</p>\n<p><strong>中小企业的移动业务机遇在哪里？</strong></p>\n<p>过去，开发一款移动应用的成本比较高，因此很多小企业没有足够的能力构建自己的移动 App 应用。但是现在， App 开发软件越来越多，也越来越专业。像 APICloud 定制平台，快速、高性价比的开发定制企业 App 。已经有上万个 App 通过 APICloud 成功上线。按照发展趋势来看， 2017 年将会有近一半的小企业拥有自己的移动 App 应用，他们构建移动应用的主要目的，主要包括：帮助企业提升销售、改善用户体验、以及在市场上增强竞争力。</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "2017 年 App 开发趋势介绍详解（建议收藏）", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近公司搞了个 KPI 考核方案，感觉挺操蛋的。</p>\n</div></div>"], "reply": "8", "tittle": "你们公司是如何做 KPI 考核的？或者有 KPI 考核吗？", "comment": ["没有，有过段时间但都是自吹自擂", "看 PPT 呗", "KPI 就是操蛋，瞎折腾。", "而且搞这个方案的人事已经离职了，", " 你们的考核是啥样的？", "我们没有，但是狠好奇到底什么是 KPI 考核啊~", "代码行数（#滑稽）", "一般来看，一个公司如果开始搞 KPI 了，也就是它走下坡路的信号"]},
{"content": ["<div class=\"topic_content\">找了一下，只有 login.keychain-db 文件，不过有的电脑里有 login.keychain 。也不知道到底应该怎么解决。。\r<br>用的是 Keychains and Provisioning Profiles Management 这个插件，需要上传 keychain 文件。</div>"], "reply": "17", "tittle": "求助 Jenkins 打包 iOS 项目问题：在 ~/Library/Keychains 中找不到 login.keychain 文件。", "comment": ["Sierra 的问题。试试 ln -s ~/Library/Keychains/login.keychain-db ~/Library/Keychains/login.keychain", "类似这个吧， ", "\r", "\r", "在计划任务和 Jenkins 用户环境下访问登录钥匙串有问题", " 软连接还是识别为 login.keychain-db", "哦哦，看错了，你用的插件啊。这个你直接复制一个 login.keychain-db 到桌面改下名就行了应该。", "试试 flow.ci iOS 持续集成 :D", " 公司的代码一般不让放到外网", "那就试试 fastlane 。。。", " 还是无法识别 :(", " 把开发者证书都放到了 system.keychain 里，导入到 jenkins 吗？", " 我试试 :>", " login.keychain-db 和 login.keychain 应该是同一个东西，改个名试下？我遇到的问题是读不到 login.keychain ，不是 login.keychain 不存在", " 改了名，我 quick look 了一下，里面的详细都预览不出来。然后上传之后，里面的东西也读不到， jenkins 里就一个文件名，其他都是空白。", "其实是一样的 复制一份改名就好", "  选好 keychain 要上传的。。。", " 试过，无法识别。", "改成 login.keychain 也无法上传么 。 醉了。，", " 对的。后来还是写 xcodebuild 来解决啦"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>项目内容:\n英国剑桥华人社区共享自行车租赁 APP 开发</p>\n<p>开发周期：\n2017 年 2 月-4 月</p>\n<p>项目预算： 20 万元</p>\n<p>有合适的团队可以联系电话： 15950456420 ，或者添加微信 homewifi</p>\n</div></div>"], "reply": "7", "tittle": "项目开发-寻找 APP 开发团队或者公司（英国剑桥华人社区共享自行车租赁 APP 开发）", "comment": ["竟然没人说话，那我先问一下吧 iOS ＋ Android ＋ php ／ Java ，", "app 开发倒还是小事，硬件怎么解决", " ofo 密码锁模式，不用硬件哈哈", "需用产品经理可以找我 ", "昨晚加了微信、发了短信，杳无音信（摊手", "微信号很神奇啊", "就差个程序员了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题，想知道各位大神有何建议？（方向是前后台分离）</p>\n<p>ps ：我个人有 N 年后台开发经验，基于传统的 html+jquery+css 那套，也能写点前端。近几年前端爆发式的发展，而我近两年的焦点是微服务架构相关的，已经和前端技术的发展脱节，想再跟进一下前端的发展潮流却不知从何入手，求各位大神指点</p>\n</div></div>"], "reply": "80", "tittle": "2017 年，从零开始学前端开发，有推荐的技术栈么？", "comment": ["你后端玩玩架构啊，何必入前端坑....心累", "来一起写 Vue 。", "来一起写 React 。", "Vanilla JS 框架", "基础的就是： Webpack + Gulp + ES6(7) + Node\r", "框架上一般就是： React > Vue > Angular ， Angular 在 1-2 年前很火，现在比较火的是 React ， Vue 以后会不会发展的比  React 好还不确定。还有一些其它稍微小众点的， TypeScript 、 CoffeeScript 等。\r", "动态 CSS ： Less 、 SCSS", "来一起写 angular 1 。", "2 楼 3 楼，你们别闹，头像内容太应景了", "iOS 没码可写的我正在啃 vue 全家桶", "Apollo", "说头像的你们,让我的小黄鸡如何是好", "Vue 和 React  初阶小成 .. 更偏向 Vue SSR", "我也是后端转前端，刚找了份前端工作，不过越来越讨厌 js 了，甚至开始怀疑自己的选择", "前端从入门到放弃...", " 我不是后台转前端，只是要跟上前端技术的发展而已", " 你说的这个和我目前的认识一致，不过要掌握起来估计还是要花不少时间", " 我跟你一样是后端，在学 React ，看的 Fullstack React 一书，计划一个月看完，现在 w0% 左右\r", "\r", "不准备以前端谋生，只求多一项实用技能", "reactreactreactreactreactreactreactreactreactreactreact", " 20%，手误", "先让楼上的打赢了, 你再学 (滑稽", "react 好，还能用 react native 顺便搞定移动端", "[what-to-learn-in-2017-if-youre-a-frontend-developer]( ", ")\r", "\r", "刷到这个文章 仅供参考", "前端从入门到转行", " Fullstack React 是在官方网站买的？", "还是 JavaScript + DOM 平台，学点 React ，最后再学点 Canvas .", " 对，感觉写得还不错，它主页写的一些理由也是学习 React 的痛点（比如过时的博客文章，变化的最佳实践），所以我买了书", "给你个建议 如果上 react 初学千万别学 redux ，这东西好，但是是毒品\r", "你笨想也知道，形式语言与自动机在本科都是难点科目，运用在项目里是那么容易的么？何况很多人就算给你需求文档，你连状态转移图手画都画不明白，更别说抽象成代码了，还不是随用随加，加一段时间就乱了\r", "很多人忽悠你状态管理多么多么好，实际上项目大了你上了 action ，你有 reducer 一样给你写出屎一样的代码\r", "程序的可维护性和可维护性，工程来说，只跟程序员的水平和项目有没有坚持代码审查有关", "但是话说回来， react 的设计的却灵活，即便不用 redux ，你以前所有的知识，事件、共享变量，都可以用，只要能拿到 component 的实例什么都不是事，有 prop 和 state 折腾明白一样搞大新闻\r", "vue 就不行，设计太死，这几天做项目为了一个共享路由，没办法最后还是上了 vux ，所有路都堵死了", "Vanilla JS + 1\r", "\r", "然后可以适当学一下 React ，非常简单的构建 UI 的库。", " 嗯，免费的是最贵的", " 设计太死是指？", " 比如我想在组件之间动态共享变量除了用 vuex 的 store 还有别的方式么\r", "共享变量可以，但是行不通，因为你没法在外部触发一个组件的 setstate 类似的函数，也拿不到实例， vue 没构造方法也不让你拿他的 this 指针", " 刚做了一个项目。。。表示真的有时候很想上 redux 。。。。。一直不敢上。。。", "一起写 vue ！！！", " 如果是纯 react ，该如何共享变量？\r", "\r", "vue2 削弱了自带的跨组件通信能力，比如事件只能从子往父传，数据除了 v-model 外只能从父往子传。如果有其他的通信需求：\r", "1. 用自带的一个简陋的 event bus 机制来实现\r", "2. 把子组件用 ref 暴露出来直接调用方法\r", "3. 上 vuex\r", "\r", "你说的共享变量的需求，其实就是没有 mutation getter action 的 vuex ，自己实现一个是非常非常容易的 ", "\r", "千万不要碰 Immutable ， redux 什么鬼的。学学基础知识就好了，", "初学者的话，还是 vue 好上手多啦，我个人也更喜欢 vue\r", "react 好处是现阶段生态比较完整，功能稳定，坑相对少些\r", "\r", "个人感觉等发展成熟以后会殊途同归，不排除 react 加入响应式属性的可能，也不排除 vue 取消 v-model 的可能。我感觉 vue 就是在 angular1 和 react 之间找到了一个合适的平衡点，所以大家都喜欢。", " 纯 event 跨组件或者父到子肯定也要 event 了 或者用第三方实现的 context 让子节点有继承父节点作用域的功能", "vue 相对简单,react 的 redux 和 react-router,结合起来要人命。", " 上不上看项目的复杂度，最简单衡量项目复杂度的就是简单的模块叠加再多都是简单，这种东西开 n 个 iframe 都能随便搞定\r", "如果你需要频繁的子-父交互，比如大量对话框，这种传统 event 反倒是最方便的，而且是理解起来没难度的\r", "有些时候项目复杂是你设计复杂了，有的是项目经理强奸用户乱做一堆东西，真的东西太复杂，用户用着呢？\r", "而且 event 用了这么多年，难调试么？源生的 event 加了个 target 就解决了。。\r", "复杂的状态是什么， todo 这种，看着简单做起来可以做出花来，那种状态转移笔都写不清楚了，上 redux 妥妥的", "前端说是发展得很快，很多新名词，但其实核心的东西还是那些，并不是很复杂。\r", "\r", "首先是数据驱动 UI ， React 、 Vue 和 Angular 都是给 DOM 提供一层绑定，你不用再像 jQuery 那样 DOM 选取、 DOM 操作满天飞，只要设置好 data 到 UI （模板，或者 DOM ）的绑定，模板留事件处理的接口，这样你操作 data （纯对象操作，数组的增删等） DOM 会自动刷新。这些框架里最容易入门的要数 Vue 了，而且官方文档写得非常好，推荐。\r", "\r", "至于其他组件化、状态管理的东西，先跳过了。\r", "\r", "记得学一下 JavaScript 的 ES6 语法，最常用的特性并不多，一篇文章足以概括。", " nice", " 组件化是绝对不能跳过的，一上来就掌握这个我认为是最好的，尤其是就这组件化把 javascript 那套 prototype 反人类的机制批判一番\r", "你是没见过写 java 的人去按照 java 的设计模式写出来的 js 是多么恶心，各种继承重载父类子类，实际上你只需要两个（ 1 ）抽象组件（ 2 ）抽象 utils", "为啥没人推荐 Ng2", " 轮子太少了 已经被 react 和 vue1 碾压了 ng2 的话要搭配 ionic2 来用", " 我认为组件化更适合团队作业的大型 SPA 。楼主只是想短时间内了解前端的风向，了解一下这些框架的思想，最简单直接的方法就是在通过 Vue.js 入门，掌握数据驱动界面的那一套。这甚至都不需要上 Webpack 和模块化，直接在旧项目中 jQuery 的页面引入 Vue.js ，做好 HTML 上 data 的绑定，留出事件处理函数的接口，就可以了。 \r", "\r", "我发现你这个 ID 老是在发表主观性很强、只针对特性项目不具备普适性的言论，感觉有点误人子弟。", "react ， vue 两个都接触过，现在深入 vue 中， vue 上手容易， vuex 这些概念名词比 redux 简化了不少，一般的项目都够了，有多少人用 react 在写“大项目”的", "一个 ember 提都没人提的年代。。哎", " 误人子弟么？ redux 这种东西活活把挺好的东西拆成三块，本来组件化已经拆一次了， angular 那种 mvc 严格分层的你们不喜欢，但是 redux 拆 action 和 reducer 你们就喜欢，搞不懂前端风向标\r", "学习成本、维护成本、对团队整体实力的要求具备普适性么？还是你认为全天下的前端都有阿里腾讯的实力？\r", "真要说普适性，我还不如推 jQuery", " 顺便补充一下， web component 这个概念早就提出来了，但是 vue react ng2 都没按这个标准做，大家都是自己搞了一套 component 的实现，你都用这个框架了还想跳过组件化，可能么\r", "因为这三个框架无论怎么看都是在搞组件化啊，其实 react 那个是函数起名误人子弟，他要改成 React.createComponent 什么事没有（但是在生命周期里又是 componentShouldXXX 了），偏偏叫 createClass", " 能不能回到楼主的问题上？用什么框架、走怎样一条学习路径难道不是看实际情景的吗？楼主是后端出身、 jQuery 套插件和 Bootstrap 肯定都懂，现在需求是怎样快速掌握前端风向。 Vue.js 是渐进增强的框架，最简单的情况下，你 script 引进 Vue.js ， new Vue 实例声明接管哪个区域和需要 watch 的 data ，就可以完完全全代替 jQuery 和那丑陋的 DOM 操作了。不比组件化那套简单得多？\r", "\r", "等到了解数据驱动 UI 的理念再扩展，无论是组件化、状态管理都是顺理成章的事情。整个学习线路 Vue.js 都有配套，真真正正做到渐进增强。\r", "\r", "Web Component 是标准没错，那 Polymer 为啥没人用？不还是看实际情况吗？ jQuery 、 Backbone 乃至早期的 Angular 都没组件的概念，就是因为大部分项目里根本不需要。需要组件复用的情况就是团队作业，前后端分离的大型 SPA ，你觉得一上来就让楼主掌握这个，真的合适吗？", " 合适，社招简历上没有 MVVM 框架的经验是硬伤", " 这里我需要确认一下， vue 那里的 watch 好像是计算属性，本身的 scope 还在 component 里，但是 ng 的 watch 是真的可以监控 js 源生变量的改动\r", "我看文档这也犹豫了好久，理论上 vue 用 getter/setter 是应该能监控外部作用域里的变量的\r", "\r", "那么反过来， react ，你在构造函数里直接可以拿到实例，直接可以调用所有成员函数，只要能调到 setStatus ，你在哪里都可以操控这个组件，就是“优雅”与否\r", "\r", "然后呢， vue 的构造函数就是 vue.compoent 。。你又跟我扯组件化的概念。。", " 可以自己实现一个 store ，把一个 object 当做一个 Vue 实例的 data 传进去，然后 export 出去。别的地方 require 这个文件的得到的 object 就会在 vue 里同时双向绑定\r", "比如\r", "```\r", "var store = {}\r", "new Vue({data:{store:store}});\r", "module.exports = store;\r", "```", "收藏起来，搞不好明年我也要写点 js 东西……烦躁中……", "？", " Vue 官网上的教程，组件内容是放在最后的，单文件组件一节在进阶里，我想这表明作者的意图了——先学数据绑定、响应式更新，再接触组件的概念。\r", "\r", "不扯太远了，回归主题。我的建议是上 Vue.js 和 ES6 ，就跟着官网文档学可以了。无论是从旧有的 jQuery 思路跳出来，还是后期扩展项目， Vue.js 都能应付自如。", " 那么看完你们的讨论，我只要从 vue.js 入手就行啦？反正我也不是专业前端，也不打算转前端", "Vue 大法好！", " 怎么找练手的项目？", "欢迎入坑\r", "先上 jQuery ，真的。", "哦，没看帖……那就，一起 vue 吧！", "讲真，这种问题别上 V2EX 问。", "Vue,官网首页写得很明白，渐进式框架,刚开始学可以不用管组件什么的，因为需要一个体系的知识。我在使用 Vue 半年后，才开始写组件的。", "react 新手套餐 ", "\r", "不过 redux 可以用 mobx 代替吧", "感谢 @", " @", " 的连接, 感谢楼上各位的讨论.谢谢.", "正在学国产 avalonjs2", "学什么栈啊，学好 javascript 本身就好了", "培养学习的能力和兴趣，公司用什么就学什么，工作之余学点自己感兴趣的就行了。同意楼上，学透 javascript 就够了。", "看楼主的介绍，水平应该停留在初级前端，楼主想要跟上现今前端的行业水平，不如先了解一下前端这几年都发生了什么", "看红皮书《 JavaScript 高级程序设计》和 CSS 好好学。", "框架学 React 和 Vue ，生态学 Webpack, NodeJS, Gulp 等等，只要你忙的过来。。。都可以。", " 你开发大点的纯 vue 不行的，通信会蛋痛。然后 vue 2.0 升级后，去除了周边的支持，都以 plugins 的方式支持，然后 vuex 添加完整了该有的东西： states, actions, mutations, getters ，其实在 vue 1.x 的时候我记得挺简单的，因为那时候 vuex 的声明是放入 new Vue 实例声明的属性中的。然后 vue 2.0 的时候，由于 getter 的概念与 computed 的概念冲突，所以取消了数据 state 的双向 observe ，然后现在的流程就变成了下面的样子：\r", "1. 需要再 vuex 的 store 部分声明以下四个东西：\r", "- state 初始化数据\r", "- actions 执行的动作，这里对应 dispatch 异步模型\r", "- mutations 突变的动作，这里对应 commit 同步模型\r", "- getters 数据操作的方法，其实就是对应 ng2 Services 的大部分功能\r", "\r", "2. 在 state 的同步上，需要引入声明的 getters 才能对数据进行映射 view 层\r", "\r", "3. vuex 对外主要有两个钩子：\r", "- mapGetter => 返回 getters 的方法，用于 computed\r", "- mapActions => 执行方法的行为描述\r", "\r", "之前由于直接绑定给 actions 到当前 Vue 实例 this 上，所以出现重名的情况，这里依然避免不了。\r", "接下来就是要执行操作，有两种方式：\r", "- methods: { ...mapActions([]) } => 这里蛋痛的是又要重新声明一次 action type\r", "- this.$store.dispatch or this.$store.commit => 这是本来的入口\r", "\r", "然后上面的东西其实显得累赘和多余，对于 redux + redux-thunk 的用法， React 的用法其实更加简单\r", "1. state 初始化数据，这个肯定需要的\r", "2. actions 这里只是需要声明到 actions 文件\r", "3. mutations 其实这个就没多大必要的了，你 action 过去，同步和异步都是可见的声明代码\r", "4. getters 其实尤小右也说了，就是 function ，然后这里提取了概念，其实在 redux 中的 reduce 本身就是 function ， function 之间的调用其实已经不足以是一个概念，并且如果你不注意，由于 vue 的计算属性，你需要声明到计算属性中，其实这就相当于 React 的 setState 方法，当时从声明和代码本身来说， React 的更加直接暴力，直接在组件声明一次即可。\r", "\r", "最后 map 其实这里 React 你只需要在 Containers 容器中进行操作，样板代码。最后顺势 props 的传递过程， vue 那边有 v-bind 和普通的方式，所以其实对于 dump 类的组件，对于外部更新的接口是好声明的，并不需要 bind 的概念。\r", "\r", "由于这次升级，其实 vue 1.x 之前的简单优势并不明显，如果你是对视图层依赖，不引入过多， React 其实更加简单，可调试性更强，每一个环节都是入口声明，然后走 function 这个流程，直接 debugger ，对于 vue computed 那层其实对于调试已经是黑盒，如果 getters 那里你声明掉了，你会发现不报错，并且不知道从哪里调试入手。\r", "\r", "好吧，我最后只是来安利一下 React~还有就是表示 vue 2.0 早已不是简单当初宣传的 vue 1.x 形态。对于中小型项目选择来讲意义并不大，工程化的解决方案至少都应该是中大型项目，比如以前网页很简答的时候，也没人说需要 MVC(Backbone) 之类的东西， jQuery 足以，都是代码量上去了，长期迭代，才会想用一些手段来做优化和迭代平稳的事情。\r", "\r", "综上： vue 2.0 基本上最终是 React 。就像尤小右说过，需求的雷同，导致框架趋同，所以学 React 吧，方向是一直对的。", " TypeScript 2.0 七年才出 绝对是前端技术里少有的。。。", "ts 和 ng2 才是适合符合人类思维的……", " 目前 vue 开发的项目确实不太大，不过 vue 的拓展性，对于插件外部插件的支持也是他的优点吧。 react 的话基本都是自己的一套生态，想要用一个外部的东西很难整合，比如 Swipe 这种东西， react 的话也有相关的别人封装好的组件 ReactSwipe(当 slide 项为两个的时候会有问题)，但是难免会有很多 bug 而且很难更改，自己写一个封装的插件费时费力不是一般开发者能干的事，赶项目也没时间。。。当然原因还是基于 jsx 的原因这些插件必须得提供 jsx 语法支持的封装好的 react 组件给开发者调用。还有就是 react ， react-redux ， react-redux-router ， react-router 动态路由这一套整合起来的项目搭建新手肯定是无法完成的，目前网上的案例都 react 得教程和案例都是简单的，没看到能把这些完整结合起来的，也没有一个真正实现 react-router 的动态路由的案例(至少我没看到)。所以真正接触到这些东西发现 react 真是太难了，还有就是基于 redux 的异步封装，貌似 react 也没有好的提供的异步库，反正我当时用的时候没有，也好久没写了，也可能是我没找到，然后就是自己写的一个异步的中间件，实现还是挺麻烦的。所以无论如何对于刚接触的人 vue 都是极好的入门，简单实用， 很多思想可以从中学习，然后再回来看 react 就会简单很多，但是 redux 的坎是过不去的，建议看看 redux 的源码，反正也不多几百行。明白 redux-thunk 的作用，了解 react 的路由是如何与 react-router 结合，还有如何通过 webpack 与 react-router 动态路由实现按需加载，为什么 webpack 那么适合 react 或者说是 jsx 。", "有后端经验选 Angular2 配合 TypeScript ，会更得心应手。", " 自己自学完 CSS 和 HTML ，又去学了些天 JS 、感觉不难，突然想做个静态网页，不用 js 那种，发现特别乱，一点头绪都没有，感觉就像前面一双筷子，不知道怎么用， 2 天（ 1 天 10 个小时）模仿了个百度和腾讯静态的，还各种问题，排版什么的我感觉也明白了，写网页就是写不好，初学者都这样么，还是我比较笨，还是方法不对，求指点，哎", " 我觉得正常，本来前端的知识就多且杂，我一开始做 Web 也做得很差，现在依然不会\r", "\r", "我觉得新手最大的矛盾还是，如果想快速上手，做点东西给自己看给自己信心，那么往往会学得不够系统，导致后面容易卡壳；如果想一开始就学得系统，又容易很枯燥乏味。。你需要自己把握好这个度，知道哪些资源是比较系统的，同时在学习过程中融合进实践"]},
{"content": ["<div class=\"topic_content\">这个不是个例，我们公司的同事都是这样。前端做了，后台就不愿意做了</div>", "<div class=\"topic_content\">看了楼下的回复，感觉是我自己想多了，有些事情自己看不见，并不代表没有做</div>", "<div class=\"topic_content\">没有想到大家这么热烈的回答我的疑问，其实也并不是所有的数据验证都不做，只是有些地方。我跟大家举个例子\r<br>\r<br>比如一个后台，正常的流程是用户需要验证身份之后才能有某些操作，但是自己跑 API 的时候，不需要认证也能直接发布信息，操作认证之后的各种权限。我问了，他说这不会有问题的</div>", "<div class=\"topic_content\">再举个例子，有一个公司的通讯录，总部门是不能删除的，这个前端是做了验证，但是后台没有做，直接跑 api 是能直接删除的。还有一种情况，就部门有成员是不能删除部门的，前端做了验证，后台没有\r<br>\r<br>\r<br>可能是我的标题有问题，诚恳的像大家道歉！</div>", "<div class=\"topic_content\">公司目前是有三个测试，而且还在一直招人，单元测试？这个从来没有听后台提起过，也就是开发的计划中没有单元测试这一块的。\r<br>\r<br>目前我只针对后台和我对接的这部分接口，使用 mocha + chai 写了 api 的测试，然后就发现了这一系列的问题，然后我就来吐槽了。公司的测试部，貌似没有安排过要写对 api 的自动化测试</div>", "<div class=\"topic_content\">现在已经把测到的相关问题，提交给了产品经理。至于做不做就不再是我关心的问题了</div>", "<div class=\"topic_content\">年后，这个项目的后台负责人已经离职了</div>"], "reply": "118", "tittle": "为什么后台都不喜欢做数据验证，认为前端做了就可以了", "comment": ["不专业，前后都要验的", "主要看个人，我来这个公司之前，都不怎么喜欢做验证，最多是判断空", "直接访问 API ，后端不做验证的话，肯定会出事的呀。你们后端不专业呀", " 我也不知道他是怎么做的，我只知道群里有个人他们公司是 C#=>python=>typescript ，说减少了很多工作量，关键那Ｂ用 tornado ，居然不用异步..", "不专业", "你的后台不专业而已。\r", "我自己前后台一把抓，从来都是前端验证一次后台验证一次的", "这么业余的后端不辞退留着过年？\r", "这么业余的公司……好吧年后再说", "1 是没有吃过亏，胆子肥\r", "2CTO 吃干饭的外行\r", "3 程序员不专业没道德", "不要以偏概全", "一般来说，双方都要做的。\r", "如果前台做了后台没做，那后台可以滚了。\r", "如果后台做了，前台没做，那一般情况要看有没有交互，如果有交互就一定要做。", "这样吧，你把 URL 和 API 都发出来，会有好心人分分钟教你们后端学做人", "一般内部系统前端做校验也可以\r", "但是对外的系统，后端肯定是要做的", "我司后端还要前端提醒才知道验证", "说明你遇到的后台程序员是傻逼", "原来待过的一个制造型企业，就有这么个类似的 HR 系统。\r", "\r", "我直接浏览器控制台里伪造请求修改我之前提交的东西。", "必须要后台数据验证了，后台验证才是安全的根本。\r", "\r", "前台的校验也是必须的，请求的流量，从前到后，是一个漏斗的形状。", "哪天出大 bug 就知道为什么要验证了", "后端一定不能信任前端，今天发生了血淋淋的教训。\r", "一定要做逻辑验证！！！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>做了几年开发，发现应用层的东西怎么学都学不完。</p>\n<p>只有底层和基础，几十年都不变。 现在想回去把基础都加深一下，提高下内功。</p>\n<p>作为一个计算机科班的学生，应该具备哪些基本的基础知识呢？</p>\n<p>下面每个分支都列出了参考的书籍内容。 希望大家也能提供一些建议。</p>\n<p><a href=\"http://naotu.baidu.com/file/1a0e968910ebcf1f2d7c499a90294350?token=39df775a20b4f6da\" rel=\"nofollow\">http://naotu.baidu.com/file/1a0e968910ebcf1f2d7c499a90294350?token=39df775a20b4f6da</a></p>\n<p><img alt=\"\" src=\"http://7teb7o.com1.z0.glb.clouddn.com/a.png\"></p>\n</div></div>"], "reply": "53", "tittle": "作为一个计算机科班的学生，应该具备哪些基本的基础知识呢", "comment": ["楼主就是忘了一个英语，其他很完美了", "把妹。大学可以挂科，不能不谈恋爱。", " 一把辛酸泪。。。 TAT", " 说的对。 英语这种软技能，还是挺重要的。", "垃圾本科非计算机科班，除了没有选择做小型操作系统的课设以外，其他上述知识点也基本在大学里学过一遍了。\r", "楼主列出的书感觉大多都是经典，感觉能够看完的人真的太厉害，至少我差得远。其实很多的都还是看的学校的教材。\r", "比如说编译原理那里，我也只大致看过 SICP ，给我感觉就编译原理上来不如我学过的形式语言自动机和编译原理教材对实现一个语言的子集有帮助。\r", "目前来说，毕业在小公司干了半年了，自己看的书更多的是工程方向的，毕竟大学没学过，什么设计模式啦， Effective C++啦，偶有补补算法之类，准备跑路笔试什么的，毕竟这半年来感觉能写代码和能写较为优雅的代码差别还是挺大的。\r", "数学最近拾起来看了看，因为统计学习方法中间好多都看不懂了， sad ，机器学习好难。\r", "\r", "\r", "啊，上班不能看书，下班不想看书，只能继续咸鱼了。\r", "以上个人粗鄙意见，望轻喷", "基本上很全了，这些都掌握本科毕业基本上就已经很厉害了\r", " 是做机器学习方向的吗？", " 不是啊，本科学习的是信息安全方向。只是最近看了一些 TensorFlow 的东西，接触了一些机器学习，可是数学原理很多都已经不懂了。在我们学校只有计科科班才会学习机器学习，数据挖掘，人工智能什么的。我没学过的说。", "我想会打字，应该算是一项基本能力。", "电路不用学那么深，随便找本数字逻辑翻翻就行了，甚至硬件描述语言都不用看\r", "计算机体系结构可能比组成原理更重要，量化研究方法那本太难了，硬件软件接口那本更适合\r", "\r", "编译一个操作系统？还是实现一个操作系统？实现一个操作系统太复杂了，时间不值\r", "编译原理不推荐龙书吗？\r", "\r", "漏了数据库，范式很重要，推荐数据库系统概念\r", "\r", "最后，献上一本神书：《计算机科学的基础》，图灵社区免费下载： ", "Windows 安装\r", "安卓刷机\r", "笔记本选购\r", "路由器设置", " 看了下目录，感觉还不错", "1 、数电的先修课程是模电，数电里面放大器的原理是模电的基本内容\r", "2 、为什么把 操作系统 和 编译原理 放在一个组，我觉得 编译原理 和 组成原理(或者体系结构) 关系更大一些才对：比如指令的执行原理和指令流水线在编译器中的优化\r", "3 、计算机图形学也值得推荐，会用到一些线性代数的内容\r", "4 、有精力的话，组合数学学一下也很好：比如鸽笼原理、母函数、递推式转换、 polya...都是很美的数学知识\r", "5 、算法的一些基础理论和微积分的内容相关，想深入算法理论，需要学习微积分(尤其是极限和级数方面的知识)", "1. 算法，数据结构，离散数学，线性代数\r", "2. 数字电路，计算机组成，体系结构\r", "3. 操作系统，嵌入式系统\r", "4. 数据库\r", "5. 计算机网络，密码学\r", "6. 编译原理", " 调皮了。", "工作后越来越发现大学的基础课程有多重要", " 一直觉得数据库应该算应用层的东西，就没有放上去。 不过在实际应用中，数据库确实挺重要的。\r", "\r", "计算机体系结构硬件软件接口 那本确实 比我写的那本易懂。 多谢推荐。", " \r", "1 我记得上学的时候只学了数电，没学模电。 不过模电比数电确实难好几个量级，还不敢去深入。\r", "2 我把体系结构归到硬件了，所以编译原理就往下放，和操作系统放一起了。 \r", "3 计算机图形学、数值分析是到后期才学的，偏应用一些，学完才发现全是矩阵运算之类的。 当初要是和线性代数一起开课，我肯定卯足了劲学。  可以作为拓展材料看。\r", "4 组合数学和微积分也可以作为拓展材料看。有些难度。", " 工作后也才发现，大学的教材有多坑。 考研指定教材、老师自己出教材，真心不如直接拿国外的", "1. 硬件\r", "- CSAPP ：普通的程序员硬件部分看着一本应该已经足够了，第三版也出了，配合 labs 来做比较好，每一章后面有提供参考文献，想具体深入某一部分可以参考来阅读。\r", "- 《计算机体系结构：量化研究方法》：有时间多的话可以看一下这一本。\r", "\r", "2. 算法&数据结构\r", "- CLRS ：有人肯定说这本书太难了，其实是你看的方法不对。第一遍看的时候略过证明部分和习题就可以了，主要目的是了解各个算法的原理，然后用熟悉的语言实现出来；第二遍阅读的时候可以理解一下如何证明算法的正确性，习题中有很多有启发性的问题，配合 MIT 给出的视频和作业更好。\r", "- 《算法》：红书， Java 描述，图多，不想看 CLRS 可以看这一本（看完这本 CLRS 还是逃不掉的）\r", "\r", "3. PL\r", "PL 有太多东西了，了解较浅\r", "- SICP ： Scheme 、函数式、抽象，此书吹得有点过神了，但其实可能看完并不会发现有什么*明显*的提高，题目很有意思，看完这本书就可以和别人撕逼写 Tokenizer 了（笑\r", "- 《 Programming Language Pragmatics 》： PL 入门书\r", "\r", "先吃饭去了……", "英语  +  JAVA   （或者你说的那些中间 挑一条路走 ）    =。=", "借用浙大某老师的设想\r", "> cs 科班基础技能 github 、 command line 、科学上网、 markdown 、重复 7 次以上的动作就要写脚本...\r", "\r", "个人感觉以上几点是最最...基本的技能。但是对于基本的深入展开还是有很多有意思的东西。反思学生时代自己...（惭愧，弱将毕业", "其实内功也是看你内到什么程度，如果你要练就神功，那么算法是必不可少的，可惜绝大部分时候都在调包\r", "\r", "ML 之类的算法都是领域算法，这个比较高深，没良好的数学功底玩不转，非此领域的人士 没必要去填坑\r", "\r", "简单的例如 算法（ 4th 红书）里面讲的常见的算法，基本上只要高中数学的基础 理解+（证明）\r", "\r", "编程语言这东西，如果是要搞自己一套语言 就推荐  编程语言的模式\r", "（编译原理 这东西 毕竟..太厚了，实际开发中 有需要自己弄 DSL 再去看吧）\r", "\r", "硬件相关以及计算机系统组成， CSAPP 一本足以，\r", "\r", "再深层次的 其实跟应用开发没什么关系了， IT 行业开发的工种也是相对细分的\r", "\r", "，要你是做 底层驱动之类 当我没说，老老实实 啃操作系统 原理之类的，别连实模式 都搞不清楚\r", "\r", "另外应用层开发  说实话，不就那么回事，真要研究 再针对的去找书看，每个人有自己开发的领域\r", "\r", "搞 APP 的就老老实实搞 APP ，不要想着去搞 驱动 Farmework ，那不是你的领域（除非你下决心打算 转方向）\r", "\r", "别上来就 龙书 虎书 三大浪漫，那都是扯淡", "数据结构算法\r", "操作系统\r", "网络\r", "数据库\r", "\r", "这四样基础务必打好", "学那么多都没用，在其他人眼里，能解决『手机好卡』『电脑死机』的问题就够了", "面向考研学习 面向工资工作", " 国外的老师也自己出书，没啥奇怪的。但最重要的是国外的计算机很多情况下是没有课本的，或者课本是不那么重要的。现实的问题那么多，课本永远写不全。\r", "\r", "与其读书，我其实推荐去锻炼自己的逻辑。看过很多人写的代码，明明很简单的问题思路但是绕了很大一个圈的。可能是因为是新手，也可能是因为没有看到问题的本质，无论哪种原因肯定是费时又费力，写出来的代码大概也不是最好的。所以我觉得思维，逻辑对于程序员很重要，看到问题的本质，考虑到全部的可能性会让你的代码很完美。以不变应万变大概是我最喜欢的东西。", "为什么不把数据放第一位，数学不行你这辈子都是码农，数学好才有不被培训班吞掉的可能\r", "因为培训班培训不了数学，而且数学一半真看天分\r", "数学不仅是数学，还代表一种逻辑思维能力，有的数学不行的，不仅是编程不行，写出的代码也一堆问题，就是缺乏最基本的思考能力\r", "你们不是推 redux 么？多干几年就能见到那种给他纸和笔画状态画流程都画不明白的，更别提说把状态转移抽象为代码了", " 我猜是 FM", "感谢分享。。\r", "时间好少啊！！要学的太多了！！", "我去 吓尿了", "需求工程 (Requirements engineering) 虽然不是必要，但是可以提一下", "我和楼主的想法一样，作为一个非科班出身的开发者，更是急需补充这些知识", "个人觉得 英语应该放第一位…", "为什么木有 automata theory, regular language, push down automata, turing machine, lambda calculus 这些？", "除了最后两个，别的都是我在点的。。。我的重点是 2 。。。", "数据结构和算法，操作系统，计算机网络（ tcp ， Ip 协议栈为主），数据库原理，编译原理，大学数学课（高等数学，线性代数，概率论，离散数学，组合数学，数值分析，运筹学），英语（计算机英语，商务英语，经济学英语）", "英语英语英语。。。一定要学好。还有妹纸妹纸妹纸一定要泡到。其他都不重要", "看到数值分析， 运筹学 ，商务英语，经济学英语， 我感觉我可能是上了假大学。", "装系统\r", "装逼", "如何快速入门一项技术\r", "如何读一本书\r", "怎样才算是一个优秀的技术人员\r", "语文能力\r", "翻墙能力\r", "英语水平\r", "如何沟通\r", "如何解决问题\r", "如何打破所学的知识体系", "什么是有技术含量？ ", " 运筹学不坑吧，涉及到 LP, 不过我自己看了之后也不觉得有收获。", " 你说的这些，即使不是计算机的，也是必备的。 应该归为人最重要的基本能力，或者叫软能力。 已补充。", " 数学不放第 1 位，是因为前面几项和数学关系不是特别大，反而到了后面学数据结构、算法、图形学、数值分析等课程时，用的才比较多。 这样能尽快上手，并运用到实际中，体会编程的乐趣。", " 感觉是 FM 没跑了", " 我也很奇怪，感觉一般提计算机基础好像都不会说到这些，可能一般做上层开发的不太会了解到这些问题。但是相反，做上层开发却经常会遇到数据库瓶颈等等，所以一般而言操作系统和算法这类的比较经常接触到，然后网络知识一般来说也是必不可少的。", "学习（不是工作）这种事应该是遵循木桶原则，感觉有缺陷的可以补充，但是讨论谁最长并没有什么意义。", "有一套《程序员的数学》，用来补数学知识挺不错的。", "如果要成为顶尖的程序员 数学课使劲造\r", "其他可以慢慢学", "英语太重要了", "上学的时候还能这样要求自己完成以上所有，工作几年了还要完成以上是有些不切实际了哦。\r", "\r", "看书复习过一遍比较可能。", " 现在计算机技术领域不缺硬技能强的人，倒是软技能强的人很罕见。", " 这是..毕竟很多学校都用自己学校老师出的书...然后大部分老师自己出的书问题太多了"]},
{"content": ["<div class=\"topic_content\">10 点半从公司走，坐 1 个小时地铁，出来再走 10 几分钟\r<br>正常情况每天 9 点时组里还有 1/3 的人在\r<br>幸好我不住昌平，不然黑东东的真有些怕怕\r<br>我曾在北四环外一点晚上 8 点的时候在路边遇见过女尸，因为那条路没灯\r<br>\r<br>还好没去清河某公司上班，正常下班是 9 点，反正班车是 9 点。面试都喜欢约晚上，这样应聘的都不用请假\r<br>\r<br>我做手游的同事两周回一次家，呵呵。。。。\r<br>\r<br>唉，我现在 30 多，希望 40 多的时候能有辆 10 多万的车，房我就不想了</div>"], "reply": "94", "tittle": "今天到家又要快 12 点了", "comment": ["北漂不容易，对自己好点。", "别做梦了，我就是认清了现实很早的就从北京滚蛋了，再多钱买不回时间和健康，你觉得你能赌赢？赌赢的不是没有，和中奖的概率差不多了", "东边八通线一般末班车都是满的", " 10 号线半空。一眼可以望见两头", " 会有很凄凉的感觉吧", "加油", "女尸是什么鬼？？？", " 不是鬼。就是刚发生的命案。", "见到女尸？应该报警呀", "注意省体", "好凄凉， 30 多，买个车应该不难啊，为何要等到 40 多？", "不明白楼主这么拼似乎并没有存到钱的样子？", " 我连摇号的资格都没有", "9 点钟从望京下班赶 13 号线 9 点-10 点多车上好多程序员。。。", "看来杭州真是幸福", "说句不好听的。\r", "\r", "30 多岁，目标还是 10 多 w 的车的话，考虑转行吧。\r", "\r", "总比被动转行好。", "该换个城市了？", " 深有同感,30 岁还纠结 10w 块钱的车有点惨\r", "现在一个应届生稍微技术好一点的,家庭环境还不错的\r", "自己工作 1-2 年买个 10w 的车都很轻松...", " 他是没有买车的资格，摇号要资格啊", " \r", "\r", "那更不该买 10 多 w 的车了，不是么？", "我住昌平。地铁站 - 家 步行， 10 多分钟。骑车感觉登几脚就到了。现在越来越懒得走路。感觉走路时间好漫长。\r", "城中村 50 块钱买的二手自行车（现在普遍卖 100 ），想着丢了坏了随时再买一辆。半年多了，也没丢也没坏。同事花 2800 网上买的自行车，第二天夜里丢了。", "我早上 8 点起床， 给两娃做早餐， 9 点送学校 ， 学校在同一村同一条街。\r", "9 ： 10 分从村里开车到公司， 12 分钟，到公司 9 ： 22\r", "中午休息一小时，\r", "下午 5 点下班，到家里 5 点 15 ，吃饭，晚上就自由活动了， 写写代码 玩玩 DOTA 　 12 点左右睡觉", "为嘛不打车，公司不会别给报车费吧", "以前在安贞住过一段时间，身边的不少朋友都在清河附近上班，平时真是累的要死。  \r", "这些都看在眼里，觉得自己受不了，于是来了魔都。。。", " 没这福利。", "我给自己定的目标， 30 岁在上海混不下去就灰溜溜的滚回去，然而我并不想回去", " 忧伤，不给钱起码交通补助给一点吧", "女尸，惊呆了……", "楼主这么辛苦，何不去三线小城安稳下来，不怕自爆，坐标常熟，国标五线小城，无父母支撑下 5 年买车， regal 上路 18W ，现在儿子两岁，我 27 岁。我的工作就是台企的 IT&码农，现在钱赚的不多，但日子算安稳，也没什么烦恼。刚毕业想过去上海，后来因为老婆的关系，就留在了老家。现在目标准备 30 岁再存满个 10W 开个小饭馆了……\r", "我没有鸿鹄之志，家庭幸福就好了。", "女尸?要被捡的那种？", "北京压力太大, 学语言去美帝打工吧", "同北漂 刚 30 俩人存款是有的  买房买不起 因在外地有小号房产还在贷款  北京就把首付提高到 50% 有资格摇号但是 3 年来没有中过，也不期待了，现在俩人都是每天工作，没计划 bb ，同事那天还问我，你们不买房，不要孩子，存那些钱干啥？ 我也觉得好奇怪，虽然没存下什么钱，日子过得也不拘谨，就是不知道俩人在这儿生活下去是为了啥，主要也是不知道去哪里更合适，或者说回去的目标不知道是什么", " 羡慕！坐标是？", "    你没有在大城市呆过， 立场当然是站在小城市上， 眼光同样也是。   当然这样说，并不是贬义。。  楼主上来的一句呢喃， 其实 很多人都这样。  但是我们有着自己的未来和方向， 加油！", "女尸，是喝醉了的意思？", "北漂确实好难，漂不动了可以考虑回二线城市，生活成本各方面都能有改观", "现在不是说只要工作满两年在公司待了半年就可以办工作居住证了，可以买车可以买房，孩子可以上学就是不能参加高考。", " :P 难得看见同城的", " 你好，我的 V 友。", "换做我，会回到二三线城市的。。这样的生活实在太累。。楼主加油吧。。", "很多人不愿意相信女尸这个事实，我觉得很奇怪，这个社会啥没有呢？\r", "危险就在身边，凡事注意点的好！", "同问，女 尸 是啥？", "这么说好悲催呀。", "给楼主算笔账，如果现在 15K ， 4K 两居室房租，五险一金全额缴，公积金抵扣房租，到手 10K 左右，五险一金按最低缴，到手也 9K 左右，单身，每年不攒 3 万需要自我反省，结婚没孩子，攒的应该还多，结婚有孩子，每年至少也能攒 1 万，再加上楼主每年工资还会涨，刨去攒买房的钱，全额买车也没任何问题，何况还可以贷款买。\r", "\r", "我觉得楼主似乎因为自己年龄大而有些悲观，或者是自己憧憬的生活过于美好而自己达不到导致悲观。或者根本原因就是楼主没什么能力对自己的未来成长也不抱希望，但看过楼主之前的帖子，觉得不会是这种情况。\r", "\r", "很多人到北京打拼，每天幻想自己 5 年后大富大贵，可是他们中有多少真的在北京买房买车结婚生子了？反观那些容易被我们称作不上进没魄力的人，在自己的老家，房车都有了，孩子都上学了，生活不知道多爽。我没别的意思，人是应该奋斗的，但不是盲目的奋斗。我之前在一个帖子里说过，人应该时刻保持自知和自私，知道自己几斤几两，以自己的利益为先。", "待在大城市可能是因为只有在这里才能找到自己的存在感吧，做 IT 的，在小地方根本待不下去", "我在想，楼主收入如何？我觉得这是最关键的。", "多关注自身的成长空间吧，没提升还苦逼的趁早换一个值得拼搏的公司。\r", "\r", "成长时期感觉苦逼在所难免，要有所获，当然不要拼命。", "微博那边还在一片讨伐锤子离职员工", " 老乡啊，哈哈哈，给你点赞。不过互联网这行工作常熟不好找吧？", " 哈哈哈，还有一个同城", "买车好像也不难啊，零首付，分期，很多工资不足一万的人都这样买。", "在大城市工作肯定是有一定原因的，更多的机遇，更多的挑战，更广的视野以及其他。\r", "但是注意平衡，适度加班是最好的，长时间加班真的身心俱疲，效率反而低。当然也看个人，如果回家一个人无聊，在公司可能会更好些。\r", "所以在找工作的时候，也要好好做选择。\r", "\r", "个人观点。", "不买房的话， 10 多 w 的车应该不难吧？这么辛苦，薪资也不高，为什么不考虑跳槽或者往二三线走？\r", "P.S. 女尸略惊悚", "楼主说女尸，容易被人曲解为 酒店喝的烂醉的女人。 \r", "不过看到命案，楼主没报警吗？", " 说的不错", " 孩子他妈呢   时间都没留给她？", "找欧美的远程感觉不错", "现在凸显出我租的好处了，步行 5~6 分钟", "讲真，非常搞不懂为什么有些人认为除了做互联网就没别的做了", "本地挖树带包装的，每天收入 300+\r", "供饭，不供住\r", "住宿，民宿，一个月 300 ，有厨房卫生间，简装\r", "干二年，过年开辆车回老家......", "买车容易养车难。 不开的话，停车费也要算", "推荐一本书《穷查理宝典》。\r", "有的时候情绪低落，是因为没有目标。", "北漂十年内买不上房真的就走吧 这样活着多累 \r", "不明白为什么这么些人都要挤破脑袋往几个北上广里进 \r", "都互联网时代了 虽然不能说哪都一样 但算上生活成本什么的 差距真的没那么大了\r", "辛辛苦苦挣点钱都给房东了 图什么", " 你好，面基吗", " 挂外地牌，办进京证呗，反正 app 就能办，也不用一次次跑过去了。。", "这是在浪费生命，赶紧找个二线城市定下来吧", " 网传下月起每年只能办 12 次", " 坐标英国 剑桥村。。。顺便打广告 ", "  老夫老妻了啊。。都是偶尔趁孩子睡着来一发的， 你懂的。", " 因为别的确实收入低啊", "新媒体行业，这个月刚开始工作，试用期 4500 工资，住后沙峪同事家里，房租、交通费、生活费，一个月 2200 搞定.\r", "俺就个普通学校的本科生，来北京也是各种心酸，不过目的是为学习和积攒工作经验。\r", "从导演跨专业考了两次计算机都死在数学上，想用一两年的时间搞清自己真正喜欢什么行业和工作，有必要再考个研究生。\r", "无产阶级家庭，貌似出国只有考研究生公派出去了。", " 你在互联网行业呆久了所以你认为工资高，实际上计算机相关工作，只是起薪比其他行业略高而已，跟中等偏上收入人群比起来竞争力就没那么大了，二三线城市互联网行业并不发达，难道有钱人少吗？", "这样的工作强度，干几年没了青春，也没了健康的身体。\r", "路是自己选的，可怜之人必有可恨之处。\r", "lz 要努力改变现状额。", "没事，今早 10 点过才到家", "不是 IT 从业人员，但是现在凌晨还在加班码字", " 然而我目前不在常熟😂", "本来想说：我作为一个学生每天都是 11-12 点才离开实验室。\r", "\r", "想想，每个人都不容易，楼主还是挺辛苦的", "  不错，可以交流一下吗？ 交个好友？", " 日企感觉也是这个样子。\r", "很多人主要担心这些非国企的企业裁员或者撤资。因为大陆的工资随着房地产越来越高，慢慢的外企也待不下去了。\r", "之前 nec 好像在中国的分部就全部撤销掉了。\r", "\r", "安稳的日子。。。恩，谁不想有呢。特别是年近 30 岁以后，但是我个人觉得，除非是体制内，国企，央企，安稳的日子真的太难获得了。", " 互联网行业是典型的随着工作年限的增加，和别的行业差距越来越小的行业。\r", "\r", "当然了，马上就会有人举出 bat 大牛 40 岁拿 100 万的例子来打脸了。", " 是三线城市还是二线城市", "我不敢说能帮你多赚钱，帮你不用挤地铁早点回家还是可以滴。\r", "花 1w 左右就可以买到京 B 牌照的摩托+增驾费用+头盔\r", "缩短一半的通勤时间不是问题~", " 刚毕业的可以拿到年薪 15 ，三年以上工作经验的 30 多也很常见。我不敢说是大多数还是怎么样，至少不算是凤毛麟角。其实这些钱虽很难攒出买房的首付，但是在北京生活还是很不错的。\r", "只是这些人不会发帖子来说，所以你很难理解北漂的人吧", " 所以京 B 拍照只要不进主路就可以随便开？", "有了车在四环里能上路么？（逃", " \r", "英国除了大城市 像 伦敦 曼城 （一般来说有大学的地方），其它都是小城市或者是镇，村。\r", "我住在剑桥郡  \r", "\r", "\r", "\r", "一般来说， 都是住在村里， 开个车 7 分钟就能到 24 小时大型 超市 （ TESCO 国内称乐购）。去剑桥大学 20 分钟\r", "去伦敦 1 个半小时。", "想想好心酸啊，我现在攒钱攒着就不想花了。\r", "以前想着，攒着，攒够了买个 lv 或者其他包或者旅游。现在攒够了，越攒越多了反而都不敢花钱了。\r", "还是因为穷。：（", "三句话： 1.善待自己吧 2.你既然抱怨了那就找个值得这么拼的公司 3.累了倦了就回家", "我也是老板 \r", "这样的老板不值得你卖命", " 我老板去过好几次中南海，和我没任何交集", " 我不是互联网行业的；\r", "计算机相关工作确实工资高，起薪往往有 5 位数，而公务员、医生、老师等好多都只有两三千，其他传统行业很多也远低于计算机行业；\r", "小城市有钱人多，那些都是老板，不是拿工资的。", " 你拿三四线城市传统行业工资去跟一线城市程序员比？地铁站旁边一个早上卖煎饼果子的都能月入过万。", " 京 B 摩托车，四环路内禁止行驶（不含四环辅路），四环、五环主路禁止行驶。\r", "实际执行来看，走环路主路有可能被拍下处罚，进入四环内通常不会被处罚，也有一定概率碰到交警，最坏情况是扣 3 分罚款 200 元。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题。本人大一的时候学习了 Java ，大二加入学校一个关于网络安全的工作室，顺势学习了 Python ， PHP 和相关的网络安全知识。从大二下学期开始，到大三的这个寒假，开始在老师的带领下做一个有关代码混淆的创新项目，使用 Java 做代码混淆器，占用了我大量的学习时间，然而项目因为各种原因到现在都还没完成（说实话我都不知道什么时候是个底）。然后跟着学校的课程走，也学到了计算机网络、数据库和操作系统的知识，成绩也还算可以。逐渐的，我发现自己在服务器安全和运维方面有浓厚兴趣，但想想，时间好像越来越少，然而我目前有的技能似乎还不能找到一份满意的实习。。求各位指导下，下个学期开始，在忽略创新项目占用时间的情况下，我应该如何学习，才能在后面找到有关安全运维的实习岗位？下面是我的一些粗略的技能点：\n<br>\n编程技能：<br>\nJava （较为熟练，做过很多 J2SE 项目，能够用 servlet+jsp 做出 web application ，还没学过框架）<br>\nPython （做过许多爬虫和其他脚本，完成自己日常的一些动作（更新美剧、签到什么的））<br>\nPHP （基本会使用和阅读，用 ThinkPHP 框架完成过课程设计。。）<br>\n网络安全：<br>\n了解 OWASP TOP 10 漏洞的产生原因和修复方法<br>\n熟悉 MySQL 和 SQL Server 的使用、数据库设计以及权限控制<br>\n尝试搞过很多小网站并提权（逃）<br>\n由于要完成学校的一些任务，所以到现在都没时间去刷 SRC 和参加众测项目<br></p>\n</div></div>"], "reply": "39", "tittle": "如何利用好大三下学期，大四找到好的安全运维实习岗位？", "comment": ["楼主你好，我也是跟你同样的大三上完一半的学生，和你分享一下我的想法。\r", "我上个暑假也在一家做网络安全的公司实习，但是我的技能比你差的很远，捂脸。我的感受是在企业里可能是做具体的某一个方向的东西，尤其是实习的话，时间不长，这个方向可能会比较窄，但是以不变应万变，基础的知识总是很重要的。学校的计算机网络课程，至少我们学校的计网课程是相当水的， 不如用假期整块的时间看看经典的教材，比如那本《自顶向下方法》之类的。或者打打 CTF ？\r", "我的想法跟你差不多，就是希望能在大三下学期好好再学学，大四找个好的实习。这个寒假我还打算学《 CSAPP 》以及再补一遍算法，总之是想先把基础打好，以不变应万变吧。毕竟自己将来也不一定做网络安全这个方向，但是咱们这个专业基础的东西总是共通的。", " 同学厉害啊！大二暑假就能出去实习。。\r", "我能问问你实习的时候是做什么的吗？我也能做个参考。。\r", "目前我在看《鸟哥的 Linux 私房菜》，已经差不多看完了，接下来想看 Python 在运维方面运用的知识。。那本《自顶向下方法》我是打算开学再看，毕竟太厚了，一次过用心看完我感觉我没那个耐心。。\r", "CTF 没玩一个学期了，工作室师兄没让我们大三学生打。。", "哪个学校的呀 哥们", " 不是什么好学校。。就不说了", "情况类似,钻研 SSH 中(逃", "运维哥受我一拜。真心想交几个想做因为的朋友：）", "看上去让我感觉是校友…", "公司有高中生来实习炼丹的😂楼主不用担心啊，毕竟实习生廉价劳动力", " 不要看《鸟哥的 Linux 私房菜》！！！不要看《鸟哥的 Linux 私房菜》！！！不要看《鸟哥的 Linux 私房菜》！！！\r", "\r", "看《 linux 系统管理技术手册》和 《 Python 编程快速上手:让繁琐工作自动化》", " why", "wow 感觉 lz 会的比我多太多了。。。", " 谢谢建议，另外为啥不要看这个。。我都差不多看完了", " 说不定是呢。。", " 别吧。。我会的也不多。。一起加油！", " 好的，加油！", " 为啥想交做运维的朋友。。", " 做任何事情都需要各有所查获的人配合，而不是自己全能什么都做。我不会做运维的东西，但是我知道那很重要。所以想交因为的朋友", "很不错啊，感觉可以直接投投简历找工作_(:3 」∠)_", " 大神最近怎么没怎么更新博客了", " 我感觉我会的东西都是浮于表面。没啥说服力。。", "实习三月份就开始了，大四上都找工作了。\r", "可以简历 mail 我，到时帮你内推", "同是运维，也要搞搞安全", " 老哥稳啊！可是你要内推我到哪呢？。。", " 鹅厂", " 哇，鹅厂，我怕高攀不起。。", " 请问单纯的大三实习能否内推到鹅厂实习? 某 985 系大三学生, 下学期有实习。", " 方向应该是 ML 或者 Data Mining 类的, 但是不打算毕业直接工作, 打算读研。", "如果有时间捣腾，还不如好好学学大数据，比如如何搭建、管理 Hadoop 集群， redis 集群， kafka 集群等等，顺便把 hdfs 、 hive 、 hbase 、 mapreduce 、 spark 等基础打扎实，如果这些你都能熟练操作了，高薪工作那都是分分钟的事", " 好的，谢谢建议", "小网站提权，好回忆啊，感觉回到了 14-15 岁。", " 哈哈，网络安全法出台了，不敢乱搞了。。", " 老哥，你 email 多少呢？我打算这个寒假再冲一把学点东西，然后寒假后给你发简历。。你看可以不。。反正试试无害", " 哈哈，竟然和我一样，我也是各种不推荐身边人看《鸟哥 xxx 》，然后推荐《 Linux 系统管理技术手册》。\r", "不过单纯是因为我可以保证后者是一本好书，而前者，我还没完整看过：）", " 可以，准备找一本看。不过好像又两种，一个是《 UNIX/Linux 系统管理技术手册》，一个是《 Linux 系统管理技术手册》。。哪本比较好？", " cnlhbnMjZm94bWFpbC5jb20=", " 年轻多试试无妨", " 可以，谢谢老哥给机会，寒假后马上发简历", " 不是“两本”，而是后来新出的版本。目测评价最好的是第二版《 Linux 系统管理技术手册》，我就是看的这本，但是里面的内容实在是太旧了，适合打基础。 后面的第四版《 UNIX/Linux 系统管理技术手册》好像评价也不错的样子，没细看。", " 好的，谢谢指点"]},
{"content": ["<div class=\"topic_content\">## 前言\r<br>在 tftp 那篇文章中我提到过一般网络安装基于 Linux 下 PXE+TFTP+DHCP+(HTTP/FTP/NFS)来实现，然而在真实的生产环境中分别测试了 Cloudboot 和 Cobbler ，面对大量型号和配置不一样的物理机并不能满足实际需求。最后采用 Windows 笔记本+交换机+tftpd32+kickstart 来灵活应对 esxi6 和 rhel6.7 的自动化装机，为了不依赖自动化光盘安装的低效懒人模式，中间还是踩了不少的坑。个人觉得装机并没有孰优孰劣的说法，而且未来是属于分布式存储+万兆交换机+类似 VMware/OpenStack 的模式，人肉装机的时代已经离我们渐行渐远。\r<br>\r<br>&gt; 利用 tftpd32 快速搭建自动化网络搞机平台\r<br>\r<br>## 更新历史\r<br>\r<br>2017 年 01 月 19 日 - 初稿\r<br>\r<br>阅读原文 - <a target=\"_blank\" href=\"https://wsgzao.github.io/post/tftpd32/\" rel=\"nofollow\">https://wsgzao.github.io/post/tftpd32/</a></div>"], "reply": "1", "tittle": "使用 tftpd32 自动化网络安装 esxi6.0u2 和 rhel6.7 实践", "comment": ["老司机带带我，我想我只能手工改内核配置了。"]},
{"content": ["<div class=\"topic_content\">看到一些带着笔记本，随处移动办公的朋友，当然不确定都是在写代码，但应该有一部分是工程师吧。听说豆瓣早期版本就是阿北窝在咖啡馆码出来的。\r<br>\r<br>有些公司甚至是没有固定工位，大家流动办公，自然就是可以抱着笔记本随处坐下来工作的。\r<br>\r<br>\r<br>感觉一些轻量级的工作，在笔记本屏幕上处理就完全够了，老板甚至只要用手机点点 oa 系统，笔记本都不需要带。但是，发现习惯了办公桌上的几个外接大显示器，我盯着一个小小的笔记本屏幕，完全无法编码，所以根本谈不上到处移动办公搬砖。\r<br>\r<br>因为毕竟一个笔记本屏幕那么小，一屏显示的内容是有限的，比不上外接多个显示器视觉效率高。笔记本能随时移动是优势，总不能随时搬动 2 个外接显示器办公吧Ծ‸Ծ 但是开个 IDE ，那么多界面，还有输出调试，查资料，文档等等等等，仅仅一个笔记本屏幕真的能提高编码效率吗？\r<br>\r<br>大家的是习惯移动笔记本工作？还是工位上连好几个显示器编码呢？</div>"], "reply": "35", "tittle": "带着笔记本，可以随处移动办公写代码，真的能提高工作的效率吗？", "comment": ["笔记本常年接 2 个显示器，一个 outlook ，有个 uc 。铁打不动。", "一个显示器的台式机或一个笔记本\r", "两个显示器有点影响注意力", "你试试就知道了，每个人的工作方式都不完全一样。", "你需要一个三屏笔记本：\r", " 三个小屏幕能舒服么。。", "可能你没有用到比较好的窗口管理器", "编码还好吧，当习惯了 编辑器替代 IDE 之后，小屏幕也 OK\r", "\r", "搞设计 /图片 /视频 处理，的确是屏幕越大+越多 越好... 三个屏幕简直是最低配置", "只要有凳子+桌子+WiFi ，我能在五分钟内将这地方变成办公室。", "要看是做什么工作了，我写 php 的时候，基本上就一个 ide 分栏，偶尔边上有个平板开着 chm 文档。", "写前端的时候，配合 webpack 那个自动刷新插件，如果有两个显示器可以解放 f5 和 alt+tab 键，肯定比单独带一台笔记本办公要爽。", "我不是很喜欢笔记本那么小的屏幕写代码。", " 三个巨屏背着走不累么。。。", " 严重同意。。", "便携外接投影仪 才是最爽的。 \r", "\r", "尺度 决定 思路\r", "===============\r", "小时候看一部国产 黑客剧，好像叫 24 小时，里头美少女携带一个炒鸡小的笔记本在车后座 [办公] \r", "===============\r", "够钱的话，我会接 5 个外屏，当然，我害不清楚", "特意买了一台 surface pro4 方便我在如厕的时候思考和写代码…", " 然而我等了 1 年多 快 2 年都没出来", " 看网站上面写今年 Q1 就能发货了", " 有毛用 我赞助的钱是回不来了 今年 Q1 肯定发不了 又不是第一次延迟了", "可以，视觉和听觉上要屏蔽干扰，效率很高", "运维才要带着本到处走吧？记得药厂有个运维去 sky safe door 看升旗的时候线上出问题，刚摸出随身携带的笔记本就被摁住了。", " 哈哈哈。", "坐累了想躺着写会儿代码，没有笔记本不行。工位待腻了想去咖啡厅看会儿文档，没有笔记本不行。", "曾经我也是这么想的，还专门买了个床上小桌，没用几次就放角落吃灰了", " 锦衣卫效率很高嘛", " 长时间蹲坑小心得痔疮啊~", " 外接屏幕用久了，就不习惯切换窗口啦，所有的内容全部平铺在显示器上，懒得切换。\r", "\r", " 以前也只用笔记本码过，也没觉得啥；后来一直外接显示器之后，换回笔记本那么小的屏幕，就发现再也回不去了", " 比如？", " i3wm", " 好吧，谢啦，不过我的主用系统并不是 Linux...", "多屏是方便，但是我 15 寸的 mbp 也够用\r", "习惯移动办公了好处还是蛮多的\r", "但是如果是 15 以下的本子办公，我就觉得屏幕小了，必须要外接", "上 15 寸的 mac 或者 xps ，感觉相当好", " uc 也太不好用了吧。。现在我们换 KK 了。。", "笔记本+2 个外接显示器， 你抱着流动办公试试", "是的，我用笔记本的屏幕和键盘感觉无法办公。。。", "常年都是笔记本工作。", "想用 computerstick 代替终端机结果忙得现在都没有配好，只能拿单位里的破烂 thinkpad 笔记本（跑着恶心的 windows xp)顶着", "我觉得 15.6 寸以下笔记本可以用 alt+tab 切换应用，这样在两个应用下效率不会下降太多。 15.6 寸的可以分屏开到 4 个应用。外接屏幕是为了开更多应用，看电影还有……爽啊。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我们是马不停蹄不停迭代产品的小团队！\n感谢大家的各种意见。\n这个帖子里，我想跟大家认真讨论一下，大家平时写爬虫会是想采集什么数据，对一个通用爬虫，或者如果你们想定制爬虫，又会有什么要求。</p>\n<p>另外，欢迎来看我们的新 ui ：<a href=\"https://www.zaoshu.io/\" rel=\"nofollow\">全新 ui 的造数页面在这里</a></p>\n<p>论坛已经搭建好了，正在构思放什么资源上来方便大家，也欢迎意见。</p>\n</div></div>", "<div class=\"topic_content\">搭了一个论坛，准备发布资源，也方便大家讨论数据方面信息。\r<br>\r<br><a target=\"_blank\" href=\"https://forum.zaoshu.io/\" rel=\"nofollow\">https://forum.zaoshu.io/</a></div>", "<div class=\"topic_content\">我们精心制作了 功能视频： <div class=\"embedded_video_wrapper\"><iframe class=\"embedded_video\" src=\"http://player.youku.com/embed/XMjQ3ODUzOTg2NA==\" frameborder=\"0\" allowfullscreen></iframe></div>?from=s1.8-1-1.2&amp;spm=a2h0k.8191407.0.0</div>"], "reply": "62", "tittle": "关于数据采集需求的讨论帖", "comment": ["爬虫没太大技术含量", "在一家在线销售餐饮设备的公司干过，主要收集的最多就是淘宝同类商品价格，图片，商品链接。其次就是同类竞争商家网站销售的设备设备种类！", " 你这个没说错，技术含量 体现应该是通用性，优化存取和 针对策略上。", " 求使用建议", "希望定价能显示在主页上", "简单说，数据有效期达到按年为单位的，都是值得保留的\r", "时效越短，其专用性质越强，就是使用人群越单一", " 这个点非常对。", " 什么定价", "通用的。。比如这货？ \r", "不好用...", "怎么一直都是正在爬取，看不了结果", " 方向不一样，我们想让用户完全不用写代码。", " \r", " 求告知问题", "站长圈子有个古老的产品，叫“火车头”。", " 是不用写，神箭手做的就是这一块市场。开发者负责提交不同网站的爬虫规则换取报酬，而真正需要爬虫的用户，只需要在商城查找并购买规则，就可以拿到源源不断的数据。", "微博的数据啊，但是爬起来很困难。", "分析微博粉丝结构，评论转发点赞的人的结构还有趋势。", "要一个输入商品的 url 就能获取到他的价格，名称，分类，图片这些", " 估计是我采用墙外连接的原因...分析时间长并且超时...\r", "所有需求你懂的...\r", "\r", "还是用自己专门定制的爬虫机器人靠谱啊...", " 这个模式有意思", " 这个是基本需求，目标网站一般是哪些", " 只能尽量让你不用写然后省点力，然后再说靠谱的事，暗坑太多了现在。", " 火车头我晓得。", " 把 facebook 的 js 动态生成页面+5 年以上的瀑布流数据+5W 人数据爬出来我就服...\r", " 能爬社交网站么?", " 部分可以，很多反爬的还搞不定。", "这么久了,上次那个遮罩的问题还是没搞定么...", " 遮罩意外的不好解决，我们会在年前再出一版再应对一下。", " 普通爬虫原理不简单?下载页面--->解析--->持久化\r", "有很多反爬虫机制的网站为什么要去爬?显得你牛逼吗", " 说得不错,普通爬虫的确是这样,但也有很多爬虫不是这样的,却被你一句:爬虫没太大技术含量全盘推倒.\r", "没含量你写个超过谷歌,百度的好了,瞎嚷嚷,还\"为什么要去爬?显得你牛逼吗\",你 CEO 还 CTO 啊?公司业务是你我一个码农说不爬就不爬的?不想干就滚蛋...", "\r", "最 low 的辩论者往往会举一些吓唬人的例子，你用你的脑袋去想一下人家为什么要反爬虫，为的是什么？我猜为的就是防范你这种恶意爬取，消耗带宽和吞吐量的人吧。公司的业务是这个，我也是醉了。。。靠爬一些很难爬到的数据活着的公司，我也只能想到黑产了。唉。", "小额的数据，纯个人需求，用自动翻页，正则就行了。 JS 动态搞不定。", " 你还在象牙塔吗? 法律规定不能杀人,还有人杀吧, 别人反爬就不能爬了? 智商捉急...\r", "最近团队有个项目就是为 Party 做爬虫,就是爬你说的这种反爬虫的网站. 舆情听说过吧,算了,可开阔你眼界的.奈何你...!\r", "朋友,凡是你浅尝辄止过都不要说简单, 做不到的不是别人 low,反而是你自己,开阔点眼界吧,对将来有好处!", "\r", "\r", "对于你这种人，现实生活中感觉应该没人跟你做朋友吧。我也不想跟你耗费口舌，毕竟键盘侠我甘拜下风。被狗咬了，我不至于咬回去。掉价。", "穷码农创业三俗：爬虫、微信、直播间，作为一个其中一员给你一些建议（觉得不好当我胡说）：\r", "1.产品定位很重要别想解决所有的问题，码农创业很容易只想技术而忽略商业，我认为你这种东西方式上就不可能抓取特别复杂的页面，还是那个话，你这种东西只能给一些公司非技术人员用，爬虫在 ETL 这个环节内，解决的是 E 的问题，我朋友她们公司是做电商的有 10 多人的运营团队除了日常工作外额外就是每天人肉去网上找图找文章（老板觉得养个程序员没必要，反正找不到文章的开除），你这个很容易解决她们的难处\r", "\r", "2.对用用户权限自由度的把握，你既然想着用户有足够的自由度，例如反抓取这些事情，你就不要管了，这些都是用户来决定，你提供解决方案的 API 就行，如果你不想用户去解决，那你就尽量不让用户插手，这个是一个侧重关系\r", "\r", "3.盈利模式这块早期越单一越好，路想太多了，容易没路走", " 求加微信， Zaoshuio", " 说的确实好啊", "这个方向肯定没问题的，国外早就这样的网站了。关键是做得怎么样，以及如何找到用户。如果不能把这个工具嵌入用户现有的业务流程，那就很难把它发展起来。可以在网站首页给出你们设想的具体用户案例，那样更有说服力。", "使用感觉。。好像速度特别慢，点了个示例上的 github trending ，上了个厕所回来还没好，不知道是不是姿势不对。（是不是需要控制一下每次爬取的数量，或者时间这样的。不要一次爬到完。）\r", "恩。其实我觉得， 2C 和 2B 要想好吧， 2B 就简单一点，但是竞争会多一些吧。\r", "2C 的话技术含量会高一些，爬社交之类的有反爬系统的会比较多。（不过有被 LOW 的风险？不懂~）", " 现在是 to B 方向，目前通用遇到的暗坑很多。", " GitHub 好像今天是有一些问题，其他的您这边反应如何？", " 下午又试了一次很快就出来了。。效果不错:)", " 鄙视技术没含量的是你,说别人 low 的也是你,指桑骂槐说别人是狗的还是你,说越多好像越来越暴露你的本性了,原来你是这样的人!一开始就把自己摆在所谓的道德制高点来俯视别人,你这种二逼+傻叉在我十多年上网史中见得多了,宠辱不惊!", " 谢谢，有哪里不爽您马上告诉我。", " 别在意这个，别在意。说爬虫技术含量低是说我们业务呢，您跟着不开心就不好了。", "觉得用过功能最好的算是 diffbot ， API 设计也最合理", " 努力的方向啊", "怎么收费", " 数据方面有什么需求么？求加微信 Zaoshuio", " 求建议求意见求反馈。", "我不是程序员。。。我觉得免费的火车头都比现在大部分 web 爬虫要好用多了，也易用多了， so ？", "  这个信心我们还是有，欢迎比对。", " \r", " \r", "作为一个程序员，安装完火车头后搞了 5 分钟后还没有弄清楚怎么用就已经把这软件卸载了。\r", "造数胜在操作简单，基本只有鼠标操作。\r", "当然作为程序员来说最省事还是写个正则或者 chrome 里复制粘贴一个 selector", " 火车头都不用写正则。。。连我这种野路子都会用", " 我们现在也是这个初心，希望不会编程的能够迅速上手。", " 您这边一般采集什么数据，看看能不能帮上啥", " 主要还是不规则页面，火车头琢磨下应该能搞定，只是最近在忙别的没空弄。\r", "zaoshu 对不规则页面比较吃力吧？我用过一会，个人愚见，非找茬。\r", "\r", "这两个页面应该算不规则页面，我拿火车头没搞定\r", "\r", "\r", "\r", " 超欢迎意见，求加微信 Zaoshuio", " 楼主看看我的项目 \r", "\r", "\r", "\r", " 求加微信求加微信！ Zaoshuio", "居然没有童鞋说到爬人行征信、各种电商网站里订单数据、送货地址（在已登录的前提下）这种数据，这很赚钱的啊。。。\r", "\r", "P2P 金融互联网产品狗爬过。。。", " 这个很对啊", "太慢了\r", "基于渲染的方式来抓取，玩玩小规模数据还可以，大规模抓取要消耗的资源可不是一般人可以承受的（当然，这种情况一般都可以定制了）。\r", "\r", "从目前了解，如果纯粹是为了降低抓取门槛，八爪、火车头等一堆方案；如果是满足大规模的采集需求，这种一般都是定制开发。", " 现在这版问题确实多，年后会进一步迭代。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h1>解读 2016 年中国软件开发者白皮书之容器篇</h1>\n<p>CSDN 是中国最大的 IT 社区和服务平台，为中国的软件开发者和 IT 从业者提供知识传播等服务。在过去的 2016 年， CSDN 为中国的软件行业发展做出了卓越的贡献，更为中国的开发者带来了足够多的惊喜，《 2016 年度中国软件开发者白皮书》就是最好的证明。</p>\n<p>拥有国内大量开发者的支持， CSDN 针对开发者，在软件行业的多个维度进行了大规模的调查，比如开发者全体现状，应用开发技术以及开发平台、平台状态和发展趋势等。立足软件开发者，该白皮书介绍了开发者的薪资、压力、跳槽、开发习惯等；另外从数据库的角度、大数据的现状、云服务的立场等介绍了大家对行业的发展的看法。</p>\n<p>结合最近火热的容器技术，小编也将该白皮书中与容器技术相关的部分与大家分享，即企业构建云服务平台技术选型分析，该领域的调查分为 4 个部分：</p>\n<ul>\n<li>企业使用最多的资源虚拟化方案</li>\n<li>企业使用最多的容器技术和服务编排工具</li>\n<li>企业自动化运维工具的使用率</li>\n<li>企业搭建云平台的主要框架</li>\n</ul>\n<h3>企业使用最多的资源虚拟化方案</h3>\n<p>资源虚拟化目前已然成为企业数据中心必然要走的一条技术大道。传统虚拟化技术是对硬件资源的虚拟化，容器技术则另辟蹊径，属于对进程的虚拟化。云计算借助容器虚拟化技术，通过资源调度的方式实现虚拟机的动态迁移、监控等多种功能。此次调研，数据也许会令很多读者惊讶。数据表明，以 Docker 为首的容器技术是企业使用最多的虚拟化平台技术，占比 53%，超过基于传统虚拟化技术的 VMWare vSphere 的使用率。</p>\n<p><img alt=\"image\" src=\"http://of9x2nzks.bkt.clouddn.com/17-1-10/55296575-file_1484031679728_7531.jpg\"></p>\n<h3>企业使用最多的容器技术和服务编排工具</h3>\n<p>Docker 是一款成熟的容器技术， Docker 技术之上，整个社区拥有十分丰富的实践案例， Docker 作为开源软件在商业上的成功是可以预料的。报告中数据表明： Docker 容器技术以 90%的使用率领先于其他容器技术。容器编排工具能够将主机上的容器彼此连接，以集群方式启动，同时具有扩展及自动故障转移的重要特性。 Docker Swarm 是 Docker 的原生集群工具，被 41%的企业使用。</p>\n<p><img alt=\"image\" src=\"http://of9x2nzks.bkt.clouddn.com/17-1-10/28008718-file_1484031705896_7b8.jpg\"></p>\n<h3>企业自动化运维工具的使用率</h3>\n<p>DevOps 是以自动化工具与流程为基础，更快速、高效和稳定地实现环境搭建、代码部署、交付、测试以及发布的协同机制,可以促进开发与运维的紧密合作与交流。随着企业对 DevOps 理念认知度的提高,我们看到越来越多企业开始尝试在开发运维环节中使用 DevOps 工具。在本次调研中,86%的企业不同程度都使用了 DevOps 相关工具。其中 Docker 和 Jenkins 作为实现 DevOps 的重要技术手段被使用最多，占比分别为 47%和 44%。</p>\n<p><img alt=\"image\" src=\"http://of9x2nzks.bkt.clouddn.com/17-1-10/23483707-file_1484031738017_d3bf.jpg\"></p>\n<h3>企业搭建云平台的主要框架</h3>\n<p>企业搭建云平台，希望提供操作简单的云服务组建，让任何有无经验的人都有能力自行建立和使用云端计算能力。此次调查中，我们发展 OpenStack 的占用率处于领先地位。 Docker 作为刚刚诞生三年的容器技术，增势迅猛，直接占据 32%的比例，实属最大的赢家。</p>\n<p><img alt=\"image\" src=\"http://of9x2nzks.bkt.clouddn.com/17-1-10/24622297-file_1484031753767_ce6d.jpg\"></p>\n<h3>总结</h3>\n<p>容器技术在企业的落地，是一个价值普及的过程。白皮书中的容器解读，我们不难发现：标准化与提高效率，是以 Docker 为代表的容器技术传递的最大价值。容器技术已经被认为是当今 IT 领域中的一个突破点，新的技术带来的影响，从量变到质变过程中，创新能力将成为新的企业机遇。</p>\n</div></div>"], "reply": "1", "tittle": "解读 2016 年中国软件开发者白皮书之容器篇", "comment": ["使用 kvm 技术笑而不语，内核是自己手动配置使用 bbr 算法的，搭了 google 老司机的秋名山神车，另外我要用直通只能自己单独控制 qemu 动作了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我这 Github 不能正确显示样式了，是个例吗？\n<img alt=\"IMG\" src=\"https://ww4.sinaimg.cn/large/006tKfTcgy1fbwwrsznz1j31kw0y2dsn.jpg\"></p>\n</div></div>", "<div class=\"topic_content\">不知道是啥原因，当时 SwitchyOmega 也没有显示出来有未加载项目，现在又好了。也可能和公司网络有关系。</div>"], "reply": "6", "tittle": "Github 今天无法显示样式了？是个例吗？北京联通。", "comment": [" 加到 hosts 里面看看。", "湖南电信没问题，我还特意刷新了一下——速度慢点，但是页面加载正常。", "是你一个人在战斗，我们显示都正常", "没问题， 不过平时是直接 ss ，不想见什么幺蛾子", "先换个浏览器看看，如果可以解决，大概是 chrome 要升级了", "github 用的 fastly cdn 一直在国内在减速…"]},
{"content": "", "reply": "目前尚无回", "tittle": "分享一篇 createjs 开发动画的文章 ", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这段代码在 gcc 下可以通过，为什么声明数组的时候，数组大小可以是变量呢，一直都以为声明数组大小只能是常量，除了使用动态内存分配。</p>\n<p>int fib(int n) {</p>\n<pre><code>if (n == 0)\n    return 0;\nif (n == 1)\n    return 1;\n\nint f[n+1];\nint i;\nf[0] = 0; f[1] = 1;\nfor (i = 2; i &lt;= n; i++)\n    f[i] = f[i-1] + f[i-2];\nreturn f[n];\n</code></pre>\n<p>}</p>\n<p>int main () {</p>\n<pre><code>int n = 9;\nprintf(\"fib number is %d\\n\", fib(n));\nreturn 0;\n</code></pre>\n<p>}</p>\n</div></div>"], "reply": "29", "tittle": "各位大大看看这段 c 代码有什么问题", "comment": ["实在没搞懂，求别沉", "猜测是编译器做了优化了，你可以尝试下 main 函数里使用 for 循环对 n 赋值，估计就编译不了了", "C11 支持可变长数组。\r", "结贴。", "c99 标准， 变长数组。", " 应该是 C99 就支持了…", "编译器帮你忙 你换个 vc 编译器试试看", "@编译时没用 c11 选项，看来我一直误解了，不知道以前是从哪里看到的，静态数组只能用常量指定大小。\r", "多谢各位", "4 楼说得对\r", "Variable-length arrays\r", " \r", "这是 gcc 在 C89/C90 年代的私有扩展，您可能是非标准编译器的受害者。\r", "gcc 在 4.X 年代的默认标准就是 gnu90 （就是这么任性）。", "另外附上 gcc 私有扩展大全\r", "标准是 C99 开始支持 VLA\r", "但是 gcc 是一直都支持 VLA\r", " 涨知识了。　也就是说这个特性不是 ISO C 标准的，只是 gcc 自己的扩展，别的 c 编译器如 vc 或者 clang 有可能不支持？", " 这样啊，多谢了", "gcc 的特性\r", "以前我给一个同事说 c 语言不能在函数里定义函数，同事不信，写了一个然后 gcc 编译通过了。。。\r", "后来才知道这只是 gcc 的特性", "楼主被谭浩强害了", "学过汇编的话，直接看编译产生的汇编代码", "我也考虑过这个问题", "哈哈哈哈哈哈哈，谭浩强，我们过去的那学期学他的第四版，看到的时候都无语了（虽然我也没怎么看", "最近看 CSAPP ，正好看到有提到说是 ISO C99 允许数组的长度是表达式", "楼主可能是谭浩强的受害者。。。", "谭浩强+1", "想问问，如果吧 int n=9 去掉，从 main 第一个参数里赋值 int ，还能通过编译么……", " 准确的说是 C99 支持。 C11 成编译器可选项了", "c99 的新特性哈哈哈， c prime plus 有讲 hhh", "c99 标准特性", "c99 的变长数组， gcc 支持但是 vc 不支持，现在很多教科书都是基于 vc （ 6 ）的\r", "这么搞如果 n 比较大容易爆栈\r", "斐波那契数列可以用矩阵相乘把时间复杂度优化到 O(log(n))", " 似乎用到过， clang 好像是支持的。比较新的主流编译器都可以吧。", " 补充一下，可能要用 `std=c99` 之类的参数指定一下。", "只写 gcc -std=c89 默认不会关闭 gcc 的那些扩展，必须还要再加上-pedantic 表示严格参照 ISO C"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>今天无意中看到了 tech 后缀域名的广告，说是技术，科技的意思。然后看到注册费用很便宜，就随手注册了一个玩。</p>\n<p>结果没想到不能绑定 TX 的企业邮， TX 的域名邮箱也不行。提示不支持。</p>\n<p>请大家推荐一个支持小众域名的免费企业邮。</p>\n</div></div>", "<div class=\"topic_content\">感谢大家的分享。我最后选择了 zoho 。感觉很不错。访问速度各个方面都还可以。</div>"], "reply": "30", "tittle": "有没有支持小众域名的免费企业邮？", "comment": ["求顺风车", "网易， ", "\r", "我在用这个", "zoho", "zoho", "zoho", " 我也在用", "可以买台 vps 自己搭建呢", "网易日邮件多少？腾讯 500 zoho1000", "最近怎么关于域名邮箱的这么多，又到了安利博客的时候了， ", "\r", "常见的免费域名邮箱", "yandex mail 基本无限制", "楼上正解，毛子的 Yandex", " 没 FastMail 。。。", " TX 竟然还有 500 的限制呢，是每个人还是所有人？", " fast 不免费呀", " 每个域名每日发件 500 封，按照邮件质量可能会提高邮件数量\r", "频繁发件貌似一天 200 都不到就会被 BAN （来源开源中国帖子）\r", "企业版收费最高也就 1500 ，所以企鹅还是很小气的", "前几天看到有人推荐 Yandex 就从腾讯企业邮换了，感觉确实不错，速度比腾讯快\r", "缺点是只有 IMAP ，不支持 exchange", " 免费的不好用啊", "网易支持 .tech 域名.", "我用 mailgun 自动转发", "注， zoho 貌似 com 和 com.cn 有区别，两个都注册了两个都能用的样子", "万网的， ltd 后缀", "目前在用 zoho 。", "阿里云的域名管理系统可以直接生成企业邮吧", "求好用的程序", "我顺便说一句，毛子的审查比国内还严格", " 毛子还向我国取经呢。有新闻为证： ", " 不只是这个呐.. 只是毛子会各种要资料什么的，当年 Telegram 作者就是因为这样才跑出去弄的 Telegram", " 请问下支持不支持 exchange 的有什么区别？", " exchange 可以推送邮件，同步通讯录、日历、备忘录", "个人 gmail 值得您信赖， 另外我在大批量出点全新的 gmail 。哈，有需求的朋友联系我！"]},
{"content": "", "reply": "3", "tittle": "类似 Babun 和 Cmder 的程序还有什么", "comment": ["git bash", "MobaXterm\r", "git bash\r", "msys2"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这几天买了一个域名玩，先是用域名绑定了 zoho 邮箱，然后发现访问站点不加 www 的前缀无法访问网站。</p>\n<p>于是我又添加了一个 CNAME 记录，名称为 @，值是虚拟主机提供的一个二级域名。</p>\n<p>然后添加的时候显示：\n<code>CNAME 记录与主机记录（@）的 MX 记录冲突，无法保存成功。</code></p>\n<p>设置如下图：\n<img alt=\"Markdown\" src=\"http://i1.piimg.com/1949/752d5fd3262d4404.png\"></p>\n<p>我目前想到的思路：</p>\n<ol>\n<li>做 301 转向，但实现这个也需要域名能指向我的虚拟主机。虚拟主机的提供商不提供直接使用 A 记录指向 IP 。因为冲突，我无法添加 CNAME 记录。</li>\n<li>绑定 MX 的主机记录为其他名称以避免冲突。但这么做也不可取。因为 zoho 邮箱要求主机记录值必须 @ 。</li>\n</ol>\n<p>请教大家：如何在避免冲突的情况下，实现不加 www 的前缀也能访问我的站点？</p>\n<p>PS：在阿里云(万网)买的域名，第一次遇到这个问题。。。貌似其他域名商不会有这种提示。</p>\n</div></div>"], "reply": "16", "tittle": "MX 记录不能与 CNAME 记录重复？", "comment": ["裸域做 CNAME = 作死（可能？）\r", "\r", "参见： ", "mx 和 cname 确实冲突吧。。。真的不能共存", "DNSPod 可以共存", " 阿里云就是这毛病，没办法…… Cloudflare 可以共存 @的 cname 和 mx 记录", "lz 我也这问题，搞定了 at 我一下，谢谢", " 不能共存。", "确实按照规定是不能共存的， DNSPOD 是可以，但是可能导致海外邮件收发出问题。", "裸域问题\r", "站内随便搜一下很多讨论,很详细", "用的 cloudxns ，裸域 link 到自己的一个子域，子域再 cname 到 cdn 的域名，目前访问和邮件都没发现有问题。。", "虚拟主机提供商不支持 A 记录指向，其实你也可以这样解析，但是如果主机商换 ip 了，你就得手动改。", " 我搜索了很久，总共有两个解决方案。一个是换一个域名邮箱提供商，有的域名邮箱提供商要去主机名是 mail 而不是 @，这样可以避免冲突。另一个方案是做一个 Link 。万网里面叫隐性 URL ，官方的解释：与显性 URL 类似，但隐性转发会隐藏真实的目标地址（例如：将 ", " 隐性转发到 ", " 后，访问 ", " 时，地址栏显示的地址仍然为： ", " ）。第二种方法要求转发的域名也要在同一个域名商，而且需要备案。", " url 转发已经不是 DNS 层面了，绑定主机了", "CNAME 类型相当于该条域名解析托管，所以会和其他类型解析记录冲突", "我不知道别家有没有类似的功能。 Cloudflare 提供根域名的假的 CNAME ，就是一个 Cloudflare 负责自动更新的 A 解析。", "不是共不共存的问题，按规定根域名不让做 cname\r", "MX 与其他任何记录都不会冲突，除了两条完全一样的记录", " dnspod 就这毛病"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>就是人数什么的也就几千人，然后服务的直播间估计也就一两个，带宽什么的都好说，不知道大家有什么好的思路么，谢谢大家了.</p>\n</div></div>"], "reply": "28", "tittle": "想些一个内网的小型直播服务，大家有什么好想法么？", "comment": ["几千人，就当 3000 人，直播间码率怎么也得 2Mbps 吧， 6Gbps 实时处理能力的服务器好说……", "几千人，内网。。。 ATM ？", "服务器端可以考虑 ", ", 推流用 obs ， Web 端观看用支持 rtmp 的 flash player 。", " 拉流的压力，可以通过建立下行边缘节点集群来分担。", " \r", "你看看楼主的发帖纪录你就应该明白\r", "楼主的脑袋里的想法是 100M 网线插上去就够几万人 1080P 了……", "FMS  server 应该可以支持", "\r", "原来上学搞电竞直播用的，带各种特效，串线麦克风之类的\r", "内网 100m 峰值上千人并发", "主要是都是走内网，外网没必要，不卡就行，码率这个都是商量", " 其实就是以前的直播坏了，看有没有现成的，没有现成的就自己撸一个", "内网 3000 人在线，楼主怎么得也是几万人的大厂吧。", " 没有没有，就是学生自己用， 3000 人估计是到顶的", "内网划在同一 VLAN 下用 VLC 做 udp 组播就好", "你需要这个 ", " 。然后自己写个后台管理管理，准备个两三台机器，做个集群搞定", "延迟要求高不高？ 我搭过一个简单的，用的\r", "ffmpeg + nginx-rtmp + flowplayer ，延迟大概 1 秒左右\r", "\r", "服务端的带宽问题，也弄成了其他服务器从第一个服务器接收后转发，延迟增加 1 秒左右，这样可以堆服务器数量支持更多用户\r", "\r", "有兴趣 @我，可以分享出来。\r", "简陋的半成品，不收钱", "如果能搞成 rtmfp 的，无论 iplevel multicast 还是 application level multicast 都能彻底解决带宽问题。\r", "\r", "然而我没试成功，只搞成 rtmp 的，也是因为没有需求，这就几十人内部用", "我在学校内网搞过 HLS 直播，用 OBS 就行， 720P 码率 3Mbps ，千兆网络可以带 200 多用户。更多就要用 P2P 了吧。", "谢谢大家，我会把大家的方案都看看", "人家建流媒体服务器，使用组播就可以啦，上面那些算出 6G 流量的不懂技术就别乱说", "13 楼， 19 楼正解", " 3000 人同时观看我觉得确实是 6Gbps 的带宽啊。。", "13 ， 19 楼正解，我的学校就是用 udp 组播内网传输 12 路标清电视，传输几路就占几路带宽，不受观看人数影响。说 6Gbps 技术上对应的是单播，组播的技术难点就是各级路由交换机的配置，还有大多便宜的无线交换机 /AP 不能配置组播转发。", "补充一下，各运营商的 iptv 也是用的组播", "内网能组播是最好的", "IPTV 目前基本都是用的内网组播  100M 的多\r", "目前中兴的方案比较成熟", "想问下，给某个朋友直播(对方输入我的 ip 来连接)，有什么简单的办法吗？最好能支持 x264 方便调整参数的", "刚好正在弄这个，也是内网版本，直接用 srs ，然后自己写个前台就行了"]},
{"content": ["<div class=\"topic_content\">gdb 即使用某插件，调试 gdb 还是很痛苦啊\r<br>vs 调试功能强大，但是一大堆无关文件，看着也头大\r<br>\r<br>有什么工具，可以干净地调试算法呢？\r<br>母亲还是觉得 vc6 不错，但是 stl 调试功能还是有点弱\r<br>\r<br>有什么更好的工具呢？</div>"], "reply": "68", "tittle": "用 c++做算法，用什么编程工具比较好？", "comment": ["VS", "cfree codeblocks", "完善的平台：\r", "\r", "Windows 平台用 Visual Studio >= 2015 ，如果不差钱再加上一个 Visual Assist X 。\r", "Mac 平台可以考虑 JetBrains CLion ，或者 Xcode 也能凑合用。\r", "Linux 可以考虑 KDevelop 。", "qt creator + cmake/make + mingw/linux", "VS", "vc6?????十几年前的东西还用？", "用 qt", "vc6 ???\r", "黑人问好.jpg", "vim + gcc + 打日志就够了", "gdb 有什么痛苦的？", "Codeblocks ", "Codeblocks or Dev-C++\r", "不直接输 gdb 命令还想多痛苦😂", "矫情。。。 c++ vse 宇宙无敌，啥叫一堆无用文件。。。太不尊重 vs 开发团队了。", " 你这样说 不太尊重外星文明", "“干净地调试”中的“干净”是什么意思", " 外星人不用 c++", "Qt Creator", "vim + xmake", "做算法 还是用 c 吧。。嘿嘿", "Dev-C++", "Dev-C++，功能一般，但用来做 oJ 足以，胜在轻量", "vim / source insight / sublime / vscode", "code blocks +1", "你母亲好厉害, 居然还会调试", "Windows: VS/CLion/Qt Creator\r", "Linux: CLion/vim", "您妈妈居然会编程，看来是编程世家😁", " 可能是老师", " lz 想说的应该是目前吧……", "gdb", "Dev-cpp", " 估计是这意思，笑死我了。", "用脑子比较好。", "怎么那么少人推荐 CLion ，我觉得 CLion 比 VS 好用得多。", "CLion 太贵……", "最厌烦 JB 的产品不能一次性买断。", "CLion 有点慢", "VS 开一个 Empty Project\r", "然后把要调试的代码直接拖进项目的 Source\r", "\r", "这时候你就可以调试他了\r", "\r", "最后搞完右键排除出项目，就行了。一个项目多次使用\r", "\r", "然后呢，有些 OJ 是文件 IO ，有些是键盘输入，后者每次调试都要输入很烦\r", "\r", "可以直接建一个新的代码文件，放一个 struct ，它的构造函数里面写 freopen ，析构写 close ，还可以按需要加上 system(\"pause\")之类的", "看到\"母亲\"有点懵逼了...", "算法直接 vim + g++ + gdb 嘛。。或者 Linux 下可以 CLion, 2016.3.2 的 bug 已经修了不少了", "win 下 vs2015 ，其他的话 Qt Creator.", "codeblocks/codelite 应该能满足楼主要求。\r", "mingw+vscode+cpp 插件也不错。\r", "但是其实都不如 vs 舒服，一大堆文件那个我感觉是楼主没用明白或者强迫症。", " \r", "我也觉得，必须有脑子才行\r", "\r", "就这种智商，这群人几乎可以告别 IT 界了", "连数学模型都不会，还搞啥算法。。。。。。。。。", "学个算法还纠结编程工具 ???\r", "当在做工程呐\r", "写工程项目推荐 Clion+CMake", "竟然没人推荐 eclipse + CDT", "vc6 看内存调试是挺爽的😂", "我以前也觉得 VS 臃肿，里面一大堆没用的东西，跟前辈学了一年才觉得里面每个功能、工程里每个文件都是有用的，平时也许不太用的着，但遇到问题的时候才显得这些东西的重要。\r", "对初学者来说 VS 就像飞机，密密麻麻全是按钮仪表盘，看着还不如自行车蹬上就能走，但学到一定程度就可以起飞了~", "CodeBlocks", "IDE 上手慢，但是熟悉之后绝对可以提升任何任务的工作效率。", " 跟我同学一样，我们现在在学 Java ，他会一些 C++，他觉得 intellij idea 比 VS 好用得多！", "emacs", "netbean", "建议练习白板用编辑器， notepad++之类，只要能编译个结果就行，碰到男的要调试， vs 不二选择", "Vim + YouCompleteMe \r", "用单元测试代替调试器。如果必须用调试器， gdb 也差不多了。但是需要用到调试器的时候就证明你代码或测试有问题", "居然没有人推荐面向 printf 调试", "qtcreator +1\r", "跨平台的最强大的 c/c++ IDE 不是吹的～～", "好好学 gdb 或者 WinDbg ，这二者非常优秀，无可替代", "讲道理 vc6 生成的工程文件和中间文件数量和 vs2015 差不多多吧。上面提到的那么多 ide ，哪个不是要生成中间文件和会生成工程文件的？\r", "如果是要打开就能编译调试还是 codeblocks 或者 codelite 吧，至少比较轻量级。\r", "vc6 的编译器都老掉牙了，茫茫多语法和特性和现在的标准不兼容，现在还用不是误导人么。\r", "clion 学生是免费的，也是目前最智能的 c++ IDE ，但是确实太耗内存了，而且不是 ssd 硬盘也不太扛得住，而且还要你学习 cmake 。综合起来还是 visual  studio 的消耗低也足够智能。\r", "\r", " 我以前搞 acm 的时候也喜欢 freopen ，然而后来知道直接重定向输入和输出流不是更简单？都不用写代码。 system(\"pause\")是仅支持 windows 的，你运行的时候 ctrl+f5 （非调试运行），运行完不会退出的，如果直接 f5 （调试运行），那直接结尾打断点好了", "没有比 gdb 更好的调试器了，少年多多修炼吧", " 哪个简单自己试试就知道了…… 你还可以在里面加自动测试的代码，计时、计内存的的代码…… \r", "你这个代码只要丢在 Source 里面，编译的时候会被自动 link 上，你动都不用动他。", "codeblocks +1", "vscode 有人推荐吗?", "vs2017 rc 只安装 C++的就完了。。", "楼主没有纠结到电子上", "我一般都是 notepad++\r", "不用 ide 是因为 IDE 的提示太烦人。打断思路。\r", "\r", "写完再放到 vs 里编译。", "如果你只能靠 debugger 来定位问题，说明你的 debug 日志不及格\r", "vim+gcc+valgrind 足够了\r", "有些时候做题之类的，单纯验证算法而不在乎代码质量的时候，我会用 kgdb\r", "你说 gdb 麻烦是因为没有好的 gui 前端", "除非你是 single file program ，不然还是用 VS 比较好，那些文件类似于 CMakeList ， Make File 的作用， C++是逃不开的。那些文件里好多还是临时文件，版本管理可以无视的。", " 确实， VS2017 终于不用再像以前那样装个 VS 花掉 50G 的硬盘空间了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://github.com/roxma/vim-paste-easy\" rel=\"nofollow\">https://github.com/roxma/vim-paste-easy</a></p>\n<p>楼主常年通过 xshelll 连接远程机器使用 (n)vim ，每次用 <code>&lt;shift&gt;&lt;Insert&gt;</code> 粘贴代码块之前都需要 <code>:set paste</code>，有点麻烦，于是写了个插件，检测字符插入的速度，如果间隔小于 0.01 秒自动 <code>set paste</code>，回到 normal 模式后再自动 <code>set nopaste</code></p>\n</div></div>"], "reply": "12", "tittle": "给自己写了个改善生活的 vi 小插件 vim-paste-easy", "comment": ["已用，多谢", "有问题，补全、 snippet 都会触发 set paste 的设定", " \r", "\r", "我用 python jedi-vim 的补全，没有触发这个问题，你的是哪个插件？\r", "\r", "目前没有使用 snippet 插件，还没测试过", "思路不错，还有待改进。\r", "我现在用的 set pastetoggle=<F2>", " \r", "我用 ultisnips 测试了下没有误触发，能否在 github 上给个复现过程？", "neovim 不是自带粘贴保留格式功能么。。", "  你确定你看懂了我的使用场景？还是我没看懂你的意思？", "  有待改进是指？能否明确说下？", "nnoremap <silent> yo :call YankOnce()<CR>o\r", "function! YankOnce()\r", "    let b:pastemode = &paste\r", "    set paste\r", "    autocmd InsertLeave *\r", "                \\ if exists('b:pastemode') |\r", "                \\     let &paste = b:pastemode |\r", "                \\     unlet b:pastemode |\r", "                \\ endif\r", "endfunction\r", "\r", "用的这个，感觉也够用。", "还得检测速度  牛啊", "赞思路", " 我后面改进了频率检测，如果文件在 0.1 秒内没有任何变化，也会自动退出 paste 模式，这样应该可以解决误触发的问题"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我在开发我的聊天机器人程序时遇到一个特殊的问题：因为我的存储系统可能存在 bug ，写入数据读出来可能不对(小概率)\n所以我希望在 float 的 4 个字节中嵌入我的校验信息，达到这种效果：</p>\n<ol>\n<li>我能解码出这个 float 的原始值</li>\n<li>我能通过校验信息判断这个 float 是不是我真实写入的</li>\n</ol>\n<p>请问哪位大神能帮我？</p>\n</div></div>"], "reply": "17", "tittle": "想个办法在 float 型 4 字节中嵌入校验信息，哪位牛人能出个方案帮帮我？", "comment": ["检验数据可以附在正常数据后面。 为啥非得在 float 格式上较真?", " 因为我不知道是不是存储系统的 bug ，也可能是我程序的 bug ，所以如果要是附加到正常数据后面，那这里的“正常数据”有可能已经是错的了", "楼上+1 ，你的校验数据可以放在你的数据后面或者前面作为一个 flag", "那你需要重新定义中新的 float ，底层储存方式都要重新设计。加油，少年。", "最简单的就是奇偶检验，其他的检验方式看回科班的书吧。", "你动了 float 的内部格式还怎么满足 ieee754 标准", "我们曾经用 redis 时也出现了这个 BUG ，后来。。。恩，确实是程序的 BUG ，不能怪 redis", "float 的前八位是指数位，后 24 位是尾数。\r", "\r", "你可以牺牲尾数精度，来占用最右的 n 个 bits 来写入你的校验信息。或者占用第 9 位到第 9+n 位。\r", "\r", "在写入和读取时都需要有这种处理转换，以保证程序在内存中使用的依然是标准的、准确的 float 。\r", "\r", "float 与 byte[] 转换可参考： ", "我先说一个我想的方案，大家帮我参谋一下，因为我确定我的 float 的取值范围最大不会超过 2^30 ，所以我把浮点数加上固定的 2^30+2^32+2^34+2^36 ，读的时候我就看我的浮点数减去 2^30+2^32+2^34+2^36 得的数是不是在正负 2^30 之间，还有没有别的办法？", "为什么不老老实实用 crc 一类的校验码呢。回去看看科班的书还是有用的。附加在数据后面，即使校验码错了也一样的。", "不知道你怀疑的存储的 BUG 是什么粒度的?位级别?不如直接每次存 float 就存两次?", "遇到这种情况，正常的想法不是赶紧换硬盘换内存么？", "按照 float 类型存储的数据是允许有误差的，并不是硬件的问题。\r", "一个问号？既然你存储系统有问题，你的校验特征码即便算出来了，和你想存储的东西混一起了，读出来也会有问题啊", "单字节异或得出值到第 5 个字节", " 靠谱", "  ", " 这个网站挂掉了，还会再开吗？（ v 站没有私信的方式，我就随便找了一个您的帖子，恕我冒昧~）", " 除了点故障，已经恢复"]},
{"content": ["<div class=\"topic_content\">\"你\" 的 Unicode code point 是十进制的 194564.\r<br>\"你\" 的 Unicode code point 是十进制的 20320.\r<br>\r<br>前者属于 cjk compatibility ideograph.\r<br>后者属于 cjk unified ideograph.\r<br>\r<br>我们一般使用后者, 但前者也存在, (根据维基百科)前者存在的意义在于 \"字源分离原则\".\r<br>\r<br>P.S. 我对编码的认识还真是浅. 有待学习和提高.</div>", "<div class=\"topic_content\">不同的字体有不同的渲染逻辑, 有些字体比如 \"Hiragino Sans GB\" (Mac OS X 10.11 自带) 会将两种编码渲染为同一个字体样式, 所以看起来两个字是一样的.\r<br>\r<br>分享一个文档链接: CJK Compatibility Ideographs Supplement (The Unicode Standard, Version 9.0) <a target=\"_blank\" href=\"http://unicode.org/charts/PDF/U2F800.pdf\" rel=\"nofollow\">http://unicode.org/charts/PDF/U2F800.pdf</a></div>"], "reply": "82", "tittle": "你知道 \"你\" 不是 \"你\" 吗?", "comment": ["owtf........", "靠这个是不是可以注册一批超高仿 ID 呢？", "还真是\r", "\r", "\"你\".codePointAt(0)\r", "194564\r", "\"你\".codePointAt(0)\r", "20320", " 注册起来，哈哈", "关键看字体", "\"你\" == \"你\"\r", "false\r", "\r", "感觉三观被震撼了", "发现有的手机这两个字显示有区别，有的没区别", "但是在日亚可以用中文输入法输入日本汉字，这就厉害了", "Android 7 表示有区别，一个顶上是一横，一个是横撇", "看标题还以为要讨论什么哲学问题", "我以为楼主要说 “死的那是你，你是你哥哥“", "这不是两个字吗？", "日文字和中文字吧？", "第一个你要怎么打出来？", "手机上看还是有区别的", "你 百度为您找到相关结果约 57 个\r", "你 百度为您找到相关结果约 100,000,000 个", "手机上能看到差别，电脑上看了半天不知道 LZ 在说什么。。", "这两个字可以拿去搜索下，反馈的结果是前者都是以没有撇的（在字典网站上的结果），但是都没有解释，后者就是正常的你（都看着完形崩坏了", " ", "我不认识「你」怎么写了", "```\r", "列 列\r", "女 女\r", "老 老\r", "里 里\r", "```\r", "\r", "我也踩过坑， unicode 的区块是 84308130 - 8430A330", "怪不得那么多部门都要你自证身份， 2333\r", "\r", "\r", "\r", "你 你\r", "侮 侮\r", "內 内\r", "抱 抱\r", "……\r", "这些字多的是，在 Unicode 的命名是\r", "CJK Compatibility Ideographs Supplement\r", "Range: 2F800 – 2FA1F\r", "The Unicode Standard 3.1\r", "\r", "这个看电脑字体用的是什么，像#12 用的字体可能就能看清两个字写法是不同的", "昨天刚看了一次 utf8,cjk 字体有一些是这样的。", "完蛋了，我也不认识你怎么写了。。", "Windows+Chrome 感觉标题里两个字略有不同一直盯着看 现在已经不认识这个字了", " 看了一会已经完全不知道“你”是什么字了", " ", "这有什么稀奇， unicode 里一样的字多如牛毛。", "看来有个好字体很重要", "正确的渲染应该会映射到同一个字形上去的。。。上面字体显示不一致的估计是 fallback 的问题，直接按照区间进行划分了", "貌似发现一个 bug, Firefox on Mac, 在浏览器中显示没问题, 闲着没事复制到 Python 中想试一下, 结果...\r", "\r", " ", "  \r", "\r", "复制后字竟然变了... 换用其他浏览器复制字不会变, 你们可以试下. 应该不是扩展的问题, 新建了个 Profile 也是这样...", "有一些简繁体, 字模差异非常小, 但是其实是两个字", " 因为我之前对 Unicode 的编码规范认识比较少, 所以刚开始看到 你 使用了两种编码有些好奇: 同一个字为何要使用两种或以上编码?\r", "\r", "所以更深入了解了一下常用的 CJK Unified Ideographs 和作为补充的 CJK Compatibility Ideographs Supplement. 然后去 ", " 找了一些资料进一步了解, 比如 ", "\r", "\r", "分享一下, 或许对一些朋友有帮助.", "![screen shot 2017-01-20 at 14 40 21]( ", ")\r", "\r", "看多了这个字，会突然不认识的。", "假的我", "\r", "少了一个勾", "Unicode 里很多长一样的，再举个例子（ Python 2 代码）：\r", "\r", "é 的 Unicode 是 u'\\xe9'：\r", ">>> print u'\\xe9'\r", "é\r", "\r", "但其实也可以表示成 u'\\u0065\\u0301':\r", ">>> print u'\\u0065\\u0301'\r", "é\r", "\r", "后者相当于字母 e (u'\\u0065') + 音符  ́ (u'\\u0301')：\r", ">>> print u'\\u0065'\r", "e\r", ">>> print u'\\u0301'\r", " ́\r", "\r", "不过两者其实在 Unicode 中是等价的，可以将后者正规化为前者：\r", ">>> import unicodedata\r", ">>> unicodedata.normalize('NFC', u'\\u0065\\u0301')\r", "u'\\xe9'\r", "\r", "\r", "扩展阅读：\r", " 等價性", " 呃， V2EX 不支持链接中有中文，补个编码后的链接：\r", " 4", " 4", "百度 id 可以注册😂😂", "  这样？", "'a'=='а'", "正好看到这两篇文章:\r", "\r", " 很对呀.\r", "\r", "如果是前端, 可以参看这个 ", "所以参与制定编码的中国人去哪了？", "好吧，我这默认字体一看就完全不同，进来看看大家", "你的名字", "在 console 里就看出区别了", "还有囗和口", "维基百科上说这个字是为了跟 CNS 11643-1992 编码兼容才收进去的", "日文汉字标准里所有的「尔」都是写作「尓」的，所以这个字应该就是「你」对应的日文汉字，虽然现在日语里已经不用这个字了。\r", "但是 Unicode 的编码还是有一定的偶然性的，比如「尔你称弥」这四个字中前两个字的不同写法有另一个编码「尓你」，而后两个字就没有。\r", "\r", " 你说的这种情况跟楼主说的看起来有点像，其实是两回事。", "谁做个针对汉字的 Unicode Normalization 估计会很好啊", " 所以说应该如何设置字体，让这些字能显示出来而非显示个 unicode 编码或方框呢？", "口 囗   这两字不放一块也不好分", "\r", "有意思啊", "搭车发一把我收集的英文版的'a'不是'a'系列 ", "\r", "\r", "欧摩西罗伊\r", "有趣", "你们好（？？？？？？", "发现一个码表\r", "派\t海\t流\t浩\t浸\t涅\r", "随意复制几个字符让你们见识见识\r", "[来自中日韓相容表意文字補充[CJK Compatibility Ideographs Supplement]]( ", ")", "完了，看多了完型解体了，现在已经不认得你了。", " \r", "\r", "我可能用的是假系统。", "  \r", "\r", "贴图不成功，尴尬。", "![]( ", " )  讲道理，我真不知道楼主在说啥。。。直到我打开电脑。。", "这种字儿太多了\r", "\r", "凉凉\r", "目⽬\r", "日⽇\r", "儿⼉\r", "毛⽑\r", "不不\r", "⿅鹿鹿\r", "⼥女女\r", "⼒力力\r", "⾥里里\r", "⽴立立\r", "⾏行行\r", "\r", "CJK Compatibility Ideographs & Supplements\r", "F900-FAFF\r", "2F800-2FA1F\r", "存在很多 confusables\r", "2F00-2FDF 又有很多\r", "归为 Kangxi Radicals\r", "\r", "更多可以从这里看到\r", " \r", "\r", "之前 @", " 做了识别 Unicode 的 Popclip 小插件，不过倒是不能识别 CJK Compatibility Ideographs Supplements", "对于很多程序员来说\r", "“;”和“;”也许更让人吃惊...\r", "\r", "\r", "分号在 Unicode 字符是 U+003B “;”。\r", "全形分号是 U+FF1B ：\r", "台港澳和日本标准为置中，如“；”，直排时亦然\r", "中国大陆标准为靠左下，如“；”；直排时则靠右上，新版 Unicode 增加配合中国大陆写法之“垂直分号（ PRESENTATION FORM FOR VERTICAL SEMICOLON ）， U+FE14 ” “︔”[3]，以兼容 GB 18030\r", "另有“小分号（ SMALL SEMICOLON ）”“﹔”在 U+FE54 ，源自 CNS11643 / Big5 。\r", "另有相似字符在 Unicode U+037E “;”，是希腊文问号；而希腊文分号是 U+0387 “·”。", " 你好，可以问一下你是怎么操作的么。我把两个 你都复制到 intellij 中 打印出来的都是 20320 。", "在手机上看显示不同 23  不过还真是第一次知道", "学到了，哈哈。", "。。。。。。。。。。。。。。。。\r", "真是学习了，居然不知道还能这么好玩", "iPad 上很清楚地看到两字有不同", "两个字明显的不一样大家看不出来了，好像没什么好惊奇的", "把这些字都收集起来，对付关键词过滤应该挺不错", "\r", "\r", "也就骗骗 cleartype 了", "卧槽图床插件挂了...这什么鬼地址", "google 能认出第一个“你”，百度不行。真垃圾", " 求客户端名称", " VeXplore", " 两个你字不同的，在有些系统下可以直接看到字型不同，可能你复制过程中出了问题，可能自动转换了什么的。如果是在 windows 下，你试试复制粘贴到 word 里面，可以直接看到字型不同。", "我去.. 我回到手机上才发现完全不一样的字", "你知道你不是你，所以你才是你。\r", "from 《遥远的救世主》"]},
{"content": ["<div class=\"topic_content\">前段时间支付宝的校园日记功能火爆异常，可惜太过火，昙花一现。\r<br>没有什么是码农不能做到的，既然校园日记能引起大家的广泛注意，我也自己动手来开发一个校园日记的 App 。前期构想是想让它成为时尚的大学生社交活动 App ，专为广大在校童鞋们打造的校园日记分享软件。可以上传自己的自拍照片、美食图片、心情感想等日记，实现随时随地分享自己，展现自己的需求。\r<br>开发过程中主要用到的有 MVP+RxAndroid+DroiBaaS ，前后大概耗时：一个礼拜，目前的成果页面大概就是下图这样啦,开发详情可移步： <a target=\"_blank\" href=\"http://blog.csdn.net/z_sawyer/article/details/54615708\" rel=\"nofollow\">http://blog.csdn.net/z_sawyer/article/details/54615708</a> ，欢迎指教，请友好吐槽~\r<br><a target=\"_blank\" href=\"http://wx3.sinaimg.cn/mw690/006tCJG3gy1fbx3e1rfsuj318g0qcn0v.jpg\" rel=\"nofollow\">http://wx3.sinaimg.cn/mw690/006tCJG3gy1fbx3e1rfsuj318g0qcn0v.jpg</a></div>"], "reply": "3", "tittle": "厉害了，支付鸨被封后，身为码农的我自己做了一个~", "comment": ["干货!顶一个！", "我觉得支付宝校园日记最重要的不是分享，而是芝麻积分区分是否有钱➕支付功能,这两个功能加起来才能搞事！", " 恩，有道理！再优化一下"]},
{"content": ["<div class=\"topic_content\">前段时间想做个 android 应用，于是开始复习 java 。这里不是为了黑 java ，写个 console 的程序实在是太罗嗦了。\r<br>相比 C#的 console.writeline()和 console.readline()就能简单的完全交互，而 java ……好吧。哎，本来想学个跨平台最强语言增加打击面……捂脸\r<br>现在看来我就只能抱着微软和最强 IDE 的大腿了。 web ，移动端， winform ， unity 通吃。即便某些领域.net 一点都不成熟。\r<br>看来年纪大了也没时间和心思去学习了解另一门语言了。\r<br>哎，吃老本。各位 csharper &amp;&amp; j2ser 共勉。</div>", "<div class=\"topic_content\">我说的 console 是命令行程序。。。不是调试。。。</div>"], "reply": "81", "tittle": "坚定不移的继续走.net 路了", "comment": ["log.v 不是吗？\r", "\r", ".net 可以去看看 Xamarin", "你需要 kotlin", ".net core 看起来不错？", "蛤？", "一看就知道深度不够，一个日志工具类就解决你的吐槽了，调用方式变成 l.e()， l.i()。够不够短？", "不谈.Net 本身，就说 Visual Studio 真不知道高到哪里去了， Android Studio 开发一下手机 app ，启动 IDE 等半天，启动 Gradle 又是半天，开发的时候，拖个 TextView 控件，特么 id 存放在 activity 的 xml 里面，文本内容放到 resource 的 string.xlm 里面， OnClick 事件存放在 java 源代码里面，呵呵。在 VS 里面，完成同样的事情，双击一下这个 Label 直接就 ok 了， Visual Studio 宇宙第一 IDE 真不是吹的。", "看不懂………", " 说的没错啊，我对 java 本来就不熟，我是说的相对的。", "宇宙第一 IDE 也挽救不了 wp 。。。", " 哈哈， wp 是扶不起的阿斗。", "退而求其次，我用 golang 。", "我还以为.com .net .org 的.net", "语言 C#更好，生态 Java 更好", "楼主真会瞎吐槽～ Java 的打印日志语句只是顺便的功能，为了 oop 而封装的有历史包袱，你自己可以封装个 s.o.l 也没人管你\r", "至于自动生成的不一样那是因为 IDE 默认有另外一套方式跟你以前写法不一样应该", "这就像我不升级 Python3 的原因是 print 一样。。。", "若兴趣爱好、若全部精通，那都无所谓了。若为了工作和职业，在 C#和 Java 之间， Java 完爆 C#。", " 是的。所以我并不是在谈论语言好坏，只是在表达哪款更适合罢了。\r", " 当初我也这么想的，学精 java 是不是可以起飞了，但现实不给机会。算了，攒钱开饭馆了。职业码农太辛苦。", "要是用 python 你不是要上天了", " VS 确实厉害，这可以说是 C#最大的优势了吧，可能再也找不到更好的了", "我软大腿是好 但是累觉不爱", "说实话， VS 确实不错， C#也很优秀，可事实就是 Java 还是排名第一的语言，生态这种东西不是语言特性就可以简单颠覆的， golang, node, python 每个都有杀手级特性，但仍然改变不了 Java 的霸主地位； OC 号称反人类的语法特性，但 iOS 开发还是一样火，一样挣大钱。\r", "所以还是那句老话：没有最强的职业，只有最强的玩家。", " 语言优势就不说了吧，毕竟 java 的轮子都摆在那里。 WP 的问题不是 C#和 VS 造成的，现在的微软也是自己作死，迟早毁在阿三手里。不过 C#也不是一群吃素的人搞出来的，一句话，语言和 IDE 都是帮助程序员实（完）现（成）想（任）法（务）的工具，能够帮程序员赚钱的工具就是好工具，能够帮程序员节省时间和精力的工具就是好工具。", " 同事在学 python 的，那个靠缩进来代替{}确实让我眼前一亮。\r", " 我也很赞同你，最后那句话是亘古不变的真理啊！", "不要想什么通吃不通吃，讲真，我碰到的通吃的语言只有 C 和 C++，我做了 N 年的 C++冷板凳， ", " 的 demo 基本就能上手写 winform 了，写 app 也就是一个星期熟悉一下 Android 架构和 API ，很多东西都是把 C++里面的思想换了个方式表达出来，馒头换花卷。", "java 和 c#差别能有多大啊，用 c#写过十多个小软件了吧，从来没去学过 c#，直接当 java 用", "LZ 你把 JDK8 的 Console 类吃了？", " 赞", "软粉加 c#码农路过", " 你真懒", "net 最近火起来了", "语言只是实现产品功能的手段，何必局限于语言呢。。能带领产品发展的技术才是好技术啊。。。从长久看，写代码对于整个产品线的贡献毕竟是小的", ".NET 政治不正确", "还是看看 JVM 上的其他语言吧， JAVA 太麻烦", "虽然对比 java 更喜欢 c#\r", "\r", "但 console.的话,c#能比 java 好多少……", "以游泳为例，看看世界纪录就知道了，自由泳最快，其次是蝶泳、仰泳，最后是蛙泳。\r", "\r", "所以在特定领域和特定时刻，语言确实是有优劣的，比方说在论坛上你说 PHP 是最好的语言，就没人会说不对。", "管它什么呢,一行能解决的事,我绝不用 2 行,车被造出来就是被爽的(我不是情怀党)", " 干得漂亮", "根据需求来吧， 首先你是个程序员，然后才是 net 程序员，\r", "从职业发展来讲 ，，根据需求随时切换语言的能力 还是要有的\r", "（ C++这种没有 GC ，语言自带各种坑爹属性的 除外），", ".Net 以后肯定是大热， Java 作为一门语言也完全不虚 C#，所以这俩都是可以的。。。。至于命令行的东西，楼主你既然都要做 Andriod 平台了，管他命令行干什么，用户都是直接操作 UI 的。。。", "可以用库去增强，比如 Java 的 lombok ，用注解代替一些样板代码。", "同.net 程序员", "其实 c#现在生态不见得比 java 差， java 有的 c#基本都有", "虽然 Java 是有点啰嗦，但是 console 程序难道不是 Scanner 类解决了吗？", "另外为什么说 c#就提 winform ，这玩意现在没什么人用了好吧。现在都是 web api 加 js 前端，有些老系统就是维护，像 mvc 之流新项目也就是做做内部系统用了", "也不能说 winform 没人用了，只能说做的人少了。原因是 C/S 的逐渐落伍。前一阵还看群里有人招 winform 大牛呢，做金融交易相关的程序。人家其实不关心什么跨不跨平台，语言是否优秀，要的就是快速出活~~", ".net 爱好者，目前靠 py 吃饭\r", "\r", "看 .net core 能不能搞点大动静出来了。", "java 高前端干不过 C#", "估计 lz 代码没写过超过 2w 行", "近来又在吹.net 多好了，要么是已经上岸多年，短时间内转型 java 又不是满意待遇的.net coder(例如我)。要么是已经在 java 路上多年的 java coder ，反正.net 还没火，火了再说那种。明眼人一看市场就知道哪边市场大，哪边待遇好。", " 不用说这种话，请直接上干货告诉我：写代码没超 2W 行和超 2W 对喜欢 C#和喜欢 java 的语法有什么影响。\r", " .net 不在我职业生涯中，完全是日常兴趣。就是为了自己做点东西玩玩，这么一来，肯定要选个容易上手又友好的。", " 也就是说 被我说中了吧", " 答非所问，看了回复，真的是满满黑历史， B", "也就在天朝对.net 这么抵触，很多地方 java 和.net 工作机会都差不多", " 当然比不上 lz 整天在问 apache 配 ssl 这种问题高端啦", "写 VB .NET ??", "支持你，坚持自己的选择", "c#从语言， ide 来说的确不错，但是就业还是大问题", "最近在研究 c#和 java 的语法差异，前者的确让人更“省心”，也许这就是 java 程序员看不起 c#的原因？我觉得想深入学习的话 还是 java 最合适。", "我是写 java 的，也想玩.net ，问下楼主.net 可以先写哪些东西，好获得一点成就感后继续", "Kotlin+1", "命令行？ python nodejs go 都很爽呀。 java 本来就比较繁琐。", "别扯没用的 哪个赚的多就用哪个 别几把扯情怀", " 大哥，你知道微软为了摆脱这种落后的模式才搞出一个 WPF ，然后你说的 Android 以及其他意中 GUI 的开发模式也都是借鉴 WPF 的吗。。。", " 意中 => 一众", "支持楼主！顶.Net", ".net core 马上就 2.0 了，可以搞一发", "靠 .NET 吃饭很难\r", "用 .NET 的思想造其他语言的轮子才是正确的选择", "Scanner 也很好用啊", "第一次听说以不容易写控制台程序这种理由，觉得一门语言不好用，写什么都是你自己决定的，任何语言写一个够体量的应用，都不是一两行能搞定的。", "同.net 程序狗,,,已经累不觉爱,,,打算转 Python 了 看了 Python 的语法之后 已经深深的爱上了他", " 我哪句话说过不好用。我想表达的主要思想是： JAVA 相对 C#语法太啰嗦，我没有太多时间和精力去学习，最后继续选择 C#。 V2 不乏这种看都不看清题意就来主观臆测的。", "   太啰嗦~。主 JAVA ，当时看 unity 的时候，和你反过来，特烦 C#的语法。但是都看得下来，一个语言的语法~精一个，其他都不是太大的问题吧，一般都是 1-2 天使用过程中就能熟悉的", "java 是比较啰嗦的语言", "我说，你见过哪个搞了几年开发的只会一种语言啊？", ".net 越搞越穷是真的", " \r", "\r", "看你的发帖记录，才 27 岁吧……\r", "\r", "我 22 岁大学毕业前依次学的 logo,basic,c,c++,25 学的 shell/python,27 岁左右学得 Lua,30 左右学得 php/js/c#， 33 学得 Node,35 学得 go 。\r", "\r", "不包括看得懂代码但不符合我审美的 java/perl/asp 之类。\r", "\r", "我相信这个坛子的很多人比我学的更多，毕竟我 30 岁才开始做这一行的。\r", "\r", "大部分的回答其实都想告诉你一个问题。\r", "\r", "这个世界有个职业叫程序员，但实际上并没有一种职业叫 c#程序员， java 程序员，\r", "\r", "既然是程序员，多学几门语言，在合适的场合下使用总没错。\r", "\r", "有可能是别人没看清题意就来主观臆测。\r", "\r", "但如果这样回复的人比较多的话，是不是还有种可能，你没明白大家在说的点？", " 恩，可能。", " C++是强迫症的最爱，重构也是强迫症的最爱～～～", " 的确不错，在 macos 里玩，可以玩 web 和 console\r", "\r", "只要你没窗口程序，完全没问题啊", " c++选择太多，强迫症纠结死。还是 python 这种 one way to do it 的语言比较适合强迫症", " python 这种 one way to do it 的，先要纠结 py2 和 py3"]},
{"content": ["<div class=\"topic_content\">最近在研究远程工作，发现英文好优势很大，别说远程工作了，直接肉翻到美帝或新加坡也是有可能的~\r<br>\r<br>可以楼主英文不够好，不够好到什么程度呢？\r<br>\r<br>考六级两次才过，第二次就比及格线多了几分\r<br>\r<br>口语听力完全不行，写作很菜，阅读一般\r<br>\r<br>看英文文档或者技术相关的电子书，怎么说呢，感觉自己看懂了，但实际上有一些可能还不是特别明白~\r<br>\r<br>楼主的技能树： python ， django ，爬虫， linux 运维，运维开发~\r<br>\r<br>感觉接国外开发岗对沟通能力要求比较高，运维岗位会不会好一点？或者有其他可以用文本沟通的岗位？</div>"], "reply": "23", "tittle": "英文不够好，适合做国外哪些远程 remote 的工作？", "comment": ["我知道开发的容易些，但是运维外包的没怎么听过", "磨刀不误砍柴工", "楼主为什么哪壶不开偏要提哪壶？", "一口是吃不了胖子的~  2017 继续努力  共勉~", "去做一件自己完全没有竞争力的事除了享受碰壁之外真得不到其他的了\r", "沟通不了很吃力的，以前有个俄罗斯人反馈软件问题给我，他英文不好，我也不是太好，结果很僵硬，后来他拍了个视频比划了半天我才搞明白", "楼主准备到哪里找，能不能介绍方向啊^_^", "英文不好可以考虑法国或者德国，大多数公司不要求英文。", "这个情况难道不是应该学英文吗", "那就学呗，你非干一件你不擅长的事，除了学还有啥办法？", "都知道不好啦，就赶紧补嘛", "比较合适的是相对比较“专”的模块。诸如驱动、固件这块。就算英文很差，也足够胜任 remote 。\r", "\r", "看楼主技能树，估计补补口语好些。", " 而是法语和德语 :)", "分享个小经验，以前给老美做事情的时候经常遇到要语聊或者视频的需求，由于时差的关系，我会解释说家里人正在休息，尽量用 skype 打字。一般没有十万火急的事情，他们也接受文字和 email 的。开发岗比运维岗更适合外包，运维大部分都会要求同时区。\r", "\r", "然后当然就是想点办法补习英文了。平常用得上，学起来就会更积极一些", "上了 upwork 发现自己的英文真做鸡啊。。默默的下了一个百词斩背单词去了", "肉翻已经 4 年了，英语有个雅思 6.5 基本没问题，但是要有个习惯和适应的时间，长期在国内的不可能一下就能英语沟通很好的。", "You are welcome\r", "\r", "平时多看看英文字幕的美剧，唱唱英文歌，口语，听力，写作基本都搞定了。像今天这种时候，上淘宝买个 Directv 账号看看 CNN 直播美国总统就任。拿国内的四六级来评定英文水平本身就是个谬论，肉翻都快 10 年了回去看初中的完形填空一样做不出来", "用中文的不只有大陆", "东南亚有很多做赌场的工作，都可以去试试", "找对日外包呗，对英语要求不高。", "英文不好可以考虑法国或者德国，大多数公司不要求英文。", "r#17 @", " \r", "听力还是不行，没有 youtube 的字幕 我简直就是英文盲，\r", "不过有了英文字幕 就好了，脑翻还是比鸡翻好", "还是肉翻比较靠谱。话说为啥我打 roufan 出来的是肉番呢（ ;))))"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>官网 <a href=\"http://apizza.cc\" rel=\"nofollow\">http://apizza.cc</a></p>\n<p>支持在线调试 api ，写文档以及导出文档，项目管理，团队协作等功能。</p>\n<p>这里有个 V2EX 文档的例子</p>\n<p><a href=\"http://apizza.cc/console/project/037b2e442bfab1e0b07aa664a2d4335d/browse?api=a1138225d0a54a3aa31dfba1e65e39d8\" rel=\"nofollow\">http://apizza.cc/console/project/037b2e442bfab1e0b07aa664a2d4335d/browse?api=a1138225d0a54a3aa31dfba1e65e39d8</a></p>\n<p>提示</p>\n<p>1.如果需要调试 api ，请安装一下插件，插件是做跨域用过的</p>\n<p>2.目前只支持 chrome 内核的浏览器，猎豹， 360 这些也可以用。</p>\n</div></div>"], "reply": "25", "tittle": "我们团队开发的一款 Api 管理工具，大家多多支持支持，给点意见", "comment": ["发一两次还好，再好的东西发多了也觉得恶心。", "这不就是 抄袭的 Postman 的界面吗？", "一共发了 10 个主题， 9 个是推广你这工具的，还只推广这一个", "其实广不广告都无所谓.\r", "主要是做得不行. 界面又不好看", "看到 Postman 好熟悉啊", "UI 细节的确不太好，但是支持做工具", " 恩恩，了解了，下次注意哈。公司的任务呢，不好意思。\r", "\r", " 我错了\r", "下次花钱打广告算了", " 发了 12 次？", "问题是 官网怎么打不开？ [・_・?] ", "挂了么", "卧槽，这不就是 postman 吗。", "多一些鼓励和支持，少一分冷嘲热讽。哪怕是抄袭，说不定就青出于蓝而胜于蓝呢？创业者不容易， PS ：我不是托哈。", "postman web 版。..", " 绝不是 postman 哈，我们之前是觉得 postman 文档不够好，才有开始做这个的想法，我们是觉得没必要增加大家的学习成本，很多是按照 postman 风格和体验来开发的。而且我们会改进 postman 不好的地方，增加我们自己对产品的想法，争取做的比较符合国内人的口味。\r", "这么就以来，很多小伙伴都给我们提了很多不错的建议和意见，我们都一一改进了，我想 postman 不会鸟谁了吧\r", "\r", "我们只是想把这个工具做的在好一点，有意见和建议的小伙伴都可以给我们提哈\r", "\r", "\r", " @", "  可以打开的呢\r", "\r", "\r", "\r", " 恩。是的。下次注意哈", " 我刚刚注册了，然后时不时来个 connection time out.", "会开源吗?这些数据还是保存在本地放心", " 恩恩，我们检查下", " 不过 api 管理是很有用的产品，期待你们做好了用起来。目前在用 postman.", " 还没有开源的打算，而且有的东西适合做开源，像一些框架性质的东西，有的不是很适合，比如我们这种产品，开源了只会让产品停滞不前。最终流产，数据安全肯定是我们要保证的。如果实在很担心，你目前可以只用测试服务器和本地 ip 做测试和写文档，不用把正式接口地址写到文档里面 ^_^", " 恩恩，谢谢", "每回看到这种，我都会强行安利 ", " 可迁移本地更安全更放心。", " 东西还行吧，做好就行", "界面还不错了", "额。原来是 A 座。", "其他类型的都用过  rap 之类的...   尝试下自动化吧，  写文档真的是要死人的...."]},
{"content": ["<div class=\"topic_content\">知道怎么在分页数据里面穿插另外一张表里面的数据么？</div>"], "reply": "8", "tittle": "laravel 一个问题", "comment": ["使用联合 /内联 /外联查询 然后再生成分页？", "两张表有某种关联关系吧？ 先分页拿到一页的数据，然后写 transformer ，在 transformer 中取关联数据。", " 最重要的是表没有可关联的", " 查询不到，因为数据不关联", "这个是查询问题吧，把查询弄好再分页", " 这就尴尬了，你一个页面用两个分页对象可以么……没关联的很难合并到一起，我做类似的时候就是两个分别获取的。但是你二者还没有很大的依赖。", "试试 with ？", "可先将 debugbar 安装上，看每个方法最后生成的 sql 运行语句"]},
{"content": ["<div class=\"topic_content\">极客学院\r<br>麦子学院\r<br>网易云课堂\r<br>51cto 学院\r<br>等等\r<br>\r<br>有没有 v 友在上面发布过课程呢？感觉如何？\r<br>\r<br>好像网易云课堂， 51cto 学院都可以录课程来卖了~</div>"], "reply": "目前尚无回", "tittle": "现在知识付费这么火，当 IT 兼职讲师是否是一个不错的选择？", "comment": []},
{"content": ["<div class=\"topic_content\">求推荐练字方法！</div>", "<div class=\"topic_content\">追加一下 发帖的原因\r<br>     日常工作生活中(这里指钢笔字或中性笔),字写的还不如人长得好看(虽然人长得也....)。 字如其人,17 年改变一下自己,除了敲点代码,搞点其他的,我认为要练一手好字还不算简单 贵在坚持。\r<br>\r<br>目前来看普遍存在\r<br>    很久不写字导致提笔忘字或写的出认不出(少笔画或结构之类？)的问题...,欢迎大家继续讨论,共同进步。</div>"], "reply": "142", "tittle": "程序员们,你们的字写的好看吗？", "comment": ["初中想练楷书，结果同桌的行书刚买的不想要了，对折卖给我了。从此不认识楷书，一路行书楷书走到大学。大学之后，特别是毕业之后，字都不写几个，略有退步了", " \r", "\r", "献丑了~\r", "没有专门练过，就是自己写着玩儿~", "我想写的东西，基本上就能写好，不是我情愿写的，恶心到自己不能看。。\r", "要不从今天起，每天写三两行情书？", "只能说看得懂", "写字✍️技能退化中…", "特别丑，和小学生似得，现在写东西能打印的全靠打印_(:3 」∠)_", "写字手会发抖，经常忘记字，笔顺不对，基本上已经不会写字了，写出来的东西嘛，我过一段时间自己都不知道写的是啥", "所以手机打字用手写的，至少还会写字", "已经不会写字了", " 这域名可以", "是个垃圾，不过能看懂。。。", "前幾天朋友結婚，我寫的對聯", " 有点康复治疗的 feel😂", "我写的已经是甲骨文了 除了我（有时候我也看不懂）已经没有多少人能看懂了¯\\_(ツ)_/¯", "为什么你的一瞥这么长，如果我爷爷看到了会打手的", "要不然弄个戳子干啥…😂", "唉，从小学二年级到现在一直是一个水平\r", "\r", "写的福字 能扫出来。。", "把你们秒成渣", "去年认识到自己字太丑，今年开始练字。", "人好看就行…", "不会写字了，比幼儿园还丑。", " \r", " \r", " \r", "谢谢大神们的指点。", "不仅不好看，现在字都不会写了", "一直都很丑", "在使用键盘一段时间后，我写字会变好看一会，尤其是英文字符。\r", "（可能我比较适合去学画画?）", "咦，我是一个喜欢写字的程序员，写得也不好。但什么事贵在坚持，选一个你自己喜欢的字体，每天练习一个小时左右，然后平时在写字的过程中用到自己练习的样子，而不是自我体，几个月后应该就有所成效。\r", " \r", "共勉！", " 同感", "自创狗爬体   大家不用膜拜我了。。。。。", " 666 有没有想过啥原因（滑稽）", " 哈哈 这就尴尬了", " 这是在秀啊 好羡慕", "太久不写汉字，我已经快控制不住我这手了。", " 唉 通过帖子和周边朋友来看,这是普遍存在的问题,甚至存在忘字。。。", " 厉害厉害 感谢分享", "字特丑的路过，从小就鞋子就不好看_(:з」∠)_", "练过书法哈哈，就那臭字凑活看呗", "一句话评价就是，所以觉得自己写字丑的人，都在我身上找回了自信。", "不仅丑，还提笔忘字", "我们要这样想，一般字写得难看的，长得都好帅。", "好歹我也练了十几年书法了。。最近基本已废。。", "我的字，我自己给自己两个字 辣鸡"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题，我是在安卓手机上看的，觉得那个 logo 的动画像是原生的，实现起来应该不难，很好奇下面的“滴滴出行“文字动画效果动画是怎么实现的，求大神指教～</p>\n</div></div>"], "reply": "6", "tittle": "求教滴滴出行 APP 启动页出现的动画效果实现方法。", "comment": ["svg?", "\r", "其实很简单", "有 iOS 版本的吗?", " 有 iOS 版本的吗?", " ", "\r", "善用搜索", "从回复中可知有些人获取知识的能力简直堪忧"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>基于<a href=\"https://speedata.github.io/luaqrcode/\" rel=\"nofollow\">luaqrcode</a>生成的二维码数组数据。直接生成 BMP 格式数据。</p>\n<p>主要用于将字符串直接转换为二维码图片。</p>\n<p>不选择 jpg 或者 png 格式，是因为看了下这两种格式的定义，感觉略微麻烦。 BMP 可以很简单的硬怼。</p>\n<p>项目地址：<a href=\"https://github.com/kevin1018/luaqrcode_bmp\" rel=\"nofollow\">这里</a></p>\n<p>Lua 是随用随学，代码可能不太好看，效率也没太考虑，属于对照 BMP 格式，硬怼，大力出奇迹的那种。</p>\n<p>欢迎 PR 。</p>\n</div></div>"], "reply": "4", "tittle": "写了个用 Lua 生成 BMP 二维码的小东西", "comment": ["这玩意儿 有什么用？", " 我当时写这玩意 主要是因为项目里面有些需要变动的东西，因此用 c++调用了 Lua\r", "\r", "需求就是 c++那边传过来一个字符串，要生成对应的二维码图片，然后转成 base64 返回去\r", "\r", "早了半天也没有找到比较合适的 Lua 实现，于是就自己撸了个……\r", "\r", "要说其他用处，也许 openwrt 上的 luci 也许会用到，生成个动态二维码啥的\r", "\r", "但是大部分情况下，是没卵用的，只是我今天比较闲 2333", " \r", "\r", "如果说，直接 lua 了用还是听靠谱的。\r", "\r", "但是，为啥要 Lua 做这个传给 C++.不是应该反过来吗？", "不应该是 lua 调用 c++ 来做吗····· 用 lua 来搞何苦呢"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>试了下<a href=\"https://github.com/shiba24/deep-learning-for-human-part-discovery-in-images\" rel=\"nofollow\">这个</a></p>\n<p>aws g2.2 large w/ 4gb gpu 爆内存</p>\n<p><a href=\"https://github.com/shiba24/deep-learning-for-human-part-discovery-in-images/issues/4\" rel=\"nofollow\">issue</a>里说\n最好的 aws g2.x w/ 12gb gpu 勉强能跑，不过需要 500 天。。。</p>\n</div></div>"], "reply": "8", "tittle": "deep learning 到底有多耗 gpu 的内存？", "comment": ["图库多大？", "各框架对 gpu 的使用不尽相同，貌似在 VGG16 这一块，加载预训练的模型然后作改动， theano 的表现好一点，代码里面用到的，我尝试过 keras+tf 的方式用低端显卡(GT 系列)也是没法跑，算了对图像这一块无感了；用低端显卡跑一个 attention 的模型跑 nlp 相关的，也要 4-5 天，不过能跑下来已经不错了，可以不用显卡内存，而用主机内存(目前用的是 16G)也可以跑.", "Current maximum batchsize is 3 for 12 GB memory GPU.\r", "Also it was confirmed that MBP (Late 2016, memory 16 GiB) can run with batchsize 1.\r", "\r", "gpu 消耗和单次放入的数据量有关。由于这里放入的是图片，单个数据比较大，所以 batchsize 只能控制比较小。 batchsize 很多人认为越大越好，以 gpu 能放下为标准。\r", "\r", "同时，和神经网络本身也有关系，网络的参数有多少占用多大可以直接计算。", "全连接参数多，卷积 feature map 多，比实现省内存还看 mxnet ，就是文档如翔。", " 用主机内存跑神经网络的关键词是什么，谢谢", " 没用过 chainer ，但是看了它的文档有 CuPy ，应该是根据 api 的接口来使用 kernel 操作吧；按照我对 tensorflow 的理解和使用，通过对计算时使用具体的 cpu 和 gpu 的显示声明方式，加之 disable gpu 自动加载(在 config 里定义)来实现我之前评论里提到的方式。比如 tensorflow 里面可以定义 with 代码段，来显示声明如下操作用的是 cpu 或 gpu ，同时在多个设备(device)时显示地指定 gpu0,gpu1,...(如果有多个的话)\r", "\r", "with tf.name_scope('encode'), tf.device('/gpu:0') \r", "\r", "不过我还是觉得这样很费时间，只能作为尝试吧，还是应该选择一个较为合适的框架以及足够先进的硬件资源，那样不用太操心 performance ，最讨厌内存不够硬件太差，心太累……", " 亲身体会了下你说的“心太累”是什么感受了。花了一天也没重现 deeplab 的[attention]( ", ") 模型， bug 太多，脚本里还有 typo...", " 图库[这里]( ", ")\r", "1w 多张， 1 个 G 左右"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近在研究各家的视频托管服务，感觉在 iPhone 上打开都或多或少有些问题。产品主要针对中美两国用户。</p>\n</div></div>"], "reply": "2", "tittle": "话说， wap 端产品中的视频托管在哪家比较好？在 iPhone 上需要能正常打开", "comment": ["韩国\r", "到电信，网通，速度都可以，到美国更快，移动没有测试\r", "\r", "100M 独享， 1 个 IP ， 24CPU\r", "硬盘，另加\r", "费用一个月合到 2800 人民币\r", "\r", "用了一年多了", "七牛无压力"]},
{"content": "", "reply": "38", "tittle": "chrome55 能关 directwrite 吗？开了 mt 后眼瞎的感觉", "comment": ["在用 centbrowser Chromium 55.0.2883.103 效果还算满意。\r", "\r", "关不了吧，我都不敢升级，一直在用 51.0.2704.106", " cent 的内核版本和 chrome 同步更新？？？", " 比 chrome 慢，比国内的壳快很多。没有国内壳的无用功能。", " 谢谢", "49 没关 win 下感觉还行", " 版本控，就是想玩最新版， 2333", " 49 到 50 有一个令我讨厌的特性 xD", " what ？都是越更新越好呀", " 哈哈，我版本跟你一模一样， Chrome 天天弹窗提示我版本太旧。。。", " centbrowser 是周鸿祎用来搜集你数据，组织上用来看着你的。怕你不知道，提醒一句。", " 多谢，我还是比较喜欢 chrome ，就是这个字体太难看，显示太细，如图\r", "\r", " ", " 用回 51.0.2704.106 是唯一的办法，但是现在独立安装包很难找到了， google 封杀旧版封得挺狠的。", " 作为一个喜欢收集软件的人 拥有了 26-至今版本的所有安装包 哈哈", " 老哥稳，我用 91 换 51 怎么样", "我觉得还是要跟上时代的，毕竟 DirectWrite 比 GDI 快，对 OpenType Features 等功能的支持也好，而且现在 MacType 也支持 DirectWrite 的渲染参数修改了。\r", "我现在开着 MacType ，在 Chrome 里设置默认字体为思源黑体，再用 CSS 把宋体和微软雅黑替换成思源黑体，我觉得效果不比以前的 GDI 差。\r", "Chrome 很早以前就把 GDI 的代码全部删除了，某些国产浏览器可能还留着，但是我觉得也不太可能独自继续更新了，以后效率和兼容性恐怕都是问题。", " \r", "同样锁了 51 版本\r", "在 Chrome 快捷方式的目标参数里面添加--disable-background-networking\r", "就没有提示了.", " 请问下具体操作方法？？？多谢！", " 谢谢，还真不知道。求详细", " 网上查不到 CentBrowse 的开发商信息啊", " ", " 这里下载最新版 MacType 安装，然后到 C:\\Program Files\\MacType\\ini 下去找你要使用的 ini 配置文件，在 [General] 下找有没有「 DirectWrite=1 」这一行（大部分自带配置都应该有），如果没有的话加上，然后开启注册表模式重启， DirectWrite 修改就打开了，如果不满意效果的话可以在配置文件里更改 GammaValueDW= 数值。\r", "Chrome 的默认字体在设置里修改就行，字体替换代码：\r", "```CSS\r", "/* 替换简体中文字体 */\r", " { font-family: \"宋体\"; src: local(\"Noto Sans CJK SC\") }\r", " { font-family: \"宋体\"; src: local(\"Noto Sans CJK SC\"); font-weight: bold }\r", " { font-family: \"新宋体\"; src: local(\"Noto Sans CJK SC\") }\r", " { font-family: \"新宋体\"; src: local(\"Noto Sans CJK SC\"); font-weight: bold }\r", " { font-family: \"黑体\"; src: local(\"Noto Sans CJK SC\") }\r", " { font-family: \"黑体\"; src: local(\"Noto Sans CJK SC\"); font-weight: bold }\r", " { font-family: \"微软雅黑\"; src: local(\"Noto Sans CJK SC\") }\r", " { font-family: \"微软雅黑\"; src: local(\"Noto Sans CJK SC\"); font-weight: bold }\r", " { font-family: \"Simsun\"; src: local(\"Noto Sans CJK SC\") }\r", " { font-family: \"Simsun\"; src: local(\"Noto Sans CJK SC\"); font-weight: bold }\r", " { font-family: \"SimSun-ExtB\"; src: local(\"Noto Sans CJK SC\") }\r", " { font-family: \"SimSun-ExtB\"; src: local(\"Noto Sans CJK SC\"); font-weight: bold }\r", " { font-family: \"NSimsun\"; src: local(\"Noto Sans CJK SC\") }\r", " { font-family: \"NSimsun\"; src: local(\"Noto Sans CJK SC\"); font-weight: bold }\r", " { font-family: \"Simhei\"; src: local(\"Noto Sans CJK SC\") }\r", " { font-family: \"Simhei\"; src: local(\"Noto Sans CJK SC\"); font-weight: bold }\r", " { font-family: \"Microsoft YaHei\"; src: local(\"Noto Sans CJK SC\") }\r", " { font-family: \"Microsoft YaHei\"; src: local(\"Noto Sans CJK SC\"); font-weight: bold }\r", " { font-family: \"Microsoft YaHei UI\"; src: local(\"Noto Sans CJK SC\") }\r", " { font-family: \"Microsoft YaHei UI\"; src: local(\"Noto Sans CJK SC\"); font-weight: bold }\r", " { font-family: \"Microsoft YaHei UI Light\"; src: local(\"Noto Sans CJK SC Light\") }\r", "```\r", "「 Noto Sans CJK SC 」可以替换为任何你想要的字体名（如果你装的是 Adobe 版本的思源黑体的话就是 Source Han Sans SC ），把代码放到 Stylish 里应用对象设置为全部就行。\r", "替换完的效果：\r", " @", " 想过查不到 CentBrowser 开发商信息的原因没有？这事儿其实也是一故事。反正我是查到了，结果发现麻麻黑，冷汗直冒。", " 多谢！还有一个问题不太明白，我的 mactype 配置文件中没有 DirectWrite=1 ，我自己加了之后， chrome 的显示和没加之前并没有区别，请问下怎么看是否生效了？", " 对了，还有一个，你的思源黑体是哪里下的？我在站长之家下的 80+M ，安装后用 stylish 替换后 360 那个页面可以了，但是 v 站的字体却变细了，细的没法看，请问下这什么情况？", " 你分别在开启和关闭 MacType 的时候对比一下 UWP App 吧（比如设置），区别还是比较明显的， Chrome 因为用的不是标准的 DirectWrite 所以可能区别没有那么明显。", " \r", "\r", "\r", "这是官方下载地址，不过我觉得应该不是这个问题。你截个图来看看？", " 这能有什么问题呢 留个 QQ 我发给你呗", " 我用了你给的字体地址，现在可以了，我之前那个字体名字是 Source Han Sans ，看来是 adobe 的，换上你那个没有发虚的情况了，多谢！！！ ", " ", " 现在好了，用的 21 楼的方法和 26 楼的字体，多谢哥们！原先没用 mt 的时候也没感觉有什么，用了之后，再看原先的，真是没法看，字太细了", " 求背后的故事", " 说出你的故事吧", "难道正确的方式不是避开宋体么？\r", "之前一直不知道说 chrome 字体虚是什么鬼，因为我 Linux/Windows/mac 下 chrome 的渲染效果都挺好的。直到看到 12 楼的截图😄", "Google Chrome\r", "37 版开始，网页支持 directwrite 加速。\r", "41 版开始，菜单、书签强制使用 directwrite 加速。\r", "42 版开始，默认禁用了 NPAPI 的插件，同时使用了新的书签显示模式。\r", "44 版开始，无法在 flags 里禁用用户图标，可以在启动项里添加 --disable-new-avatar-menu 。\r", "47 版开始，无法在 flags 里禁用用户图标，--disable-new-avatar-menu 失效。\r", "52 版开始，默认 directwrite 渲染，无法禁用。网页回退键更改为 Alt+左方向键，但有扩展可以重新启用。\r", "53 版开始， GPU 渲染性能大幅提高，默认启用 Material 风格界面，标签页高度增加。可以在 chrome://flags/#top-chrome-md 选择 Non-material 。\r", "54 版开始，默认不集成 Flash 组件。\r", "55 版开始，默认启用 Material 风格界面，无法禁用。\r", "\r", "之前用原版，现在改用 CentBrowser 了，对应 chrome 是 50 版本，不求最新，够用了。禁用了 directwrite 渲染，同时装了 Comic sans 字体扩展，显示的英文字体和数字变大变粗，看起来舒服，眼睛不累，中文字体会变成宋体。不装新版是因为 52 版本开始连 backspace 键都得用扩展，太离谱了。", " 楼上有个说收集用户信息的，没闹明白有什么故事，另外请问下 centb 的扩展和 chrome 通用吗", " 饭卡论坛里很多人推荐这款浏览器，好用，内置了很多功能，还可以关闭 DirectWrite 、可以设置 Tab 最小宽度、自带视频独立窗口和下载扩展、省内存模式等。\r", "另外风之影浏览器也挺好的，就是不能关闭 directwrite 。扩展就可以直接装 chrome 的扩展，官网上的 appcenter 提供了常用扩展，是离线版，为了没有 google 账号不能翻墙的人方便使用。\r", "是否收集信息不清楚，我也不在乎了，自己又不做特殊的事，不用担心。 QQ 会扫描硬盘，收集的信息还要多，我们还不是照样用。", " 谢谢，我下个试试去", "alert(\"测试\")", "<script>alert('OK')</script>"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>不考虑 IPS 了\nIPS 已经在 U 系列里选过了，现在想购入一个 MVA 的， DELL 优先选择</p>\n<p>因为没了解过 MVA 这个东东，其他品牌型号也可以推荐一下，谢谢啦。</p>\n<p>据说 MVA 撸代码对眼睛比较舒服。我现在每天上班带个防蓝光眼睛，然后觉得屏幕有点黄感觉很舒服，而且我不喜欢显示器亮度太亮</p>\n</div></div>"], "reply": "19", "tittle": "DELL 有哪些是 MVA 面板的显示器", "comment": ["求科普 MVA", "MVA 的友达面板居多，看看哪几个是明基电通（佳世达科技）代工的吧，除了 MVA 面板，还要看背光，直流供电是最佳的，但是这个成本高，不行的话求其次选高频 PWM 调光吧。不要看分辨率，不要看物理尺寸大小了。最后，选最贵的一般没错，折腾多年，说实话，性价比也就骗骗新手。", " 其实科普了也没啥用...\r", "求试用 MVA", "...艺卓吧", "我用的 BENQ BL2410PT ，觉得挺好的，不闪屏也带滤蓝光功能，能竖过来，不过没竖过", " 谢谢 刚看了下挺不错。还看到一个 Benq BL2420Z 和 这个很像", " 谢谢 涨姿势中。。。", "MVA 早就停产了吧。现在都是 IPS 的天下。", "我的显示器是明基的 MVA 屏，貌似 dell 的多是 IPS 的。就色彩上 MVA 色调偏暖，亮度稍低，色彩浓郁一些， IPS 偏冷，亮度稍高，艳丽一些。", "以前用 DELL 的 2408WFP ， S-PVA 面板，那个艳丽，那个通透，真是怀念\r", "后来因为一次电源开关故障，结果被换成了 U2410 ， IPS 面板，听说 IPS 色彩还原比较，然而我还是喜欢 S-PVA 的艳丽与通透。\r", "PS:为什么现在 S-PVA 面板的显示器那么少了呀？", "虽然现在用着 3000 元的显示器，不过让我感觉写代码看着最舒服的还是很早时候公司里的最低端优派 17 寸 TN 屏，那个亮度很温和，现不像现在亮度调到 0 都比那个剌眼。\r", "\r", "DELL 没用过，看了朋友的开箱，默认高度直接闪瞎眼。\r", "\r", "而且我发现天生亮度高的显示器似乎调低亮度后画面色彩变很差，没有本来就亮度低的显示器舒服，不知道是不是心理作用。", "mva 现在都是明基的天下", " 不是你的心理作用， MVA ， PVA 和 TN 面板相对于 IPS 对眼睛要更柔和，刺眼是因为 LED 背光的因素，如果碰到了非直流变压或者低速 PWM 调光，闪烁是不可避免的，唯一解决闪烁的问题就是把亮度调到最大（小窍门：其实也不需要调到最大，只需要调到高于眼睛能分辨出闪烁的阈值为准，最简单的方法是用手机摄像头对准屏幕，这时候多半会看到屏幕上的条状光带，然后逐步调高亮度，直至光带消失。）\r", "\r", "背光还是 CCFL 的好，因为是靠荧光激发来产生光照，是长余辉型；无奈 CCFL 本身含汞（其实跟日光灯原理是一样的），而且成本高于 LED ，所以被逐渐淘汰。\r", "\r", "现在出的显示器，不管是产品本身质量还是显示质量都比以前差很多，这都是厂家不断降低成本的必然结果，如果不是苹果出来，估计现在还是万年的 1366×768 的分辨率。", "详细参见： ", "昏！ V2 对 youku 链接自动处理也是醉了：\r", "\r", "<iframe height=498 width=510 src='http://player.youku.com/embed/XNTE5ODA4MzA4' frameborder=0 'allowfullscreen'></iframe>\r", "\r", "网址手动输一下吧： v.youku.com/v_show/id_XNTE5ODA4MzA4.html", "明基有 MVA 的，好几款，可以看看，戴尔好像就一两款吧", " 对 就是因为暖一点 暗一点才喜欢的。现在我都是把显示器调的的很暗。眼睛经常疼的很", "MVA 我用 BenQ", " 有推荐的哪一款不。就像 ips 很多都推荐 DELL U 系列"]},
{"content": ["<div class=\"topic_content\">简单的一段代码：\r<br>\r<br>#include &lt;iostream&gt;\r<br>using namespace std;\r<br>int main() {\r<br>    cout &lt;&lt; \"大牛勿喷\" &lt;&lt; endl;\r<br>    return 0;\r<br>}\r<br>\r<br>控制台输出的内容是这样的：\r<br>\r<br>D:\\workspace\\CLionProjects\\untitled1\\cmake-build-debug\\untitled1.exe\r<br>澶х墰鍕垮柗\r<br>\r<br>Process finished with exit code 0\r<br>\r<br>百度之后说是修改 File Encodings 里面的 IDE Encodings:UTF-8 和 Project Encodings:GBK/UTF-8 。\r<br>然而照做了都没有显示正常，希望遇到过或者懂得能帮一把，先谢谢了。</div>"], "reply": "7", "tittle": "新人求问 Clion 控制台乱码问题，大牛轻轻喷。", "comment": ["CLion 编辑器右下角的 File Encoding 默认是 UTF-8 ，点击切换成 GBK 。最好在打代码前就切换好。一年前我是这么做的，现在可能有差异。", "File -> Other Settings -> Default Settings -> Editor -> File Encodings: \r", "\r", "IDE Encoding: UTF-8\r", "\r", "Project Encoding: UTF-8\r", "\r", "Default encoding for properties files: UTF-8\r", "\r", "然后新建一个工程试试。", " 还是没有正常。", " 点选了 GBK 但是还是显示 UTF-8 ，也没有反应。", " \r", " 谢谢谢谢，我知道了。在下面换成 GBK 的时候我一直点的 Reload ，应该要点 Convert 才对，非常感谢。", "在此整理一下解决办法：\r", "\r", "File -> Settings -> Default Settings -> Editor -> File Encodings: \r", "\r", "IDE Encoding: UTF-8 \r", "\r", "Project Encoding: UTF-8 \r", "\r", "Default encoding for properties files: UTF-8 \r", "\r", "编辑器右下角的 File Encoding 默认是 UTF-8 ，点击切换成 GBK ，弹出的菜单中选 Convert 。\r", "\r", "然后就可以开车了。", "Windows 的默认编码应该是 GBK 。如果楼主从 Clion 的控制台切换到 Windwos 的时候，应该还是会乱码..."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><ol>\n<li>如果有一个字符串，里面是数字（是否连续和个数不定），运算符号（加减乘除）同样是否连续或者个数也是不定，还有圆括号。怎么判断这个字符串是有效的，能得到运算结果的？</li>\n</ol>\n<p>我想了一下，这个问题应该是考察编译原理的内容，词法解析，但是我做不出来。我想到的办法就是用正则表达式，但是很难把所有场景都想到。求教小伙伴该怎样回答这类问题？</p>\n<ol>\n<li>第二个问题是，如果现在有一个大文件，比方说类似于 raw data 的，一行是一个数字，规律是递增，一共有 1 百万行，也就是说从 1 到 1 百万，现在如果需要全部读入内存，而且不考虑系统内存的大小，也就假定系统内存足够大。问题是，我们初始化了一个数组，然后往里面填充这一百万个数据，数组变量的内存变化是怎样的。</li>\n</ol>\n<p>我想了一下，在 Python 里面根本不需要考虑这样的问题，我的回答是，可能 python 解释器在背后将这个数组变成了一个链表，面试我的人感觉对于这个回答不是特别满意。面试我的人直接用了一行 java 代码初始化了数组，我也对于 java 不熟悉。求教小伙伴怎样回答这个问题比较合适？</p>\n<p>面试的是一家非常好的公司，面试的岗位是 Python 自动化开发。感谢小伙伴的时间。</p>\n</div></div>"], "reply": "45", "tittle": "昨天面试了一下，几个问题答不上来，特此求教小伙伴们", "comment": ["第一道题用栈，（和数字入栈，遇到+-）出栈", "第一道题的话，我的思路是：\r", "1:排除含有数字和运算符之外的任何字符；\r", "2:括号是否左右对称；\r", "3:按照括号、乘除、加减这一优先级分组计算，计算前除数是否为 0 ；\r", "4:继续 step3 ，直到分组只有 1 组，也就是最终结果。", "一楼正解", "第一题明显是考你数据结构，这是一道很基础的栈的题目吧。", "第二题应该是和编译原理有关，而不是像你回答的 python 不需要考虑这个问题，这明显不是面试官想要的答案。", "lz 还要继续加油啊", "第一题写出表达式的文法然后词法分析就好了\r", "给一个 bnf 描述吧\r", "\r", "expression = [ '+' | '-' ] term { ('+'|'-') term }\r", "term           = factor { ('*'|'/') factor}\r", "factor         = ident | number | '(' expression ')'\r", "\r", "ident 是变量名， number 是立即数，不需要可以删掉\r", "这样的好处是不需要计算就可以知道这个表达式是不是可计算的= =||\r", "这个文法可以用递归下降直接写出来", "第一个问题用两个栈，最后看栈是否空。\r", "第二个问题没看懂，是想问数组类的动态大小实现吗？（保持至少 1/2 元素，可是 Java 的数组是提前限定大小的)", "1.感觉最简单的只用判断\"(\"、\")\"数量是否相等及 +-*/ 不允许连续出现就行，当然这个没考虑除以 0 。\r", "2.不知道 python 是怎么实现的，某种实现是当空间不足时直接扩大一倍，下次不足继续扩大一倍空间。", "怎么把数组变成一个链表啊，你就算乱猜方向也不对……\r", "其实就两招，一个是 C++ STL 里面的 vector （ python 也是），还一个就是 pre-allocate 全部了。\r", "不过我不是很懂这个题，如果是顺序递增为何还要读入？整个过程和是否递增似乎也没有任何关系。", "1. 逆波兰式\r", "2. x2", "第一题应该是经典的括号匹配\r", "第二题没太懂意思", "谢谢楼上的小伙伴，第一个问题我最后说到了用栈，但是是是在面试官的一再提醒下，才回答出来的，确实应该是用逆波兰式。\r", "\r", "第二个问题，确实如 SpringHack 和楼上的小伙伴提到的，应该是 X2 的关系，即没满了 2 的整数次方倍，就自动乘 2 。", "ls 各位回答的都是逆波兰式，（第一反应是后缀表达式啊，百度一番才知道原来还有逼格这么高的学名。考的是数据结构吧，但是回答栈没毛病。", "一百万的内存占用才Ｍ级别，当然不用考虑内存大小了，大概是想问类似于 Java 的 ArrayList", "第一题，应该听过前缀、中缀、后缀表达式吧", "第一题用正则是错误的，正则的表达能力不够。应该用带栈的自动机，即下推自动机。\r", "第二题我也没看懂。", "如果是科班出身，第一题答不出来书是白念了。\r", "第二题连题目都描述不清楚。\r", "基础啊。", "如果我说第一题 exec 执行一下这个字符串会不会被打😂。\r", "\r", "第二题说不考虑内存大小问题也就是可以 readlines 全部读入。 readlines 生成列表，列表的内存大小预先应该有个值，到了阈值之后再成倍扩大？", "第二问意思是 java 里 arraylist 存满了怎么扩容？ 大小 X2 吧", "第二个问题，很简单\r", "\r", "初始化数组，申请内存空间， 100 万 * 32 bit ，所有位全是 0\r", "循环读入数据，每次改变 32bits 的内存\r", "读取结束后， GC\r", "\r", "脑补成 ArrayList 的，你们就记住 X2 了吧", "第一题：\r", "try:\r", "   eval(字符串)\r", "   print('正确')\r", "except Exception as _:\r", "   print('错误')", " 晕，我的缩进被吃掉了。。。", " exec() 不安全啊。第一道题是后缀表达式，用一个 List 模拟堆栈存储数字和括号，用另一个 List 模拟存储符号，遇到右括号就弹出计算最近的两个数字值。第二道题有毒，，它是要考 Young Generation 的 GC 机制还是什么。 @", " @", "  呃。。我记得 ArrayList 的 capacity growth 根据实现机制的细节是不一样的，应该是原有的 *1.5 后再 +1 （很久以前在 SO 上看的一个回答了，现在手机答，不确保对不对。。。）", "第二题依赖具体实现的。。", "如果我没记错的话， Python 里面存储整数的时候， 0-255 和其他数是不一样的吧。", "第一个直接用栈跑一遍运算就好了。不涉及编译原理。如果最后栈 pop 不完那就是不合法的表达式\r", "第二个假设你是一行一行读入，并且没有内存浪费。那么看你用什么数据结构去存。如果是那种有预分配的数据结构，那么增长点就是每次 reserve 的时候。如果是链表或者直接数组，那么增长点是每次触发物理内存页映射到虚拟地址上。大多数环境是每次涨 4KB （分页大小）", "第一题，确实是编译原理相关，但是跟词法解析没有关系，一般词法解析是采用递归下降的文法，\r", "这题问的 应该是最著名的 逆波兰 表达式 算法第四版有讲 这个不难，\r", "因为比较著名，很多人都知道，所以考的是你的知识的广度\r", "两个栈就能搞定，不过我记不起来，书上我有 笔记，随时可以扒下来\r", "\r", "第二题，数组相关，线性连续的数据结构 只有一种方式，扩大-拷贝 没有其它办法，早期 C++的 vector 就是采用\r", "数组扩大一倍然后拷贝过去，底层绝不是通过数组+链表实现 因为数组是要随机访问的，\r", "如果加入了链表组合+数组实现（我傻逼的实现过，后来考虑到效率确实低），那么每次随机访问都要做 O(N)次操作来确定是当前随机位置在哪个 数组中", " 确实是，我记错了", "第一题是转逆波兰式,转的过程就知道正确性了.\r", "第二题不懂,对 python 的实现不是很了解.", "我都没听过逆波兰式... 我是怎么面过这些公司的...", "第二题我没记错的话 list 所占内存每次满的时候扩充一倍", "其实楼主是吃了基础不扎实的亏，", "lz 的基础知识面太虚了", "列表内存增加：\r", "\r", "\r", "     * The growth pattern is:  0, 4, 8, 16, 25, 35, 46, 58, 72, 88, ...\r", "    new_allocated = (newsize >> 3) + (newsize < 9 ? 3 : 6);", " python 高性能编程倒是有讲到。不是直接翻倍，而是有一个范围。", "关于第 1 题可以作为拓展知识了解了解.\r", "\r", "\r", "\r", "哈哈，第二题有趣， 1,2.....10...100...\r", "规律递增， 10 进制，每 10 行多存一个字符，由于是大文件词典，实现是会按最大占用分配，每行占 10w 数字字符大小的内存。这个问题在 spark 跑的时候遇到", " 矩阵形式", "第二题，没看懂，意思是说，变长数组是如何实现的？", " 人家说的是数组 数组 数组 。 arraylist 是数组嘛 ，那是 array 实现的 list\r", "\r", "一行 java 代码\r", "int[] ary = new int[100000]", "感谢楼上诸位，见笑了。我的知识面确实不够，需要补习算法和数据结构的知识。", "贴图失败 = =，再试一次\r", "第一题，在实际应用场景下，我倾向于使用二叉树解决，虽然我也知道栈更简单\r", "实际的表达式计算中常常包含单目、多目、括号等，还有可能混杂常数等情况\r", " [ipad 下某计算器的原作者] \r", "\r", "就本题而言，用栈", "强力推荐《剑指 offer 》，笔试面试基本不用愁", "第一题其实用树也不错吧，反正把语法树拉出来一看就明了了"]},
{"content": ["<div class=\"topic_content\">最近跟老板谈调薪，希望能涨 30%(目前大概税前月薪 16k 左右)。\r<br>老板搬出 HR 给的数据，表示我的薪资已经在我这个 level 的最高水平了，而且他也不能无缘无故给某个人突然涨这么多薪水。不过他跟 Director 和 VP 谈过之后，表示可以以 Retention Bonus 的形式一次性给我一些钱，调薪可以到 6 月份我被 promote 之后再谈，当然即使调也不可能调到 30%那么多。\r<br>我对现在的公司是比较满意的，只是最近因为薪水的原因起了动一动的念头。\r<br>\r<br>那么问题来了，如果要求你两年内不能离职，那这个 Bonus 给几个月的工资你才会签呢？\r<br>这个期限会影响你的决策吗？如果只要求你一年不能离职呢？如果是五年呢？</div>"], "reply": "15", "tittle": "Retention Bonus 给到多少你才会签呢？", "comment": ["按你的涨薪要求折算一下金额", " 谢谢。我在想是不是应该比要求的涨薪多一点，毕竟到期之后不一定会再有这个 bonus 了", "建议你离职", " 可以的，如实反映你的想法就好，别签了后又觉得亏待了自己还不得不按协议做满 x 年\r", "我上一条也是先打了至少两个字后又删除的", " 有点舍不得的是 这个公司的职场氛围很健康 大家都很追求 work-life balance 。我能有更多的时间分给我的家庭和做 side project 。出去可能很难再找到这样的公司了。", " 那就跟老板讲这些呗 尊重总是相互的,如果老板给不出诚意,那你觉得留着又有什么意思呢.至于薪资,需要你自己好好算算了,跟猎头打听下自己这个 level 到底能拿多少吧", " @", " \r", "谢谢你们。刚刚从 HR 那里听到的是我老板帮我涨了薪水，另外再附加了这份 Retention Bonus Letter 。我会再跟我老板沟通一下，目前我倾向于接受涨薪留在公司。但是公司给的 Retention Bonus 的 number 我不太满意，如果不能跟老板谈得更高的话，我不准备签了，给自己留下更多的灵活性。", "期限不应该影响你的决策吧\r", "下一跳涨得足够的情况下，最多一次性退还一点小钱而已", " 听人家说可以让下家来付这个要退的钱。。。", "看到这种说话中英文的就想抽丫", " \r", "签下来还是可以随时走啊，最多退钱嘛。\r", "老板给你去跟大老板沟通，跟 hr 沟通，搞出个 retention bonus 给你，你不签是几个意思啊？", " 谢谢 您说的太对。我之前只想了自己 没有站在老板的角度上想一想。\r", "刚刚我已经把 letter 签了交给 HR 了。", "羡慕你们这些找到能稳定干事情的公司的人，这年头，合自己心仪，然后能自己安安静静做事的公司太少了", " 有时候也是迫不得已实在不会说中文。理解一下呗", " 加油"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这一次相比上次主要是在破解速度上的提升，轨迹采用了网络神经算法。测试情况见下图：</p>\n<p>测试 2000 次，成功 1200 到 1500 不等，每秒并发 12 。</p>\n<p>技术交流群： 232068949</p>\n<p><img alt=\"\" src=\"http://p1.bqimg.com/584082/9933d8ef9a96c8df.png\"></p>\n<p><img alt=\"\" src=\"http://p1.bqimg.com/584082/6ed2b17e03f3ea8a.png\"></p>\n</div></div>"], "reply": "32", "tittle": "看我如何飘逸的过极验滑动验证码", "comment": ["你还让不让别人过个好年了？刚发出去的年终奖又收回去？", "这是杠上的节奏，没有他们的人联系楼主吗...🙈🙈", "加油，把他们技术耗走", "过年过节的时候你们这样搞真的好吗？", "还让不让人家愉快的过年了\r", "放完假回来搞个大新闻啊\r", " ", "我就喜欢 LZ 这种精神！", "能不能放完假回来在搞。。。预计苦逼的程序员在呼叫返回中", "这个，程序员何必为难程序员，过完年再怼啦。", "没有实用价值，这种破解一旦用的稍广泛一些，云端就可以换验证方法", "心疼，本是同根生，相煎何太急", "楼主要趁过年冲一波业绩", "可以的。。。但是放假了，这样搞不大好吧。。", "给爬虫常用的语言平台写个极其方便的包   对方彻底没法过年了", "前排。。。每次放假都要搞个大新闻。。", "你们崇尚的 geek 精神呢？ geek 有过年这一说吗 hhhhhh", "对面技术年终奖一摔，不要了\r", "回去过年了", "楼主真的不是他们的竞争对手吗哈哈哈😂", " 哈哈  公司不会这么做吧", "代码呢？", " 不是为了搞新闻啊。大家一起研究一下技术而已", " GEEK 精神？\r", "\r", " 我不会干这种事的，纯技术研究\r", "\r", " 好有画面感\r", " 代码放出来了极验技术要找我拼命", "这波可以诶,,真的可以....楼主有想法搞平台么?", "so cool ...\r", "\r", "geetest coder 退票中。。。", "这哪是不让人家过年……整了个不靠谱的技术在那里大吹特吹就应该揭露一下，这是 for greater purpose", "代码圈没有过年！", "你发一个这个图，怎么证明你成功了？", "据说好几个破解极验的黑产，已经被抓了。。。。。。。。", "好歹过完年啊 楼主", "这是什么梗？", "大过年的。。", "过年怼极验，快活似神仙![]( ", " )", "。。。。\r", "那个真的很好过"]},
{"content": ["<div class=\"topic_content\">看了隔壁帖一大波讨论，我觉得楼主应该是这个意思。\r<br>审美基本为 0 ，前端交互基本为 copy 的这路人（后端码农），有没有一个好的前端布局生成工具？\r<br><a target=\"_blank\" href=\"https://www.v2ex.com/t/336255#reply41(%E8%B0%81%E8%A6%81%E8%83%BD%E5%BC%80%E5%8F%91%E5%87%BA%E8%BF%99%E6%A0%B7%E7%9A%84%E4%B8%80%E6%AC%BE%E5%89%8D%E7%AB%AF%E8%BD%AF%E4%BB%B6%EF%BC%8C%E7%BB%9D%E5%AF%B9%E6%98%AF%E4%B8%80%E5%9C%BA%E9%9D%A9%E5%91%BD)\" rel=\"nofollow\">https://www.v2ex.com/t/336255#reply41(谁要能开发出这样的一款前端软件，绝对是一场革命)</a></div>"], "reply": "8", "tittle": "基于隔壁贴，来问个好的前端布局生成的工具。", "comment": ["类似 bootstrap 的 grid 系统已经可以了吧。比如 ", "\r", "再傻瓜化的，比如国外的 ", "楼主怎么这么清楚我的开发习惯？", "感觉可以为后端设计一个。。", "感觉速成培训班出来的就是事多。", "wix +1", "我一般用 layoutit 基于 bootstrap 的，通过拖拽快速生成框架。。", "审美为 0 比较困难", "前端渣渣  一直苦恼 哎"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>本来做完 <a href=\"https://blogs.msdn.microsoft.com/formulahendry/\" rel=\"nofollow\">https://blogs.msdn.microsoft.com/formulahendry/</a> 之后，部门也要接手 <a href=\"https://www.visualstudio.com/\" rel=\"nofollow\">https://www.visualstudio.com/</a> ，不过后来给其他部门去做了😏\n<img alt=\"image\" src=\"https://cloud.githubusercontent.com/assets/1050213/22183097/cfbcaf64-e0f0-11e6-817d-02eecc858ad5.png\"></p>\n</div></div>"], "reply": "26", "tittle": "除了 ", "comment": ["不管黑猫白猫，能稳定、安全提供内容的都是好猫", "探出微软官网清一色的 Apache Web Server", " 用 WorePress 并不一定就是用 Apache 。比如 ", " 虽然是 WordPress ，但还是用的 IIS", " 嗯嗯，从 MSFT 首页 header 里看到的 Server:Apache ，当然不能以偏概全😂", "感觉又坚定了我使用 WordPress 的决心", "这我都知道，可是我不会 PHP 。。。", "WP 的坑不亲自踩一踩人生不完整", "听说这里有人在嘲笑我大 WP ？是谁，站出来", "WP 本来就是很完善了，我也一直站在 WP 这边", "WP 多好用啊", "真搞不懂 wp 这么臃肿又慢的系统为啥会有人用，后来我发现原来喜欢 WP 的人都是小白", " 臃肿是真的，不知道慢是怎么说起来的", "推荐楼主用一个 Chrome 插件： wappalyzer ，自动分析当前页面用的各种 framework 和 library", " 好东西！很赞😎", "Wordpress 多好用的东西，当你想写博客时它是博客，当你想折腾做点什么，它就是实验基地，丰富的 API 和函数，可以让你随意发挥想象力，甚至当你转成商业化， CMS 它也一秒切换。可惜有些人就是不懂。。", "不用在底部写个 powered by wordpress ？", " 为啥不待见呢？刚入坑", " 谷歌验证器是什么鬼。。。\r", "微软你还真没架子啊", " 不是那个意思的， WP 是很出色的开源项目。但作为生产环境，它可能有些意想不到的小问题，这些问题在越大的生产环境下出现的几率就越大。比如我们在做 MSDN 博客时，有用户反映 Schedule Post 会发布失败，虽然出现的概率很低，但我们有数万用户，所以基本每周都有人反映。那么作为开发，我们就要钻到 WP 源码里去一步一步看到底是哪里会导致这样的问题发生。又由于 WP 是很多年的项目了，而且一直没有重构，代码在很多地方写的也比较 Dirty ，这些就是我说的踩坑。", "居然用 WP ，不用 SharePoint", " 用 WordPress 来做 prototype ，或者是 PV 并不高的个人网站或者博客，当然是轻松快捷。然而真的用到用户量和 PV 很高的生产环境时，就要考虑诸多问题。比如 performance ，如果 PV 上去之后，不对 WordPress 做优化（比如对 DB 加 cache ，用 CDN 等等），不仅慢成狗， server 有可能挂掉。比如 Availability ，在保证网站持续运行的过程中，如何 deploy 新的 feature ，如何升级 WordPress Core Code 和 MySQL DB 而丝毫不影响用户（ WordPress 的升级是很蛋疼的，特别是 multisite ）。比如 Compatibility ， WordPress 升级了，自己添加新的 feature 了，老的 API 不能用了，如何保证原来的功能还正常？当然真的从 prototype 到生产环境，还远远不止这些。二八现象嘛， 20%的时间完成了 80%的功能， 80%的时间来填 20%的坑。事实上更夸张。\r", "再补充一下 @", " 老师的，他所说的 MSDN 博客的有数万用户指的是真正来写博客的 writer ，我们 Monthly 的 PV 是千万级的。", " 哪个好用就用哪个呗。大家都用 Google Authenticator ，为啥不用呢。\r", "一样地， Angular 2 也会用 TypeScript 做开发语言， Google 会加入.NET Foundation 。而微软的网站也会用 Angular ，也会用 Google Analytics 。", " 商业使用，付费了就不用写。", " 用 WordPress 的 source code 来建站并不需要向 ", " 付钱", " 唔，你说的有道理，我搞错了，好像只有付费主题需要付钱，多谢纠正。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><strong>不知道大家有没有想法 or 想做一些产品出来但是一个人精力有限！</strong></p>\n<p><strong>所以弄了个微信群 ， 欢迎想搞点事情的来。大家同想创意，做什么项目！</strong></p>\n<p><strong>互相帮助，互相合作！</strong></p>\n<p><img alt=\"enter image description here\" src=\"http://www.fucksec.com/weixin.jpeg\"></p>\n<p><code>*</code> 没有想法 , 打酱油的请不要来！</p>\n</div></div>"], "reply": "36", "tittle": "需找志同道合的人来一起搞开源项目", "comment": ["日经贴", "别人自已有想法 自已就去做了 为什么把自已的创意给你 已 block", "楼主不知道 github 吗？ \r", "\r", "完全符合你的需求", "我一般有想法,自己会想办法去做的......  不会去交流给别人,特别是陌生人....  \r", "\r", "不会的技术 自己去学.....\r", "\r", "除非......哪天我想开公司..", "别人都说", "没有想法，打酱油的请不要来。", "那请问楼主你呢？", "楼主你退群，让我来，你也是个没有想法的人，我好多想法！", "上次加了一个这种群，最后变成招聘群了", " 回复亮了~~", "楼主不妨先分享一下自己的想法？", "图片是 http ？", "有开源的先自己去做, 搞这些的都是假象.", " +1 楼主应该退群", " 快来让给你", " 想弄个开发组织，共同开发些小项目，有创意有独特，然后共同维护！", "有创意。。自己写个开源小项目，然后再推广 让别人给你 pr 才是真的。。", "楼主有开发能力，但缺少一个领队提供方向？", "虽然 v2 的调调是创意最不值钱 但 这么不值钱的东西 楼主你多想免费拿这太 low 了", "我曾经也幻想过可以聚拢一群志同道合的人一起开源，后来的经历告诉我，绝大多数情况下，开源其实是一场孤独的旅行。", "楼主退群吧!", "“我有个好想法，就缺个程序员” 活生生的反例。", "我打赌...过几天..\r", "\r", "lz 发帖吐槽..变成广告群了...", "群，除了扯淡抢红包，并没有什么 LUAN 用", " block 就 block 吧，还要宣布一下，小学生，我也 block 你了", " 就 block 吧，还要宣布一下，小学生，我也 block 你了", "我只是复制粘贴了一下 然而并没有 block", "以前都是我有个想法，缺个程序员，现在是，我没有想法，也不知道要不要程序员。。。。。", "这么多大佬来传授人生经验呀，学习啦学习啦，直接贴群怕是不对哦，怎么样也得现有 demo 吧。", "当然帖子就像惯例一样变成了一片嘲讽\r", "\r", "呵呵呵呵呵呵呵呵呵\r", "\r", "就不能好好聊天吗？", "为啥大家要一片嘲讽呢？你们不是楼主怎么知道他是不是真心想做这个事情呢？什么氛围这是？？", "一般不是先做一个原型，再谈开源吗？", " 因为,大家身经百战 了...这个看多了.....结果都是有点忧伤....\r", "\r", "算是 v2 老司机,给其他人的一点人生经验..", "同志不好找啊 （爬过~", " block 就 block 吧，还要宣布一下，小学生，我也 block 你了", "这是要空手套程序员", " 其实谁没有经历过呢，但是还是要相信有人是这样想的，就像当初你第一次经历的时候这样。。。", " #29 \r", "今天年会中了个鼠标，坐等谁送我个 Mac 了"]},
{"content": ["<div class=\"topic_content\">[root@xxx apache-tomcat-8.5.11]# userdel -rf tomcat\r<br>userdel: error removing directory /\r<br>[root@xxx apache-tomcat-8.5.11]# ls /\r<br>-bash: /bin/ls: No such file or directory</div>"], "reply": "10", "tittle": "请问 userdel -rf tomcat 之后还有救吗？", "comment": ["没救了\r", "\r", "为什么将 tomcat 用户的家目录设置为根目录？", "??!?为什么要加-rf", "这姿势够特别啊", " 怕删的不够彻底", " 滑稽", "这让我想起了 steam 和 bumblebee", "为什么 userdel -rf tomcat 会 removing directory /  ？？？？", "我觉得你已经 rm -rf /  了……\r", "你之前执行了什么呢？", "牛逼", "保持连接，先放上 busybox 和 dropbear 救场吧（滑稽"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>极验 破解 之前的效率一直不高，经过优化可以 2 秒就可以成功，具体效果看图片。</p>\n<p><img alt=\"\" src=\"http://7mnmoo.com1.z0.glb.clouddn.com/1.jpg\">\n<img alt=\"\" src=\"http://7mnmoo.com1.z0.glb.clouddn.com/2.jpg\">\n<img alt=\"\" src=\"http://7mnmoo.com1.z0.glb.clouddn.com/3.jpg\">\n<img alt=\"\" src=\"http://7mnmoo.com1.z0.glb.clouddn.com/4.jpg\">\n<img alt=\"\" src=\"http://7mnmoo.com1.z0.glb.clouddn.com/5.jpg\"></p>\n</div></div>"], "reply": "64", "tittle": "极验破解成功了", "comment": ["吃瓜子看戏", "前排围观", "碉堡了，求分享", "吃瓜", "TB 的登录滑块验证码?", "666 ，吃瓜留名", "show me the code", " 饿 看错 是极验啊", "喜闻乐见", "666", "如何识别图像位置的？", "代码开源么？", "这东西也挺恶心的，明明拖对位置，让你重来，还要等它刷新。我宁愿输验证码。", "不明觉屌", "貌似早就有破解的帖子了，也在 v2 上发的。有人再 post 一下么", "骚年，低调点。。。吃这碗饭的都不容易，人家后端的 kpi 来之不易", "前排挤一挤，吃瓜留名", "哈哈，他们公司的技术被你弄得没法好好放假了", "这。。。", " \r", " \r", "感觉确实太高调了一点", "前排挤一挤，吃瓜留名", "前排挤一挤，吃瓜留名 233", "不知道有人心疼极验技术人员是怎么想的，技术不过关被人破解，就该挨批，这和服务器设置 123456 作密码没有区别。", "没记错的话好像一两年前就有人用易语言实现了。。", "很找之前玩的时候极验证的图片验证很好解决直接扔 google 图片搜索。\r", "拖动验证之前 v2 有人和极验证打了一段时间擂台，破解、修复、破解、修复。。。\r", "现在就不知道什么情况了。", " 请看楼主的历史帖", "厉害了", "\r", "你们总是在周末搞事啊， 233", "我擦，图床上的图片已经删了为啥还能看见，难道缓存？", "mark........", "牛逼", "搞事, 搞事, 搞事.jpg", "又破解了，打脸啪啪啪，国内这些做验证的公司有没有靠谱点的，学学谷歌的 reCAPTCHA", "唯品会的那种点击人物倒立的能破解吗?", " 是的。而且已经有平台接口自动回答了。（类似验证码代答）。极验这类的会 JS ，应该还是能分析出来吧。剩下就是行为轨迹，通过率问题。", "一直都烦这东西。。。所以技术选型 一直都不待见它。。。宁可验证码！", "其实极验的验证肯定能够破解的   以前坛子里有人破解过  官方升级了  后来看了一下代码不过是换汤不换药而已  破解是肯定能行的  只是一直没时间去弄", "全国的工商查询系统都被极验给占领了", "这种事还是低调点好  哥们..", "想到我之前输的 100 块了\r", "\r", "同事用易语言（没错）破解掉了 --\r", "95%的成功率", "搞事，搞事，整天就知道搞事", "Google 也有个叫 recapcha 的验证技术，只需点击一下就能验证，不需要滑块这么麻烦。 骚年去破解一下。看看能搞定不？[坏笑]", "楼主快去搞定 recapcha 吧。", "dd, 开门，查水表", " invisible reCAPTCHA 更容易，连点都不用了😂", "占个座", "不知道在说啥，极验是什么东西？", "注意，验证码破解是有成功率的，而不是截几个图就声称成功了。～ 公布一下源码让老夫也试试？", "话说之前写极验的 HTTPS Everywhere 规则的时候发现跳转 https 之后在 Firefox 上会崩……真是前端后端都不行", "什么也看不到-。-\r", "{\"error\":\"download token not specified\"}\r", "话说，周末是不打算让他们休息的节奏么", "你们啊，就喜欢搞事", "好像图裂了", "图挂，全局也挂", "大周末的又搞事...蛤蛤", "吃瓜群众围观", "为什么图挂了???", "图呢？搞事情啊", "我就想知道 google 的验证码谁能破了", "这种东西并没有利用到人和机器的差异，本来就是不可行的。至于说鼠标轨迹，这个太容易模拟了而且出于提高召回率的角度服务端也不会太苛刻。\r", "google 的那套东西，一是针对 ip ，用户行为只是辅助手段而已，触发后（比如单 ip 太频繁）会有真正难做的图像相关的问题；前者是出于简化用户操作，后者是真正地防止脚本。\r", "极验这种只有前者的东西本来就不科学，于是破解就只是工程问题而不是算法问题了。", "可惜 Google reCAPTCHA 在国内 Unavailable 啊...\r", "😂要是能在 Google.cn 放上一份 reCAPTCHA js 和其他支持代码该多好", " ", " +1\r", "google 的似乎也被破掉了", "极验证已破解，需要联系 QQ ： 2834117215", "稳定靠谱地识别极验 希望需要采集工商的公司看得上我啊~\r", "企鹅 496928838"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>之间做内网穿透，一直用的 ngrok ，但开源版本（ 1.7 ）有严重的内存泄漏问题，之前访问量小没注意到。实测大约 20000 个访问就会导致服务挂掉。</p>\n<p>目前使用 frp 这个开源项目来做内网穿透，稳定性到目前为止感觉还不错。总之建议大家不要在生产环境使用 ngrok 。</p>\n</div></div>"], "reply": "29", "tittle": "建议使用 frp 代替 ngrok", "comment": ["说服力不是太强啊", "说服力很强，刚看了 FRP ，已经开始不熟测试 ing\r", "ngrok 的免费开源版本确实有这个问题，一直使用网上某位兄弟搭建的免费 ngrok 反代服务器，而且我现在每隔一段时间，就得手工重启下 ngrok ，否则就一直处于 reconnect 状态", "一直用 natapp ，懒得折腾这种内网穿透工具，时间不够用啊", " netapp 不是做存储的么", "渗透测试比较多的话，建议直接购买 ngrok 。原因不必多说，确实很方便。", "不喜欢用 configfile ，所以还是用 ngrok ， tcp 模式下没有内存泄漏……", "ssh fR", "ssh -R", "持续关注此话题", "ngrokcc 那么多访问量怎么处理，难道是作者优化过的", " 用 ssh ，我内网的 nginx 总是区分不了域名", "ssh 没任何问题", "ngrok - go 没维护很久，但是已经衍生出很多其他版本啦", " 我也纳闷呢，三万多人使用都没啥大问题", " 如何让中转机踢掉一段时间不活跃的 ssh 连接？我有个树莓派挂着家里，断电一个小时再插上， vps 还有断电前的连接呢", " 我很通常很粗暴，直接 kill 了那个用户的 ssh 连接，反正连接有问题 autossh 会自动连", "朋友听说过 n2n 么", "frp 现在功能越来越强大，支持多种模式，还自带监控。确实是开发者福音。", "frp 怎么区分多个客户端？ ngrok 只要不同的 id 或域名就行了， frp 死活没看懂", "ngrok 经常 reconnect", " nat 啊大兄弟", "frp 很好用，在服务器端配个特权模式，客户端随便添加，完全不要改服务端， ssh 反向映射也挺稳定的。", "是有内存泄漏的问题，我的 ngrok 服务端也是过段时间就挂掉了", "同支持 frp 。太好用了", " NATAPP 是基于 ngrok 改的", "建议用 ", " 知道呀，官网说了，这个省事。", "  果然很多人将 natapp 看成 netapp ；）", "建议使用 mofasuidao.cn ，已经经过优化，稳定可靠!"]},
{"content": ["<div class=\"topic_content\">日程序员发明 AI 防老板背后监视 一旦老板进入监测范围内，电脑会自动将显示画面切换到静态程序代码的画面\r<br><a target=\"_blank\" href=\"http://ahogrammer.com/2016/11/15/deep-learning-enables-you-to-hide-screen-when-your-boss-is-approaching/\" rel=\"nofollow\">http://ahogrammer.com/2016/11/15/deep-learning-enables-you-to-hide-screen-when-your-boss-is-approaching/</a>\r<br><a target=\"_blank\" href=\"https://github.com/Hironsan/BossSensor\" rel=\"nofollow\">https://github.com/Hironsan/BossSensor</a></div>"], "reply": "22", "tittle": "监控老板接近 自动切换屏幕", "comment": ["6666 ，这个还是自动提升的。。越来越准。", "摄像头得一直开着把。。。而且摄像头的角度也是个问题", " 360 度广角摄像头\r", "对没错 就是那种天眼监控摄像头(滑稽", "我关心人脸识别的识别度有多高", "程序员…真可怕…\r", "\r", "以后老板在办公室用无人机来巡视。\r", "\r", "或者带面具。", "公司通道太多,而且老板我也不认识...", "这事情搞得太复杂，直接追踪人，判断向你靠近，就切换", "文中编辑器的配色和我的 sublime 如出一辙", " 无人机巡视哈哈，这个脑洞开的大啊，可以再加上个橡皮筋弹射装置，谁开小差就。。。", "然而老板发现了摄像头。泄露资料😁巴拉巴拉工资没了。。", "试错成本巨高", "最后：老板直接上 CCTV 直对程序员  ", " ", "小学到高中，一直希望有个东西能监控老师来了，哈哈哈", "摸鱼技术哪家强？", "摄像头 太明显了", "好厉害", "这有什么用，定时截屏就没辙了。", "掘金上看到过，还以为是墙内程序员写的。", "我们的老板只管工作进度有没有达成，根本不管你怎么干活。\r", "我旁边的 dev 一个屏幕写代码，一个屏幕看球赛。几乎天天如此。", "简直是大杀器", " 我也是，一屏天天看直播赛事", "日……程序员……"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我现在用的老 mac pro, 上在的是一块 120G 的 SSD, 目前系统在这个 120G 的 SSD 中,\n现在有一个新 256 的 SSD, 怎么把系统移到新 SSD 中, 有什么招?</p>\n<p>thanks</p>\n</div></div>"], "reply": "17", "tittle": "MAC 怎么换硬盘[老 MAC]", "comment": ["盘对盘 copy\r", "两块盘都接上， Command+R 进去 Recovery Mode\r", "进 Disk Utility ，点新硬盘选 Restore ，再选 From 旧硬盘，等它跑完，关机\r", "拆掉旧硬盘再开机", "千万别选错目标盘哦", "carbon copy cloner 全盘拷贝，用过多次没问题，妥妥的。", "或者 Time Machine 啊。", "强烈推荐 CCC 。", "之前用 Disk Utility 恢复过一次，遇到了各种问题。回复前先给硬盘做一次急救，不然恢复后磁盘还是继承了之前磁盘的问题，恢复到新 Mac 上设置里愣是没有出来 Touch ID 。 Time Machine 的副作用会最小。", "我只会用 Time Machine ，简单", "Time Machine 方便，无副作用", "time machine 迁移+1", "借助第三块盘来用 Time Machine 迁移", " CCC 过程中，老硬盘要做特殊处理吗", "没用过 mac, 不知道能不能用 dd", " 不用。\r", "可以先把新硬盘以 USB 等方式连接至电脑，然后打开 CCC 设置传输内容点击确定即可。\r", "传输完毕之后 opt+开机键选择新硬盘进系统看看，没有问题的话即可用新硬盘更换老的内置硬盘。", " 拷贝过程应该有增量数据啊", " 全盘拷贝。不会有增量。唯一的增量部分就是在你原盘内容的基础上多了 CCC 与其配置文件。这个手动删除一下很快的", "Time Machine 啊，懒人最爱。。", " 我猜想如果系统有一些服务的话，可能有一些增量，不过我自己的情况应该是没有"]},
{"content": ["<div class=\"topic_content\">2013 的 <a target=\"_blank\" href=\"https://www.v2ex.com/t/95831?p=1\" rel=\"nofollow\">https://www.v2ex.com/t/95831?p=1</a>\r<br>\r<br>三年过去，来一波 review\r<br>\r<br>我的：\r<br>软：摩拜单车\r<br>硬：华为p9，iPad pro 9.7</div>"], "reply": "199", "tittle": "2016 最令你兴奋之软硬件？", "comment": ["hover camera", " 体验还好，就是机制很有问题...\r", "然而骑起来省力，看到 ofo 肯定是会选 ofo 的...\r", "路上又是上坡又是有点不平的路面，又赶时间，骑 1 块的摩拜，到目的地就感觉腿都在抖...", "硬件： \r", "锤子 m1  最喜欢快充\r", "nuc 第六代 体积够小 性能够强\r", "ps vr 好游戏还不多 但是种新颖的体验", "Galaxy S7 港版，用着爽", " 得一直开着 vpn 吧", "airpods,然而还没到手", " 就是 null, None, undefind", "16 年还好吧， 17 年可能会买手机、耳机、单反、可能会买平衡车", "ps pro ， ps vr 吧。 今年是 switch 。", " 我能说我经常用摩拜一代，上下班 13 公里， 40 分钟吗。", "软件是 Civilizaton 6 ，\r", "硬件是 VR （ HTC vive 等）。", "软件：世界迷雾\r", "硬件： Nintendo Switch", "软件的话， Workflow 和即刻，前者把脚本放到了 iphone 中，配合一些智能家居软件，放到 iphone 的 widget 里，实在是非常方便，现在在用的小米台灯还不错， muji 的要比小米的贵多了。即刻则是整合了推送，在海量的每日数据中，根据每人的关注点和兴趣客制化推送，比起各个新闻平台的推送来说少了许多自家的噱头式消息。\r", "\r", "硬件方面，高分辨率的显示器，在视觉效果方面能带来更好的体验，特别是办公、长时输入需求的职业。新的 macbook pro 也很棒，至少对我个人来说都是更新了一些比较期待的点上，更佳轻薄便携，屏幕的色域又上升了，键盘的话个人也还是比较喜欢的，虽然键程短了点，但是啪啪啪的敲击感非常爽， ssd 也提升了那么多，就是 touchbar 感觉没什么用", "软件有 Alfred\r", "\r", "硬件有 Kindle Oasis", " 你的港版推送 7.0 了吗？", "软件： Adobe Photoshop CC 2017\r", "硬件： GTX 1080", "小米笔记本", "UP2715K 。 5K 显示器真好。", "软我也是共享单车\r", "硬应该是戴森的吹风筒和 VR 吧", " 兄台你生活的真苦，地球感觉都不一定适合您了…", "软件：即刻，各种共享单车\r", "硬件： M$ Studio, 1+3, Samsung S7", "软： Surge iOS/Mac 双平台，全天无缝翻墙\r", "硬： 4K 显示器", "软:gayhub ， telegram\r", "硬： gtx1070 ， gtx1080 ， zen", "surge\r", "mbp 2016", " 还没，现在就中韩英美推了吧，估计二十几号会来的", "硬件: ssd \r", "软件: 好像没有什么会让自己 wow 一下子的东西", "软： windows 10 、摩拜驴车、 Surge \r", "硬： Xbox one S 、 AC88U 、小米电饭煲、小米空气净化器、小米 Mix", "7 代 cpu ，核显硬解 4k 10bit hevc 。", "某米 mix ，能让人兴奋的硬件不多，这个算一个。", "上手 kindle voyage ，体验不错", "软件： surge iOS/macOs\r", "硬件：给老妈买了 iPhone6s ，她很开心", "软件： Alfred\r", "硬件： RMBP 2015 款， Kindle Voyage", "软件： WordPress rest API plugin 。 WordPress 开发者福音。\r", "硬件：树莓派 3 ，御宅族又一折腾利器", "软： PopClip\r", "硬： NMBP", "软： quip\r", "硬： airpods", "软：即刻\r", "硬： NMBP", "硬件: AirPods + Mi Mix 并列\r", "软件: 无", "软： sketch ， Mweb\r", "硬： copic 笔", "软： Setapp 免费测试版，到 5 月， 内含 ulysses 和 clean my mac3.\r", "硬：雷蛇鼠标，同学从霓虹国免费带的，", "软 Surge\r", "硬 Steel HR", "硬： Bose QC25, iPhone 7 Plus.\r", "软： Chef, Vagrant", "居然没人提 hololens\r", "\r", "1070", "kobo aura one 电子书", "软件:SSR KCPTUN", " \r", "桌子价格，链接？\r", "另外问下桌子下面的是什么？单独的一块板子么？", "软件上倒是没有特别兴奋的。\r", "硬件上\r", "（ 1 ） Hololens\r", "2016 年才了解到 Hololens ，因此我把它归为 2016 。尽管它并不完美，但理念我觉得很棒，说到底看好的并不是它，而是未来迭代出来的产品。（ BTW ， 2017.1 已在日本上市）\r", "（ 2 ） Galaxy Note 7\r", "然而它炸了，颇为可惜。\r", "（ 3 ） DJI Mavic\r", "居然能折叠起来， Amazing...（更期待迭代后的产品）", "Mobike Lite 骑着挺轻松的，短距离通勤到地铁站很方便，尤其是两公里以内叫车各种加价时。小黄车也很轻松，就是没车筐。\r", "\r", "DJI 无人机挺好玩，学校好多人都有", "硬件： xilinx mpsoc\r", "软件： Windows Subsystem for Linux", " 那你就...身体很棒！", "软件：即刻\r", "硬件： iPhone 7P 亮黑 + AirPods", " 台灯什么款？", "软件： KVM+BBR 年付 85 元\r", "硬件：摩天手 X210 无线键鼠套装 35 元", "galaxy note3 ，真神机，用了得有三年的老机器了吧，跟小米新机比，屏幕更好，应用更流畅，开机可用内存大一倍。 note3 我刷了 cm ，小米原生 adui 。\r", "\r", "手上过了三个小米后终于还是离开了。", " 什么价？原价 14000 真是不如 LG UltraFine 5K （虽然后者很难连）。好像有 6000 多的开车价？", " 哪的 vps ？", "硬件： New Nintendo 3DS", "软: openresty 硬: 暴风 tv", " 我在美国买的，买的 968 的亚马逊二手。原价现在已经 1700+了，主要是官网缺货造成的。我问过戴尔的客服代表，他说供货 2 月下旬会恢复，主要是我国工厂放假。\r", "\r", "UltraFine 5K 真心好，但是 PC 连不上没有办法。\r", "\r", "另外我试了一下， 5K 分辨率 Titan X 还是能带动屁股之类的，能稳在 60HZ (99%的时间). 2014 款的 Macbook Pro 15 inch (GT750M)也能带动，自动识别好，不过机身温度有点高就是了。\r", "\r", "另外我和 4K (P2715Q) 对比，在 macOS 下感觉字的清晰度提高很多（相对，因为 4K 已经很清晰了）， Windows 下不明显。", " 你 P2715Q 设了 2560x1440 HiDPI ？", "软： visual studio code", "硬：", " 是的，都是等效在 2560*1440 在用。", " Lineage OS 新的 build 马上就出, 别咒人家 RIP 了", "Android\r", "Android 手机\r", "8 月份买了安卓手机，在线看了奥运和红白歌会，现在看澳网", "奈何没钱 没买东西", "MIX 、 Hover Camera", "硬件： Presonus E5 、 Sonos Play:1 、 AirPods", "软件： 1Password （是的，用的比较晚）， Surge\r", "硬件：罗技 Master （好像就买了个这玩意儿， Mac 上用很爽嘛）", " 桌子就简单的一块 5 厘米（可选 8 厘米）厚的实木板，我定制的是 160cm 长， 60cm 宽， 75cm 高。 800+RMB 。下面支架是铁焊的。之前也看了烤漆的密度板桌子，好看，但感觉还是实木的经久耐用，就选了这款。 避免广告，可淘宝“铁艺 书桌”自行搜索。", " virmach", " 骑得满头大汗, 为了健身，效果不错 😄", " 拿到是店家的图。", "Hexo ..发布静态页到 github 真方便", "软件:SLACK\r", "硬件:HTC VIVE\r", "\r", "VR 虽然鸡肋,但是为我们展示了一种可能性.HTC 真的太爽了  新的游戏体验 一种未来", "软件：崩坏 3rd\r", "硬件： iPad Pro 9.7+Pencil", " 速度怎么样， bandwagon 好慢…", "MIX ，就是买不到！！！", " \r", "链接可以发我邮箱不？\r", "邮箱地址： MjUzODI5ODUyN0BxcS5jb20=\r", "\r", "铁支架下面那个长方形白灰色的是垫子还是木板哈？\r", "另外问下你 Mac 后年为啥没有一根线？\r", "\r", "打扰了哈，刚买房，正要布置自己的工作环境", " 我看它们家官网写的是 openvz 啊。。。", " 已发，上图是店家的图。建议买宽一点的， 160 或以上，能多放一些东西，最好用尺子量好。\r", "\r", "我本准备买 160 长、 70 宽的，仔细测量下还是决定 60 宽的， 70 的有点过宽，造成和床的通道过小，现在放房间正合适。", " 有 kvm 的。建议先测速再剁手，毕竟大家链路都不一样。", " 还有 Surface Studio", "软件：即刻， workflow 。\r", "硬件： Nintendo Switch", "app ： Pin （ iOS ）、\r", "硬件： westone um pro30 三单元动铁耳塞+康佩莱 Tsx-100 耳塞套", "OFO ， TOGO ， Mavic Pro ， Fuji x70", " 嗯嗯，我去看看", "硬：戴森吸尘器-牛掰 小米空气净化器-价格\r", "软：画图大师、 gvedit 、 source insight ，诶 source insigjt 讲出来好像没什么参考价值", "硬件: pocket chip", "软： Surge for mac, VS Code ，\r", "硬： PS VR, Mavic Pro", " 到时候可以玩 VR 女友（手动滑稽", "软件: VS Code\r", "硬件:特斯拉 model3", " xcode8.2 怎么让你兴奋了？", "硬件： Sram Red eTap", "Surface Studio", " 这个是啥", " 27 上 5k,字小的看瞎了", "软件：\r", "Windows 10 Insider Preview\r", "Google Now\r", "Android Auto - 能投射 Google Maps 到中控屏幕就足够惊喜了，在常堵车的（海外）城市优势很大 当然我更希望有一天我们不再需要搜索如何回避拥堵\r", "\r", "硬件：\r", "先锋 AVIC-8200NEX - 功能无比全面的汽车导航中控，最令我惊喜的是，作为一台限定北美地区销售的产品，这台机器的字体库毫无缩水，歌曲信息里无论包含哪国文字，甚至特殊符号，都能正常显示\r", "arduino 学习套件（ sparkfun 出品） - USB 即插即传好方便， so easy ！妈妈再也不用担心我的单片机\r", "\r", "另外 Project Fi 大概是北美洲史上最良心移动通信运营商", "PS VS 当时很兴奋\r", "最近用来撸生化危机，效果拔群", " 当然是用着 HiDPI 啦。\r", "\r", "现在 windows 对 HiDPI 的支持真是好了很多。通过切换不同的接口切换 4K 、 5K 分辨率，现在的 windows 自动的就把缩放在 150%和 200%之前切换。不仔细看都看不出来切换了不同的分辨率。"]},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"http://i.imgur.com/eMiXtGE.png\"><img src=\"http://i.imgur.com/eMiXtGE.png\" class=\"embedded_image\"></a><br>\r<br>原推： <a target=\"_blank\" href=\"https://twitter.com/yukihiro_matz/status/823386626424328192\" rel=\"nofollow\">https://twitter.com/yukihiro_matz/status/823386626424328192</a>\r<br>\r<br>hacker news 也上了首页。</div>", "<div class=\"topic_content\">补发一个项目链接：\r<br><a target=\"_blank\" href=\"https://github.com/czheo/syntax_sugar_python\" rel=\"nofollow\">https://github.com/czheo/syntax_sugar_python</a></div>"], "reply": "38", "tittle": "哈哈，写的库被 matz 点赞了，开心。", "comment": ["666666", "你写的 python 库 被个玩 ruby 的点赞了有啥好乐的  咱们跟丑陋的 end 党是仇人...(滑稽", " 但是我确实是受了 Matz 的新项目 streem 启发才写了这个项目的。", "很不错， matz 大神想出来一个理念，你直接给实现了。", "看来 matz 也很关注 Python 啊", " 必须的。 ruby 最强的竞争对手。", " 其实还是挺不一样的。距离大神差的太远。", "玩得好 6 啊，已 star ，感谢楼主", "so cool", "though I don't think it's tastes sweet. I'd like to say: Good Job!", "这糖看上去太甜 太 anti-pythinic 了 倒是和 ruby 风格一致 :D", " 笑出声", "为什么不发一个项目链接呢。。\r", "11 楼这个要点赞", "star 了！", "厉害了！", "你们 Pythoner 还是要学习一个！", "哈哈！", "有意思，昨天看到以为是日本人写的，原来你还会日文，然后居然你也是库里球迷……", "很想问一下，除了楼主的库之外，还有其它的库实现了 Python 的 pipeline 吗？主要是喜欢这一点。", " 有一些", " 有推荐的吗", " 都是小玩具，自己写一个。几行代码的事情。 ", "  有没有成熟那么一点点的。。。", " 不知道，现在已知有几种实现方法，所以我才做一些尝试，希望能找到 best practice 。", "代码很好，风格很好", "Great job", "牛逼", "楼主好有想象力, 点赞", "666666", "帅的一比", "挺好的，一直羡慕 elixir 的|>操作, 现在 python 也能用上了。", "厉害", " 我知道一个同类型的项目 ", "好厉害！ 666 ！来抱个大腿", "为什么你们都这么 NB 。", "给楼主点个赞"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这几天澳网打得正 high ，鄙人有一师妹正在打青少年组，今天刚打进第三轮，然后我们球队在微信上讨论看球，在海外看不到的心情简直。。</p>\n<p>大球场的直播国外很多地方都有信号源，像她在打的一般都排在 10+甚至 20 号场地去了。。但是！她的比赛爱奇艺每场都有，但海外 ip 应该是被封了所以并看不到</p>\n<p>in this case unblock youku 不管用，理论上一个国内的 vpn 就 ok ，因为忙暂时没时间折腾，所以最好是有人用过的给推荐一下（楼主在纽约，所以从美东连回去得够快）</p>\n</div></div>", "<div class=\"topic_content\">谢谢各位的回复，感谢已经送上。今晚我会试用 @<a target=\"_blank\" href=\"/member/zk8802\">zk8802</a> 和 @<a target=\"_blank\" href=\"/member/ericFork\">ericFork</a> 两位的方案，然后给出实测结果和反馈</div>", "<div class=\"topic_content\">经过两天的使用，@zk8802 和 @<a target=\"_blank\" href=\"/member/ericFork\">ericFork</a> 两位的服务各有优点。 zk8802 家的稳定性非常好， ping 400 多个 package 的 stddev 只有不到 10 ms ，而且 package loss 为 0 。 ericFork 家的速度更好，峰值速度有 4M+， ping 400 多个 package 有 2 个 lost 。总体而言两者体验都不错，对于看视频足足有余，都推荐，也在此再次感谢两位。\r<br>\r<br>使用中发现爱奇艺的直播只在请求视频链接的时候验证 IP ，也就是说只要视频流加载出来之后就算断掉 VPN 仍然可以愉快的观看\r<br>\r<br>剩下没有 @ 的我就不一一回复了，有问题继续跟帖\r<br>@<a target=\"_blank\" href=\"/member/zxy\">zxy</a> @<a target=\"_blank\" href=\"/member/hadoop\">hadoop</a> @<a target=\"_blank\" href=\"/member/21gram\">21gram</a> @<a target=\"_blank\" href=\"/member/freshman11\">freshman11</a> @<a target=\"_blank\" href=\"/member/freeznet\">freeznet</a> @<a target=\"_blank\" href=\"/member/chocolatesir\">chocolatesir</a> @<a target=\"_blank\" href=\"/member/MrBetterman\">MrBetterman</a></div>"], "reply": "33", "tittle": "急需一个海外看爱奇艺直播的方法", "comment": ["楼主留个邮箱，我联系你。", " ", "爱奇艺这么牛？", "不知道 ", " 能不能看直播呢", "搞一个有国内 ip 的 vpn 就可以了", "找个国内的免费代理服务器？", "appsocks.cn 有北美回国线路，可以看爱奇艺 hd", "一般站和视频流是两个不同的服务器，所以，你只需要让站走国内代理，视频流走本地路线就行了，这样会快点", "OneVnet\r", "\r", "注意带尾巴：\r", "\r", "App store 搜索 红杏加速器     你会发现双向都可以翻~~~", "unblock youku", "再简单不过了啊，去阿里云国际版买个一键套餐，买国内机房的， 8 刀 30M 带宽 2t 流量，然后装个 ss ，你们球队一起看完全没问题的。", "unblockchina.tv", "楼主，一楼给你的可以用么，不行的话， at 下我，我给你开个百兆独享的 ss 试试", "你要是个妹子我就给你搭个梯子翻进来\r", "然而并不是", "微林的可以？", "小猴翻翻，支持安卓 PC 苹果。", "应该不止是爱奇艺，优酷好像在海外也不能看", " 这个 nb ，怎么做到国内百兆独享？", "刚测了一下我自己的方案， ", " 1080p 不卡，缓冲速度 40Mbps 以上（ 4-5MB/s ）", " 貌似 zxy 是管学校机房的……\r", "\r", "电信联通的百独现在也不贵了，虽然国际出口质量一样堪忧", " 那就没法比了哈哈，你是什么方案？对了电信联通百独是个什么价格？", "android 手机 root 安装 chinatunnel ，国内几乎各大视频都可以翻墙回来看。", " 我的方案是在欧洲、北美、新加坡各有一台给用户做就近接入，然后通过自建隧道，选择性地回源 /导流到视频站的 CDN 。里面的脏活比较多，花了不少时间。\r", "\r", "电信联通百独的话，单线普遍在 1000 每月上下，偶尔遇到特价机可以做到这个价格的一半出头，当然带宽永远都在超卖，几乎不存在真正的独享的，反正用户也用不完。", " @", "  你们真的有看我发帖的内容吗。。\r", "\r", " 可以翻是一回事，速度快是另一回事\r", "\r", " 不知道啊，你告诉我啊\r", "\r", " 你让我说你什么好\r", "\r", " 微林的可以？\r", "\r", " 看视频何必难为自己用手机。。而且不用 android 多年", "要是国内搞台服务器弄 ss 会管用么", "Chrome 插件 unlock youku ，以前在香港就用这个。", " 微林要有国内 vps ，然后通过微林加速", " 我想問一下打 lol 能用嗎。。\r", "網癮小透明求問", " 游戏加速用迅游国际版，还是挺物有所值的；或者玲珑加速器，自己搞了 BGP 的商家比较靠谱", "现在在用的一个速度不错（估计用回国代理的人少所以速度快），应该是阿里云的服务器， 200 一年吧不限速不限流不限制设备，虽然就一个国内节点但是还有二十几个海外节点回国也能用……"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近在开发一套电商系统，遇到一个难点。用户下单后半小时内必须支付，超时订单作废，商品自动释放。</p>\n<p>我现在的方法是在数据库内记录下单时间戳，并且在进入支付页面、执行支付等动作时检查是否超时。但是感觉这种被动的检查订单是否超时方法有点不优雅，每一项和订单有关的操作都需要这么繁琐得检查。</p>\n<p>我想使用一套定时触发的任务系统，比如用户下订单后就生成一个 1800 秒后执行的任务，任务内容为关闭订单+返回商品库存+向用户发送通知。我目前只使用了 rabbitMQ ，但是好像 rabbitMQ 并没有提供类似 cron 的定时任务功能。</p>\n<p>不知道大家有什么推荐的解决方案么？</p>\n</div></div>"], "reply": "28", "tittle": "有什么比较轻量级的定时任务队列么？", "comment": ["目前了解到有个服务叫 Atrigger ，能提供类似的功能，但是需要远程调用。而我希望能自己搭建服务。", " \r", "redis 有一个键到期事件，你可以把过期时间设成 1800s ，然后订阅事件去检查订单状态。 \r", "感觉这个应该够用， 不要过度设计比较好吧。", "楼主目前的实现是有大问题的\r", "商品一般都有库存，用户下订单后修改库存的数量，订单超时后应该释放商品\r", "按楼主目前的实现方式，下单后一直不支付并且不进入支付页面，那商品就被作废订单给锁定了\r", "\r", "赞同 @", " Redis 就足够了", "python 的话有个 celery", " 目前要设计的就是抢购模式，锁定该订单。一旦支付失败，返回库存还可以继续购买。", " 程序目前没有使用 redis 的订阅功能，因此可能并不能实现。还是希望以回掉的方式进行", " 这个是哪个命令呢？", "1.访客量不大时硬编码就好了\r", "2.归根结底还是锁资源加轮询，其他工具的实现 也大致如此，只是帮你实现好了而已。已有消息队列了，自己再写个代码即可，", " 理论上是这样，但是总觉得开源社区的代码更成熟吧，坑比自己写一个要少多了。", " 哦我懂你的意思了，你说的对。所以我需要加上定时取消订单的功能。", "数据库定时任务，每分钟执行一次 SQL 脚本。", "这种之前讨论过很多次了 ", "java 的话有延迟队列 DeplayQueue", " DeplayQueue -> DelayQueue", "quartz", "两种方式结合， double check 。\r", "内存中构造一个优先队列", "beanstalkd", "轻量就用 beanstalk", "rabbitmq 有延时功能的，但因为是队列，所以 expiration 只检查队首元素，如果你的超时是固定 1800s 的话倒是够用了。 我有不少逻辑都是借助 rabbitmq 延时走的", "队列的好处是不怕进程死掉， redis 事件没了就没了，队列不处理就一直压在队列里", " 以前用 rabbitmq ，后来改 beanstalk 了。很多地方都用，爬虫、邮件、短信、各种任务处理。楼主的需求我也用它做过", "beanstalk", "beanstalkd", "简单处理的话， 感觉可以写个 cron 脚本， 每分钟定时执行， 去扫描这些待支付订单是否已过期", "放在 redis 有序队列里，定时轮询就可以", "我写的 HTQ 的定时异步队列可满足要求\r", "\r", "redis 简单", "推荐一下 hury \r", "\r"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>废寝忘食搞了几天。。。突然感觉是在浪费生命。不过还是学到一些 Qt ，一些 COM ，一些遗忘的 C++</p>\n<p>诶，各位看看觉得这个工具是否有意义？</p>\n<p><a href=\"https://github.com/yingDev/TaskViewX\" rel=\"nofollow\">https://github.com/yingDev/TaskViewX</a></p>\n<p><img alt=\"\" src=\"https://github.com/yingDev/TaskViewX/raw/master/.readme/screen.jpg?raw=true\"></p>\n</div></div>"], "reply": "16", "tittle": "写着写着突然觉得无卵用，遂开源之： TaskViewX - Win10 Task View eXtension. ( C++/COM/Qt )", "comment": ["这不是系统自带的功能吗，这个轮子也太重复了吧", " 轮子，先依葫芦画瓢，再谈其他改进。", "    记得 win10 的这个界面没有 ABCDEFG 的提示的。\r", "\r", "如果楼主指的是按对应字母切换到对应窗口， \r", "这东西也挺实用啊，\r", "按窗口数目多寡，每次操作都能节约个 0.5~5 秒的。\r", "\r", "建议：  别 ABCD 这么排，应该\r", "QWER\r", "ASDFG\r", "\r", "这么排", "挺好的，支持一个。", "弄成 qwerty 这样的顺序会很好", "还有自定义窗口分组、 排序规则， 甚至允许鼠标拖拽动态调整分组和排序，\r", "只要已有的窗口没关，顺序别乱跳。。。\r", "考虑下如何最便于操作。\r", "\r", "比如打开 N 个相同窗口比如 putty ， 可以被自动分一组，\r", "在这个界面按一个字母进入一个子层级，可以继续按字母键选择。\r", "还有，窗口标题要搞醒目些。。。\r", "\r", "对了，这是个 win10 内置功能的扩展，还是可以支持 win7 啊？\r", "---------------------------------\r", "\r", "话说这里不是 iv2ex 么", "楼主自己浪费了若干天时间，如果可以为 N 多用户提升效率，\r", "应该也是很有成就感的吧。。。\r", "\r", "即使弃坑了，既然提出了一个好点子， 万一有人接手呢", "右下角的激活窗口亮了;)))", "感觉功能像 Mac 下的 Manico 软件😋", "非常有用，我找这样的功能找了好久了\r", "没有 VS 的环境，求一个 exe 的下载", "挺好的，楼主做得不错", " 233", "好东西啊\r", "A~E 除了改成 QWER 还能比如 0~9\r", "还有右下角新增分屏的+可以设置快捷键\r", "\r", "Win10 自带的快捷键按着太别扭还不能改", "我觉得挺有用的。支持", "能不能支持下 win7", "同求支持 win7\r", "垃圾微软，毁我青春"]},
{"content": ["<div class=\"topic_content\">调用后台的 ajax 接口不用 80 端口，主要是没备 案所以不用 80 端口。</div>"], "reply": "7", "tittle": "如果面向大众用户的前端程序里用了非标准端口和后台通信有风险吗？会被有些公司里的防火墙阻止吗？", "comment": ["当然会遇到防火墙问题。", "标准的也有风险 篡改嗅探是一个\r", "非标准的基本就防火墙", "不用 80 可以 443...", "面向大众用户的前端程序不备案合适吗？自己玩你还在乎那点被公司防火墙阻止的用户？", "80 端口 非 API 访问就直接断开连接", "每家用的防火墙策略都不一样啊，所以真心不能一概而论。", "没备案可以 HTTPS 啊，主要就是实现方式可能比较麻烦。"]},
{"content": ["<div class=\"topic_content\">不太想接手啊。。但是又不知道怎么拒绝。。\r<br>\r<br>心情感到很沉重，还让不让人过年了啊？\r<br>\r<br>本来就说过年还要过来加班。。现在又搞这个。。哎。。</div>", "<div class=\"topic_content\">我是本地的，所以不存在回家之说</div>", "<div class=\"topic_content\">刚刚和经理沟通了，可以年后再做。。\r<br>\r<br>感谢大家回复</div>"], "reply": "26", "tittle": "过年前两天，老板突然提了一个两天内无法完成的需求怎么办？", "comment": ["有没有逼你离职的可能？过年还让加班，一般不是人能做出来的事情。", "票买好了要回家 /要出去等等", "明显想让你过年拿回家做呀", " 这个是因为，我是本地的，所以有紧急问题回来要改", " \r", " 是本地的，所以没有票，也不存在回家", "评估工作量之后提加班需求。", "“过年去旅行”\r", "“过年去女朋友家”\r", "“过年出国玩”\r", "“过年去治病”\r", "“有个远方的朋友重病”\r", "“老婆娘家人红喜事没人替”\r", "\r", "\r", "不过你既然去了，那就算了，早要做准备啊，兄弟。", "直接说没时间做不完就好了，上班做下班该干嘛干嘛...", " 主要会逼迫你加班什么的。。哎", "这真不是人能干出来的事", "都跑题了，这个问题标准答案 9 字诀：\r", "\r", "要么狠，要么忍，要么滚\r", "\r", "楼主别说什么, \"但是又不知道怎么拒绝。。 \"\r", "\r", "和你老板说过年家里忙没时间不行吗？\r", "\r", "说到底还是 follow your heart （怂）了。", "请病假～", " 加班给书面通知，该调休调休该给工资给工资，两样都没有的话直接拒绝。\r", "其实最好的办法是直接跑路", "提加班，然后回家做", " 先要忍，实在忍不了，再狠，狠没效果，就滚。哈哈，个人体会很深", "为啥你不能堂堂正正的回说这么点时间完成不了. 我也不想加班", "直接说，，风险太大。。。时间不够。。", "回家作业，没毛病", "年后考虑换工作吧", "我发现大家面对公司怎么总有一种“不愿意走”的想法，要有随时做好从公司滚蛋的决心和准备。你面对老板就不虚了", "突然想起来第一份工作， xx ，这个功能你绝对秒杀，结果秒了一个月，没秒掉", "写了一份信说大致思路有了剩下的休假后回来做，括号，明天开始休假，新年快乐。", " 😂😂😂", " \r", " 主要有苦衷呗，走的话是早就想走了", "给你老板看这个帖子，高亮出重点句子！ ", "答主是过去 6 年每年年三十晚+正月初一工作写代码的人。\r", "\r", "让你在全年最无聊的一天多时间里填补空缺。\r", "\r", "仅对单身狗有效。"]},
{"content": ["<div class=\"topic_content\">接上贴 <a target=\"_blank\" href=\"/t/335699\">/t/335699</a> 发现好多迷茫的没买到火车票的过年回家还是未知数的朋友 现提供义务咨询\r<br>\r<br>\r<br>义务咨询不会明的暗的显的隐的收取任何费用 请不要留下联系方式 职业黄牛免开尊口 不要干那生孩子没屁眼的事儿\r<br>\r<br>\r<br>想获取及时的建议，请使用标准化的咨询格式，不受理任何非标准的咨询方式\r<br>首次咨询（非后续跟进交流） 不使用非标准的咨询方式，视为智商低于能看懂中国话的，直接 block\r<br>\r<br>\r<br>标准化的咨询格式如下：\r<br>\r<br>第一行 at 我\r<br>\r<br>第二行 日期，如果多个日期可选，分别列出（请不要使用初几 三十 二十九 周五 周三等方式陈述）\r<br>\r<br>第三行 从哪里到哪里\r<br>\r<br>第四行 最早能到达车站的时间（比如受限于下班） 或者最早能赶上的输入从哪里到哪里后 12306 返回的一趟车 （注意 比如北京有多个车站且目的地能有多个车站始发的，请注明最早能到各站的时间） 整天请写随时可出发\r<br>\r<br>第五行 到达目标站的最晚时间（比如受限于要到目的地换乘回县城的一天就一班的大客等硬性限制） 如果家就在市内 随时到都行 请注明几点到都可以\r<br>\r<br>第六行 人数 是否有同行需要母亲额外照顾的 5 岁以下孩子（主要应付不在一个车厢的多张票） 是否有学生票 儿童票 同席孩卧票需求\r<br>\r<br>第七行 如果区间有动车也有普速 写明目标是 动车还是普速 还是都行 另外 默认 4 小时以上的普速席别为硬卧 动车席别为二等座 如果你能接受其他席别比如软卧比如高包 请注明能接受的席别 卧铺动车组请额外注明\r<br>\r<br>\r<br>\r<br>--------------------------------------------------------\r<br>\r<br>在我这里的规划，旅行舒适度是第一要求，咱不是那种有票能走就行的人。\r<br>夜车除非一些特殊小站，不会给你安排凌晨下车的方案。\r<br>\r<br>会给你安排合理的换乘，比如到饭点可以让你舒舒服服的下车吃顿当地特产的好吃的再回来舒舒服服的上车继续旅行（火车上吃的那叫猪食 根本不是人吃的东西 条件允许当然又快又好还可以下车吃当地好吃的）\r<br>拒绝非合理换乘的 拒绝多花点钱的（非其他人收取 票上多花钱 除无收入学生党） 还是自己想办法的好\r<br>\r<br>暂时能想到就这么多，再想到啥，慢慢补充……\r<br>\r<br>---------------------------------------------------------\r<br>\r<br>朋友问我：为什么发这贴呢？告诉他们买啥有啥用？\r<br>\r<br>其实很多人并不是真的买不到票，只是他们在理论上不可能买到票区间内刷刷刷，刷到地老天荒都没啥大用的。</div>", "<div class=\"topic_content\">广铁地区\r<br>\r<br>主要以京九线（南昌方向）中距离返深圳广州 京广高速线（湖南长沙南武汉）高铁返广深\r<br>\r<br>初六七八左右  想稳妥是肯定要花大头钱的 需求过于旺盛 否则就只能慢慢捡退票和偶然票</div>", "<div class=\"topic_content\">APPEND2:\r<br>不要带车次咨询（多见于自以为是的学生党），地球并不以你为中心转。\r<br>另外，不要受迫害妄想症，自己看不到票就是扣票。\r<br>\r<br>另另外，不是铁路工作人员，不在铁路工作，工作跟铁路也没关系。退一万步说，你们见过哪个铁路的懂这个……铁路那帮白痴……</div>", "<div class=\"topic_content\">今天撸票任务比较多\r<br>\r<br>\r<br>此贴到此为止，有些没答复的大部分是格式不对，自己指定车次，自己加限制条件。\r<br>另外有几个，因为不熟悉当地票务制式，是不敢瞎说的，所以没有及时答复。\r<br>\r<br>后续回复原则上一般咨询不再做答复，除了一些显而易见的需要指点调整刷票区间的。\r<br>\r<br>\r<br>\r<br>\r<br>\r<br>节前开车 2 日内，北京、上海、天津、沈阳、哈尔滨、长春出发部分热门卧铺可酌情与手头订单捆绑代撸\r<br>\r<br>尤其北京出发（我的北京出发任务比较多），欢迎搭车， 不收取任何费用 不收取任何费用 不收取任何费用\r<br>\r<br>JOIN HERE:\r<br><img src=\"http://ww3.sinaimg.cn/mw690/6c2ea0fbly1fbz7533vofj20f00kk3zj.jpg\" class=\"embedded_image\"> \r<br>\r<br>问题答案楼主 ID</div>"], "reply": "138", "tittle": "还没买到火车票的亲们进来扯扯。咨询请遵守发帖规范。", "comment": [" \r", "说话要负责啊 这段近期的态势还没看清楚 不敢瞎说啊 等等", " \r", "出行日期： 2017-02-05 \r", "出行路线： 从郑州到杭州 \r", "最早始发站时间 ： 15 ： 00\r", "到达目标站时间 ： 23 ： 00\r", "出行人数 ： 1 张成人票\r", "车型，席别 ：二等座，高铁 G1884 G1876 优先。", " 多谢", " \r", "2017 年 2 月 4 日\r", "郑州-上海\r", "12 ： 00 到达郑州站\r", "终点站最晚时间：次日 21 ： 00\r", "1 人\r", "普速", " \r", "出行日期： 2017-1-22\r", "出行路线： 从深圳到武汉\r", "最早始发站时间 ： 7:00-10:00\r", "到达目标站时间 ： 尽可能早\r", "出行人数 ： 4 张成人票\r", "车型，席别 ：二等座，一等座。\r", "\r", "\r", "\r", "(帮朋友问，急事回家。本来买好了 25 号票的。家里突发状况，急着回去。 备选汽车票，需要 12 个小时。)", " \r", "出行日期： 2017-2-4 \r", "出行路线： 从南昌到北京\r", "最早始发站时间 ： 7:00-22:00 \r", "到达目标站时间 ： 尽可能早 \r", "出行人数 ： 1 张成人票 \r", "车型，席别 ：直达车优先 硬卧。", " \r", "出行日期： 2017-2-3\r", "出行路线：从新县到北京\r", "最早始发站时间：整天\r", "到达目标站时间：尽可能早\r", "出行人数： 1 张成人票\r", "车型，席别：直达车优先 硬卧", " \r", "想办法去阜阳，刷 K148", " \r", "直接干挂着就行了 南昌票额多且乱 总有退改签 还有扣的票放出来的时候\r", "开车前 72 小时内开始关注就行", " 我来歪个楼 30 求一张敬业福", "出行日期： 2017-1-26\r", "出行路线： 从北京到阜阳\r", "最早始发站时间 ： 00:00-10:00 \r", "到达目标站时间 ： 尽可能早 \r", "出行人数 ： 1 张成人票 \r", "车型，席别 ：直达车优先 硬卧\r", "\r", "今年为何临客这么少,求解,回阜阳好难", " \r", "1.24 以后 随便找个软件挂挂吧 要啥有啥放心……", "时间： 1 月 22 日凌晨 0 点 30\r", "事件：北京局又发扬了无耻的后半夜甩票方便黄牛和自己人的风格\r", "\r", "截图时间 1 月 22 日 0 点 33 分\r", " ", "续图：\r", "\r", " \r", " \r", " ", "给楼主点个赞\r", "PS 抢铁跟北京局比真是地狱模式，几年前在北京春运除了疆藏没有抢不到的票，帮小伙伴买票 so easy \r", "PPS 怎么分析哪些票是限售了，哪些票扣着没放……", " \r", "出行日期： 2017-02-04\r", "出行路线： 从邢台到南京\r", "最早始发站时间 ： 随时可出发 \r", "到达目标站时间 ： 2017-02-05 能到就行\r", "出行人数 ： 1 张成人票 \r", "车型，席别 ：硬卧、软卧、二等座。", " \r", "出行日期： 2017-01-24 \r", "出行路线： 从广州到贵港或者南宁  \r", "最早始发站时间 ： 12:30\r", "到达目标站时间 ： 2017-01-24  能到就行 \r", "出行人数 ： 2 张成人票 \r", "车型，席别 ：二等座，一等座，无座。", " \r", "2017.01.25\r", "K932\r", "广州东->松滋\r", "卧铺\r", "两个成人", "  \r", "出行日期： 2017-02-04 \r", "出行路线： 从宜春到高安 \r", "最早始发站时间 ： 8 ： 00\r", "到达目标站时间 ： 10 ： 00 \r", "出行人数 ： 1 张成人票 \r", "车型，席别 ：二等座，高铁 G1368 优先。", " \r", "出行日期： 2017-01-25\r", "出行路线：从上海到赣州\r", "最早始发站时间： 18:00\r", "到达目标站时间： 2-17-01-26 能到就行\r", "出行限制： 2 张成人票\r", "车型，席别：硬卧，二等座\r", "\r", "好像可能回家的只有中转方案了。。。", " \r", "出行日期： 2017-01-25 \r", "出行路线： 北京到哈尔滨\r", "发站时间 ： 18 ： 00  ～  24 ： 00 \r", "到达目标站时间 ： 26 日中午 12 ： 00 之前\r", "出行人数 ： 2 张成人票 \r", "车型，席别 ：硬卧>软卧>高铁\r", "多谢楼主啦。", " \r", "出行日期： 2017-02-01 \r", "出行路线： 襄阳-合肥 \r", "最早始发站时间 ： 16:30 \r", "到达目标站时间 ： 2017-02-02 凌晨上午均可 \r", "出行人数 ： 1 张成人票 \r", "车型，席别 ：只有普速，硬座硬卧均可", " \r", "只要你花时间挂着 别怕 100%有票 越往后的卧铺位置越好……\r", "没时间挂着，那就没办法\r", "看我 112 113 114 楼截图就懂了\r", "\r", "\r", "\r", " \r", "等开车前 48 小时内 花点时间挂着就行了 卧铺肯定有 \r", "要是不放心，非要提前拿到票，挂上海虹桥-南昌高铁 到了南昌就等于到赣州了 之前九江那个也是一样\r", "\r", "\r", "\r", " \r", "高铁密集班次 慢慢挂就是了 只要肯花时间 基本不会买不到 虽然广铁那边黄牛猖獗", " \r", "出行日期： 2017-02-04,05,06\r", "出行路线： 从怀化到鹰潭 \r", "最早始发站时间 ： 11:00\r", "到达目标站时间 ： 不限\r", "出行人数 ： 2 张成人票，１张儿童\r", "车型，席别 ：二等座，卧铺\r", "\r", "谢谢楼主", " \r", "K233 K289 俩车 \r", "发站：始发站和邢台站交叉\r", "到站：南京以及南京后续的几个站交叉\r", "\r", "这么挂着 从开车前 48 小时开始挂两天肯定能有， 2 月 2 日以前直接从始发站挂别挂邢台", " \r", "出行日期： 2017-01-25\r", "出行路线： 杭州-襄阳\r", "最早始发站时间 ： 不限\r", "到达目标站时间 ： 不限 \r", "出行人数 ： 1 张成人票\r", "车型，席别 ：硬卧\r", "\r", "谢谢楼主了。", " \r", "出行日期： 2017-01-24,25 \r", "出行路线：从北京到南昌\r", "最早始发站时间： 07:00 \r", "到达目标站时间：不限 \r", "出行限制： 1 张成人票 \r", "车型，席别：硬卧\r", "\r", "感谢楼主", " \r", "出行日期： 2017-02-05 \r", "出行路线： 从郑州到杭州 \r", "最早始发站时间 ： 15 ： 00 \r", "到达目标站时间 ： 23 ： 00 \r", "出行人数 ： 1 张成人票 \r", "车型，席别 ：二等座，高铁 G1884 G1876 优先。", " \r", "开车前 48 小时以外：\r", "K1374 次 软件挂票 发站怀化，到站要用义乌、杭州东甚至上海南 这车限售比较远\r", "48 小时内就可以挂鹰潭了", "出行日期： 2017-01-23 \r", "出行路线： 从北京到长春 \r", "最早始发站时间 ： 14 ： 00 \r", "到达目标站时间 ： 不限 \r", "出行人数 ： 1 张成人票 \r", "车型，席别 ：二等座，硬卧 硬座", "封贴\r", "\r", "请查看 APPEND3 内容", "大佬 66 的，", " \r", "20170123 20170124\r", "广州 -> 昆明 \r", "随时出发\r", "随时到都行\r", "1 人 \r", "高铁 \r", "\r", "谢谢！", " \r", "1 月 24 1 月 25 1 月 26\r", "北京 至 漯河\r", "随时可出发 \r", "几点到都可以 \r", "1\r", "都行", " \r", "1 月 24 日\r", "北京到周口（可以火车到漯河 /郑州 /阜阳等地然后坐大巴）\r", "最早 17 ： 00 到车站\r", "第二天中午 12 点\r", "人数 1 成人\r", "普速 \r", "\r", "谢谢~", "\r", "出行日期： 2017-1-26 \r", "出行路线： 从北京到巨野\r", "最早始发站时间 ： 16:00-24:00 \r", "到达目标站时间 ： 尽可能早 \r", "出行人数 ： 1 张成人票 \r", "车型，席别 ：直达车优先 硬卧 硬座", "买票用高铁管家 先付费离线抢票 稳的一逼", " \r", "出行日期： 2017-02-05 \r", "出行路线： 从吉安到深圳 \r", "最早始发站时间 ： 10 ： 30 \r", "到达目标站时间 ： 22 ： 00 \r", "出行人数 ： 1 张成人票 \r", "车型，席别 ：硬座，软座， 硬卧，软卧， Z107, K33, T397, K1091 优先。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>确实瀑布流的图片网站已经烂大街了，但是目前想做一个图片聚集的网站，用户可以自由上传图片到我的网站， 但是总得给用户一个不去 Flickr 和 Pinterest ，偏偏要来我这儿的理由吧，大伙儿希望这个图片站有什么新功能？新特点？</p>\n</div></div>"], "reply": "16", "tittle": "想做一个类 Pinterest 的网站，怎么做的有新意、新功能，而不是造轮子？", "comment": ["有新意有创意能干过这两家我不自己撸？", "Flickr 和 Pinterest 都很慢要翻墙算不算？<--玩笑脸\r", "\r", "如果 LZ 说的是 Pinterest ，那么这类网站的重点在运营，而不是功能。", "\r", "\r", "不要重复造轮子呀～", "  这种？", "改成横的", "做垂直咯。想想哪些用户有浏览大量图片的需求，挑一个群体，为这个群体的需求做些定制化服务。\r", "比如封面瀑布啦(你猜什么封面)", "有盈利点，但不是页面广告，看看 imgur 。", "不然用户感觉你服务时间没保证。", " Pinterest 不用翻墙啊...\r", " 国内有花瓣网。 这两年版权严打，另外图片内容监控也比较困难。这件事情挺难。", "还有什么好点网站吗？图片聚集的", " 请问这是用什么框架做的？", " 不是我的网站啊～", "Flickr 都不盈利", "我只说一点：不要防盗链。", " 此话怎讲?", "重要的是内容"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>万能的 v 友，求助！！\n想请大家帮我看看我命令行里面的这个功能是啥，我实在是记不得了，好几个月之前在网上无意看到的，就搞了，现在不知道这个功能叫什么了，是怎么搞的了，请问大家有没有见过这个东西？\n在你输入命令的时候，帮你以灰色的方式补全满足你已经输入的字符的上一条历史命令。</p>\n<p><img alt=\"\" src=\"http://p1.bpimg.com/567571/14127f2667fe0a43.png\"></p>\n</div></div>"], "reply": "5", "tittle": "求助，帮我认认我这是干了啥？", "comment": ["fish", " 是的是的，好像是跟 fish 有关，我有点印象了，这个功能是 fish 的，我是用的 omz ，有头绪了，我去搜搜看怎么搞的，谢谢！", "zsh 的提示功能，右箭头就接受提示内容", "找到了，是这个插件\r", "\r", "哈哈哈，感谢万能的 v 友", "autosuggestion"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>本人花了两个多月的时间开发了一个接口管理平台，结合了 postman 和 rap 的很多特点，后台用 nodejs+mongodb ，前端用 vue+bootstrap ，可以团队协作开发， mock 数据，编写文档，内网测试等等，都是可视化操作，期待各位的使用：地址： http://123.57.77.6/    产品介绍地址： <a href=\"http://mp.weixin.qq.com/s/FU2w02ROQw1lm4s2X3ybsQ\" rel=\"nofollow\">http://mp.weixin.qq.com/s/FU2w02ROQw1lm4s2X3ybsQ</a></p>\n</div></div>"], "reply": "6", "tittle": "SBDoc:开发的接口管理平台，欢迎大家围观", "comment": ["看名字就不想用", "自己顶一个~", "界面丑了点，我建议你为开源做贡献，别造轮子了， swagger 等你发 PR", " 好的", "这名字太名字了", "sbdoc.cn 域名已经申请下来啦"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>提了个问题，不知道为什么几个月没人人搭理，也有一年多没更新了，如果停更，是否有更好的在线的 markdown 编辑器呢？最好是可以那种自定义渲染出来样式的那种。</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "editor.md 是不在维护了吗？", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>发现国内的 QQ 群里学术氛围并不怎么浓厚，反而瞎扯的多。即便是有人抛出问题，也很少有人回答，可能也没有几个人遇到过这样的问题。也加过一些微信群，到后来，打广告，乱七八糟的。有没有那种比较学术氛围浓厚点的啊？有的话希望能加我下，大家一起解决问题，共同进步。</p>\n<p>另一方面，发现国内的文章太多复制粘贴，有些复制过来连原链接都不加一个。导致的结果就是，搜索引擎出来的东西都是一样的。太没想法了，哪怕看下文章，整理出自己的理解也是好的。</p>\n<p>综上，所以想看看国外的程序猿都在谈论些什么，最好是类似 QQ 那种的及时聊天工具。大家有没有这样的途径以及相同的想法呢？</p>\n</div></div>", "<div class=\"topic_content\">翻墙和谷歌不用说了，程序猿自然是会的。主要是想了解下大家的信息来源和一些社交平台</div>"], "reply": "39", "tittle": "想看看国外的程序猿在谈论些什么", "comment": ["maillist.", "reddit \r", "hacker news", "slack 或许你需要的是梯子", "FQ 自己订些 RSS ，还有相关领域的 Twitter 什么的", "上 reddit 就可以看到。 reddit 的搜索很好用", "感谢各位", "你需要谷歌", "我来加一个： irc 。", "即时聊天工具这种你一言我一语的，怎么能好好交流学术呢😌", " 那是什么", " 就是，明明就应该眉目传。。", "即时聊天这种东西天生的特性决定了没法花时间思考，因而也就没时间探讨复杂的问题。即使在国内，氛围比 QQ 群好的多的邮件列表也有不少。", " 一个古老的聊天协议，有很多聊天室（被称为频道），里面很多开发者频道还比较活跃，比如##c++，##csharp", "能分享下吗\r", " @", "技术问题去邮件列表，经常一个问题直接一路查到源码看看解释器是怎么实现了。\r", "国内国外的邮件列表氛围都很好。", " 看你要什么领域的内容。一般搜索类似 \"python 邮件列表\"  就能找到。", "gitter matrix irc telegram", "我楼上的比较全。", "借贴问下 telegram 有哪些好频道介绍", "irc 很多质量还不错。以前 vc 那个群感觉很多时候质量还可以的。加过几个 cocos2dx 的群普遍气氛不错。", "上 YouTube 看看各种大会的录像，主流技术每年都有各种展会和分享，多到看不完。", "推荐， gitter ，随便搜一个群里面大多数都是国外的程序猿", "我一般就在 Twitter 上关注一些同领域的大牛", "Twitter", "hackernews, twitter, medium, github..", "你要即時通訊的那種， irc 和 gitter 很多啊， telegram 也有一些", "stack overflow 現在也有了聊天的功能", " #22 ", "国外经常各种 maillist 互动。。", "google+上面也有唷", "reddit\r", "stack exchange", "国外程序员也唠嗑", "人性逃不过，你们说的好像国外的同行都不像人了。见过没事开视频会议聊天的么？", "国外一般 meet up 比较多。", "国外程序员也唠嗑"]},
{"content": ["<div class=\"topic_content\">对你没看错.是自动发红包脚本.\r<br>\r<br>1) 基于 M onkeyRunner 这个 Android 开发测试工具\r<br><a target=\"_blank\" href=\"https://developer.android.com/studio/test/m\" rel=\"nofollow\">https://developer.android.com/studio/test/m</a> onkeyrunner/index.html\r<br>2) 针对 1080 x 1920 的设备测试过.\r<br>3) 想玩的自己调整参数 , 主要是红包总数, 红包个数, 红包金额.\r<br>4) 不知道为什么 留言无法使用 `type` 输入, 不知道是不是输入法的问题.我没多测.留空\r<br>5) 由于我没有找到微信小额支付免密的功能, 而且无法通过 `type()` 方法输入, 所以支付密码的输入也是通过模拟点击输入的.\r<br>这里要玩的话,需要自己修改输入密码的坐标. (注意不要把密码坐标分享出去哦.)\r<br>\r<br>\r<br>脚本如下:\r<br><div><a target=\"_blank\" href=\"https://gist.github.com/banxi1988/58996cf1605795b608c4e61328abe72f\">https://gist.github.com/banxi1988/58996cf1605795b608c4e61328abe72f</a> <button onclick=\"lazyGist(this)\"> 显示 Gist 代码 </button></div></div>"], "reply": "7", "tittle": "[无聊][恶搞] 分享一个 Android 版 微信自动发红包的脚本", "comment": ["要是自动抢红包还可以。有谁愿意在自己不知道的情况下发红包。 XD", "  需要自己控制,\r", "事实是需要有一定的编程能力发能运行此脚本.\r", "要安装  Android 开发者工具命令行才能运行此脚本.\r", "要修改一些坐标参数,才可以自动输入支付密码.\r", "所以,不会在自己不知道的情况下发红包的.", "大哥，你这个是完全按照坐标来点击的，不靠谱啊。。。。建议你学习一下 appium ，很方便", " 对于这种小场景来说,使用坐标也挺方便的. 再说这个只是玩玩. 不用太在意.", "为什么要自动发红包…", "这样的话，完全可以录制一个脚本呐，。。", "不知道是楼主发红包的速度快，还是抢红包的速度快"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"http://www.shenjianshou.cn/\" rel=\"nofollow\">http://www.shenjianshou.cn/</a></p>\n<p><a href=\"http://www.5wei.com/\" rel=\"nofollow\">http://www.5wei.com/</a></p>\n<p><a href=\"http://www.eatjoys.com/\" rel=\"nofollow\">http://www.eatjoys.com/</a></p>\n<p><a href=\"http://www.aiweibang.com/\" rel=\"nofollow\">http://www.aiweibang.com/</a></p>\n<p>这几个网站首页都类似，有谁知道使用了什么模板吗，推荐一下，谢谢。</p>\n<p>PS ：最好是 bootstrap 模板。</p>\n</div></div>"], "reply": "23", "tittle": "有谁知道这几个网站使用了哪些前端模板", "comment": [" bootstrap 这网站的首页相当好 每个插件都分组排好了 剩下的就是抄 css 了", " 知道是哪个 bootstrap 模板吗", " 手动抄太 low 了，有没有现成的模板", "\r", "你 TM 连这点搜索能力都没有么？懒得抄你还懒得搜么？", " 谢谢，查看神箭手源码，看到 iDea 了。", "同楼主，我再加一个 \r", "    \r", "\r", "这个是什么模板，也可能是自己开发的。", "\r", "\r", "这个插件不知道符不符合你的要求。", "wappalyzer 你值得拥有", " css 和 js 写在页面里不太讲究", " 自己开发的，查看源代码就知道了", "直接扒不就好了。。。\r", "\r", "不懂啊", "都是前端大神，第一次看到前端这么多黑技术，谢谢大家。 @", " 分享的链接查不出来网站使用了什么模板，不知道 wappalyzer 能不能查出来。\r", "\r", "目前得到的答案， shenjianshou 可以从网站源码里面看到采用了 iDea 模板， iDea 是收费模板，自己学习暂时不想花这个钱。\r", "\r", "欢迎大家继续回复，如何获取前端使用了什么技术，有哪些模板和 iDea 或者这几个网站的类似。谢谢大家！", "wappalyzer 说他们大都用了 owlcarousel", "哪位帮我看看这个用的是什么架构？\r", "\r", "一直没搞明白，多谢", " WordPress...", " 你摸着良心说，你这样打广告好意思吗\r", "这个站明明就是你自己的站，还说不知道用的什么架构", " 你摸着良心说，你这样打广告好意思吗 \r", "这个站明明就是你自己的站，还说不知道用的什么架构", "   你摸着良心说，你这样打广告好意思吗 \r", "这个站明明就是你自己的站，还说不知道用的什么架构 \r", "\r", "themes/Rainbow-Premium/style.css \r", "最没技术含量\r", "主题下载链接： ", " 你摸着良心说，你这样打广告好意思吗 \r", "这个站明明就是你自己的站，还说不知道用的什么架构", "第一个网站响应式布局做的很差，有个 card 的栅格大小居然用错，第二个网站底部有白边没去掉，强迫症受不了。第三个没有做响应式布局，第四个比较完美。", " 虽然你有装逼嫌疑，但是黑科技还是好厉害的，科普下原理？给你个赞赏 :)", " #11 好玩～"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>有时候修改 html 时不小心多删除了一个 div 或者加了一个 div ，这时如果浏览器报错就有可能需要在一片区域一个个标签看过去，不知道有没有方便的检查未配对标签的工具或者排错方法？</p>\n</div></div>"], "reply": "18", "tittle": "如何快速找到未闭合的 div 标签？", "comment": ["sublime text 可以，但是我不清楚是原生的还是 BracketHighlighter 插件带的", "验证一下 HTML 代码： ", "审查元素我觉得很方便查出来啊？折叠起来很明显能看出来", "如果平时注意代码对齐，很容易就能看出来哪里缺了。", "格式化代码..", "都不用提 IDE ，就普通编辑器也应该有语法错误提示的吧，未闭合标签会有醒目标志。", "hbuilder 右键验证文档语法", "还是保持一个好的代码习惯吧，保持对齐，能一眼看到哪儿没闭合。", "ide 的话，像 webstorm 会有语法校验，不合格会有 warning 提示", "问题在于，浏览器不会对 HTML 报错", "用 IDE 可以，但是没有 IDE 呢？例如 vim...\r", "\r", "对齐也可以，但是有时候缺少的 div 被别的 div 补位了！一眼看去只有文档最后才少了个 div\r", "\r", "我的办法是，代码功能区块起始和结尾写中文注释，外加代码格式化，可以保证快速定位。例如：\r", "\r", "<!-- 产品单元开始 -->\r", ".....\r", "<!-- /产品单元结束 -->", "刚遇到，写了个<a> <a>\r", "闭合没有加 / \r", "找 bug 花了些时间", "Firefox 查看源代码如果关闭不正常 div 就是红色字体", "lint or hint", "用 IDE 做开发，从来就不需要担心这个问题\r", "就算用 Editor ，主流的产品也都有相应插件来检查", "主要是不见得是自己开发了，是帮别人填坑，自己手写的当然没问题。", "我一般用正则把有包含的都删了 然后找单独的 div", "一般直接预览，页面能正常现实就行。管他闭不闭合。不能正常显示了再慢慢找。", "用这个插件\r"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>20 岁男性\n首先毕业已经半年了，从实习时做页面重构到现在的 JS 开发， 但是上个星期莫名去报了专插本，但是最近想想也比较纠结，不知道浪费两年多工作经验去全日制学校插本好么。</p>\n<p>之前让我产生去专插本的考虑是</p>\n<ol>\n<li>因为在专科时期有些许焦虑，固步自封，导致每天好像都在学习做无用工，所以毕业后没什么朋友。</li>\n<li>对现状还是不太满意， 毕竟很多不错的公司都没有面试或进入的机会，一直在小公司转悠，各种不规范</li>\n<li>想要尝试不同的更有趣的领域，例如 VR, WebGL ，可能会对学历知识层面比较有要求 所以想学习更多的东西，遇见更多的人</li>\n<li>大专时没有去考英语证书，所以担心以后会被局限</li>\n</ol>\n<p>而目前让我产生不去专插本的考虑是</p>\n<ol>\n<li>害怕又在本科院校混日子，每天除了上课，就是宅在宿舍</li>\n<li>学校教的东西和工作用的东西几乎没什么太多关系，一些理论的东西自己在平时了解学习觉得也可以</li>\n<li>觉得到本科院校两年后毕业依旧会选择这个职业，不如在工作上进行提高</li>\n<li>目前也没有太多的时间和心情用于复习上，而且高数什么其实也忘得差不多</li>\n</ol>\n<p>====\n对于目前自己的发展， 一直考虑往前端开发(全栈)，业余游戏开发走。\n所以会不会把时间用在个人相关能力的提高上会比较好。</p>\n</div></div>"], "reply": "18", "tittle": "毕业半年去专插本好么", "comment": ["...up", "找得到工作的话就别去了", "  算上实习已经工作一年了", "我觉得，除非现在的工作实在是太好，否则还是应该尽可能的去继续学习", "我觉得可以，虽然老师或上课可能不能给你很多帮助，但好处是相对自由发展的机会更多。而且你也说小公司有不规范的地方，这样自学、做项目可能更好。", "我擦，你看我的帖子，我现在就是这种困境，然后表述不当被喷了", "坐标江苏, 大三转本狗, 去年下半年刚转入本科学校。\r", "刚刚过去的半年, 忙忙碌碌地就过去了。时间紧, 课程多, 随之带来的结果是考试的科目也多。当然, 想混日子还是可以的, 不就是平时上课玩手机, 作业随便抄抄么...\r", "感觉我周围的人更多的还是在混日子, 混到毕业拿个本科学历走人...\r", "因此, 班级里面同学的专业水平也就不必说了吧, 一个 C 语言的课程设计, 能独立完成的屈指可数, 况且还有部分人专科的专业还是软件工程的...\r", "其实说到底, 这个主要还是看你对于本科学历的在意程度。如果想拥有一个认可度比较高的本科学历, 那么就选择走这条路, 尽管会花费不少精力财力;否则, 就选择工作, 或者以后需要时再去自考本科。", "我觉得读书是自由，在象牙塔可以有充足的自由完成自己想做的事情，提升自己。（这也是我准备考研的原因之一", " \r", "如果说我比较喜欢在工作中写代码的感觉，而且家里经济也一般。  也想过两年后考在职研究生也是个选择", " \r", "我觉得你的言辞是激动了些= =", " 总的来说，只要不在学校或者外面混日子，都是不错的。如果家里支持和允许你继续读书，还是应该坚持读书，毕竟是低成本高收益的一个渠道。加油～", " 2333333 ，怎么没收到你的回复，是一开始的文章还是回复？留个联系方式聊聊？ base64 ？： P", " 选择的学校是不是很少，几率大吗？二本 or 三本？", "上学并不影响技术啊， github 那么多开源项目，上学时间又充足，毕业拿本科+加上开源项目，你觉得进好公司还差什么？", " 这是今年江苏的相关招生计划:http://www.ec.js.edu.cn/art/2016/12/30/art_4266_204077.html\r", "其实只要认真复习备考，应该都能考上，差别只在于学校的好坏\r", "至于其他省，那就不知道了，毕竟每个省政策不一样", " 好的谢谢", "  留个联系方式我加你吧，可以聊聊么 XD", " UVE6MTAxODnigJTigJQxNTA2Ng=="]},
{"content": ["<div class=\"topic_content\">SourceTree for Windows 终于要提升性能了~\r<br>\r<br><a target=\"_blank\" href=\"https://www.oschina.net/news/81381/sourcetree-for-windows-2-0-beta\" rel=\"nofollow\">https://www.oschina.net/news/81381/sourcetree-for-windows-2-0-beta</a></div>"], "reply": "目前尚无回", "tittle": "SourceTree for Windows 2.0 beta 发布,大幅的性能提升", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>请教下过来人的经验，工作几年后再读研究生有没有后悔的。\n比如当初应该直接读研而不是工作几年后再读。。。</p>\n<p>你们读完后都几岁了？年龄对找工作的影响大吗？</p>\n<p>我碰到过的是工作几年(大于 5 年)后回学校读博然后走 faculty 这条路的，这对年龄没有限制，知道的两个都混的很不错（幸存者偏差？）</p>\n<p>我想知道下，如果之后不是做 faculty 而是去工业界混呢？</p>\n</div></div>"], "reply": "34", "tittle": "有没有工作几年后再读研究生的？", "comment": ["工作两年后读的研究生，后悔了， 5 年，房价涨的想哭", "可以去美帝读个 master 做跳板", "有不少工作几年然后去美帝混个文凭的吧，再在美帝的 IT 公司混两年，回来都有不错的位置了", "工作今年第 5 年，想去日本读个研。。然后留那边。。估计读完 30 了。。纠结中！", "之前有这想法，但是转软件后感觉读研没预期那么有用", " 有想法就去做，一纠结就更晚了", "还有读好几个 Master 的，尤其是那种 9 个月、 1 年的项目，性价比还是不错的", " 读完才 30 的话 还纠结啥。。。赶紧去", "不用纠结，只要注意一点：不要读 211 以下的学校。", "国外软硕应该可以考虑下，\r", "\r", "不过职业发展方向 如果是工程方面的话，\r", "在国内进一步读研，确实有点不划算，\r", "\r", "分析两点：\r", "\r", "一来，是软工注重实战，偏学术研究的少，\r", "你读 3 年硕士，比不上人家主导了一个上千万的项目，\r", "当然这其中也要衡量各种机会成本，不是绝对的\r", "\r", "二来，如果你搞深度学习 模式识别 图形图像算法之类的，那第一条当我放屁\r", "国内搞这些方面的 NB 学校，招考竞争压力大，你工作之后 跟那些刚毕业的竞争 好学校比较难，\r", "研究这些方向，要是读个一般的学校 还不如不去", "不值，房价升值的程度要比个人提升的大。", "再干 1 年拿到德国永久居住权，会考虑拿个 Master ，国内的本科文凭想拿好的 offer 有点吃力。", "r#12 @", " #12 肉身翻墙不具备参考价值", " 我一位师兄，研究生毕业 3 年后，在日本重新通了一遍关， 30 岁修士、 34 岁博士、 4 年博士后、 3 年特任助教、现在助教。", " 。。。", "打算先买套房再出国读研", "认识一个，考上了北邮", "不移民就别读了，要读就读准备移民国家的硕士", "25 岁时读的，谈不上后悔吧。\r", "\r", "功利点说，现在国内硕士研究生的价值确实不高就是了。\r", "\r", "不过确实不如早点结婚买房的。", "我就是，明年毕业，但我不是程序员", "毕业两年半后考了在职研究生，非全日制。坐标魔都某 985 院校，软工。\r", "\r", "17 年开始和全日制一起考试，可以拿双证，不过就读时间翻了一倍。\r", "\r", "楼主你真要学点东西还是出去吧，不过要规划好。\r", "\r", "如果家庭基础一般观念又比较传统的建议别折腾了，国内读个 985 算了。", "工作 3 年以后去读的...现在毕业不到两年，就工资来衡量没以前多...不过获得了一次转职的机会", "读研之前先掂量你数学行不行 不行读了也白扯 以后需要学历的读在职 mba 吧", "我也 don't know 啊， lz 要不要随便找一个方向 try for it ？", "2014 年毕业，工作两年，今年 1 月份来新加坡国大读软件工程的硕士，今天腊月二十九了还在苦逼地上课...\r", "\r", "我们这个 program 一年半，比一般的长一点，但是包括八个月的实习，实习是接手学校合作企业的实际需求，所以我觉得性价比还可以，肯定比国内浪费三年时间强。\r", "\r", "我的想法其实很简单，就是想来安个家，以后就算不换国籍，拿个 PR 也是好的。虽然现在女朋友都没有，但是想给以后的老婆孩子多一个选择，不管是工作、生活还是教育方面。\r", "\r", "工作之后读研，感觉就是目的性更明确了，我很清楚我要什么，而不是像刚毕业的本科生那么懵懂。这边也有很多三四十岁甚至头发花白来读硕士的，可能跟国内观点不同吧，英联邦的教育体系里硕士就是个过渡和加强，你觉得能力不足了，随时可以来充充电。", "为什么要扯到买房？买房和读研有毛关系 ... 我有同学大一来就买房了 ...", " 赞同", " 可以读机器学习", " 也想去日本读个研究生，不知怎么个流程", "我就是啊，现在正在悉尼大学读 master of data science 。平时上班不是很忙，然后又参与了实验室里面一些项目感觉很充实。\r", "\r", "其实人和人不一样，我不是那种觉得有钱就牛气的人，更喜欢充实自己，所以才选择这么一条道路。有多少房，不如有我快乐。", "@所有说买房的人\r", "\r", "16 年毕业生，心好累，放弃保研依然没有赶上房价的末班车。", " 请问您是 25 开始读的，还是 25 读完的？", "来北美读研的印度人里面，很多（如果不是大部分）都有两年或者以上的工作经验。", "个人觉得其实是你愿不愿意读研吧，年龄不是问题，比如今年某课组队的小伙伴，大女儿都上幼儿园，小女儿快满一周岁了，可人家还是就读于国内某著名 985 。对了，说明下，今年研一。。"]},
{"content": ["<div class=\"topic_content\">我终于领教了什么是手贱了\r<br>刚才准备下班过年，想把电脑系统登录密码给换了\r<br>用的是 Ubuntu 14.04 ，输了好几个密码都说强度不够，于是就点了个随机密码。为了安全起见，我用手机拍了下来，然后又复制粘贴到印象笔记。\r<br>但是我锁定电脑重新登录时怎么输都显示密码不正确。刚开始一两次我以为自己输错了，后来我对着印象笔记和手机拍的图片睁大了狗眼一个一个字符输入，还是提示密码不正确！\r<br>现在我只能带着怨念坐在班车上了。\r<br>我比较纠结的是，究竟发生了什么事？请各路大神明示</div>"], "reply": "22", "tittle": "手贱~谁能告诉我为什么我密码不正确", "comment": ["全角半角？", "single user 进去改密码。。。", "大小写？", "是不是栽在 I 和 l 上了?", "红帽的密码如果强度不够的话可以点两次确定强制设置 ", " ", "14 好用还是 16 好用", "原密码试试", "上一次碰到这种事是因为键盘坏了", " 有次折腾 fpga ，怎么都不对，后来发现板子上有个微动开关坏了。。", " 我们 IT 建议 14 ，因为我们经常需要编一些包，担心 16 兼容性不好", " 我用的是宇宙最强的键盘——戴尔电脑标配薄膜键盘 T_T", " 有可能！我年后回去试一试！！", " 还有这样的？！我的是 ubuntu ，强度不够按钮一直灰显:-(", " 试过了，不行:-(", "大学时候一样遇到过，一样未解之谜。\r", "后来大白菜，删除登录密码。😄", " 我也觉得登录密码没什么鸟用，出于职业习惯一直用着", "熟悉启动参数的话进单用户模式\r", "或者任何 linux 启动盘 chroot 改，就是几分钟的事", "大写用 Shift 不要用 Caps Lock ，试一下。", "也有可能是密码长度问题，好多说最大 16 位密码，但是等输入的时候就会惊奇的发现，最多只能输入 14 位", "如果是笔记本键盘的话还有 Numlock 的坑。", " 果然是 I 和 l 弄混了，能进系统了，哈哈，我真是个二货", " 😄"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>今天被同事问到,然后,我答错了... :-(\n被告知答案后..服气.</p>\n</div></div>"], "reply": "57", "tittle": "你不假思索第一反应回答: \"Either A or B\" 翻译成开发中的逻辑关系是?", "comment": ["if A\r", "else B", "A || B", "  您这不是逻辑关系,  问题是需要个 logical operation", " 跟我回答的一样....", "(A&&!B)∥(!A&&B)", "A | B\r", "\r", "英文中 Either 的意思是 两者其中只要有一个满足就可以。\r", "所以可以存在的情况是,  A 为真， B 为真， 或者 A 和 B 都为真。\r", "\r", "上面写的 if 肯定是不对的，\r", "|| 有可能因为编译器 的 boolean 短路， 所以也不完全对。", " \r", "?", "就是 A or B 啊... AB 中至少对一个就对\r", "不仅我们 CS 是这么教的，我们哲学里的逻辑也是这么教的。", " 短路为什么不对... 不还是对的么... A 对 a || b 就肯定是对的了呀", "a 或 b   a | b  但是楼主答案是什么呢？强迫症要命啊", "不是或么？或就是||啊", "if ((a && !b) || (!a && b))", " \r", "A || B  ==> 编译器 先检查 A ， 如果为真， 就不会管 B 的值了（假设 B 有可能在真和假之间)\r", "A |  B ==> 涵盖 A 为真 ， B 为真 或者 A 和 B 都为真。。\r", "好吧。。明白你的意思，是我有点较真了。", "  答的对, 应该是 XOR , \r", "\r", "\"either a or b\"   意思是:   A B 之中有且仅有一个是真.", "刚忘记了引用一下:\r", "\r", "either-or\r", "adjective [ before noun ] UK ​ /ˌaɪ.ðərˈɔːr/ /ˌiː.ðərˈɔːr/ US ​ /ˌiː.ðɚˈɔːr/ /ˌaɪ.ðɚˈɔːr/\r", "​\r", "used to refer to a situation in which there is a choice between two different plans of action, but both together are not possible:\r", "It's an either-or situation - we can buy a new car this year or we can go on holiday, but we can't do both.", "rand() % 2 == 0 ? A : B", "  多谢, 原来我一直理解的是错的.", "异或。。。你得港清楚这是逻辑运算还是。。。", "either A or B 使用的语境一般是在 A 和 B 有且只有其中一个为真（而且不会有 A 和 B 之外的可能）的情况下，比如说：\r", "\r", "A red-black tree is a binary search tree with one extra bit of storage per node: its\r", "color, which can be either RED or BLACK.\r", "\r", "要储存一个节点的红黑属性，只需要一个 Boolean 变量就足够了，非黑即红。\r", "\r", "但是这似乎没法直接翻译成一个逻辑表达式。", "其实就是异或， A^B", "  在你说的这个 context 里, 肯定是非红即黑, 但是 either A or B 有可能判定 4 种情况的结果, 就是 AB 分别为 TT, TF, FF, FT,  A xor B 可以根据这四种输入来做出判断.\r", "\r", "这个问题的由来是, 我在公司做了个东西, 简单说, 就是个用户的输入判断, 有 4 个输入框, 分两组(A B) (C D), 要求是要么 AB 都填, 要么 CD 都填, 当然全空或者穿插缺项, E.g. (AC  or BD) 是要提示错误.\r", "\r", "然后同事在使用中发现, 如果 ABCD 全填了, 我就处理 AB 被填的那个逻辑去了, 他觉得应该是提示错误信息, 我说这不是个 or 的关系吗, 他说, it is not an \"or\" relation, instead it is an \"either-or\" relation.  我说, 对啊, 那不也是 logical OR 吗? 他说 are you sure? it is XOR.. 我仔细一想, 人家说的对啊......", "Either[A,B]", "异或吧", "异或", "要么 A 要么 B", "这种情况说 Exactly one 或者 One and Only One 比较合适吧\r", "\r", "至于 either 并不能很准确的表示二者之一这个意思……", "这个其实是英语题吧……", "Determiner[edit]\r", "either\r", "Each of two. [from 9th c.]  [quotations ▼]\r", "One or the other of two. [from 14th c.]  [quotations ▼]\r", "(coordinating) Used before two or more **not necessarily exclusive possibilities separated by \"or\"** or sometimes by a comma.  [quotations ▼]\r", "\r", " 其实是英语题，本来说啥都对的啊，后来这个问题被问得多了，连我们 CA 老师上课时候都讲这个逗我们，现在在贵圈 either 的意思就缩小成这样了……", "上技术社区考了一个英语题……", "\r", "\r", "Either/Or and related terms may also refer to:\r", "\r", "Logical disjunction, the logical meaning of \"either ... or ... or both\"\r", "Exclusive or, the logical meaning of \"either ... or ... but not both\"\r", "\r", "可以指逻辑析取（逻辑或），也可以指异或。这个其实有歧义。", "这是一道英语题。", "平常所说的的 or ，中文的或，大多数情况下都是编程语言中的 xor ，这点很坑。", " 这个其实是集合的运算符，不过其实都差不多", "各位英语捉急啊,英语中 either 的逻辑与 both 意义等价. Either A or B 的逻辑意义是 A 和 B 必须都为真.若任何一个为假,则不能用 either\r", "所以是 A and B", " 喷了，哥们你是在钓鱼对吧", " 我觉得 either 和 both 是不同的。\r", "\r", "either A or B == both A and B?", " 你被钓鱼了。。。", " \r", " \r", "开玩笑,各位这么认真,语言上的东西没必要这么较真啊.\r", "\r", "从语法的理论上讲,这样分析应该是没错的. \r", "陈述句举例: Either this apple or that apple is bad == Both apples are bad.\r", "\r", "实际应用中最正确的回答是\"随语境\".\r", "因为 either or 可以用在陈述句中使用,也可以用在选择句中,而有的选择句中强调必须择其一,有的则不限制必须择其一.\r", "\r", "就像\"i++i+i++i+++i\"的结果一样,答案是随编译器而定的", " 哥你不是在开玩笑的样子……\r", "\r", "你在说 and 和 or 没区别，视编译器而定，是吗", " \r", "```\r", "Either this apple or that apple is bad == Both apples are bad. \r", "```\r", "Are you serious?", "data Either a b = Left a | Right b", "所以直译应该是 不是 A 就是 B 吗？这样好像就排除掉 Both True 的 case 了(突然觉得中文博大精深啊！", " 有些 formal logic language 是以 \\oplus 作为 XOR 的逻辑符号的嘛", "A V B\r", "/or 符号打不出来，用 V 代替。离散数学基础啊兄弟们", "如果是 exclusive or 一般都会注明的，默认就是||我觉得没问题", " \\lor 或者 \\vee 可以打 ∨ (U+2228)", "stack exchange 上的两个答案\r", "\r", ">It isn't always actually used with full precision, though, so, as usual, context has to be taken into account. If somebody says, \"select either A or B\", for example, they definitely mean that you should not select both. If they say \"if either A or B is true\", though, they probably mean a non-exclusive OR, and the condition is still true if both A and B are true.\r", "\r", ">Usually, the inclusive sense is used in mathematics and the exclusive sense in everyday life. In any case, further specification or context will remove any doubt.\r", "\r", "所以如果是 choose either A or B 这样那肯定就是 xor 了，但其他情况看语境也可能与 or 同义\r", "\r", "\r", "还有 ", " 给了同样的解释：\r", "\r", ">In every day language we use the phrase \"either A or B\" to mean that one of the two options holds, but not both.For example, when most people say something like ``You can have either a hot dog or hamburger,\" they usually aren't offering you both. The use of ``either/or\" in everyday English is usually divisive, and meant to imply there are only two options: A or B, but not both A and B. (The use of \"or\" in this way is sometimes referred to as \"exclusive or.\") \r", "\r", ">However, the use of \"either A or B\" in mathematics allows the option that both A and B hold. (The use of \"or\" in this way is sometimes referred to as \"inclusive or.\") For example, in mathematics, the statement \"If x is a real number, then either x≤0 or x≥0\" allows the possibility that x satisfies both x≤0, as well as x≥0 (which is true of the real number 0).", "特别是 \"either A or B is true\" 这种判断逻辑的情况，很有可能应该等同于 or 。\r", "\r", "\r", "\r", "**On the other hand, \"Her grades are so good that she's either very bright or studies hard\" does not exclude the possibility of both.**", "我的第一反应就是: A or B ... (Python)", "assert a or b", "bool either(bool A, bool B);\r", "\r", "either(A, B);", "根据剑桥的解释：\r", "used to refer to a situation in which there is a choice between two different plans of action, but both together are not possible:\r", "It's an either-or situation - we can buy a new car this year or we can go on holiday, but we can't do both.\r", "就是可以其中一个为真，结果为真，但是不能都为真。", "凭我的经验英文中的 either 不带 both ，老美会说 either A or B, or both 。所以应该是 (A && !B) || (!A  && B)", "!A != !B", "$a or $b|Or|TRUE if either $a or $b is TRUE.\r", "$a xor $b|Xor|TRUE if either $a or $b is TRUE, but not both.\r", "\r", "世界上最好的语言如是说。", "xor"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://github.com/SpaceVim/SpaceVim/releases/tag/0.1.0\" rel=\"nofollow\">https://github.com/SpaceVim/SpaceVim/releases/tag/0.1.0</a></p>\n<p>SpaceVim 项目受 spacemacs 启发，采用模块化管理 vim 配置，目前支持以下语言开发，包括代码补全，语法检查，等等功能，欢迎尝试。</p>\n<p>已支持语言：</p>\n<ol>\n<li>c family</li>\n<li>java</li>\n<li>php</li>\n<li>js</li>\n<li>rust</li>\n<li>go</li>\n<li>lua</li>\n<li>perl</li>\n<li>viml</li>\n<li>python</li>\n</ol>\n<p>如果需要其他语言支持，欢迎前往 github 的 issue 提交，我灰尽快增加支持。</p>\n</div></div>"], "reply": "5", "tittle": "SpaceVim release 0.1.0 版本， 欢迎尝试，目前支持多种语言开发。", "comment": ["支持", "我其实一直不太明白， 受 spacemacs 启发 的意思是，在 vim 上引入了很多 emacs 的特点吗？\r", "\r", "我个人觉得， emacs 平台比 vim 更强大，但是 vim 的编辑方式更好，所以 spacemacs 把二者合起来我比较能理解。 SpaceVim 的哲学是怎样的呢？", " neovim 平台更强大！！", " SpaceVim 的初衷就是搭建一个好的平台，然后不同语言开发者设计自己语言相关的模块，然后这些模块可以被大众复用， 我觉得这才是 spacevim 项目的真正意义，这就是所谓的一劳永逸，一旦模块配置好，需要用这样的模块的用户，再也不需要为折腾插件，修复配置 bug 烦恼。", "赞"]},
{"content": "", "reply": "5", "tittle": "拜年啦，祝 V 友们新的一年万事如意，步步高升！", "comment": ["好像有个对联，适合送给大家\r", "Python Java C++ Line Line So Easy\r", "Year Month Week Day Day No Bug\r", "Happy New Year\r", "\r", "不要问我为什么是 Python Java C++ 这三个，我只是搬运工", "新年快乐", "66666", "新年快乐", "新年快乐"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>有没有以前做技术的然后彻底转行的，或者从理工转向人文行业的同学来谈谈感受？</p>\n</div></div>"], "reply": "97", "tittle": "如果不让你做程序员，你会不会有种 [世界之大，却没有容身之地] 的感觉", "comment": ["我的话大概……还可以做产品经理吧。\r", "之前经常看产品经理不顺眼，自己当了产品后未必是个靠谱的产品，至少不会提那些刚张嘴就被开发打脸的需求。", "一个大学同学现在玩音乐，给乐队，电视节目做混音\r", "绝对不是技术不行去玩音乐的那种\r", "而是真心喜欢音乐\r", "说白了\r", "想想自己离开了机器还能做什么\r", "要是没有\r", "还是别想太多了", "那我就去当老师咯", "大学同学有相当多的都去考教师了。话说我自己的话离开了计算机估计真的没什么能干的了，其实高中的时候我的文科比理科好的多，一度打算报文科学经济或者法律的，不过父母认为理科容易找工作就报了理科。", "当个医生或者律师", "程序员只是个很小的群体 还是不要把自己困在这个小世界里的好", "如果这样，有机会我会去当老师吧", "我还可以去酒吧唱歌。。", "我从小学就在小霸王上写代码了，初中文曲星，然后电脑……\r", "\r", "也没想过没电脑了会怎样……", "男中音歌唱家", "学地质的，零基础转行写代码", "可以用学技术的思维再学一门其他技能", "可能会去搞数学", "《中国式相亲》金星主持的，有一集来了个厨师，自称换了 13 个工作，还写了一本如何谈恋爱的书，说自己现在正在自学编程，准备当程序员。", "前几年不是还有很多新闻说某大公司程序员回家创业 开水果店之类的 现在不流行了？", "程序员的下限是就是产品经理。\r", "如果连产品经理都无法快速上手，那么这个程序员的上限也只会低得可怜。相信在座的各位这点能力还是有的。", "可能是产品被黑的最惨的一次，不过也对，技术转产品门槛不高，我就是", "我还可以搬砖啊(难道现在不是吗", "如果不做程序员 我大概可以去\r", "读个历史方面的研 这是仅此写代码的爱好\r", "做产品经理 因为我当初做程序员就是因为好多想法没人帮我实现 就自己亲自上阵了\r", "搞大棚养殖之类的 这个是因为想搞自动化农业\r", "开个大排档", "那我只能滚回电脑城帮人修电脑了", "修电脑 + 1", "那只能抄起锄头去种地了。诶，等会儿，我腰闪了……", "艺术家或者设计师", "妈蛋 不当程序员要是不找个有钱的工作 老婆都跟别人跑了", "干点啥不行，实在不行还可以当老板娘啊", "那我只能考个公务员当了.", "那我只能去搬砖了🤣", "想去开卡车给人送货", "我想去学厨师，哈哈", "不会，刚程序员这么多年，对我来说最大的收获不是学会编程，而是学会了方法论，然后慢慢延伸出自己的思维方式和处事准则，说的简单点，就是如何用脑子。以这个为前提，我不认为不做程序员会咋样，当然我喜欢编程，即使不当工作，也不会放弃。", "\"程序员的下限是就是产品经理。\"\r", "这是产品经理被黑的最惨的一次，心疼这哥们这些年碰到的都是些啥产品经理，如此不入他眼。或者他对产品经理的理解只是理理需求写写文档吹吹逼...", "有，我是学纯文科会计的，法律方向，据说是 ACCA 免考 9 门，但是毕业去了嵌入式通讯设备公司做研发， ios 端，自学 Linux C 中。", "卖水果去了", "不做程序员了还可以做产品经理啊。", "可以学一学 ui 设计之类的，或者做个老师，现在培训机构里面据说老师工资也很高。哦对了，还有开淘宝店，或者去图书馆做个图书管理员也不错。自学音乐也可以。", "我感兴趣的事情还是挺多，可惜一个人的时间和精力也就那么多", "看了 LZ 的标题只想说 感谢发明计算机的人们。如果没有你们，世界辣么大 却没有安身立命的能力。", "我可以贴膜", " 功夫？", "如果许嵩看到这个帖子 ... 那么下面的回复肯定是这样的：\r", "\r", "```\r", "当不了程序员我还可以做歌手，\r", "做不了歌手我还可以做个医生，\r", "医生也懒得做了，做个厨师吧，\r", "厨师没意思，还是做摄影师吧。\r", "```", " 说出你的故事，测量的准备转行啊", "我一直觉得我当产品经理能把对手摁在地上打", "只能去做吉他手，或者在琴行教人弹吉他了", "一年前我一直以为自己会成为后期狗", "“ 你們看那天上的飛鳥，也不種也不收，也不積蓄在倉裡，你們的天父尚且養活牠，你們不比飛鳥貴重得多嗎？ ”\r", "\r", "不会啊，我反而会觉得世界很大！", " 马太福音", "可以去当英语 /数学 /计算机老师。", "想去做老师 或者 开个咖啡店", "摆地摊，我觉得挺不错的", " 吹牛逼，我也会。", " 所谓双拳难敌四手，好汉架不住人多，两个一起上就不一定谁在地上了，三个一起上，就可以确定谁在地上了。", "额。。。一直想做厨子来着", "开网店，忽悠人", "路边摊手机贴膜", "卖早餐呀", "还可以做咨询嘛~", "咨询和培训的话，中高端的还是挺不错的，参考健身舞蹈乐器的高级私教，一节课收费挺高的", "虽然是日常收金币\r", "但会去开个青旅 然后说不定天天骑车了", "公务员……然后打代码休闲……", "可以去做个教授", "会有点。。。。。。。哈哈哈哈哈", "不会，只会觉得了无生趣……", "卖杂粮煎饼，真是好吃", "那我就打算卖水果，一边卖一边吃", " 毕业后第一份工作是在工地当技术员，一段时间后受够了不喜欢的工作，思考以后的出路，发现对编程感兴趣。深思熟虑之后，裸辞去培训机构花几个月入门，然后快速找到一个 java 的工作，在工作的这几年中，不断拓展自己的知识面和技能，目前职位不算低，也找到了自己的定位，很早之前转战前端，现在专职前端开发。", "这段转行经历给我的最大感受是：", "1.一定要找一个自己喜欢的工作；", "2.找到之后，认真的做，要提高自己的自学能力；", "3.多联系，勤思考；", "4.当技术到了一定程度之后，会有两个选择，继续做技术或转管理岗位，这个看自己。", "ps.另外，再说下楼主的问题。如果不做程序员，会练好吉他，也许会进军歌坛吧（唱歌还行），当个歌手🎸😬", "电力专业的码农，虽然电工证已经过期了", " naive,除非自己办个图书馆，很难，公共馆属于事业单位，需要考试，大的省馆或者大城市市馆都是万里挑一。高校现在更是难，特别是好的高校，上次听说一个北大博士去应聘被刷了。。。图书馆确实好单位，有编制的收入不低，但是压力小，过的真是生活。", "没了电脑,我就去做业务了...", "我可能会按照兴趣去研究天文 /地理 /考古", "以我一开始进入这一行之前的经历来看 我只有去电脑城装机去了 毕竟鼓捣 PC 机长大的 从家里的 386 到 AMD 三核处理器时代我都一直在弄 进入这一行反而没这么折腾了 都是买的笔记本 再也没攒过机", "我大概会去考一个教师资格证，然后当个小学老师", "在家种田，饿不死然而估计找不到老婆", "辅导 高中 /初中 物理 /化学 /生物等", "我可能开一个淘宝店 ", " ", "现在马上去做也肯定没问题的职业：\r", "- 产品经理\r", "- 项目经理\r", "\r", "现在开始花三年时间进行练习后应该可以胜任的职业：\r", "- 攥稿人\r", "\r", "还是眼界太窄，不应该只有这么三个的。", "当个土豪", "牛逼的人 你让他转行 哪怕开个小超市 他也会比一般人经营得好！\r", "所以 不做什么都没问题", "还好，我不是程序员，我只是一个段子手销售。", "不会啊~", " 搞不懂我国国情。反正我是觉得图书馆管理员这种职位根本不需要什么专业技能啊，拉进来培训几天让他知道 isbn 编号，知道图书分类，教他用个内部的书籍管理系统就好了。那些招博士生硕士生进去过养老一般的工作生活的真是浪费社会人才啊。", "时尚博主，旅游撰稿人／策划，混音师，摄影师，烧烤店老板，吉他老师， Skater Pro ，外贸商人，微博舌战群儒的公知，培训班老板，或者做一辈子学生", "如果不让我坐程序员，我能干啥？\r", "\r", "查看了一下自己的技能树\r", "我会开火车，我会开飞机，我会卖服务，我会做媒体，我会炒股票，我会炒外汇，我会编段子，我会炒菜，我懂各种行业的业务流，我会做设计，我特么还会做外科小手术，我会摄影，我会处理人际关系，我懂财务，我懂税务，我还精通各种刑法上教导我们的挣钱方法……", "有两个以前的同事从开发转型到 HR 去了。\r", "\r", "内心深以为可惜……\r", "\r", "但毕竟是自己的选择，而且转 HR 后能有更多的时候陪伴家人。", " 向大佬低头并请求传授经验", " 我也有这打算……真想换个工种了", " 哈哈， naive, 你说的那是图书馆中的 clerk （职员）, 而不是 librarian ，图书馆员是一种职业化程度很高的职业，当然这是在国外，现在国内大城市也很好。真是理想的职业啊，摔", " 谢谢你的回答、我也是在我们家一个国企上班。感觉没什么前途。本来上大学时就想学编程的。可是那会爸妈不让非要让学测量，说是毕业好找工作（因为家里有亲戚在这方面有关系）。工作一段时间也是受不了了，经济独立了跟爸妈也商量好了准备不干去学编程。再次感谢你", " 不客气。", "转行这个事，确实是要慎重考虑的，毕竟决定着以后很长一段时间甚至是一辈子的生活和工作。而且，转行的代价也是随着工作时间的增长而增大的，要是真决定转行，就要趁早，拖的时间越久，转行的压力就会越大。祝你好运。", " 无知者无畏啊，知道图书情报学这个专业有博士学位吗？又比如武大的信息系统专业对口的就是图书馆领域，文献查询编目，机读目录等等工作都很系统知识组成，各专业领域的文献查询，参考咨询可不是百度知道水平就够了", "然而我不是程序员，也不后悔现在的工作\r", "不过如果不干现在这个，我肯定去当程序员", "我在的民办学校和我同一批进的绝大部分是研究生／海外研究生，作为参考", "或许可以去搞传销", "应该会去做现实意义上的 工程师 吧\r", "或者去做翻译", " 每天上班感觉就是在挣扎中度过，很难受。觉得这不是自己想要的生活，这才决定转行的，毕竟编程是自己想要做的事情", "屠龙之术？", "可以去做摄影师 可以去做室内设计", " 我就是在电脑城氪金的人民币玩家啊。"]},
{"content": ["<div class=\"topic_content\">除了 iMac 之外</div>", "<div class=\"topic_content\">普通用户，正常上网，看视频， office ，基本上不玩游戏。</div>"], "reply": "55", "tittle": "一体机有什么推荐的吗？", "comment": ["放心，有 Surface Studio", "同楼上， Surface Studio", "Surface Studio\r", "\r", "给设计师用的", "这个中国还没的卖吧", "IMac", "微软 MVA 视频里面那种一体机是什么型号", " Surface studio 是给设计师用的吧，求推荐普通用户的", "Asus Zen AIO?", "Dell 家旗舰产品 XPS 一体机能做那么丑 妥妥 iMac", "反正都是 windows ，只是 lz 一楼这些需求的话，上淘宝买个 hdmi 的电脑棒就可以了，几百块钱的事情，往电视后面一插就可以用了。", "建议楼主说一下预算，还有加不加钱……这里很多加钱的建议的。", " 那玩意弄 office 的酸爽我是不会告诉你多难忘的。。。。。。现在 office 照样是很耗资源的，尤其是硬盘读写和内存占用", "15 年底给丈母娘买了台 HP 的一体机， 4500 的样子。买回来我自己给换成了 8G 内存。\r", "\r", "看剧、 QQ 、 QQ 农场偷菜、网页", "iMac 27 5K", "nuc 挂显示器吧", "LZ 说预算啊，不说预算怎么推荐", "![英特尔® NUC 套件 NUC6i7KYK 配备第六代智能英特尔® 酷睿™ i7 处理器和英特尔® 锐炬™ Pro 显卡，为玩激烈的游戏释放最大性能。我们新创建了一个别出心裁的外观，加上重新设计的机箱，让您能充分利用四核处理器的每一个 Ghz ，而毫无过热之虞 — 使 NUC6i7KYK 始终淡定不升温，酷。]( ", ")", "dell vostro 系列，便宜，换个 ssd 够用", "华擎 Deskmini STX 加显示器", "楼主 ms 的吧，微软内部购有优惠么？ Surface Studio", "Surface Studio", "飞利浦（ PHILIPS ） A222C3WHW 21.5 英寸一体机电脑（酷睿 i3-4030U 4GB 500GB DOS WiFi)16:9 全高清 显示屏\r", "一般来讲不说预算的话...嗯\r", "Surface Studio [二哈]", "xps one ，给你推荐一发", "wokao 楼上有  QQ 农场偷菜。。。。。。。。", "Surface Studio 只要愿花钱", " 公司内部优惠大部分时间敌不过京东，绝大部分时间敌不过天猫，绝对敌不过淘宝", " 现在还有 qq 农场！。。", " 表震惊。。", "华强北有你需要的！", "Dell 有一体机。\r", "但价格好像逼近 iMac 。", "买个 Mac mini 绑在显示器上（逃", "Surface 太贵了。。。。", "迷你 pc\r", "- nuc\r", "- asrock deskmini\r", "- dell 7040\r", "- thinkcentre m900 tiny", "Windows 的 Surface Studio ；\r", "Mac 的 iMac 。\r", "\r", "反正我是設計師，我用 iMac 5k ~", "NUC+显示器不是蛮好的嘛，各司其职的硬件才是好硬件", " 你这么回复对得起你的 ID 嘛（斜眼", "迷你 pc 显示器", "  CC 大人？", "树莓派插显示器上", "一体机都很垃圾，还不如上神船笔记本呢。", "推荐 Surface Studio 的是都亲身试过么？还是忘记了 SP 和 SB 刚出来时候的品控地狱？", "联想（ Lenovo ） IdeaCentre C560 23 英寸一体机电脑（ i5-4460T 8G 1T 2G 独显 Rambo 刻录 Wifi Win10 ）黑色", " 我不会告诉你有次我在 500 块钱的 Intel Z3735F+2G 内存的寨板上跑过 Vmware 虚拟 Unbuntu ，然后交叉编译过 openwrt 的固件，编译工具链+固件一共用了 1 个晚上。那个酸爽绝对超过你用 office ， but 还是可以编译成功的。", "前一段时间疯狂想买 dell 7040m", "比 nuc 感觉好的是省了内存， ssd", "而且也小巧", " 對的哦。", "  +1", "看看这个\r", "\r", "基于产品定位，市面上的一体机性价比都很低，除了少数几个高端产品之外，整体质量都很糟糕，建议买个 NUC 之类的挂在显示器后面，大多数小主机（譬如占美）都带 VESA 挂孔可以直接安装在显示器后，跟一体机没啥区别。", "个人不建议 Surface Studio ，毕竟微软出品的硬件……初代基本都是坑。一体机的话目前还是 iMac 整体素质比较靠谱，不过个人觉得一体机是个很尴尬的存在，除了漂亮似乎也没啥了 QAQ ，家里还是台式机好一些。", "骷髅峡谷绑 DELL U2515", " 不理解为什么比 NUC 好的是省了内存和 SSD", " 对于有整洁强迫症的人来说很有吸引力啊", "NUC+显示器 真的棒！", " \r", "\r", "intel 家的是没有自带 ssd, 内存的. \r", "dell 家的是自带的. 坏了的话, 找一家售后, 而不是多家.\r", "\r", "而且听到一个比较鸡贼的说法是, 类似如某些组装机(x 东上的雷霆之类, 有些不带内存), 要证明其到手就有问题, 还得先证明你自己提供的内存没有问题."]},
{"content": ["<div class=\"topic_content\">开发者可以访问这个网页获得相关信息：\r<br><a target=\"_blank\" href=\"https://developer.android.google.cn/topic/instant-apps/index.html?hl=zh-cn\" rel=\"nofollow\">https://developer.android.google.cn/topic/instant-apps/index.html?hl=zh-cn</a></div>"], "reply": "目前尚无回", "tittle": "Android Instant Apps 正式上线", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>前六个里面三个是 JS 为主的。</p>\n<p>感觉主要还是因为写的 php 都是一些工作的项目。不过确实感觉自己在 PHP 的开源上做的有点少，今年要加油了。搞出个 PHP 的项目。</p>\n<p>近来都进来了，不妨来给个 star 吧，说不定有你喜欢的~</p>\n<p><a href=\"https://github.com/bestony\" rel=\"nofollow\">https://github.com/bestony</a></p>\n</div></div>", "<div class=\"topic_content\">错字 更正：\r<br>\r<br>进来都进来了，不妨来给个 star 吧，说不定有你喜欢的~\r<br>\r<br>\r<br><a target=\"_blank\" href=\"https://github.com/bestony\" rel=\"nofollow\">https://github.com/bestony</a></div>"], "reply": "28", "tittle": "作为一个 PHPer,我的 github 上 Star 最多的 6 个项目没有一个是 PHP 的", "comment": ["我也是啊，写 python 的， gayhub 基本没什么项目是 python 的。这是最尴尬的", "快快  给楼主点 star ，这是主题的意义嘛", "  ", "   所以今年打算写个 PHP 的项目开源出来，总要有个 PHP 项目来壮(三声)脸\r", "\r", "  ", "   交 Star 不杀", "大部分 phper 还是离不开写 js", " 确实，写 php 的前端的三法宝多少都要写， JS 更是重中之重，要写 Ajax 之类的。", " 在我司我等 PHPer 只写接口，然后给文档给前端他们写 ajax 。难道这样不对？", " 对啊。但是小公司...一个 php 恨不得当产品、前端、后端、 QA 使....", "同楼主一样，主要写 PHP 但也要做前端 JS 和运维测试什么的，好处是真的帮公司节省了很多前后端交流成本，一些问题自己可以快速决定交给哪一端解决最方便", " 是的，很多时候和前端沟通不通，反而不如把代码写出来，丢给他看 233 。感觉特别爽。节省时间可以用于撸码。", "试试 swagger", "+65535 \r", "php 项目多得很但就是不人气，几天写个小东西自己顺手用用，各种缺星，宣传也没用\r", "\r", "随便发个前端 boilerplate ，基本没宣传 100 星\r", "\r", "github/mcfog 各位有空来逛逛哈，坑多得不行( ﾟ∀。)", "+1\r", "从没想过 Star 最多的竟然是 Shell 脚本。。。\r", "写 PHP 的轮子基本没星", " 感谢，等会造完轮子看看。\r", " 哈哈。同样的。所以想造个可以通用的项目。放出去。 PHP 除非做 sdk 、 composer 包之类的，确实很多人拿来没用。\r", "\r", " 哈哈，又一个被 php 耽误的运维大师", "前两年写了个 golang 的，一夜到 1K", " wide?", " 嗯，现在烂尾了..", " Go 这样的 IDE 还是本地化的方便些。我用 LiteIDE 。期待 GoLand~", " 我也用 LiteIDE 哈哈！关于 Wide 的产品定位请移步 ", " \r", "（我觉得我们这样强行歪楼会被打的）", " 哇，前排围观菊苣。前段时间翻了好久你的 gayhub", " 我以为是 githug 那种 git 的游戏，跑去谷歌一搜。。我的老天鹅。。这新世界的大门打开的猝不及防。。", "  ", "   不要乱 Google.会出事的。", " 欢迎来到新世界！", " 不会啊， python 还是很流行的，平时依赖的很多项目都是 python 写的\r", "\r", "1. bilidan ( ", "), B 站现在有了 H5 播放器，项目也停止维护了，但在以前的 flash 时代，我每天都用这个看 B 站\r", "2. biligrab ( ", "), 有些值得珍藏的高清 B 站视频，下载珍藏\r", "3. bypy ( ", "), bcloud ( ", "), iScript ( ", "), 3 个度娘盘下载客户端\r", "4. httpie ( ", "), curl 替代品\r", "5. you-get ( ", "), 万能视频下载\r", "6. musicbox ( ", "), 网易云音乐 CLI 客户端，我正想仿照这个做个度娘盘版的\r", "\r", "等等等等诸如此类，还有很多。\r", "\r", "我是个 Java ＋ Python ＋前端程序员， star 数最多的反而是一个 ruby 项目(项目主页 ", " github 上的项目后觉得我 ruby 不错，拜托，那是 homebrew 项目。。。", " 我是说我的情况。主要是很多项目都是半成品，够自己用，处于闭源状态。", "如果要开源，那做配置文件，处理，文档编写等等工作量太大了，忙不过来。", "php 涉及到业务比较多~~", " python 的很多啊。比如 ", " , 还有 ", ", 还有 ", ", shadowsocks 的 linux 端啊。 我当初就是逛 github 的时候，发现我大多数感兴趣的东西都是 python 做得，才学了 python", "支持 O(∩_∩)O", "作为 c 艹程序猿，我的倒有一个是 php 的。 wordpress 插件"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>眼不见为净。。</p>\n<p>%hook UIWebBrowserView</p>\n<ul>\n<li>(void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2{\n%orig;\n[arg1 stringByEvaluatingJavaScriptFromString:@\"document.getElementById(\"js_bottom_ad_area\").style.display = 'none';\"];\nNSString *weburl= [arg1 stringByEvaluatingJavaScriptFromString:@\"document.URL\"];\n%log(weburl);\n}\n%end</li>\n</ul>\n</div></div>"], "reply": "4", "tittle": "看微信公众号文章时被广告 碍眼了。。。。。。所以。。。。。", "comment": ["能去掉不", "直接 hook 屏蔽了厉害", "如何使用", " 用 Theos 创建一个 WeChat 的模块，把这段代码帖进去编译就行了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><hr>\n<p>今年是大年初一,给大家拜年了!\n祝大家新年快乐,阖家欢乐.</p>\n<h1>吐槽仅供参考啊,一个强迫症的碎碎念,不要打我</h1>\n<p>leanote 感觉不错,就是坑太多了.\n安卓 none,自建的话倒是出了个成品,但是后续文档坑爹,太多坑的地方.\n看了论坛,有人发问题好久不回.</p>\n<hr>\n<p>Onenote 不支持 Markdown</p>\n<hr>\n<p>有道云笔记,网易匠心也一般吧.<br>\n看看手机的有道词典,就可以想象到导入导出广告什么的没长进了.</p>\n<hr>\n<p>还有许多朋友们推在 Mac 玩的笔记..买不起,转不起,用 Windows 今年 8 年了..</p>\n<hr>\n<p>想想为知,当初不用它是因为,嗯,markdown 预览不能自定义字体.</p>\n<hr>\n<p>看云,偶尔写代理什么的,看了用户协议..gone<br>\nGitBook 倒是不错,有空试试.</p>\n</div></div>"], "reply": "38", "tittle": "想想还是转 为知 + 印象了..", "comment": ["如果没有太高要求的话， simplenote .com 倒也算是轻量级的一个选择，跨平台，连 Linux 下都有。", "我就直接用的 iPhone 自带的备忘录。。\r", "学习笔记啥的还是直接放在博客和简书。。\r", "\r", "话说看云和 GitBook 为啥我用不来。。感觉好难用= =放弃了", " \r", "看云你需要会 git .. 本地有个差不多的编辑器..\r", "\r", "GitBook 官网下.. 因为全英文.. 我单词背的好慢", "直接用的印象，编辑糙点就糙点，满足自己的核心需求就 ok ，强迫症会发现根本没有什么完美的工具。", "leanote 自建，非常稳定，好用。奥，除了最后数据库表突然都没了。", "simplenote++ ", "iOS 与 android windows 版本都支持 markdown ，做笔记足够了，唯一不太满意的大概就是目录系统，需要自己有一定的标签系统来管理", " Git 还是会的。。但是实在觉得 UI 不好看。。\r", "GitBook 那个文件结构真是乱- -删了标签， md 文件还存在，反正我是凌乱的\r", "本来准备把之前总结的笔记弄成书，开源出去，但最后放弃了", " 瑕疵很多,我有强迫症.\r", "发现了就会不得安宁", "年轻真好，自从我上了一点年纪之后，强迫症都治愈了。", " \r", "是啊.. 不去在意忍着用就行,只要不是频次高的东西", " 谁叫你用 mongoDB 不设置管理员密码，这个事件上次出现了，有人批量删没设置密码的 mongoDB 数据库，然后勒索，这个锅你甩不给 leanote ，虽说我也是不用它，因为开始收费了，开源版本也不太好用，和官网版功能差很多", "有道云笔记 ", "没人用？", "安卓版本是有的，你上 github ，里面 leanote 的 releases 里有官网版，还有网友开发的第三方，这个比较好用，叫 leamonax ，也可以在 github 上找到", " 频次倒是挺高的，只是工具都是不完美的，往往都有优缺点。\r", "\r", "搞清楚自己的核心需求，然后选择自己最能接受的那个工具用就行了。 leanote 虽然支持 markdown ，但是在一些（我的）核心需求上（收集能力，搜索）方面反而没用。相比之下印象笔记是缺点最能接受的那个，忍一忍就好。", "以前用的 dokuwiki,有点像换掉了.\r", "每次编辑完得点一下才能看结果,蛋痛", "哈哈  你可以试试我的博客....  功能类似 CMS...... ", "最近在关注和使用这个新项目，很对口味。", "Standard Notes", "   ", "A standard notes app with an un-standard focus on longevity, portability, and privacy.", " 看一眼，就爱上你这博客的风格啦 赞一记！三级目录展开比 OneNote 那种更直接，适合阅读，赶紧想想办法丰富下内容，或者开放用户 UGC 。", "强迫症都是借口", " \r", "反正就是看着不顺眼,你懂我的意思.", " 用过几次,基本上都是用不了一天就会开始丢笔记,然后就弃用了", " 那个...   刚转行前端 还没入门呢...  自己快速丰富内容是不太可能啦..   \r", "过年还得找前端实习去 最近估计没空完善这个博客啦..    \r", "我也正愁内容呢. 非常感谢你的 UGC 建议哈.", "markdown 编辑器 （ mweb ）+ 同步云 （坚果云），定期移动硬盘备份", "wifi 你忘记封门了！\r", "被爆头的 jager 留", " if youdaoNote don't have  the two drawbacks that it is too closed to transfer the note to other place such as evernote and there are ads on the left bottom of its software,i will use it as my main force of noting my knowledge.", " \r", "From Google Translation\r", "NetEase is always free, but advertising and some restrictions are always inseparable from their software.\r", "网易虽然总是做免费,但是广告和一些限制总是离不开他们的软件.", " \r", "又是 mac .. 老哥我是 windows.\r", "谢谢你,新年快乐", " leanote 开源版本和官网版本具体有什么差别呢？", " \r", "自己会写的很多,这样确实可以,但是不方便管理.,.", "OneNote 的数字笔记珍宝插件支持 markdown ，要收费，大概一百多块，当前版本永久有效。", "翻来倒去我还是觉得 Evernote 好， Mac 有第三方客户端😂😂而且现在才懂印象笔记的设计思想。。。", "我用了一段时间 OneNote 之后，实在是受不了他那个该死的同步问题了。同步慢不说，动不动就要告诉我有损坏的分区。而且还不原生支持 markdown 。看了楼主的帖子之后直接转为知笔记了，顺带说一句， OneDrive 也转到坚果云了。\r", "\r", "准备先用完试用期，然后再转 VIP 。期间看看还有什么更好的解决方案。虽然为知笔记的浏览器截屏插件还有些问题，不过总体的体验是要比微软（硬不起来）好多了。", " \r", "设计思想? 说出来听听? :)滑稽\r", "\r", "\r", " \r", "你可以选择印象免费的用来剪辑,大多都支持,做个简单分类就好.  \r", "然后用 Markdown 写其他的.  \r", "我不打算用为知,一是不支持预览,而是不是很喜欢他的文件夹机制.反正 GitHub 空间无限,写完直接同步到我 GitHubPages 上去.", " 🤓i'm chinese,only i want to practice my English,hha.And i think you're right", " 开源版我自己搭建过，第一是容易出 bug ，经常性页面渲染不出来，出现错误提示代码在 html 上，第二开源版不能分享外链笔记给别人，还有一点是开源版没有绑定域名的功能，虽说这个可以用 nginx 实现，但是最坑的是他的博客地址是 xx.xx.xx.xx/blogname/而博文是 xx.xx.xx.xx/post/blogname/articlename,地址不一样，这就很坑了，导致用 nginx 做隐性跳转都变得不方便起来，因为地址格式不一样，并且博客是没有绝对路径给你去找的，都是靠 url 路由给你呈现，所以只能自己修改代码", " #33 \r", "你是说为知笔记不能边写边预览吗？其实是可以的，只要使用 Wiz.Editor.md 这个插件就可以了。可以在为知笔记的插件中心下载安装。 ", "\r", "另外我是非常喜欢文件夹机制的……不过为知笔记好像也支持 Tag ，我也没去试过。\r", "映像笔记的话，如果我实在是受不了为知笔记的这个截屏了，那就去用用吧，谢谢你的建议。", "话说 Google Keep 不就很轻便可靠吗？", "试遍所有主流笔记服务之后欢乐自带的 pages"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>机器学习的算法, 基本就那几大类, 都是根据各种教授研究员们的论文出来的,  各种库也有了, 我们非科研人员能做的就是利用现有的深度学习 /机器学习的库给的 API, 拿一批种子数据训练一下, 然后拿另一批数据验证, 调一下参数. 然后呢? 普通程序员 /架构师在这方面的价值在哪里?</p>\n<p>还请给专家指点.</p>\n</div></div>"], "reply": "47", "tittle": "机器学习现在很火, 但有个疑问: 这跟普通程序员有多大关系? 或者说我们的价值在哪里", "comment": ["你有听说一种职业 叫做 调参狗", "举个例子，几个月不写 c++，你会觉得自己什么都懂了，语法上没有什么需要继续学的。但是一旦回到天天写 c++的日子，就会时不时的有新收获，发现要学的还很多，这东西很难\r", "\r", "机器学习呢，现在还是很幼稚的阶段，理论欠缺甚多，远未成熟。实际做事也是，摸索着前进。", "这跟普通程序员没多大关系，但是培训班是绝对不会讲这些东西的，就算是调参要么靠直觉要么靠数学两个都不会你能干嘛\r", "一个训练程序多少个参数呢 都是阿尔法北塔伽马的\r", "这是核心竞争力\r", "对了 调参你以为很简单么？训练数据放多少合适？迭代次数多少合适？多了会不会过拟合？\r", "\r", "当然了，迫于经济压力，现在的机器学习算法都给竞价排名让步了", "调参方法都是商业秘密\r", "model 都差不多 看谁调参厉害", "机器学习是一个工具，在不同的场景需要搭建大量的 pipeline 才能使用。而大量现成的库和模型让一般程序员也能利用机器学习的成果。\r", "其次机器学习，数据远比模型重要，你其实并不需要一个 ML 博士，也有可能做得更好。即使你做不到最优的模型，一个最简单的概率模型也能带来 80%的提升。\r", "最后，机器学习不是魔法，它无法噗地一下就解决你的问题，启发式算法并不可耻。详见 rules of ml 我觉得写得很好。", "什么火做什么，乘机捞一笔走了，跟着资本走才有钱赚，只要不忘了技术的本质就好，或者能下定决心跳槽", "人的作用在于，思想创作。", " 深度神经网络理论早已提出，后来的 GPU 计算能力也证明其可行。现在各种接近梯度消失，训练过拟合的方法不断出现。图像的机器分离效果已经超过人类，再觉得不成熟就是保守了。", "广告推荐啊，滴滴打车最短路径选择啊。我就想的到这些东西了。\r", "\r", "还有比如知乎你一点进去很多乱七八糟的你不感兴趣，以后会有更好的 feed 流推荐？", "首先反驳“机器学习的算法就这么几种”这一观点。少年你得去看看 Graphical Models ，针对每一个实际问题要先建概率图模型，这一步就得兼顾可计算性和对问题的刻画能力。然后你找一种分布式算法去算吧， Parameter Servers 在向你招手。可以说每一个不同的数学模型建出来的 Graphical Model 就是一个不同算法，要是不同意，你就得承认 HMM 和 Logistic Regression 是同一种算法（都可以由 Graphical Model 刻画）。\r", "\r", "要能精确通过数学语言刻画一个实际问题，这就是功力。\r", "\r", "如果你不想用 Graphical Model 而投降“黑箱”算法——深度（神经网络）学习。呵呵，你真以为神经网络是完全黑箱吗？你明白 CNN 是针对数据的什么特性在工作吗？（ local receptive field + 平移不变性）应用到具体的问题上就更复杂了，比如两分类，我如果保证正例标注只会漏标不会错标，你如何修改标准的 loss function 以提升在这个具体问题上的性能？\r", "\r", "神经网络现在有很多零件，包括结构上比如 CNN, LSTM, Auto-Encoders ，启发式约束比如 L1/L2 正则化，各种 Sparsity Constraint ，训练方法比如 Nesterov Momumtum （一阶方法）， L-BFGS （二阶方法）。网络结构尚且不说，其他每一个超参都会影响到最终训练出来的模型。如何训练神经网络是一种艺术而非技术。", "接上面没说完的话。楼主问普通程序员的价值在哪里？那我可以明确说，价值就在调参。每一个公司、每一个不同应用，都是要调参的，不可能让学术界的人在这上面浪费大量时间（他们还要研究新的结构、新的模型呢）。\r", "\r", "而调参需要很多知识，否则你只能暴力调参，吃力不讨好。所以现在的“普通程序员”是没有调参的能力的。至于怎么办？我不知道。如何培养“普通程序员的调参能力”，这需要工业界去摸索。", "干什么都脱离不了业务", "你不知道做什么，那对你来说就没价值。", "这个领域太高深，普通人能连砖都没得搬", "比如把静态分析加上机器学习，可以研究出写多少代码后就会出现大 BUG ……", "还是那句话，你懂得越少，越是觉得什么都知道。你懂得越多，越发现这简直就是伪科学。\r", "举个例子， SGD 被用了 10 几年，这东西真有什么理论基础吗？要说 paper ，早在 1950s 就有了。可是如果你拿它和 GD 、 BFGS 之流相比，你根本说不出来这东西为什么会 work ，你连优化的目标函数是什么都不一定能搞清楚。", "你要是身在此行，必定需要经常读 paper ，关注行业动态。每年那么多大会，那么多 paper 发出来，总有几篇会启发到你，需要你去尝试。这时候你需要去准备 data ，去写 code ， 去尝试你的想法。在别人那工作的好好的东西，在你这未必就有效。可能是他在撒谎，也可能是你工作做的不细致。总之，你不能坐等着，等着别人把这些都在 tensorflow 上面实现了，等着别人把一切都准备好了你只管输入几个参数点下 run 。那你就等着吧，等个 3-5 年肯定会有的。", " 我觉得随机梯度下降优化的是整体目标函数的期望，随机变量是 mini-batch 。收敛性可能不满足，但是大体思想是没错的。至于收敛性…… 有多少数学方法的收敛性在实际计算机应用的时候是仔细考量过的？差不多收敛就行了。\r", "\r", "看着像江湖骗子，和治疗癌症一样，整天都有所为新的突破，都在忽悠，\r", "\r", "不过治疗癌症能骗钱，看来机器学习也能骗钱，", "到最后就是建模优化，基本都是码农的活。\r", " \r", "寻路算法跟深度学习关系不大。", " 不要坐井底之蛙，举个看得见的技术：人脸识别， ", "我 10 年前看过人脸识别，没任何难度，有个机构采集 30000 多个样本，共享出来，这个很牛，结果全世界的阿猫阿狗带会人脸识别，没有什么实际产品，\r", "\r", "我想说人工学习的实际用途， 家里一个安全摄像头，能自动学习认识家庭成员，有陌生人时报警，\r", "\r", "这是一个非常实际的需求，现在没有一个产品，所有家庭智能产品都在偷窥你隐私，把你的数据偷偷上传，", "  你人脸识别牛，就搞个认识陌生人的摄像头，自动学习的", " 假如 batchsize 等于 1 呢？", " 我还是认为从原理上，它是符合那个期望的期望的式子的。只不过实践中，我觉得 batchsize 为 1 会导致很严重的收敛问题罢了。", " 不是。它和收敛性没有关系", " face++的在线 demo 你可以试一试。人脸识别：识别出图片中的人脸（不在训练集中的）标记出特征点，年龄等数据。你说的案例属于人脸检测，现在的应用有： iOS 的相册， Google 照片， Lightroom 。", "这么说吧，这一块科学家、研究员相当于设计师，负责想 idea ，出蓝图；程序员相当于搬砖的民工，负责把蓝图盖成大楼。", "Lz 想太多了 程序员在哪都没实际价值啊 (^0^)", " 你根本没明白，是家庭安全产品，陌生人登门时马上报警，非常急需的一个安全产品", " 广告推荐国内真没有用算法的。。都是竞价排名。。一个推荐比一个垃圾 满地都是页游广告\r", "估计最基本的关联规则都没人上", " PRML 里应该有一句，机器学习就两种算法，输出离散的叫分类，连续的叫回归。。\r", "所以某种意义上真没错。。", "我浅薄的理解，机器学习大部分还是基于统计理论，读研的时候学过，后来觉得很失望，因为并没有创新，只是计算能力和数据量的提升。现在我很怀疑自动驾驶，因为统计总有个置信度，即使可以达到 n 个 9 ，小概率事件还是有可能发生，造成灾难。", "举个例子吧， google 数据中心的能耗控制：\r", "\r", " 你说急需就急需啦，做出来有几个人会买？ 报警给谁，给你自己让你回家看还是报警给警察？ 这种产品和国外的房屋警报系统有什么区别？  在国内这个产品能有什么市场", "国内盗贼还少？这摄像头放家里，家里有陌生人，就手机发消息，这东西绝对是重新定义安全监控，", "大概程序按照原理分 2 类：\r", "\r", "I. 基于规则的（语言解释器，编译器，支付，查询，计算平台等）\r", "II. 基于 AI 算法的（语音输入，手写识别，阿法购）\r", "\r", "\r", "大部分系统都是 I 类（你不希望你按规则写的代码，被不同的编译器读出不同的意思），大部分程序员从事的也都是 I 类。即使 II 类项目，也要有大量的 I 类程序作为接口。", "机器学习套路比较深，不是李航那本蓝皮书就能概括的，起码得看懂 PRML 吧。\r", "普通做 I 类的也别想掺和了，\r", "做好 I 类， II 类的项目也需要 I 类的接口。\r", "\r", "作出稳定的 II 类系统很吃功夫的。 I 类用好就很不错的，用不着羡慕 II 类。", " 按照这个说法，人类对于环境也不过是个反馈系统，输出的是离散（现实世界不存在无限连续值）值而已。\r", " 从某种意义上人类的只能也不过是从观察到的数据中学习出来的。人类的推理本质也可以被贝叶斯公式概括。", "我理解一个是 rule based, 一个是 data driven ，但都是工具；前一个需要稳定兼容，后一个需要不断学习提升，就像一个人的身体+脑子", " 卧槽，说到心坎了。有好几篇 paper 的算法我怎么搞也弄不出来，后来都怀疑到智商问题了。还好我朋友提醒我有些 paper 有坑", " 自动驾驶的永远不是技术问题，是法律问题，没有立法搞清楚机器人驾车把人撞了算谁的，谁敢上无人驾驶\r", "都以为是 B 公司用真人做 test case 啊", "学起来需要姿势水平实在太高，入门的书都一大堆数学公式。", "机器学习是需要大量离线和在线数据的。大部分搬砖的，就是把数据从一个地方搬运到另外一个地方。然后让这些数据更加遍历于在线和离线的机器决策。这就是一个搬砖的觉悟。", " 其实我觉得神经网络入门涉及的数学不算很深，就目前来看就是普通的工科涉及的那些数学书而已，不过要在机器学习这一块有大的斩获的话数学应该是越精越好吧，早知现在会做码农的话当年专业就选数学了", "我在机器学习研究生马上毕业了，说说法国的现状吧。现在做机器学习研究有两批人，一批是统计出身的，一批是计算机搞人工智能出身的，论出文章的数量和 citation 数量，统计出身是碾压计算机出身的。研究方向的话，我的老师都在 clustring 和神经网络。机器学习最后都转化为了 optimization 问题。本科学校时的大 boss 是 optimization 大牛，现在已成法国 svm 研究方向的领军人物。现在学过了机器学习之后，觉得这个学科对计算机出身的人并没有什么先天优势（我是计算机出身），比如物理出身的搞矩阵，做模型比计算机的有先天优势，现在机器学习语言 Python 和 R 学习曲线很友好，其他出身的很容易赶上来，而 R 语言对于物理出身的来说简直就是无缝衔接（语法很像 matlab ）。对传统程序员的话，要补的东西太多了，矩阵，概率，统计，而每个机器学习模型后都是数学公式来定义的，补起来需要更长的时间。", " \r", "说到统计出身，我突然想起来王小波当年就是教统计学的，还能自己写程序"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题，这是一个我和我身边小伙伴的日经问题（在校学生）。各位 V 友怎么看？</p>\n<p>限定条件是</p>\n<ol>\n<li>打算在 IT 行业工作</li>\n<li>不进国企，不做公务员</li>\n</ol>\n<p>感觉现在好多搞机器学习这方面的公司，都直接要硕士了…</p>\n</div></div>"], "reply": "55", "tittle": "打算在 IT 行业工作，研究生值得上吗？", "comment": ["你这里的最后一句话，不是给你答案了吗", " 想要一些更加综合和不同的看法。", "搞机器学习可以考虑读，那些有门槛的可以考虑,什么视觉，存储,数据库。普通开发好像价值很小", "要看漂不漂亮咯，和行业没关系", "搞 CV PR ML 相关的请直接 PhD\r", "\r", "想去硅谷的赶紧出锅\r", "\r", "想进 BAT 写代码，本科毕业足够了", "不太了解你想具体从事的具体的开发的行业，你可以去拉勾之类的互联网招聘网站看看，看看人家到底要求什么．\r", "\r", "据我所知一般的ｉｔ的行业主要是看能不能干活，活能干成什么样，对于学历的要求其实都可以适当放宽．\r", "如果有内推的话基本可以无视这个要求，当然了，能力必须也得到位啊．", "有没有本科阶段就接触 ML 之类的呢？或者考虑英国硕士 一年制硕士 时间成本更低一些(可以考虑全奖 半奖去念", "如果做 IT 工程方面的，不建议读，如果做机器学习方面的，可以考虑读，如果要精最好再去读个博，不开玩笑。", "同意 8 楼", "同意八楼。", "楼主想清楚是做 data science 还是 机器学习，这两个东西天差地别。\r", "data science 里边用得到机器学习相关的内容可能也就本科生一门大课不到的量了，去北美读个 1-1.5 年的硕士足矣。", "你们这些码农啊,too young,用到编程了就是 IT.\r", "\r", "目前所谓的机器学习,不过就是基于统计进行的估计,归根到底是数学系的人搞的.coding 只是必要的工具而已.\r", "所以要不要深造是看你数学功底行不行.和 IT 有毛关系呢", "现在硕士比本科生还要多，没个硕士都不好意思应聘了。建议还是读一个。", "我觉得挺好啊，有多少孩子能不要父母的安排的？还有人可能会说，小伙子终于掉坑里了。。。。", "如果目标不是研究性质的工作的话，我的想法是大学毕业后，做几年开发，然后再去读个 MBA 之类研究生的。", "之前有个研究生学长面人工智能，对方 boss 亲自上阵，相谈甚欢，最后告诉学长欢迎他博士毕业后再来面试。。", "搞人工智能不都要求博士了吗...", "写代码的，本科可能确实足够了。你要搞现在听上去比较火的人工智能、机器学习什么的，确实要个博士比价好。搞数据相关的，可能要求略低一点，但是统计、数学方面会有要求。", "看你 是干嘛了。\r", "\r", "大专以上就可以写代码了\r", "如果要 搞算法， 至少研究生。", "  是的。。我就搞了个 PHD ， 现在在公司的 “算法部门\" (Research Team) 里搞算法。。大数据， 机器学习。", " 说的好", "搞 IT 还是看实力，刚刚在 twitter 看到一个人的推，“在公司里看到同事用 nano 写代码，就问他，你怎么用这个啊，人家说， nano 是我搞出来的”。 最后这些大火的 ML 什么的，其实对数学的要求比较高。主要是统计，概率论要厉害，你不知道现在调参就如老中医看病了。", "程序员的趋势是越来越偏向于专业化", "基础好有意往深了搞就读，我发现自己脑子不行，估计就是码农的命，读研究生时有点后悔~", "肯定你值得上这还用问。", "内推也要看能力的吧。。。", "上♂了个研究生？(滑稽", "机器学习人工智能什么的，往深了需要的是数学博士，而不是计算机硕士。", "确定你要搞最后一句话那个的话，读\r", "不上研究生很难有机会或者主动性去发论文，参加比赛\r", "等你有几个项目，几篇水文，几个比赛，拿几个 offer 轻松（身边有实例", "我说一句话，可以不相信，可以鄙视我，你们可以骂我……\r", "\r", "不过楼上任何说 不值得 的人，要么是博士，要么不在行业内\r", "\r", "完毕", "人的一生，固然要自我奋斗，但也... 20 年后需要什么，谁也说不准。万一硕士成标配了呢", "家庭条件允许，个上人能力足够，上研究生肯定不亏", "大部分情况下 肯定是学历越高越好", "研究生请至少考虑 211 ，不然坑死。", "能读到哪种程度就读到哪种程度，学历并不是唯一，但是你要把知识学到脑子里去。", "看你以后打算进学术圈还是工业圈。前者的话，去读 phd ，后者的话，偏应用，硕士和本科差异不是很大。", "sorry ，补充一下，即便是工业圈，偏应用，无论是硕士还是本科都需要学习，都足够起步学习。\r", "我并不懂人工智能机器学习什么的，但是打算今年学一下，故在知乎上调研了一下。", "ML 推荐修一些统计类的课程，很有用的。在国内三年的时间成本也不算很高，好一点的学校老板都有资源的，跳板可能会比较高。如果想肉翻，个人建议直接去美帝读研（或者读个预科？不太懂）有几个同学在那边，有的直接读研，有的貌似转专业又读了本科。通过实习最后工作都蛮好。个人见解，仅供参考。", "本科 3 年后，读 3 年研究生，去阿里，级别 P5 ，特别优秀才 P6 。\r", "本科 3 年后，工作 3 年，去阿里，肯定 P6 。\r", "当然某些冷门技术需要在大学里深造才有机会学习，但是研究生学历根本不够看，要博士才行，最好是国外的博士。", "需要考虑到这点：工作能力和经验都可以练，学历不是你想要就能要的。", "你读完几岁？ 我 24 岁时读完 2 年半的硕士都觉得是浪费时间，你若是超过这个数字那我建议你就别读了。", "大家伙不少推荐读研的。那是不是说国内 985 211 研究生还是比较靠谱的？能天天做研究，而不是被导师拿着项目基金让你给他做项目？到底在那里的教学水不水？\r", "\r", "我也知道学历的重要性，但是在得知很多国内学校不务正业，那还不如先去工作，然后出国读研，不知道这样会不会比国内直接读研好点？", "如果你本科毕业了拿到了很好的 offer ，建议不读，否则，建议读。我现在神烦的是没读研所以毕业的时候分不够没拿到户口。现在每年续居住证的手续烦的一腿", "研究生是一个很尴尬的局面，想要 NB ，去好学校的 PHD", "你错了，搞 ML 拿着硕士只是去打杂的。起码要有个博士，最好是名校", "cmu 级别的学校读博士吧。", "不一定赶机器学习这一波行情，拿个博士学位还可以提前布局下一波行情。", "值得，反正我现在工作两年多了，越来越后悔没去上研究生", "凡是问值不值得上的都值得上。", " 写业务代码不甘心", " 可以分享一下具体是什么感受吗？", " 这种想法是为了读书而读书", "不一定要读研究生，数学够好算法就好，机器学习一样。", "1 、看你的兴趣吧，如果你的兴趣在前端，就没啥必要去读研了，如果是机器学习的话，还是可以读一读的\r", "2 、对于机器学习之类的话，去好学校 && 好导师的地方还可以，如果不是的话，还不如在网上自学呢"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>不要紧张，请看代码：</p>\n<pre><code>void foo1(int n) {\n\tint bar = 0;\n\tfor (int i = 0; i &lt; n; i++) {\n\t\tbar++;\n\t}\n}\n</code></pre>\n<p>请问<code>foo1</code>的时间复杂度？:P</p>\n</div></div>"], "reply": "168", "tittle": "来看看这个函数的时间复杂度是多少", "comment": ["所以答案就是 O(MAX_INT)?", "楼主大发现！图灵奖非你莫属了", " 楼主题目贴错了，按照你们的说法原题的答案就不是根号 n 了\r", "所以这种常规问题并不是大家在钻牛角尖，非要不按照正常人的思路去考虑问题", " \r", "导师就是计算理论的老师，计算理论不是算这个的，不要这样黑计算理论谢谢", "\r", "\r", "放张图吧，要是有人觉得 slide 作者也是民科我也没办法。", " 这个其实也不一定哦，用定义一个数据结构不就可以解决这个问题吗？记得 K&R 里面就有写高精度数值的计算方式。简单的比喻就是像算盘一样，不够位拼一个啊。\r", "不过既然是梗那就算了。", " 高精度也要撞到 32bit 的墙上，你数组最多有 2^32 个元素，其实就是 @", " 的意思，在具体机器下讨论时间复杂度都是扯淡。时间复杂度就得在某种约定好的计算模型下来讨论。", " 代码只是对算法的描述，并不是算法本身。\r", "\r", "我贴代码来描述问题，确实有可能会造成歧义\r", "有意思的是，看前半部分评论。其实大家都知道我描述的算法是啥。重点在探讨 n 的定义，我还得费力去维基百科上复制粘贴。（好在现在大家貌似已经没有歧义了）\r", "到后半部分评论，就强行去讨论现实计算机实现的问题。而计算复杂度问题，是算法自身性质，去讨论具体计算机内部的实现细节，其实已经跑偏了。\r", "\r", "换个角度，我偏不认同“正常人”的思路，揪住这个问题不放，好像是我在钻牛角尖。\r", "\r", "事实上我根本不 care 别人是否接受我的观点啊，我只是心平气和（嗯，应该还算心平气和吧）地和大家来探讨而已。\r", "\r", "本来就是就事论事的讨论问题罢了，扣帽子或者冷嘲热讽没有任何意义。", " 不用这么复杂，加法是 O(1)还是 O(n)", " 简单一点，回到考研原题吧，你觉得原题的算法复杂度是多少？你贴的题目和原题不一样", " 你要是说搞计算理论的人不会去研究这种无聊的问题我认可。\r", "但是这个问题是可以划在计算理论范围内的：\r", "\r", "\r", "> 计算模型\r", "> 可计算性理论\r", "> 计算复杂性理论\r", "\r", "我们就事论事。没必要说自己的身份等等，对讨论没有帮助（有时说不定对自己还有反作用", "伪多项式时间： ", "int n = 4;\r", "n++;\r", "\r", "这复杂度是 O(N) ?", " \r", "less is more. 感谢回复！\r", "\r", "其实“伪多项式时间”这几个字就能终结此帖了，之前 @", " 也有提到。\r", "\r", "竟然整出来这么多事儿。。。囧 rz", " 重要的不是“伪多项式时间”, 而是\"则称其'时间复杂度' 为 '伪多项式时间' \"", " 那样不是可以定义一个数组来表示 2^32 位吗？当然所有的四则运算都要重新定义了，其实就是一个基于字符串存储的运算模型", "第一次发现在程序员界也有民科。", " \"竟然整出来这么多事儿\"的原因是你有所求，如果你以疑问句的形式开这个贴，相信不会\"这么多事\"。你有装逼的所求，别人也有不让你装逼的意愿，这就是矛盾冲突所在。一句话，无欲则刚", " 明白了，自己大意把问题想随便了，之前没好好说话，抱歉", " \r", "如果我偏要和你钻牛角尖，我可以说一个字符串最长也就 4G 啊（ 32 位机器上），依然是有限的（即使你把全人类可用的内存都用上，那也是有限的内存）。无论你设计什么数据结构，只要在现实中实现，那一定是有限的位数，那么它的最坏时间复杂度，就是最坏情况下需要的那个时间——那个常数。所以依然是常数时间。\r", "\r", "ok ，假设不讨论内存有限的问题，完全按照你描述的理想情况，那你其实就是在模拟一个图灵机咯！你是在佐证我的观点。\r", "事实上，讨论算法计算时间复杂度，就不应该去管实际实现上的种种限制，而单就这个模型去思考。", " \r", "显然事实就是这样，但是有限并不是因为 32bit 的限制,有限是因为现实资源有限。\r", "我是没想到这个梗居然还可以佐证你的观点。", " 你错了，我们现在一般考虑算法时间复杂度（包括你的考研题目）都是有限制的，有前提条件的。单纯这个题目而言根本涉及不到你那么多所谓的概念，用这个来装就显得幼稚了。", "楼主是正确的，贴一篇 so 回答希望能帮助各位理解\r", " 考研题是这个  while (sum < n) { sum += i++;}", " 那加法就不是 O(1)咯？", "我试着解释一下\r", "平时我们说的时间复杂度“ O(关于 n 的一个表达式)”里面 n 的定义是这样的：\r", "The size of the input to a problem is the number of bits required to write out that input.\r", "而此考研题目的精妙之处在于混淆输入数值 n 和上述输入尺寸 n 的概念。\r", "\r", "假设把题目那个函数里面的 n 都替换成 x 作为变量名。\r", "x=2^n （ n 是 x 的二进制位数）\r", "于是时间复杂度为 O(x)即 O(2^n)", " 考研题是这个 while (sum < n) { sum += i++;} 不是楼主贴的\r", "而答案是 根号 n\r", "你再想想", " \r", " 然而『伪多项式时间』（ ", " ）中的例子似乎无法说明你们的观点。\r", "\r", "在素性测试中，使用较小的整数逐个对被测试数进行试除的算法被认为是一个伪多项式时间算法。对于给定的整数 N ，使用从最小的素数 2 开始，到 N {\\displaystyle {\\sqrt {N}}} \\sqrt{N}为止的整数依次对 N 进行试除，如果均无法整除 N ，则 N 是素数，这个过程需要进行至多约 N {\\displaystyle {\\sqrt {N}}} \\sqrt{N}次整数除法，即其时间复杂度为 O ( N ) {\\displaystyle O({\\sqrt {N}})} O({\\sqrt {N}})，为 N 的多项式。令 D 为 N 的二进制表示的位数，那么 N 可以表示为以 2 为底 D 的幂，因此素性测试问题的时间复杂度用 D 表示应为 O ( 2 D / 2 ) {\\displaystyle O(2^{D/2})} O(2^{{D/2}})。因此，上述算法是一个伪多项式时间算法。\r", "\r", "在这例子中针对 N 和 D 这两个不同的定义，给出了两个不同的时间复杂度的结果。", " 他连题目都给人偷换了，还讨论什么。考研出题的人就是正常思路的人，原题就是根号 N ，因为步进不断变大。而他所谓的“简化”，简化成了 O(n)的，还各种偷换概念狡辩……", "这个不管是怎样的，你都不能说 O(n)是错的，如果 n == variable in the input", "他的时间复杂度不管怎么算，最会都会等于 O(2^m) = O(n)。", "就顶楼那个例子，我还想延伸一步\r", "```\r", "void foo(int[] arr) {\r", "  int bar = 0;\r", "  for (int i = 0; i < arr.length; i++) {\r", "    bar++;\r", "  }\r", "}\r", "```\r", "\r", "这个例子时间复杂度又是多少呢？\r", "\r", "又或者按照我在#130 楼里所指出的那样，如果我的回答是『对于给定的正整数 n ，它的时间复杂度为 O(n)』，这样子的回答是否正确呢？", " 时间复杂度特指后者用 D 表示的形式。 wiki 上语言表达有些不严谨，前者 O(根号 n)不能称为“时间复杂度”，只能叫做运行时间与 n 的关系。 wiki 后面特别强调“因此素性测试问题的时间复杂度用 D 表示应为 {\\displaystyle O(2^{D/2})} O(2^{{D/2}})”。我想也许是翻译导致这个不严谨的产生。（不过英文原文我并没有找到同样的解释）", "金币赚得好开心", " 好吧，就按你对装逼的定义，我是在装逼。那你看我这次装逼还成功不 :P\r", "\r", " @", " @", " 请看 13 楼，我订正过了。\r", "4 楼的代码是我临时直接手写的，并且 v2 不能编辑，所以非常不好意思。\r", "\r", "不过其实没有大的影响，\r", "while (sum < n) { sum += i++;}\r", "和\r", "for (int i = 0; i < n; i++) {bar++;}\r", "在时间复杂度上都是一样的。\r", "(根号 2)^n 和 2^n ，以及 10^n ，没有本质区别。\r", "\r", "（虽然在错误的理解下，一个是 O(n)，一个是 O(根号 n)）\r", "\r", "此外，@ipoh 在 124 楼的回复。\r", "计算复杂性理论只是讨论算法的，绝对不应该去考虑现实限制的（当然工程师都一定忍不住去考虑）。\r", "\r", "因为讨论的是算法的理论性质，和具体计算机无关，摘自维基：\r", "“计算复杂性理论通过引入数学计算模型来研究这些问题以及定量计算解决问题所需的资源，\r", "....计算复杂性理论的一个作用就是确定一个能或不能被计算机求解的问题的所具有的实际限制。”\r", "喏，不能本末倒置啊，讨论计算复杂性时，是不需要考虑限制的。\r", "\r", "并且就算有实际限制，也和是 O(n)还是 O(2^n)无关的啊。\r", "这是不小心引出的另一个话题，限制 32bit 的话，那就都变成 O(1)了。\r", "\r", "\r", " 所以，为什么叫作“伪”多项式时间？\r", "里面不是有这句话么：\r", "“因此素性测试问题的时间复杂度用 D 表示应为 O ( 2 D / 2 ) {\\displaystyle O(2^{D/2})} O(2^{{D/2}})”\r", "\r", "\r", " \r", " \r", "\r", "\r", "“ In computer science, the time complexity of an algorithm quantifies the amount of time taken by an algorithm to run as a function of the length of the string representing the input.”\r", "\r", "看看我有木有偷换概念，以及 n 应该代表什么。", "就算在顶级的 TCS 期刊， TALG 和 TOCS 上，都会简易的指出该算法的时间复杂度是 O(n)，这决定于 n 是怎么定义的。你可以考到大多数 NPC 问题的伪多项式时间算法的 big O 都是这么标注的，如背包， subset sum partition 。当然你说 O(2^n)也是绝对正确，但一切的前提是你必须给出一个严格的定义， O(2^n)这个结论本身就是基于很多严谨的假设基础上才得出的，你不能随便一指就说是 O(2^n)。", " 令 D 为 N 的二进制表示的位数, 所以你的 n 代表什么", " 你依然还是不明白什么是 n ，什么是 the length of the string representing the input ，这些都基于你怎么定义的。在没有明确定义 n 的时候， O(2^n) has nothing to do with the given program.", "你如果用你这一套理论，你会对大量算法顶会文章的复杂度计算产生疑惑。", "时间复杂度为 O （ n ）", " 你说的这些概念在算法课上老师都会提到，但是最后老师会说我们一般考虑\"加法的时间复杂度是 O(1)\"\r", "在这个前提之下才会有这些题目。", " 还是平常我们对概念理解不够清楚的，平常遇到的大部分是多项式时间的，按那种方式定义 n 恰好结论一致。我希望你能自己看一下我上面贴的那篇 so\r", "\r", "\r", "When working with algorithms that process graphs, lists, trees, etc., this definition more or less agrees with the conventional definition. For example, suppose you have a sorting algorithm that sorts arrays of 32-bit integers. If you use something like selection sort to do this, the runtime, as a function of the number of input elements in the array, will be O(n2). But how does n, the number of elements in the input array, correspond to the the number of bits of input? As mentioned earlier, the number of bits of input will be x = 32n. Therefore, if we express the runtime of the algorithm in terms of x rather than n, we get that the runtime is O(x2), and so the algorithm runs in polynomial time.", "说到底最终还是歧义的问题，不是思维的问题。", " 他这道题目还是很直白的，普通人都不会认为有歧义", " @", " 首先对于“民间科学家”的不当言论表示歉意。但是我仍然有话反驳。\r", "\r", "先列出结论：我认为就你们举的这个例子，无论是 O(n) 还是 O(n log2 n) 都是逻辑自洽的，其中 O(n log2 n) 的论述见我之前的回复。当令 k = log2(n)，可得 O(2^k * k)。然而在这里如果我想要把 k 代换成 n 给出 O(2^n * n) 的复杂度就是不恰当的，因为 n 在上下文是有明确含义的，不能把一个符号随意变换含义。\r", "\r", "所以对于 O(2^n) 的这个结论，如果按照 n 表示 k 的角度去看，就少了一个 *k 的因子；如果不是这样，那就显然更加离谱了。\r", "- - - -\r", "\r", " 对于你说的复杂度分析不应该考虑工程问题，这显然不合适。我们目前的算法都是为了电子计算机设计的，因此所有算法分析和时间复杂度估计都是在电子计算机的前提下成立的；这已经考虑了工程问题。\r", "\r", " 你说“限制 32bit 的话，那就都变成 O(1)了”，只是大 O 。就算是考虑 32 位整数，在这个例子里面，当限定 n 为 32 位整数， O(15 n) （见我先前的回复）依旧是比 O(15 * 2^32) 更紧的界。同时，算法的复杂度不会小于 Ω(n)。因此 Ω(n) 和 O(15 n) 卡住了这个算法在 32 位整数下的界，因此 Θ(n) 是紧界。\r", "\r", "当然如果按照教科书的定义，一切 n < ∞ 的论述都是没有意义的。可是啊，读书不能死扣概念，要领会它的精神。复杂度分析是为了在没有测试算法的前提下估计它的运行时间，当我们有了 32 位整数的大前提下，考虑更细致的界依旧是有意义的，因为我们可以通过计算来估计两个不同算法的优劣。\r", "- - - -\r", "\r", " @", " 另外还有第二点反驳。你们可能不赞同我说的，“可以定义 i++, sum++, i<n 三个操作为常数时间”。然而你们是出于电子计算机的前提才这么反驳我的。我们谁也不知道将来的量子计算机，乃至什么其他种类的计算机究竟能够有多快，因此我假设这三个操作是 O(1) 是公理，完全不违背理论性。\r", "\r", "如果接受这三个假设，那么你们的算法复杂度是 O(n) 是没有错误的结论。当然如果不接受，认为这三个操作的复杂度是 O(log2 n)，那么推出来的结论就是 O(n log2 n)。\r", "\r", "当我们考虑 32 位定长整数的电子计算机的时候，也可以认为上述三个操作为 O(1)，得出 O(n) 的结论。", " 为什么我要用 1111 来表示 16 ，而不能用 16 个 1 来表示？ 讨论到特定的输入形式了，那是需要先定义清楚条件的。", "哪个指令集的整型加减不是 O(1)？好好的一个 C 程序，怎么就扯到计算理论和图灵机上去了？", "最后再回复一条，就不一一 @了\r", "\r", "其实退一步讲，这并不是一个多么值得探究的问题。\r", "本质上来说，只是消歧义罢了，毕竟大家都知道程序运行起来要多长时间（怪我把函数的参数起名为 n ），\r", "即便这样，是 O(n)还是 O(2^n)，也取决于看待输入的方式。一般定义大 O 表示法的 n 为输入的 length ，\r", "但是大家一般都默认单参数时，把输入的参数的值作为 n ，虽然它和输入的 length 相差了一个指数级。\r", "\r", "平时交流、答题时，还算遵守大家的习惯约定就好，具体应该是什么有时反而不重要了。\r", "不然每次讨论几何问题时都要带上 5 条公理，讨论集合问题时都要带上 ZFC 公理，岂不是很累？\r", "\r", "和大家撕逼撕得很开心，哈哈~\r", "\r", "预祝各位新年快乐！", " 你的错误在于你已经在题目中指定 n 是什么了，还在重用这个符号表示另一个概念，并且不定义 n 是什么。不定义符号摆公式是很民科的行为，就酱。", "O(N)\r", "\r", "OVER （滑稽脸）", "自作聪明，自以为是，自取其辱", "  哈哈，你是哪个学校的？ ppt 看着眼熟啊", "看不下去了， 楼主一共贴了三段代码：\r", "\r", "void foo1(int n) {\r", "\tint bar = 0;\r", "\tfor (int i = 0; i < n; i++) {\r", "\t\tbar++;\r", "\t}\r", "}\r", "\r", "void foo1(int n) { \r", "int bar = 0; \r", "for (int i = 0; i < n; i++) { \r", "bar += i++; \r", "} \r", "} \r", "\r", "void foo(int n) { \r", "int sum = 0; \r", "int i = 0; \r", "while (sum < n) { \r", "sum += i++; \r", "} \r", "} \r", "\r", "三段代码不完全等同。 我个人认为时间复杂度分别为 O(n), O(sqrt(n)),O(sqrt(n))", "当看到题主说这是考研 408 的题目我当时震惊了。\r", "考研层次的知识被尝试用计算理论去解释它是不合适的。 408 的考察范围也绝不会涉及到这些内容，不然就是命题人的失职 。就像我们看中学数学中介绍的负数不能被开方一样。这些讨论都是有默认的讨论环境的。", " 所以我对题主给出的根号 n 的复杂度答案也很疑惑。直到我看某楼贴出来的真正的题目。题主你个标题党，绝对是过度解答了这个问题！！！", "我支持 gcc 全优化编译答案是 O(0)   XD", "我暗想我和掌柜的等级还很远呢，而且我们掌柜也从不将茴香豆上账。", "默认情况是 O(n)\r", "如果 n 是常数，开了编译器优化后是 O(1)，这玩意在编译阶段就给算出来了", "这 sb 问题和下结论说 256-bit AES 加密破解复杂度只有 o(n) 有啥区别\r", "反正你喜欢定义 n=2^256 就好，反正这个数也没多大，一个宇宙也没多大呗", "考研 408 不考计算理论，楼主你这纯粹是炫深层知识没有讨论意义啊，只会误导考研的同学", "楼主钓鱼？", "体育老师任重道远", "A 站有个词叫转进如风", "懒得看那么多了。\r", "\r", "当时做到那一题，我想了一下时间复杂度肯定小于 n ，其他三个答案都大于 n ，所以我选择根号 n 。也不知道对不对。", "八股文玩死这些书生...", "以整个函数为基准复杂度当然是 O(n)"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>对面的同事刚刚在整理头发，原本他发型是那种特意往前梳的那种，这个时候手一扒拉。_(:зゝ∠)_。妈呀前面的头发那么少，然后我环顾四周。每个人的发际线都后的可怕。</p>\n<p>而且程序员这样特别严重，一个测试一个运营头发还算茂密。有些还能用发型去遮盖有些已经掩饰不了了。</p>\n<p>男的就那么容易脱发，好像程序员这种天天对着电脑的更加严重些。</p>\n<p>你们难道就没有去想过保养自己的头发吗，在帅的脸，在得体的衣服，在好的身材，一头稀疏的头发都全毁了啊啊啊啊。</p>\n</div></div>", "<div class=\"topic_content\">首先，男生谢顶脱发现象是广泛的，但好似经常对着电脑，用脑过度，精神紧张的程序员，这种情况会更加明显。 25 岁左右的小伙堪比一般 30 多的大叔。\r<br>\r<br>至于是不是我们公司特有的现象，恩，不至于，好几个都没满一年。\r<br>\r<br>主要是你们都没有预防这种事情吗？不过是不是程序员，作为男生的你们都不在意自己头发的！┑(￣Д ￣)┍。\r<br>\r<br>我现在头发茂密，但因为经常对着电脑，都担心自己会脱发。\r<br>\r<br>你们就没有什么好的保养方式吗？</div>", "<div class=\"topic_content\"><img src=\"http://ww1.sinaimg.cn/mw1024/cd11a5f2gw1fazesugo7yj207c02rmx3.jpg\" class=\"embedded_image\" border=\"0\"> \r<br>\r<br>这种就是发际线后退了。\r<br>其实光看不一定看的出来，像我们办公室同事，绝大多数都梳着往前的发型。遮住了过宽的额头。</div>"], "reply": "129", "tittle": "一个办公室的男程序员，没有一个不脱发！！！", "comment": ["感觉光头吧\r", "\r", "今天看绝命毒师发现基本上角色重要的和帅的基本上都是光头", "看标题以为是软文😄，感觉会贴生发广告呢", "最近两年发际线退后太过明显真的好丧心", "我也脱发，幸好长的比掉的快。", "我觉得还是看脸，你看吴亦凡那小寸头多霸气，你不喜欢？😂", " hhh", "你的言外之意是，贵司女生不脱发咯~", " 寸头霸气可不是看脸，头型也很重要，你要是头不圆，脸再好看寸头还是减分的。\r", "我曾经留过 2 年光头。", "本科毕业的时候乌黑浓密  研究生毕业发际线明显靠后了… 感觉主要是压力大和熬夜有关系", "公司办公家具甲醛超标么？", "知乎上摘抄：\r", "程序员是精神压力比较多的群体之一，精神压力过大时常常出现脱发增多。在精神压力的作用下，人体立毛肌收缩、头发直立，植物神经或中枢神经机能发生紊乱，毛囊毛乳头发生改变和营养不良，从而导致毛发生长功能抑制，毛发进入休止期而出现脱发。<br><br>程序员的精神压力的来源是什么？\r", "心理压力源（ 1 ）认知性目标模糊、不确定\r", "，约定的目标难以执行 ，时间紧或等待 ，难以选择或没有选择（ 2 ）情绪性恐惧、焦虑\r", "、失败、悲伤、愤怒、挫折、损失和负罪感 ，厌倦产生的动机冲突、想家 ，精神上的诱惑导致丧失信仰 ，人与人的感情\r", "躯体压力源（ 1 ）睡眠缺乏 ，营养缺乏、疲劳 、伤病\r", "如何判断自己压力过大？如果你有发现自己有如下情况，可以判断为压力过大\r", "不断地让自己接受新的工作，同时也不放弃原有的工作开始怀疑生活、事业或者工作的意义。\r", "虽然很喜欢自己的工作，但投入过多的时间时有感到很内疚。\r", "有时候会莫名其妙地心烦意乱，甚至感到透不过气来。\r", "你知道你的工作需要感情投入，但不知道怎么做到。\r", "希望对工作更有自信心。\r", "似乎没有其他时间学新的东西。\r", "在工作空闲的时候也很难放松。\r", "有时候会莫名其妙地心烦意乱，甚至感到透不过气来\r", "回到正题，如何缓解压力呢？\r", "立刻缓解法：\r", "停下手头的工作，去喝杯水或者看看窗外。\r", "戴上耳机听一会音乐。\r", "随便找个话题找你身边的人聊上几句。\r", "换个其他事情做一下，转移一下注意力。\r", "闭上眼睛，可以快速浇灭怒火。\r", "转转脖子，缓解僵硬。\r", "拥抱自己，用双臂紧紧拥抱一下自己。\r", "闻闻植物，离绿色植物 10 厘米左右，深呼吸 5 次。\r", "自我解嘲。\r", "击掌、跺脚，两三分钟即可。\r", "长期缓解法：\r", "设置一个明确的目标，努力弄清楚自己想做什么，该怎么做，越早好。尽量做自己喜欢的事，设置今后几个月或几年的目标。\r", "和谐的关系。努力在同事、合作者间寻求和谐轻松，有所回报的关系。\r", "完成工作的时间表。制定每项工作的完成时间。\r", "学会心理换档。每小时工作中抽出 5 分钟来放松自己。\r", "及时处理问题。越棘手的问题优先解决。\r", "快乐的工作。\r", "多参与户外活动或者体育活动。", " \r", "\r", "我原来也这么想，但是东方人光头大多不好看", "加班->睡觉晚->休息不好&&压力大->掉头发->头顶锃亮", "想一想一拳超人的琦玉老师 脱发能让你变强 手动滑稽", "应该不是普遍现象吧，可能我们这里压力没那么大，想头发少点都不行，如果可以半年剪一次头发就好了", "我高中就被吐槽发际线很高。。。", " 感谢。", "不知道你见没见过女生脱发...\r", "像我洗头发的时候就会掉一大把，不是几根，真的是一大把，如果有和女生合租住一起之类的就会知道...\r", "不过可能因为女生发量多，所以哪怕是掉这么多，也不太看出来", "豆瓣有个小组，好像叫我们发际线高得像清朝人来着，很多年前都想加入了，但还是死不放弃，哈哈哈，偷偷瞄了几张帖子，发现自己的发线其实还好，就是发量少，一洗澡一拖一大把，作为一个姑娘真的怕自己慢慢变成裘千仞了╮(╯▽╰)╭", "我们公司技术 100 来人，就一两个脱发", "看过两张图 一张是当程序猿时候的集体照 主人公当时脑门油亮油亮的 第二张是主人公转行卖水果后的个人照 一眼看上去人精神不说头发还真叫一个又黑又密。😳", "不是有几个知名案例么，不做 it 后，头发长回去了😂", "脱发是正常现象  如果楼主能找出不脱发的人 那倒值得好好研究\r", "关键是 头发生长的速度和质量", "自从变身程序媛，每天梳头发都掉一大把，头发厚度明显比以前少了。。幸亏头发多，但还是会担心。。。", "米诺地尔挺有用的，不过用久了效果就不明显了", "长期高强度脑力劳动和长期辐射加成。\r", "脱发效果一流 不反弹。", "程序猿一枚。虽然我断发（不是掉发）但是我头发长啊。。头发太浓密，发际线有点低，基本上看起来脸都没了 [。另外被吐槽头发越长，越长的像女孩子了", "以后只招女程序员就没有这个问题了啊", "如果如楼主说的这么严重，贵司办公室肯定有问题，建议弄点仪器测试下。\r", "我司 100 来号码农，头发有问题能明显看出来的不超过 10%。"]},
{"content": ["<div class=\"topic_content\">牢骚：创业不易啊，出产品难，推产品也难。\r<br> 进入正题：\r<br> 手机号验证产品“嗖嗖闪验” SDK 有奖内测活动（机械键盘、大额代金券、京东礼品卡等你来拿）\r<br>\r<br>一、产品介绍：\r<br>嗖嗖闪验 SDK 是一种全新的手机号码身份核验工具，提供给 APP 开发者，用来替代短信验证码，通过手机信令+密钥容器的方式对 APP 用户输入的手机号码进行真实性验证。\r<br>零骚扰：验证环节无需发送短信验证码，无需用户参与。 3 秒完成手机号码身份验证。提升 APP 端用户体验度。\r<br>安全性：安卓手机如果中短信木马后，手机上的验证码短信自动转发给黑客。\r<br>“嗖嗖闪验”采用另外一种验证技术来核验手机号码，规避了这种风险。\r<br>防刷单：手机闪呼信令+本地密钥容器双重验证机制，增加刷单成本，让羊毛党无利可图自动放弃。\r<br>低成本：短信验证码完成一次验证成本 5 分 /次。嗖嗖闪验证完成一次验证成本 1 分 /次\r<br>\r<br>二、产品主要作用：\r<br>1 、 验证手机号码真实性\r<br>2 、 替代短信验证码，节省成本、提升用户体验度\r<br>3 、 APP 防刷单、限制 APP 账号登录设备数\r<br>4 、 账户安全，可以快捷实现 APP 账户与本机设备绑定操作\r<br>三、产品适应范围：\r<br>1 、 APP 开发团队（安卓与 IOS ）\r<br>2 、 防刷单需求的 APP 厂商\r<br>3 、 需频繁发送验证码短信的 APP\r<br>4 、 希望限制用户私下进行 VIP 账户分享的 APP 厂商（爱奇艺、迅雷等）\r<br>\r<br>由于 V2EX 不能贴图\r<br><img src=\"http://ww2.sinaimg.cn/mw690/6d94a7e7gw1fay9eybi9tg20af0ijhch.gif\" class=\"embedded_image\" border=\"0\"> \r<br>\r<br>\r<br>最关键的：\r<br>一、活动报名表： <a target=\"_blank\" href=\"https://jinshuju.net/f/qZMDXX\" rel=\"nofollow\">https://jinshuju.net/f/qZMDXX</a>\r<br>二、准备了一些小礼品作为测试奖励：\r<br>    1 、嗖嗖闪验产品充值 代金券 1000 元 5 张 \r<br>    2 、樱桃（ Cherry ） MX-Board 3.0 G80-3850 机械键盘 3 个 \r<br>    3 、京东 300 元礼品卡 2 张 \r<br>    4 、很大很大的鼠标垫   10 个</div>"], "reply": "52", "tittle": "创业团队做了款手机号码真实性验证工具，有防刷单的朋友可以看过来", "comment": ["这个挺好。。但是我更想知道原理。。", " \r", "场景不同，验证逻辑不同。\r", "整个产品使用到的技术点：手机信令+手机软 U 盾+区块链", "如果我希望验证的手机号是备用机 那是不是就没办法了", "感觉好 6 的样子", " \r", "如果希望验证的手机号是备用机，会启用”语音闪呼 or 短信验证”（开发者自己决定）验证方式进行验证", "@ haoting\r", "\r", "有 sdk  或者 demo ， app 么？", "然而我们怎么可能把电话权限给应用😎", " +1", "ios 需要 10 以上吧？不然拦截不到电话号码", "\r", "\r", "活动防刷 AA\r", "活动防刷服务（ ActivityAntiRush ），针对电商、 O2O 、 P2P 、游戏、支付等行业在促销活动中遇到“羊毛党”恶意刷取优惠福利的行为，通过腾讯积累的安全大数据和防刷引擎，精准识别出“薅羊毛”的恶意行为，避免企业被刷带来的巨大经济损失。", "有些人真是 天天喊自由 现在为了某些东西 就自愿抛弃自由", "需要拨号……我", "原理应该是： vos 发起呼叫， 一接就断。\r", "\r", "这个问题在于验证手机有效性，但无法验证就是用户自身持有。。。", " \r", "嵌入 SDK\r", "目前有准备 demo ，安卓和 IOS 的。", " \r", "IOS 的权限 是拿不到的，第一次验证时会启用”语音闪呼 or 短信验证”（开发者自己决定）。\r", "安卓嘛。环境所迫，你要不给权限，安卓上的 APP 基本无法运行", " 其实是验证中心发起一次闪呼到目标手机。\r", "验证的时间极短，快到用户没有感知。", " \r", "VOS 这个词很专业，行业人士哦。\r", "不过验证逻辑和你理解的有偏差。\r", "验证中心----手机 SDK 。他们两者相互响应，验证手机号码是不是本机。", "强制本机不喜啊", " \r", "从头看到尾，算是明白了。\r", "本机：验证逻辑 A\r", "非本机：验证逻辑 B", "双卡怎么整，弹个选择窗出来？", "还是没搞明白怎么验证的。黑盒子不敢用 (纯个人意见", "\r", "感谢大家的支持。\r", "目前报名参与内测的小伙伴已经接近预期了。\r", "明天早上我会挨个邮件联系各位，将测试相关的物料发给大家。\r", "产品运用到的技术点没有什么值得保密的，有什么问题可以微信或者微博私信我。", "你这个能检查出“呼叫转移”吗？不能的话到时候就白搭。俗话说有矛就有盾。", " \r", "恩 目前手机刷单已经进化到通过”呼叫转移”来突破 语音验证码了\r", "不过 “呼叫转移”这种情况 我们的验证结果是：非本机\r", "开发者可以自行决定后续处理逻辑", " \r", "你要不给权限，安卓上的 APP 基本无法运行\r", "\r", "那么这些 APP 都应该下架\r", "如果做不到，就要迫使这些 APP 在没有这些非必要权限的情况下运行", " \r", "同样的，你们的 SDK 也是不可以要电话权限的。", " \r", "我用 appops 做过测试\r", "除了银联的云闪付以外，没有应用需要 IMEI", " 安卓有 xposed 插件可以针对每个 APP 伪装变量，比如电话号码、当前是 4G 网络还是 WIFI ， GPS 位置，机型， IMEI 等等。这些都可以检查吗？", "做的很棒，如果能经受住考验是一个很好的产品。", "Tg 的登录验证是电话闪呼。", "这点子确实不错", " iOS 也不会轻易的给电话权限和 IMEI 吧，不给难道 iOS 上就不能用了？", " \r", "iOS 压根就没有提供电话权限，更别说 IMEI 了。 iOS 很久以前连 UUID/MAC 都不能读到了。\r", "苹果甚至限制通过跨应用分享的 API 来获取手机里装了那些应用，从而保护用户隐私。\r", "\r", "按照这个理由，它们都不应该做 iOS 版本，你说呢？", " 对啊，所以我比较好奇他们是怎么在 iOS 上实现的～", "又不验证身份 网上那些收取验证码的 基本都是正常号 可以正常接电话 发短信的", " 在 iOS 上只有直接打电话 /发短信了", " 是的可以用 xprivacy 来查", "....内测每月 10W 次。对于我们是够用了。但是不敢给你上到生产环境额", "👍粗看有黑科技的感觉，细看感觉实现上权限要求太高，用户不一定喜欢，节约的 4 分钱感觉没太大优势。", "配上我大触动精灵。。。。。刷帐号速度噌噌噌的快 。。。。。。分分钟让你用户增长 100 万。。。。。", " \r", "先测试嘛 一切 OK 再说", "这东西只能客户端用,web 不支持吧?", " 目前只适用于 IOS 和安卓的 APP", "东西不错但是显然不会允许电话权限", "感觉挺适合我们公司的产品，不过，不知道现在还来不来得及参加内测。。。", " \r", "纯语音验证码，不短信的，就是打电话的，成本八厘左右……其实比短信省钱，还能防一部分接码平台", " 叫什么名字？这年头做语音验证的貌似没几个呢～", " \r", "这玩意还用名字啊\r", "自己搭个 asterisk 5 小时内搞定，买点批发的国内话务量落地八厘一分钟\r", "你一分钟不会还搞不定语音验证码播放吧 重复两次三次都够", " 来得急的\r", "报名页 您提交下信息吧", " 提交了啊，一直没有收到回复。。。", " 机智！！！我咋就没想到呢～ 没想到现在通话比短信成本更低了。。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>曾经以为电信是大爱，直到见到了移动，奈何移动也是三心二意，又想用联通。\n网络网络，你是那解不开伤， isp 呀，你最坏！！！</p>\n<p>所以有个想法，有几个树莓派，希望网络比较快的同事可以托管，去你家蹭网。你也可以送我一个树莓派，蹭我家的 gb 宽带！</p>\n</div></div>", "<div class=\"topic_content\">谢谢各位的热心答复，很高兴认识各位网络时代的高富帅!\r<br>最终决定自己拉一条移动 100M 线路，跟 @<a target=\"_blank\" href=\"/member/molinxx\">molinxx</a> 组网。\r<br>但是密钥怎么交换呢？这是个大问题！不能肉身，所以不能交换！</div>"], "reply": "58", "tittle": "树莓派家族，求好心的朋友收养", "comment": ["是树莓派 3 不？我这有联通 100M", "具体怎么实施的，代理吗？", "我就是能托管你也不要。\r", "我搞炸过一个树莓派...", " 你的电源是水货吧？官方的电源还是不错的，电力充足，输出平稳(?)。实在不行用 IPad 的电源。", " 只要是树莓派都行吧！联通 100M ，你就是传说中的互联网时代的高富帅吧！", " 关键是出门要快，家里都很块！", "用过电信、联通、移动，现在非常想念移动，出口好的很……奈何现在只有电信，出口一塌糊涂_(:з」∠)_", " 电信还有出口？没听说过！ 去年申请了 200M 的，以为出口也能象征性的提高下，知道最后跪了。又用了移动送的 20M ，我的天，幸福感爆棚。关键是好多业务转电信了，又不好取消。难道非的每个人都用两个运营商的服务？！！！总结下来就是只有使用不同 ISP 的朋友组成一个更大的家庭，价格能能降下来，服务质量也能提升上去！", "好期待有第三方运营商，兼容 3 方网络，各取所需。", " 3 有 wifi ，我的环境用 wifi 方便", "可以考虑大家都装 n2n 互相搞路由转发", "我这电信百兆对等", " 又一个网路时代高复帅！", " 不会有这种运营商的！对运营商伤害太大！", " n2n 不好，托管一定是基于完全信任的，有风险的！ 而且用 n2n  不好吧！", " 对我而言， 10M 就足够了，只要够稳定，只要上下行对等，只要能指哪去哪就可以！", "在路由器上做比较好，我家里的路由器一直开着 vpn", "北美菲尼克斯 google fiber 和 cox 的 G 口对等，要托管吗？其实我也有不少闲置的树莓派，只是比较懒，懒得架设了", "gb 宽带是啥", " 中国电信推出的 1GB 家用宽带，还没有咨询办理，其实也不会有什么用。", " 我家里有一个做热点，只是为了方便使用 Chromecast 的，确实方便！", " 土豪，你要被穷人盯上了，哈哈！ 但是，在国内的关键问题是出口，所以只能选移动或者联通。但是你可做海外出口，太美了，都不需要 ramnode 了！", " 各种美剧，太 happen 了吧！", " 可以你可树莓派可以跑起来，然后我们建立一个 tinc 连接吗? 这宽带，太富有了，流口水了！", "广东电信 20m >.<", "我装了 100M 电信， 50 兆移动 ¬_¬", " 你觉得电信会给你多少兆上传， 20Mbps 差不多了", " 连我出口还是一样要先出来啊", " 够幸福！", " 不要提上传，电信上传和出口都是硬伤！", " 所以要先找一个快的移动，我先到移动，再到你家？", " 广东呀，就是魔兽传说中传送门的地方吗？好幸福！", "唉，只要找了靠谱 ss 奸商，电信出国也没什么大问题", " 没用过ｓｓ，不清楚", " 一边可以看美剧，一边可以看宫斗剧，好神奇的感觉！", "话说我们学校挂 ss 上传有时候都能到 40 多 mbps", "你可以自己搭啊，找人一起建个树莓派机房，移动联通电信各拉一条宽带", "我这电信移动双 ISP ，电信连 bandwagon 比移动快。。。。", "树莓派处理能力不高吧，能跑满百兆都是问题啊。不如买 WRT1200AC 然后刷 OpenWrt", " 你见了树莓派就会喜欢上她的，如果你用了 Debian ，你就开始嫌弃 OpenWrt 了!", "Debian... OpenWRT...两个虽然都是基于 Linux ，但面向的领域各不相同。。。\r", " 理解，但是更喜欢自由自在的宇宙操作系统 Debian!", " \r", "\r", "啊,对的.我也是这样,一开始玩 openwrt,玩过一次 debian 之后发现 openwrt 的配置文件改起来太头痛,然后就直接上 x86 的 debian 做网关.", " 我一月四号才回美国，这段时间先研究下", " 用通用操作系统的话，防火墙的配置是一门艺术！", " 不着急，现在的网络还能将就，除了偶尔抽风，基本不影响！", "移动不是只有内网 IP 吗？这怎么破？", " 电信不是有公网ＩＰ，只要有一个主机有公网ＩＰ就可以了？我猜的", "楼主想的太美了, 靠不同的运行商线路组个自己的 bgp 网路+策略路由都很简单, 但是有个致命的问题, 运营商的上行带宽小得可怜, 任凭你都是百兆都没用.", " 你这网多少万一年", " 如果我把树莓派放在移动宽带下，怎么远程连接？家里的移动上下行对等，确实很爽~", "有钱就用 CN2 呗", "看着你们口水直流", " 420 一年 送 4 个月", " 移动、联通应该没有上行限制吧？现在电信的网龄回馈计划通常也会有 10M 上行带宽。架设有方案折损了 66%的带宽，有效带宽依然有 3M ＋，这对于日常工作，比如 github 来说，已经是不错了，总比２０ｋ／ｓ要好吧！", " 没有外网地址也分很多种情况，但是这些通常只在初始化网络的时候有困难，连接建立后就没有问题了，这一个作为红娘的主机成本是很低的，我猜的。\r", "\r", "参考：　 ", " ", " 　这是都是最坏的情况，不要忘记还有ｕｐｎｐ，ｐｏｒｔ　ｍａｐ，　ｄｍｚ，　ｕｄｐ　ｈｏｌｅ。\r", "\r", "最坏的情况下，阿里(推荐码 p9d04t)也是不错的，可惜阿里已经没有最低配了。\r", "\r", "ramnode 也不错( ", "), 最低配也棒棒的！", " CN2 好像不是给百姓用的！", "其实一直有个在国内建立 BATMAN 网络的想法，但是细细想来投入高，风险大，收益不明确，就一直晾在那里了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><strong>黑马培训现在越来越差,上市入股者 500 万起,现在更加看重 RMB 了</strong></p>\n<p>有个同事的弟弟(软件工程学网络的)毕业一年半都没混好,\n想去黑马培训,现在传智上市了,很多规则都改了.\n好的老师跑了不少,他们的论坛贴吧全是水军,喷了不好的立马就封号</p>\n<pre><code>企业做大了,名字响亮了,就开始变质了?\n</code></pre>\n<p>身边倒是有去黑马培训 android 出来就是 12K,当然人家也很努力这是肯定的<br>\n纠结....<br>\n最后....<br>\n还有必要建议他去培训?还是自学三个月!!!!</p>\n</div></div>"], "reply": "6", "tittle": "android /JavaEE 黑马培训如何抉择?", "comment": ["培训和自学取决于基础。 0 基础最好还是培训入门一下。有一定开发经验的就可以自学？", "正在某学堂 android 😝", "如果是自学的话，三个月不够的(T⌓T)。有些坑自已踩可能要卡个好几天。培训班是带你踩坑然后把你拉出来。", "我昨天创建了一个主题“你在学习 /工作中，真正敲代码的时间有多少？”你可以关注一下。", "培训班大部分是那种全天候的灌输吧？", "自律，是自学的前提。", "ありがとう", "谢谢大家花费宝贵时间给的建议"]},
{"content": ["<div class=\"topic_content\">现在主要用的新闻阅读工具是网易新闻+界面+微博，界面新闻不够及时，而且不够全，微博不够系统，所以还是用网易新闻居多。<br><br>但是最近这一年来，网易新闻越来越 low 了，俨然已经看齐今日头条，广告也越来越多，越来越用不下去了。<br><br><br>求一个靠谱的新闻阅读工具，要求广告少，信息快且全，内容不要跟网易一样 low ， V 友们有推荐么？</div>"], "reply": "5", "tittle": "求一个靠谱的新闻阅读工具，广告少信息快的", "comment": ["国务院和人民日报还不错", "RSS 自己订阅", " 听名字就是党媒", "flipboard ，或者 rss 自己订阅新闻？", "即刻"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>那种单页程序，介绍 app 和业务，可以 saas ，绑定域名也行。\n我记得之前有看到过这种产品，忘了</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "求一个产品项目介绍页", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>使用 <a href=\"https://http2.akamai.com/demo\" rel=\"nofollow\">https://http2.akamai.com/demo</a> 测试的.</p>\n<p>微信</p>\n<p>❌ iOS 10 不支持<br>\n✔️ Android 6/5 支持</p>\n<p>钉钉</p>\n<p>❌ iOS 10 不支持<br>\n❌ Android 6/5 不支持</p>\n<p>在 Android 上微信使用的 TBS X5 相对于钉钉对新特性的支持更好. 在<a href=\"https://bbs.aliyun.com/read/293535.html\" rel=\"nofollow\">阿里的开发者论坛上有人遇到了一些兼容性问题</a>, 有人说找相应的同学给解答, 也没见帖子中明说.</p>\n<p>比较奇怪为何 iOS 版本均不支持 HTTP/2 (iOS 10 Safari 支持). 在 <a href=\"http://stackoverflow.com/questions/39967237/does-wkwebview-support-http-2-protocol\" rel=\"nofollow\">这里</a> 看到 WKWebView 是支持 HTTP/2 的. 苹果也建议 iOS 8 以上不再用 UIWebView.</p>\n</div></div>"], "reply": "1", "tittle": "微信与钉钉对 HTTP/2 的支持情况", "comment": ["奇怪的是，我的 Safari on iOS 10 打开提示不支持。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>在 Windows 上想写一个基于 Python 和 GTK 的 UI 程序，但是ＧＴＫ对Ｗｉｎｄｏｗｓ支持好像没有维护？不知道大家有没有手动尝试成功的？</p>\n<p>这个好像是个不错的参考：　 <a href=\"https://github.com/wingtk/gtk-win32\" rel=\"nofollow\">https://github.com/wingtk/gtk-win32</a></p>\n</div></div>"], "reply": "15", "tittle": "有人成功在 Windows 上编译过 GTK 吗? ", "comment": ["windows 上折腾 gtk 不是给自己找气受么", "用 msys2 ，编译很方便", "wxpython 或者 pyqt 更靠谱吧", "gtk 3 官方有文档 支持在 windows 下编译， gedit （ gtk3 ）最新版都在 windows 下跑起来了。", " 如果用 msys,那么编译的结果很 windows 版本的 python 配合很困难！", " 挺喜欢 gtk 的，不过官方对 windows 的支持好像不怎么好！", " 喜欢 gtk,优先选 gtk+python", " gedit 是基于 msys 编译并且整体发布的，我想要的是基于 visual studio 编译的,这样跟 Python on windows 配合很有优势，官方版本的 python 就是基于 vs 编译的！", "GTK 在 windows 上会不会变得很丑啊\r", "如果只是想做个简单界面推荐 tkinter ， Python 自带", "跨平台很方便，每每想起来 xamarin 和 gnome 是一个原始作者，就忍不住想试一试！", "特意登录回复，似乎 PyGTK 已死，多年不更新\r", "建议 PySide 和 wxPython", "另外 wxPython 有 Py3 版本，虽然继续更新，似乎都是伸手党，维护者少。\r", "PySide 起码有 Qt 商业支持，虽然我不喜欢 Qt 。", "\r", "轮子哥的项目有用 GTK", " 虽然不知道轮子哥是那位哥，但是每每看到 MVVM ，就想到生产力秒杀一切的 WPF,不由得心里暖暖的:)", "我试过..特 J8 麻烦.后再就直接用 msys2 直接同步了.\r", "gtk for windows 还是有人维护的..维护 windows 支持的人中还有个国人.那个在 windows 下编译 gtk 就是他写的.\r", "你看下 git log 就知道了..还有就是 gtk for windows bug 真是多呀,各种不支持.\r", "\r", "有兴趣的哥们可以看下 duilib for gtk:\r"]},
{"content": ["<div class=\"topic_content\">话说那一年，我还在杭州做其他行业的时候，学了个把月的 go ，投了几封简历，然后上海有一家公司电话和我面试，对方公司可能也并不需要找很高级的工程师，就问了我知道排序算法有几种，诚然我是知道一些的，就比如大学时候大家都耳熟能详的冒泡排序，然而我也只知道这些，毕竟大学不是学这个专业的也不是能搪塞如此尴尬的借口，自 2016 年初来到上海，掐指一算也有春夏秋冬了，但是之前没有弄明白的至今依旧是一片空白。不知道各位亲爱的同学是否也有跟我一样情况的。所以我在 github 上给自己开了一个 repository ，有需要的同学我们可以一起讨论和学习，水平实在有限，路过的大神愿意的指点一二，在下也是感恩涕零。\r<br>\r<br>address: <a target=\"_blank\" href=\"https://github.com/liyu4/learn-algorithm-365\" rel=\"nofollow\">https://github.com/liyu4/learn-algorithm-365</a>\r<br>\r<br>ps:为什么楼主现在不会用到算法，其实也会，但是一般都是使用别人写好的，或者说是 golang 自带的 sort ，就比如说你想要一个安全的 set ，别人已经帮你写好了，安全的 map 没问题， github 也有人写好了，这种情况不再赘述。另外就是本人的工作比较杂，有时候是写 api ，或者是做一些简单的前端开发（公司没人），有时候还会去写一些其他的东西，还有就是和数据库的一些交集。</div>"], "reply": "94", "tittle": "因为是野路子走出来的码农，一直觉得自己算法这方面特别烂。", "comment": ["还是先学学英语吧。。。", "转行路茫茫 我还在学习的路上 同在杭州 在其他行业 准备入程序员坑", "不要在一开始就给别人说自己要干啥干啥……至少做一半再说吧\r", "\r", "\r", "\r", "拿来练手的，很不工程，没用智能指针和虚函数啥的……", "算法烂并不怕 很多场景用不到很强悍的算法\r", "\r", "结构要清晰 思路要明确 另外好好学习英语", " 感谢提点，英语确实很差，目前的情况是读没有问题，写和听不好，业余时间还翻译了一些资料。", " 谢谢。", " 开个玩笑，比如写 html 。", " 加油，我之前的情况是自学的，历时大概三个月，过程还是很痛苦，建议你报培训班，可能学起来系统些，也能快一些。", " 还要上班 又不想靠家里 只能下班自学", " 我也是在边上班变学的，当时工作可能比较轻松，所以学的时间比较多， 我是 14 年毕业的，现在学什么方向？", "\r", "\r", "之前也不喜欢算法，后来想一想，学学没坏处，就重新学习了，发现很多大一大二看起来挺头大的东西，现在看起来都挺简单的", "  可能误会我的意思了，我不是你口中的那种人，我已经开始做了。虽然我英语没你好😄。", " 很有意思的站点， 我是跟着算法导论学习的，很枯燥呢。 还是谢谢你的分享。", " java 大学专业学过简单的 c 和汇编 朋友推荐我从 java 入手 我就这样开始了看书 自学", " 个人认为重要性和优先级应该是 英语 > 计算机基础 > 算法\r", "基础包括计算机专业那些主课，网络，组成原理，体系结构和编译原理什么的。", "  我现在很痛苦的是，写特别差。看来要好好练练表达了。", " 好网站收藏了\r", "\r", "同楼主，野生码农，学校里学过 C++和数据结构，现在做前端", "其实我比较好奇的是，为什么有人上来就说 LZ 英语不好，这是怎么看出来的？", " github 里的 readme 。虽然我英语不会比楼主好， 但还是看得相当别扭。", " Readme 里一股中国味:smile:", "  谢谢分享的链接", " 指点的同学应该是看了我的 github 才说的， write 确实不好，我还是很诚心的接受他的意见。我现在的英语大概就是六级的水准， 425 分的那种😄。", " 可否指导一条明路，如果优雅的写 eg", " 加油！", " 我有几个同学也是学的 java ，时间也抓紧啊，听他们说现在工作不好找了。", "  我的做法是适当藏拙。不会的或不确定的词句用中文，自己会的或查了几遍词典觉得能接受的才用英文。", " 我英语渣渣啊，前面几个项目英文文档写的和 S 一样，后面学乖了多查字典少写字。。。", "那个题目本身就有问题,何不问问某情况下,你会用什么方法解决,\r", "所以出题的也许只是学院派?\r", "打野出身没什么,学院派只会讲的比会写得多很多.\r", "建议找个想法先做小产品或是小 DEMO.\r", "拿这些(半)成品去面试投履历可能比较有机会,\r", "\r", "像我都不问新同事这些的,\r", "我都先问有那些(半)成品,先看看然后直接问他某部分的实作,\r", "尤其是该部分我推测有很多种实作方法的.还会问他为何不用 XX 作法,\r", "然后根据对方实作的选择跟理由评估这个新人到底是能信任的同事还是不能期待的.\r", "\r", "最讨厌一直问排序法的,一堆现成的库 /包 /框架不问有没有听过,找过,用过,在那里问学院问题,听到火大.\r", "\r", "资工的自学叛逆分子留.", "总而言之，不要重新发明轮子，如果你要做的事情看起来是十分常见的，有可能类库中已经有某个类完成了这样的工作，如果确实是这样，就使用现成的。如果还不清楚是否存在这样的类，就去查一查。\r", "----当我每次忍不住自己实现一个常见的算法功能时候，我都会", "读个在职的相关专业的研究生，抱大腿署名几篇论文，基本就可以摆脱算法弱的形象，然后摇身一变 title 变为 XX 首席科学家了", "建议先学英语", "同非科班，感觉操作系统相关内容更欠缺", "没有好好学，什么都不懂的感觉很遭，只能带逛了。", "奥数多做做\r", "算法是一个脑力工作\r", "你要有那个基础才行", "  \r", " 可以借助 grammarly 之类的软件做辅助。\r", "PS ：表示书写能力的时候，应该用名词的 writing ， write 是动词。", "问排序算法回答冒泡的基本不合格。\r", "\r", "冒泡根本就不是一个实际会拿来用的排序算法，最开始引入也是为了说明 for 循环如何使用。", " 感谢推荐网站", " 好东西，感谢分享~~", " 有心的你还特意把我写的错的东西指出来了。谢谢！", " 可能心里还是执拗吧，毕竟从小到达都觉得自己还有些小聪明。可能也是作茧自缚。", " 我的感觉跟你一样。", "  那还是冬天，确实回答的拙劣，让此时的自己想起来也是尴尬万分。确实是说明 for 是如何使用的，慧眼识珠呢。", " 恩。", " 慧眼识珠是什么鬼……怎么忽然出现这个成语……", " 已经更正过来了，向你学习！", " 就是能发现事情本质的能力啊  😄😄", " 当然这是夸你的", "leetcode 写写。", " 再快 也要年后了 现在的水平 完全没信心找到工作 看了楼上 我这个英语渣感觉无路可活 英语是全校倒数 无论是高中还是大学", "表 栈 队列 树（二叉树为主，包含二叉平衡树）散列 堆（二叉堆为主） 图（包含 Dijkstra 等经典算法）\r", "简单排序算法 希尔排序 堆排序 归并排序 快速排序 桶排序\r", "复杂性分析 分治 动态规划 贪心算法 回溯法 分支限界法\r", "以上大致是本科计算机学的数据结构和算法", "当初自学 C ＋＋的时候，学完并没有急着开始找工作，又去买了本本科的计算机算法教程，从表学到二叉堆，二叉平衡树，直到红黑树看不明白才停下的。", "我是正规路子出来的，算法也特别烂", " 佩服你的毅力和坚持，这个世界就是因为有你们这样可爱的人，才会变的好一点。", " 正规军，不要混到野战部队里来。", " 总结的很像 算法导论， 看来你学的很扎实，本科的东西还记得呢。", "我是自学的 也确实想跟你一样把所有常用的过一遍 一起努力吧", " 可以考虑，不过我们这些半路的孩子，还是先吧各位同学提到的基础，学好了，再去刷题吧。", " Follow me  今晚一起学习堆排， 或者你也可以关注我的 github ， 我会在上面留下我的联系方式。", "不知道是大家学的时候被误导，还是被部分书籍误导了。下面是关于“算法”一名词的解释：\r", "\r", "\r", "\r", "\r", "事实上，关于比较常见的几种排序、树、时间复杂度的衡量方式，以及常见的集中排序、查找的时间复杂度我已经忘的差不多了。最近有两次面试还被人问道，起初还觉得比较惭愧；不过发现后来对方带着有色眼镜在看问题时，我就只能呵呵了。\r", "\r", "“算法”大概可能还是分为两类：\r", "1.  解决实际工程问题的一种方法或者步骤\r", "2.  在已有的解决方法或步骤中，寻找一种更有效（性能更好）的方法和步骤\r", "\r", "第一类是解决问题的思路和方法，第二类除了包括解决问题的思路和方法以外，还有一些数学的背景知识，或者一些额外的知识面。\r", "\r", "\r", "首先我也不是科班出生，但数据结构也学过，不过当时在校期间也一笔带过（老实带着过，学生自己也不不知道为啥学，所以更加带过。）\r", "但这不影响解决问题的实际情况，问题就是分两类：工程问题和科学问题。\r", "\r", "工程问题更多强调的是如何寻求解决方案，并一点一点改造成符合实际场景的方案。\r", "科学问题更多的强调理论知识储备和支撑。\r", "\r", "哥们还是应该客观一点看，就像我一个老师说的一样：“考研这件事其实就是在考大家的英语，对于理工科学生来说，大家其他科目水平一般都差不多”，面试问‘算法’一样，谁能保证答得出来的人招进来后就一定能干活（可能是我身边例子太多了）？\r", "\r", "说这么多，“算法”这玩意要看，我也正在一点点的抽时间去看，但也要注意一些工程问题的解决思路和方法。面试有时就是纸老虎，不必太过纠结。", "现在用 golang 的人好少呀。。。。", " 堆排已经写过了 :D", " 向你学习", " 是呀，快失业了。", " 你的回答非常中肯。", "先实现及王道也！ facebook 早先年的代码，也不是一般垃圾。所以成功者想到做到，我们已经这里浪费了 1 分钟，不说了。", " 也需要偶尔的放空。", "这有什么，不要自己吓自己了，这些并不难。我也不是科班出来的，研究生毕业后，找工作前花了几个月在图书馆刷了好多书。每天早上 9 点到下午 6 点，中间没时间吃午饭，回家后再上机写几个小时。\r", "\r", "- 比如算法，从零开始学的，陆续读了<algorithms>（启蒙特别有帮助）， July 的编程之法（浅显），剑指 offer ，编程之美，编程珠饥， crack the code interview(部分)，重写过大部分常见的各种算法，以及绝大多数剑指 offer 和编程之法里的题。别看书多，很多题是重复的，思路也是可以举一反三的。\r", "- 比如操作系统，从零开始学的，陆续看了哈工大孙志岗老师的公开课（笔记记了满满一本），清华的公开课（部分），然后看了部分的<Moden OS>, CSAPP 。着重看了日本人那本 30 天自制 OS 和国人写的那本 Orange OS ，完整地从头照着写了一个操作系统内核，后期又往上加了好多 feature ，包括移植了一个游戏模拟器。\r", "-比如 C++，刷完了 Primer Plus, Accelerated C++, Effective C++(前半本)， STL （前半本）\r", "-比如计算机网络，这个纯粹是面试需要。花了一周刷了国内那本绿封皮的清华大学的教材。\r", "等等", "奥利给，啥都别说，干就得了。", "古有八股文,今有 Leecode", "数学门槛高，望之兴叹", "没事的\r", "算法，就是你解决问题的方案，方案有多种，最优的那种，需要很强的大脑思维能力\r", "社会是讲究分工的\r", "你可以找个思维能力很强的人一 起工作\r", "你照样可以一起参与伟大的项目\r", "\r", "找准自已的优点，充分利用自已的优点", "多做做奥数题\r", "对算法的提升会很有帮助", "什么鬼的野路子 算法不是程序员必须吗？", "我的档次好低。。。", " 哥，你说的对，只是借口吧。", " 我也在这条线上。", " 截图发的是哪个网站 嘿嘿", " 如果可以翻译资料的话，我觉得你英语不差，可以独立看懂文档就够了，不需要听这方便太强。\r", "算法只要肯刷，没什么难的，又不是去写导弹轨迹。", "讲道理，野路子不是应该见到算法题就高兴吗？毕竟可以短时间提高的，并且效果最明显。现在科班出生都不屑与我们这种只会刷题的为伍，呵呵。", "每次随机都初始化种子是错误的", " 哥 你是说跳表那里吗？", " 恩 7771", " 但是写很差  看的懂和写出来或者听出来差别太多了。感谢大家的指正，这个只能考虑报个班或者好好学习下基础了。", " 是的，我只瞄了眼跳表", " 给你推荐一本书，刘汝佳的《算法竞赛入门经典》（《算法导论》废话太多），你买那本薄的，刷完上面的题就能应付找工作的算法了。其实厚的那本合作者还是有点意思，半路出家，有妻儿，最后还是静下心提高算法。", " 恩 我回头看看", " 恩，谢谢你的建议！", "算法这种东西， 现用现学就好了， 我指的是业务需要的算法， 像排序这种算法， 你确定要自己写， 不用语言内置库函数？人家可能有编译器优化过的。\r", "至于领域算法， 比如数据分析， 图像识别，这种专业算法跟上述内容是 2 个东西。", " 日常开发是会选择内置的函数，拿来就可以用，图像识别的算法我也没有自己写，也是用的别人写好的，自己去写可能要花些时间，数据分析我们有一些自己的实现。\r", "\r", "为什么要学习算法，我个人是感觉自己这方面没有系统的（就当没学过吧）学习过，所以想学习一下 这些基础的东西，可能并不是要自己碰到了就自己要写，这些东西也不会耗费我很多的时间和精力，都是下班在做，目前算法导论看了有三分之一，就当自己的乐趣吧。 还是谢谢你诚恳的意见。", " 就比如 redis 的 set 用了跳表， mysql 用了 b+树，我在看这些东西的就会燃起兴趣去了解它，这些原动力很多也是在工作中碰到的。积攒多了，心里就有点不痛快，既然自己不聪明，也不算太笨，总是可以搞懂的，可能就像你说的没有什么太多的意义。但是谁能说人生不就是折腾两个字呢。", "算法和数据结构虽说是老生常谈的话题，但是对于哪怕是科班出身的 CS 专业的学生来说，也是需要很长的时间去慢慢消化和品味的。有些特别经典的，甚至值得一辈子去慢慢参透，比如 quick sort ，比如 KMP 算法， etc.", "我英语也很烂，但是算法这种，个人感觉除了特殊行业，一般都有现成的，但是英语真的很麻烦。。。", " 我英语也不是很好，可以加好友一起分享学习英语的心得。", " 有道理。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这个是微信的 BUG ？</p>\n</div></div>"], "reply": "1", "tittle": "微信公众号在打开下边的菜单 跳转到 safari 打开了 安卓上正常 苹果手机 为毛一直跳浏览器？", "comment": ["不知道你在说什么 麻烦把句子理通顺了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img src=\"http://ww3.sinaimg.cn/large/005Gcprojw1fagdaa209cj30zk0jw0zc.jpg\"></p>\n<p>呵呵，目测还是面向对象的呢，好高级的样子。。。</p>\n</div></div>"], "reply": "32", "tittle": "这是用神码语言写的啊？", "comment": ["我感觉左边才是代码呢.", "看着像是 JS ， XML 和 objective-c 的混合体。", "编译后的 javascript ，没看到有 react 么", "看着像 JS\r", "这是描述未来的电影？人类也在用 JS?", "swift 苹果的", " HBO 的美剧 《西部世界》　　这是第一季最后一集的截图", "尤雨溪微博过来的？", "除了 objc html 还混了点 swift （也不算 swift ，就是 ml 系的 let 语法）", "如果有人说这是 fb 员工造的轮子我可能会信， 233 ，他们很多人貌似喜欢 html 喜欢 ml （ meta language ）", "var DataBlock = React.createClass\r", "\r", "所以是 react", "React 毁灭世界 233333", "终于看到高清版的了。。。。", "推上有人昨天发了， React", "所以全剧是在黑前端程序员不考虑垃圾回收么。。。", "突然想起了，这在电影行业里是个专门的行业 FUI/虚拟用户界面 /神奇用户界面：\r", "\r", "FUI Design : 虛擬使用者介面設計 | MGBoom : ", "\r", "\r", "虚拟设计之王-Fastcompany.cn : ", "\r", "［蒂姆·阿尔诺（ Timo Arnall ）是一名设计师、电影制作人以及 Berg 设计公司的创意总监，他最近表示“电脑界面是当代最重要的文化表现形式。” 电脑界面是我们体验当代流行文化的主要通道，他写道，要么直接通过用户界面（ UI ），要么通过与用户界面相连接的设备。这在各式各样的电影里表现得再明显不过了：《北极的圣诞老人兄弟》（ Fred Claus ）、《猎杀本·拉登》（ Zero Dark Thirty ）、《星际迷航：暗黑无界》（ Star Trek: Into Darkness ）这些电影都展示了“神奇用户界面”（或称为 FUI ）的人机互动。这些界面并不真实存在——他们只是电影的视觉效果，然而这些界面却成了未来数码产品人机交互方式的模范，预示了用户界面的发展方向。］\r", "\r", "电影世界里的交互设计 - 唯艺互动 : ", "Kit FUI - User interfaces from movies, tv, video games and more : ", " FIUI ，滑稽。", " 应该是 root 之后的机器人提着人类玩～～～", "我怎么记得某集里开发部的小姑娘有句台词说到过 Python", "React", " \r", "是那个掉坑里的机器人用石头砸自己头的一段，那个不是 Python ，而是 Python Pass ，是地名，翻译过来叫蟒蛇谷或者蟒蛇走道吧。  -_-!! \r", "\r", "这是啥电影啊？", "F#", "看了半天才明白，那些左右箭头符号原来只是 xml 标签的尖括号", "語言不是重點, 重點是這 IDE 有能弄一個出來嗎?", " 西部世界，电视剧", "这图好似我发在某个群里的", "贴主是不是也标个剧透醒目呢？   \r", "顺便祝所有剧透党拥有剧透天使的守护", " 那里提到的 Python ，是地名「蟒蛇小径」。", " \r", " \r", "多谢，看来好像是让字幕坑了", "微博有人说是这是 React ，是怎么看出来的？", "话说，将来 AR 、 VR 甚至全息的前端界面用 React 实现也确实挺合适的。\r", "看来我大前端还能战五百年。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>比如我做一个发红包的业务，后台可以确定金额是 10 块钱，此时给钱范围内的用户来拿钱就是 10 块钱，后台可以再多次追加，比如再追加 5 块钱，那么此时用户来，就是给 15 块钱，前面领取了 10 块钱的用户，还可以再来拿 5 块钱。再追加也是以此类推。</p>\n<p>那么关于每个用户该拿多少钱，是给用户领钱表中设计一个字段，每次追加都 update ，还是写追加记录，每次都计算更好一点？我对经常 update 的字段有点阴影，感觉维护起来有点麻烦</p>\n</div></div>"], "reply": "3", "tittle": "请教一个设计问题，是设计个字段每次 update 好还是用一堆记录表实时计算好", "comment": ["两个一起来", "1 、只加字段，每次更新。不知道详细追加记录！\r", "2 、只加记录表！这样可以知道更详细的记录，可以多表计算。还得计算！！！！\r", "3 、字段，记录表同时存在。记录表每次追加，字段实时更新。", "加字段的话有些框架，是框架维护，会少了这部分工作"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>作为过来人（ Django ， Nodejs ， Rails ， PHP......都有过项目经验）\n我想给各位想做自己项目的伙伴一个建议：\n--找个好点的设计师\n--至少是有潜力的设计师\n--实在找不到自己去学一些设计方面的基本知识（推荐 hackdesign ）</p>\n<p>用 Django 开发项目已经是 5 年前的事情了，后来用了 ROR 就再也回不去了。\n不知道 Django 现在发展得怎么样，反正我是回不去了。</p>\n<p><a href=\"http://stylefar.winterock.com\" rel=\"nofollow\">stylefar.winterock.com</a>\n这是几年前我一个人用 ROR 帮别人做的，太久没管，好多图片已经挂了。\n后端就不说了，前端的排版，布局， css 动画， js 交互大多数都是手写的。\n原因就是当时有个纽约的设计师，对细节抠得特别死，精确到像素级的要求。</p>\n<p>后来就去自学了 hackdesign ，发现好多基本常识其实稍加注意，自己做出来的东西会好看很多。\n<a href=\"http://hackdesign.org\" rel=\"nofollow\">hackdesign.org</a> 推荐给大家。</p>\n</div></div>"], "reply": "10", "tittle": "看隔壁用 Django 撸网站有感", "comment": ["谢谢分享", "Ruby 世界对美观要求确实高一点。 Python 也在变，现在 Python 的官网和 django 的官网都能看了。以前简直不堪入目", "感谢分享，网站不错", "文中全都在扯前端是什么回事……", "跑题严重…差评~", "这个网站看配色、页面布局就知道是一个码农写的。。\r", "这类网站的共同特点：\r", "1.页面布局混乱，元素乱堆积，不为整体美观考虑，只在乎把页面塞满，内容越多越好。\r", "2.配色混乱，没有主题\r", "3.细节粗糙。（比如这个网站论坛部分的 tag ，文字没有居中， tag 背景是一坨深灰色。）\r", "\r", "程序员如果要自己做一个好的产品，至少要有基本的设计能力和审美。设计这块如果不是专业的话，可以多去参考别人的作品然后吸收消化。", " \r", " \r", "不客气\r", "\r", "\r", " 是啊，和 python 相关的网站，以前大多数视觉上都相当一般。\r", "\r", "\r", " \r", " \r", "不至于吧？标题是“ xxx 有感”，哪里跑题了？我有说要讨论 django 吗？\r", "感慨就是自己撸网站要稍微注意一下设计方面的姿势。", "细节很重要，品味很重要，谢谢分享", "谢谢 分享 我马上去学 hackdesign", "请教楼主，现在使用 ROR 和 Django 后端模板还多吗？我看了看 Vue ， React ， Angular 等的设计，发现使用这种前端模板的太简单一些。我最近学了一下 Vue ，发现确实方便。这样的话，后端使用 ROR ， Django 就只需要他们的 Rest 功能了，显得有点大材小用了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>在程序中存在大量的数据来代表程序的状态，其中有些数据在程序的运行过程中值会发生改变，有些数据在程序运行过程中值不能发生改变，这些数据在程序中分别被叫做变量和常量。</p>\n<p>在 java 实际开发中，可以根据数据在程序运行中是否发生改变，来选择应该是使用变量代表还是常量代表。</p>\n<p>变量</p>\n<p>变量代表程序的状态。程序通过改变变量的值来改变整个程序的状态，或者说得更大一些，也就是实现程序的功能逻辑。为了方便的引用变量的值，在程序中需要为变量设定一个名称，这就是变量名。例如在 2D 游戏程序中，需要代表人物的位置，则需要 2 个变量，一个是 x 坐标，一个是 y 坐标，在程序运行过程中，这两个变量的值会发生改变。由于 Java 语言是一种强类型的语言，所以变量在使用以前必须首先声明，在程序中声明变量的语法格式如下：</p>\n<p>数据类型 变量名称；</p>\n<p>例如： int x ；</p>\n<p>在该语法格式中，数据类型可以是 Java 语言中任意的类型，包括前面介绍到的基本数据类型以及后续将要介绍的复合数据类型。变量名称是该变量的标识符，需要符合标识符的命名规则，在实际使用中，该名称一般和变量的用途对应，这样便于程序的阅读。数据类型和变量名称之间使用空格进行间隔，空格的个数不限，但是至少需要 1 个。语句使用“；”作为结束。</p>\n<p>也可以在声明变量的同时，设定该变量的值，语法格式如下：</p>\n<p>数据类型 变量名称 = 值；</p>\n<p>例如： int x = 10 ；</p>\n<p>在该语法格式中，前面的语法和上面介绍的内容一致，后续的“=”代表赋值，其中的“值”代表具体的数据，注意区别“==”代表为判断是否相等。在该语法格式中，要求值的类型需要和声明变量的数据类型一致。</p>\n<p>在程序中，变量的值代表程序的状态，在程序中可以通过变量名称来引用变量中存储的值，也可以为变量重新赋值。例如：</p>\n<p>int n = 5 ；</p>\n<p>n = 10 ；</p>\n<p>在实际开发过程中，需要声明什么类型的变量，需要声明多少个变量，需要为变量赋什么数值，都根据程序逻辑决定，这里列举的只是表达的格式而已。</p>\n<p>常量</p>\n<p>常量的作用</p>\n<p>常量代表程序运行过程中不能改变的值。常量在程序运行过程中主要有 2 个作用：</p>\n<p>1. 代表常数，便于程序的修改（例如：圆周率的值）</p>\n<p>2. 增强程序的可读性（例如：常量 UP 、 DOWN 、 LEFT 和 RIGHT 分辨代表上下左右，其数值分别是 1 、 2 、 3 和 4 ）</p>\n<p>常量的语法格式</p>\n<p>常量的语法格式和变量类型只需要在变量的语法格式前面添加关键字 final 即可。在 Java 编码规范中，要求常量名必须大写。</p>\n<p>则常量的语法格式如下：</p>\n<p>final 数据类型 常量名称 = 值；</p>\n<p>final 数据类型 常量名称 1 = 值 1 ， 常量名称 2 = 值 2 ，……常量名称 n = 值 n ；</p>\n<p>例如：</p>\n<p>final double PI = 3.14 ；</p>\n<p>final char MALE=‘ M ’， FEMALE=‘ F ’；</p>\n<p>在 Java 语法中，常量也可以首先声明，然后再进行赋值，但是只能赋值一次，示例代码如下：</p>\n<p>final int UP ；</p>\n<p>UP = 1 ；</p>\n<p>Final ：</p>\n<p>final 用于声明属性（常量），方法和类， final 这个关键字的含义是“这是无法改变的”或者“终态的”；</p>\n<p>那么为什么要阻止改变呢？</p>\n<p>java 语言的发明者可能由于两个目的而阻止改变:</p>\n<p>1).效率问题：</p>\n<p>jdk 中的某些类的某些方法，是不允许被用户覆盖的，设计者可能认为，所用方法已经是最好的方法，用户私自覆盖，或是由于疏忽而覆盖，就会影响 JVM 或是系统的系能；</p>\n<p>2). 设计所需：</p>\n<p>众所周知，有些情况必须使用 final 关键字，比如方法中的匿名内部类的参数传递</p>\n<p>[修饰变量] ：</p>\n<p>final 成员变量表示常量，只能被赋值一次，赋值后值不再改变。</p>\n<p>[修饰方法] ：</p>\n<p>final 方法不能被子类方法覆盖，但可以被继承。</p>\n<p>[修饰类] ：</p>\n<p>final 类不能被继承，没有子类， final 类中所有方法都是 final 的。(如 String 类)</p>\n<p></p>\n<p>原文链接： <a href=\"http://www.maiziedu.com/wiki/java/variable/\" rel=\"nofollow\">http://www.maiziedu.com/wiki/java/variable/</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "Java 变量与常量详解", "comment": []},
{"content": ["<div class=\"topic_content\">挂了 ss\r<br>\r<br>打开 github 要数分钟(作为参考,打开 <a target=\"_blank\" href=\"http://google.com\" rel=\"nofollow\">google.com</a> 需要 2-3s)</div>"], "reply": "10", "tittle": "Github 是被攻击了吗?延迟好高", "comment": ["All systems operational\r", "超慢啊 最近才这样的", "你的 ss 改换了，实在不行换个宽带", "我们学校最近挺好的，没有变化，不过经常抽。", "我只要 1.27s", "裸开 5S\r", "代理 2S", "裸开该页无法显示。代理秒开。", "你这界 ss 不行", "需要多准备几个 ss", "我也很慢， ss 都登不上去"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如图</p>\n<p><img alt=\"\" src=\"http://p1.bpimg.com/567571/b45d773d3fddb497.png\"></p>\n<p>下个 netty 的包,3.5M,下了有十分钟...</p>\n</div></div>"], "reply": "10", "tittle": "给 maven 的速度跪了...", "comment": ["大天朝你懂的,sbt 也是这样,国内就没发现靠谱的源", "换国内镜像,比如 ", "这个不是设置代理吗？\r", "\r", "目前用到的国外源要么是国内的，要么设置代理，要么 proxychain 。", "挂个代理很难吗？", "标题改为“给国内的网络环境跪了”更合适。", "阿里云镜像好评，最大的好处其实是服务器是阿里云的时候，走内网速度简直飞起来。", "这有 3 个可用镜像\r", "\r", "\r", "\r", "\r", "\r", "\r", "使用方法：\r", "下载\r", "\r", "放到 C:\\Users\\用户名\\.m2\\ 目录中，修改 settings.xml 中镜像 url 及存储位置，默认设置的淘宝的，位置为 D:/MAVEN", "```\r", "    <repositories>\r", "        <repository>\r", "            <id>mvnrepository</id>\r", "            <name>mvnrepository</name>\r", "            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>\r", "            <layout>default</layout>\r", "            <releases>\r", "                <enabled>true</enabled>\r", "            </releases>\r", "            <snapshots>\r", "                <enabled>false</enabled>\r", "            </snapshots>\r", "        </repository>\r", "    </repositories>\r", "```", "换 jcenter 很难吗？", "翻墙阿"]},
{"content": ["<div class=\"topic_content\">关于 https ，最强势的就是苹果了： 2017 年 1 月 1 日后提交 App Store 的 App ，必须全部使用 https (有少量例外)\r<br>\r<br>不管怎样， https 确实是越来越流行。你的博客、产品，在改造吗？\r<br>\r<br>我在改造博客，其中有一项有点麻烦：图床。我的博客因为时间有点长，图床也很杂：又拍相册、微博图床、七牛、等等，要\r<br>\r<br>1. 把所有之前文章中的图片全部找出来\r<br>2. 搬家至支持 https 的图床\r<br>3. 更新文章中的图片链接\r<br>\r<br>想想都是件挺闹心的事。大家是怎么解决这个问题的？\r<br>\r<br>另外，我在想我的 [iPic]( <a target=\"_blank\" href=\"http://toolinbox.net/iPic/\" rel=\"nofollow\">http://toolinbox.net/iPic/</a>) 是不是要支持图床搬家功能。有些需求太小众、又比较麻烦，纠结…如果需求的朋友多，倒是可以考虑一下下…</div>"], "reply": "71", "tittle": "全站 https 越来越流行，你的图床要搬家吗？", "comment": ["其实一点也不麻烦，用 wget ，一条命令就可以把全部图片拿回来，顺便还可以帮你把博客全静态化了，如果你想这样的话。", "觉得麻烦你可以自己写一个 https 的代理处理所有的图片（误", " 这方法不错。显露了，自己后端明显很弱…", " 哎，听起来还是学习学习才能搞这事，水平啊…", "你的服务器硬盘是有多小？一个人 blog 的图片能有多少呢？流量或存贮空间应该都不是太大吧？", "^_^ 机智的我从一开始就是 HTTPS", " 那样的话，进出双向的流量都算在楼主头上了，他用外部图床，估计就是为了省流量。", "你的问题不是图床的问题。\r", "\r", "搬家不是应该是直接在 nginx 里用 sub_filter 把仓库地址给替换了吗？", "七牛和又拍都可以绑定域名的时候上传证书就可以 https 了", "我博客的图片从一开始就是放在本地的。。。", "前些天，因为要上 HTTPS ，手工替换了所有博客图片到七牛，但是感觉还是有点不放心，技术太弱了。。。", " @", " \r", "倒不是硬盘空间、流量的问题，更多的是历史原因。毕竟一开始写博客的时侯并不会想那么多，有图片就用、能打开就行。现在要把各个地方的图片统一到一个支持 https 图床，有些麻烦。", " 这是真机智 👍", " 新图床是好办的，难办的是已有图片。", " 本地的是很好处理的。唯一的问题就是： Markdown 文本复制到别的地方时，相对链接就不干活了。", " 是不放心七牛吗？还是？", "我准备用脚本直接操作数据库，把 http 的图片地址全部拿出来下载到本地在上传到 https 再写回数据库", "用又拍的话，直接可以在绑定域名时候上传证书，就可以 https 了，而且自主上传证书，不用联系客服，很方便啊。省去一堆麻烦", "我做采集的  各种站点的图片  怎么办", " 最简单  把 http 踢桃成 https  逃。。。。", " 额，博客的域名又不会变", "博客一开始就是本地和远端同时存储了图片，过度到 https 就比较轻松啦。博客图片放在又拍的，又拍可以自主部署 SSL 比较方便，放个博客： ", " ，逃~", " @", " 博客域名没有备案，七牛和又拍的二级地址支持 https 吗？", " \r", "腾讯云新用户送半年每个月 50G 免费流量，听说过期后每个月也能有 10G 免费流量，没验证过。\r", "\r", "他的 cdn 可以有用自带的 https2 级链接。 nginx 里做个替换就可以了。\r", "\r", "给我女儿做了个占域名的站， ", " \r", "\r", "nginx 配置\r", "\r", "server {\r", "\r", "    server_name ", ";\r", "\r", "    listen 443;\r", "\r", "    index index.html;\r", "\r", "    ssl on;\r", "\r", "    location / \r", "\r", "    {\r", "\r", "      sub_filter '/skin/' '", "';\r", "\r", "      sub_filter_once off;\r", "\r", "    }\r", "\r", "    root /dockers/www.xuxinquan.com/data/src;\r", "\r", "    ssl_certificate /dockers/nginx/ssl/www.xuxinquan.com.cer;\r", "\r", "    ssl_certificate_key /dockers/nginx/ssl/www.xuxinquan.com.key;\r", "\r", "}\r", "\r", "\r", "需要切换图床的话直接把内容替换了就可以了。\r", "\r", "当然 /skin 比较容易误判。但我就是个纯静态 html ，就没改复杂的名字。", " 对，说是测试域名", " 域名没有备案的话，是无法使用的。 其实域名备案，申请个证书，比你选择迁移应该要方便不少。据我了解，二级地址，又拍云是支持 https 的。", "s3 好用不多解释\r", "wordpress 无缝链接，前端加上 cloudflare 免费 cdn 省钱", "一直图片都是放在本地的。个人站也不会说缺这点 空间 和打开速度。反正日流量也就是 平均 50 到偶然峰值 200 天", "图片不是 https 也能正常显示啊，这有什么讲究吗", " \r", "\r", "会报安全错误\r", "\r", "会无法反盗链( https 页面访问 Http 资源时会不带 ref)", " 图片都是别人站点的,怎么跳啊。用自己服务器做中转？", "nginx 反向代理", "  就直接替换成 https 啊  反正能正常显示就行  复杂的方法 有很多  比如用 Nginx 反向代理", " 我前两天还领了腾讯云的 CDN 礼包，当时还试了一下以为不支持 https ，我再去看看，谢谢你！\r", " 已经上了 SSL 证书，图片在服务器上，想用 CDN 加速图片但又不想备案，只能用二级地址。七牛的二级地址好像也支持 https ，但是我没有找到在哪儿设置。", "用又拍，还不错的", " \r", "要在 cdn 里，不在云对象里。\r", "\r", "云对象是没 https 的。必须指定对应的 cdn 才行。", " 我目前是全静态的，没有数据库…", " 前提是绑定域名，哎，是个痛啊", " 哦，你的图片是用的带域名的全路径、不是相对路径，对吧？\r", "\r", "我是说，如果是全路径的话，可以把 Markdown 的文本复制到任意其他地方，比如从博客到 V2EX ，而不用担心图片地址无效。", " 哦，七牛的测试域名确实不适合生产环境，绑定域名（前提是域名先备案）后，可以用自己的域名，就不用担心这个问题了。", "  别人家的图片不支持 https 的", " 不会报的，能正常访问。\r", "可以通过 meta 标签设置 ref", " 十分感谢，问题已解决，之前是因为 CDN 设置出错了： 1. 对象存储不支持 https 回源； 2.我开了防盗链所以直接上传在本地测试也失败了。", "博客放在 coding ，包括图片， https 用的 cloudflare 的。。。", "自己做的免费图床， 好用：  ", "\r", "\r", "1.在墙外，主机 VPS 在英国 (6 核 3G 内存，每月 5TB 流量）\r", "2.cloudflare PRO 加速\r", "3.域名 privacy\r", "4.支持 API\r", "5.只要不传露点的就 不用担心被删\r", "6.不用注册，无限上传", "以前博客图片放七牛，后来好像不支持 https 了，就自己搭反代，顺便把 nginx 基本配置学会了……", "博客放 github 上，绑定域名用 cloudflare 开了 https ，顺便给 vps 空网站也加上了 https ，开启 hsts", " 七牛的 *.qnssl.com 支持 HTTPS ，但不支持 HTTP/2 。不过 https 流量是收费的， 0 ~ 100 TB 是 0.36 元 / GB 。\r", "这个月流量突然增加，我想是时候找回我那个被冻结的又拍账号了（", "我的图片之前放贴图库挂过之后就自建图片 302 服务了，一图多图床，不过使用下来觉得也不是一个特别好的方案", " 我的又拍云账号之前也被冻结了……后来找客服给我解冻的。", "个人博客没有必要 https 吧", " 这方案可以", " 我目前也在用七牛的 https ，但毕竟是七牛的测试域名，不放心。在考虑阿里云 OSS", " 自建图床，总是觉得不如用服务，毕竟个人的量小", " 一方面这是趋势，另一方面主要是配合 Mac App Store", " 国内服务都要备案，这个跳不开。不考虑国内用户的话 Cloudflare 其实就够了。", " HTTPS 对缓存是很不友好的。而且把 Private Key 给 CDN 我是不太放心的。", "建站之初就不怕麻烦地选择了全站 HTTPS ，一直测试安全系数为 A+才罢休的路过……", " 可是，我还是想让网站快一点…", " 谢谢提醒，不过没办法，还是要硬着头皮上 https", " 明智之举", "……最近不是说 ios 又不强制 https 了么", "cloudflare 可以是你网站是 http 的然后它分发的时候给你弄成 https 的", " 现在好像要进 HSTS Preload 才能给 A+", " 那最好的解决办法就是备案然后用国内服务了┑(￣Д ￣)┍", " 反正我是没有 Preload", " 目前我只将 https 做到 A-；毕竟是小站，不再折腾更高了。\r", "\r", "但，图床搬家的事还没搞…", " 嗯，我也只是加了 HSTS 头。这个是以后的要求。", " 微博图床要换的话有一个方法，把前面的 ww* 替换成 ws* 就可以用 https 访问了。", " 可以通过 meta 设置 ref 策略"]},
{"content": ["<div class=\"topic_content\">还只会 Delphi ，每天早上一睁眼就看到一屁股的房贷\r<br>\r<br>是不是很失败</div>"], "reply": "73", "tittle": "都 40 了还是个小码农哎", "comment": ["聪明的程序员", "我也快了", "哪裡的房？ 北上深不怕呀。", " 你这是自带表情么~ 2333", "然后，在北京有四套房？", "都 40 了还只会一种上古语言那是真不适合当程序员， LZ 完全是对编程没兴趣啊何不早点转行可能还有机会", "我也在想，到 40 了是一种什么体验？", "一屁股房贷是好几套房的意思吗", "至少是很稳定，在一个公司干到这个岁数， 40 再找工作的话估计都没人要了吧", "奔四 ing ，卤煮的房贷应该没多少了吧，至少比我应该少多了。。。", "哈，当个老程序员也不错，我现在是公司里最老的了，老板都比我小，说不定再干几年，老板都跑了。", "40 岁的码农，起码三到五套房了，资产 300 万美金朝上，就算现在退休都问题不大", "如果楼主是大家说的其实过的还不错（大众标准下），那样发了这样一个帖子，确实说明你很失败，起码成熟度层面是。 40 岁了，还玩什么我这次没考好就得了 90 的把戏。", "只会 Delphi 是如何活到 40 岁的。。还买房了", "生孩子了应该还好吧。。。", " 还有 Matlab 一辈子用到老其他啥也不会的 professor 呢，人家随便搞个算法秒底层搬砖码农几十条街。语言不过是工具，关键是思维。", " 如此厉害的人，来问这问题，看 13 楼", "奔四， 女朋友嫌弃我不上进被甩了。\r", "楼主你起码老婆孩子热炕头，要知足。", "亮点不在 只会 delphi 么？", "不不不,楼主你是老码农", "编程一直是业余爱好...", "我也是 DELPHI 程序员。。。\r", "\r", "现在公司写的核心程序就是用 DELPHI 写的， 除去注释和空行，大概是 35 万行左右， 非界面， 就是算法 DLL 。大概 1800 个 API 。\r", "\r", "欢迎关注我的博客:   ", "跟卤煮一样，除了不会 Delphi", " 真-老司机。。。", " 打开你的“博客”，让我震惊，以为是哪个高中生又入坑当资讯小站长了。。\r", "与你前面 2 行话的逼格完全不符合。。。", " 抢劫也没这么赚钱", "握爪……比楼主小 1 岁\r", "\r", "前 VC++ 程序员，后来转 J2EE 过了 6~7 年又转 iOS 。也兼着做些 Python Ruby 之类的活计。\r", "\r", "虽然没房贷，不过仍然是个小码农 ⊙▽⊙", " 以前房子便宜，我同事和同学，包括我自己， 30 左右的，都在北上深 2 到 3 套房，现在 40 岁， 3 套刚及格吧", " justyy 的几个站广告费加起来有 200 英镑每个月，所以一切都是为了钱", "生活压力不要太大，过的开心就好。", " 给年轻人一些建议吧", "居然有房贷 好牛逼", "  博客看完了，值得尊敬。", " 又不是全款，有什么牛逼的。。。。。。", " 几套是关键，不会是三十几套吧？", " 这个数据怎么得到的？", "讲讲故事吧 : D", " 哈哈哈 点进去首页就是 如何下载 91Porn 视频 (保存到本地)?", " 高中生？？这是表扬我心态年轻呢还是变相损我呢  :)", " 天啊。几百篇 你看完了？ 值得尊敬", " 给老司机用的。:)", "  博客写 91 ，哈哈，老司机啊，握爪。下 91 的片子那样这么麻烦，浏览器装个插件完事。", "  嗯。 啥插件？ 我写博文是 为了 SEO 。  ", "我 35 ，可能技术比你丰富一些，可是我也还有 20 万的房贷……\r", "老婆 1 个，儿子 2 个，工资不到 7K （小县城）……\r", "可我自认为自己还行，至少不像早年在广州工作那么辛苦，小孩能跟爷爷奶奶表兄弟姐妹一起玩，也算尽了为人父的责任了吧。\r", "在工作拼了 6 年，学到了技术，但赚不到钱。后来回老家小县城的国企上班，技术发展缓慢，但却买房买车，呵呵，人生，看不透。", " 博客国内访问速度欠佳啊", " 嗯， 在英国。 慢。", " 人家网站自己写", " 还是国企好，对个人发展好，但是对国家不好。", "我 36 ，现在小城市。毕业私企混两年后进入国企。干了六年，自学了编程（ Python ），做了个部门内部应用，转调技术部门，天天撸代码。", "我 32 ，在广州，做了 2 年多无线通信算法，写 C 而且只会 C ，后来一个机会转行金融，写 Matlab 、自学 Python 、 VBS 、 TSL （类 pascal ？）、 PEL ，有些平台看上去比较落后，但用得好也能玩出花来。有房贷即将也有车贷了，个人性格原因我估计自己 40 岁时还是在撸代码，但是自己乐在其中，内心感到很安静。", "身边 40 多的做开发没见过。。。。以前倒是在别的公司一头白发，看上去有 50 的在那边做开发..\r", "我觉得当上技术经理也没那么难吧，一般几年开发经验都够了。。", "34 觉得撸一辈子代码 无忧无虑也挺好\r", "第一位的永远是家庭 孩子 工作差不多就好\r", "到岁数了", "大叔好¥¥%## 🍑", "现在遇到 delphi 程序员，感觉犹如遇见了 IT 圈的国宝，嘿嘿……", "我特马也 34 了马上 35, 年过 30 还写代码是不是大家觉得很挫?\r", "令我欣慰的是, 你们这帮小年轻以后都会变成 30 岁, 40 岁, 乃至 50 岁.\r", "我以前还干过售前, 但是不喜欢, 所以还是干回技术. \r", "另外我也没有三套四套房, 只有一个小房子虽然是北上深学位房单价巨高然并卵面积太 TM 小了.\r", "所以我把车卖掉跑出来了, 刚过来一年多, 又觉得没意思想回去. .\r", "但是 30+的没爬上小领导回去真的也挺没劲的.\r", "感觉自己真是折腾.\r", "想起来觉得自己每一步都没踩到点上.\r", "不知道我什么时候才能踏实下来. 认命...\r", "我自己觉得当个程序员挺好的, 我到现在还是很喜欢技术.\r", "但是 TM 的旁边人的眼光真的很难忽视啊.\r", "虽然他们别的行业即使是什么鬼的大区经理很可能都没我最底层的工资高\r", "但是有什么用?", "哎，我是不太喜欢参加比惨大会的，但是其实我也也不比你们差。你看我都快 X0 了还在码代码，做小网站： ", "大家都不容易", " 可以试试这个 ", " 看到你的介绍，我忍不住去看了一下博客………………", " 多谢。。这个思路很好啊， 直接 JS 分析 HTML 。", " 在哪看到 200 英镑的， 没那么多。。几十英镑最多了", " \r", "\r", "The total estimated earings for Aug/2016 (1/Aug/2016 to 31/Aug/2016) is the highest so far: 104.48 GBP. The top 3 sites earning are:\r", "\r", " – 76.79 GBP\r", " – 25.87 GBP\r", " – 1.39 GBP\r", "This is mainly due to the fact that Rio Olympic 2016 has brought traffic to my site (watch tv/sports online). Thanks Google for ranking my site higher in the search position.\r", "\r", "The traffic is the most dominating factor to increase the website income. Without a significant amount of traffic, there is no point in talking about SEO, how to place your advs etc.\r", "\r", "\r", " 好厉害，请问是用什么关键词搜索到的呢？", " ", " 他自己网站顶部放的链接", "  好的时候 100 英镑， 平均 30 英镑每个月， 一天 1 英镑。没有你说的 200 那么多。。", "  同在小县城国企，工作平均 5K ，钱不够花，继续努力。编程是爱好。", "  还不错，想要发展起来不易啊。我发现程序员都喜欢做技术站，其实可以想想别的。技术站比较难发展，个人认为。", " 感觉界面不错。", " @", " 是好难😂", " 对啊 怕打击你的积极性就没有直接表达自己看法。虽然我啥也不会，只能当个观众，不过觉得既然你做了就坚持一段，实在不行以后再说，毕竟每个人都想做一个自己打造出来的东西，可能也没想多火。不过我觉得网站需要一个好的 idea ，可以抓住一部分人的需求，这样的网站应该很容易抓住用户。总而言之，创造，探索，是我们的所向。加油。", "看了一圈怎么感觉歪楼了...", "这个世界少数一些职业会越老越值钱，程序员就是其中之一", " 搜索 沈庆 \"四十岁了\""]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h4>场景 1</h4>\n<p>医生在工作台用内窥镜捕获病人图像，把图像传给安装了软件的电脑，医生回到电脑填写病人病历，然后提交到服务器。</p>\n<h4>场景 2</h4>\n<p>医生在任何安装了软件且连通医院内网的电脑都可以查询到自己的就诊记录，包括相应的病人图像。</p>\n<h4>限制</h4>\n<ol>\n<li>内窥镜只有 windows 的驱动，软件只能是.exe</li>\n<li>医院网络不稳定，电脑间歇性不能连服务器，软件要做本地备份</li>\n<li>内窥镜和软件捆绑销售的，软件只能兼容特定品牌的内窥镜</li>\n</ol>\n<h4>疑问</h4>\n<p>新手上路，没做过桌面软件，没接过单，只会点 Web ，请问：</p>\n<ul>\n<li>用什么语言开发相对坑少？</li>\n<li>有什么类似软件的开源项目可以推荐下？</li>\n<li>做这样的软件市面价在什么范围？</li>\n</ul>\n<p>求老司机指点，万分感谢</p>\n</div></div>"], "reply": "29", "tittle": "这样一个医院里使用的软件，一般用什么语言开发的，求指点", "comment": ["> 新手上路，没做过桌面软件，没接过单，只会点 Web \r", "\r", "这单你接不得，真的，不管你开多少钱，最后做不出来也是白搭", "以前很多都是 VB 写的, Delphi 也有, 现在 C#用的也多", " 哦哦，那一般通过什么渠道能找到靠谱的软件开发呢，因为是朋友的需求，想帮人帮到底", "别的软件出了 Bug 要钱，这种软件出了 Bug 要命。", " 按照我理解应该不会吧，好像是只读信息，不涉及控制内窥镜", "以一个钻研期 C-sharper 的角度，我是这么考虑的。\r", "\r", "1 ，有驱动，无内窥镜 SDK ，那么用 C#做一个客户端，客户端功能：间隔抓取(5s,10s,15s)某路径下图像文件、填写信息上传到 DB 。\r", "2 ，内窥镜抓取的图像是否会存放在本地某个缓存路径？这个要确认下，如果是那就好办了，直接抓这个路径的图片，然后显示在报告上。如果不是，那么在无 SDK 的情况下……我真的不知道怎么处理，取内存数据？\r", "3 ，上传报告的同时在本地留一份即可， csv ， mdb 感觉都行，图像文件指定一个路径，在 csv 或者 mdb 中包含这个路径吧。\r", "4 ，客户端也会间隔重试上传失败的报告来针对你的网络环境差的情况。\r", "\r", "不知道这么做完不完善，但个人感觉至少是个解决方案。我涉及编程思想还不是很深，同样需要老司机指点，有不足的地方也不要忘记 @我共勉。", "你还真敢接...... 做图像处理的 C++ 程序. 桌面软件用 Qt 阿 (MFC, WPF, etc).", " 🙏   感谢回复了那么多\r", "\r", "1. 有无 SDK 未知，还需要确认\r", "2. 内窥镜本身有配套的软件，抓取的图像会保存到本地某路径\r", "3. 因为医生会用不同的电脑，所以本地保留一份报告还不够，他们想要每台电脑都能离线查看报告", "奇怪啊 买设备一次几百万软件不都给了么。。", " 幸好还没答应接", " 要做软件的就是卖设备的人。。", "听上去像我这里的医院，有次我急诊去拍片，结果拍出来传不到服务器上，急诊医生看不到，只能口述结果。我看过界面，基本可以肯定是 delphi 做的，因为 UI 框架很炫。。。", "朋友....医院正经点的软件都要走竞标，而且做这行的技术不是问题， 业务流程才是， 专门做医院行业的团队里基本都配几个医护出身的理业务", "医院的设备。。串口的应该不会用吧 是工业总线么", " 似乎水好深", " 是 USB 。。", "开发 win32 软件首选 Delphi", " 其他不谈，我只回答楼主需要的东西，也就是干货。\r", "\r", "1 ，有没有 SDK 可以无视了。，直接看第二条。\r", "2 ，内窥镜本身配套软件非常好，说白了应该就是一个 micro camera 吧，如果抓取的图像在本地路径，那就用你自己写的软件（以下简称客户端）去捞取图像，因为没有 api 、开关来触发图像存放与否，所以我觉得可以用客户端间隔检索图像文件，时间越短越精确，但可能更占效能。也就是伪实时的获取图像文件。\r", "3 ，本地离线那更简单，楼主做过 web 开发，那就可以直接在客户端提交数据的同时，在本地生成一个 xml （或者别的），把报告信息一概记录。每份报告的唯一 ID 可以用时间戳+电脑编号（或者别的）来记录。然后通过客户端后台提交到服务器：不停的尝试上传，不停的进行回报，不一定要报告产生当下就上传好，但最终一定要上传到！服务器上收集到这些 XML 就是医院里所有电脑上传的报告汇总。客户端就可以另起一个路径来下载这些 XML 集合，最终按照楼主意愿成为一个离线备份集合，同时又能通过客户端读取 xml 集合来显示结果。（这里可能要注意下细节，客户端显示离线数据和实时数据要有明显标示，否则会混）\r", "4 ，不坑的语言，在 windows 上还是推荐.net 技术，用 C#吧。（因为别 C/S 的我不会啊！捂脸）\r", "\r", "效益，价值什么的都是未知，我不好回答，目前也只是纸上谈兵，具体开发的时候遇到的问题会更多，特别是细节。我只是提供一个我认为可行的解决办法给楼主参考。", "現在醫院的系統都是一整套的呀，從掛號，就診，藥房，護理，醫技等等，就是一個病人從掛號開始唯一的病例號在數據庫建檔之後就在不同部門和科室通用了，相當於不同課室共同協作一份病歷檔案。", " 大医院是确实是这样，但是产品是推向小医院的", "his 系统的厂家好多个呢，你这个最好的还是找个公司吧", "老老实实给够钱，让专业的来做。这种东西东拼西凑做起来，最后坑的还是朋友，或者你说的朋友就是医院院长当我没说。要是科室医生有需求，医院出钱，你们接下来，最后软件转不起来，最后怎么吃的还要怎么吐出来。", "我司就是 his 提供商。\r", "你说的这个涉及的是 pacs 部分（医学影像系统），内窥镜可以通过采集卡的形式来获取图像，也就是说你买机子不一定要买他们的软件，第三方的 pacs 都可以接入。\r", "推荐天敏 sdk2000 的采集卡，然后在网上下载一个免费版的报告系统。\r", "这种就只能本机出报告，但是成本低，如果要让医生能看报告，还是走流程招标吧。", " 明了", "dephi,我哥们是做这个的，经验不多不建议接，这可不只是写代码，", "C# 和 Delphi 二选一，其他的都不推荐", "c#和图形处理的那个什么语言，忘记了，前阵子有同学转去做这个了", "以前应该是 Delphi 的天下，现在可能是 C#", "要是我会用 delphi"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>想问下 mysql 的行锁和表锁是不是都是通过锁索引来实现的，并且是一行一行的锁的吗</p>\n</div></div>"], "reply": "1", "tittle": "mysql 锁机制的实现", "comment": []},
{"content": "", "reply": "92", "tittle": "公司新员工认为公司的代码很烂，是鼓励他重构还是让他先熟悉业务逻辑？", "comment": ["入职新公司，从重构代码到放弃", "这里恰好有个帖子在讨论这个话题 , ", "你是看到那个帖子，故意发的吧，哈哈", " 是的，我确定和上一个帖子的不在同一家公司，不过我也经常遇到这样的问题。如果鼓励新人重构，我得面对很大的风险，如果坚持要他在熟悉了整个的业务逻辑后再重构（或者说改进），可能会让新人受不了，很难平衡。", "首先还是熟悉业务逻辑再重构吧。\r", "之前公司的架构师技术很牛逼，有代码洁癖，经常看见别人代码顺手就重构了。\r", "\r", "也发生过数次改完代码之后某些地方跑不起来的事情。\r", "不是黑架构师；他重构的代码多了去了，出错率还是很低的。\r", "\r", "我是想说我们的架构师算得上是对业务有一定的理解，并且代码水平很高的人了，他都会重构出问题，新员工又有多大把握？", "如果只有这两个选项的话，还是建议先熟悉业务逻辑。至少，先弄明白代码是怎么变烂的。但是对重构的「鼓励」还是要有的，只是别上手就干就行", " 理论上重构的第一步是写单元测试，保证重构后和重构前程序运行结果一致\r", "如果一上来直接就开始改代码，那当然容易出问题", "先写单元测试啊……不写测试怎么重构？你们的重构不会是从头写一个吧", "答案是无须理会这种想法，每个新人去一家新公司都会觉得公司代码很烂，那是因为他没被产品虐过。", " \r", " \r", "不理解业务，光凭已有代码写单元测试么。", "我觉得我的代码也很烂。\r", "\r", "但既然能跑，当然懒得改了。", "新需求会使得代码越来越烂，直到受不了开始重构或小范围重构。", "必须让他先熟悉业务逻辑！\r", "必须让他先熟悉业务逻辑！\r", "必须让他先熟悉业务逻辑！\r", "\r", "说实话，以我个人的经验来说绝大多数开发人员到新公司后都会觉得代码很烂，但通常他不了解业务逻辑是怎么变化的，这种代码是在什么情况下写出来的，有什么特殊的背景（除了真的是乱搞的，绝大多数的“烂代码”一般都是有原因的：业务需求改改改，这个需求明天就要上线等等等等），有多少坑（很少有人能在极短时间内把所有的坑都找出来）。如果贸然去重构风险非常大。而且再说难听点，就算重构完了，也有可能是一堆新的“烂代码”替换老的“烂代码”。", "我觉得可以鼓励，但是要有方案，要能说服团队其他人。不仅仅是说服 leader 。\r", "然后掉坑里了自己爬出来，别指望别人能救你。\r", "其实只要不是大重构，小模块，随便改，改出问题改就是了，又不是不过测试改完直接上线。双赢局面，没必要这么谨慎，搞的大家都不爽。\r", "\r", "如果是觉得整个代码都是一坨屎，要全部重构。那可以无视这样的想法，太年轻了而已。\r", "\r", "说实话，能觉得模块代码烂，还能撸起袖子去改的程序员，真是很难得的一个精神。我身边 90%都是只是嘴上说，绝对不动手干的。下一次下一次下一次，无数的下一次造就了烂代码。\r", "所以原则上应该鼓励，精神难得。不符合现实的情况我想也能说服的。", "额 以我这个菜鸟角度来看 必须熟悉业务逻辑 代码烂不烂暂且不谈 至少跑起来了  重构还是等熟悉业务之后再说吧", "问他哪个开源项目代码写得好，好在哪里，然后就没有然后了，很多人其实不是觉得代码烂，而是根本搞不懂，也不想看", "我也认为应该鼓励重构，作为老员工应该协助把好关，事前提供尽量多的项目背景资料和注意事项，事中对新代码进行检查验证。不过新员工最好还是要好好熟悉业务先，把握好业务才能做好重构这件事情，况且很多业务流程还是不断变化的，谁也不想写一堆烂代码。", "你司新员工进公司没有新任务吗？可以悠哉悠哉的重构代码？\r", " \r", "架构师是为重构代码而生的吗？仿佛感觉到了深深的恶意？", "不熟悉业务，也能重构？", "我觉得我司代码也很危险，但我不会想重构，太乱了……", "刚入职一周，老大授权从小模块开始。。", "不熟悉业务的情况下如何重构？", "读邹欣老师的《构建之法(现代软件工程)》的时候就看到过老司机是怎么回复的：\r", "这些代码就是我们刚来的时候认为之前的代码太烂然后重构的...", "第一次代码不都要走读么", "先熟悉业务。\r", "等他熟悉业务逻辑后，他就会发现，如果由他来写，代码会更烂。", "看他级别咯，牛逼的可以，毕业没两年的千万别。浪费战斗力。\r", "如果做重构必须要有一个完整的保障系统， UT 、功能测试等，保证重构出来的是对的。\r", "\r", "另外 lz 的问题也有点奇怪，不懂公司业务怎么重构？我无法理解", "或许等他熟悉了业务代码后，就会发觉自己见识少，这代码写的简直在该场景下香喷喷的呢？  （手动滑稽）", "我们公司是家小公司，每年大概也就招两个人，算上离职的，人员虽然不是负增长，也基本接近零增长，所以我们对来的新人都当宝贝一样，尽量避免新人离职。", "工作了 10 年的 码农 到了新公司 绝不会说这种话。", "什么是重构，什么不是重构\r", " 很多人口中的重构就是重写，而不是去改善现有的代码。", "你要知道新写的代码一年后也会变成 legacy ，也会有人认为很烂。不存在一次重写就没有烂代码了这种事。只有每次碰一段代码都把它改的比以前更好这种缓慢、渐进的方式才是实际可行的。", "什么项目？说重构就重构？？", "挑一个业务逻辑巨复杂，多表联合查询，多条件判断，继承关系复杂的，居于数据库多级联动菜单什么的，限定让他玩一个星期，然后到期让他交任务，交完之后 review 的时候可以随便开火，保准治好～", " 很可能会吓跑了，公司对新员工要给予多一些理解与支持才好吧？", "领导拍板重构一部分功能，但是又时间不足，只能改改然后尽量能用先的我现在心情复杂的看着这贴。。", "改了代码就一定要进主干么？完全可以放他先去改呀，改完再评估（要不要采用），正好加深下对系统的了解，多好。", "肯定要先熟悉业务啊, 业务都不熟悉怎么重构, 那不是瞎搞吗?\r", "业务逻辑没熟悉之前, 改个 bug 都要几个人 review, 小心翼翼的.\r", "\r", "还有一点: 我见过很多的所谓重构, 其实并没有比原来的代码好, 比如很多的重构号称会提高性能, 但是在重构之前却连个性能度量的指标都拿不出来, 就是对着书自己拍脑袋觉得性能提高了, 实际上瓶颈根本不在那个地方.\r", "还有的, 号称要让代码更加优雅, 结果写出来的东西行数是减少了, 可是太过晦涩, 后面的新员工上手更加痛苦, 间接增加了 bug 率, 比如很多人诟病的 if..elif...elif...else 之类, 咋看起来是很傻, 但是代码逻辑简单有的时候就是优点啊啊, 新人一看就知道在干什么, 多的那几行代码根本不叫事.", "接楼上, 我并不是反对重构, 而是反对没有证据支持的拍脑袋重构, 这些基本是在做无用功, 重构完毕后 bug 收敛又要很长时间. 现在的有些工程师太浮躁, 动不动就要重构, 就跟很多的团队动不动就要搞一个框架一样. 这大概就是所谓的\"面向简历编程\"?", "说明老员工被倒挂了", "大多数新来的都喜欢秀一秀，搞得好还好，搞不好就害死人了然后自己跑路，留下烂摊子害别人\r", "\r", "曾经挖了一个哥们过来，一来公司就嚷嚷要把现有的 mvc 项目全部用 webform 重写，没两天就给他制服了", " 老员工不会被倒挂，只是小庙留不住大神，老员工离职通常是追寻更好的发展，公司是支持的。", " 居然有人要把 mvc 换成 webform 的。", "让他写单元测试先", " 你读一下这篇吧  我之前读的有些感触，专门为你重新搜出来的，有个员工抱怨和上级的回复，很有意义", "鼓励他换工作 也许他写得更烂", "鼓励他换工作 如果你是领导，重不重构都应该在你的掌控之中；如果你不是领导，对业务也很熟悉，但早有重构之念，却又怕节外生枝，所以推向别人，又不给予帮助。故，建议他换工作。哈哈哈。", " 来，说出你的故事~", "也许他写的更烂+1", "虽然经常碰到自己认为写得很烂的代码，但很多时候想改却有心无力，不是从上到下下定决心要重构的话还是慎重点好。", "我觉得吧，先熟悉业务逻辑，因为项目不等人，业务熟悉后也能合理重构项目代码", "如果他是神级的，鼓励他重构，\r", "否则，还是哈哈哈，先看业务，等他有本事把自己那部分重构过了再说。", "个人建议，先熟悉业务啊，一上来就重构绝对是作死。他如果要重构也成，你让他自己先把旧的功能重写一部分，完了再看他要不要。我这种强迫症晚期，经常重构自己框架和项目的人，都没勇气直接重构再跑的项目，都是小心翼翼的自己先做完一部分，测试没问题了，一点点换的。", "目测翻页？ 当然是鼓励他熟悉业务的情况下重构？ 不要非得二选一", "熟悉业务逻辑 +1", "一定是让他先熟悉业务逻辑，没有调查就没有发言权", "新员工到岗肯定是想要有机会施展一下自己的技术，来证明自身的实力，要鼓励，有经验的人肯定知道要先熟悉业务再重构。", "1.线上的话，稳定第一\r", "2.重构的话，会对团队带来什么后果\r", "3.有没有想过怎么避免后边的代码继续烂下去", "不要让入职少于一年的同事重构代码，切记", "没有单元测试的重构，无从谈起啊。\r", "再聪明的人也做不到 - 因为代码的复杂都是持续增加的（其实就是 ifelse ），总归是可以到达人类的极限的。\r", "必须要单元测试，并且是从局部开始。", "当然要熟悉业务为先。\r", "业务都不熟悉谈重构觉得挺扯淡的。", "业务都不熟悉怎么重构?", "你要让他重构估计重构出一坨然后自己离职了……", "这种新员工很不错了，一看就是真萌新，重构这种事，老板看不到 KPI 没有，出了事还得自己兜底，还会得罪人，费力不讨好，何必呢", "程序员都是这样，看不起别人的代码，觉得谁写的都不如自己的。也不想想，谁愿意写垃圾代码？时间紧，任务重，人手不够，给种原因造成的。\r", "重构？我也遇到过类似的新同事，写了一半跑路了。", "三年以下工作经验的最喜欢一来公司说代码烂，结果过去一段时间发现他自己也是个烂货", "先熟悉业务。。。然后他就放弃重构了。。。", "先让他去熟悉业务  然后发配去写测试 覆盖了超过 90%了再谈重构 \r", "你猜他会在哪个阶段放弃？", "觉得代码烂？我的好多程序员朋友接手别人代码的时候都有这样的感觉（错觉？）。重构什么的 等先熟悉业务逻辑以后再谈重构吧。\r", "\r", "有些东西在重构的时候，一堆 bug···", "至今有些愧疚，在第一家公司重做一个由 dede 写的产品，做了差不多半年还没做出个样子，然后自己辞职了。", "只允许小规模重构，比如修改命名，添加注释，提取变量之类的，而不允许更改业务逻辑。如果要更改业务逻辑，必须先写单元测试。", "这个事还是挺有感触的。\r", "\r", "校招拿了公司 offer ，提前进来实习。由于在拿到 offer 之前已经有了较为正式的实习经历（一家很有潜力股的创业公司，写代码的人几乎都是从 BAT 出来的），代码质量非常好，跟着老大学了很多。如果不是地域原因，我都考虑留那里了。回到正文，来到公司以后，也是对项目写的代码不尽如人意，所以感到不满，对 Mentor 提出重构某个大模块。在大部分团队成员不太赞成的情况下，我还是自己拉分支干了起来，一边熟悉业务流程，一边重构代码。重构完成后，由 Mentor 和该模块以前的负责人一起 review 代码，尽管在测试最后阶段发现了一个由于之前的烂代码而没有留意到的坑，后来填补以后跟着日常版本上线了。\r", "\r", "回想起这段经历，我觉得可能是每个新人刚来到公司都想做的事情，冲动可以理解，关键还是看是否能把逻辑理清，把旧代码熟悉以后再去考虑重构。", "我看电影或者拳击赛认为他们都是花架子，一点也不凶悍。然后我去健身房，举不起 20 公斤的哑铃。", "先熟悉业务和旧代码,否则就是一点职业精神都没有\r", "公司请你来不是搞出问题来的,是搞定问题", "我都想改现有项目的架构了，但是一个是没时间，一个是担心别人不服…… 虽然我就是架构", " 说的在理，特别是有业务发展掺杂进来历史演变，烂其实是有“原因”的。", "开个分支让他试试呗，能有什么风险？", " 浪费人力啊，公司花钱又不是让他学习的，重构上面折腾花费的时间用来替老员工复制粘贴，打杂可以帮老员工省不少事呢，这样能加快现有项目进度啊。。。 ", " ", " 23333 那岂不是还做不成花架子😋", "如果现在的代码运行很好，不需要在此基础上加功能，建议不重构。\r", "如果需要加功能，而且拓展性不好，拆东墙补西墙的赶紧重构吧，不过新人的话，还是先熟悉代码吧～～", "重构不正是熟悉代码么……很多地方都是要拉出来重用的吧……", "建议先熟悉业务逻辑 /代码习惯，其他的晚点再说吧。", "你的代码写的很烂\r", " 可是楼主更担心的是怕打击新员工积极性，导致留不住人啊。", "刚到一家新公司到处喊 low 的一看就是新兵蛋子，\r", "最近公司刚来了个新兵蛋子，刚到公司第一天就到处喊 low ，结果观察了几天更 low ，\r", "一家公司的技术 low 是有原因的，比如一个人顶几个人的工作量等等，能够实现跑稳已经很好了。", "让他感受一下业务逻辑，再跟他撕逼一下（测试下他水平\r", "\r", "(他的水平==low)?'新兵蛋子装逼正常- -':'让他重构代码';", "别重构 ,  还没重构完就跑了 ..", "我老板一直是鼓励我重构的，不过是想重构哪，先把测试补全了再重构。", "只想问问，稍微有点历史的项目，哪家没有“烂代码”？\r", "\r", "而稍微成功点的项目，哪个是没有点“历史”的？\r", "\r", "很多“烂代码”，是由于历史造成的。换句话说，这个代码，当年就是好代码，当年整个社区就是这种 style 。\r", "\r", "也是因为这种 style ，造成了问题，社区积极改进，有了今天的新的规范。\r", "\r", "而一般来讲，没有太多经验的新人，拿着今天改进过的规范，吐槽前人的“烂”。。。\r", "\r", "其实。。再过 2 年，今天的“好代码”，又会被吐槽烂，历史一直回重复。\r", "\r", "觉得解决这个问题，主要还是看 leader 。不过稳定运行的模块，千万要慎重，烂比挂好。。。", "先好好熟悉业务再说，很多代码“烂”确实是各种稀奇古怪的需求造成的。\r", "好比我之前公司，有的代码活了 10 几年了，但没人敢真正的说去重构它。\r", "风险远大于收益。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>本周开始出现的奇怪问题，百度统计里的受访页面里开始出现外站的地址，并不是来路，而是直接访问这些地址打开了我的网站，而且基本是一个 UV 贡献了几百个 PV ，这是为啥呢，已经刷了我网站 20%的流量</p>\n<p>地址分别为：</p>\n<p><a href=\"http://mobads.baidu.com/ads/index.htm\" rel=\"nofollow\">http://mobads.baidu.com/ads/index.htm</a>\n<a href=\"http://mobads.baidu.com/ads/event/android_23_request_no_ad_after_filtration_and_no_ad_cache\" rel=\"nofollow\">http://mobads.baidu.com/ads/event/android_23_request_no_ad_after_filtration_and_no_ad_cache</a>\n<a href=\"http://mobads.baidu.com/ads/event/android_23_request_no_ad_after_filtration\" rel=\"nofollow\">http://mobads.baidu.com/ads/event/android_23_request_no_ad_after_filtration</a>\n<a href=\"http://mobads.baidu.com/ads/event/android_response_ad_count_is_0\" rel=\"nofollow\">http://mobads.baidu.com/ads/event/android_response_ad_count_is_0</a>\n<a href=\"http://www.yoka.com/fashion/?popularizeid=184\" rel=\"nofollow\">http://www.yoka.com/fashion/?popularizeid=184</a>\n<a href=\"http://www.yoka.com/star/?popularizeid=184\" rel=\"nofollow\">http://www.yoka.com/star/?popularizeid=184</a>\n<a href=\"http://www.yoka.com/luxury/?popularizeid=184\" rel=\"nofollow\">http://www.yoka.com/luxury/?popularizeid=184</a>\n<a href=\"http://basket3.7m.cn/\" rel=\"nofollow\">http://basket3.7m.cn/</a>\n<a href=\"http://www.ikuaishou.com/cnzz/com.kandian.vodapp.html\" rel=\"nofollow\">http://www.ikuaishou.com/cnzz/com.kandian.vodapp.html</a>\n<a href=\"http://www.yoka.com/?popularizeid=184\" rel=\"nofollow\">http://www.yoka.com/?popularizeid=184</a>\n<a href=\"http://www.ikuaishou.com/cnzz/com.kandian.hdtogoapp.html\" rel=\"nofollow\">http://www.ikuaishou.com/cnzz/com.kandian.hdtogoapp.html</a>\n<a href=\"http://www.yoka.com/beauty/face/?popularizeid=184\" rel=\"nofollow\">http://www.yoka.com/beauty/face/?popularizeid=184</a></p>\n<p>既然被统计到肯定就是打开了我的页面，但是我的广告流量也没上升。。这是咋回事呢。。。</p>\n</div></div>"], "reply": "8", "tittle": "网站统计到带外站 URL 的奇怪的流量", "comment": ["别人引流呢, 不用访问你的网站, 模拟请求统计网站, 然后网站的站长看了统计之后好奇就点进去了, 多刷一些流量很可观的", " 有这么奇葩的事情？？", " 是的 所以用日志分析是最好的", " 这种情况已经存在好多年了", " 峰哥哥也在这儿哈", " 哈你妹妹 哈哈哈", " @", " 已经占了我一半流量了。。。这也不太像引流啊。。。好奇怪啊啊啊\r", "\r", " ", " 居然还有这种刷流量方式，我也是学习了！！！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>自认为自己的起点有点低，英语水平也一塌糊涂，现在已经在恶补。 08 年从网页设计开始（历史原因选择了做网页设计），学 FLASH 的时候要写点脚本就慢慢开始偏向代码了，当然大学学了编程的基础。后来就是边做美工边写 ASP （不加 net 的 ASP ），期间断断续续的开发维护了个趣闻趣事资讯类的小网站文章手动转载更新，在维护这个站点花费了不少精力和时间。</p>\n<p>在做美工的几年学了不少 JS ，<a href=\"http://%E6%9C%89%E5%B8%AE%E5%90%8C%E4%BA%8B%E5%86%99%E8%BF%87.NET\" rel=\"nofollow\">有帮同事写过.NET</a> <a href=\"http://%E9%A1%BA%E4%BE%BF%E5%AD%A6%E4%B9%A0.NET\" rel=\"nofollow\">顺便学习.NET</a> ，在做 13 年感觉被“设计”虐得不行，开始痛下定决心转代码，开始直接上手 PHP ，找了一份套站的工作，主管不是很懂技术，不知道我没有 PHP 基础，也就收了我。一干就 3 年，期间公司换了不少领导，我也没能混到管理层，个人感觉是可能是性格原因，也可能是因为公司是不以技术为核心的公司。由于各种原因最终还是选择了辞职。</p>\n<p>由于这 3 年工作期间太忙或者是别的什么原因技术没有太大的进步，这期间巩固了 PHP 基础，学习入门了 Python （被 Python 代码的逼格吸引了我），整理了以往的项目发布到了“码云”<a href=\"https://git.oschina.net/dabpop139/\" rel=\"nofollow\">https://git.oschina.net/dabpop139/</a>。辞职后忽然发现自己技术上还有很多要学习。</p>\n<p>“兼职、创业、自由工作者了几个月”，靠些建站维护的单子勉强过日子。期间真正了解了 Github ，学习了 Laravel ，学习了 Vue ，学习各种框架，还有恶补索引了很多技术栈，混入了高端自由的 V2 社区，在 V2 认识了很多搞技术的朋友，这里非常感谢 V2 社区平台。也“好为人师”还尝试做了几期入门视频，建了学习交流群（说良心话精力、水平有限，没有用心去维护好），为了避免被吐槽我就不上视频链接了，有兴趣可以看我以往的帖子。</p>\n<p>说这么多就是想表达自己对技术很感兴趣，同时也感慨技术的更新和淘汰太快，对接下来的规划感觉还是有点迷茫。希望 V2 前辈们给点建议。和我一样 30 了还是混在一线的“码农” V 友也可以发发你的感慨。</p>\n</div></div>"], "reply": "36", "tittle": "30 了还是码农该如何规划自己——看了“都 40 了还是个小码农”有感而发", "comment": ["期待  看了--““ 30 了还是码农该如何规划自己——看了“都 40 了还是个小码农”有感而发”” 有感而发", "人到中年，我被上了规矩 renjian.163.com/16/1125/16/C6NU1SAB000181RV.html#", "码农到了 40 就是悲哀？谁规定的？\r", "\r", "以后到了 40 财务能自由，我还想安安稳稳写代码\r", "\r", "不图什么就是喜欢", "我算是混的比较差的，即将 40 ，财务还未自由", "《身份的焦虑》有空看看", " 关键问题就是在怎么实现财务自由，再加上年纪大了互联网加班严重，身体也吃不消。", "跟你一样 30 了，同样是互联网公司一线码农，不过我们公司加班不严重，绝大部分人七点半以前走了。这种工作状态，我想干到 50 岁应该吃得消的， 50 岁以后我已经攒了足够多的钱，可以提前过退休生活了。", "\r", "周围没有见过一个 40 岁左右的程序员财务自由的。\r", "即便是有人实现财务自由，\r", "那也肯定不是靠着当程序员实现的。", " BAT 或者老板好，上市的企业，那些程序员，基本财务自由了", "简单的讲，到了 30 还没年薪 50W ，就别想只靠上班写程序能有什么自由了。\r", "因为这个技术水平就基本宣告到不了「在某一个方向达到业界顶尖」的程度了。也就是说，在「深度」这个方向就已经碰到了天花板。大概不会有哪个老板以高薪聘请你的。\r", "\r", "这个时候就一定要在「广度」上充分施展开来。\r", "- 产品\r", "- 项目\r", "- 渠道\r", "还是要学习更多的知识，扩展自己的视野。看看某个时间点你能否发现新的机会，然后甩开膀子自己干。", "楼上戳中痛点了。。", " 现在正在往「广度」这方面靠，包括营销和渠道，慢慢在学习和了解编程以外的一些关联的知识。还有表达和写作感觉还是需要具备的能力。", "还是炒房吧~~写代码不如炒房", " BAT 工作几年后的一般码农月薪也就税前两三万，离财务自由还有十万八千里距离", " 蛤蛤, 说的不错... 然后没什么大菊观的老实码农再用马云\"月薪两三万的白领是最幸福的\"自我安慰一下, 再贷款买套房, 一辈子也就过去了...", " 目前来看，做啥都不如炒房……", " 炒房也要有资本在牛逼的地段炒，我在的二线城市几年过去房价不涨反跌，绝对套牢。", " 但是不止发 12 薪吧，今年华为的批发价是 28.8 ？这样的话工作几年之后就能涨到三四十不", " 看完感觉五味杂陈啊  ", " ", "拓展一下交际，不然到时候就要发隔壁那个找不到对象的帖子了= 。=", " 我说的是 BAT ，和一些好老板的小公司，上市前的码农。。。\r", "即使上市后，如阿里，貌似还是有的分股份的，换下来也算几十万，也不错。\r", "每个人对财务自由定义不一样。\r", "财务自由最原始的定义，应该是“不工作，凭现有资产，产生的收益，能覆盖日常支出”", " 我理解的财务自由，至少要做到去超市进口区不看价格随便拿，不光是不用工作就能维持日常支出，还要过得体面。如果按照原始定义，我想我已经自由了，大部分同学和 30 岁左右的同事也都自由了，这标准定的好像有点低。", "看回复里有些人动不动就要财务自由，我想说整个社会得达到你们眼中的财务自由的人有多少？\r", "工作这种事，除了养活自己外，还有个很重要的属性是要自己喜欢吧，如果喜欢自己从事的工作，干到老会有什么问题？", "喜欢写代码的话， 40 50 60 都不是问题，只有不喜欢才会感觉心慌慌。\r", "程序员 写代码 是一个有逼格光环的工作，所以难免会有 叶公好龙 的情况发生。\r", "代码写到老，没什么问题的，关键是不断学习不断更新，快速理解快速应用。\r", "实力到了，收入什么不是什么大问题，毕竟程序员，不是泥水匠！", " 做技术单纯一点，不过上了年纪也会有各种枷锁", "  赞一下，钱是赚不够的，欲望也是无止尽的……", "三十以後才明白~ 侯德健", "想问下楼主辞职前多少工资？ 辞职后再哪里接活儿？", "高端自由的 V2 社区是亮点，讲道理这个评价无敌。", "照你这么说，年纪 50 了还混工地的算什么。\r", "人活着开开心心写代码还需要别人眼光吗，国外七老八十的码农一样混的开，我相信国内五六十岁还开心的写代码的一样大有人在。", "很多事情其实由不得你，打工始终没出头，到了 40 ， 50 你还在公司当码农，一个月挣个死工资，你无所谓那你的子女呢，家里人呢。码农这个职业，年纪越大生产力越低大家都要承认。现在不规划好自己的仕途，我只能说你想当那种老了退休靠社保生活的人，这其实也不是问题，平平凡凡的人生也没什么不好，只是，社保真的靠得住吗？", " 我也认同应该有规划和回顾总结，即使乐观的认为自己 50 了还可以继续码代码为生，但现实问题和健康问题不得不考虑，估计到 50 身体已经熬不住了按现在大多数程序员的折腾现状，所以认为健康是最重要的前提，至于其他目前感觉拓展人脉是比较重要的，人与人之间最基础的莫过于信任，只有达成信任才能有共识，才有可能共事。", " 你同事和朋友比较 nb 。。。", " 哪家公司给程序员开 50w 的工资？", " 公司能坚持这么久？或者呆的项目", "活在别人的眼中"]},
{"content": ["<div class=\"topic_content\">给程序员撸了一个查看 Github 上各语言的 repositories 的排行榜，按照 star 排行的  \r<br>只是粗略查看，没有更详细的分类  \r<br>弄的不好，敬请谅解  \r<br>访问你地址：  \r<br>\r<br><a target=\"_blank\" href=\"http://github.rdnote.cn/\" rel=\"nofollow\">http://github.rdnote.cn/</a></div>"], "reply": "5", "tittle": "给程序员撸了一个查看 Github 上各语言的 repositories 的排行榜，按照 star 排行的", "comment": ["不知道有什么意义", " 瞎搞的玩\r", "\r", "我熟悉三门语言，我就想去看 github 上，这些语言有什么好的 repositories 。  \r", "每次在 GitHub 搜索太麻烦了", "不错，收藏之", "希望能帮到大家", "挺好的，支持 @@"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近要用一个阿里的消息服务，结果发现阿里云有两个基本重叠的产品，消息服务（ MNS ）和消息队列（ ONS ）。\n你司💊这种事情多么？</p>\n</div></div>", "<div class=\"topic_content\">前两天刚说到这事，其中之一（ ONS ）就开源了，是不是意味着阿里内部放弃这个了呢？</div>", "<div class=\"topic_content\"><a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MzA5Nzc4OTA1Mw==&amp;mid=2659598572&amp;idx=1&amp;sn=0b80d983295d772f3321fc1f305d39fb&amp;chksm=8be995febc9e1ce88b1f05a37652b01523ddae94846e6b3586a914fcf82415ea67ff5fb4c835#rd\" rel=\"nofollow\">http://mp.weixin.qq.com/s?__biz=MzA5Nzc4OTA1Mw==&amp;mid=2659598572&amp;idx=1&amp;sn=0b80d983295d772f3321fc1f305d39fb&amp;chksm=8be995febc9e1ce88b1f05a37652b01523ddae94846e6b3586a914fcf82415ea67ff5fb4c835#rd</a></div>"], "reply": "28", "tittle": "大企业内部是不是也是各自造轮子的？", "comment": ["不造轮子晋级 PPT 怎么写？", "不要过早优化啊", "昨天听闻企鹅内部各部门需要 IM 功能的话都是自己独自开发……", "ONS 这个项目名字不错。", " 老司机您好", "当然多了，越是大企业，部门墙越坚不可摧。", "用 ONS  MNS 不稳定", "公司代码库里搜下 StringUtils 有多少", "不造轮子哪来的 KPI ？", "当你从部门领导或是 manager 的角度思考这个问题的时候你就不会有这样的疑问了。说白了很多事情都是屁股决定脑袋的事，尤其是大公司，每个部门都要弄出点东西出来，都要向领导邀功，这样的轮子就不可避免了。", "据说大疼讯就是这样", " ,看了产品的说明， MNS 好像是要新一点，但阿里的人建议用 MNS 。而且看他们的文档， MNS 可靠性要高很多。", "腾讯内部重复早轮子的事多了~ 一个部门一个轮子~", "其实很想知道这是大企业的通病还是国内 IT 公司的特有现象", "其实事业部之间这么做我觉得正常，但阿里云作为一个事业部，内部都没有统一的规划，确实有点匪夷所用。", "我弱弱的问一句，既然这种行为在大公司都已经成为潜规则。\r", "那为什么不在内部变成一种收费的服务呢？而且如果内部推行成功不是还可以向外发展吗？", "说的好像小公司不造轮子一样。。。\r", "只要有人的地方，就会出现不同程度的轮子制造业", " 我觉得全世界都一样，一旦规模大了以后，软件功能的复杂度指数级提升，想要一直维持最初的简洁高效就很难了。\r", "\r", "比如有一个组件一开始是公共的，两个部门在使用，后来 A 部门由于业务需求要增加新的功能， B 部门觉得目前业务量很大，需要保证稳定性，加的功能自己这边不需要，而且需要改动原来的处理逻辑，有一定风险，所以不愿意在这个组件中加入这样的功能。为了快速应对业务发展， A 部门决定 fork 这个组件，作为另外一个分支来开发，用于自己的业务中。之后， A 和 B 部门共同需要一个功能，结果都在自己的项目中添加了，想将两个分支的代码合并工作量大，没有人愿意花时间做这些事（绩效相关）。在不断发展的过程中，又会出现 C 、 D 、 E 部门，又会因为很多原因造了各种轮子。", "我们小公司，框架是自己写的， service 调用协议也是自己写的，代码部署系统也是自己写的，轮子造了不下十个", " 代码部署这种东西没有谁会直接开源吧？", " 有开源的 walle 啊", "一般一个公司造一套轮子我可以理解，毕竟要可控。", "大公司每个部门可能交流多,但是其实内部用的东西却很少拿给外人看的,想要源代码?加入我组再说吧.", "平安万里通平安一帐通平安金管家平安好福利平安好医生平安万家医疗平安普惠平安证券平安陆金所……基本上每一家分公司都有业务竞争功能重叠", "一样。轮子满天飞。这种事情怎么说呢， KPI 是一方面，需求也是一方面，别人的轮子不适合自己的业务，别人没有痛点，改进慢。", "我们是优先考虑现成的成熟的方案，如果解决不了问题，就只能修改或造轮子了，比如基于业务场景做的分布式 kv 存储。当然，为 KPI 造轮子的也是有的", "在大公司，人才众多。要想晋升，对技术而言，无非两条路：\r", "路 1 ，做业务，让业务体现能力\r", "路 2 ，做基础服务或者通用能力。让通用产品或者架构体现能力。\r", "\r", "路 1 呢，在大公司靠谱的业务太少了，这个要看运气，真心是运气成分。\r", "路 2 呢，前人都做了太多基础通用能力的东西。当然，往往是做完后晋升成功，甩手啦。后面的人，要么去填坑，要么自己造轮子。\r", "\r", "总结：不造轮子晋级 PPT 怎么写？ ！！！\r", "\r", "我是 PM ，以上是对我身边的技术朋友的观察总结。", "都差不多"]},
{"content": ["<div class=\"topic_content\">很多 v 友 收入也还不错 但是在北广上买房 或者财务自由还很远 回老家又找不到合适的工作。比较迷茫。\r<br>大家有没想过 找一个可以连锁的项目。做起来可以在到各地方开连锁。比如做起来回老家做。\r<br>一起合伙出钱 一人出个能接受不会影响自己生活的本钱 。\r<br>一个人 10-100w 注册一个公司 按出资算股份。\r<br>找一个靠谱的项目 什么网络 金融 这些都算了。搞点实体靠谱的项目。\r<br>比放到银行收利息好很多吧。\r<br>v 友肯定很多有抱负有本事却没有本钱的 各方面人才大神都有。\r<br>这样人一多。创个业。大家集思广益。也许就成了。\r<br>很多巨头刚开始不也是一群人做的。\r<br>本人有很多不错的实体项目。当然谁有更好的项目。也可以聊。\r<br>有兴趣大家可以探讨一下。\r<br>说什么骗子的就不要看了。这年头没人是傻子。不要浪费时间喷。大家都很忙的。</div>"], "reply": "35", "tittle": "看到最近好多北广上的 v 友迷茫 有一个合伙创业想法", "comment": ["做实体干嘛 单子大点的 有点本钱 来菲律宾 现在好机会", " 不要浪费时间喷。大家都很忙的。", "我喷了吗。。。", "难道是黑产？", "我把话说明白吧 我是觉得大家都是写代码 转到实业去创业 不熟悉这个领域 不推荐. 我说的来菲律宾 指的是 现在菲律宾打掉一堆菠菜网站  只要胆子大点 有点本钱 来 makati 开个小公司 二三个人自己写个网站 投点钱做运营  就能有收入", "既然知道大家都很忙，还发这种浪费别人时间的帖子干什么？", "  上面说了 找一个靠谱的项目 什么网络 金融 这些都算了。搞点实体靠谱的项目。\r", "连锁的  餐饮 快消为主。\r", "本人不做黑产。只是有朋友做。了解一些内幕而已。", "  @", "  最近这边抓菠菜的网站很多 前几天克拉克抓了 1000 多人  最近另外一个市也抓了几百人", " 国内 。合法。实体。", "  嗯  我发表下自己看法  我觉得程序员最大的优势就是写代码了 这边上游下游都有现成的接入商 只要感冒风险 有点本钱  来这边做菠菜  是个机会  我知道有个公司靠世界杯期间赚了 1 千多万", " \r", "\r", " 国内 。合法。实体。 == 很难赚钱。", " 主要以靠谱和合法为主。好赚钱的行业基本都被垄断了。项目谁都有。主要是成本和时间这两个问题。如果人多。这些都不是问题。", " 哥们。别带歪了主题好吗。我不做黑产。 ok ？", " 好吧 要是有谁想听 我来给大家分析下", "做淘宝客相关的呢", "菠菜确实是发家致富好途径\r", "合法性的话，境外注册，境外运营\r", "但是现在菠菜网站超多，运营投入要求很高\r", "另外跑路才开心，小菠菜站没那么好混\r", "国内俩擦边球， max 和 vpgame 确实是混得风生水起", " 老哥这么一说，这两天在凤凰卫视确实听到过这个消息", "  @", "   我研究了下这边的公司 绝大部分都是 几个干活的 养不干活的  大家都是写代码的 菠菜的站技术含量不高的 常常是坑一批 换个域名再去坑 或者冒牌大公司 去坑  这些从业人员的技术都比较水  来些技术好的 胆子大点的  自己做 绝对能发   打工又是另谈。。", "这边老板都是福建一带的  感觉素质一般.", "  我在菲律宾，对你说的有兴趣，怎么联系你？", " 老哥看来是行内人，可以", " 钓鱼执法的来了（手动滑稽）", "老哥稳，昨个才看到菲律宾抓了一百多个华人说是涉嫌菠菜还是读博来着", "合伙做生意是小资走向无产的最佳方式。", " 神精髓", "  要不你留个联系方式 我们交流交流？ @", "  这边越来越不好做了  不过这也是机会   \r", "唉 刚刚还躺在床上 被叫过来加班了", "回你的戒赌吧发这样的贴去吧，不送。", "  我不敢在这里留联系方式。", "你得有马云的口才说服别人跟着你一起干，有这能力干什么都能成功。", "年轻人，你的想法很危险", "败家排行榜：\r", "\r", "第一名：卖房创业！\r", "第二名：卖房炒股！\r", "第三名：炒股！\r", "并列第三名：创业！\r", "第五名： xi 毒\r", "第六名：炒期货\r", "第七名：赌博\r", "第八名：储蓄、理财\r", "第九名：养小三\r", "第十名：淘宝\r", "\r", "第十名：淘宝", "啥是菠菜？", "为了创业而创业，靠谱的创业是先有想法再创业，你连想法都没有", "楼主你确定没走错站？\r", "来 V2EX 招合伙人？ 10W 起步？\r", "中国合伙人看多了吧……", "  给你 gmail 邮件了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我用的广州长城宽带，速度比较坑，我也有一台腾讯云服务器，广州区的。我想用它代理来上网类似 ss 的效果，只是为了提高速度。\n请问我应该怎样配置？服务器是 linux 的，电脑上的环境是 windows 。</p>\n</div></div>"], "reply": "22", "tittle": "我想用国内的一台服务器代理上网，怎样配置？", "comment": ["那不就可以在 linux 上搭个 ss server 来搞定了，电脑全局代理就好了哇", "搜索关键词 openvpn server 剩下的自己看", "用 cow 做 http 代理，记得加验证", "先看看这个帖子 ", "为什么不干脆换一个宽带呢？", "关键词 haproxy 转发", "同 5 楼，买云主机\r", "带宽的钱还不如再开一条宽带。", "开 ovpn 啊", "第一次回答，说的不好请见谅。\r", "\r", "你自己家用的宽带慢，即使你买的腾讯云很快，但是首先你要连上腾讯云，速度还是取决于从你家到腾讯云的速度。\r", "\r", "好比你要去市里坐飞机到某地，飞机飞 2 小时，如果直接在家坐火车去，要 3 个小时，然而你到市里就需要 2 个小时，飞机飞的快并没有用。", " 长宽好像有连接腾讯云的。听人说挺不错的", " 果然没说好", "haproxy 转发，不过腾讯云得保证带宽", "壕任性~~~", "请最好一个人用，另外请尽量回避阿里云。因为阿里云发过一个通知，叫禁止流量透传。如果你的行为被阿里认定为为了回避垄断性网间结算价格而私设的穿透，很可能会按照阿里和被透传方骨干网的私下协议进行处理关停封禁等。最好的方法是提升接入质量(不是歧视小运营商，但他们网速不好的原因是因为没参与骨干网投资建设所以网间结算价格被歧视了)", " 果然说的一般", " 没事，多失误几次就张教训了", " 如果是出于个人加速目的，小流量使用，不超过 20GB/月，会不会被封号？", " 完全看你的主机提供商和骨干网方有什么样的 py 交易了。阿里可能为了谈一个优惠价格才禁止传透骨干网的，其他云不一定，与此同时很多收费跨网加速器干的同样的事但是基本没人管，完全是因为交易方式不同(比如收费不同或限制访问方式等)", "  完全不用担心 随便用", "我用的是腾讯云，百度搜索 linux 搭建 ss 服务器教程，照着这样做的，现在一直运行正常。百度 ip 显示的是广东腾讯总部", "国内连国内 pptp 就行了，简单，还不会被干扰", "前两天朋友报税需要上海 ip ，刚帮朋友搞过。\r", "window 下有个软件叫 MyEnTunnel ，这个软件能够与远程 linux 主机建立 ssh 通道，仅需一对 linux 用户密码。\r", "一旦建立了这个通道，本机 Internet 选项里设置 socket5 全局代理就可以了。\r", "\r", "我自己的 vpn 就是基于这个做的，搭配 chrome 插件，简单快捷。\r", "Mac 下对应软件叫做 issh."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>花了一个月的业余时间，终于完成了它。<code>HYAlertController</code>是一款极简形式的 Alert 控件，包含多种使用场景，并且拥有和 Apple 的<code>UIAlertController</code>一样的语法，所以您可以轻松地在您自己的 app 中使用它。</p>\n<p>并且用法类似于<code>UIAlertController</code>，不过<code>HYAlertController</code>提供了三种风格: Alert 、 Sheet 和 Share 。其中 Share 风格是自己新增的，目的是用于分享页样式。</p>\n<p>更多的信息请查看项目地址<a href=\"https://github.com/castial/HYAlertController\" rel=\"nofollow\">https://github.com/castial/HYAlertController</a>，推荐查看完整 demo ，希望能帮到大家。</p>\n</div></div>"], "reply": "2", "tittle": "HYAlertController: 简洁优雅的 Alert 视图组件", "comment": ["支持一下，虽然这个 ui 看上去一般，可以尝试搞成卡片化的，类似 iOS10 的风格，会比现在好", " 谢谢，后面会努力的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>大家好，我需要在数据库获取十几万条数据，然后通过得到的这些数据，计算得到十几个参数（统计计算：方差、极差等）。</p>\n<p>现在的任务是，需要从前端得到这所有的十几万条数据，以及另外计算得到的十几个参数。其宗问题是，在数据库中获取数据的过程非常慢，大约的两分钟。</p>\n<p>现在我有几种解决方案：</p>\n<ol>\n<li>后端得到这十几万条数据，后端提供一个 api ，用来处理前端的 get 请求，将这些数据发送到前端，然后在前端计算另外的十几个参数。这里有可能占用内存较大，而且需要客户端来完成计算。</li>\n<li>后端得到这十几万条数据，然后将这些数据存储为一个类的类变量。后端提供多个 api ，首先要有得到十几万条结果数据的 api ，还要有另外的十几个 api 用来分别得到另外十几个参数，也就是说例如需要得到方差的时候，使用类里面存储的十几万条结果实时计算得到。这个设计的问题，可能是这十几万条数据比较占用内存，在后端长期驻留。</li>\n<li>后端同样提供多个 api ，像上面一样。但是，那十几条参数的 api 都不涉及计算，而是在获取十几万条结果数据的 api 里面计算得到，然后存储到类的私有变量里面。十几条参数的 api 仅仅是这些似有成员的 getter 就可以。这个设计的问题可能是不统一，因为前端必须先调用获取十几万条结果的 api ，才能调用其他的 api ，否则得到的结果是假的结果。但是这个设计对内存友好，因为只是在一个函数里面存储了十几万条数据，等出了这个函数就垃圾回收了。</li>\n<li>最后一种方案是只提供一个 api ，这个 api 返回一个 json 。 json 里面除了提供十几万条结果数据之外，还提供另外的十几个参数。</li>\n</ol>\n<p>描述的可能比较麻烦，非常感谢大家能为我指点迷津！感谢</p>\n</div></div>"], "reply": "26", "tittle": "API 的设计问题", "comment": ["4 最好", "大量数据还是服务端运算吧，毕竟浏览器效率提不上去", "只提供一个 api ，这个 api 返回一个 json 。只提供另外的十几个参数。\r", "返回几十万条太费资源，浏览器也容易卡死。\r", "这属于在服务端计算，那么大的数量，建议不要传给客户端耗费带宽。", "同三楼...json 把十几万条数据返回......真的大丈夫?", "用任务队列吧，前端先把数据上传给后端，后端开始计算。前端定期 poll 计算状态，直到取得结果。\r", "十几万条数据交给前端浏览器算会消耗很多内存的。", "对实时性要求不高的话就提前算好，存另一个表里，然后定时更新", " 需求里客户端需要那十几万条数据的，不然也不会傻到发送给客户端了。除了分页慢慢传，还能有什么办法？", "能描述下是什么业务场景需要把这些数据放在客户端吗？我觉得这个设计从根本上就有问题。", " @", " 谢谢回复，我打算压缩之后在传送，这个应该可以接受吧", " 谢谢，任务队列这个我了解一下去", " @", " 客户要求我们做数据可视化，将数据的分布情况显示到网页上，请教一下，有好的方法，不需要将数据传到前端吗？感谢", "另外，考虑到这十几万条数据数据的更新频率（业务上不可能，也做不到要求完全实时的最新数据。毕竟从查数据库到返回结果也要十多分钟），可以把楼主说的第 4 项的返回值存成一个静态文件，还可以 zip 一下。然后提供一个接口返回该 zip 的下载地址即可。按业务需求，每隔一段时间生成一个新文件（不马上把旧的删除，因为可能还有客户端正在下载该旧文件），然后那个接口指向新文件的下载地址。\r", "\r", "\r", "\r", " \r", " \r", " \r", "我还是觉得楼主的设计从根本上就有问题。", " 具体是怎么个压缩法? 如果压缩后还是很大. 浏览器渲染会很慢. 任务队列是个方法. 另外. 计算结果是否可以放缓存? 还是说计算结果会经常变?", "x-y problem", "x-y problem", " 你觉得可视化需要在一个页面里描绘十几万个点吗？\r", "听说过抽样和统计吗？\r", "如果觉得抽样统计还不能满足需求，就在服务器上把图画好了再发过去。", "从前端获得十几万条数据是什么意思？", "几十万条数据压缩一下，也就几兆啊，为啥不能传…", "不要小看前端处理能力 -_- \r", "---\r", "\r", "感觉是不复杂的数据结构：大数据性能测试\r", "感觉楼主要考虑的是后端缓存，前端考虑的是绘制的程度，你确定要绘制那么精细的图表？\r", "没讲过那么精细的图表就是，如果有了缓存，你就可以抽样，比如 1/2 这样返回。\r", "你的 IO 压力减少了，同时各个函数间如果同意用一分缓存，连内存压力也减少了。\r", "前端也能减少数据获取量，你的 CDN 也能减少传输量了。\r", "\r", "---\r", "你究竟遇到啥问题，好像和你数量级没啥关系就是。", "不是专业做服务器开发的，有个建议，可以考虑中间用 mongodb 过度，有公司是这样做的", " 抽样的方法是个好办法，我回去仔细想想。\r", " 我的数据不是实时的，是点一下按钮，然后开始计算，然后现实。", " 谢谢提供思路，我确实可以不用把全部的数据弄过来，谢了。", "见过一个请求 6mb 的应用，用 ng2 做客户端排序和搜索，除了加载慢点也没啥毛病。客户端崩溃是不太可能的，浏览器还没娇惯到存十几兆数据就崩溃。其实我有一次用 js 读了 1g 的视频文件到内存里都没有崩溃，就是多吃了点内存………", "我觉得你要考虑考虑如果这个接口并发高了服务端会不会崩溃", " 数据可视化的话，就分页+一些算好的数据传过去就好了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>从 typora 的选项，打开主题文件夹，然后运行命令</p>\n<p><code>curl -O <a href=\"https://gist.githubusercontent.com/cyio/5b5eecb408a44fdb8a8b0c7b0bd4971d/raw/5eaf1b2f0d8723d6025d6c564f336212adbe27e2/base.user.css\" rel=\"nofollow\">https://gist.githubusercontent.com/cyio/5b5eecb408a44fdb8a8b0c7b0bd4971d/raw/5eaf1b2f0d8723d6025d6c564f336212adbe27e2/base.user.css</a></code></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "typora 引用内容字体不需要斜体", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>博客建了很长时间，总算有了点流量，下面这几点的访问量：\n<img alt=\"...\" src=\"http://ofshsewq3.bkt.clouddn.com/pv.png\"></p>\n<p>大家的访问量怎么样？</p>\n</div></div>"], "reply": "11", "tittle": "大家的博客日均多少 PV, UV?", "comment": ["所以又到了贴 url 的时间了吗……", " 我很自觉的没有贴。。。单纯好奇大家的流量而已", "每天 5 ， 6 个人访问首页吧。", "\r", "\r", "我的大概一天一两千 IP", "以前 wp 时，日 pv 几百左右， ip 大概 50 到 70 左右。有时候有新模板就 100 到 200 。\r", "后来又新开一个，流量大概就 10 左右。", "20-30 吧 PV", " 博主你怎么做到的？博客才两篇文章？", " 因为域名很独特，哈哈", " ttt.tt 跳转过去了", "0-1"]},
{"content": ["<div class=\"topic_content\">需求一款小的合同成本管理程序，应该是这个名字吧，大概需求如下：\r<br>\r<br>\r<br>客户名录：客户 1 、客户 2 、客户 3 、客户 4\r<br>\r<br>\r<br>合同财务\r<br>功能 1|------合同应收款--合同已收款--合同未收款--合同款结清\r<br>功能 2|------合同成本 1--合同成本 2--合同成本 3 （税、人工、耗材等直接费用）\r<br>功能 3|------本合同利润（应收款减应付款）\r<br>\r<br>\r<br>年度总收入（所有合同应收款）\r<br>年度总支出（所有合同应付款）\r<br>年度纯利润（所有合同应收款减应付款）\r<br>\r<br>有哪款程序可以满足我？谢谢。</div>"], "reply": "3", "tittle": "需求一款小的合同成本管理程序", "comment": ["你是要派单？", "Excel 就行了", "我也有这个需求，不过准备自己写"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>先贴上源码地址：<a href=\"https://code.google.com/archive/p/iphonecal/source/default/source\" rel=\"nofollow\">Here</a>\n代码是是 08 年写的，这点还是非常服的，这个时候我还在上高中。 08 年到现在 OC 在一些特性上改进很多，其中使用的<code>CFGregorianDate</code>相关 api 在 iOS 8.0 之后也不建议使用了，所以这里我只说我确认不是好的实践的部分。</p>\n<p><strong>先来看下头文件:</strong></p>\n<pre><code>//\n//  CalendarView.h\n//  ZhangBen\n//\n//  Created by tinyfool on 08-10-26.\n//  Copyright 2008 __MyCompanyName__. All rights reserved.\n//\n\n#import &lt;UIKit/UIKit.h&gt;\n\n@protocol CalendarViewDelegate;\n\n@interface TdCalendarView : UIView {\n\tCFGregorianDate currentMonthDate;\n\tCFGregorianDate currentSelectDate;\n\tCFAbsoluteTime\tcurrentTime;\n\tUIImageView* viewImageView;\n\tid&lt;CalendarViewDelegate&gt; calendarViewDelegate;\n\tint *monthFlagArray; \n}\n\n@property CFGregorianDate currentMonthDate;\n@property CFGregorianDate currentSelectDate;\n@property CFAbsoluteTime  currentTime;\n\n@property (nonatomic, retain) UIImageView* viewImageView;\n@property (nonatomic, assign) id&lt;CalendarViewDelegate&gt; calendarViewDelegate;\n-(int)getDayCountOfaMonth:(CFGregorianDate)date;\n-(int)getMonthWeekday:(CFGregorianDate)date;\n-(int)getDayFlag:(int)day;\n-(void)setDayFlag:(int)day flag:(int)flag;\n-(void)clearAllDayFlag;\n@end\n\n\n\n@protocol CalendarViewDelegate&lt;NSObject&gt;\n@optional\n- (void) selectDateChanged:(CFGregorianDate) selectDate;\n- (void) monthChanged:(CFGregorianDate) currentMonth viewLeftTop:(CGPoint)viewLeftTop height:(float)height;\n- (void) beforeMonthChange:(TdCalendarView*) calendarView willto:(CFGregorianDate) currentMonth;\n@end\n</code></pre>\n<p>代码格式我就不说了，空格写的很随意，大小写对于我这种强迫症来说也很受不了。最重要的是我认为稍微参考下苹果 framework 中函数的命名方式，就不会写出协议中这么扯淡的命名。\ninterface 中的命名大多数都还不错，但是<code>-(void)setDayFlag:(int)day flag:(int)flag;</code>这个是什么鬼，我认为<code>- (void)setFlag:(int)flag forDay:(int)day;</code>更好。</p>\n<p><strong>下面来看下源文件：</strong></p>\n<p>源文件中定义了全局的几个变量：</p>\n<pre><code>const float headHeight=60;\nconst float itemHeight=35;\nconst float prevNextButtonSize=20;\nconst float prevNextButtonSpaceWidth=15;\nconst float prevNextButtonSpaceHeight=12;\nconst float titleFontSize=30;\nconst int\tweekFontSize=12;\n</code></pre>\n<p>这几个变量主要是来控制试图的大小、字体的大小，只有在这个文件内部试哟哦难过，没有用<code>static</code>修饰，不是很明白，可能 tinyfool 记忆里好，不会再工程中其他地方使用相同名字的变量。</p>\n<p><em><em>学 C 语言的时候，大概都做过这么一个练习：</em>获取某年某月的天数</em>。来看看 tinyfool 的实现：**</p>\n<pre><code>-(int)getDayCountOfaMonth:(CFGregorianDate)date{\n\tswitch (date.month) {\n\t\tcase 1:\n\t\tcase 3:\n\t\tcase 5:\n\t\tcase 7:\n\t\tcase 8:\n\t\tcase 10:\n\t\tcase 12:\n\t\t\treturn 31;\n\t\t\t\n\t\tcase 2:\n\t\t\tif((date.year % 4==0 &amp;&amp; date.year % 100!=0) || date.year % 400==0)\n\t\t\t\treturn 29;\n\t\t\telse\n\t\t\t\treturn 28;\n\t\tcase 4:\n\t\tcase 6:\n\t\tcase 9:\t\t\n\t\tcase 11:\n\t\t\treturn 30;\n\t\tdefault:\n\t\t\treturn 31;\n\t}\n}\n</code></pre>\n<p>interesting ，自行体会一下。</p>\n<p><strong>实现中有很多类似的实践（个人认为这不是好的实践）：</strong></p>\n<pre><code>- (void)movePrevMonth{\n\tif(currentMonthDate.month&gt;1)\n\t\tcurrentMonthDate.month-=1;\n\telse\n\t{\n\t\tcurrentMonthDate.month=12;\n\t\tcurrentMonthDate.year-=1;\n\t}\n\t[self movePrevNext:0];\n}\n</code></pre>\n<p><strong>再来看下这个类的析构函数：</strong></p>\n<pre><code>- (void)dealloc {\n    [super dealloc];\n    free(monthFlagArray);\n}\n</code></pre>\n<p>Excuse me. 这里虽然不太可能出现崩溃的情况，但不是应该先释放子类持有的资源？</p>\n<p><strong>最后，总结一些 tinyfool 的变量命名风格：<code>title_Month</code>、<code>weekfont</code>、<code>tabHeight</code>、<code>s_width</code>。</strong></p>\n<hr>\n<p>我观察到的是，如果有人在微博上反驳他什么，他通常的回应是毫无道理（有道理的时候也有，少），其他的不想评价，怕被喷。</p>\n</div></div>", "<div class=\"topic_content\">上边有些地方表达不当，让大家误会了。 sorry</div>"], "reply": "63", "tittle": "看了眼 tinyfool 经常提的日历控件", "comment": ["你是说那个整天讲鸡汤的那个胖子吗", "求闰年的算法好像错了", "tiny fool 是小笨蛋？", " 嗯，是", "技术圈有点小知名度的，有干货的还是不多", " 有个小女友的那位？", "买了那本书，感觉鸡汤感太浓", "之前其实 V2EX 吐槽这个控件的人还蛮多。不过我很久不怎么上 V2EX ，甚至有时候搜索东西的时候，偶然发现自己被长篇大论的批判了一番都不知道，所以也都没回应。当然，之前包括吐槽这个插件的人，也都是一句话说写得烂，我也不知道该咋回应，所以，看到了也只好由他去了。\r", "\r", "既然你这么认真的写，我就聊两句。\r", "\r", "我写过一篇文章，其实提到过这个插件的前因后果，楼主包括其他人也都说我经常提到这个插件。没错，提过很多次，我好像没有说过这个东西有多牛逼。我只是说，在那个时候，大概是 IOS SDK 发布了几个月以后，没有啥日历插件可用，我就做了一个。\r", "\r", "刚有 SDK 的时候，我其实并没有 iOS 设备，虽然很喜欢，但是确实买不起 iPhone ，很多人可能也记得当年 iPhone 其实也并不好买，那时候国内还没有行货呢。我的一个朋友的公司的活动上，抽奖，偏向我让我得到了一个 iPod touch 。我就想写个东西，写啥呢，就想写个记账软件，毕竟月月月光，也希望可以存点钱。设计的思路是首页有个日历，来显示最近一个月啥时候有收支。所以，就需要一个日历控件，当时并没有。就大概花了一个晚上做了一个吧。现在找不到原始的代码库， Google Code 的代码库好像也看不了修改历史了。细节我记得不了，反正这就是一个晚上或者几个晚上搞出来的东西，我那时候的主业是做搜索，基于 lucene 。\r", "\r", "后来，做了两个星期，也就是学 iOS 两个星期后，有个大概样子了。这时候有道词典的人，通过新浪的一个朋友，找到了霍炬，辗转找到了我。他们当时想迅速做一个 iOS 版本占领市场，当时好像金山已经发了版本。但是有道那边，没有有 Mac/iOS 经历的工程师。于是我就答应帮他们做。\r", "\r", "然后，做了一个月上线。我自己的记账软件就搁置了，一直到了 2013 年，我在上海的时候，才想起来，有这么一个搁置了多年的软件，找我的 CTO 补了个结尾，修改了一点 UI ，就上架了。以前有文章写过这个故事。\r", "\r", "这个代码，我没记错的话，就是闰年有个 bug 改过一次，发布过就没改过了。", "😮", "好，说说代码风格。\r", "\r", "我代码风格一般。写这个代码的时候，我日常写三种语言， Java ， Php 和 OC 。代码风格混合，混乱肯定是有的。这个锅我的，我背。总体上是准备走 Apple 风格的，某些部分懒得改了，估计就比较乱了。\r", "\r", "const 是常量，不是变量，不过这里确实比较没有怎么考虑。一开始是没准备开源的，做完了就直接开了。这锅也是我的。\r", "\r", "getDayCountOfaMonth 的实现我没看出来锅在哪里。\r", "\r", "movePrevMonth ，本来就是一个简单的功能，没啥太复杂的思考。\r", "\r", "dealloc 的问题，你可能不知道，在早期 SDK 的时候， bug 比较多，我们要实验各种方法避免内存泄漏，有些写法比较诡异，但是在某个版本下，反而效果是好的。到了今天 SDK 也还是会出现一些问题。\r", "\r", "这个东西开源完了以后的大概 2-3 年，很火，每天都有邮件来咨询各种问题，最早版本，甚至没有 demo 代码和事例。后来问的人多了，就加上了（在项目说明里面，不过 google code 已经把这些部分都吃掉了，维护过 google code 项目的人应该知道）。\r", "\r", "后来，系统提供了一个什么方法我记不得了，而且开源的日历比较多，而且都比这个好看，这个慢慢就无人问津了吧。\r", "\r", "最搞笑的是，曾经有个人想把这个东西汉化（操，不知道用什么词好，本地化？）成老挝语，还是柬埔寨语来着，但是代码不是完全看得懂，还写了长篇大论来问我。\r", "\r", "不过，我好像从来没有说过这个日历有多牛，这个日历甚至都没有任何的图片资源，一切都是用字符和画线的方式画的。我的所有描述大概应该都是，在最早的时候， iOS 程序员连日历控件都没有，我需要用的时候怎么办呢？那就自己写一个吧。", " 该用国际化这个词", " 只加了某一国而已，而且当时也没有国际化的基础，代码都是写死的，他也想直接换，但是不会", "你这样发帖好么……\r", "谁不知道 Code Review 的体验：\r", "\r", " ", " getDayCountOfaMonth ：我认为在查表的方式好一点；\r", "getDayCountOfaMonth ： if/else 花括号，不是啥问题，个人喜好吧", " 没事想跟前辈学下，就随便看看。", " \r", "\r", "我觉得你看问题太浮于表面了，这个代码不是不能挑问题，问题很多。\r", "\r", "问题是，去挑 1 个 500 行，在 iOS 包括苹果官方，大多数编码规则还在形成期的代码的风格问题，唉。\r", "\r", "在那个时间阶段，比较像现在 Swift ，每次升级 iOS SDK ，里面项目模版的写法都会变的一塌糊涂，连苹果的风格都没稳定下来。\r", "\r", "关注些更有意义的事情，和更有意义的人吧。\r", "\r", "如果你能看到，有道词典 iOS 版第一版的代码，估计你也会觉得很烂。\r", "\r", "没错，确实不怎么样，可惜我都找不到了，否则说不定我也可以开源出来（有道同意的话）。不过它的意义在于，让有道至少早了几个月到半年，发版本。对有道的开发者也是一个对 iOS 开发祛魅的过程，原来这么简单就行，这么烂的代码也可以上线，而且下载量这么凶猛，哈哈。", "我一直懒得开源，我们实现的 iBookAuthor 解析器和 Cocoa touch Android 版，不过回头等我懒癌结束了，欢迎你们去看你，不过请不要揪着代码风格。看看内容，看看具体实现，看看架构，那两个东西蛮好玩的。\r", "\r", "前者还好。后者光把环境搭起来，编译好全部的依赖可能就需要一个小时。\r", "\r", "要是真有天我们开了，欢迎去研究研究。\r", "\r", "\r", "另外，我最近扒了一个 Google 的库，改造成了 Cocoa 的接口，拖延症不加剧的话，也许 1-2 个月会开源，到时候有兴趣可以看看。", " 嗯，我没有别的意思，只想学习一下。 08 年 10 月， iOS 才发布一年多，苹果风格不稳定，这个问题没考虑到。", "July 11, 2008\tiPhone OS 2.0 Final 发布，同时才有的 App Store 。", " ？（能被 4 整除且不能被 100 整除）或（能被 400 整除）", "角度不太对。\r", "评价软件应该看他优点多突出，对于净挑毛病的，应该没几个人有底气....", "想起了 Dash 的 iOS 版", " 手机上只看到 date.year % 4==0 这一截。。。电脑上看到完整的没问题", " 恩，那个有钱的死胖子 2333333", "大家都看得出来你什么意思，即使你不停的说『没有别的意思』。", "找上门来不好意思说了，哈哈哈哈哈", "气氛有点怪", "若要补刀应该让我们见识下什么是经常提", "无可厚非啊，肯开源，就已经很了不起了。\r", "挑毛病，谁不会，从头到尾的起一个控件、写好、开源啊，再说， ios 刚发布的那时候，国内连资料都很少，更加别说开源控件了。\r", "有时间翻翻自己 N 年前写的代码呗，每个人都是在不停的成长的，对不对？", " 该续费了", "code review 别人几年前的代码 然后说 low  相信楼主不是傻逼 就是二百五脑袋被驴提过了", "我觉得楼主说的没毛病", "不知道你们在喷什么，看看当时的代码指出来有问题怎么了，谁不是一点点成长起来的", "真的不是不能批评，不过，我觉得，做性能优化，我经验比楼主多多了，我就在多少两句吧。关于，那个不用查表，用 Switch-Case 的问题。\r", "\r", "这么说话都是半瓶子咣当，性能优化不是教条，不是说，老师说这么写对的就这么写。性能优化是一个一直在变的东西，唯一可以相信的是 profile 。\r", "\r", "第一，不要过早优化。\r", "第二，这是一个有限条件选择，不涉及到问题增长速度。\r", "第三，编译器如果觉得这里值得优化成一个 table 会动手的。\r", "第四，性能优化，要理解一个代码调用频度场景。这个函数会被调用几次呢？大概，只在日历初始化的时候，调用一次，翻页的时候，调用一次。翻一次页，人工都设置了一个动画， 0.5 秒，还是多少记不得了。然而，这里用 Switch-Case 还是查表性能差异可能对产品性能产生影响么？\r", "\r", "写代码的时候，第一优先是可读性。这个代码其实可读性也一般，因为说过了，基本上就是一晚上随手写的，后来也没改过。性能一定要在 profile 的前提下去做。我们的学校教育，教育出来一堆纸上谈兵的性能知识，很多还是错的。比如很多类似的技巧，在编译器优化前提下，根本不存在了。比如当年谭浩强的书里面给你讲了一堆，在某个编译器可能成成立，在另外一个编译器不能成立的技巧。\r", "\r", "我不是说，我这么说一定比查表好。而是，这不是你该关心的问题。如果 profile 说明这里是一个性能攸关点，你做各种尝试都是合理的。在这时候，我觉得想太多。跟讨论回有几个写法差不多。", "好久没见到楼主活人了， mark 一记", "Year & 3 == 0 && ( year % 25 != 0 || year & 15 == 0)\r", "判断闰年会快一些", "虽然不爱被灌鸡汤，但是讲道理，刚才把代码看了一遍， SDK 发布几个月，资料各种缺失的情况下写出这个东西，我是服的。我觉得“没别的意思”的人应该想想在那个情景下是不是可以写的比这个好，反正我不能。", "楼主你其实是嫉妒人家有个漂亮可爱的女朋友而已吧。。", " Dash 代码我也草草的看了一遍，没看到什么槽点，难道我的代码洁癖严重不足？", "为什么 getDayOfMonth 一定要查表，感觉这么写也挺清晰的", "早期 iOS 开发和现在差别太大，那时候资料少，开源的更少，什么东西都得自己写。\r", "不像现在什么各种优秀的资源都有，没法比较。", " 这个谁要写这个代码在我的项目里面，我要打不及格。\r", "\r", "第一，不见得快，这个可以跑一个测试，比如比较 100 万次，试试看，我估计不见得快，或者说不见得有显著的性能收益。\r", "第二，可读性下降。\r", "第三，什么场景需要快速计算闰年，全人类才走了几千年，枚举一边，用最慢的算法，也很快出结果。这么去追求效率得不偿失。", " 续啥费？", " 喷一喷代码其实没问题， 但总体上感觉楼主太针对人， 这就不太好了。\r", "所以 tiny 叔才不得不出来解释一通", "& 3 比 % 4 快难道不是常识么\r", "\r", "我咋就这么瞧不上这些技术圈的网红呢，还有那个什么 justjavac", " “代码格式我就不说了，空格写的很随意，大小写对于我这种强迫症来说也很受不了。最重要的是我认为稍微参考下苹果 framework 中函数的命名方式，就不会写出协议中这么扯淡的命名。 interface 中的命名大多数都还不错，但是-(void)setDayFlag:(int)day flag:(int)flag;这个是什么鬼，我认为- (void)setFlag:(int)flag forDay:(int)day;更好。” 态度有问题，说啥都是白扯。内容没毛病，但是比如说可以小声的告诉“ hi ，你裤子好像有点问题”的情况下为什么要拿着喇叭打声的说“我靠，你的前开门没拉”呢", " 没错，这是常识，不过我懒得细看你的实现。\r", "\r", "我做了一个简单的 benchmark 你可以看看\r", "\r", "//\r", "//  main.m\r", "//  testleapyear\r", "//\r", "//  Created by Peiqiang Hao on 2016/11/28.\r", "//  Copyright © 2016 年 Peiqiang Hao. All rights reserved.\r", "//\r", "\r", "#import <Foundation/Foundation.h>\r", "\r", "int main(int argc, const char * argv[]) {\r", "    @", " {\r", "        // insert code here...\r", "        \r", "        NSTimeInterval t1 = [[NSDate date] timeIntervalSince1970];\r", "\r", "        for (int i = 0; i< 1000000; i++) {\r", "            \r", "            int year = i;\r", "            int leapYear = (year & 3) == 0 && ((year % 25) != 0 || (year & 15) == 0);\r", "        }\r", "        NSTimeInterval t2 = [[NSDate date] timeIntervalSince1970];\r", "        NSLog(@\"%g\",t2-t1);\r", "\r", "        t1 = [[NSDate date] timeIntervalSince1970];\r", "        for (int i = 0; i< 1000000; i++) {\r", "            \r", "            int year = i;\r", "            int leapYear = ((year % 4==0 && year % 100!=0) || year % 400==0);\r", "        }\r", "        t2 = [[NSDate date] timeIntervalSince1970];\r", "        NSLog(@\"%g\",t2-t1);\r", "\r", "    }\r", "    return 0;\r", "}\r", "\r", "结果是：\r", "\r", "2016-11-28 10:37:54.885253 testleapyear[16140:987950] 0.00339603\r", "2016-11-28 10:37:54.893403 testleapyear[16140:987950] 0.00789499\r", "\r", "在 100 万次调用下，你的实现比我快了 4 个毫秒。在我看来，这样的优化，千万不要做，得不偿失。当然如果你觉得我的测试条件写错了，你可以改，我可以再跑一次。运行环境是我的 rmbp 15 寸低配，去年中期的配置。", "小码农提一句，这种实际上现实中每天调用都不会超过 5000 次的接口，代码可读性，比那 0.0001 秒的优化有意义多了把", " 对的。我以前做搜索， 1 个 ms 都很重要。但是，不是每个代码的 1 个 ms 都要去揪。要找到核心代码，去压榨一点点性能改善，但是调用比较少的，对整体影响不大的，连看都不看。", " 我没有说你的知识不对的意思。包括 @", " 。\r", "\r", "高德纳老师有句话叫做“过早优化是万恶之源。”，原文， We should forget about small efficiencies, say about 97% of the time: premature optimization is the root of all evil.\r", "\r", "当你关心了一个明显不是性能攸关的点的时候，我就担心你的大局观了。刚才说了求月日数，一次翻页才调用一次，闰年判断也如此。这根本不是性能攸关点。\r", "\r", "其次，一个操作比另外一个操作快，是很常见的。这很正常，但是，按照刚才的 benchmark 在当前测试条件下快了不到一倍。如果本身很耗时，不到一倍也是不错的回报。问题是运行 100 万次都才 7 个 ms ，这快了一倍叫做没有收益。\r", "\r", "在实战的性能优化里面，我们关心的第一是运行多次的，性能攸关点。复杂度的增长速度。以及那些差异到了 100-1000 倍，甚至更大的操作。比如内存和硬盘，有了 SSD 没差那么远了，但是仍旧很大。比如硬盘的连续读写和随机读写，比如硬盘，内存和网络。\r", "\r", "现在的问题是，卡马克的某个优化很牛逼，某个图形算法里面乘除 2 用位运算（不管是图形算法啦，系统库里面多了去了），这些都没错。\r", "\r", "但是人家也不是每句话，都要把乘除 2 改为位运算的。计算机发展的早期，确实有很多这么干的，但是慢慢的都认识到了，有些优化要做，某些最好不做，最好不早做。", "全文是 We should forget about small efficiencies, say about 97% of the time: premature optimization is the root of all evil. Yet we should not pass up our opportunities in that critical 3%. 刚才少引用了最后一句。\r", "\r", "跟我之前做 Java 性能优化的体验一致，一个日撑 10 万次请求的服务，我优化到了 30 万，后来 300 万，后来 3000 万。其实没改多少代码，每一步的核心都是找当年的性能瓶颈在哪里。\r", "\r", "我们家 CTO 当年优化的一个 iOS 的地图点聚合问题，源代码是苹果 WWDC 的一个 Demo 代码，从全屏 5000 个点，聚合一次需要 22 秒，优化到了几十毫秒，他优化了 7-8 个不同的地方，但是优化的代码量并不大。核心还是找出关键问题。", " tiny 大神好 6 啊", " 哟", "我觉得这是一个圈粉帖。。。", "不要把时间花在指责上", " justjavac 就是一个 sb, 见一次骂一次", "某位成功把话题转到了优化上", " 嗯，成功转移了", "“正在看这个贴，老大默默走到我的身后，一巴掌拍向我的脑袋说道：少说话，多做事！”", " 嗯，这个代码才 500 行，目前这个帖子应该早就超过 500 行了吧", "莫名想起了当年激动人心的演讲，我在现场，听得我瑟瑟发抖，找回当时评价的链接[地址]( ", ")", "我一直以为，敢于开源自己项目的人都是勇士。觉得 tinyfool 解释的那么清楚，算是非常认真负责了。我想想自己写过的代码，哎呀，让我死了算了。哈哈~", "翻出多年前的代码来找刺，确实有点过分了哈~~~~~"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这篇文章讲解一下<a href=\"https://github.com/calllmelanmao/yunshare\" rel=\"nofollow\">yunshare</a>项目的爬虫模型。</p>\n<p>使用 nodejs 开发爬虫很简单，不需要类似 python 的 scrapy 这样的爬虫框架，只需要用 request 或者 superagent 这样的 http 库就能完成大部分的爬虫工作了。</p>\n<p>使用 nodejs 开发爬虫半年左右了，爬虫可以很简单，也可以很复杂。简单的爬虫定向爬取一个网站，可能有个几万或者几十万的页面请求，复杂的爬虫类似 google bot 这样搜索引擎的蜘蛛爬虫，要每时每刻爬取互联网上最新的内容。</p>\n<p>一般的个人开发者都是用爬虫定向爬取一些网站，然后提取一些结构化的数据，使用 api 接口获取数据也可以归到这一类。如果想简单的练习爬虫技术，可以尝试爬取豆瓣电影数据和书籍数据的，使用 api 接口和爬取 html 页面都能完成这个任务。</p>\n<p>爬虫的说白了就是一个 http 客户端，通过 http 协议和远程 http 服务器通信，获取 html 页面内容或者其他的种子文件， pdf 文件等等。和浏览器不同的一点就是爬虫不会把抓取的内容渲染出来，而是解析页面内容然后保存到数据库里面。</p>\n<p>在开始学习爬虫的时候我考虑的是怎么爬取 html 页面内容，怎么解析 html 页面之间的链接规则，后来遇到了页面编码的问题。</p>\n<h2>统一 utf8 编码</h2>\n<p>国内网站主要是使用 html 和 gbk 这两种编码方式，解决编码有两种思路，第一个是在获取页面内容的时候根据页面的<code>&lt;meta charset='gbk'&gt;</code>编码把内容统一转码成 utf8 的，因为 nodejs 字符串默认编码就是 utf8 。</p>\n<p><strong>这个方案充满了不确定性。</strong></p>\n<p>问题 1 ：不同网站的指定编码的方式不一样，除了前面提到的那种方式，还有<code>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=gbk\"&gt;</code>这种方式指定编码，这个问题还不是很大，很多的 http 工具库都能正确的解析这两种编码，问题是还有很多网站没有指定编码，又或者指定的编码和文件的实际编码不一致（遇到过真实的案例）。</p>\n<p>问题 2 ：如果你把 gbk 编码的 html 文件转成 utf8 编码保存到本地，用浏览器直接打开这个文件的时候会显示乱码，非常不利于开发过程中的查找问题。</p>\n<h2>不转码 html 内容</h2>\n<p>既然前面的方案有这么多的问题，剩下的方法就是把 html 内容直接按照原来的编码保存到本地，然后解析的时候指定编码。</p>\n<p>这个方法有 2 个好处： 1 、简化了爬虫模型， 2 、可以用浏览器打开 html 文件，不会乱码。唯一的缺点是不同网站文件内容解析的时候似乎需要指定编码，对于小规模爬虫这个问题其实影响不大。</p>\n<h2>统一爬虫模型</h2>\n<p>前面的编码方案解决了爬取不同网站 html 文件的编码问题，我们可以用一个统一的爬虫方法爬取不同网站的内容，那如果你想爬取非 html 内容呢？</p>\n<p>是不是又要重新写一个爬虫方法，解决这个问题的方法就是 http 协议，假设我们写的这个爬虫方法就是一个完整的 http 客户端，那理论上这个客户端是不是能根据<code>Content-Typ</code>获取各种格式的文件。</p>\n<p>那到底能不能用一个简单的方法就能实现上述的功能呢？下面的方法就是我采用 request 写的 nodejs 简单高效的爬虫模型。</p>\n<pre><code>function fetch(url) {\n  console.log(`down ${url} started`);\n  const deferred = Q.defer();\n  const file = getfile(url);\n  fs.ensureDirSync(path.dirname(file));\n  const stream = request\n    .get(url)\n    .on('error', (err) =&gt; {\n      deferred.reject(`down ${url}:${err}`);\n    })\n    .on('response', (res) =&gt; {\n      if (res.statusCode !== 200) {\n        deferred.reject(`down ${url}:${res.statusCode}`);\n      } else {\n        console.log(`down ${url}:${res.statusCode}`);\n      }\n    })\n    .pipe(fs.createWriteStream(`${file}`));\n\n  stream.on('finish', () =&gt; {\n    deferred.resolve();\n  });\n  return deferred.promise;\n}\n</code></pre>\n<p>这段代码在<code>yunshare/src/util/fetch.js</code>里面，当然这个方法不能单独运行，但是关键的逻辑就是这么简单。</p>\n<p>不管是什么格式的 http 请求， json ， html ， torrent 等都统一把返回的二进制格式文件保存到以<code>md5(url)</code>为文件名的位置。上面的<code>getfile</code>就是用来获取文件路径的。</p>\n<h2>模型扩展</h2>\n<p>使用 MD5 散列还是有发生冲突的风险的，如果你想要爬取上亿的网页，可能还需要对上面的模型进行扩展。一个简单的思路就是把网页路径中的域名提取出来，不同网站的内容保存在对应的域文件夹下面。</p>\n<p>其他的类似的思路也行，需要注意的就是如果爬虫保存文件和解析文件是分开的，你需要保证在解析文件的时候能用同样的方法定位这个文件。共同的参数就是 url ，所以你生成文件名的时候不能用一些随时间变化的参数。</p>\n<p>最后，献上第一个使用 node 全栈开发的网站：<a href=\"http://www.biliworld.com/\" rel=\"nofollow\">哔哩搜索</a>，目前索引百度网盘资源 1000w 条了。</p>\n</div></div>"], "reply": "3", "tittle": "简单高效的 nodejs 爬虫模型", "comment": ["Kafka", "楼主简单的额介绍了下如何用 nodejs 实现 `xargs -n 1 curl -O < urls.txt` 不过这跟爬虫需要的功能还相差甚远。", " 这个只是针对简单规模的爬虫模型，大规模分布式当然比这要复杂很多"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题！\n无线网卡很慢，怎么办？</p>\n</div></div>"], "reply": "4", "tittle": "树莓派无线网卡很慢怎么办？", "comment": ["驱动错了？树莓派几？", "还是有线的可靠", " 2", " 买了一个 Chromecast, 想弄一个能上网的路由接入点！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>官方描述：</p>\n<blockquote>\n<p>Oracle JavaScript Extension Toolkit (Oracle JET) is a complete yet modular JavaScript development toolkit helping developers build engaging user interfaces. Based on industry standards and popular open-source frameworks, Oracle JET further adds advanced functionality and services to help developer build better applications faster.</p>\n</blockquote>\n<p>有用过的吗？</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "如何评价 Oracle 的 JavaScript UI 开发框架： Oracle JavaScript Extension Toolkit (Oracle JET)？", "comment": []},
{"content": "", "reply": "3", "tittle": "求助： window10+IE11， window.open 设定 left=0，新窗口没有完全靠左，有 10px 的空隙，请问哪位知道是什么原因？", "comment": ["其他浏览器呢？", "-10px 呢?", "楼主的程序还在更新吗？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>分别统计了 100 ， 1000 ， 10000 以内的自然数的约数个数分布情况。</p>\n<p>得出了这样的猜测：拥有 4 个约数的自然数最多。</p>\n<p>如果猜测是正确的，能否加以证明？</p>\n<p><img alt=\"约数个数统计图\" src=\"http://ww1.sinaimg.cn/large/44287191jw1fa7qf8vzw8j20sj0qq0x9.jpg\"></p>\n<p>相关链接： <a href=\"http://bookshadow.com/weblog/2016/11/28/python-matplotlib-divisor-count-scatter-bar/\" rel=\"nofollow\">http://bookshadow.com/weblog/2016/11/28/python-matplotlib-divisor-count-scatter-bar/</a></p>\n</div></div>", "<div class=\"topic_content\">如果将题目做如下修改，能否得出结论？\r<br>\r<br>给定任意一个不小于 100 的自然数 N ，统计小于 N 的自然数的约数的个数，其中含有 4 个约数的最多。\r<br>\r<br>上述猜想是否成立？如果不成立，那么 N 是多少时会不成立？</div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>已经证明上述猜测不成立 = =</p>\n<p>当N = 1000000（一百万）、 10000000（一千万）时，最多的约数是8个 。</p>\n<p>或许最多的约数是从4 -&gt; 8 -&gt; 16这样逐渐右移的？</p>\n<p>N = 1000000（一百万）:</p>\n<p><img alt=\"N = 10000000\" src=\"http://ww4.sinaimg.cn/large/eb9a16f8jw1fa865n83n4j21kw0vz41x.jpg\" title=\"N = 10000000\"></p>\n<p>N = 10000000（一千万）：</p>\n<p><img alt=\"N = 10000000\" src=\"http://ww1.sinaimg.cn/large/eb9a16f8jw1fa865nolixj21kw0vz0wk.jpg\" title=\"N = 10000000\"></p>\n</div></div>"], "reply": "57", "tittle": "能否证明拥有 4 个约数的自然数最多", "comment": ["歪一下楼，这个图形是程序跑完自动生成的？还是把数据丢 excel 里面用 excel 画图的？", "汗，看到外链了，是用组件的啊", " 用 matplotlib 画的", "10000 的数据量有点太少了，先试着跑一下几百万的数据吧", " 跑了 10 万的数据，和上面的结果相同。", "那是因为你找的数不够大", " 大概到多少数量级可以看到区别？", "别浪费时间了，如果不限定范围，结论是拥有四个约数的自然数和拥有三个约数的自然数一样多", "就我的直觉来说，我觉得八楼是对的", " 能否解释一下原因？", "这个……\r", "\r", "1. 素数无限\r", "2. 任取 4 个素数，乘积得到一个数。有无限种取法\r", "3. 任取 5 个素数，有无限种取法……\r", "4. 任取 N 个素数，也有无限种取法……\r", "\r", "反过来看，拥有 N 个约数的自然数都有无限多个。", "无限集合的比较： ", " 楼上说的挺详细的，你可以再搜一下''偶数和自然数一样多''，是个经典的问题", " 无限数也有比较方法。\r", "\r", "比如 2 的倍数比 3 的倍数多。这个是一个严肃的数学问题。", " @", " 例子举错了， 2 的倍数和 3 的倍数应该可以一一对应。但是有理数比素数多，这个算一个例子", "fix: 有理数->正整数。。。口误", "题目应该修改为", "给定任意一个不小于 100 的自然数 N ，统计小于 N 的自然数的约数的个数，其中含有 4 个约数的最多。", "上述猜想是否成立？如果不成立，那么 N 是多少时会不成立？", "不能证明，因为结论不成立。\r", "\r", "恰好有 4 个约数的正整数的集合是无穷大的，而整数集是最小的无穷集合。\r", "所以恰好有 4 个约数的正整数的集合的势，等于整数集的势相等。\r", "也就是说恰好有 4 个约数的正整数，与整数一样多。\r", "同理，恰好有 2 个约数的正整数，也与整数一样多。即素数与整数一样多。\r", "这就类似于，偶数与整数一样多，奇数与整数一样多。\r", "\r", "不能理解的话，以下换一种角度论述。\r", "\r", "假设整数 n 恰好有 4 个约数，则存在素数 p 和 q ， p <> q ，使得 n = p * q 。\r", "则整数 a1 = p ^ 2 * q 和 a2 = p * q ^ 2 恰好有 6 个约数，且 a1 <> a2 。\r", "\r", "假设正整数 m 也恰好有 4 个约数， m <> n ，则存在素数 r 和 s ， r <> s ，使得 m = r * s 。\r", "那么整数 b1 = r ^ 2 * s 和 b2 = r * s ^ 2 恰好有 6 个约数，且 b1 <> b2 。\r", "\r", "因为 m <> n ，所以集合 {r, s } <> {p, q}，所以 {b1, b2} 与 {a1, a2 } 不交。\r", "\r", "综上，对于每一个恰好有 4 个约数的整数，都有两个恰好有 6 个约数的整数与之对应，且前者不相同时后者也不会重复，所以，恰好有 4 个约数的整数，不多于恰好有 6 个约数的整数的一半。\r", "\r", "换成数学语言就是，存在从集合 { 恰好有 6 个约数的整数 } 到 { 恰好有 4 个约数的整数 } 的「满射」，所以前者的数量不小于后者。", " \r", "有理数也是「可数集」，与整数可以一一对应。\r", "实数集的势大于有理数集的势，这个是成立的。", "把范围不断扩大, 说不定就找到反例了", " 感谢回复，添加了一条附言！", " 感谢回复！好高端。。。需要仔细理解一下", "首先应该正确定义问题。一种合理的定义方式是：\r", "对任意的自然数 N ，定义 P(x)为小于 N 的自然数 x 的约数，那么存在一个自然数 n ，使得对于所有的 N>n ，有 max[P(x)]=4 。\r", "\r", "合理的定义应该不止这一种，但没必要把问题绕到比较无穷集合的大小上去，那显然不是楼主发问的本意。", " 是的，我参考 17L 的回复添加了一条附言。", " \r", "证明本身没问题，但我不认为这完全符合 @", " 提问的本意。如楼上已经提到的那样，奇数和自然数当然是一一对应的，但对于任意的 N ，小于 N 的奇数永远是小于 N 的自然数的一半。这种理解更符合楼主做实验的初衷。", " \r", "P(x) 的参数都没有 N ，「对任意自然数 N 」就没体现出来，应该用 P(N)。\r", "这个定义下的结论不成立，很明显，对于任意大的 n ，可以构造更大的整数 a(n)，使得 a(n) 有任意多个约数，具体来说，让 a(n) 等于一个足够大的素数的整数幂即可。\r", "\r", "楼主的问题本身表述基本完整，不是「绕到」无穷集合，本来就是无穷集合的问题。", " 好像 我对你的 max() 理解不对。", "算了，楼主的新定义比较清楚，直接讨论新定义吧。\r", "先想想。", "如果给定连续的自然数集合，那么他们都可以由小于集合上界的两个自然数相乘所得，由于非素数的数远比素数多，那么两个数中存在非素数的组合比纯素数组合多。非素数的数通过同样的递归分解，得到更多约数。而且随着自然数越大，分解的约数越多，情况就越多，但是同样约数数量越少。因此两个素数相乘应该最多，其次是三个素数，接着是四个素数。\r", "并不严谨，望赐教", "我在 18 楼的证明漏掉了一种情形：对于恰有 4 个约数的正整数 n ，也可能是 n = p ^ 3 形式， p 为素数。\r", "这不难修补。令 m = p ^ 5 与 n 对应即可。", "自然数与自然数的无限子集应该是等势的，简单的说就是一样多。\r", "\r", "如果只考察不大于 N 的有限集合，结论也许成立。\r", "拥有 4 个约数的 k ，换句话来说就是有两个不同的质因数 a 和 b ，约数是{1, a, b, k}；或者立方数，约数是{1, c, c^2, k}。", " 无限=>无穷", " 有理数和正整数同构，都是可数无穷（最小的无穷数），这个没什么问题；如果素数有无穷个的话，那么素数肯定也和正整数同构。\r", "\r", " 应该用 argmax{ P(x) }", "\r", "\r", "设 x 的约数为 d(x)，则 x 和 d(x)存在这样的关系：\r", "\r", "x=k[1]^e[1] × k[2]^e[2] × …… × k[n]^e[n]\r", "\r", "d(x)=(e[1]+1)×(e[2]+1)× …… ×(e[n]+1)\r", "\r", "其中， k[]为 x 的质因数， e[]为 x 质因数分解后每一项质因数出现的次数。\r", "\r", "那么，你的猜想就是说当 d(x)=4 时，即 d(x)=(1+1)×(1+1)和 d(x)=(3+1)时的情况，你感觉似乎 x 可能存在的值的总量要大于 d(x)为其他值的状况。\r", "\r", "好的现在问题是极限之间的比较了，问题似乎简单了一些，我再思考一下。", "用素数的估计公式，能算出来小于 N 有 k 个约数的数的上下限，无穷大的时候应该可以证明", "也就是说，约数有 4 个的数可以定义为以下集合：\r", "{x|x=a×b, a 和 b 均为质数} ∪ {x|x=a^3, a 为质数}\r", "\r", "更近了一些，可以模糊的有感知，但甚至写不出“是最多的”的一种准确的，方便证明的表达。", "这样，我们可以继续写出：\r", "\r", "约数有 2 个的数可以定义为以下集合：\r", "{x|x=a, a 为质数}\r", "\r", "约数有 3 个的数可以定义为以下集合：\r", "{x|x=a^2, a 为质数}\r", "\r", "约数有 4 个的数可以定义为以下集合： \r", "{x|x=a^3, a 为质数}∪{x|x=a×b, a 和 b 均为质数, a<b}\r", "\r", "约数有 5 个的数可以定义为以下集合：\r", "{x|x=a^4, a 为质数}\r", "\r", "约数有 6 个的数可以定义为以下集合：\r", "{x|x=a^5, a 为质数}∪{x|x=a×b^2, a 和 b 均为质数, a<b}∪{x|x=a^2×b, a 和 b 均为质数, a<b}\r", "\r", "……有某种规律在其中，像是…\r", "\r", "如果一个数的约数有 n 个的话，它可以写成这样的， d(n)-1 个集合的并集的感觉…\r", "\r", "…不行，仿佛看到了无限的未来，有些怀疑我的数学知识是否够用了…", " 不能这么想，这与 @", " 的问题不同了，他说的是一定范围内", "你搞这个什么企图？", " 嗯对，笔误了", "楼上用集合的势考虑当然正确，不过楼主不是已经给了另一种“多少”的定义吗？楼主应该是想知道：\r", "拥有四个约数的小于 n 的正整数个数>拥有某个固定的 k 个约数的小于 n 的正整数个数\r", "是否成立\r", "如果成立，还能否进一步估计这两个差别是怎样，能否找到一个函数 f(k)去估计", "上面的命题应该补上 n→∞", "我数学已经还给老师了。。不过看偶数坐标的图像。。感感觉很像卡方分布的一种图像。。", "你说的约数算不算 1 和本身？", " 算 1 和本身", "建议找点集合论的书翻一翻，@DiamondbacK 这位的答案思路是对的。\r", "我从另一个角度试着阐述一下\r", "\r", "有命题：任意有穷个可数集的笛卡儿积是可数集。\r", "\r", "若 a, b, c, d 都属于正整数集 Z+，则有序对<a, b, c, d>组成的集合相当于四个可数集的笛卡儿积，显然也是可数集。\r", "\r", "那么我们只需要将四个数相乘起来，可以得到{abcd | a, b, c, d ∈ Z+} 是上述集合的无穷真子集，显然也是可数集。\r", "\r", "将此处的“ 4 ”个约数推广一下，拥有任意有限个约数 n 的自然数集都是可数集。\r", "\r", "又有，可数集与自然数集 N 均等势（可以理解为集合大小一样），所以无论拥有几个约数的自然数集，都是等势的。\r", "\r", "所以楼主的命题是不成立的。", "为什么不改为考虑前 N 个自然数中有四个约数的自然数所占的比例呢? 这不就躲过去无穷集合的势的问题了么", "任意一个奇数素数乘以 2 得到的结果都只有 4 个约数", "哦，不限于奇数，任意一个素数乘以 2 的结果都是只有 4 个约数的", " 偶素数只有一个哈哈哈", " 这么说起来其实任意两个素数的积，都有 4 个约数。比如 a 、 b 是两个素数，且 a≠b ，那么它们的积的约数有：{1, a, b, a*b }。", "我们定义考察范围为 1-N ，可以找到素数列表中的第 M 个素数： R(1)=1 ， R(2)=2 ， R(3)=3 ， R(4)=5 ... R(M-1)， R(M) ..\r", "\r", "使得 R(M-3)*R(M-2)*R(M-1)*R(M) < N < R(M-2)*R(M-1)*R(M)*R(M+1)\r", "\r", "然后从 1-M 个素数中，任意取 n （ N<5 ） 个素数相乘，得到很多自然数，都属于 1 - N\r", "显然 4 个数的取法最多。\r", "\r", "考察 5 个素数的积……编不下去了……", "这个问题已经有数学家专门研究过了： ", " 这个是整数的不重复质因子的数目吧？", " 恩，是这样的。", " 请问素数和合数等势吗？素数的势是不是小于合数？", " 素数集、合数集都与整数集等势。可数集的无限子集统统等势。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><pre><code>示例\n//请求\nhttps://api.weibo.com/oauth2/authorize?client_id=123050457758183&amp;redirect_uri=http://www.example.com/response&amp;response_type=code\n\n//同意授权后会重定向\nhttp://www.example.com/response&amp;code=CODE\n</code></pre>\n<p>上段是新浪微博给的示例，浏览器打开示例中<code>请求</code>那样的地址，打开的网页是让输入新浪微博帐号密码的网页，输入帐号密码之后，网页就会跳转到示例中<code>同意授权后会重定向</code>那样的网址，网址中<code>code=</code>后边的值就是需要获取的</p>\n<p>我尝试用 okhttp 来发送这个请求，但是返回的结果是授权页面，用浏览器打开，不知道怎么才能用 JAVA 获取到重定向的地址</p>\n</div></div>"], "reply": "7", "tittle": "新浪微博的登录 API 应该怎么才能自动获取返回的 code 值呢？", "comment": ["第一种：代码模拟登录、授权中的 HTTP 请求，获取跳转后 URL 地址。\r", "第二种： webdriver 调用浏览器，模拟人工点击，获取 url\r", "\r", "以上两种都试过可行。\r", "\r", "如果要出验证码可以用打码平台搞定。", "写个应用内浏览器在检测到 url 变成回调地址时候自动匹配当前 URL 中的 code", "CALLBACK_URL = '", "'  回调地址填本地服务 \r", "自己写个方法获取 get 参数即可\r", ".route('/code_handle', methods=['GET'])\r", "def code_handle():\r", "    if request.method == 'GET':\r", "        code = request.args.get('code', \"didn't get it! \")", "你是 android 开发吗?用 webview 加载第一个 url ，授权成功后返回重定向， webview 会自动加载重定向 url ，下面方法就可以拿到加载的 url ，就可以拿到 code 了。\r", "```java\r", "webView.setWebViewClient(new WebViewClient() {\r", "            @", "\r", "            public boolean shouldOverrideUrlLoading(WebView view, String url) {\r", "                Log.d(\"webView url\", url);\r", "                return super.shouldOverrideUrlLoading(view, url);\r", "            }\r", "        });\r", "```", " 感谢我去试试", " return 中的 url 就是最后重定向的地址吗？", " 看 log 打印结果， return true; webview 就不会加载你的重定向 url 了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>之前看到讨论如何防止猝死的话题，貌似大家对不熬夜不加班达成了一致看法。目前我给自己定不熬夜的标准是晚上 12 点准时睡觉，想知道大家的作息时间是如何安排的？</p>\n</div></div>"], "reply": "5", "tittle": "程序员几点睡觉才算不熬夜？", "comment": ["11 点多睡觉。。。", "标题应该改成“人几点睡觉才算不熬夜”\r", "觉得十点半比较合理", "不是说睡眠规律就没问题了吗", "为什么要针对程序员", "已经熬到如此不清醒以至于连这种问题也需要问人……"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>微信小程序如何像 webview 一样加载 html5 网页，目前微信暂时还没有开放这个功能，那怎么办呢？</p>\n<p>请看这里： <a href=\"http://www.yinqisen.cn/blog-731.html\" rel=\"nofollow\">http://www.yinqisen.cn/blog-731.html</a></p>\n</div></div>"], "reply": "1", "tittle": "微信小程序如何像 webview 一样加载 html5 网页", "comment": ["所以这个帖子存在什么意义?\r", "\r", "看了你上一个贴子,我承认,你是来钓鱼的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>原创分享，来自于 20 年编程实战，字字珠玑，切莫等闲看。另外建议下载到电脑上观看，已达到最佳播放效果。</p><p>\n有道云： <a href=\"http://note.youdao.com/groupshare/?token=01950FED8A82456D97AA54769C1D0404&amp;gid=31971347\" rel=\"nofollow\">http://note.youdao.com/groupshare/?token=01950FED8A82456D97AA54769C1D0404&amp;gid=31971347</a> </p><p>\n（注：点击页面右上方“保存”按钮旁边的小箭头，在随后的下拉列表中选择“下载”即可。）</p><p>\n如若上面的链接有问题，可使用下方地址： </p><p>\n百度网盘： <a href=\"https://pan.baidu.com/s/1o7Bti1k\" rel=\"nofollow\">https://pan.baidu.com/s/1o7Bti1k</a>    （下载可能会有点慢） </p><p></p>\n<p>\n本视频文字版请参考： <a href=\"https://www.v2ex.com/t/323143\" rel=\"nofollow\">https://www.v2ex.com/t/323143</a>\n</p></div></div>"], "reply": "12", "tittle": "《编程实战能力提高的捷径》视频版！", "comment": ["感谢分享！", "有道分享现在体验不错，大文件也不用限制用客户端就可以下载。\r", "\r", "感谢分享！", "感谢分享！", "感谢分享！！！", "哈，楼主你还没长教训啊，等下回头一堆人又要来批判了，你这个可以去原话题下 append 个链接过来", "感谢大家！", "我觉得捷径就是直接上手干", " 我觉得你说的有道理。再好的技术，离开了实践也是空。", "感谢分享", "国际惯例 楼主好人一生平安~ 这是我的。。。额。。。。    \r", "感谢分享", "受益", "赞分享"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>找了好久都没有找到这些使用多种语言的公司，大部分都是 PHP+JAVA</p>\n</div></div>"], "reply": "15", "tittle": "PHP 如何跳入 Python， Golang 的坑", "comment": ["因为 PHP 和 JAVA 都是世界上“最好的语言”", "PHP+JAVA 主要是用来写业务的", "入坑： 7 天精通 python 7 天精通 golang\r", "出坑：颈椎病康复指南", "去大公司，说不定会用到的", "学 JAVA 吧，我也准备 PHP 转 JAVA 了， Python 和 Golang 也考虑过，但工作实在不好找", "php 去学 py 零成本。看看语法，有需求驱动， 1 天你就可以出作品了。而且 py 得异常控制比 PHP 好用多了。但是 PHP 不用关注类型的问题在刚开始写 PY 会经常让你觉得崩溃。", "自己运营个小项目，会逼着你无限拓展出各种技能树的。", "感兴趣就学了\r", "php 入行\r", "python golang php 现在都写\r", "最近准备看下 kotlin 和安卓", "Python 入门，最近看 Scala 了…… java 实在不喜欢", "从 c ， c 艹到 php ，\r", "现在用 py 写一个 nas 管理系统\r", "go 和 rust 也在看着", "学了一大堆，工作每天都在用 php,word,excel 。", "刚刚从 php 转到 ruby", "工作 Python, 在学 ruby. 红宝石太美了.", "找不到工作的，都是学的不够好的。", " 感觉爽吧？我是工作没办法从 ruby 跳 php ，各种不习惯"]},
{"content": ["<div class=\"topic_content\">好奇怪哦</div>"], "reply": "目前尚无回", "tittle": "请问下这是什么编码方式 003d 解码后是等号 0026 是&符号", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><ul>\n<li>很多没有工作经验的毕业生总是在网上吐槽各大公司根本不给毕业生一个机会，只想要有工作经验的员工，但是没有工作机会新人又如何成为能上战场的老兵？</li>\n<li>如果按照编程新手和战场新兵做对比其实很有巧合之处，一个新兵如果在新兵期训练的非常好，有天赋有底子，就是一个潜在兵王的料子，那么所有的精英战队都希望把这样的好苗子要过来，给予大资源培养，毕竟这样的人才在战场上的价值是无数炮灰比拟不了的。</li>\n<li>准兵王的苗子几乎都去大厂了，而如何在众多平庸的炮灰中挑选出最佳性价比的战士呢？</li>\n<li>且听下回分解！</li>\n</ul>\n</div></div>"], "reply": "32", "tittle": "所谓的工作经验到底是什么？仅仅是你工作的年限？一门语言使用的时间？", "comment": ["沟通协作就是实打实需要锻炼的能力，而不排除有天生就会与人进行良好沟通的人才！", "占坑？你应该说说新人如何平滑升级到老手。", "工作经历 != 工作经验；个人认知。", "校园招聘的时候干嘛去了？", "别抱怨了，现在不缺码农，有经验的更不缺，缓几年再培养吧", "代码行数", "我的理解是遇见过多少坑。", " 我也有这个疑问，各个大公司不是都有校招么，而且要求还低", "量是工作年限，质看你具体干了什么学到了什么", "并不觉得工作几年的人就一定比某些应届生牛逼到哪里去", " 得道有早晚，术业有专攻，看你怎么比", " 不清楚，但看别人说的招 985 还要筛的大厂，其他小厂更是太少了。我觉得校招可以忽略。", "我认为拿程序员和士兵做比较并不恰当，很简单，程序员可以随便跳槽的，你辛辛苦苦培养个兵王，人家转身就投敌了你怕不怕。", "这得看用人单位如何定义了， 233", " 你说的没问题，问题是别人在应届生的时候跟你同一水平，在工作了几年就超出你很远了，这样的人月多，应届生机会就越少。\r", "招人的问题公司的观点不是不给应届生机会，近些年的年轻人跳槽的太厉害，刚培养了两年就跑了，很多中小型公司宁愿招有经验的了，我上家公司特爱找年轻人，觉得有干劲，后来公司慢慢怕了，觉得 90 后的太有个性了，哈哈", "遇坑会填 =工作经验", "主要是看其中的阅历", "工作经验值 == 填坑数量", "基础扎实说实在的没啥用，比如处理过多少棘手的 bug ，深坑如何填，怎么填效率高，这才是所谓的工作经验。\r", "不然人家招聘一个基础扎实的，不如直接去找大学生来当实习生完事了啊。。。。。", "解决事情的能力", "..虽然我是程序员,,但是想从公司招人的角度上分析下这个\"工作经验\".\r", "\r", "1,有经验和没经验..做应届生的时候,如果是完全没有经验的话,给公司带来的压力是:要教对方如何工作,让其适应并产出..0 经验者相比于 1 经验者有更大的风险,所以由 0-1 这个坎挺重要...\r", "2,工作后的\"经验\"..一个简化的衡量标准, 类似学历一样, 高学历者平均比低学历者有更高的能力(当然学历低但是能力一流的也大有人在,这只是一种简化筛选手段,有限精力下得到最优解),工作年限长 也相对来讲有能力的概率也更大...\r", "\r", "但是这个\"工作经验\"只是个坎而已,是个必要不充分条件,你只要越过他,接下来的面试\\试用期才是衡量你真实能力水平的环境...", "填了多少坑 做出了什么实际项目", "要说一门语言的使用时间的话……我从 93 年就开始用小霸王 basic 了呢，妥妥的 20 年以上骨灰级资深码农", "多挖坑，多踩坑，多填坑", "曾经我也有和你一样的想法，但现在想法不同了。我认为工作经验是对技术的熟练程度，以及解决相关领域问题的经验。我也是刚入坑不久，未来观点可能还会进一步变化。\r", "如果每一行代码都需要去翻手册，自然效率低。\r", "如果抛了一个异常，半天解决不了，也会拖进度。\r", "还有一个更重要的，有经验和没经验的编程习惯很不一样。我也是进了公司才知道要在入参和状态变化这些地方打日志。如果换做是以前的我，你以为我会告诉你我处理所有的异常都是直接 print 到控制台么？\r", "现在回头审视下以前的代码，稳定性堪忧啊。", "会挖坑 会填坑 挖的坑比填的坑多  ok 跳槽 去下一家", "只有年限可以在简历中证明并且掺不了水", "没经验的只会填坑\r", "有经验需要会看坑  会填坑  会挖坑   会跳坑", "挖坑填坑我想比较局限于之前的公司。毕竟大公司能出现的坑小公司不一定有…\r", "\r", "应届生能对自己的主要语言有全面的了解就不错了。这里不仅仅说是基础，比如你在某些场景会怎么设计…\r", "\r", "然而我就是应届生，真是不要脸(逃", "同意 20 楼，解决问题的能力", " 什么 90 后有干劲,是因为你们招 90 后的那几年是因为他们刚毕业,刚毕业的孩子还暂时不用考虑房子,车子这些乱七八糟的,也知道自己知识匮乏,所以自愿加班那些,你现在再找刚毕业的还不是这样,跟 80 后,90 后,00 后啥的没有任何关系.", " 我说的有干劲是 90 后毕业之前的 80 后，搞清楚了。还有你是不是接触的人太少了才说出这样的话？不同年代的人差别太大了， 90 后 00 后成长环境明显优于 7080 后，自然会有个性一点，这样不是什么坏事，他们更有自信，但是对一些用人单位来说不是特别乐观的事。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如图，在页面上有两个两个 Radio Button 选择模式，一个开始按钮，一个进度条。下面是编辑参数用的组件，一个 Grid(Table)，还有两个 FieldSet (GroupBox)</p>\n<p>在 1366x768 的笔记本电脑上，看起来还行，把左边的表格再拉长一点的话，正好可以占据整个页面宽度：\n<img alt=\"\" src=\"http://ww4.sinaimg.cn/large/e98c9f72gw1fa9bamltnij211y0i6win.jpg\"></p>\n<p>但是一旦外接显示器，分辨率调到 1920x1080 就不行了，这种情况下编辑部分只占屏幕的一半宽度，强制拉长的话，也会感觉很奇怪：\n<img alt=\"\" src=\"http://ww2.sinaimg.cn/large/e98c9f72gw1fa9bb4vu03j21hc0tmjwj.jpg\"></p>\n<p>在进度条走到 100% 后，实际上还需要一个文本框用来显示所有的日志，这个文本框可以占一整屏，但是目前我还没有想到一个方案，可以兼容这两种常见的分辨率</p>\n<p>请问在这种情况下，有什么常见的设计策略吗？</p>\n</div></div>"], "reply": "12", "tittle": "PC 端网页不同分辨率下的排版问题求助", "comment": ["你的宽度是怎么定的 或者 给个页面?\r", "可以在进度条跑完后 在进度条上加上提示 \"点击查看日志\"或者其他提示文字,然后做弹出层", "写成响应式。", " 关键问题不是弹出层的问题，而是下面那张图感觉比较难看，控件都挤在一个角落里", " 浏览器宽度就定成最大化时的尺寸", "居中， 像 V2EX 就是两边留白", " 顶部导航栏和左侧导航栏为了统一不能动，因为已经有几十个页面使用这种布局了，其它部分是可以自由组织的，这样一般就没法居中了吧？", "尝试写一个简单的 div 看看这个 div 在不同分辨率下的样式有什么不同 还有 切换分辨率之后可能要 reload ？", "  那没办法。 最多用响应式布局， 根据屏幕拉长一点。", "响应式", "这要看页面结构了，如果结构好的，很容易调成居中的", "可以用媒体查询来区分两种排版", "flex"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>想做个汽车平台 怎么能搞到汽车的数据库啊 车型 logo 之类的</p>\n</div></div>"], "reply": "3", "tittle": "怎么能搞到汽车数据库啊", "comment": ["爬", "去国内一些汽车销售网站抓，自己不会的话找人写个爬虫抓一下。\r", "\r", "或者有政府机关关系，试试看能不能去车管所之类的地方弄到。", "我这里有车型以及经销商数据。可以加我 QQ 五九 6768 三七（验证“车型数据”）聊聊。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>1.只有真正认识你价值的人，最终才会成为你价值的一部分。</p>\n<p>2.<code><a href=\"http://blog.csdn.net/mindfloating/article/details/53364296\" rel=\"nofollow\">http://blog.csdn.net/mindfloating/article/details/53364296</a></code></p>\n</div></div>"], "reply": "31", "tittle": "程序员，你为什么值这么多钱？", "comment": ["房子，你为什么值这么多钱？", "只有真正认识房子价值的人，最终房子才会成为你价值的一部分。", "供求关系", " 好有道理", " 固有资产，身处环境地理位置不一样，价格自然不一样\r", " 这是说明买车不买房的人也大有人在吗\r", " 炒房关系。。", "程序员，你为什么才值这么多钱？", " 机智 boy", " 666666666666", "我也想知道这个问题，为什么程序可以改变世界。", "好多人也只是码农。", "国内的\"软件工程师\"≠实际意义上的程序员", "感觉还是房子更值钱些", "因为有人出这个价啊", "房子你凭什么值那么多钱？\r", "苹果你为啥卖那么贵？", " 再值钱也没有房子值钱，坐着不懂就升值了", "听到 offer 的时候都懵比了 我真的那么值钱吗 实习的时候每天就在办公室吃吃喝喝...", " 世界是被人创造的，比如西部世界： D\r", " yep\r", " 搬运工 \r", " 实体的是不是有手感\r", " 号的把\r", " 炒上去的。。。\r", " 你这不怕被现在的老板看到吗", "如果说农民、建筑工人、商铺老板等解决的是人的基本需求，那程序员解决的就是人的进步需求。从这一点上说，程序员可以创造更大的价值，也理应得到更多的回报", " 问：水是生命之源、生存的必需品，价值如此之大为何这么便宜；钻石作为一个没有实际用途的装饰品为何如此高昂", " 嗯，你补充得对，经济行为会影响事物价格。但我说的好像是另一件事……嘛，我不是经济学人士，看看就好啦", "因为卖出的产品回报率比一般产品要高。生产时间要长。老板不得不提高点报酬。", " 不怕 不接那个 offer 啊 hhhhhhhhh", " 有点道理\r", " iPhone6 那么贵，没见到工厂工资很高...", " 机智哥", "写的不错", "```北京新光天地的某著名奢侈品专卖店遭遇盗窃，据说一个零售价好几万的包包被偷了。店长报警，但最终警方并没有刑事立案，因为那个包包的成本进价不过几百块钱。```\r", "看到这‘’英明神武‘’的案例忍不住就笑了，照这逻辑偷三四台 iPhone 也不立案了", "排除美国这个能收全世界互联网税的国家，大部分发达国家的码农收入并不比其他工程师高。\r", "中国码农工资高只不过是因为码农移民发达国家容易，资本家们被迫与国际接轨了一把而已。金融同理。", " 必须不立案\r", " 移民容易...", " 中国码农工资除了一线城市其他地方其实不高。在初中毕业的快递员都能拿 8000 工资的时代，码农收入真的一般。一线工资高因为是资金汇聚的洼地。", " 你可以看看非一线的传统工程师，明显被剥削的更严重。\r", " 北上广深一线二线互联网公司码农的平均水平去美国非 FLAG+MS+Apple 还是比较容易的，然而英语能达标（少说托福 100+或者雅思 7+吧）的就少多了。此外 H1B 摇号很人品。如果去美国以外的就更容易些。香港日本韩国澳大利亚码农平均水平相当于大陆二线城市。", " 谁让你只跟传统工程师比？工程师占所有工作的比例其实很少。至于你的其他评论我就更不认同。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我这里的一个小工去了保密单位现场，有一些 DELL 的 T20 等型号服务器。回报那些服务器插上兼容的网卡都点不亮，只有插 DELL 自己的网卡组件可以。 PCI/PCI-E 的都是</p>\n<p>我印象中 DELL 并没有 BIOS 硬件白名单限制，主要是之前用的 DELL 服务器大多板载的双口网卡就够了，也没遇到这种情况。</p>\n<p>请问各位经验丰富的朋友，谁有这个限制的详细信息？确认是 DELL 的限制还是这边的硬件有问题？因为那边没外网，详细情况都靠电话口述转达，我现在也一头雾水。</p>\n</div></div>"], "reply": "6", "tittle": "求助。DELL 服务器插非 DELL 网卡无法启动？有 BIOS 白名单？", "comment": ["塔式机器大部分都兼容，不亮可能是因为驱动没有装上", "就算能点亮也有隐坑，劝贵司老板别省那点钱。我估计那保密单位看机房的都明白。", "可能是 PCI-E 接口不兼容。\r", "有些卡插主板需要用绝缘胶带贴掉一些针脚才能用，你可以顺着这个方向研究一下。", " \r", "并不是……\r", "已经给 dell 客服确认了\r", "部分机型就是这样 只能使用 dell 兼容硬件\r", "\r", "大部分都是卖给政府、大国企的机器……", "我总碰见 ixgbe 挑光模块的事…您这个头一次听说", "自用 T20 没这遇到这情况。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这几天开发后端，感觉程序开发就是一种时间换取空间 or 空间换取时间的游戏，最简单的例子就是生成缓存，很多时候把需要耗时的结果存为缓存，这样减少了时间但增加了空间，自己有时的服务器够强悍， CPU 和带宽都是顶配，但硬盘是小容量的 SSD 固态硬盘，所以就不用生成缓存，每次直接输出结果就行了，所以突然就有这么一个想法：时间===空间，刚刚网上去查了查时间和空间的论断，看到一篇文章： <a href=\"http://www.zhibeifw.com/fjgc/fjykx_list.php?id=7465\" rel=\"nofollow\">http://www.zhibeifw.com/fjgc/fjykx_list.php?id=7465</a> （篇幅较长）感觉说的很好，大家觉得是不是这么一回事</p>\n<p>其实感觉计算机原理和宇宙都是相通的，比如知乎上一个回答： <a href=\"https://www.zhihu.com/question/20499013/answer/47162939\" rel=\"nofollow\">https://www.zhihu.com/question/20499013/answer/47162939</a></p>\n</div></div>"], "reply": "24", "tittle": "从计算机角度来推断，时间是不是就是空间？", "comment": ["你是说能量守恒么？或者我的理解是羊毛出在羊身上。差不多的意思", "这都什么和什么\r", "\r", "缓存的发明来自于局部性原理", "当然不是\r", "你这理论和「只要有足够长的时间，一只狗可以在打字机上打出来一首莎士比亚的完整的诗歌」有什么区别\r", "再引申一下，随便一部电影，也能够在 pi 的若干 bit 上找到", " ", "在计算机理论内的很多情况下，时间和空间是可以互换，但不能说「时间 === 空间」，甚至不能说「时间 == 空间」。楼主对程序开发的感觉（主题第一句）是对的，但由此还不能引申出这么大的理论来。另外最后一句，与其说「计算机原理和宇宙都是相通的」，不如说它们遵守的都是相同的规则，这两种理解在出发点上有点微妙的区别", "按 规矩 来，如果人人或自然事物都遵守，就是 规律。", "时间换空间不是绝对的，\r", "例如排序算法最优解就是 O(log n)，你没办法通过空间来换取时间，因为这是信息论决定的", "不要发明概念，时间就是时间。计算资源包括三种：并行时间、串行时间和空间三种.", " 非比较排序可以突破，比如桶排序或者计数排序。", "恭喜楼主进入民科领域\r", "你是不是还没有考虑一个很重要的维度：钱\r", "很多时候我遇到的是：优化？优化啥？加钱上机器！你们几个人优化半个月，工资都够买机器了", " 啊哈， bozo 算法", "“程序=算法+数据结构”\r", "lisp “代码即数据 数据即代码”\r", "“整个宇宙其实只有一个电子”", "从宇宙的角度来看时间和空间都不存在", "让我想起了昨天那个在地铁上看见的运维..\r", "那个运维说我在 ssd 装能比机械快百分之 60 的时间...\r", "意思大概是为什么公司不全上 ssd..", "正所谓计算机学着学着就开始往玄学方面搞了", "从北京到上海高铁要 4 小时,\r", "不意味着北京到上海距离和 4 小时的时间是等价的", "当然不是，用多少缓存也无法将质因数分解问题的复杂度降到多项式级别", "哲学问题", "智障啊。。。。", " 您大概没懂楼主的意思吧，比如您的例子，北京到上海，针对高铁这一种交通方式，铁路局收费可以按空间距离计算，其实也可以按照乘车时间的倒数计算（然而它没有，虽然停站少高铁自身运营成本可以更低，部分乘客也可以少浪费时间，但铁路局毕竟要照顾到空间上的客观存在的利益，把自身利润最大化），导致从北京到上海的这些人更倾向于买乘车时间短的车票。可以说，空间距离“等价”于乘车时间的倒数", "没太看懂，文字表达可能太抽象。\r", "\r", "首先时间和空间不相等，也不能约等于，最多近似。因为 lz 你忽略了一个问题，生存缓存是加快时间，牺牲空间换时间没错，问题是如果不生成缓存，那么就能留住空间了吗？你提到的空间可能只是磁盘空间，而我说的空间是存储空间。\r", "\r", "缓存这玩意不仅仅可以放到磁盘上，还能放到内存上，当某查询业务并发量到达 W 级时，为了节约空间哥几个不生成缓存，那么空间和时间一同会浪费起来。因为每次数据的重新生成不仅仅是要 cpu 时间，还需要内存空间，当并发量达到一定时，你就会发祥时间和空间都没了。\r", "\r", "但如果在这个业务下，我们将缓存定时刷新，表面上浪费了一定的空间，但在较高的并发时，你会发现只是 cpu 读取同一份数据而已，不会占用其他太多余的空间。", "计算机中的空间是某种信息量的物理存储（比特位的反转），时间则是计算出相应状态的 CPU cycle  数量。\r", "\r", "可以 trade one for another ，但不是等价关系", "我也思考过这个问题。我觉得：是。\r", "\r", " 假如用多线程来排序，某种角度上，就可以认为是“空间换时间”。用 cpu 的空间、 Ram 的空间 来换取宏观上的时间。", "推荐阅读深入理解计算机原理"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>相比GitHub Pages, 使用 UCLOUD 托管静态博客，可以使用与 git bash 具有同样体验的上传工具，同时可以获得更快的访问速度。此外，还有其它更多优点：</p>\n<p>具体的托管方式，请戳 <a href=\"http://metaquant.org/shi-yong-ucloudtuo-guan-jing-tai-bo-ke.html\" rel=\"nofollow\">http://metaquant.org/shi-yong-ucloudtuo-guan-jing-tai-bo-ke.html</a></p>\n</div></div>", "<div class=\"topic_content\">对于没有备案的，有一个变通的方案，可以通过 DNSPod 的显性或隐性 URL 转发功能跳转到你 ucloud 域名空间，这样不用备案也可以用你自己的域名访问你的博客</div>"], "reply": "42", "tittle": "使用 UCLOUD 托管静态博客", "comment": ["看上去很简单的样子，待会儿尝试一下", "访问速度确实不错， github pages 真是慢死", " 欢迎尝试", " 最开始也是用 github pages ，好处是不用备案，坏处是确实太慢了，有时还打不开", "域名不用备案?", "hexo 也可以用？", " 不需要备案也可以访问，但是绑定的自定义域名需要备案", " 应该是类似的，将生成的文件上传即可", " 一次实验成功，威武。", " 备案太麻烦了", "对于没有备案的，有一个变通的方案，可以通过 DNSPod 的显性或隐性 URL 转发功能跳转到你 ucloud 域名空间，这样不用备案也可以用你自己的域名访问你的博客", " 哈哈，你的速度挺快", "coding pages 也可以....也不用备案的", " 简单看了下部署过程，似乎稍麻烦一些", " 上传代码，添加.nojekyll 文件（可选），开启 pages 并且绑定域名....就三步", " 噢，可能用熟了就好了。还有一个问题， coding pages 不用备案的貌似是香港的主机，大陆的主机都需要备案，香港的主机需要另外收费吧。 ping 了一下，速度还是有差别", " 我的没有备案，大陆秒开（嘘）", " 你的那个是几年前了消息了....pages 不是应用容器", "github 与你说的 UCLOUD 最直接的优点在于稳定", " GitHub Pages 自定义域名设置 A 记录到 151.101.100.133 ， AAAA 记录到 2a04:4e42::133", " why?", "DNSPod 的显性或隐性 URL 转发功能 对于未备案域名来说，本身就不太靠谱。。", "绑定不了 https 域名，要是要收费", "coding 不错。如果说 ucloud ， qcloud 也有免费额度", "@ metaquant 可以添加自定义 SSL 证书吗？", " 没有看到相应的选项", "不非自定义域名支持 https 么", "如果域名还没有备案， coding pages 是一个很好的选择，如果已经备案了，国内的云计算服务商基本都提供对象存储的功能，随便选一家用的顺手的就可以", "coding paes 可以自定义域名的用是香港主机，就像之前 lofter 也可以自定义域名，但是主机放在美国的 AWS,没办法，国内政策限制，只能用这种方式绕开，但是 LOFTER 前段时间也停止绑定了，一旦用的人多了，树大招风，有关部门会不会出手就不一定了", " 诚然，天朝特色", " 151.101.100.133 是 Anycast IP ，联通电信访问到的是日本节点", "如果支持 https 那就更好了", "如果没记错的话， url 转发是需要备案的，要不早就乱套了！！！", " DNSPOD 会进行审核，没有备案的域名也有可能通过，我试过的，但是通不通过由 DNSPOD 说了算", "我一直用的 netlify 支持 https 支持 history api 静态网站 纯前端网站托管非常好用", " 多谢推荐，看来大家都很注重 HTTPS 啊", " \r", " coding 我用用户名同名建的项目，怎么 coding pages 还是 username.coding.me/username ?", "yoga 的 coding 的 pages 功能来做备份的，目前看来运行良好", "随便测了个速，供大家参考，第一个是楼主托管在 UCLOUD 上的博客，第二个是 coding pages ，第三个是 github pages:\r", "\r", "![meta]( ", ")\r", "\r", "![coding]( ", ")\r", "\r", "![git]( ", ")", "随便测了个速，供大家参考，第一个是楼主托管在 UCLOUD 上的博客，第二个是 coding pages ，第三个是 github pages: \r", "\r", "![meta]( ", ") \r", "\r", "![coding]( ", ") \r", "\r", "![git]( ", ")", "不知道怎么发图，大家凑合着看吧。。。", " 用 wb 或 smms 图床"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>今天下班之前收到公司发的一条内部消息，是公司一个正值壮年的程序员体检得了白血病，是家里的顶梁柱，也把家里的积蓄也花光了，尽了点绵薄之力之后我在想近几年为什么互联网行业这种事情越来越多。</p>\n<p>当然得白血病的原因很多，不能说是由于加班引起的。但是不可避免互联网这个行业加班的情况真的不少。并且就算是不加班的情况也得回到家抓紧时间学习下技术，像我现在基本上每天晚上还得自己研究研究，一转眼也都是过了 12 点。</p>\n<p>虽说平时周末也会出去打球，但是现在到了冬天，看着这阴雨绵绵的天气也没有出门的动力了，也才工作两年时间就已经感觉肩部腰部都开始痛了起来。</p>\n<p>所以想问下神通广大的 V 友们是如何在这样的环境里保持身体不至于那么差的，我可不想等我成了家里顶梁柱时身体垮掉了。。</p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><blockquote>\n<p>感谢各位V友的回复 我也觉得这个问题貌似没有标准答案，道理大家都懂，只是大多数人在面对各种压力的时候都选择妥协了 我会根据各位的建议先试试。</p>\n</blockquote>\n</div></div>"], "reply": "79", "tittle": "在加班工作、学习还有个人身体健康上如何找到平衡点。", "comment": ["上个保险", "买保险，绝对不会亏。保险相当于自己存笔钱，未来用", "提高效率，拒绝加班。\r", "一开会就去「厕所」，直到有人打电话叫，那说明真的需要我去。\r", "不吃免费的晚饭。\r", "\r", "基本就差不多了。", "商业保险", " 能讲讲具体什么保险嘛 除了公司买的 别人推销保险的我都是直接挂掉 也不是很懂。。。", "买重大疾病的。我买的保险附送死亡后拿到赔偿的。所以除了看病，死了也可以给家人一笔钱。\r", "然后如果不缺钱就多买一份意外险。这样基本全覆盖了。", "拒绝加班", "Winning - Jack Welch, 专门有一章讲 work-life balance", "我来打击一下各位, 这不是个人的问题, 所以基本无解.  你自己 work-life balance 了, 你在全员加班的环境里就显得格格不入, 一堆价值观不行, 态度不端正之类的评价就贴到你身上了. 人在江湖身不由己.\r", "对于资本家(以及各色创业公司 CEO)来说, 他恨不得一天当两天用, 总想着快点超越竞争对手之类, 你的健康他们真的不怎么关心, 反正干几年说不定就走了.", " 真的是这样，全员加班没法独善其身啊", "找个女朋友,身体就会开始好起来", "每天抽出一小时， 健身。别说一小时你都没有。", "尽可能不加班，合理饮食、作息，适当运动（循序渐进，不可盲目运动），额外买些合适的保险，多跟家人朋友沟通，排解压力，理论不少主要还是找个合适的点", "去国企或外企或者做国外远程", "适度运动，一门较深入的爱好及相关人脉圈子，始终乐观心态", "游戏行业的 过来路过一下\r", "呵呵呵", " 身体更差啦。。", "我现在的原则是，一到晚上 11 点半后，不管事情多大，除非是立马不做会死人的事情，都全部放下，上床睡觉，简直一星期后身体就会自动在 11 点左右犯困提示你该去睡觉了", " 买香港保险， 总体收入和索赔上比国内好很多", "真感觉卖保险的到处都是。难道买了保险就能保证健康了？健康是自己与生俱来的，钱财只是身外之物。", "我们真正的家不是房子、城市甚至国家，而是我们的身体。只要你还在这世上，它就是你的灵魂和精神唯一一刻都不离的栖居之所。它是这世上你所能照料的有形之物中最最重要的。", "看到很多说买保险的，我想问问你们索赔过吗？反正我索赔的时候，非常费劲", "1.外企压力也还凑合，但是外企工资不会很高，比如 IBM ， ACN ， Intel 等等这些外企，非常容易找到平衡点。\r", "2.可能见着周围有朋友累倒的，得甲亢的，白血病的，现在拒绝加班，我身体也还凑好，但是也不愿意经常加班。\r", "3.每年坚持体检，无论有多忙，去查一查肝功，肾功能，甲状腺，心脏等等。\r", "4.加强体育锻炼，但是不代表经常锻炼的人不会死，尤其小心猝死。\r", "5.由于我一毕业就进入外企工作，工作 2 年了，大多都是走流程的工作，接触到业务以及对技术提升并不是很大，所以你要考虑好这一点。", "我现在每天晚上 9 点-10 点健身房关门前锻炼一小时。\r", "\r", "被人喊着去不了我真的会发火...", "做技术的要学会抱团", "健身不能抵掉加班和劳累。 重要的是按时作息，合理膳食，戒掉烟酒。 \r", "当然， 这些也是然并卵。", " 没错，多休息才是最重要的，而且不是说我加班 1 小时，我再去锻炼一小时就能回来，我一般认为，加班的 1 小时所造成的身体，心理伤害，甚至得超过 3-4 个小时的锻炼才能回来。。。", "买保险？ \r", "以为是买个 AppleCare+换新机？", "感觉还是为了啥活着的问题，有些结了婚的，还很痴迷技术，天天搞到 2\\3 点……实在不明白，他们到底是为了什么……\r", "以前没谈女朋友时，很容易焦虑，有了女朋友后，慢慢，很多东西就放下了。。", "坚持锻炼", "看了楼上的，我也想买保险了。", " 这个可以试一试", "可以肯定，不能", "天天加班的公司，再多钱也不去", "身体修复最重要的是早睡，保持睡眠质量。要真有那么多事也早点睡早起干活。长期熬夜铁人也受不了，身体各方面都会出问题。我知道有很多人觉得 2 点睡 4 点睡也挺好无所谓，但是别把自己的特殊情况推广到一般情况。", " 但是根本不能睡着，辗转反侧~", " 那没招儿了，看来白天不够累，实在不行睡前撸 一管吧", " 会被同事干死吧", "加班不可怕，可怕的是加班还不挣钱。", "这个行业的人日常接触规范、标准和各种最佳实践，寻找最优解的倾向比较强。但实际上许多事情是不存在十全十美的解决方案的。\r", "先认识到这一点，再参考各种建议，可能会更实用一点。\r", "再平衡，也苦不过在工地上挥汗如雨的工人，健康不过有专业人士护理的权贵。如果忽视了这个限度，就成了一种“轻奢侈”式的不切实际的追求。\r", "解决方法是改变命运，其他都是改良而已。", " 更可怕的是还得了一身病。。", "游泳是对于我们这一行来说最佳的解决方案。\r", "\r", "但不管什么，重点在于坚持，否则都是白扯。", "辞掉工作，回家种地！", " 你还不能辞职吗？我现在是宁可少拿点钱都要去不加班的地方", "身体垮了自然就重视了。", "可以加个陪伴家人。", "自觉拒绝加班公司..\r", "不光是身体,你的技术上的成长也需要你有自由的时间.", "加班多钱少，何必呢？走吧", "总结起来就是：\r", "1.无法独善其身，人在江湖身不由己；\r", "2.上保险；\r", "3.所有建立在依旧加班基础上的方法都是治标不治本。", "我不认为楼上说的一堆堆道理哪个是题主不懂的，但是能不能做到就是另一回事了，所以这个问题这心没啥答案，你能做到那天自己就能做到了，也许有诱因，也许并没有。", "可以尝试一些时间短且高强度的运动，例如 HIIT 。也不用每天都做，但间隔不能超过 2-3 天。做一次也只要二十分钟左右，而且只需要瑜伽垫就行了，不用任何器械。\r", "只要坚持下去的话，每次运动都会大汗淋漓，包你爽快。如果不坚持，后果也有。例如我隔了一个多月再做，感觉体力明显下降，心脏感觉要爆了一样，感觉呼吸都跟不上，虽然坚持做完，但做完感觉头晕，缓了好一会。\r", "这个运动的好处就在于强度大，时间短，能够全身锻炼，可以让你摆脱亚健康。坏处就是：做这个不长肌肉，只能维持身材。\r", "以上是我的经历，楼主参考下。", " 好的 谢谢 我先买个瑜伽垫试试。", " 是的 道理都懂 真遇到了这种事情也是天灾人祸。", " 能瘦身么。。。", "睡不着，更多的是焦虑", "单身", " 一小时真的不够，至少三个小时，一个小时器械肌肉，一个小时跑步，剩下一个小时来回路上", " 被这句话震撼到了。", " /苦笑， 就近找啊，不是以塑型为目的，一个小时的运动量够了，现在 1 、 3 、 5 一个小时，明显感觉比以前状态好多了，不会那么容易乏，精神头也好多了。", "大环境不好啊 都要玩死这个行业了\r", "\r", "现在回家加班都算是福利了 而且是外企才有的福利", "辞掉加班过份的工作, 然后用业余时间学习和锻炼", "锻炼的时间总能找的出来 只要你自己有强烈的愿望", "互联网时代演化变迁，总需要前仆后继的人来当炮灰的。", "一年到头两三点睡觉", "饮食上也多吃点水果和蔬菜吧 平常休息的时候也多出去走走 工作之外也做一点有意义的事情😊 比如我做了一个码农的苹果铺子的小页面 ", "如果是我的话，基本会放弃治疗，然后果断抛开工作带着爸妈出去旅游。人固有一死，做太多挣扎也没必要，到头来该走还是走了，还拖累父母，欠下一屁股债，太浪费了", "买保险!\r", "保证 3 餐准时搭配合理；\r", "工作中记得常喝水常尿尿常舒展身子；\r", "每天至少上班下班能多走就走，或者租自行车骑一段路；\r", "一定要保证睡眠，晚 11 ， 12- 早 6 ， 7 点，睡眠不够，病魔附身；\r", "早 9-晚 9 点刨去吃饭时间和休息时间都不够完成任务的话，那是卖命；\r", "工作效率、学习效率和工作经验真的很重要；", "不要为了钱而去加班，因为，到你垮那一天，你也挣不够补偿家里人的钱。因为在他们心中，你是无价的。", " 跑步圣经？", "我司加班很多，已经提了离职申请了", "心理上，不要逃避眼前的问题，不要提前享受，以免造成心理负担，引起焦虑，内分泌紊乱。\r", "生理上，自律，早睡早起，针对睡眠质量有能力还是去搜一些资料，不要局限在旧的看法中。\r", "\r", "“人生苦难重重。这是个伟大的真理，是世界上最伟大的真理之一。”\r", "\r", "“自律是解决人生问题最主要的工具，也是消除人生痛苦最主要的方法。”\r", "\r", "摘录来自: 斯科特·派克. “少有人走的路 1 ：心智成熟的旅程”。 iBooks.", "关掉这个页面，赶紧干活", " 不要提前享受。👍", "感觉大家忘记重要的一点 学会撕逼", " \r", "是可以瘦身的， HIIT 流行的原因就是因为减脂效果好。百科里面有更详细的资料，感兴趣的话可以去看看。", "Java 萌新一枚, 现在是周六日保证各两小时的健身房力量、有氧、核心训练, 工作日晚上事情不多就能 8 点前走然后 9 点前到家抓紧时间吃晚饭准备然后在健身房 10 点关门前训练, 一周保证 2~5 练.\r", "反正就是不在这方面再给自己压力, 养成锻炼习惯, 有时间就去, 没时间尽量给自己创造放松条件.\r", "从小身体不好有过敏引起的慢性病差点挂掉, 现在过敏原也没有找到, 身体方面只能说自己多注意, 不甘心做瓷娃娃但肯定也不能硬撑.\r", "看各位说的, 以后也要注意下买保险了, 毕竟该有的准备要有的呀", "虽然我现在还是个在校实习的。\r", "给点简单的个人见解：\r", "饮食合理，水果之类的。\r", "之前我都是 1 点睡，最近开始设了个 11 点的闹钟，闹钟一响开始准备睡觉。\r", "锻炼，周末有时间可以去跑跑，不过我不太喜欢跑步。一般在室内做一些运动。大概半小时~一小时左右。\r", "认为睡眠才是最重要的。尽量早睡。", "用定时提醒软件，工作期间每隔 30 分钟起来简单运动 5-10 分钟，可以高抬腿跳，双腿前后交替快速原地跨步（配合手前后交替摆动，不知道怎么描述，大概就这样，体育课热身运动常用的一个），俯卧撑，仰卧起坐，有条件最好借助工具引体向上哑铃飞鸟之类的刺激一下背部。\r", "坚持几天效果就来了，工作完一天就不会再有那种“被掏空”的感觉。\r", "\r", "下了班再花 2 小时左右健身（估算 1 小时交通时间），看身体状态一周 3 次左右系统的无氧运动（我是这样胸和肩 1 天，背 1 天，腿 1 天，手臂在练胸的时候练二头，练背的时候结束后刺激一下三头），一周 1-2 次有氧运动。\r", "\r", "当然吃饭的营养一定要保证，跟着健身的节奏来，进入到稳定的健身的人的代谢水平之后食量自然会比身边人大很多，跟着自己的食欲来，多吃肉（肥肉不算，牛肉鸡胸肉最好了）蛋奶豆。\r", "\r", "睡眠尽可能睡到自然醒。\r", "\r", "最后一句忠告，健康和不健康的生活，都是自己的选择，有的人拼命工作放弃了保持健康生活的时间，那是他选择了不健康去换取金钱；然而你选择还是放弃健康，主动权都在自己手里。", " 游戏+1"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>原来用 github 上的纯静态系统，最近瞎忙活，自己搞了个博客系统 FLask+Markdown+Bootstrap+AngularJs\n免费云服务器用： <a href=\"https://herokuapp.com/\" rel=\"nofollow\">https://herokuapp.com/</a></p>\n<p><a href=\"https://kimxu.herokuapp.com/\" rel=\"nofollow\">https://kimxu.herokuapp.com/</a> 这个是预览效果，原来的到期了，还没有买域名</p>\n<h4>####### ######### ####### ######### ####### ######### #######</h4>\n<p>这个是源码，放 github 上了： <a href=\"https://github.com/Kimxu/pythonanywhere\" rel=\"nofollow\">https://github.com/Kimxu/pythonanywhere</a>  （如果觉得可以谢谢 start 下）</p>\n<h4>####### ######### ####### ######### ####### ######### #######</h4>\n<p>这个是使用教程： <a href=\"https://kimxu.herokuapp.com/posts/the_blog_guide/\" rel=\"nofollow\">https://kimxu.herokuapp.com/posts/the_blog_guide/</a></p>\n<p>直接写 markdown 上传 到服务器 自动转成 静态文件（当然需要登录），因为只需要存用户名和密码，可以把密码账号存环境变量里面（这里用的 sqlite 数据库）。</p>\n<p>最后可以交换下友链啊~~~~ 2333333</p>\n</div></div>", "<div class=\"topic_content\">看到有六个人收藏了此贴。。无比开心 = =</div>"], "reply": "10", "tittle": "安利一个博客系统", "comment": ["可以加个.gitignore 你这项目看着像是拿 flasky 改的", "最近也在鼓捣他们家的东西，英文不好，各种懵逼， 2333", "可不可以自动从 github 上面抓 md 文件？这样只有配个 github 项目地址就行了。", " 和那个不一样，，当然我看了很多个项目，除了登录那里，其他都不是一样的- -", " 花点时间也是可以的", " 各种谷歌，各种尝试最后才好使··", "我最近也在找这种轻量级的 blog ，楼主这个貌似是根据 ", " 改得吧，我的需求和楼主大致差不多，就是用户登录这块我感觉还能更轻量，不喜欢数据库。", " 是的，是在您发的那个 github 的基础上进行二次开发的，进行了一些修改和改变，主要用的是他的那个 markdown 转换 html 那一个文件。您可以看他的 github 上的一个 issue ，就是我回答解决的。 数据库那可以在环境变量里面写进去个用户名和密码，就不需要数据库了。", "看到自己写的东西竟然有被使用，感谢感谢", " 写的 markdown 那里真的很棒，哈哈~~~~我在 github 上回复过你的~~~"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>创建这么一个仓库，主要是想收集下 V2EX 内比较实在点的帖子，或者项目；目前水贴，无病呻吟，瞎扯淡帖子太多。\n<a href=\"https://github.com/V2Git/Aswsome-V2EX\" rel=\"nofollow\">https://github.com/V2Git/Aswsome-V2EX</a></p>\n<p>提交格式：</p>\n<pre><code>名称： vim-chat\n简介： vim 聊天插件，支持微信、 QQ 、 Chatting 。\n帖子链接： https://www.v2ex.com/t/321736\n项目链接： https://github.com/wsdjeg/vim-chat\n</code></pre>\n</div></div>"], "reply": "2", "tittle": "V2Git/Aswsome-V2EX", "comment": ["Aswsome -> Awesome", " 实力！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>在公司里面面试了好几个应聘前端工程师的人，除了 css 跟 jQuery 之外，其他基本上都不懂，排序算法普遍不能说出快排跟冒泡排序的区别，更不用说实现了。\n有时候我在想身为一个面试官，我应该考算法吗？但是不考算法的话，我没法检验他们是否符合工程师而不是设计师的岗位要求。\n一个页面 jQuery 写几千行，完全不用函数，不断地用 jQuery 插件，除此以外连个简单数组排序都做不了。\n请问各位前端大神应该如何面试一个前端？</p>\n</div></div>", "<div class=\"topic_content\">非常感谢各位的热心回复，考察算法是我想不到其他更好的方法时提出的。其实公司对前端的要求并没有硬性要掌握各类算法，公司只是需要可以独立完成活动页（小游戏），后端 API 对接，上新项目时（ SPA ）可以承担编写业务逻辑的前端工程师。\r<br>面对这样的需求以及目前的情况我因此产生了几个疑问\r<br>1. 这样的要求是不是太高了？\r<br>2. 在满足上面三个要求的同时，要求编写可以维护，有组织，结构良好的代码是不是太过分了？\r<br>3. 若是笔试出编写组件的题目，面试者不通过，然后这样的人应该招过来培训吗？还是直接拒绝？</div>", "<div class=\"topic_content\">补充说明一下，我司是很想招前端工程师，按反馈的情况是能接受略低于 BAT 的价钱。\r<br>当然若是大家说 BAT 里面拿 25k 一个月的前端也是写一下静态页什么的，那么请当我没说。\r<br>我司也愿意培训，前提是应聘者不开出前端工程师的价钱。举个反面例子就是， 10k 起跳，会 jQuery,会 html ，会 css ，其他一概不会，英语文档从来没看过，你是不知道他英语文档阅读能力的。\r<br>这就是我目前招聘时遇到的情况，跟据大家的反馈我之后会选择编写部件的方式来作为笔试考察方式，谢谢大家的热心反馈，谢谢大家\r<br>我并不是否认只会 jQuery,html,css 的人的价值，只是在我们公司的环境下，这样的人以及技能对于我司来说不会花 10k 以上的钱在这上面。若是要 10k 以上至少要满足写出可维护的代码，对前端工程化有了解，能独立完成工作（对接 API ，实现或移植小游戏，编写业务逻辑代码）</div>"], "reply": "92", "tittle": "前端工程师应该掌握算法吗？", "comment": ["一个页面 jQuery 写几千行，完全不用函数  -> 这不就是不合格吗。还用得到考算法？", "工资高需要，不高不需要🙄", "前端现在不是改问 vue.js  react 了吗喵\r", "\r", "算法不是不知道问啥的时候问的么(", " 这是已经存在的代码，主要是想不在招这样的人了，太可怕了，就不知道为什么他们不觉得这样维护起来可怕。加功能的时候他们还能往上面加，简直碉堡了。", "我是做前端的。我认为工程师都应该学习算法，我觉得那是一种对心智的锻炼。", " 那我觉得不如现场让他们实现一个组件，考察编码习惯，设计能力。我觉得在工作中这些比怎么手写一个快排更重要", " 都是只会 angularjs(1.x)， vuejs 跟 react 就只听过，问的话也没有什么可以问啊，追问 react 的 virtual dom 肯定答不上， vue 我自己不熟，不好问。我一般倾向于面试者会了解框架作者的意图，知道框架的设计思路，而不是仅仅会双向绑定。\r", "这样是不是要求太高了？", " 写一个组件啊，这是个方法。不过会不会要求太高了，看了很多都是培训机构出来的，培训机构教什么就只会什么，还有一些自学的，好像都是没有软件工程的思想，从来都不考虑代码的可维护性。\r", "换你面试你觉得招这样的人回来，然后再慢慢培训可行不？", "简单的说 两个人，实现一个滑动效果 会算法的写了 15 分钟 不会算法的 用插件 10 分钟搞定。然后。。。。。。会算法的发现 自己的算法在 IE 下不正常，开始调试，再次发现有内存泄漏，等修复完了 最后发现。。。。。 老板让实现滑动时有弹簧效果   而插件一方就自带 Effct 参数", "只要是写代码的软件工程师, 都应该了解并且熟练运用算法, 这是基本的态度", "招码农不需要\r", "招工程师需要\r", "看你愿意为招聪明人多付出多少而已。", "我以为前端不仅要懂前端的东西，后端的也要懂一些才好。一点后端的都不懂，沟通太困难。\r", "你说后端需要算法么？", " 校招表示一面就追问到 vdom 实现了…不算太高。我认为前端工程师首先是工程师，和聪明人一起共事效率会高很多。", " 后端当然需要需要算法，算法不过后端直接踢掉，整天写 O(n^2)的东西，谁受的了。", " 公司是与愿意招工程师的，也愿意给市场的价格，但是好像就是比较难招。而且来的人好像一见我问算法就一副我侮辱了他们的样子，所以我才有疑问，前端工程师难道就不是工程师吗？是工程师的话算法不是基础么？", " 是啊，不过好像面试的人都认为前端入门容易，说真的，那些所谓 3 个月速成前端工程师，在我看来都不太行，公司换一套前端技术方案就完全罢工，前端工程师没法对前度技术提意见，哎", "算法是面试的笔试部分", "给楼主一个我最近碰到的需求 给定 w x h 的区域，若干个尺寸不等的矩形，其中矩形长宽都是整数\r", "请设计或者 google 一个算法，让排列尽可能美观", "我一直认为，合格的中高级前端，常见的冒泡、插入、快排要能用 js 实现", "我怎么感觉 css 好难好难～～～当初到底是怎么设计的～～～", " 让我来的话直接的想法肯定是贪心法，不过应该不符合尽可能美观的要求。稍作一番分析觉得跟最小二乘有关，应该可以抽象成一个线性组合的相关问题，具体的要再想想", " CSS 主要是学习成本高，各种浏览器兼容问题，花点苦力气学扎实，之后会比较轻松的", " 当初的设计我觉得跟今天的前端工程化趋势已经大为不同了，现在流行组件化，其实在在很多情况下， css 的设计跟组件化是想左的，比如组件应该跟外部隔离，但是 css 在正常的情况下又会影响组件的内部状态，因此很多人提了 css module 这样的方法，当然这也会造成 css 冗余。不过我个人觉得 css module 带来可以隔离一个组件的状态的优点显然大于其引起 css 重复冗余的缺点", "不需要，但是面试适度问点算法以筛选人。", " 神逻辑，这波解释我服", " 卧槽，画面感好强！同是觉得这个解释非常让我信服。", "楼上一群自以为是的想法。。。\r", "\r", "以整天只面向逻辑的「工程师」的标准来看前端，我看到了前后端之间很深的误解\r", "\r", "前端是个很特殊的位置，面试侧重点还是应当放到前端基础、项目经验、工程性问题、处理问题的思路等方面，算法只当加分\r", "\r", "「面试前端问到算法」没有问题，有追求的程序员都会去了解算法。可是如果「只以算法来面前端」的话，我认为这就是 leader 不识才了\r", "\r", "如果不清楚面试能问什么，请搜索各大公司的「前端面试题」，估计能让你们大开眼界", "前端的工作场景中绝大多数用不到算法，想往深问，与其问算法不如问工程化、设计模式、编程范式这些更实用且能直接反应生产力水平的内容。\r", "\r", "你可以认为所有工程师都需要掌握算法...但是前端就是这样一个神奇的工种，不会写快排也不会妨碍一个人又快又好的出活..对于前端来说，会算法应该是一个加分点，而不是一个必需要求。", " \r", " \r", "非常感谢，两位的观点，就是觉得考算法嘛好像能考一些软件工程，但是好像又不像。我主要还是担心他们的工程化水平，几千行 jQuery 调用代码，真的吃不消。不过之前看了其他公司(trello)的前端面试，好像跟软件工程的都不是特别沾边，最多是有考察 debug 的", "面试是不是为了考核被面试人的技术水平，还是看被考核人是否能胜任这个工作。\r", "\r", "工作需要熟悉算法，就重要。\r", "\r", "工作不需要熟悉算法，就不重要。\r", "\r", "如果只是把算法作为一个评分标准，那么就要明白这个标准对这个工作的意义。", "需不需要考算法是招聘的公司定的，你认为要就需要，我自己的话更看重解决问题的速度与质量。又快又好的直接去和老板聊；稍慢一些但质量不错的也要；很快但质量一般的，只要人品没问题也考虑要。", "大部分排序都能手写出来，不过并不妨碍我做不出好看的页面来啊。其实我这种是更菜的，", "等你坐在老板的位置上再去思考工程师需要的知识结构和技能会更有意义点。算法只是其中很小的一项。", "野蛮生长。", " 主要是现在负责面试的人是我，所以不得不想这事。若非我面试自然不用管这事了。还有就是跟招进来的前端工程师配合比较吃力啊，很多东西都出来的效果跟需求都相差很远，上面给压力不小。\r", "我们这里前端主要负责推广页的制作，推广嘛，运营肯定是需要搞一些小游戏什么的，这些都是归前端管了（ API 后端已经实现好）但是前端明显 hold 不住啊， bug 很多， debug 不能自个完成需要投入其他人去帮助。因此才过来提问是不是招人的方法不对，面试前端的时候应该注意什么。", "你是正确的，现在培训班太多了，不是说培训班出来的就没有好的，但是大部分都是没有所谓的素养的，自学能力较差。我们首先是程序员，再是一个前端。算法很重要。", "算法+数据结构+网络+操作系统\r", "\r", "这四大基础是一个合格程序员必备的吧", " 其实很简单的，看他写过的项目，然后问遇到过哪些坑，顺便观察下他解决思路的方式。如果像你说的前后端联调交互都做不好的，那基本上就是很水的前端了。更别说前端工程化。\r", "算法的话我是建议看人吧，如果问过了他简历上的项目及熟悉的技术栈后觉得不错，可以适当的问下算法的问题，当作事加分项。\r", "\r", "不可否认，现在培训班出来的太多了，我上周面试遇到两家公司当场问我有没有参加过培训班。超级无语。", "代码工程化什么的，跟算法没什么关系啊。搞 ACM 的，算法个个都高手了吧，但做题的那代码拿工程标准能看吗？连变量名都未必能合格。\r", "真要很能玩算法的我反而担心别人读代码时能不能理解他那思路…… Unix 哲学的 KISS 还记得不。 Keep it simple, stupid. 你写太精妙了别人看不懂啊。", "> 这是已经存在的代码，主要是想不在招这样的人了，太可怕了，就不知道为什么他们不觉得这样维护起来可怕。加功能的时候他们还能往上面加，简直碉堡了。\r", "\r", "是不是离职比较好？", "刚才正好在知乎看到一个回答《字丑的演员会有字替么？》 ", "\r", "\r", "一个演员要书法好有什么用？可能一辈子都用不到几次，但是为什么有的演员就会去练？我觉得这就是职业素养。\r", "同理，前端程序员可能一辈子用不到几次算法，但是即使不用，算法也隐藏在运行的代码，使用的库之下。了解算法是一个程序员的职业素养。", "应该，而且必须。", "第一，首先打一遍楼上会写算法的人的脸，本人对算法持保留意见，\r", "绝大部分搜索排序等算法只要知道其算法复杂度，与大致实现即可，需要的时候再去找\r", "（这些算法比楼上发帖的各位年纪都要大，基本有针对各种应用场景的最优解）\r", "面试算法的时候，应该多了解面试者的知识面，而不是针对某个具体的算法题，\r", "你们前端大神 淘宝的 winter ，在职人节目上不就死在了最简单的 3sum ，\r", "这个题目连我这种菜鸟都知道有 O(N3) O(N2 LogN)的解法，拿起书本来，我可以告诉你是哪一章节的题目，\r", "小学生难度的狗屎题不也把 winter 这种大神给难倒了么\r", "\r", "\r", "\r", "以工程实践的角度来讲，算法如果有现成的细粒度并且合适的封装实现，\r", "自己实现是找抽，我经常看到某些新手在 Java 里面写着蹩脚的二分查找实现，\r", "先不说容易出错，而且扩展性极差，基本是跟具体的类型耦合在一起的，\r", "大哥，查下 API 会死啊， Java Util 提供基于接口的二分最佳实现\r", "\r", "第二，面试算法要看你这个程序员程序员的开发领域，\r", "你一个前端天天跟人家扯啥动态规划干嘛，\r", "简单点的动态规划，面试做出来了，不一定显得牛逼，\r", "也许人家正好刷过这题，难一点的动态规划，人家面试 30 分钟， 20 分钟给你去思考这个递推公式了\r", "我觉得最好问下前端工程师，重力加速度是多少，加速度计算公式，以及牛顿定律\r", "做动画效果的时候倒是经常能用得上", "\r", "这个视频再一次证明了，优秀的工程师，并不一定算法好，\r", "真要到了这种需要写狗屎题的时候，请提前告知下我，让我好好准备下", " 然而人家能现场推，你能吗？", " 现场推有什么难的？\r", "你要是刷过这个题，就像赵姐夫，人家直接可以在算法（第四版）上找到，\r", "我也刷过这本书，推出来一个 O(N2 LogN)还是没问题的，因为这本书上 也只有 O （ N2 LogN ）的解法\r", "后面知乎上 轮子弄的那个算法我就不会了，彻底懵逼了，", " 点名告诉你这是哪本书，哪一章节，哪一页（后来牛逼吹大了，又把这句给删了）", " 我们说的算法和你背哪本书上的算法不是一个东西。", "前端工程师从来都不缺，缺的是优秀的前端工程师，而会算法的基本上都在优秀前端工程师范畴，这种人还是比较希少的。", "我觉得招人应该考虑的是招人的需求，比如你招他进来希望他能做什么，他是否满足需求，如果能，那就问得再深一点，以作加分项。", "要实习吗，这俩算法的 JavaScript 实现我能手写", "如果是切图仔不需要算法， JavaScript 工程师必然要阿，现在哪个前端框架里没有大量的算法和数据结构", "我觉得如果你们公司需要用到算法的场景比较多，那么可以用算法来考察，否则这个只能作为加分项。\r", "\r", "虽然大家都说算法是一个程序员的基本素养，但我还想说，逻辑思维才是程序员的核心。如果你真想靠算法，我觉得也别拿那种书本上常见的算法，用术语来描述，这其实没意义...中国这种应试环境下，会投机的谁不会想到背几个常见的算法...会写常见的算法的不一定是优秀的程序员，优秀的程序员也可能写不出一些你们认为常见的算法。例如， Max Howell 因为翻转二叉树而被刷...作为大名鼎鼎的 Homebrew 作者，他怎么可能写不了这种算法呢？其实很大程度上，他只能不知道这种简单的代码逻辑原来有个术语叫 翻转二叉树  Invert Binary Tree ）...当然， winter 的遭遇也一样，所以即便你想考察算法，请不要...用具体的术语描述，请用实际的题目考察，比如列一个数列，让对方用最简单的代码进行排序。\r", "\r", "逻辑思维才是程序员的核心，算法应该是逻辑思维的一种，但算法绝不等同于逻辑思维。\r", "\r", "作为前端开发这个特殊的职业场景，很多时候，甚至大部分情况下都不需要手写算法...因为很多基础算法都已经被包含在 jQuery 、 Three.js 这类成熟的库里面了。有一些科班（甚至部分培训班）出身的面试者而言，算法完全是小 case ，因为他们考试考过，但他们很可能还不知道 jQuery 的内部实现， Three.js 的应用场景...所以我建议考察前端能力还得因地制宜，比如考察他们编写页面插件的能力，第一可以看出他们的逻辑编程能力，二可以看到他们的代码风格（是否利于团维护）。\r", "\r", "最后我来回答你的一些疑问：\r", "\r", "1 、如果以算法来筛选前端程序员，肯定是高了...除非你打算招一个架构级别的大拿（就当我没说）\r", "\r", "2 、编写可以维护，有组织，结构良好的代码这其实比考察算法重要，但也最难把握，毕竟大部分人都有自己的一套代码风格，但如果他的代码看上去很舒服，那肯定比看上去不知道是什么的那些人要好“交流”。\r", "\r", "3 、编写组件的话，如果写得一团糟的话，即便他能把快排排序、冒泡排序、甚至翻转二叉树之类的背得烂熟于心...我觉得还是别招进来了，免得给自己添麻烦...老板要找的不是会算法的，而是能干活的...", "2 楼正解...\r", "\r", "另外 23 楼的所谓淘宝 winter 大神, 也就是知乎上小白的吹捧... 按他的阿里级别来说, 不止 10 个人和我说过此人是个水货... 参考他的发言觉得阿里水货的评价更符合事实...", "如果考算法的目的是考验逻辑思维的话，你不如找点高中数学卷子给人家做了。\r", "高中数学题做得好的人逻辑思维强吗？是的。\r", "高中数学题做得好的人代码写得好吗？", "个人觉得有些软实力比算法更有用, 比如沟通能力.  算法这东西在一般的应用开发中使用不多. 真心是忍受不了沟通能力差的人, 跟他讲半天他还不知道你在说什么. 另外 应该还可以问下他都看了哪些书啊, 有什么看法, 这样我觉得可以侧面了解到这个人对技术的认知", "我觉得面试算法没错，我自己也是个算法渣渣，但面试前我都会好好复习下基本的算法的，这真的是一个态度的问题，作为一个有理想有抱负的程序员，如果连简单的算法、常见的数据结构都不懂地话，可想而知这个人有多浮躁了。我是混过前端圈的，里面的浮躁程度让我咋舌，如果是一个前端 er 说算法不重要我是一点都不惊讶，毕竟培训下 Vue 、 React 就敢去一线互联网公司面试的我只服前端 er", " 回答很棒，薪金   有时候   代表了质量", "当然需要，仅从工作的角度来说，想肉翻你就必须得刷算法。", "我觉得前端技能由低到高是这样：\r", "新手村技能是会用一个已知的大轮子（比如 jquery,angularjs ）的基础功能、知道这个轮子的常见插件，这个等级能应付目前常规需求；\r", "初级技能是找轮子和看文档用轮子，这个等级能对新需求写出能跑的代码；\r", "中级技能是比较轮子和看社区讨论，这个等级能让程序跑得快些；\r", "高级技能才是懂算法，这个等级能优化程序减少 bug ，提高代码可读性。\r", "以上顺序不能颠倒（只会算法还不如新手村），根据你的预算找吧。\r", "\r", "N 年没碰 javascript 了，前些天想写个 js 页，显示几千行不分页的表格数据而已（本地打开）。\r", "先是直接用 jquery 手写，结果浏览器崩溃。\r", "后来花一天找轮子、看说明和评论选轮子，花不到半天重写就完成了，顺便连排序、查找、调整列宽、隐藏列等功能都有了，还好看得多 😂", "代码需要 review, 算法写的好, 和代码写的漂亮没多大关系...自己也不太喜欢考算法!", "OP 搬了 winter 的例子想要表达算法不重要，我提几个点：\r", "\r", "1. winter 的表现是个例，而且有评论对 winter 的水平表示质疑。这个例子应该无法反映大盘情况。\r", "2. 面试考算法与工作中用不用得到算法，是两回事。\r", "3. 目前的现状是，高梯队的公司，比如 MFG 与 startup 独角兽，都采用考察算法的方式评估面试候选人。作为个体，如果背景不强，只能去适应游戏规则。", " \r", " \r", "所以我也在考虑是不是要报个九章算法班刷刷题了", " ：\r", "如果考算法的目的是考验逻辑思维的话，你不如找点高中数学卷子给人家做了。 \r", "高中数学题做得好的人逻辑思维强吗？是的。 \r", "高中数学题做得好的人代码写得好吗？\r", "---------------------------------------------\r", "你这就是典型的逻辑差了。逻辑强是写出好代码的必要条件，而不是充分条件。\r", "还有，高中数学卷子对逻辑能力的要求比算法还高吗，不见得吧。", "从程序员角度来说，任何不想吃青春饭的程序员都得掌握算法等专业知识。\r", "从公司招聘角度来说，看你工作具体需要和开多少工资了。", "打个武侠比喻：算法如内功，没有内功，武功的招式再厉害也不会有质的提升，更别说那些花拳绣腿了。", "算法是核心，不然就只会是拼凑 API", "逻辑强也是做高中数学卷子的必要条件。而如果逻辑强不是写出好代码的充分条件，那算法强也不是写出代码的充分条件。\r", "高中数学卷子对逻辑能力的要求怎么就不比算法高了？你是如何评判对逻辑能力的要求的高低的？", "1. 不是只有那些算法才算算法\r", "2. 不要说得前端工程师不是工程师一样", "如果算法有问题，说明这名面试者： 1 ） 不爱钻研 2 ）学习能力一般 3 ）对计算机的兴趣程度一般\r", "\r", "当然算法好的也不定水平就强，可能是正好背到哪一题，但是最起码这个人愿意学习，就算资质有限，算法题需要去背。", "我以前也一直觉得前端不需要学算法，但是为了找工作也一直在刷 leetcode 并且觉得没什么用。直到我看了 Virtual DOM 的实现并且自己跟着帖子手写了一个以后才知道前端算法重要性。", "我觉得考考快排这种简单的就好了", "相对的，你应该考试前端中的优化问题，比如 CSS 怎么写更快， js 怎么写更快更可维护", " 你这个例子举得与算法没有任何关系，明显是会不会利用资源的问题，那人只能算偏执去造轮子。但是如果没有现成的可用，第二个人写不出来那怎么办？不少公司会出现一个技能难点没人能解决的尴尬，只能到处求救。\r", "前端工程师会不会算法看公司人员配置，已经有解决问题的一两个人了，后面招进来的是否需要此技能问题不大", " \r", "大概是你筛选简历的能力太差\r", "看你招聘需要的是“前端工程师” 还是 “给 html 加点特效写两个 ajax 用 jquery 验证个表单的人”\r", "\r", "你要是需要的是后者 无所谓", " 不是我筛选简历的能力太差，是老大说别人从山长水远的地方过来了，一定要给面试机会-_-b", "借用玉伯一句话，“我们需要的是能力互补的人，而不是能力重复的”\r", "原话记不清，大意是这样。", "通常情况下，我面试的时候会考查一下手写冒泡排序，如果能写出来当然最好；如果写错了，但是其他方便比较好，也可以考虑，毕竟其实在前端的工作时间里，用到算法的地方还是比较少的。", "你需要的是一个砍刀，还是需要一个机关枪，如该需要是一个砍刀就别按照机关枪的战斗力去要求，如果需要后者面试的时候就说好。\r", "\r", "问题是你需要这个武器是干嘛的，你是近身搏斗还是远程打击！\r", "\r", "弄清楚自己的需求，然后根据需求招人！", "所以还是要回答这个问题，你想招一个什么样的人，预算是多少？", "看你做什么了", "你可以让他们直接展示自己做过的项目，看看他们源代码的代码规范性怎么样，因为国内像谭浩强这种教程深入人心，很多人都习惯了他那种 abcd 的变量命名和不规范的缩进，你光看算法根本看不出他的代码质量和对于大项目，逻辑复杂的 SPA 等等的编码能力。", "看多点不吃亏哦", "大概是在今天凌晨 3 点多醒的然后就睡不着了，那天看到同学在看这个网站  此刻我终于拥有了评论的权利：\r", "我赞成的观点有：===》招码农不需要 招工程师需要 看你愿意为招聪明人多付出多少而已，反正你招人，为什么还要这么墨迹，知道你矛盾但是每一个人需要成长空间，你要是不愿意给就不给， 不要说会什么才算合格的 xx 猿。\r", "总之，我挺烦你发的这个帖子。没错我是小白 并且是正在培训班的小白。怎样，这里是大牛怎样，想想你当初是啥样了，姿态，不是 这样用的。完毕", " \r", "我讲的都是我身边的事情，这个我真不知道我哪句话冲撞了你。\r", "公司是这样的，公司招人是给需要员工创造价值，这个是上司对我面试的要求。也就是招人回来，给他 5k 薪水，他必须创造超过 5k 的价值。\r", "至于说给不给时间这个是很多因素，公司不是一个人，哪怕我给了，然后这个人又不一定分给我们组，若是分配这个人到一个都是立刻投入战斗的组，这样对他是不是负责呢？组内没有人会帮你配环境，没有人会教你语法，框架思路也不会帮你理，大家只会发你文档地址，然后你就得阅读文档立刻开始工作，这个就是目前的情况。\r", "同时，给这个人的时间的同时，要给多少薪酬？是按实习生来给还是按工程师来给？\r", "其实这个问题已经不仅仅是给我作参考，同时我认为也可以给广大面试官以及面试者一些参考。面试者需要公司给时间，但公司是不是也可以让面试者对薪酬给空间？\r", "我们招聘的都是前端工程师，不是实习生，都是想招立刻投入战斗的人员，工资我可以说，是市面平均水平，略低于 BAT ，独角兽，但绝对是互联网的价钱。你说一个自学 1 个星期的前端来面试，然后只会 jQuery ，然后开口说 10k 起跳，然后说之后会进步会很快，优点都是勤奋努力。说真的，我面试了至少 20 多位，每位都是这样说。\r", "哪怕是这样的情况下，我们还是招不够人，我们都已经不要求立刻投入战斗，至少真的进步快，潜质高就可以了，但是还是远远不够（过了 2 个月，还是不能独立工作）。\r", "你认为招聘仅仅是公司给的机会吗？那么现在快年底了，一个人 12 月进来，过了一个月我们发现他不合适，那么 1 月开头就叫他走？那是要过年的时间啊，不叫他走，团队其他人感觉不爽（分蛋糕多了）。\r", "这里通篇都没有强调算法的重要性，我只是认为算法是一个没有办法的办法，我的 append 都有说明。\r", "\r", "问起我的情况，简单说说\r", "我是一个很普通的人过来的，哪怕现在也不是什么大牛，若我是大牛的话我就不会发帖。\r", "我大三出来实习，非科班。拿不足 2k 的薪水，干前端，写 API ，维护机器（ ssh 登陆，安装包什么的），不足 2k 的那钱是包括加班费的，因此 9 点或者 10 点下班都是正常的。下班之后我基本上都会看 1 个小时跟 CS 相关的公共课，周末都会去看机械工业出版社大理石封面的书籍，《现代操作系统》就是那个时候看的。每天 7 点不到就要起床挤公交。这样的生活我过了半年。之后回学校专心学习了一年，期间看完了《 Linux 系统编程》，自己重新拿着《 C 程序设计语言》复习了一遍，也背了一下算法，不过是在不得要领，仅仅是强记了快排。当然也有上 leetcode 刷题, projecteuler 也有刷，但是不多，若是国内非独角兽的互联网公司，我认为刷完 leetcode 简单级别的题就是够的了。\r", "当然哪怕有同学做到以上的所有，我也不能保证你能至少达到我的程度，正如之前这上面有一位发过《其实你不用退学》一文，其实我想说，别人高中可是广东前十的高中，每年都有清华北大，计算机保送什么的基本上都是吃定的。还有要说明的是，我不是大学才开始自学计算机，我以前高中就有老师带过，要是说起来那我算是搞 OI 出身的，就是当时一个水啊，非常感谢我的高中电脑老师，是他们让我入了这个门。", "我不是太赞同考算法, 这只能考验他刷题的水平, 好吧至少证明他很在乎这个职位.\r", "\r", "不如换个方式,你找个算法的文档, 拿给他看, 过 20-30 分钟后请他解释一下这个算法以及如何实现(可以用伪代码), 这样是不是更好一些?\r", "或者请他介绍一下之前做过的项目, 考察一下他如何处理其中出现的问题.", "如果按照您现在的说发来看 您知道自己需要什么样的人  也知道您是要找什么样子的人 那为什么还要问这个问题。您可以征求大家的意见，但是我觉的您一开始的帖子说的有问题，给我一种必须一开始就得回算法才能当个码农的感觉，我觉的很不爽，很不爽。还有现在的的市场，不是一些培训出来的不愿意接受几 K 的工资 安心找个实习的，很多人学的很多，只是真正的缺少一个开发流程，去实战，可是就差那么一点某些公司就会特别打压给你个 3k 、 4k 的，那自己学的就那么差么？我觉的不见的，要是写个一年的工作经验吧，根本没有面试机会，连一个打电话的都没有，所以很多人都造假，我觉得作假特恶心，欺骗别人特恶心，可是自己就真的那么不堪么。不能说你不对，或者我不对，我在意的是您说话的那些语气，不是别的。我赞同一个真正的程序员是一定要有算法能力，可以我觉得这是建立在有需求的情况下吗，没有实战没有需求，怎么感觉算法重要？拿什么来感觉维护性的重要？如果您要招大牛马上能工作的您就在招聘的时候和面试的时候认准您的底线就 ok ，市场就是这样，大家都没错", " 你说的对，但我说的是个效率问题，插件效率更高不是吗？考虑到兼容性 内存占用 效果程度.. 额 前端有什么解决不了得难点呢.........实在想不出来", " 其实我觉得你是割裂了会算法跟用插件，这两个并没有联系，不是非黑即白，本身我们就应该强调 DRY 。所以一个前端工程师，就应该评估工作量，自行选择用插件或者自己实现。", "前端工程师懂算法的话，就懂得性能优化。某些页面优化需要前端的大力配合才能达到效果。", "楼主缺人吗，招我把， leetcode easy 难度的题没问题的水平..  ", " 我司缺人，坐标广州天河，有兴趣请投简历\"neo.blackcap 在 gmail.com\"", " 谢谢，可惜地点不合 .."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"sh\" src=\"http://i.imgur.com/IPLLnKP.png\"></p>\n<p>顺手欣赏一下一篇专业黑 react native 的好文：<a href=\"https://zhuanlan.zhihu.com/p/21677103\" rel=\"nofollow\">weex&amp;ReactNative 对比</a></p>\n</div></div>"], "reply": "17", "tittle": "weex 已经一周以上没 commit 了，难道又沦为 KPI 项目了吗？", "comment": ["虽然我写 react native 并且同样不看好 weex ，但是你至少切到其他分支看看有提交历史啊", "也可以看下最新的 issue 有没有人跟进.\r", "另外还看到的个团队也是放了很多 Weex 相关代码的, 更新蛮勤快 ", "有罪推论", " 看了下你的博客  写得挺深入的。但是博文时间好像穿越来了", "感觉大厂的很多开源都是一锤子买卖，能持续维护的不多啊", " 啊，居然第二天就被人发现了😓。\r", "\r", "我的后台可以调发布和修改时间，然后当初写博客的时候准备一个月写四篇，之前有一个月写多了，昨天强迫症犯了就把时间往后推，推了两个到 12 月去了。。。", " 23333", "winter 提交了一个 issue 希望改进性能，结果维护者的态度 。。。。。 ", "开始时还很有兴趣，结果后来一直没有官方打包工具，好久没看了，不知道现在怎么样了，", "\r", "Latest commit 0f5e34d  3 hours ago", " 很多维护迭代后不一定 commit ，稳定没有新需求也不是需要频率快更新", " 抱歉，我没看出来维护者的态度如何呀", " 维护迭代后不一定 commit 。。。这。。。你的逻辑有点奇怪...commit 换成 push 也好", "不要相信国内的任何开源框架", " 为什么所有成员回复都被 downvote ？", " 别说你没遇到过。一个道理"]},
{"content": ["<div class=\"topic_content\">RT.\r<br>Ruby?</div>"], "reply": "48", "tittle": "邮件列表这种较为古老的沟通方式现在还有多少人在使用呢？", "comment": ["很多人，你不用不代表所有人都不用", " 新手初次使用，想问问哪些社群在使用呢？", "开源组织用的多，比如 PHP 。", "我认识挺多大牛都在用", "我学院内部的各种通知仍然是邮件列表形式。", "一直在用", "邮件列表仍然有很多人在用，无论是开源项目还是公司，用得都很多。", "一直在用", "公司内部一直在用", "一直用，最主要的优点是：异步。这样可以节约双方的时间。", "Apple 在用 - - \r", "0x83A3EF8C346CB446", "Joyent\r", "Linux\r", "School\r", "etc.", "很多人都认为 Mailing list 和 IRC 已经没人用了。。。", "请举例代替邮件的东西", "Hr.", "在用， 干扰少", " \r", " \r", "什么叫邮件列表？\r", "就是 mail address list 么？？？", " ", " 哈哈，我还特地思考了下 IO 模型并且在脑子里面模拟了一下", "说说我知道的，国内外的高教系统、科研系统用量很大。开源组织，某些大企业。", "一直在用", "git 社区不仅仅讨论问题使用邮件列表，连提交 patch 和代码审阅也是，为此还特地开发了 format-patch 和 send-email 这两个工具。", "很多人在用，只是大部分都懒得说而已，如果说了，他得解释什么是邮件列表", " 咦？好像可以勾搭大牛的样子~（手动滑稽..", " Wow! Thanks a lot", " 在 google groups 里面吗？还是只是内部人员能看见？", " 是的....以前躺在教科书里的东西，第一次使用有种神奇动物复活了的感觉..23333", " 评论里说的有一些，有哪些好的邮件组可以加的吗？", " WoW!那还很棒，觉得比邮件列表这种形式比较严肃聚焦，正在学习", " Bingo", " Yep ，感觉到有这个特性了", "邮件组吧  公司内部不都是邮件组沟通么？", "有人在用 新闻组 的吗？", "还有人在用论坛这种古老的沟通服务.LOL", " 邮件列表，不是邮件", " 哈哈哈是的，出生在论坛的时代(つд⊂)", " 同问……", "新闻组可能用得没邮件列表多，但是有一些邮件列表和新闻组会打通的，例如 python\r", "\r", "回到正题， GitHub issue 是变相的邮件列表， google groups 也是一个把论坛和邮件列表无缝结合的服务，我自己除了这些还在参与 Debian 项目（全部使用邮件列表协调）、 LUG 、团队内部使用邮件转发功能实现的没有公开存档的邮件列表、以及一些杂七杂八没托管在 GitHub 上的开源项目", " 😁看错了，不好意思", "邮件这么好使的东西怎么能不用，你觉得的什么东西能替代？ im ？别逗了…", " 纵观回复，我有在逗吗？别附上多余的情绪", " 问题就很逗", " 一、问题问的是 [邮件列表] ，不指 [邮件] ，日常工作我每天面对邮件，邮件的重要性与不可或缺当然知道；二、你理解有误，认为： [邮件] 如此重要=> [邮件列表] 如此重要，还强行带上提问者很 [逗] 的情绪。", " 你都承认邮件重要了，那在使用邮件的情况下，要实现同样的目的，有什么比邮件列表更先进更方便的呢？我觉得你也不用回复了，咱们都 21 世纪了，还是不要用论坛这么古老的东西了。", " 1 、您终于不带情绪答复了； 2 、后面的问题您还是另找高人给你论证去", " r#26 见： ", " ，同理，你可以看一下其他知名的开源项目。另外，邮件列表一般会用 GNU Mailman 来搭建。", " THX~!", "Why kernel development still uses email\r"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>开源了一个微信小程序开发社区，供大家讨论微信小程序开发。</p>\n<p>WXOPEN Club 社区为国内最专业的微信小程序技术社区，致力于微信小程序的技术研究。</p>\n<p><a href=\"http://wxopen.club/\" rel=\"nofollow\">http://wxopen.club/</a></p>\n</div></div>"], "reply": "21", "tittle": "开源了一个微信小程序开发社区，供大家讨论微信小程序开发", "comment": ["你这叫安装了开源程序，不叫开源了程序。", " 23333 ，瞎说什么大实话", "求源码😄", "注册也是呵呵了，输入四个汉字还提示不够 5 个字符。。。", "\r", "\r", "源代码应该在这里吧。", "楼主，你的注册激活邮件是怎么搞的，刚才我装了一下，不发送邮件", " 嗯嗯，教训的是，标题写错了，不过末尾都标明来源了。多谢教育。", " 自己配置了一个邮件服务器。", " 为了大实话，我送出 10 铜币。", "楼主虽然技术很强，但是却不了解微信小程序", "\r", "\r", "楼主代码", " 瞎说什么大实话+10010", "\r", "和\r", "\r", "有什么区别？\r", "\r", "建议楼主试试 NodeBB ，我记得以前 CNodejs 有好多问题。。。", " 快点去搞 VUX ， 搞好再来 V 站搞  ：）", " 非常感谢，这个就是搭建了一个简单的有一个平台讨论用。", " 技术强？就是一个垃圾技术，的确也不懂。不过已经投入开发并录制了一些教学视频上传到社区了。\r", "我觉得录视频比当一个喷子难多了。", " 催稿催到 V 站了，这就相当尴尬了 :sweat:", " 我并非指责或贬低楼主     我说这句话     是在认真研究了你的网站内容之后才说的     假如让楼主误解了     我在此道歉", "  issue 里面的催稿通知，每天都在我的 gayhub 上 。。。", "求视频放到百度云可下载\r", "国外看优酷太慢了", "同求"]},
{"content": ["<div class=\"topic_content\">Hi ，朋友，我有一份关于程序员的问卷调查希望得到大家的帮助~~ 本问卷是针对程序员朋友的匿名问卷调查，不会涉及您的隐私外泄~~ 为追求数据的详细真实，请您根据实际情况填写，感谢各位程序员朋友了哈~~\r<br>\r<br>问卷调查链接： <a target=\"_blank\" href=\"https://fanqier.cn/f/qvpn6o\" rel=\"nofollow\">https://fanqier.cn/f/qvpn6o</a></div>"], "reply": "目前尚无回", "tittle": "一份 [程序员问卷调查] ，需要大家的帮助~~", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>OneNote 和 EverNote 是非常通用型的。 MacOS 上有没有对程序员友善的记事本软件呀？求前辈们推荐。</p>\n<p>例如 Quiver 不错，但是收费。</p>\n</div></div>"], "reply": "116", "tittle": "有哪些对程序员友善的记事本软件呢？", "comment": [" 同。 onenote 用来画图 = =，笔记主要 markdown+git 。\r", "但是... 很缺一个轻量的全文搜索啊。 跑在本机，能 sublime 里直接调最好（更合适的是接入 Alfred 这类软件了）", "Tiddlywiki + Dropbox", " atom 为什么我使用的过程，写着写着就卡了，然后打的字过会儿才显示在 Atom 后边", " 你说的这个我知道的，添加标签就什么好说的，放大镜搜索的话这个好像是搜全文的，占位符里提示可以用#tag 的方式搜标签，但其实没用", "sublime 写 markdown ；在终端里使用 grep find 查找。", "没人在用 Chrome 的 GistBox 插件么？ 直接用的是 Github 的 Gist ，写写代码片段啥的，表示超级好用", "\r", "试试呗\r", "不知道这个回答算不算偏题", " 所以我最近换 Sublime 了, atom 太卡", "dash ，记代码片段", " sublime 已经折腾过一次了，最近心水 vs code ，哈哈", " 不支持云端，不过是本地创建数据文件，可以用 Dropbox 来同步，或者其他同步软件", "  笔记我都上传 github 的，直接上面搜就是了", " Sublime 哪里不好么，除了没办法实时 Preview 之外，我也只是刚刚尝试用 Sublime 来做 Markdown Editor", "onenote 不就行了吗，搞那么麻烦？", " sublime 也挺好的，就是感觉 VS code 免费的，界面、快捷键管理都挺齐全，就用用这个了", "用的 QQ 收藏...专门注册个 qq 号来记.."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>自己水平很菜，在配置完 Grafana+Zabbix 之后想用 Grafana 的 API 重写来展示图形。然后在某个地方问，就被各种劝，不要重复造轮子....</p>\n<p>的确，我要是自己写一个肯定没有 Grafana 默认的好，只要配置完工具，就能实现功能，何必再造轮子？但是我感觉出于学习的目的，自己造一个轮子才是提升最快的吧？</p>\n<p>所以很纠结。如果只是要实现功能的话，确实手头现有的工具配置好就能用。但是我感觉自己造一个轮子才能把这些工具理解的更深，对自己技术的提高也有好处吧？</p>\n<p>所以想来 V2EX 问问，各位大神应该在初期也会碰到和我一样的困惑吧？有没有必要造一遍轮子来提升自己的水平呢....</p>\n</div></div>"], "reply": "2", "tittle": "关于造轮子还是用轮子的困惑", "comment": ["业余造 /仿造轮子提升水平,以提升水平为主,产出为辅.\r", "\r", "工作 /实际项目以使用成熟轮子,以商业稳定性为主,不然你离职了,谁来维护...", "个人理解：\r", "造轮子有助于学习，如果造的好还可以“转正”。但造轮子的时间要自行把握\r", "成熟的轮子也许能够更快更好的投入生产"]},
{"content": ["<div class=\"topic_content\">附：主要在双休和下班等业余时间内进行开发。</div>"], "reply": "13", "tittle": "国内 JAVA 程序员接私单（较大的企业内部软件），开发时薪多少比较合适？", "comment": ["25-40 美金 /小时", "1000-3000RMB/DAY", "一般是 自己时薪*2 最少", "5000 一天。", "私单就接小的, 或者现有作品的二次开发, 或者一些实现特定功能的模块代码. \r", "\r", "稍微复杂一点的业务程序不建议接, 这类不驻场基本做不了, 放私单注定是互相伤害的, 甲方被乙方跳票跑路搞死, 乙方被甲方业务和代码变动搞死, 几无例外.", "我说说而已，别当真。干多少活，该多少钱就多少。", "一般来说，自己的月薪 /时薪就是自己价值的市场体现，但兼职通常更为辛苦、风险更高，所以保守乘以 2 是可以接受的，赞同 @", " 的算法。\r", "\r", "\r", " 的意见也很中肯，但风险越大，也可以用更高的费用和更利于乙方的付款结算方式来冲抵，如果甲方仍然接受，那么还是可以量力而为，毕竟风险小的事情，谁都可以做，价格自然也上不去！", "有需要可以一起合作， QQ ： 1968432246", "我司接过国外客户的单子，给公司是 1 小时 250 元人民币，你自己算吧。。。", " 这个是批发价，就像钟点工很容易时薪 50 ，全职做同样的事情可能 25 都不到", "目前自由职业，专做外包。如果你是个人开发， 5 楼说的是最优的方案。", " 确实。。。", "时薪 * m \r", "m >= 2"]},
{"content": "", "reply": "13", "tittle": "收到 Google 开发者大会的短信了，下周四，话说今年在中国办会不会有什么劲爆消息宣布呀", "comment": ["二维码显示不出来。~~~我查看元素 img 标签里啥也没有啊。", "wow 很有看點啊！", "期待啊", "应该不会有什么劲爆的消息。", "宣布回归中国?", "上海是周三?", "当然 no", "一个小宣传会而已\r", "\r", "谷歌开发者日\r", "\r", "\r", "日程\r", "Nothing", "请问如何报名参加？", "搭楼 上海求票 有人去不了的喵", "短信是收到了，可是说好的二维码发邮箱呢，翻了个遍没找到", "为啥选周四，上班时间，囧"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>到处都是 markdown ，知道的编辑器就有 10 多款，相比之下 rst 功能更多但是也更复杂（致命伤），不知道除了 python 社群的人之外有人用吗？</p>\n<p>其实是自己想做一个 rst 编辑器，当然起码的实时预览 /snippet 支持 /自动上传图片等等功能是要有的，但是在此之前起码得有个 rst 格式的解析器。官方的解析器就一个 python 实现，其他的看了一下基本是荒废状态，不可用而且更新都是 3 ，４年前了，比如 java 实现的 JRst 。\n想做的功能很多，但是现在想先集中在基础功能上，平台也先试试 osx ，顺便练下手写写 swift 。</p>\n<p>但是真心有点没动力了，感觉实现起来非常花时间，我本行没怎么搞过客户端，又只能用自己时间做，初步估计起码搞个大半年。现在正则写到吐了，想想搞出来没人用真心悲剧。有日常用 rst 的 V 友吗？冒个泡或许明年你们能看到个本地原生的编辑器。。。。</p>\n</div></div>"], "reply": "19", "tittle": "调查下顺便求点信心， RST(restructuredtext) 这玩意还有人用吗？", "comment": ["rst 还是比较复杂…… markdown 的语法我都记不全……", "有啊……用 Sphinx 写项目文档的时候， rST 还是挺好用的。\r", "\r", "比如你看 requests 的文档： ", "\r", "\r", "还有我瞎逼写的文档： ", " 难得抓到一个那就问下，你觉得一个本地原生带预览的编辑器有意义吗？因为基本上直接 vim 也能写。桌面平台的话还有 retext 或者 atom 这些，虽然我觉得实时体验不佳，出错提示很不友好，但是对于真的日常用 rst 的，搞不好都直接 vim 了吧？", " 我一般都直接在 JetBrains 家 IDE 里直接写了，装个 rST 插件，虽然没有实时预览，但是只是写的话感觉也还可以……（除了 header 对汉字支持不太好）\r", "\r", "本地原生带预览的，感觉用 VSCode + plugin 就行呀……没什么必要再写个原生的吧…\r", "\r", " 嗯，感觉也是，实时什么的差个 1 、２秒没人在意，出错提示这种对写多了的人意义不大。", "给你一个中肯的建议，不搞出来，没有会说自己需要", "先写 markdown 再转成 reStructuredText ", "Python 好多用 readthedoc 搞文档的， RST 还是有人用的", "除了 Python 社区，真没多少人用。我以前笔记都是写 rst, 真是累心。现在换到 org, 舒畅。", "曾经用过，还是 Markdown 用着舒服。\r", "日常使用的话你需要 ", " ，感觉编辑器 /插件没什么用。", "vim + ", "呃， Python 党表示在用。", "LaTeX 多好", "好羞耻，这里有个写 python 的都不知道 RST 是什么。", "除了 Python ， Haskell 社群也是 rst 多于别的", "好用，非常好用\r", "LaTeX 确实更佳", "latex 我觉得除非你要写论文，不然还是算了吧，比 rst 还复杂一个级别", "写 Sphinx 文档的时候会用到。其它场合很少用。\r", "\r", "至于开发一个 RST 的编辑器，还是用正则表达式来解析的，肯定不会去用。如果要写 RST ，我现在会用 Emacs 。", "latex 还是算了吧, 写个一般的文档没必要, 源码的可读性比 markdown 之流差好远"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>现在除了用 haproxy 做一下负载均衡把 TCP 包分 IP 发出去没有什么其他的想法了\n有现成的框架什么的吗~</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "遇到 zz 的网康科技 IP 限速，有没有什么快速的解决方案？", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>本文将演示如何在一个 ESP-12F 模块上实现 webserver ，并且可以通过 web 请求对与模块连接的继电器进行控制。</p>\n<h3>0.写在前面</h3>\n<p>首先，假设本文的读者了解 C 语言、逻辑电路和 HTTP 协议。再次，本文适合物联网开发者和有意向涉及物联网项目的 web 开发者、移动开发者阅读 。最后，如果你只需要了解实现过程，你可以继续往下看，如果你想亲自体验这神奇的过程，除了常用的一些装备和动手能力以外你还要需要准备以下材料。</p>\n<p><img alt=\"\" src=\"http://upload-images.jianshu.io/upload_images/449763-77427329c6cd46d4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p>ESP-12F 是基于 Espressif ESP8266 芯片开发的 WIFI 控制模块，支持 802.11 b/g/n/e/i 标准并集成了 Tensilica L106 32 位控制器、 4 MB Flash 和 64 KB SRAM 。</p>\n<p><img alt=\"ESP-12F 模块\" src=\"http://upload-images.jianshu.io/upload_images/449763-027de4937061590a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p>Espressif 为 ESP8266 已经移植好了操作系统并且在 github 上开放了 sdk ，这个 SDK 已经实现了 TCP/IP ，只需要实现 http 协议就可以完成 webserver 的功能。</p>\n<p>本例涉及的所有资料和代码在本文最后一节都提供了参考链接，由于笔者能力有限，本文内难免会有一些错误，也请各位读者积极纠正。</p>\n<h3>1.开发环境</h3>\n<p>ESP-12F 在 Linux 或 Mac OS 下开发并在 Windows 下烧录会更容易。 官网提供了安装好开发环境的虚拟机镜像。安装和配置开发环境不在本文讨论范围内，本文最后一章提供的链接会有很大帮助。</p>\n<p>本文使用的开发环境是 CentOS7 / crosstool-NG / ESP8266_RTOS_SDK</p>\n<p>注意: 如果不擅长自己配置开发环境， esp-open-sdk 项目中的 Readme 会指导如何配置开发环境并创建项目。</p>\n<h3>2.硬件的连接和烧录</h3>\n<p>按照官方提供的描述连接线路即可，使用面包板和杜邦线连接可以有助于重复使用器件。本文尾提供的链接会很大有帮助。</p>\n<p>注意:</p>\n<ol>\n<li>烧录时需要更改连接到下载模式，否则无法写入程序。烧录以后需要更改连接到 flash boot 模式，否则将无法 boot 。</li>\n<li>烧录过程中需要上电同步，可以给模块掉电在加电也可以把模块 RST 端接地超过一秒重启模块。</li>\n<li>ESP-12F 是 3.3 V 电源供电，使用 5V 电源或 USB 供电的同学需要装备 5V-3.3V 电源转换模块。</li>\n</ol>\n<p><img alt=\"使用杜邦线连接以便重复利用模块\" src=\"http://upload-images.jianshu.io/upload_images/449763-e64a33cee6b82bbb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<h3>3.测试硬件状态并了解开发流程</h3>\n<p>在正式开发之前，需要测试硬件是否工作正常。由于 ESP-12F 不具备任何显示部件，因此调试需要借助串口打印信息。我们在 user/user_main.c 内写入如下代码初始化串口并向串口打印一条信息。同时你还需要链接 wifi 网络。</p>\n<p>代码 3-1: 初始化串口并打印调试信息</p>\n<pre><code>  UART_WaitTxFifoEmpty(UART0);  \n  UART_WaitTxFifoEmpty(UART1);\n  UART_ConfigTypeDef uart_config;\n  uart_config.baud_rate = BIT_RATE_115200;  //波特率\n  uart_config.data_bits = UART_WordLength_8b; //字长度\n  uart_config.parity = USART_Parity_None; //校验位\n  uart_config.stop_bits = USART_StopBits_1; //停止位\n  uart_config.flow_ctrl = USART_HardwareFlowControl_None;\n  uart_config.UART_RxFlowThresh = 120;\n  uart_config.UART_InverseMask = UART_None_Inverse;\n  UART_ParamConfig(UART0, &amp;uart_config);\n  UART_SetPrintPort(UART0);\n // 向串口输出一条信息\n  printf(\"Hello World\");\n</code></pre>\n<p>代码 3-2:初始化 wifi 连接</p>\n<pre><code>  wifi_set_opmode(STATION_MODE);\n  struct station_config * wifi_config = (struct station_config *) zalloc(sizeof(struct station_config));\n  sprintf(wifi_config-&gt;ssid, \"your wifi ssid\");\n  sprintf(wifi_config-&gt;password, \"your wifi password\");\n  wifi_station_set_config(wifi_config);\n  free(wifi_config);\n  wifi_station_connect();\n</code></pre>\n<p>注意:</p>\n<ol>\n<li>需要先打开串口工具再 boot 模块，否则会漏掉一些调试内容。</li>\n<li>wifi 链接创建好后在路由器管理界面就可以看到 IP 地址了。</li>\n</ol>\n<h3>4.创建 Socket 并等待连接</h3>\n<p>ESP8266_RTOS_SDK 提供了基于 lwip 的 Socket API ，我们只需要简单调用即可实现创建 Socket 并绑定端口的过程。</p>\n<p>代码 4-1:创建 socket 并绑定端口</p>\n<pre><code>int32 listenfd;\nint32 ret;\nstruct sockaddr_in server_addr;\nmemset(&amp;server_addr, 0, sizeof(server_addr));\n  server_addr.sin_family = AF_INET; //IPV4\n  server_addr.sin_addr.s_addr = INADDR_ANY; //任意访问 IP\n  server_addr.sin_len = sizeof(server_addr);\n  server_addr.sin_port = htons(80); //绑定端口\ndo{\n    listenfd = socket(AF_INET, SOCK_STREAM, 0);//创建 socket\n} while (listenfd == -1);\ndo{\n    ret = bind(listenfd, (struct sockaddr *)&amp;server_addr, sizeof(server_addr)); //绑定端口\n} while (ret != 0);\ndo{\n    ret = listen(listenfd, SOT_SERVER_MAX_CONNECTIONS); //开始监听端口\n} while (ret != 0);\n</code></pre>\n<h3>5.处理 request</h3>\n<p>当绑定端口成功以后 <code>accept()</code> 方法就会阻塞程序运行，直到有访问请求。当有连接进入的时候(假设是没有 request body 的 GET 请求)，就可以获得 request 的 ID ，并且通过 <code>read()</code> 获取 request header 。当判断 request header 完成后，即可通过 <code>write()</code> 方法向 socket 输出 response header 和 response body ，当这一切都完成的时候，就可以使用<code>close()</code> 关闭连接。至此，一个 request 处理完成。</p>\n<p>注意:</p>\n<ol>\n<li>我们无法实现判断 request header 的长度，而 read()方法会阻塞程序运行，因此我们需要判断 request header 是否完成以确定是否开始向 socket 写入 response 。</li>\n<li>对与有 request body 的请求来说，需要解析 request header 中的 content-length 字段以获取 request body 的程度，从而判断 request body 是否结束以防止 read() 方法阻塞程序。</li>\n<li>在获取 request header 的过程中必须要获取第一行报头的内容以确定请求类和需要访问的资源位置</li>\n<li>关于报头标准请参照 <a href=\"http://www.ietf.org/rfc/rfc2616.txt\" rel=\"nofollow\">http://www.ietf.org/rfc/rfc2616.txt</a></li>\n</ol>\n<p><img alt=\"处理 request 的过程\" src=\"http://upload-images.jianshu.io/upload_images/449763-cde3b02b0d70bd5a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p>代码 5-1:处理 request</p>\n<pre><code>while((client_sock = accept(listenfd, (struct sockaddr *)&amp;remote_addr, (socklen_t *)&amp;len)) &gt;= 0) {\n  // recieveStatus 的含义 0. watting, 1. method get, 2. request URI get 3. finish recive 4. start send 5.send finished\n  int recieveStatus = 0;\n  bool cgiRequest = true;\n  char recieveBuffer;\n  char *httpMethod = (char *)zalloc(8);\n  int httpMethodLength = 0;\n  char *httpRequestUri = (char *)zalloc(64);\n  int httpRequestUriLength = 0;\n  char *httpStopFlag = (char *)zalloc(4);\n  int httpStopFlagLength = 0;\n  httpMethod[0] = 0;\n  httpRequestUri[0] = 0;\n  httpStopFlag[0] = 0;\n  // loop for recieve data\n  for(;;) {\n    read(clientSock, &amp;recieveBuffer, 1);\n    if(recieveStatus == 0) {\n    // 获取请求方式\n      if(recieveBuffer != 32) {\n        httpMethod[httpMethodLength] = recieveBuffer;\n        httpMethodLength ++;\n      } else {\n        httpMethod[httpMethodLength] = 0;\n        recieveStatus = 1;\n      }\n      continue;\n    }\n    if(recieveStatus == 1) {\n    // 获取 URI\n      if(recieveBuffer != 32) {\n        httpRequestUri[httpRequestUriLength] = recieveBuffer;\n        httpRequestUriLength ++;\n      } else {\n        httpRequestUri[httpRequestUriLength] = 0;\n        recieveStatus = 2;\n      }\n      continue;\n    }\n    if(recieveStatus == 2) {\n    //判断 header 是否结束， header 结束标记是一个空行 因此检测 header 最后 4 个字符是否是连续的\\r\\n\\r\\n 即可\n      if(recieveBuffer == 10 || recieveBuffer == 13) {\n        httpStopFlag[httpStopFlagLength] = recieveBuffer;\n        httpStopFlagLength ++;\n        httpStopFlag[httpStopFlagLength] = 0;\n        if( httpStopFlag[0] == 13 &amp;&amp; httpStopFlag[1] == 10 &amp;&amp;  httpStopFlag[2] == 13 &amp;&amp; httpStopFlag[3] == 10) {\n          recieveStatus == 3;\n          break;\n        }\n      } else {\n        httpStopFlagLength = 0;\n        httpStopFlag[httpStopFlagLength] = 0;\n      }\n      continue;\n    }\n  }\n  // 向串口打印获取的信息 可以判断访问是否正确\n  printf(\"Method=%s SOCK=%d\\n\", httpMethod, clientSock);\n  printf(\"URI=%s SOCK=%d\\n\", httpRequestUri, clientSock);\n  printf(\"CGIRequestFlag=%d SOCK=%d\\n\", cgiRequest, clientSock);\n  //输出 response header\n  write(clientSock, \"HTTP/1.1 200 OK\\r\\n\", strlen(\"HTTP/1.1 200 OK\\r\\n\"));\n  write(clientSock, \"Server: SOTServer\\r\\n\", strlen(\"Server: SOTServer\\r\\n\"));\n  write(clientSock, \"Content-Type: text/plain; charset=utf-8\\r\\n\", strlen(\"Content-Type: text/plain; charset=utf-8\\r\\n\"));\n  write(clientSock, \"\\r\\n\", 2);\n  //输出 respose body\n  write(clientSock, \"Hello World\", strlen(\"Hello World\"));\n  //关闭链接\n  close(clientSock);\n}\n</code></pre>\n<h3>6.规划 ROM 文件系统</h3>\n<p>webserver 肯定是要能服务静态文件的，现在需要手动创建文件系统，考虑到存储器特点、片上资源和计算能力，文件系统被设计成只读 ROM 并且文件的 MIME ，大小，路径等信息被提前存到文件系统里。</p>\n<p>ROM 文件系统被分为两个区域，从 ROM 文件系统开始前 64KB 被划分为 FAT 区域，余下的区域都是文件数据存储区； FAT 区域被分为 512 个 128B 大小的文件条目存储区，每个条目保存一条文件信息，其中前 0x40 字节用于保存文件名， 0x40-0x77 用于保存文件的 MIME 数据， 0x78-0x7B 保存文件大小， 0x7C-0x7F 保存文件开头部分相对于 ROM 首字节的相对偏移量也可以称作文件的位置。</p>\n<p><img alt=\"文件系统分配\" src=\"http://upload-images.jianshu.io/upload_images/449763-af62aef87efed8d5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p>注意</p>\n<ul>\n<li>由于 SPI Flash 读数据需要 4B 对齐，所以 ROM 系统内所有文件开始位置必须是 4B 对齐的。</li>\n</ul>\n<h3>7.制作静态文件 ROM</h3>\n<p>按照上节说到的文件系统，需要把一个特定目录下的所有文件转为一个单独的二进制文件才可以烧录到模块上。这个过程需要先扫描目录内所有文件并获取文件名，再根据名文件名获取文件相关属性将所有的文件信息写入 ROM 文件的 FAT 区，最后将文件二进制流附加在后面，并在文件开始位置 4B 对齐。</p>\n<p><img alt=\"ROM 创建过程\" src=\"http://upload-images.jianshu.io/upload_images/449763-9b5693fb6e7ca32d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p>注意:</p>\n<ol>\n<li>创建 ROM 的 shell 脚本可以在最后一章的链接里获得。</li>\n<li>按照官方推荐的 Flash 布局， ROM 建议烧录在 Flash 的 0 x 0010 0000 位置</li>\n</ol>\n<h3>8.读取 ROM 文件内容</h3>\n<p>我们需要根据文件名来读取文件，并不是直接读取文件，因此先要在 ROM 的 FAT 区里查找对应文件名的存在位置、 MIME 、大小和存放区域，再去读取文件内容，当读到文件尾的时候不在读取。官方的 spi_flash_read 接口只能读取指定位置的指定长度的数据，这对我们读区文件很不方便。</p>\n<p>代码 8-1:文件系统实现</p>\n<pre><code>// 所谓的文件句柄 保存已经打开文件的信息\nstruct SOTROM_filePointer {\n  uint32 location;\n  uint32 offset;\n  uint32 fileSize;\n  bool fileExsit;\n  char *mime;\n};\ntypedef struct SOTROM_filePointer SOTROM_file;\ndefine SOT_ROM_ORG 0x00100000;\ndefine SOT_ROM_FAT_SIZE 0x00010000;\n//读区文件 FAT ，匹配每一条文件条目是否于请求的文件名一致，一致则读取信息并返回，否则返回空文件句柄。\nSOTROM_file *SOTROM_fopen(char* fileName) {\n  SOTROM_file *openedFile;\n  openedFile = malloc(70);\n  openedFile-&gt;location = 0;\n  openedFile-&gt;offset = 0;\n  openedFile-&gt;fileSize = 0;\n  openedFile-&gt;fileExsit = false;\n  // 查找 FAT 区域\n  char *pointerFilename = (char *)zalloc(64);\n  uint32 currentFATPointer = SOT_ROM_ORG;\n  uint32 maxFATPointer = SOT_ROM_ORG + SOT_ROM_FAT_SIZE;\n  SpiFlashOpResult res;\n  while(currentFATPointer &lt; maxFATPointer) {\n    // 获得文件名\n    res = spi_flash_read(currentFATPointer, (uint32* )pointerFilename, 64);\n    if(res == SPI_FLASH_RESULT_OK) {\n      if(strlen(pointerFilename) &gt; 0) {\n        if(strcmp(fileName, pointerFilename) == 0) {\n          char *pointerFilename = (char *)zalloc(56);\n          uint32 fileSize;\n          uint32 location;\n          res |= spi_flash_read(currentFATPointer + 64, (uint32* )pointerFilename, 56);\n          res |= spi_flash_read(currentFATPointer + 120, (uint32* )&amp;fileSize, 4);\n          res |= spi_flash_read(currentFATPointer + 124, (uint32* )&amp;location, 4);\n          if(res == SPI_FLASH_RESULT_OK) {\n            openedFile-&gt;fileExsit = true;\n            openedFile-&gt;mime = pointerFilename;\n            openedFile-&gt;fileSize = fileSize;\n            openedFile-&gt;location = location;\n            openedFile-&gt;location += maxFATPointer;\n            break;\n          }\n        }\n        currentFATPointer += 128;\n      } else {\n        break;\n      }\n    } else {\n      break;\n    }\n  }\n  // 有助于调试的调试信息\n  // printf(\"file found: %d\\n\", openedFile-&gt;fileExsit);\n  // printf(\"file mime: %s\\n\", openedFile-&gt;mime);\n  // printf(\"file length: %d\\n\", openedFile-&gt;fileSize);\n  // printf(\"file location: %d\\n\", openedFile-&gt;location);\n  // printf(\"file offset: %d\\n\", openedFile-&gt;offset);\n  return openedFile;\n}\n// 从 SOTROM_fopen 打开的文件里 获取在 offset 指针处读取 datalength 长度的数据并输出到 data 里，并设置 offset 到下一字节位置。若文件长度小于 offset + datalength 只读区到文件末尾\nbool SOTROM_fread(SOTROM_file *file, uint32 *data, int32 datalength) {\n  // 检查文件是否存在\n  if(!file-&gt;fileExsit) {\n    return false;\n  }\n  int32 fileLength = file-&gt;fileSize;\n  int32 currentOffset = file-&gt;offset;\n  int32 startReadLocation = file-&gt;location + currentOffset;\n  // 若指针已经到达文件结尾不读数据\n  if(currentOffset &gt;= fileLength) {\n    return false;\n  }\n  // 若超过文件结尾则只读取到文件结尾\n  if(currentOffset + datalength &gt; fileLength) {\n    datalength = fileLength - currentOffset;\n  }\n  SpiFlashOpResult res;\n  res = spi_flash_read(startReadLocation, data, datalength);\n  if(res == SPI_FLASH_RESULT_OK) {\n    file-&gt;offset = currentOffset + datalength;\n    char *tmpDataPtr = (char *)data;\n    tmpDataPtr[datalength] = 0;\n    return true;\n  } else {\n    return false;\n  }\n}\n</code></pre>\n<h3>9.处理动态请求</h3>\n<p>动态请求的 URI 一般指向的不是一个真实存在的路径，因此需要区分动态请求和静态请求。本例会把 URI 由 /cgi/ 开头的请求视为动态请求。并且讲动态请求传入一个 Router ，有 Router 把请求转发给每个执行动态的请求的文件或函数，我们称之为 Controller 。</p>\n<p><img alt=\"router 的工作过程\" src=\"http://upload-images.jianshu.io/upload_images/449763-2b8afd9d34742ae2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p>代码 9-1:router 实现的代码</p>\n<pre><code>void SOTCGI_PROG(char *para, int32 sock)\n// CGI 入口文件，传 socket 连接 ID 和 URL 即可\nvoid SOTCGI_handler(char * cgiURI, int32 sock) {\n  char *response = (char *)zalloc(64);\n  SOTCGI_route(\"/cgi/demo0/\", cgiURI, sock, SOTCGI_PROG);\n  SOTCGI_route(\"/cgi/demo1/\", cgiURI, sock, SOTCGI_PROG);\n}\n// CGI Router 设置, 根据指定地址 route 绑定指定控制器 callback 。\nvoid SOTCGI_route(char *route, char *cgiURI, int32 sock, void (* callback)()) {\n  if(strncmp(route, cgiURI, strlen(route)) == 0) {\n    char *para = substr(cgiURI, strlen(route), strlen(cgiURI));\n    (* callback)(para, sock);\n    free(para);\n  }\n}\n</code></pre>\n<p>代码 9-2:controller 实现的代码模版</p>\n<pre><code>void SOTCGI_PROG(char *para, int32 sock) {\n  printf(\"GET CGI input: %s\\n\", para);\n}\n</code></pre>\n<h3>10.GPIO 的控制</h3>\n<p>由于 GPIO 与普通 IO 不一样，因此在使用前必须设置 GPIO 的功能， SDK 为每个 GPIO 都设定了五种功能，使用前需要使用 PIN_FUNC_SELECT 宏函数进行设置，具体每个 GPIO 口的功能，在最后一节给出的链接里会有很大帮助。本例只使用了 GPIO 最基本的逻辑输出的功能。具体 GPOI 功能设置可以参照 SDK 的 API 参考文档。</p>\n<p>代码 10-1:逻辑输出的实现</p>\n<pre><code>PIN_FUNC_SELECT(PERIPHS_IO_MUX_MTDI_U, FUNC_GPIO12);//将 PERIPHS_IO_MUX_MTDI_U 接口绑定为 FUNC_GPIO12 输出功能\ngpio_output_set(BIT12, 0, BIT12, 0); // GPIO12 输出高电平\ngpio_output_set(0, BIT12, BIT12, 0); // GPIO12 输出低电平\n</code></pre>\n<h3>11.任务控制</h3>\n<p>由于使用了 SDK 内集成了 FreeROTS 操作系统，因此我们可以把整个 Server 启动等待链接和处理请求的过程分配成任务，这样在 server 运行过程中，模块的程序流不会被阻塞。关于 FreeROTS 的任务管理方面，在最后一节给出的链接里会有很大帮助。本例使用了创建任务 xTaskCreate ，挂起任务 vTaskDelay 和销毁任务 vTaskDelete 这三个任务 API 。</p>\n<p>系统启动时先检查网络连接，当网络连接建立好后创建初始化 WebServer 的任务，当初始化完成后初始化任务会被删除并创建 WebServer 的主任务，当有请求进来时，主任务会创建 worker 任务去处理请求，当处理任务完成后， worker 任务会自行删除。</p>\n<p><img alt=\"任务控制\" src=\"http://upload-images.jianshu.io/upload_images/449763-99e382788f7fc42e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<h3>12.实现 webserver</h3>\n<p>结合任务控制和其他的功能我们不难规划出一个 webserver ，具体项目代码在最后一章里有下载链接。</p>\n<h3>13.驱动 5V 继电器</h3>\n<p>由于 GPIO 输出电平为 3.3V ，不足以驱动 5V 的继电器模块，因此需要使用 5V 的逻辑门电路辅助驱动，本例使用的是 CD4001 四或非门电路。</p>\n<h3>14.制作静态页面</h3>\n<p>现在我们已经有了一个可以控制继电器的 Webserver ，再有一个前端也面就完美了。将制作好的静态页面写入 ROM 后烧录在 Flash 的 0 x 0010 0000 位置上。完美收工。关于前端实现不在本文讨论范畴，前端代码随项目代码在最后一章的连接里一起给出。</p>\n<h3>15.接入调试</h3>\n<p>连接好线路，接通电源，进行最终调试。</p>\n<p><img alt=\"最终调试\" src=\"http://upload-images.jianshu.io/upload_images/449763-754acbebfcc3082c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p>我的 Webserver 工作正常，你的呢？</p>\n<h3>16.相关资源及项目代码</h3>\n<p>关于交叉编译器：\n<a href=\"https://github.com/esp8266/esp8266-wiki/wiki/Toolchain\" rel=\"nofollow\">https://github.com/esp8266/esp8266-wiki/wiki/Toolchain</a>\n<a href=\"https://github.com/jcmvbkbc/crosstool-NG\" rel=\"nofollow\">https://github.com/jcmvbkbc/crosstool-NG</a>\n<a href=\"http://bbs.espressif.com/viewtopic.php?f=57&amp;t=2\" rel=\"nofollow\">http://bbs.espressif.com/viewtopic.php?f=57&amp;t=2</a></p>\n<p>关于烧写工具：\n<a href=\"https://github.com/esp8266/esp8266-wiki/wiki/Toolchain\" rel=\"nofollow\">https://github.com/esp8266/esp8266-wiki/wiki/Toolchain</a>\n<a href=\"http://bbs.espressif.com/viewtopic.php?f=57&amp;t=433\" rel=\"nofollow\">http://bbs.espressif.com/viewtopic.php?f=57&amp;t=433</a></p>\n<p>关于 SDK ：\n<a href=\"https://github.com/espressif/ESP8266_RTOS_SDK\" rel=\"nofollow\">https://github.com/espressif/ESP8266_RTOS_SDK</a>\n<a href=\"https://github.com/pfalcon/esp-open-sdk\" rel=\"nofollow\">https://github.com/pfalcon/esp-open-sdk</a></p>\n<p>关于 ESP8266 的技术支持文档：\n<a href=\"http://espressif.com/en/support/download/documents?keys=&amp;field_type_tid%5B%5D=14\" rel=\"nofollow\">http://espressif.com/en/support/download/documents?keys=&amp;field_type_tid%5B%5D=14</a></p>\n<p>关于硬件的连接和烧录\n<a href=\"http://espressif.com/sites/default/files/documentation/2a-esp8266-sdk_getting_started_guide_en.pdf\" rel=\"nofollow\">http://espressif.com/sites/default/files/documentation/2a-esp8266-sdk_getting_started_guide_en.pdf</a></p>\n<p>关于 GPIO 的功能的描述\n<a href=\"http://espressif.com/sites/default/files/documentation/0d-esp8266_pin_list_release_15-11-2014.xlsx\" rel=\"nofollow\">http://espressif.com/sites/default/files/documentation/0d-esp8266_pin_list_release_15-11-2014.xlsx</a></p>\n<p>关于 FreeROTS 的使用\n<a href=\"http://www.freertos.org/FreeRTOS-quick-start-guide.html\" rel=\"nofollow\">http://www.freertos.org/FreeRTOS-quick-start-guide.html</a></p>\n<p>本示例源代码\n<a href=\"https://github.com/cubicwork/SOTServer-demo\" rel=\"nofollow\">https://github.com/cubicwork/SOTServer-demo</a></p>\n<p>SOTServer + SOTROM github 项目( 代码整理好以后会开放源代码 )\n<a href=\"https://github.com/cubicwork/SOTServer\" rel=\"nofollow\">https://github.com/cubicwork/SOTServer</a></p>\n<hr>\n<p>作者： CarneyWu</p>\n<p><strong>本文来自 [蒲公英技术征文] ，详情链接： <a href=\"https://jinshuju.net/f/dGmewL\" rel=\"nofollow\">https://jinshuju.net/f/dGmewL</a>\n本活动中用户内容均采用 <a href=\"https://creativecommons.org/licenses/by-nc-sa/3.0/cn/\" rel=\"nofollow\">署名-非商业性使用-相同方式共享 3.0 中国大陆</a> 进行许可</strong></p>\n</div></div>"], "reply": "7", "tittle": "[蒲公英技术征文] 如何在 ESP-12F/ESP8266 上实现 webserver", "comment": ["不错，不过硬件用 nodemcu 的要更省事一些", "不要求实时性的话，用 NodeMCU 简单多了~", "\r", "我们开发的一个", "我床头灯就就是这个做的，不过功能很简单，只有亮度调节", " 我用这个实现了三色等 PWM 调节。然而感觉不能玩自动匹配加入 WIFI ，可玩性就差点啊", "想起了搞毕设的时候", "作为家庭“智能”电器的控制面板， web 比 app 方便不少啊。"]},
{"content": ["<div class=\"topic_content\">git 的时候不小心把 test 的内容都 commit 进去了\r<br>\r<br>（我明明已经加.gitignore 了，还是会 add 进去。。。当然这个我先不纠结了）\r<br>\r<br>现在的问题是已经 rm 了，但是.git 里面还是有 pack 文件很大，怎么搞呢，明明就是几 kb 的事，现在 clone 下来就是几 MB,99%都是.git 里面的 pack 文件\r<br>\r<br>老司机有遇到这个问题的么？ 除了重新建 Repo 还有其他法子不？</div>"], "reply": "24", "tittle": "Git 问题求教 - git rm 大文件但是.git 文件夹还是很大，怎么处理", "comment": ["你怎么 rm 的？把 commit 从历史版本里删掉了么？没有的话用 git reset --hard 回到以前，然后 git push --force 强制覆盖。", "都已经被提交过了就无解了\r", "除非你先 checkout 到 commit 之前\r", "然后， 把最新分支的内容覆盖一次\r", "接着，重新提交\r", "再 -f 推送到服务器", "一旦文件添加进去，就一直在里面了，直接 rm 是没办法把这个文件从历史提交里面移除的。\r", "\r", "你需要的是把文件从整个历史里面抹掉：\r", "\r", "git filter-branch --index-filter \\\r", "    'git rm --cached --ignore-unmatch path/to/your/file' \\\r", "    --tag-name-filter cat -- --all", " 没把 commit 删掉。。。　我试试 git reset...", " 已经提交了。。。。", " 我试试。。。", "先说方法，你需要这个简单的小工具：\r", "\r", "\r", "然后说原理：\r", "因为 Git 会记录你 所有 的历史提交，所以为了回滚需要，只要是在 Git 中存在过一次的文件，就会被永久记录下来，不论当前是否存在。", " 　这个牛，都已经上升到工具了。。。 Star 好多，看来和我同样问题的 git 新手好多", "git rm --cached test", "我小弟说看这个： ", "  git filter-branch --index-filter \\ \r", "'git rm --cached --ignore-unmatch path/to/your/file' \\ \r", "--tag-name-filter cat -- --all\r", "\r", "这个方法学习了，但是不知道对其他成员有没有影响（比如他 pull 或 push 时出错。）。 git 官方说， 修改 public repo 的已有 commit ， 会有大影响。", " 如果调用了这个方法，在向远端 push 的时候，必须强制覆盖：\r", "\r", "git push origin --force --all\r", "\r", "\r", "所以这是一个危险操作，务必再三确认啊！", " 这不是新手问题，如果你的 test 变动还在 HEAD ，那么很简单，按 1L 办，如果又加了新 commit ，那就难办了，所以要认真对待每个 commit ，特别是 push 的时候。", "另外，分享一篇文章， Github 官方帮助告诉你怎样从仓库里彻底移除敏感信息： ", " 这个时候，是不是跟 filter 有关的 commit 的 hash 值都会变成新的。如果是的话，感觉是重做了整个 branch 的感觉。这个在公有 repo 还是太危险，行不通。 最好只在本地完成。", " 确实是你说的这样。\r", "\r", "建议尽量不要用这个极端的方法，除非在某些极端的情况下（比如不小心把密钥提交到了版本库里）。", "git gc 试试？", " 这个好像就是 @", " 提的那个。　不过有小弟还是令人羡慕啊:)", " 这个正解", " 文件就在历史里，你要么改变历史，要么接受历史。\r", "删除文件的话，当然所有 Hash 都要变的。", "之前遇到过 ，可以参考下 ", "谢谢各位，我最后还是 git reset , git push --force  重新提交解决的\r", "\r", "核弹级选项: filter-branch 估计也是正解，但是看着就吓人，没勇气尝试。。。", "## 命令\r", "\r", "`git filter-branch --tree-filter 'rm -rf test/' --tag-name-filter cat HEAD --all`\r", "\r", "## 说明\r", "\r", "`--all` : 所有分支\r", "`--tree-filter`: 需要执行的命令\r", "`--tag-name-filter cat` : Tag 也做修改", "需要 Clean 历史 Commit ，后晌几个说的都可以"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近在修图，听说 Photoshop 可以用 JavaScript 写脚本，于是就去看了看怎么写，觉得自己作为一个前端，总不能看不懂代码吧。</p>\n<p>目标是对选中的所有图层和组里的所有图层应用一个动作…需求很简单，也很常见吧。</p>\n<p>查了一下代码，对特定的一个图层应用一个动作是这样的：</p>\n<pre><code>var doc = app.activeDocument;\ndoc.activeLayer = doc.artLayers.getByName(\"背景色\");\napp.doAction(\"foo\", \"foo_folder\");\n</code></pre>\n<p>感觉已经没什么好害怕的了。但是发现这样只能选一个图层或者一个组，颇为不方便，要知道 PhotoShop 是可以同时选中多个图层的，而文档里也没有说明这个功能…</p>\n<p>于是，在继续找下去的过程中，我看到了这玩意。</p>\n<pre><code>function getSelectedLayersIdx() {\n  var selectedLayers = new Array;\n  var ref = new ActionReference();\n  ref.putEnumerated(charIDToTypeID(\"Dcmn\"), charIDToTypeID(\"Ordn\"), charIDToTypeID(\"Trgt\"));\n  var desc = executeActionGet(ref);\n  if (desc.hasKey(stringIDToTypeID('targetLayers'))) {\n    desc = desc.getList(stringIDToTypeID('targetLayers'));\n    var c = desc.count\n    var selectedLayers = new Array();\n    for (var i = 0; i &lt; c; i++) {\n      try {\n        activeDocument.backgroundLayer;\n        selectedLayers.push(desc.getReference(i).getIndex());\n      } catch (e) {\n        selectedLayers.push(desc.getReference(i).getIndex() + 1);\n      }\n    }\n  } else {\n    var ref = new ActionReference();\n    ref.putProperty(charIDToTypeID(\"Prpr\"), charIDToTypeID(\"ItmI\"));\n    ref.putEnumerated(charIDToTypeID(\"Lyr \"), charIDToTypeID(\"Ordn\"), charIDToTypeID(\"Trgt\"));\n    try {\n      activeDocument.backgroundLayer;\n      selectedLayers.push(executeActionGet(ref).getInteger(charIDToTypeID(\"ItmI\")) - 1);\n    } catch (e) {\n      selectedLayers.push(executeActionGet(ref).getInteger(charIDToTypeID(\"ItmI\")));\n    }\n    var vis = app.activeDocument.activeLayer.visible;\n    if (vis == true) app.activeDocument.activeLayer.visible = false;\n    var desc9 = new ActionDescriptor();\n    var list9 = new ActionList();\n    var ref9 = new ActionReference();\n    ref9.putEnumerated(charIDToTypeID('Lyr '), charIDToTypeID('Ordn'), charIDToTypeID('Trgt'));\n    list9.putReference(ref9);\n    desc9.putList(charIDToTypeID('null'), list9);\n    executeAction(charIDToTypeID('Shw '), desc9, DialogModes.NO);\n    if (app.activeDocument.activeLayer.visible == false) selectedLayers.shift();\n    app.activeDocument.activeLayer.visible = vis;\n  }\n  return selectedLayers;\n};\n</code></pre>\n<p>………………</p>\n<p>……………</p>\n<p>…………</p>\n<p>………</p>\n<p>……</p>\n<p>…</p>\n<p>…那个，我盯着这堆玩意已经看了半个多小时了，有谁能看懂这堆玩意干了啥吗？</p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><pre><code>var getSelectedLayersIndex = function () {\n  var selectedLayers = [];\n  var ref = new ActionReference();\n  ref.putEnumerated(stringIDToTypeID('document'), stringIDToTypeID('ordinal'), stringIDToTypeID('targetEnum'));\n  var desc = executeActionGet(ref);\n  if (desc.hasKey(stringIDToTypeID('targetLayers'))) {\n    desc = desc.getList(stringIDToTypeID('targetLayers'));\n    for (var i = 0, c = desc.count; i &lt; c; i++) {\n      selectedLayers.push(desc.getReference(i).getIndex());\n    }\n  }\n  return selectedLayers;\n};\n</code></pre>\n<p>进度：\n“看了几遍和没看一样” → “把不懂的代码删了也能正常用”</p>\n<p>基本知道了它准备做一个图层顺序相关的动作，有可能是图层编组，但else中的代码好像毫无意义，整个动作似乎也并没有真的执行…</p>\n<p>…虽然还是一脸茫然，但好像这样精简了一下养眼多了，在彻底弄懂之前先凑合用吧。</p>\n</div></div>"], "reply": "75", "tittle": "妈的，这是我这辈子见过的最恶心的代码。", "comment": ["我这有不少代码我已经来回看了几个月了，还有很多地方我完全看不懂到底干了啥。\r", "\r", "半个小时，还好吧？", "这就算恶心了？…", " 没有办法调试， API 不一样，也没有文档说明，而且这代码写的让人根本不知道发生了啥…\r", "反正我一步一步从头到尾看了几遍了，然而依然对这玩意到底怎么实现的毫无头绪。", " \r", "没有文档和任何注释么？", " 没有，只能一次一次猜，之前有人整理过文档但是那是 5 年前的事情了，而且那些文档的网站都挂了…", " ", "可能是自动生成的代码？", "其实这种代码的问题显而易见，既没有向读者展示高层次的逻辑意图，又暴露了太多的操作实现细节", "我这有大量长得很像但又并不完全一样的代码，一个方法写 500 行以上很普遍，几个开发者都离职了，我一边加功能的同时还要一边梳理重构。测试人员都没有，老代码单元测试覆盖率为零。这可是每天 pv 过亿，每天净利润六位数的项目。", "你需要 console.log 每个 API 的结果 然后尝试变一些参数 对照 PS 去理解\r", "Good Luck", "你只知道 JS ，而不懂 PS API ，如果这都让你看懂了，大概知道怎么搬砖就盖摩天大楼咯？", "不如做个动作简单粗暴", " 我懂你的苦", "adobe ：我没给你压缩你说偷着乐吧", "习惯就好了，我现在处理的项目，什么利用 if 分支写死的变量，手动拼 json ，手动解析 json 什么的，简直不忍直视", "Photoshop 是有 api 文档的，如果需要使用文档中未提及的操作，就需要使用另一个动作到处代码的工具，打开 PS 执行一个动作，他就会生成对应的代码，直接替换参数用，这些代码的确会看不懂", "见过 switch 套 switch 中间还有 while 循坏和 if 判断的;还见过写 android 定义了 800 多行变量;这种看起来还行。", "你这被子还长着呢，以后还有的是更恶心的代码", "关键都是些 API\r", "通用的 JavaScript 知识对阅读代码无效", "太年轻了 , 来我这看看一个屏幕看不完的 if,else", "上次像写个 ps 的外挂插件，翻了几个文档，完全没有头绪，看来看出都是以 ps 内置扩展文件.8x 的形式出现的插件开发，外挂插件的说明感觉看到关键的地方，然后一下又扯得很宽泛...\r", "最后就写了个简单的 ps js 的脚本 函数的说明能不能详细点，返回值都没有", "我就看到外部有个 var selectedLayers = new Array();，然后 if 里面又有一个。。", "这就最恶心啦，年轻人你还 too young ，看哥给你写一段。。。", "r#21 @", " 网上发帖求助 人家又一个劲地让你去看文档，我勒个去 我能搞掂这个文档，我闲着蛋疼去求助你们", "这点算什么 too young too simple （ doge 脸）", "这属于 extended script,用了 Adobe 分给 ps 的接囗，写法还是通 js 的", "无非是循环找各种图层啥的", "还好吧  我看别人的代码感觉都知道它们在干吗", " 想知道是哪个项目。。", " 我懂你，一个函数里 80%的 if else 还巨长", "太年轻:)", "这就恶心了？那你是没看过我的代码", "太年轻了 , 来我这看看一个屏幕看不完的 if,else", "真实的故事， rightSomeThing = LeftSomeThing()。。前人挖坑，后人掉坑", " 除了 pv 和利润，我的项目跟你一样……", "ps 不熟看这些代码就是噩梦", "楼主太年轻", "呵呵，有本事看我当年写的代码。\r", "\r", "\r", "\r", "真的看懂的话别忘记告诉我下这些代码是干啥的-_____-", "不算 try exception 圈复杂度才 4 的代码，哪里恶心了。", "ps 的标准 api 文档都找不到， ame 特么还没文档呢，楼上说操作实现细节的， ps 通篇都是类似浏览器的 dom 操作，要不暴露只能自己再造个 adobe 的 jQuery ，哦对了， Object.prototype.watch 可以截取 get set ，要不要再造个 mvvm ？", "\r", "\r", "重新格式化一下\r", "除了命名略坑并不难懂", "搞不好是机器自动生成的代码。当年玩 FPGA 的时候看混淆过的 VERILOG 的路过。。。", "这代码挺厚道的 已经把意图弄到命名上了 看变量名基本能看出来是在干啥\r", "你要碰到那种 i p 变量满天飞的 那才真是生不如死呢\r", "\r", "这个代码最大的问题只是没有把片段分离出来导致一个函数太长了 但是这只是 better 追求", "还好吧 除了命名以外..", "慢慢看下去逻辑还是很明显的", "这代码很难懂吗？我觉得这个代码已经质量不错了，函数、变量的命名相当规范，你试想一下里面的变量全部叫做 ab, c, xx, tmp, str 的时候，你是怎样的感觉？", "擦，看来我的承受能力还不错，我上次还看到用拼音做 annotation 的，还有什么变量名 abcd 的，你这个算是好的了好么， PS 我的也是没有文档的，啥也没有", "只能用 alert 调试 这点不太方便\r", "api 官网是找的到文档的\r", "可以下载别人写的 plugins 做参考 然后再使用\r", "小动作 使用 fireworks 写脚本会更方便（不过这玩意过时了 被 adobe 抛弃了）", "我们 20 个程序员两年的项目，到现在没有一行注释，这算个啥", "\r", "\r", "脚本 + 自己写的 plugins 可以自动化很多事情", "我懂你的苦", "都发出来算了\r", "script:\r", " \r", "applescript:\r", "\r", "javascript:\r", "\r", "vbs:\r", "\r", "\r", "CS 5 之前的版本\r", "见过业务逻辑全写到 sql 里，跑程序就是跑 sql 。……跨语言、跨平台性 MAX 。", "这就恶心啦？。。。还差的远那。。。我们有 C 写的各路回调（ N 层），各种强制类型转换，各种名字一样，其实完全不同含义的形参。。各种一个函数上千行的代码。。你要来试试不 ：）", "51 楼有文档？？？楼主的救星啊哈哈哈。", "这还恶心??\r", "另外 ps 可以调试的", "```\r", "function a(a) {\r", "    var f = 1 << a[27] | 1 << a[28] | 1 << a[29] | 1 << a[30] | 1 << a[31] | 1 << a[32] | 1 << a[33];\r", "    if (16 <= f) return ! 1;\r", "    if (2 == (f & 3) && 2 == a[0] * a[8] * a[9] * a[17] * a[18] * a[26] * a[27] * a[28] * a[29] * a[30] * a[31] * a[32] * a[33] || !(f & 10) && 7 == (2 == a[0]) + (2 == a[1]) + (2 == a[2]) + (2 == a[3]) + (2 == a[4]) + (2 == a[5]) + (2 == a[6]) + (2 == a[7]) + (2 == a[8]) + (2 == a[9]) + (2 == a[10]) + (2 == a[11]) + (2 == a[12]) + (2 == a[13]) + (2 == a[14]) + (2 == a[15]) + (2 == a[16]) + (2 == a[17]) + (2 == a[18]) + (2 == a[19]) + (2 == a[20]) + (2 == a[21]) + (2 == a[22]) + (2 == a[23]) + (2 == a[24]) + (2 == a[25]) + (2 == a[26]) + (2 == a[27]) + (2 == a[28]) + (2 == a[29]) + (2 == a[30]) + (2 == a[31]) + (2 == a[32]) + (2 == a[33])) return ! 0;\r", "    if (f & 2) return ! 1;\r", "    var q = a[0] + a[3] + a[6],\r", "    e = a[1] + a[4] + a[7],\r", "    n = a[9] + a[12] + a[15],\r", "    d = a[10] + a[13] + a[16],\r", "    r = a[18] + a[21] + a[24],\r", "    k = a[19] + a[22] + a[25],\r", "    p = (q + e + (a[2] + a[5] + a[8])) % 3;\r", "    if (1 == p) return ! 1;\r", "    var l = (n + d + (a[11] + a[14] + a[17])) % 3;\r", "    if (1 == l) return ! 1;\r", "    var s = (r + k + (a[20] + a[23] + a[26])) % 3;\r", "    if (1 == s || 1 != (2 == p) + (2 == l) + (2 == s) + (2 == a[27]) + (2 == a[28]) + (2 == a[29]) + (2 == a[30]) + (2 == a[31]) + (2 == a[32]) + (2 == a[33])) return ! 1;\r", "    q = (1 * q + 2 * e) % 3;\r", "    e = g(a, 0);\r", "    n = (1 * n + 2 * d) % 3;\r", "    d = g(a, 9);\r", "    r = (1 * r + 2 * k) % 3;\r", "    a = g(a, 18);\r", "    var sb = f & 4 ? !(p | q | l | n | s | r) && c(e) && c(d) && c(a) : 2 == p ? !(l | n | s | r) && c(d) && c(a) && b(q, e) : 2 == l ? !(s | r | p | q) && c(a) && c(e) && b(n, d) : 2 == s ? !(p | q | l | n) && c(e) && c(d) && b(r, a) : !1\r", "    return sb\r", "}\r", "```\r", "\r", "头疼", " 谁家的验证代码？看起来还行", "这段代码至少在风格少还是比较清晰吧。哎，遇到风格千奇百怪的代码才让人头大。。", "PS 不是有个录制功能吗…", " 哈哈哈哈", "用到递归了吧？如果有子文件夹之类的，很全面了", " 这个文档里不包括对各种 ID 对应了什么的解读，之前也查过了，找到了 StringID 之后可以猜出来一些…\r", "\r", " 这文档我看过了…\r", "\r", "感谢帮助，已经知道这代码基本是做了什么了…它好像是将选中的所有图层进行分组，选择分组里的所有图层，然后撤销分组…大概这样，虽然依旧搞不懂里面一些地方为毛要 try catch …", " 顺便解决热更问题(O_O)？", "那些史前流传下来不知道改了几遍的 C 代码才叫一个恶心", "谁把 oc 那个 if 判断的图贴一下", "缺乏类型的脚本语言就这样咯", "最起码还有代码缩进啊", "这辈子还长,别这么诅咒自己", "见过几百行代码很多 if ，中间是缩进几十行的 tab ，代码像一条龙，那感觉。。。", "嘻嘻，比起 jazz 好多了", "去 看下 matlab 代码比这些短\r", "看一星期都不一定看得懂", "你对恶心一无所知（跑", "没有那么难懂吧～", "你都用自动生成代码了   那代码还有可读性么"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>晚上访问自己的网站，突然发现原本的评论都没了！换成一堆测试评论……因此怀疑是多说混在 bug ，被人攻击了。</p>\n<p>于是查看后台，发现那个页面的 data-thread-key 值被替换了，换成了空！原本的值上放的是那几条测试评论。。。。</p>\n<p>这是怎么做到的？？？怎么就把我的评论替换掉了？？？</p>\n</div></div>"], "reply": "5", "tittle": "多说评论被替换掉了，有人知道怎么回事吗？", "comment": ["data-thread-key 不是写在你自己的网站上的吗，找你自己的原因啊。\r", "\r", "去看配置文件啊", " 我的是静态页面！是写死的……没有配置文件！", "在浏览器查看页面最后修改时间和你其他页面的修改时间有没差，如果没差，那就说明是偶然情况。如果有差，就有人搞你。", "服务器被改掉那就出大事了。。如果只是页面被改掉，，，那只是中间人攻击没办法╮(╯▽╰)╭", "额，也有。。换 https 吧"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>类是面向对象语言中最重用的一种数据类型，那么就可以用它来声明变量。在面向对象语言中，用类声明的变量被称作对象。和基本数据类型不同，在用类声明对象后，还必须要创建对象，即为声明的对象分配变量(确定对象所具有的属性)，当使用一个类创建一个对象时，也称给出了这个类的一个实例。通俗的讲，类是创建对象的“模板”，没有类就没有对象。构造方法和对象的创建密切相关。</p>\n<p>构造方法</p>\n<p>构造方法是一种特殊方法，它的名字必须与它所在的类的名字完全相同，而且没有类型。</p>\n<p>允许一个类中编写若干个构造方法，但必须保证他们的参数不同，即参数的个数不同，或者是参数的类型不同。</p>\n<p>需要注意的是：</p>\n<p>（ 1 ） 如果类中没有编写构造方法，系统会默认该类只有一个构造方法，该默认的构造方法是无参数的，且方法体中没有语句。</p>\n<p>（ 2 ）如果类里定义了一个或多个构造方法，那么 Java 不提供默认的构造方法 。</p>\n<p>示例：</p>\n<p>Demo15</p>\n<p>public class Person {</p>\n<p>int age;</p>\n<p>float height;</p>\n<p>Person(){ //系统默认的构造方法，当有构造方法的时候，系统默认的就会失效</p>\n<p>}</p>\n<p>Person(int age){</p>\n<p>this.age = age;</p>\n<p>}</p>\n<p>Person(float height){</p>\n<p>this.height = height;</p>\n<p>}</p>\n<p>void speak(){</p>\n<p>System.out.println(\"person\");</p>\n<p>}</p>\n<p>}</p>\n<p></p>\n<p>原文链接： <a href=\"http://www.maiziedu.com/wiki/java/structure/\" rel=\"nofollow\">http://www.maiziedu.com/wiki/java/structure/</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "Java 学习之构造方法", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"http://www.zoomfeng.com/blog/alibaba-one-year.html\" rel=\"nofollow\">http://www.zoomfeng.com/blog/alibaba-one-year.html</a></p>\n</div></div>"], "reply": "15", "tittle": "写在阿里一周年", "comment": ["支持", "写简历的时候你的文章对我帮助很大，感谢～", "写的好。很有深度", "写的很棒！", "不错", "内容丰富，感谢", "羡慕中。", "感觉和我司很像啊", "顶", "\"⑤阿里光环对阿里人在外部是一个加分（装逼）项，对个人职业生涯大多也是加分项；\"\r", "\r", "然而大多數人的眼中並不是。畢竟阿里的名聲，基本上快要被懂折騰的 Android 用戶給罵得夠嗆- -", "404 page not found", "  谷哥 帮我们缓存了一份，就是样式糟糕了些", " 谢谢，刚发现博客全站都是 404 ，原因不明 o(╯□╰)o", " ", " 的 pages 功能挂了，正在把域名重新指向 github.io", "终于又可以访问了。。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>是我姿势不对嘛？\n<a href=\"https://github.com/Kapeli/Dash-iOS\" rel=\"nofollow\">https://github.com/Kapeli/Dash-iOS</a>\n按照 readme 编译，连接报错：</p>\n<p>ld: warning: directory not found for option '-L/Users/Steven/GitProjects/Dash/Dash/build/Debug-iphoneos/AutoCoding'\nld: warning: directory not found for option '-L/Users/Steven/GitProjects/Dash/Dash/build/Debug-iphoneos/DTBonjour'\nld: warning: directory not found for option '-L/Users/Steven/GitProjects/Dash/Dash/build/Debug-iphoneos/DZNEmptyDataSet'\nld: warning: directory not found for option '-L/Users/Steven/GitProjects/Dash/Dash/build/Debug-iphoneos/GZIP'\nld: warning: directory not found for option '-L/Users/Steven/GitProjects/Dash/Dash/build/Debug-iphoneos/JGMethodSwizzler'\nld: warning: directory not found for option '-L/Users/Steven/GitProjects/Dash/Dash/build/Debug-iphoneos/KissXML'\nld: warning: directory not found for option '-L/Users/Steven/GitProjects/Dash/Dash/build/Debug-iphoneos/MRProgress'\nld: warning: directory not found for option '-L/Users/Steven/GitProjects/Dash/Dash/build/Debug-iphoneos/NSTimer-Blocks'\nld: warning: directory not found for option '-L/Users/Steven/GitProjects/Dash/Dash/build/Debug-iphoneos/Reachability'\nld: warning: directory not found for option '-L/Users/Steven/GitProjects/Dash/Dash/build/Debug-iphoneos/SAMKeychain'\nld: warning: directory not found for option '-L/Users/Steven/GitProjects/Dash/Dash/build/Debug-iphoneos/UIActionSheet+Blocks'\nld: warning: directory not found for option '-L/Users/Steven/GitProjects/Dash/Dash/build/Debug-iphoneos/UIAlertView+Blocks'\nld: library not found for -lAutoCoding\nclang: error: linker command failed with exit code 1 (use -v to see invocation)</p>\n<p>很明显是 Cocoapods 的问题，因为找不到的这些东西全是 pod 里包含的库，于是按照 pod 官方的 troubleshooting 尝试了：</p>\n<p>If Xcode complains when linking, e.g. Library not found for -lPods, it doesn't detect the implicit dependencies:</p>\n<p>Go to Product &gt; Edit Scheme\nClick on Build\nAdd the Pods static library, and make sure it's at the top of the list\nClean and build again\nIf that doesn't work, verify that the source for the spec you are trying to include has been pulled from GitHub. Do this by looking in &lt;project dir=\"\"&gt;/Pods/&lt;name of=\"\" spec=\"\" you=\"\" are=\"\" trying=\"\" to=\"\" include=\"\"&gt;. If it is empty (it should not be), verify that the ~/.cocoapods/master/&lt;spec&gt;/&lt;spec&gt;.podspec has the correct git hub url in it.\nIf still doesn't work, check your Xcode build locations settings. Go to Preferences -&gt; Locations -&gt; Derived Data -&gt; Advanced and set build location to \"Relative to Workspace\".</p>\n<p>依然不行，继续尝试了：\npod install\npod update</p>\n<p>依然不行，谷歌无果，求指点方向</p>\n</div></div>"], "reply": "13", "tittle": "Dash for iOS 编译不出来，求指点", "comment": ["提 issue\r", "\r", "我直接编译成功运行 xcode 8 而且需要开发者账号", "Pod repo update", "Pod install", " 试试这个", " 谢谢，但是我的 cocoapods 已经是最新了", " xcode7 开始不是不用开发者账号么，登陆自己的 Apple ID 就行了？我一直有开发者账号所以不太清楚。", "已解决，多谢各位\r", " \r", " \r", "您好 请问是怎么解决的 遇到同样的问题", " pod 设置问题， pod 的库 build 在了 /Dash/build/xxx...里面而 Link 的路径却是 /Dash/Dash/build/xxx...，最简单方法是点击运行再把编译好的库复制过去再运行即可。", "非常感谢", "你好，我也遇到这个问题了，没理解明白试了几次没成功，能详细讲一下吗？", " 先运行一次，看到这个错误的时候，把 /Dash/build/Debug-iphoneos 里的 13 个文件复制到 /Dash/Dash/build/Debug-iphoneos 里，再点击运行。", "弄好了，谢谢你"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>RT ，露珠又想回顾下了。</p>\n</div></div>"], "reply": "29", "tittle": "聊聊你对学习 Python 的几个阶段？", "comment": ["从入门到放弃.........", " 别.....", "建议看 fluent python 这本书，看完后有新感受", "Python\r", "Meta programming \r", "Async API", "看完了 廖大的 python 教程 ，但又不想用 python 做 web ，趁我还没有忘记之前 还能干点啥，爬虫么。。", "Anaconda python 数据分析", "r#3 @", " +1 作者在 Talk Python to Me 做过访谈，主持人用了\"a masterpiece\"来形容这本书。", " 对，杰作😂悔恨为啥没早点看到", " 最后一章 web 实战看得我崩溃", "看起来挺好玩的-》用起来挺好玩的的 -》 写几个好玩的东西吧 -》拿 offer", "最近刚好有学，围观大大", "用游标卡尺写 python", "brown 大学 coding the matrix, list comprehension 专项训练\r", "flask/Django 开发\r", "看完 learning python\r", "官方文档是最大的宝库", "python 格式化", "Python 基础教程\r", "Django 文档\r", "numpy 入门\r", "Dive into Python\r", "Dive into Python3\r", "目前为止的学习节点", " 求中文", " 貌似也就感觉只有 web 了", "依然在摸索，从未放弃", "r#16 @", " ", "多写点实际的项目就大致上不会忘了, 不然, 学一遍忘一遍.", "C++找不到工作 => 用 python 说不定好点 => TMD 还是一样 => 学 java 去", "第一阶段: 零基础 → Flask web programming,核心编程 2,  python 标准库, 《 web crawling with python 》,bs4 文档\r", "第二阶段:《 Learning Scrapy 》,  scrapy 文档 , 《 Python.for.Data.Analysis 》, youtube 上 data school 频道的一系列视频教程, 《 Python.Machine.Learning 》\r", "第三阶段:《 python cookbook 》, 《 Effective Python 59 SPECIFIC WAYS 》, 《 Problem Solving with Algorithms and Data Structures Using Python 》\r", "\r", "逐渐形成了先找一本书教我做一个东西出来, 再过一遍官方文档的学习方法", "看介绍，看吹逼，树立信仰\r", ">>>\r", "直接上手搞爬虫、搞游戏\r", ">>>\r", "Python 入门教程……", "入门->django 做 web->回归 PHP ，\r", "Python 只用来做爬虫->Nodejs 用来做爬虫，\r", "Python 被打入冷宫", " 看了个大概。。", "Django 文檔, Django by example, Web scraping with python,,,幹了幾份 Python 的工作, 現在轉戰 asp.net,,,,,.(Python 只做自己的項目)", " 能展开说明一下你的经历吗", " 都是自學, 和工作上實踐, Python 在我所處的二線省會城市工作太少, 所以轉戰 ", ", 某私立二本學院計算機系畢業"]},
{"content": ["<div class=\"topic_content\">有人说光抛问题不说场景，我知错，然后我真的只是想了解你们用的啥挑一个研究下， rpc 以前没碰过.....</div>"], "reply": "26", "tittle": "你们公司一般都用哪个 RPC 框架还是自己的轮子？", "comment": ["yar", "都有吧。公司内部都有好多框架，开源的也很多，主要还是看业务场景吧。\r", "\r", "//楼主光抛问题不分享自己的场景，噻~~", "改装的 dubbo", "dubbo", "我来看看有多少人用 grpc 的......", " 上次弄了下 没搞好。", "xmlrpc", "某个模块， thrift ，大约几万 qps", "php-yar", "thrift", "rpc 作为经典的 KPI 项目，而且难度小容易实现，轮子必须非常多", "自己早的轮子呀", " thrift 还是不错的，之前公司的一个产品用的就是这套", "用 yar 的我问一下，我一直不明白 rpc 调用对 http api 的优势在哪里。。。。\r", "你们觉得 yar 的那个 php-cli 开着一个命令行的 php server 靠谱么，既然 yar 也是用的 http ，那速度和我直接正常的写个 http api 没有区别啊，而且 http api 还更成熟", "用 dubbo 的还是挺多的 我们用 dubbo 和 thrift", "  cli 起的服务，相比 fpm 这种更容易实现 php 层面的持久化，比如说你框架有 200 行 php 的初始化逻辑， fpm 方式下每个 http 请求都要初始化一下， cli 起的只要初始化一次。未来的 PHP 或许会渐渐淘汰 fpm 这种方式，每个请求都简单粗暴重来一次已经越来越跟不上时代了。", " 场景不同， yar 用于内部系统服务化，远程类直接当做本地类使用，调用方便。 http api 提供给外部调用，通常需要认证。", " \r", " \r", "内部系统那也撑不住大流量啊，你想那只是一个单进程 php-cli ，而 php-cli 长期驻内存稳定性不好说。\r", "\r", "而且 php-cli 的 socket 做的 server ， workerman 、 swooole 之类的，性能并不一定比 php-fpm 的强：\r", "\r", "\r", "\r", "所以说就算本地内部使用，你没 log ，没并发，没负载均衡，没阻塞，没失败从启，那用 yar 之类的 rpc 我也没看到啥优势。。。无非就是函数调用更接近语言本身，还有就是传输的内容压缩过，但是这 2 点根本不是痛点，所以依然搞不懂 rpc 的优势在哪里", " yar 是基于 curl ，写的程序和普通 PHP 程序一样，由 php-fpm 执行，不需要 php-cli ，和 workerman 、 swoole 等需长驻内存的不一样。", " yaf 是 C 写的，框架本身是常驻内存的， swoole 框架只有底层核心部分是 C 写的，上层还有 php ，所以两者性能上面差距不大。而 yii 是纯 php 框架里最快的之一，它却比那两个慢好几倍，这正是常驻内存的价值体现。\r", "\r", "除了框架自身开销，我们还会有一堆业务上的初始化逻辑，这是 fpm 的梦靥，除非你业务逻辑初始化也用 C 做成扩展。\r", "\r", "cli 也不一定是单进程，比如 swoole 可以开多进程，充分利用多核性能。 qps 过万的时候，甚至连同机房 redis 的访问都嫌慢。\r", "\r", "至于 cli 常驻靠不靠谱，我觉得可能不如 python/Java 这样经过十年以上检验的可靠，但是 php 不也一直在改善么?", " 好吧，我一直以为 yaf 是运行在 php-fpm 内部的，那 yaf 本质上是和 swoole 和 yar 一样是 php-cli 的应用了……我小厂还是老实 yii 吧，流量达不到那么大，驾驭不了", "内部服务 dubbo ，对客户端 grpc", "Mark 学习", "grpc", "hprose 怎么没人提呢", "thrift 或者 google 的 grpc"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>说一下语言基础： DBA 。为了跟你们程序员能够正常交流能够看得懂你们的代码，所以有一点 c++（忘记的差不多了）， pyhton 的基础，比如能够用 python 写一些被你们嘲笑但是能够自动化的脚本。 Visual Basic 有跟着别人开发 MRP ， ERP 的经验，自己也能够写一点程序。 java 能看懂。最近在学 c#，把《 c#图解教程》看完了。确实觉得 c#有着非常多的优点，在很多方面都是当年学 c++不能说出的痛。有 c++基础所以学这个很快，然后到用户界面这一块跑偏了。学的是 WPF 。 WPF 确实很强大，能够写出非常不错的界面，但是对我来说似乎没有多大的实际用处，更加希望的是界面然后偏后端的处理。</p>\n<pre><code>现在要怎么调整方向，然后怎么前进,请各位前辈指教。\n</code></pre>\n</div></div>"], "reply": "38", "tittle": "自学 c#跑偏了。", "comment": ["网上的 WPF 教程大约 30 分钟一集，看了 30 集还是再叫界面，放弃了。", ".NET Core 大法好\r", "《 C#从入门到寻找指针》(误)", "这位同学, 你听说过 javascript 吗?  ^_^", "学 scala. haskell 啊  。 ：逃", " 《 JavaScript DOM 编程艺术（第 2 版）》 排期中，了解一下还是好的。", "不算偏，接着学.NET 就好了", "看看  CLR via C#", "WPF+MVVM 开发很强大，但是学习曲线也很陡。现在大部分都是 BS 了， CS 开发不多", "服务端 dotnet core", "边用边学..\r", "偏后端…那就看看《 clr via c#》补基础，看《深入理解 C#》补语法，再看看 ", " mvc 和 wcf, wpf 自己看着学", " 简单读读然后学点 nodejs, 然后写个简单的 todolist, github 有参考的可以借鉴. 再然后可以试试 js 的周边, 比如 NW.js 之类的东西. 建议现在就学, 微软的东西可以先放放", "后端可以看看 ", " Core ，这个是未来。", "WPF 本来就是目前 windows 上 GUI 开发的最佳方案了，不算偏。", "你知道 javascript 吗？\r", "我们现在是用 Xamarin 来做移动应用，然后一些跨平台的，看起来很麻烦的全部用 HTML5 来做。。。", "为什么要去学个小众技术呢？工作都不好找。\r", ".net 没前途的最好快转。", " 我是 DBA 处理数据那一块的，我希望的能在出现瓶颈的情况下双方面快速找到问题在哪里，或者能够说服对方（甩锅）。", "其实没关系，再学别的语言就好了，没必要抓住 c 井不放。", " 这我就要喷了 .NET 全球也算排的上号了吧.. 竟然都算小众技术了..?", " 小游戏公司 1000 左右在线 C#后端+半个 DBA 表示好像遇到的瓶颈都是数据库的锅...", " 忘了说 我每次成功甩锅到数据库 后来 DBA 不堪侮辱离职了  后面就让我当 DBA 了   悲惨的故事", " 应该是硬件和数据库语法的问题吧。", " 然后每次都能甩给后端了?", " 不是这个意思，就是说可以知道问题出在那里。能够迅速解决。有时候是程序的问题，有时候是语法的没有得到很好的优化，有时候是数据库没有设计好。", "学过 WPF ，放弃，专心做 Web 开发了，现在研究.NET Core 中", "WPF 的思想是很先进的,但是应用的地方比较少,根据楼主的目的,用控制台程序就行,界面只是套路,对语言的了解才是内功.WPF 太多花里胡哨的东西,容易跑偏", " 哪只能说这视频教程的作者太能忽悠了，学 WPF 学的不仅仅是界面，从学 WPF 中你还能学到很多软件设计模式以及架构的知识，比如 MVVM,消息通知，数据绑定等.....\r", "\r", "WPF 偏前端，你兴趣偏后端，然后你知道了，你可以学 aspnet ，还有最小跨平台的 net core ，或者比较旧点的服务端技术 WCF", "不过在我接触的公司和合作过的团队中发现， NET 在国内貌似还真是不待见，在国外却是另一方镜像了，奇葩", "在国外，至少美帝也不多见 net ，是偶尔有一些还算有名号公司用，但就个人所见，不主流。", " 我觉得 C#在互联网企业这块不流行，传统软件行业用的挺多的，不然 C#的热度排名不应该那么高。", "我为何觉得 c#很有钱途...\r", "建议学.Net Core + Xamarin 跨平台 app 开发", "  说工作不好找的, 你去招聘网搜搜,  再去看看编程语言 TOP 榜, 别啥都不知道就开始喷", " 业务爱好者，请问与 c#基础，想学 xamarin 和 c#应该如何入门", "最近几天我也在看 C#，毕竟两周后就要进你软搬砖了。建议你先把 ", " 里的 Language Section 看完（递归深度 3~4 左右），然后去看 CLR via C#。", " 修正一下：无 c#基础", " 恭喜你，可以转架构师了  。。。", "WPF 是好东西，要学到它的精髓。尽管你学了它可能也不会用它写几个界面，但是殊不知这两年 Web 前端界推崇的各种概念，很多都是当年 WPF 很早就玩过的。", "UWP", "算不上跑偏吧 我现在的公司就是 C# WPF 坐标美国加州 我觉得学一样东西先是要沉下心"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>现实使用电脑的过程中，经常发生需要从各种地方（比如网页上或者 TXT 里）复制一个 URL 或者邮箱地址等数据的情况。每次复制的时候，都需要小心地去选择，不希望多复制或者少复制一个字符，这样其实是很累的。所以突然想到，有没有这样一个程序，当我们鼠标停留在一个 URL 或者一个 EMAIL 地址上的时候，它能检查到这一点，并给出快速复制的方式。</p>\n<p>当然这里所说的 ”可能的有用的数据“并不一定局限于 URL 或邮箱地址。\n不知道是否能够跨应用做到这一点。</p>\n<p>MAC 和 WINDOWS 下是否有现成的解决方案？</p>\n<p>谢谢各位！</p>\n</div></div>"], "reply": "20", "tittle": "有没有一种能“从当前鼠标停留处”提取“可能的有用的数据”的程序？", "comment": ["类似 Spy++ 的功能？", "你可以参考下桌面翻译词典的功能。现在的翻译软件不都有文本检测了麽。。放上去就直接翻译了，你可以理解为把翻译框换成一个悬浮的复制按钮。不过貌似没有支持 URL 的检测", "获取窗口内容 AccessibleObjectFromWindow", "popclip?", "难道不是右键就可以了么？", " 这个还是需要我自己手动去选中文字才行，我的核心需求是不需要我自己手动选中，只需要我把鼠标移动到文字上面就可以。比如说，在一个 txt 里有一个很长的 url ，我只需要将鼠标移动到这个 url 的任何部位上，这个程序就应该能判断出我的鼠标现在放在一个 url 上，然后就弹出提示是否需要复制或者打开这个 url 。", " 求解右键如何做到？", " 对的，就是类似屏幕取词那样的功能", "何为有用，不好定义。不像翻译这么简单", "这不是鼠标版的 bigbang 么", "text linker? 文本转变成 url 就可以右键复制了吧", "你需要一个好点的鼠标，大一点的显示器", "这样的功能有点过了... 取决于你用什么文本编辑器打开 word 就可以识别。\r", "PC 就该有 PC 的样子，何必做的跟手机那样呢。", "AutoHotKey", "Win 下这个 AccessibleObjectFromWindow 。\r", "嘿嘿 QQ 聊天记录提取", "听着像锤子的 big bang", " \r", " \r", "实现自动识别 ip 并且显示出位置和 AS 还是有点用的", "好着就是屏幕取词加锤子的炸裂模式", "  确实像", "难道你不会用 shift 选取么？"]},
{"content": ["<div class=\"topic_content\">node.js 有一个开源的 p2pspider dht 爬虫，这个项目用 node.js 开发的，看到原作者说希望有人能整理下代码的意思，所以把原来的项目用 es2015 重写了一遍，一边写一边阅读阮一峰的 es6 教程，\r<br>\r<br>github 地址： <a target=\"_blank\" href=\"https://github.com/callmelanmao/p2pspider\" rel=\"nofollow\">https://github.com/callmelanmao/p2pspider</a>\r<br>\r<br>在线测试： <a target=\"_blank\" href=\"http://www.btwenwen.com\" rel=\"nofollow\">www.btwenwen.com</a></div>"], "reply": "7", "tittle": "ES2015 版本的 DHT 爬虫", "comment": ["真正的司机", "滴滴卡", "真正的机师", "在线测试一点进来...\r", "\r", "\r", "\r", "NSFW", "真大神，这不是司机，而是造车的", "厉害了 我的哥", "厉害！这可是真正的司机啊！！\r", "膜拜自己造车的！\r", "膜拜覆写代码的！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>在编程行业，一直流传着种种误区。这里面谈到的 10 个有关编程的常见误区，你是否也有过同样的疑惑呢？\n<a href=\"http://wp.me/p6WSQY-1OB\" rel=\"nofollow\">http://wp.me/p6WSQY-1OB</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "有关编程的常见误区，你是否也曾经有过同样的疑惑呢？", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>请教各位 web 从业者，现在的情况是使用 Vue/React/Angular 等前端模板的框架 /库多一些呢，还是使用 ROR/Django/SpringBoot+后端模板这样的情况多一些呢？</p>\n</div></div>"], "reply": "6", "tittle": "Web 现状，是前端模板多还是后端模板多？", "comment": ["后端多", "ROR 过去了。。请加入 PHP ／／", "前端模板多，现在都在慢慢的切过去", "前端+后端....其实看需求", "现在后端一般都是一套 rest 接口给 web android ios 共用， 所以后端都不用处理模板什么的了", "当前的较先进一点是：前端尽量多处理模板呈现和部分逻辑（如 Angular 的 if 判断），后端尽量只出 json 。\r", "不过有很多页面是不能这样处理的，比如要顾及 SEO ，页面本身就要有一定的输出，这样的情况就要求后端也要处理部分模板。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>前几天在微博看到芒果 tv 的程序员猝死\n今天大学室友告诉我他们公司的一个开发也猝死了，不到四十，属于上有老下有小的阶段。</p>\n<p>每次看朋友圈里那些转发鼓励加班的鸡汤文的人，我特码都想上去喷他，累死了公司给照顾老婆孩子吗难道。</p>\n</div></div>"], "reply": "72", "tittle": "又是程序员猝死", "comment": ["不是所有人都适合奋斗， 例如我。所以要量力而行，甘于平庸。", "码农适合买大保额的人寿和意外", "  说句实在话， 买这种保险有什么用。 你死了，你老婆会给别人艹，你孩子会被别人打。 所以， 首先是不要死。", " 我的保险受益人是我妈。我不认为以我现在的经济能力能养活我、父母、老婆、孩子、房。所以我选择先不找女朋友，租房，开五菱宏光。\r", "当父母不用考试，但我认为我肯定不及格。\r", "死不死不由自己，加班也是。工作不是说走就走的，尤其是签了长期合同的。大陆码农这种高危工种我认为很有必要买，我是按月净收入的 10% 投保的，确保我猝死了家里生活水平不会因此而降低。最怕我死的还剩一口气花光家里钱，那不如猝死来的痛快。", "你知道路上什么车最惹不起么？\r", "是五菱宏光。\r", "因为你永远不知道车上会下来多少人……", " 我估摸了一下空间能蹲十多个成年人。第三排后座拆了，能拉东西，着急了用睡袋也能躺平睡一觉。", "啊……已经成为高危行业了么", " 你这句话说得好，我死了给我 1000 亿都没用，我不是个乐于奉献的人。", "好可怕，所以人必须得想得开", "是时候把自己上传到互联网了", "继续为老板线上卖命。", "说的好像只有程序员猝死似的，其它行业哪个没个职业猝死，程序员应该算最低了的吧", " 想通了这个道理，却难以接受它。", " 可是像码农这种加班成为风气的实在是有点那个了。而且还会理直气壮地说你水平不行所以加班。", " 保险实际上不是买给自己的，买的是受益人的生活保障。难道还有人会把人寿的受保人和受益人写同一个？", " 是你永远不知道车上会下来多少人打你。", " 是的。人还是要摆清楚自己的位置，和以前的自己比，该奋斗的时候踏踏实实地奋斗，平衡工作和生活。别人再辉煌再励志，那其实和自己没什么关系。", "我想问一个问题，猝死是不是完全由于加班，或者过度劳累导致的？ 加班和过度劳累影响有多少？是不是每个人的情况不一样？是不是不加班或者过度劳累就不会有程序员猝死？", " 只能说概率小吧，不能完全避免，你看看官姥爷，也有喝酒喝死的。。。。", "祝天上安翔，地下安睡。", "别熬夜别熬夜别熬夜", "IT 行业猝死现在越来越多了", " 每月 10%？哥们有点偏激啊", "有个客户经常说我：你搞 IT 的，当然是要加班啊！这么多事情，你赶紧加多点班完成。\r", "现在国内的环境几乎是 IT=加班了。\r", "说着说着我就想转行了，不过又没什么其他能混口饭吃的技能，蛋疼。", "前面的朋友说得对，码农要买重大疾病险和意外伤害险。真出了事情，还可以给父母老婆留一点。当然希望保重身体。", " 这话说的真棒。。", "我选择不加班", "生的渺小，死的随机", " 我又没女朋友，自己不抽烟不喝酒不下馆子，自己做自己吃。不玩股票、期货、车、表、耳机、相机、手机，花不了多少钱。家里也不需要我孝敬，自给自足，剩下的钱买个保险还是足够的。", "  华为腾讯这样的公司都是踩着工程师尸体一路走过来的，最少吗", " 那你干脆直接消极怠工逼企业主动和你解约算了，至少不用付违约金。", " 安静点，别说话", " ( ﾟ∀。)⊂彡☆))∀`)", "额 我看不到未来的自己 有点虚", "量力而行", " 头像真不错", "人活着要自私和自知，凡事先以自己为前提，凡事先评估自己的能力。一味奋斗的人出了事情不值得同情，连自己生命都不在乎的人是可以不在乎任何东西的，只要他想。", " 难道不是金杯？（手动滑稽）", " 車不錯, 如果緊急找不到房可以暫時睡車上", " /g/987373/3132095241/ 前门上车，后门下车。上下车请刷卡。", "  金杯太明显了，一看就知道里边 20 个人起。五菱宏光是深藏不露", " 但是千万别停车开空调睡觉，容易尾气中毒。", "  /g/987373/3132095241/ 前门上车，后门下车。上下车请刷卡。", "#41 发错人了", "多听说码农猝死，有产品经理猝死吗，有 HR 猝死吗？", " 电动机就可以。", "减少加班，猝死别人睡你老婆打你孩子", " 如果有 150k 以内的纯电的三排七座的厢型车我倒是可以考虑换一辆，小轿车还是算了，空间太小。", " 说的好像码农有老婆孩子似的 ( ´_ゝ`)", "觉得程序员猝死是因为久坐和不运动吧，各行各业加班的多得去了", "不要熬夜,我们这个行业长期熬夜的很多都在 65 岁挂了.", " 五菱宏光的别走， 2333333", "以前公司有个领导跟我说，技术不都是要加班的吗？给你的这个薪资我可以找一个乐意加班的。后来我就辞职了，让他找个乐意加班的。命是自己的，一切都要建立在自己活着的基础上，命都没了，保险有个屁用，给自己父母又如何？问问爸妈看看他们愿意要钱还是你的命。", "别把问题严重化，别悲观，爱护自己，善待家人朋友。开心工作。", " 嗯, 這點要注意, 很重要!", "可悲之人必有可恨之处，这种人带坏了风气，出去只要 说搞 it 就会被说加班是不是很晚.", "怎么样的工作强度会猝死", "怕猝死，首先是调整作息，其次才是保险。买了保险就可以随便熬夜随便折腾了？", "每次出了这个事情，大家就是三天热度，完了还是为了眼前的苟且加班去了，从而间接参与到恶性竞争里去。\r", "\r", "这个社会就是如此，弱肉强食，快一步就是能克敌制胜。所以总有一部分人身体好，能加班，肯加班，必然会拉动整个行业的竞争，导致其他人不得不被动地跟上节奏。\r", "\r", "\r", "但如果我们能成立一个大陆码农共和国或者工会之类的，能给大陆码农更多的选择权和必要的提示，\r", "- 让愿意拼命的人可以选择拼命（同时工会对这部分人进行定期检查和健康警告）\r", "- 让不愿意拼太狠的人也可以选择很多稳定体面的工作机会（工会要想尽各种办法来提供，比如各种培训提升，各种不靠加班的赚钱路子的交流）\r", "\r", "能那样就太好了。\r", "但在此之前还是按大家说的来，在每个大陆码农从业之前，都要进行提示：“管好自己的健康，合理加班，猝死别人睡你老婆打你孩子”", "我已经快 2 礼拜没见我室友的面了。。\r", "\r", "晚上我大概 11 点半睡觉他还没回来。。\r", "\r", "早上我八点半出门上班。他已经走了。。", "产品没有猝死的，不过有被砍死的风险", " 好对。", " 哈哈，笑死了。。经常看到路边有拉客的，拉满人再开车", " 无力反驳", "不管干什么，身体健康都是最重要的，谨记", " 车不错，滴！公交卡", "做梦都想去大公司，去了大公司发现比自己强的人还在努力。\r", "一直给自己压力，一直在加班，精神和身体都受不了。\r", "说起来为了自己的梦想。被公司洗了脑，为公司卖命。\r", "挣钱的方法很多，活着才重要。\r", "多想想家人，你这辈子不能只有自己的梦想。\r", "你的梦想不是你自己的。你还有家人。\r", "我层次低，我只是个小城市的屁民程序员。", "这就是美国排华法案的原因，你华人这么勤奋，加班这么积极，不参加罢工所以你必须滚回中国。", " 。。。遇到一个肥宅", " 笑什么笑，你也是 ( ´_ゝ`)⊂彡☆))∀`)", "加班和努力、奋斗没有半点关系"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>发了 198 大洋，买了一套 Vue 教程。感觉一般，基础入门\n<img alt=\"\" src=\"http://oc9orpe44.bkt.clouddn.com/public/16-12-2/7043359.jpg\"></p>\n<p><img alt=\"\" src=\"http://oc9orpe44.bkt.clouddn.com/public/16-12-2/91647105.jpg\"></p>\n</div></div>"], "reply": "12", "tittle": "幕课网的实战课程，营养如何", "comment": ["你这样“共享”很不合适。", "这是不是和电影院翻拍电影差不多了？", "请尊重老师的劳动", "额 。。。。。。很强势", "拉我", "群主开启群验证，扫描也进不去，浪费感情", "群主 扫描进不去", "还要群主邀请...没诚意...", "败类", "楼主邀请我进去，最近也在学前端。 wx ： su14343", "是这个慕吧？慕课网(IMOOC)是 IT 技能学习平台？", "问问 LZ 效果怎样？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h1>之前是开发了个微信服务号的程序： <a href=\"https://www.v2ex.com/t/324923#reply6\" rel=\"nofollow\">https://www.v2ex.com/t/324923#reply6</a></h1>\n<h1>以及创建了微信群：</h1>\n<p><img alt=\"yyl-group-qr-code.jpg\" src=\"//dn-cnode.qbox.me/FpK0JXUN4GJ_8wOcncV9FP0vU6JW\"></p>\n<h1>订阅号也上线啦！</h1>\n<p><img alt=\"订阅号.jpg\" src=\"//dn-cnode.qbox.me/FpH0uLwAmSPTe6m6w8maWxc6-Yte\"></p>\n<h1>明天早上发布 V3 版的程序哦！</h1>\n<h2>核心功能是：地图定位后，在你定位的地方留下微信号，及可以添加附近的微信群</h2>\n<p>目前计划加一个微信号或者加一个微信群微信支付 1 毛钱</p>\n<p>大家有什么意见么？或者有更好的建议欢迎留言告诉我！</p>\n<p>我建的那个群不定期发红包哈！！</p>\n<p>目标就是年底回家前认识+线下约会吃饭 10 个异性以上！</p>\n</div></div>"], "reply": "3", "tittle": "订阅号上线咯！帮程序员找女友滴！基于 vue2+koa2+mongodb+redis+socketio(暂时没有 socket 什么事，之后微信小程序版本会有用吧）", "comment": ["关注订阅号后”此订阅号暂时无法提供服务“？\r", "顺带问下开源么？", " 忘了设置服务器配置啦，所以微信会返回那个说明，现在可以了。\r", "订阅号主要为了每天的新用户列表推送用的，服务号会提供各种功能，小程序版本会找时间发布，但是还是得等微信正式公开小程序才能用的，不过可以加几个体验者先", "## update @ 20161204 12:18:30\r", "\r", "v3 版本马上要上线啦！大家快入群，群主发红包啦！\r", "# feature list\r", "[ ] 定位当前位置，提交你的二维码及当前位置信息\r", "[ ] 获取地图上已经标记的用户的微信二维码功能\r", "[ ] 获取标记用户附近的微信群二维码\r", "[ ] 邀请用户使用，获得收益分成\r", "[ ] 微信支付体系，包括添加到购物车（ 3600 秒过期），结账后根据不同模块商品跳转到不同的订单列表页"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>之前弄了个公众号搞学校英语系统代刷的，现在有 500+用户，都是自己学校的，想改作个人分享用，叫啥名字好？<br>\n主要内容：技术 /互联网相关、个人生活分享，按我的时间情况估计发文不是太多，更多是看到好东西分享下吧<br>\n面向对象：技术相关人员，打算主体是学生。</p>\n<p>之前想到个不错的（技术小黑屋）结果已经被注册了</p>\n</div></div>"], "reply": "19", "tittle": "个人公众号起名", "comment": ["黑科技小屋", "技术小黑屋被注册了\r", "\r", "那……要不试试\r", "\r", "技术大新闻？", "现代魔法学园 可惜已经有了 ", "\r", "参考这个风格不错", "秋名山卡丁车", "借贴 宣传一下我的  个人公众号:  JustYYUK   小赖子的英国生活和资讯", "蛤啤科技", "莱布尼茨叔叔的小屋", "现在的年轻人总想搞个大新闻.", "校门口杂货铺", "谈笑风生小黑屋", "就叫图样图森破 Too Young Too Simple-.-", "一颗赛艇小黑屋", "膜法小屋", "都想搞个大新闻..", "校园大新闻（社）", "头文字五菱", "黑小屋技术\r", "\r", "技术黑小屋\r", "\r", "小技术黑屋\r", "\r", "黑科技屋\r", "\r", "暗黑技术屋", " 哲♂学小黑屋", "查了查“学校英语系统代刷”是啥意思，原来是个不小的市场。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近一个人在写一个小项目, 发现自己是 \"面向文档开发\".\n浏览器的标签页数量一直在 20 个以上.\n不是一直盯着文档看, 但写的时候不时需要查一下资料, 就一直开着.</p>\n<p>我还远没有达到思如泉涌, 手不离键盘码字飞起的阶段.\n我一般是先想, 做做笔记, 然后着手, 着手后再修改之前的部分想法.</p>\n<p>应该是因为对相关技术不够熟悉造成我的现状, 这种情况和 /t/265800 描述的很像.\n不过还好吧, 我没觉得自己很 low. 是还有很大提升空间罢了(换一种说法?).</p>\n<p>我想这就是 \"面向文档开发\" 吧. 向着 \"真-合格程序员\" 进发.</p>\n<ul>\n<li>notepad 笔记</li>\n<li>GitHub 写并查看(自己之前写的)文档(2 页以上)</li>\n<li>Heroku 控制台, 看文档(CLI 用法)</li>\n<li>PostgreSQL 官网看文档(2 页以上)</li>\n<li>Koajs 官网看文档</li>\n<li>钉钉 看文档(2 页以上, 客户端和服务端)</li>\n<li>Pure CSS 看文档(1 页)</li>\n<li>ESLint 官网看文档(因为同时两份 eslintrc, 前端用 ES5, 后端用 ES6)</li>\n<li>其他查询与参考(2~4 页)</li>\n</ul>\n</div></div>"], "reply": "11", "tittle": "面向文档开发. 下一站, 合格程序员", "comment": ["也可能你只是需要 ", "  ", " ", " 谢谢. 我有 Dash, 但是还是觉得直接去官网才新鲜. 尤其在搜索的时候, Google `site:website key` 列出的基本就是我需要的.", "感觉面向文档开发, 面向 google 开发, 面向 stackoverflow 开发, 面向 ctrl+c/ctrl+v 都没什么不妥啊. 感觉自己也是这种实践方式啊.\r", "\r", "不需要查资料的时候, 我觉得似乎限于纯逻辑, 算法, 重构, 优化这类的场景, 或者对技术栈无比熟悉.", "可能现在，已经没人再纠结纯手写代码了，甚至再听说，有人面试 给纸笔写代码的话，估计会被说成神经病了。当各种工具越来越智能，各种文档更新的越来越频繁，做项目编程搭积木，再或者说是不想再记忆那些随时可查的东西，但也没见得有什么创造性的产出。以后编程可能完全可以让 AI 实现了，程序员估计只需要少数一部分人，来控制 AI 就好了。而 VC 达人们，则会面临更大的挑战。", " 基础还是很重要的. 不过这种编程基础应该是一种思想而不局限某一种语言或某些积木吧. 要求具体某种语言达成有点落窠臼.\r", "\r", "我更注重思想. 还幻想过有一种 AI 能帮我把伪代码翻译成代码(现实中这种 AI 的名字叫 同事).\r", "\r", "但不同语言所处环境不同, 思想也的确是不同的.", "没看懂", "没必要苛求不看文档，用的多了自然就记住了。配合现在 IDE 的智能补全，学习速度还是很快的\r", "\r", "写 C/C++凭着大学留下的功底基本可以不用任何文档 /补全。然并卵，不用任何库只能写写玩具而已", "虽然我是个 vimer 但是我感觉你还是需要一个 IDE 。。。", "面向文档编程 =》 外包？", "IDE 还是不太容易解决此帖中的问题, 比如我例子中遇到的 PostgreSQL 的 jsonb_path_ops 索引局限性, 钉钉的文档, Heroku CLI 文档等. 就像 @", " 说的, 熟能生巧. 我用的都是针对这个小项目的我不熟悉的东西, 所以有此问题, 用多了就好了.\r", "\r", "IDE 挺好, 只是条条框框比较多, 不适合我(及灵活多变的人).", " \r", "的确是客户定制, 我来做.\r", "但如果我和客户是一个老板, 我觉得这不算外包吧."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h3>Apizza ( <a href=\"http://apizza.cc?f=v2ex121\" rel=\"nofollow\">http://apizza.cc?f=v2ex121</a> ) 支持在线的 API 调试，接口管理，快速生成文档，项目管理以及分享。</h3>\n<p><img alt=\"图片描述\" src=\"http://ocrlqrwod.bkt.clouddn.com/195239_mw7H_2405364.png\"></p>\n<p>平台分为开发模式和浏览模板，开发模式只有用户自己可以打开，浏览模式是供其他人查看，测试使用。</p>\n<p>平台支持标准的 http 协议请求，支持添加 header ，支持标准 json,xml,html,text 四种返回格式， 自动格式化展示。平台做了许多体验优化，比如参数列表和 url 自动转换， 请求文档字段一键生成。响应文档的字段可以从 api 返回自动生成。请求自动存为历史记录， 支持定义的环境变量，可以方便切换线下，下上环境,文档导出等等</p>\n<p>备注：记得安装 chrome 插件，插件主要是解决跨域问题。\n也不用和 postman 比较， postman 是不错，我们只是优化了很多用起来感觉不爽的地方，而且强化了文档功能，新功能还在完善中，有意见或建议可以留言，我们来改进^_^</p>\n</div></div>"], "reply": "39", "tittle": "不容错过的免费好工具 Apizza", "comment": ["这是在打广告？？？", " 这只是个工具，而且是免费的。你如果是写 api 的，应该能体会到", "Postman 错觉", "网站挂了貌似", " 可以访问的", "不注册不能用？相比 postman ，优点说说呢？", "求出离线 APP 版(electrion)", "  app 版你怎么用，在手机上测试接口？", "使用后，完全把本地开发，服务器开发接口都暴露给你们了，完全感觉被监控之 ...", " postman 第一,文档功能不强。我们调试 api 功能还没有 postman 强，他做的已经极致了，但是几乎用不到，我们的比较实用,增强了文档功能。第二：我们是国内的，不用担心访问问题。第三，你可以给我们提意见，我们会改进。 postman 不行吧^_^，第四 协作功能马上上线，比 postman 好用", " 你说的也不是没有道理。如果很 担心这块，可以只是本地测试接口和写文档。我们也是肯定会保护数据的。", " 我们是做服务，不是搞破坏，不会搬起石头砸自己脚^_^", "postman 有一个非常好用的功能，支持 test 和 prescript 。你们支持吗？\r", "不过 postman 而且还有一个问题， prescript 无法拿到设置的 method 、 url 等等。如果想动态生成 token 还是很麻烦。这点所有的 api 调试都不支持这个功能", "至于文档功能， postman 也支持 啊。 postman 强在可以做自动化测试，但是功能依旧还是不够强大", "用了下，没什么特色 feature", " 功能还在完善，这些都会支持的。\r", " 你想要什么功能，可以给我们提^_^，会考虑的", "有开原版 or 离线版嘛，用过一段时间转开源的小幺鸡了", " 这种工具，开源意义不大。离线版可以后续考虑", "打不开，先解决可用性问题吧。。", "不稳定啊，希望能出离线版", " \r", " 感谢，这段时间阿里云是不太稳定，我们要迁移。", " 电脑上啊～～～谷歌扩展更好，可是不稳定，有时候安装不了，很麻烦的", " 只要一次安装好久行了。可能你翻墙软件没选好，你搜索下蓝灯试试，免费的。还可以", "  谷歌浏览器限制也多～～要是出现一个 nodejs 的 app 平台就好了～～～像微信小程序那样", "这个不是 postman 么", "这个 apizza 是 中文版 postman 。\r", "\r", "貌似 Chrome 的 APP 要挂了，逐渐都不支持了，先 mark 。", "JSON 没高亮？", "朋友，你听说过 Swagger 吗？", "返回数据文档不支持多层显示 转小幺鸡了", " 这个肯定是支持的。没有支持，可能是接口服务器指定数据的返回格式\r", " json 会高亮的\r", "可以参考这个 ", "\r", "\r", "\r", " Swagger 和我们不一样哈", " postman prescript 的支持太少了，请至少支持能够获取 url ，方法等信息。对于需要认证（ postman 已经提供了不少，但是没有提供自定义认证，所以需要 prescript ）的测试，如果不支持这些功能，跟手动测试没啥区别。。。", "支持，希望做的更～！", "放在云端不够安全啊", "最近在用 有几个问题给楼主反馈一下：\r", "1.缺少团队共享模式（现在只能分享出去 对方只能阅读不能编辑）\r", "2.导出的 html 排序有问题 \r", "3.文件夹只能建一层 而且项目创建后不能排序", " 就像你把代码部署到云服务器是一样的，做服务只能保证我们用户的数据安全。\r", " 恩，收到，感谢\r", "\r", "apizza 发送请求插件 1.7 版本上线\r", "1. 支持 Restful URL 风格。例： ", "\r", "2. 优化全局环境变量。请求参数， header 也支持。\r", "3. fix bug\r", "安装地址：\r", "\r", "ps ：注意，卸载后再安装", "跟 postman 相似度 99%。。。", " 过奖了。哈哈。其实不是，和 postman 肯定是有区别的，文档和协作可以在体验下，不错^_^", " 你还觉得我在夸你。。。。现在山寨的已经有优越感了吗", " 首先，我没觉得你在夸我，你这个嘲讽还是听得出来的。不是山寨有优越感，只是没必要在整一套体验，增加学习成本。代码也都是我们自己一行一行码出来的，并不是下载谁的直接改改，拿来忽悠你。 postman 我们也很尊敬，我们只是在他基础上，优化我们觉得需要优化的东西，用户不满意的提出来，我们来修改，接受意见。我想 postman 应该不会鸟谁给他提意见吧。如果你真的用下我们产品，你会发现，很多地方和 postman 是有区别的。我们也还有很多地方需要改进，现在发现的瑕疵，将来肯定会修复。给我们提出来就行^_^"]},
{"content": ["<div class=\"topic_content\">平时闲的时间比较零碎，打开别的 app 嫌麻烦，大多都翻翻公众号，现在关注的有野狗和伯乐在线的几个号，感觉还不错，干货挺多，谁还有推荐的吗？</div>"], "reply": "7", "tittle": "谁给推荐几个学习技术的公众号啊。", "comment": ["直接看动物书", "码农翻身，从知乎上看见的，文章挺有意思", "还不如用推酷，想看啥看啥", "神秘的程序员们\r", "架构师之路\r", "InfoQ\r", "justjavac\r", "这堆干货有点猛   //JAVA 的\r", "嘀嗒嘀嗒", "ImportNew Python 开发者", "建议用推酷", "读书就好。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>原文： <a href=\"http://blog.xcatliu.com/2016/12/02/6rainbow/\" rel=\"nofollow\">http://blog.xcatliu.com/2016/12/02/6rainbow/</a></p>\n<hr>\n<p>构思了很久，决定用业余时间做一个社交网络。</p>\n<p>主要的目的是为了学习一些前端技术。</p>\n<ul>\n<li>社区名字：六彩虹</li>\n<li>网址： <a href=\"http://6rainbow.com\" rel=\"nofollow\">http://6rainbow.com</a></li>\n<li>价值观：自由、骄傲、隐私</li>\n<li>GitHub ： <a href=\"https://github.com/xcatliu/6rainbow\" rel=\"nofollow\">https://github.com/xcatliu/6rainbow</a></li>\n<li><a href=\"http://blog.xcatliu.com/6rainbow/\" rel=\"nofollow\">六彩虹开发历程</a></li>\n</ul>\n<hr>\n<p>现在才刚刚开始做，网址还访问不了，欢迎持续关注~</p>\n</div></div>"], "reply": "52", "tittle": "新坑：自由、骄傲、隐私的社区——六彩虹", "comment": ["网址打不开啊……", " 刚刚开始做，网址还访问不了。。。想学习 Koa 或 TypeScript 的同学可以关注下，一起来学习~", "这就尴尬了，都访问不了就开始打广告了", "六彩虹，不怕有人以为是纯同性交友社区而大都不打开么", "感觉 u 额楼主有同性这倾向啊。。。", "尴尬了", "这个价值观和这个名字真的不是同性交友网站么....", "=.= 空架子啊 \r", "import * as Koa from 'koa';\r", "import helloWorld from './middlewares/hello-world';\r", "\r", "const app = new Koa();\r", "\r", "app.use(helloWorld);\r", "\r", "export default app;", "为了隐私, 连打开都不行么", "第一反应还以为是同性恋相关，尴尬了😂", "![]( ", ")", "hhhh", "你逗我呢", " 我第一反应也以为是给 LGBT 开设的论坛", "就是同性社区", "网址为 ", " 的网页可能暂时无法连接，或者它已永久性地移动到了新网址。\r", "\r", "您是想访问 ", "\r", "\r", "23333", "可能是在这里发地址，第一个没被 ddos 的。", "......", "前来支持，静待开张呀", " 嗯，不用 exprees ?", "等网站能访问了再发贴, 效果更好些", "骄傲\r", "好傲娇啊", " @", " @", " @", " @", " @", " 居然这么快就露馅了。。。本来是想叫彩虹旗社区的，不过根本没有可用的域名，而且感觉 SEO 也比较困难，所以改成了这个名字，含义肯定也都猜到了，同性旗帜就是六色彩虹。", " @", " @", " @", " @", " @", " 主要还是想学一些技术哈，觉得从一开始做的时候就公开，说不定有感兴趣的朋友也关注呢。能够一起看它慢慢成型挺有意思的。", "傲娇", " 纠结了一下，最后还是决定想尝试一下没用过的 Koa2", "做 LGBT 的社区不错啊，但是运营起来会很麻烦，防黄防政策……", " 七彩虹显卡？（滑稽", "想知道同性恋有什么骄傲的。", "今年在荷兰的时候赶上了一个叫 europride 的游行，我当时就想问，同性恋这种玩意一不拼天赋，二不拼努力，甚至连运气都不需要\r", "\r", "换一个眼插会让你们很骄傲吗？", "感觉会发展成 YP 社区……", "这名字蛮有勇气的", "想起来一个主板叫七彩虹。。。", "嗯，关注了。（同志就是普通人）", "关注了。（同志也是普通人）", "支持 （同志就是普通人）", "其实这个 pride 我觉得更多是 you should be proud of youself ，不要对自己的不同而感到自卑，不要否认自我的身份这样子，并非是那种骄傲自满，骄兵必败的那种骄吧。更多的是个人尊严，自我认同这样。这个词有多个含义，中文直接骄傲会产生些语言语义歧义。", "看标题就知道是 LGBT 社区啦 #LoveisLove", "说句政治不正确的话，感觉 LGBT 群体里面 [部分人] 就像 [部分韩国人] 一样，脱离了中国、日本的分别统治之后，开始盲目的“骄傲”了，把自己看得太重了。", " 这种关乎权益的问题，往往只能用这种看似‘矫枉过正’的态度，才会被引起重视。女权如此， LGBT 亦是如此，黑人更是斗争了几百年才有了现在。如果只是弱弱的阐述自己‘并没有什么不同’，‘需要被同等对待’，会有多少人理会？基本只会被无视。如果不是实在被看轻到已经影响到生活甚至生存，谁愿意自找麻烦来让人看重呢？关于骄傲的理解，参考楼上 @", " 的回复吧。", " 参考楼上 @", " 的回复吧", "支持楼主哟～ #LoveWins", "rainbow6", " 233 我就觉得这个标题有什么不对劲", " 有同性交友的地方就有 neo", "骄傲~~~", "里面可以找到 bf 么", "確定不是同志社交網站？", " 233333", "旧坑 Mobi.css 还没填完呢。。。双开始挖新的了？(手动滑稽)", " 双＝>又"]},
{"content": ["<div class=\"topic_content\">岗位职责：\r<br>          1 、负责 android 终端应用软件和组件的开发工作；\r<br>          2 、. 负责完成网络和系统软件的界面、动画、通信、业务功能开发；\r<br>          3 、 进行组件化设计和 sdk 开发；\r<br>          4 、承担版本的系统设计、性能及内存调优工作。\r<br>任职要求：\r<br>           1 、熟悉 android 系统源代码；\r<br>           2 、熟悉 android  APK 破解和逆向分析；\r<br>           3 、熟悉 android  系统双开原理及虚拟化技术；\r<br>           4 、熟悉 C/C++  NDK  开发；</div>"], "reply": "2", "tittle": "招聘一名资深 Android 工程师", "comment": ["发这样的 JD 很难招人，薪水范围、联系方式、公司做什么的，都没有描述。", "哦哦 明白了哈"]},
{"content": "", "reply": "89", "tittle": "做程序久了觉得最大的变化是什么？", "comment": ["我秃了，也强了", "着装娘化 思维江化 社交 gayhub 化 前列腺钙化", "我变胖了 也变强了", " 23333333333", " 思维江化，蛤蛤蛤", "变化很小，废话比以前少了一点。", " 躺枪，不过还有腰围", "思维更加理性了", "比以前能吹了。", "秃了，度数也增加了", "我会主动用付费软件和付费服务", "腰围臀围,啧啧", "眼睛不好，腰酸背痛，屁股大了", " 走火入膜", "讲真  思考问题的方式", "折腾各种生产力工具,生不生的出来就不一定了", "理性多了，经常把自己当机器起看待问题\r", "\r", "单身了，宅了，胖了", "变得又胖又懒了。。。", " 是因为工资变高了吗[滑稽]", "莫名其妙有了一个好看的女朋友", "对不可控的事物极其反感。", " 大家来看啊，我们中出了一个叛徒 2333 。。。", " 港真 最近桃花运爆棚", " 我们为什么要中出他？具体过程是什么样子？\r", "——思维发散化，想法低俗化。这可能也是做程序久了的我的变化。", "脾气变差了,懒得解释了.\r", "听到\"有空修电脑 /电视 /写个简单的网页 /app/软体吗\" 想弄死那人.连听他解释都懒.", "懒 胖 宅 兽耳控", " 看到你的回复，突然间就乐了 2333333", " 从这方便来说，自己确实变懒了。", " 是啊是啊，写程序这几年莫名其妙就成了控", " 你走开，我不想和你说话", " 哎呀好气啊", " 为什么要中出。。。", "眼睛度数高了..", "到了一定阶段，技术越好，越难往上爬。\r", "\r", "有时要自废武功，甚至要去学左冷禅，岳不群。\r", "\r", "不想这么干的话，就只能笑傲江湖了，有时心里挺羡慕自由职业者的。", " 大概要怎么样，不是很懂请指教。。。", "讲真，人有时会变得理性得不行，偶尔会让身边的人觉得失去了人情味", "笑出声...", "更找不到妹子了", "脱发", "有点犯痔疮", "脖子伸不直了", "变懒,重复的问题不想自己做,想交给程序解决~", "做程序\r", "三个月没理发\r", "一照镜子，嘿，你猜怎么着？ \r", "头发居然变长了\r", "这就是做程序久了之后最大的变化", "最近有点痔疮的症状~", "近视眼，呆，傻。不会和人聊天了、", "内存条好挤。", "谁都不想理；感觉到处都是傻逼，想冲上去揍一顿；发际线越来越高", "头发快没了，感觉自己快脱离社会了", "越来越不想跟人说话，喜欢独处，搬砖，看书，听音乐，沉浸在自我的世界", " @", " 我的妈 突然感觉*花一*", " @", "  别气啊哈哈哈 指不定我们中出了另一个叛徒 一起蛤啤", " 江信江疑", " 似董非董", "怎么感觉你们都很惨啊😯", "就我一个人变瘦了吗", "一天三鲁变成三天一鲁了。 \r", "真的不复当年了！", "觉得程序不再神奇了，代码也没那么有魅力了", "数数从 0 开始了", "经常面向对象", "腰疼", "说着说着就膜起来了。😂", "数数从 0 开始 +1", "感觉不到时间一天就过去了…", "时间不够用啊，这个点我还在学习，不知道 40 年后我能不能不用学习新东西...", "经常不洗头的人， bug 也少", "没啥变化", "一般问题会这样问:\r", "\r", "请问", "一般问题会这样问:\r", "\r", "请问哪种背包适合程序员？\r", "请问程序员应该如何买衣服……", " 我度数也增加了 感觉要瞎", "话本来就少，现在更不爱说话了", "看了楼上 感觉还是略可怕 珍爱生命啊", " 是的，不爱说话了", " 是啊，现在就尽量多说话", "感觉接触的人越来越少了", "一年胖了 70 斤，头一次累到晕倒在路边算么", " 厉害", "不断看书", " 回老家以后可以跟朋友吹牛逼说我也是在帝都坐过专车还一路警笛开道的人😂", "说话少了，看到一个东西总会不自觉的想他是如何实现的", " 大兄弟，多注意身体啊。没了命有啥都没用了", "和朋友间的交流变少了. 可能是因为没有针对社交预留时间吧.", " 一言不合就开膜蛤，活着不好么！", "说话少了，碰到一件事情能立刻想到别人的目的", "感觉客户都是逗逼加智障。", "胖了 15 斤", "肩周炎不断加重……", " 同感", "好像没什么变化- -", "思维非常理性，但要融入社会还是需要更多感性。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>毫秒服务引擎 msec\n<a href=\"http://haomiao.qq.com/\" rel=\"nofollow\">http://haomiao.qq.com/</a>\n<a href=\"https://github.com/Tencent/MSEC\" rel=\"nofollow\">https://github.com/Tencent/MSEC</a></p>\n<p>看到这个介绍觉得很踏实，接地气。:)</p>\n<p>近 10 年的海量服务开发运营经验使得我们深刻的认识到：\n① 要尽早规范团队的开发服务框架，避免到了后期，各种开发语言混杂、各类存储组件充斥、重复编码、每个模块形态不统一、文档缺失、监控瘫痪、人员离职造成大量信息丢失，最后积重难返、痛苦不堪。\n② 没有框架来规范，团队的随意性就太大，合作效率就大打折扣，甚至于内耗、反复的挖坑填坑，系统的成败过于依靠人的意识和水平。\n③ 规范，不能靠文档、不能靠劳动纪律、不能靠苦口婆心、不能靠人员意识、不能靠运动式的整顿，要靠技术框架上切实的限制与贴心保护。</p>\n<p>唔， binding 一个 Lua 来做游戏怎样。:)</p>\n</div></div>"], "reply": "38", "tittle": "腾讯搞了个大新闻。开源了一个后端服务引擎。", "comment": ["看起来有点意思", "牛逼", "觉厉", "已 star", "啥格式文档都有 GitHub 乱吧 doc 也是醉了", "能在鹅厂内部推广开就算是成功了～", "厉害", "腻害，框架慢慢看，不过能够让鹅肠分配这么一个二级域名也是很腻害的团队吧", "r#6 @", " 哈哈哈", "已 star", "类似 duboo + zk ?", "挺不错的，不过具体要看看源码先，跑跑看", "\"log 服务器：提供业务 log 的存储和查询服务。 Log 存储在 mysql 表里。\"\r", "感觉这个 LogSrv 比较适合业务刚起来的时候,否则用 MySQL 存 Log 几乎是最差实践之一....", "另外随便扫了一下代码...真的是初中生水平,当然主要可能也是因为腾讯是 C/C++系的,所以 Java 写的特别烂?\r", "例如:\r", "\r", "        while (entries.hasNext()) {\r", "            if (!where.isEmpty()) {\r", "                where += \" and \";\r", "            } else {\r", "                where += \" where \";\r", "            }\r", "            entry = entries.next();\r", "            where += entry.getKey() + \" = \\'\" + entry.getValue() + \"\\'\";\r", "        }\r", "\r", "反正连 PHP 程序员都知道要 escape 一下....", "感觉太繁杂， \r", "管理服务的话昨天看到个 kong 有点意思 lua + Nginx 的\r", "🐒 The API Gateway & Microservice Management Layer, built on NGINX ", "这都算大新闻了? 一个 RPC? 玩烂的东西?", "  为啥 \"否则用 MySQL 存 Log 几乎是最差实践之一....\" 小白问问", "r #16 @", " 维持一个结构没有意义， log 就该存文本，大把成熟的 log 后处理工具链都是围绕文本格式的 log 打造的。", "和 tornado 比怎么样？是一样的东西吗？叼大的说哈", "log 文本解析比较方便。", " =。= PHP 躺枪。。。", "扫了一眼，不支持 Python~", "还是比较朴实的.\r", "围观地址: ", "\r", "\r", "但是人家既然开源了,  大家能帮忙的就帮帮忙呗.\r", "\r", " ", " 一个是楼上说的实用性的问题,文本就该用文本好好存,非结构化数据改成结构化数据没啥意义,搜索起来也不方便...\r", "另外一个是扩展性的问题,MySQL 抗不住大批量的写入,对于日志类型这种写多读少的场景有其他更合适的方案,至少要可以做到横向扩容,不能做单点....总不能因为一个日志收集工具在这 MySQL 上架一个分表分库工具....\r", "更何况这代码也根本没做这些工作...充其量就是一个玩具而已....", "#23 地址错了，应该是这个 ", "感兴趣的不少啊，源码都分析上了", " 用 ORM 的我表示硬刚", "安装包下载速度基本上 10MB/s~  除了迅雷下片，还真的没见过这么快的下载速度", "充值之后会更快更强么？", "读了一下 java 那块还是比较轻的，但是写的确实不太好", "怎么没做成 docker 镜像", " 其实是这个 ", "感觉太重了，无所不包的后果可能是无所不弱。", " 感受到了  诚意", "//我知道把后台 java 代码写在 jsp 页面里好恶心噻，但这里页面呈现和逻辑不是很好分离(其实是我 js 不熟悉不知道怎么处理复杂的 json 数据)，先忍受一下", " 确实朴实 , 一枚耿直 boy", "不喜欢", "我觉得应该用 go 重写下。。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近大家都在讨论这个，我就问问猝死前的症状是什么？是什么原因导致猝死的（懂点医的来扯扯）？</p>\n</div></div>"], "reply": "135", "tittle": "作为一名程序员，如何防止猝死？", "comment": ["预防?  自己的身体状况自己知道 时刻让自己保持在觉知状态~~  Over~\r", "觉知?  推荐一个关键字  正念  Mindfulness\r", "Good Luck~", "想起一件事：一天我在一朋友家，看他玩游戏。这时一个窗口弹了出来，“你想允许来自未知发布者的以下程序对计算机进行更改么？”，他轻车熟路点了“是”，甚至没有看一眼那是什么程序。\r", "\r", "或许有些时候，因为缺乏对某些知识的了解，也在对我们的身体在做同样的事：做了一件事，却完全不知道那样会造成损害。比如雾霾天不带口罩、比如长期久坐如此等等。", "首先要学会抗拒鸡血与鸡汤，远离那些拿着大饼压榨你的人。其次要了解自己的能力，量力而行。最后一定要健康生活多锻炼身体。公司有很多个你，还可以去市场上买到更多的你，但家人只有一个你。", "放心，你还差的远~有空逛论坛的人，真的猝死不了", " 逛完论坛赶紧物色好用的心率手表去了", "找个妹子关心自己？", "每周五下班去登山，你要是在深圳可以捎上你~~~", "平常锻炼身体，准时下班，从来不加班。\r", "每天下午下班都是走 40 分钟回家。", "辞职卖水果，从码农到果农", " 谢谢分享，看层主的帖子感觉心在噗噗噗的跳。", "1. 每天健身锻炼（在帝都建议在自己家里有净化器情况下锻炼）\r", "2. 站立办公（累了就坐，坐一会儿就站）\r", "3. 找个女朋友！（可以看我另一个帖子，给程序员找女友哟）\r", "\r", "目前 1 ， 2 我都实现了！就是 3 还在摸索中！", "有过两次濒死的经历，有一次连续熬夜一个星期，早上起来小编，突然就不行了，站不稳，呼吸困难，全身冷汗，躺床上半天才缓过来\r", "\r", "第二次是去香格里拉，前一天熬夜，然后喝啤酒到深夜，睡下去两个小时就不行了，同样无法呼吸，全身冷汗，心脏乱跳，连滚带爬去接了一杯自来水喝下去，缓过来了", "人之命，天注定。什么事情都看开点，不要把死亡看的这么可怕，人肯定是要死的。", " 和你一毛一样的症状，手机十二点就不玩了，但是硬是到两三点才能睡", "健康生活，别加班。", "拒绝加班", " 我去 第一次你起身是不是太快了啊 现在我醒来到起来至少半小时缓冲", " 我很长时间这样了，感觉身体已经适应一天 5 小时睡眠，能支撑基本的工作，但是又不瞌睡又不太精神，恶性循环。", "为啥要防止？   程序员就不能自在上班", "每日至少吃 150mg 的 Q10 ，京东上就有， Blackmore 和 Swisse 都行", " 我准备买个催眠神器", "可以选择自杀 /安乐死，出生我们无法掌控，何时终结自己还有有机会自己掌控。\r", "\r", "死人不可能再死一次，猝死更不可能。", " 可能是起的急，但是身体太弱了", " 啥神器？😂最佳解决方案不是找个女朋友么？", "修仙之路第一步：练体", "看到这贴背后一凉", "没有什么事不是第二天不能干的 所以别熬夜", "早起早睡觉，都锻炼身体，身体是革命本钱。", "猝死不是意外，保险不保", "少加班", "推荐一款可以检测心率的 APP ： Cardiio", " 前段时间有时候走路也能感觉到心脏突跳剧烈跳动一下，好可怕", " 可以说 Fitbit 救了我一命\r", " 我是抱着讲故事的心态描述我的经历，希望看官们别当故事，重视起来，至少越来越多人可以抛掉程序员搞 IT 的宅男们都是林黛玉的帽子。\r", " 这是明显的早搏了吧，可以关注一下。偶尔的早搏是正常的。但是如果频繁的一走动就早搏就得注意了，去医院挂个号，如果有问题的话会给你一个 24 小时心律监控设备挂着，看一下 24 小时早搏的次数和形态。\r", "\r", "\r", "大家也别太紧张了，不要一有风吹草动就自己吓自己。有病治病，无病健身。", "女装", " 多么清新脱俗的答案"]},
{"content": ["<div class=\"topic_content\">打完字心里在哭脸上在笑。有啥门路共享一下吗？🌚</div>"], "reply": "77", "tittle": "作为普通程序员，中级工程师。如何利用业余时间赚钱，弥补炒股亏掉的七八万。", "comment": ["风险和利润成正比。", "方法就是远离炒股", "买房", "认了，然后从此远离 A 股", "一心想着回本是赌狗的行为，楼主把最好把这件事当成一场病，之前只是花钱把病治好了，现在健康了就应该去好好享受下生活，业务时间多做些运动多看些书，打打游戏也行，暂时不要想钱的事。", "这东西跟赌博一样，愿赌服输。只能默默的忍了。\r", "做兼职你和市场上一批又一批的充满理想和精力的小清新比的优势又是啥？", "原谅我笑了", "忘记这件事情吧，几万块而已，放在一辈子来看，根本不算个事，别想不开上了贼船。", "你咋不寫個算法規避風險?", "知道门路的人，会在这里说吗？\r", "早就去闷声发大财了", "就当丢了", "有什么途径可以很好赚上好几万？我也想知道啊。\r", "\r", "能理解急于回本的心态，可是这样的心态并不是什么好事。要不然忘记这几万，就当买了个教训，以后好好工作。要不然比起怎么快速回本，我想楼主应该先考虑一下为什么会亏这么多钱。", "前段时间买基金放了 2 个月还赔了 2 块钱 2333 。。。", "11 月份三个周末做了三个外包，总价 4.5 万", "对自己说交学费了，花了几万块认清了中国股市这个骗局，不亏。", " 居然收回款了，厉害", "没路子啊。。。我也亏了 8w 左右", "补充炒股姿势，不要想着赚大钱，跑赢招财宝就行", "好方法就是：学习趋势量化交易。。。哈哈哈哈，不说了，去学 Python 了。", "到 2019 年元旦再来看看账户。", "如果没时间研究的话，买宽基指数的 ETF 吧，除非瞎折腾，风险比个股低很多。", "  这条路太长了。。。", " 全栈求带", "还量化交易，别把自己量化进去了", "时时彩", "年底就不要重仓了，特别是两周后，美联储加息加 A 股年内最大规模限售股解禁。", "哈哈哈", "十多个水果，就这样没了。。。。", "再来一次炒黄金", "开课，当讲师，一个学员收一万，杠杠的。你只要做好备课就好了", "多谢大家关心。说炒什么炒什么的不要调戏啦！！我容易吗我", " 讲什么？讲 java ？还是讲我是怎么摔坑的?/", "好好上班工作, 7,8 萬很快就賺回來, 又不是 7,8 百萬,,,,.", " 对的，就要经历人生的第一波绝地重生了。扛着贷款爬。。。。", " 从 0 到你现在， 7 ， 8 万真不多，开一个班就回来了，关键是你要能拉下面子，去发广告。你讲如何填坑肯定好啊，但是这样对于学员来说应该用处不大，带他们入门，如何实打实地能找到一份写 Java 的工作就可以了。", "你还没经历过大的", " 人确实是要面子，不过这一点并不伤面子，我觉得。反而如果有你说的机会，尝试去做是很有意思的经历，也会对自己的未来有好处。", "所以，这就叫着学费交了，却不去上课学习？", "兄弟诶，这就是成长的代价， eat it.", "价值投资", "额 怎么摔倒的就怎么爬起来", "不过不要背负亏损的心态，从 0 开始，长期来看财产性收入应该放在主导地位", "澳门", "今年 6 月开始定投基金，现在已经涨了快 10%了。", "亏了六七万，就靠着摸新股，正在努力的回本路上", "帮大学生写毕设和课后作业", "哈哈，去年亏了七八万的来握个手。\r", "我觉得还是学到不少东西的，市场教会了你什么是风险，什么是贪婪，什么是不动脑子跟风。\r", "如果总要亏钱，早亏不如晚亏。\r", "要相信自己，相信过几年这些钱对你来说就不算多了。", "说反了，晚亏不如早亏", "炒汇可比这个刺激多了😂", "哈哈哈哈哈，当交学费好了。", "怎么大多数的重点在股票上呢？\r", "就没正题", "坦率的讲 高送转可比算法数据结构简单多了", "联合几个朋友 接点项目 做做", "长的帅不\r", "长的帅，可以去 ktv ，酒吧，女卫生间，刷你的手机号码\r", "-_-!", "应该看百分比不是绝对值，中个新股就回来了", "我股灾也亏了不少。。\r", "后来靠玩妖股和强撸大题材的龙头股回本还翻倍有余。。", "好好工作，增值自己，年薪升个七八万不成问题", "远离股市，多上知名同志交友网站，涨薪水", " 第二点不懂，解释下", "我的基金亏了十几块钱就好心痛。。本来只是试试水放个一千块，结果越来越不想买了", "割了肉，就不想捞回来？你不是一个合格的股民。。。", " github", "写炒股软件,卖钱", "白天上班，晚上期货咯，一波翻盘", "股灾之前开始定投沪深 300 ，到现在收益率大概 15%。", "进场慢慢来，离场跑得快。\r", "股市有风险，不如还房贷。", "继续入市，然后赚回来，今年楼市火爆，然后限购，资金又回到股市了，现在进来正当时", "老哥，再砸个 7 、 8 万，翻倍回本上岸还不是美滋滋？", "戒赌", "愿赌服输", "业余时间可以炒炒期货，外汇。把在股市亏的钱赚回来", "远离炒股,或者跟我来试试.", "1.远离一切赌博和类似赌博。\r", "2.认真工作。\r", "3.有精力的话，可以接一些私活来做(前提是不影响工作)。", "回复后，再看看自己头像，好郁闷啊\r", "怎么像只青蛙。。。", "最全的致富指南是《刑法》，当然你要去看毛选我也没办法。", "买黄金，股票就是合法赌场", "我这里有本股市秘籍，只要 100RMB ！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>常看到一些站点提现可以无人快速处理...说是通过代发服务，那么，现在哪些服务商提供这种服务呢？</p>\n<p>是需要直接和银行联系...还是银联开放平台本就有这种接口...</p>\n<p>又或者是自己分析每个渠道的转账接口？...</p>\n</div></div>"], "reply": "5", "tittle": "常看到一些站点提现可以无人快速处理...说是通过代发服务，那么，现在哪些服务商提供这种服务呢？", "comment": ["Ping++ 似乎有个", "微信有企业付款，支付宝不清楚有没", "一看到“代发”我就想到工资代发，这是公司账户的功能？？", "支付宝有批量转账接口， 但是貌似要月流水达到多少才给。", "出名的：\r", "微信企业批量付款到用户零钱；\r", "企业支付宝批量付款到用户支付宝余额；\r", "任何一家银行都可以接入的银企直联，网银互联等产品。可以使用大小额，或者超级网银接口转账到银行卡；\r", "财付通可以批量付款到用户银行卡；\r", "其他：\r", "相当多的第三方支付公司，都可以做到批量付款到银行卡；"]},
{"content": ["<div class=\"topic_content\">不计算午睡 /计算午睡 \r<br>我是 6h/6.5h</div>"], "reply": "82", "tittle": "想了解一下大家平均每天睡眠几小时?", "comment": ["6.0h/7.0h", "你说的是睡着的时间？", "8h+/8.5h+", "8.0h/8.0h", "6.5h/7h", "6.5   9", "8/8", "10h+/11h+", "7.0h", "8.5/9 但是感觉根本不够睡", "5.5/6", "< 5h", "6-7h", "8/8", "9h\r", "充足的睡眠会提高工作效率", "7", "7.5/8", "5/6", "7", "6-7h\r", "不够睡，很累", "7.5 / 8", "其实睡眠不足。。 ", "   ", "   ", " ", "没午睡习惯，每天 0:00-6:00.", "7 小时", "失业,12/12", "6~7/6.2~7.2", "10~12 自由职业每天睡到自然醒", " 拉仇恨呢你", "大学党  7/8", " \r", "咦这个怎么使用\r", "我进去看到睡眠都是 0\r", "只有步数", " 得买个手环或者 Apple watch 当作输入源～", "我可能比较奇葩 4~12 不午睡,偶尔吃完晚饭睡会", "晚上 6 ，午休 0.5", "晚 7 个半小时，午休 0.5 小时", " 或者 iOS10 的时钟 app 有就寝功能", "7H.没午休", "4.5h ……", "凌晨 3 点下午 1 点， 10H ……不午休", "8 hours each day.", "一般是 7/8,但有的时候午睡一觉醒来天黑了", "晚 7 个半小时，午休 0.5 小时", "8 小时睡眠， 半个小时午休。", "7.37 小时 ~ 8.68 小时之间，睡眠 App 统计结果", "最近一周 7 个半小时左右。", "10h/11h  我这人懒", "只要不上班，我能睡 15 小时", "平均 7 ～ 9", "无业 睡到自然醒", "我记得世界卫生组织的数据，每天 8 个小时是最健康，，睡超过 9 个小时，死亡率的数据其实是上升的，太多太少都不好！ 啥时间能省，睡眠时间都不能省！因为直接影响效率，省下来并不会提高效率。", "不算午睡 5.5\r", "算上午睡就 6", "累了就睡，睡到自然醒。", "5/6.5", "8/8", "累了就睡，醒了就干活，或者生活，哈哈~", "5.5/6\r", "总想 8 小时睡，但是总是睡不了， 22 点躺上床，能闭着眼翻来覆去磨到 1 点才有困意，怎么办？", "6-7 小时，感觉皮肤好差，想换个作息，以后 11 点就睡", "8/8", "我感觉睡多了", "8h", "怎么没人说小明的爷爷活了 90 岁", "7.5/8 。。最近比较累，昨天睡了 8.5", "小米手环监测，每天至少 9 个小时，深度睡眠大概在 3-4 小时之间，我这么说，会被认为是猪吗？", "7 - 12", "8 到 10 小时", "(6~7h - 1s) /d", "6/6.5", "8h 以下。", "4~6", "睡太多也不好", "8h", "10/12", "8-9 睡眠很重要", " 早睡的前提在于早起，早起的前提在于早睡，这是个循环，早睡不了，那就早起，忙活一天到了时间自然就累了困了睡了。", "八个多…", " 看看我的睡眠时间，我每天 6 点多就醒啊", "感觉统计还得加个年龄才好。\r", "7", "0:00-8:00", "1:00-7:30", "5-8", "7/7.5\r", "1:00-8:00", " 跟你一比我太苦逼了 昵称-2  时间 /2", "8/8.75\r", "00:30-8:30\r", "13:10-13:55", "6/6"]},
{"content": ["<div class=\"topic_content\">project build in progress ~~~~~~~~~~  -_- \r<br>    \r<br>                                  一个普通程序员的下午</div>"], "reply": "10", "tittle": "人生最悠闲的时光莫过于...", "comment": ["+1...\r", "\r", "Gradle Build Running   \r", "\r", "刷一下朋友圈", "还有, 一般都不会是第 1 次 build~~~", "python 没得 build 。。Ｏ(≧口≦)Ｏ", "> sudo yum update  ↵", " 有个邪恶的包叫 yum-cron", "楼主们难道不知道有 `mirror` ?", " pip install -r requirements.txt", "请几个人给自已编程。编到一半让他们重构。", "........build fail", " 尼玛我服，这么会玩………"]},
{"content": ["<div class=\"topic_content\"><img src=\"http://ww2.sinaimg.cn/large/0060lm7Tgw1faenm2v93fj31401401kx.jpg\" class=\"embedded_image\" border=\"0\"> \r<br>\r<br><img src=\"http://ww2.sinaimg.cn/large/0060lm7Tgw1faennvws97j31kw23ub2a.jpg\" class=\"embedded_image\" border=\"0\"> \r<br>\r<br>\r<br>你们呢？</div>"], "reply": "74", "tittle": "我的周末就喜欢~骑摩托上山，你们呢？", "comment": ["广州禁摩了···", "玩游戏", "IT 这圈子里玩单车可能比玩摩托车的多一些，毕竟禁摩的城市不少。", "没你叼，我一般就骑单车下海", " 我是 驾照是 C1+D  摩托有牌子  合法骑行  中国哪个山里都不禁摩吧~", "卤煮真的是程序猿？", " 我说了城市城市城市，从来没有提到山里山里山里。", " 哦哦。。。", " 真的是。。", "上海一张黄 A 牌照要 28 万，下不去这个手...", "这是哪里，什么摩托车，喜欢", " 上海的确实是贵~ 可以弄浙江的", " 阿普里亚  秦岭", "看楼主装逼!", "喜欢的摩托都太贵，还是玩公路车..", "我比较喜欢豁车……有一辆山猫，做不到每周末出去野，但每个月至少会拉着小伙伴的 BJ40 一起出去野一野%", "是比暴力摩托极品飞车好玩", "哎，这羡慕这天气", "每周有空都上白云山，用脚", "高转车进山有没有觉得不舒服？", "踩平衡车上山", "摔过一次，后来消停了。", "开过同学的 duke400 ，最快也就 40 码，怕死...我同学还嫌太弱，卖了换了辆奥古斯特", "怕死....\r", "\r", "摩托感觉太暴力", "周末不带娃，不溜妹子么？", "楼主  这是哪个地方", "今天跑磨合跑了一天，吹感冒了。。。。", "海口禁摩", "喜欢骑摩托，无奈我们这里禁摩，只能打打游戏溜溜弯了；", "徒步上山", " 懂行啊兄弟， 高转车上山没不舒服，就是别堵车就行。 我一般都是 7000 转左右跑 激情了拉到 1 万转", "在这种路上骑车有什么牛 B 的，有能耐你骑摩托爬真正的山路，就那种原始的泥土和石块做路基的，蹦几下估计你就得晕头转向。。。", "天气不错哦，完全没雾霾啊", " 冬天最好穿雨衣骑 防风很有用 你可以试试", " 。。。。并不喜欢玩越野啊~~", "吸屁股 ", " ", "这种天气冷不冷骑车", " 哦？那哈雷越野好不好啊？", "上山倒也经常，不过都是腿着", "机车真心很吸睛啊，好想把我的小电驴换成酱紫的", "你们这生活太精彩了", "我有同款不同色的阿普利亚·咖啡", "上海周边没山。。。", "不会这个。比较喜欢自行车", "在重庆的表示天天上班骑车都是在跑山...", "程序员工作压力太大夜间飞车抢夺解压", " 你好车友~", " 话说你改缸不", "不错不错，我一般放假就去附近的海边玩。", "我周末就喜欢开车下水~", "我周末就喜欢打 lol", " 感觉有点贵，寻思攒钱以后换大排了", "半山腰抛锚怎么办？", "感觉骑摩托特帅", "深圳禁摩，倒想弄辆摩托通勤，可惜电瓶车都被禁了", "买个摩托赛车的 APP 钱我都没有呢", " 很简单 推发，就是推着强行启动，实在不行就叫辆车拉走呗", "有没有自己的 YouTube channel ?", " 倒着溜下山呗 233", "机车党路过，座驾 KPR\r", "平时也喜欢上个山压个弯什么的。 \r", "还喜欢 500 公里左右的短途摩旅\r", "咖啡这车骑着怎么样？    最近考虑 GSX 250R", "周末去黑怕", "今天休闲骑\r", "今天不爬坡\r", "拐个弯就到\r", "全是柏油路\r", "( ´_ゝ`)", "开车 上山 拍星星", "如果摩托车下山没油了 咋办？不要打我~~", " 遛狗算不，哈哈哈哈哈哈", "我周末喜欢开车上山……", " 木有。回来买个 摄像机开个~", " 从车友的摩托里抽点~", " GSX 250R 我也想换~  咖啡不错 就是不能带人毕竟排量小  要想骑着舒服 转速要在 7000 转网上", "周末喜欢骑车上山..", "身在雾霾中出门都感觉在寂静岭。。还是在家呆着打游戏吧...", "壮士我就问一句，你敢不敢晚上去帝都的东单公园上一转~", "通常的户外活动骑车为主 带车去看风景吹吹风 感觉不够帅哈哈哈 没摩托车拉风 最近是想考个摩托车驾驶证", "骑车玩 Ingress ，如果空气好的话..."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>centos 7</p>\n<p>1-2G 内存 clone 直接导致内存溢出， remote out of memery</p>\n<p>4G 内存， 4G SWAP git pull 也都跑满了。。。</p>\n<p>git-merge 内存占用最多</p>\n<p>clone &amp; pull 后 内存也一直满着不释放。。。</p>\n<p>大家遇到这种情况都是怎么解决的呢？</p>\n</div></div>"], "reply": "12", "tittle": "git clone & pull 大数据量代码时 服务器内存爆满", "comment": ["gitlab 服务器？换成 gogs 吧…我用着挺好用的", "Git 只跟踪源码就好，大文件用 git lfs", "换硬件", "好几 G 的代码……里面都是什么", "问一下 你们数据量有多大, 之前用 git 还没碰到过性能极限...", "目测 linux 源码", " \r", " \r", " \r", "\r", "\r", "我们有个小需求，就是类似 clone 一个像 cdnjs 这种级别的，并且定时 pull", " gitlab 企业版有 mirror 的功能，应该能满足你们这个需求", "遇到这种情况大概就是加内存吧", "第一得看是什么 git 搭建的服务，第二是看什么 git 协议的访问，比如有些 git http 服务器的实现就会致使进程内存占用过高，以 git clone （ fetch merge ） 本质上是 git fetch-pack 和 git upload-pack 在交换标准输出，这个过程是动态的，如果合理的话，内存占用并不会很高，当时有一些服务器，比如 HTTP 服务器，直接将标准输出写入到 http 响应包体，又不用 chunked 编码，这样的后果就是，一个大仓库， 2G ， HTTP 的包体就需要 >2G ， （ git 的 http 客户端基本上使用 curl ， winhttp （ libgit2 ）这样的实现，客户端内存一般不会爆掉。），老版本的 gitlab 使用的 grack 就是这样的。", " 所以。。怎么办呢", " 你把你搭建的 git 服务器信息贴出来，还有访问方式。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>前段时间再 v2 上发了一个博客的帖子，没想到那么多人来回复.昨天下午闲着没事自己搭建了一个博客.但是自定义域名之后发现 github pages 上自定义域名都是重定向 https.但是我的证书一直提示错误，想问以下有经验的同学是怎么解决这个问题的？博客地址是:<a href=\"http://Salomax.com\" rel=\"nofollow\">Salomax.com</a>,https://Salomax.com.好像都是证书错误。</p>\n</div></div>"], "reply": "7", "tittle": "关于 Github pages 自定义域名证书报错", "comment": ["github pages 不支持自定义 ssl 证书", "GitHub Pages 的自定义域名不支持 HTTPS\r", "\r", "考虑换 Coding 或者是 GitLab 吧", "访问了一下没有强制 HTTPS, 而且我没记错的话， GitHub Pages 开了自定义域名就不给用 HTTPS 了吧。", " 但是好像强制使用了 Https 访问了。资源全都是 https 加载的。", " 如果是资源的话，你是不是引用路径用的绝对引用了？", " 直到问题所在了。原来我在配置网站中设置的 Url 是带有 https 的，导致加载所有资源文件都带了 https,感谢你。", "你可以套个 CloudFlare ，不过 CloudFlare 在大陆你懂的"]},
{"content": ["<div class=\"topic_content\">最近跟一些同时聊天，想到了这个问题。\r<br>\r<br>刚开始进入公司的时候，特别喜欢做技术，也愿意钻研技术，但慢慢发现需要在项目管理上具有一定知识；再做到后面发现需要对业务有更深入的理解，包括整个行业也需要一些理解。</div>"], "reply": "20", "tittle": "大家觉得程序员在成长过程中应该具有哪些素质", "comment": ["第一个 学习能力", "表达能力，口头和书面都有。每当看到语无伦次的博客文章的时候都觉得大学语文就该成为必修科目。", "学习能力+学习动力", "厚黑学", "谦虚吧，别一发现点啥就张牙舞爪的", "肯学\r", "肯承认自己某些方面不足，也愿意花时间去提高", "惜时", "妹子", "会搜索", "想开点", "会说脏话 ", "以前写的一篇博客，正好是说这个问题的。 ", "用搜索引擎解决问题的能力", "学会管理时间\r", "身体素质，健康", "学习特朗普，无耻的自我推销，让自己成为在老板眼中最牛的程序员，而不是真正技术牛的程序员。", "软技能 Soft Skill 这书可看看", "英语好是必须的", "好奇心和探索精神", "不会写错别字。。", "谦虚，好学，感恩\r", "最基本的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>1.强迫症这点事大家怎么看？</p>\n<p>2.是不是只有处女座才有强迫症呢？</p>\n<p>3.<a href=\"https://baqiye.com/a/59\" rel=\"nofollow\">工作中我们是否需要有强迫症的人？</a></p>\n</div></div>"], "reply": "10", "tittle": "程序员是否都有一种强迫症的感觉？", "comment": ["所有的事情都有个“度”的区分。", "同意楼上。\r", "再一个我觉得所谓的“强迫症”，任何工作想要干好都要有这种“强迫症”的特质。遇到问题前前后后想的是否清楚，是否仔细，是否万无一失。\r", "最后，强迫症跟星座无关。", "有的,一开始和我老婆很难沟通,总是觉得她说的话有漏洞,没说清楚.而她觉得我爱钻牛角尖.", " 是该有个度，很对。\r", " 这是认真的一种态度吗？原谅我读书少： D\r", " 你是当警察的吗。。。", "强迫症的门槛真是越来越低了，有时候连 12 点准时去吃午饭都被说成是强迫症。", "请分清“强迫症”和“矫情”\r", "真的有强迫症请去看医生", "强迫症？我看了看我狗窝似的桌面和床，去他吗的强迫症，就算有我也是邋遢强迫症。", " 这。。。。\r", " 突然想到了局，活人就是矫情，哈哈。。\r", " 明显的邋遢症。。", " +++++++++++++1 ，我跟你一样。。。", "  +1 ， 而后你后来怎么处理这些关系的？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>表示昨天找了很多文章，都说了些怎么用异步，却没有提到异步的精髓，比如<code>future</code>,<code>@tornado.web.asynchronous</code>和<code>@gen.coroutine</code>装饰器，搞得现在都不知道从哪儿开始看了，看过这部分源码的提个建议呗。</p>\n</div></div>"], "reply": "20", "tittle": "如何学习 Tornado 异步非阻塞？", "comment": ["从第一个版本开始看，还是挺好懂的。 ", "\r", "顺便安利下我用为了看这个的写的个小工具 ", "这个已经过时了，现在都用 asyncio 。", "手动写一个 event loop 来实现同样的效果", " asyncio 提供的是一个 api 和一个默认的 event loop", "先了解 python 的协程， yield 关键字\r", "再看 @", ".coroutine 的源码就好理解了", " 官方文档一篇篇看？？", " thx,现在就在看 @", ".coroutine 了，主要是不知道应该从哪儿看起，网上文档太乱了。", "future 这个最好看别的语言的, C#的 task, java 的 Future\r", ".web.asynchronous 记得开始的时候这个就是简单个标志, 让函数结束的时候不关闭 socket, 可以继续传输数据\r", ".coroutine 这个看 ", " ", " 这 2 个", " 英文能力太差。", "阅读下  tornado 2.* 版本的异步实现的源码", "Future 简单来说就是一个一个的状态，一连串的 Future 就构成了整个的调用链，类比于函数调用链，区别只是函数是用栈来保存转态的， event loop 监听 io 变更转化为事件通过 yield 的关键字产生的入口变更 Future 状态的变更，转而又引发一连串 Future 状态变更， Future 状态的变更又会产生 io 操作，整个循环就完成了。", "ioloop, iostream, gen 看完这 3 个模块源码， 估计用 tornado 不会遇到 hold 不住的问题了", " 真的假的", " 感觉水好深，", "看官方文档和 examples ，同时看最新的。\r", "这个也是改过几次了，看网上文章基本不靠谱的，各种时间段都有，还来回转载。", "推荐看一下 POSIX 标准 IO", " 如果只是怎么用异步，这个问题倒是不大，主要是他怎么实现异步的，这个就需要特别深入了", "\r", "\r", "不知道这个对你有些帮助么", "这块比较简单的我记得是 redis 的网络模块(我当年看的老版本, 新版本应该变化不大).... c 语言的, 有个好处是比较接近底层", "500 Lines 里面有一个 IO 异步爬虫的实现，把那个读一下可以了解一些基本的东西"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>想法：\n最近想做一个类似于 Cammer360 SDK 这样的轮子但是是针对视频的，可以通过轮子来做到各种 mv 特效之类。</p>\n<p>遇到问题：\n通过 OPENGL 去渲染视频的时候。 GPUImage 会分 3 条线程来读取视频最后变成 OPENGL 里面的 texture 最终合成视频。但问题 3 个线程同时读取视频势必会造成是视频不同步（比如：视频 1 比 视频 2 读取的要快），导致合成后的视频， alpha 通道和 RGB 通道不一致，会变成半透明的效果。</p>\n<p>详细的文字图片说明请看：[这里][<a href=\"http://stackoverflow.com/questions/36290137/gpuimage-render-video-as-texture-but-not-the-same-time\" rel=\"nofollow\">http://stackoverflow.com/questions/36290137/gpuimage-render-video-as-texture-but-not-the-same-time</a>]</p>\n<p>请问相关的 v 友遇到过和解决过吗?</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "GPUImage 渲染视频时间不同步问题", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>ios 全部换成 https 协议包括 api 和 webview 加载的文章页--webview 加载 https 的页面--页面中的视频也必须是 https 的---但是加载 https 的腾讯视频还是无法加载</p>\n<p>有遇到类似问的吗？</p>\n</div></div>"], "reply": "2", "tittle": "求助： ios 做 https 遇到的问题， webview 中的视频无法加载", "comment": ["网页里有 CSP ？ ", "\r", "\r", "关于网页的 ATS 学习下 @", " 猫神的文章\r", "plist 里 allowattload 设置 yes 了吗"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如果你想学习 scrapy 爬虫开发，或许它能帮到你</p>\n<p>大家好，我是 michael ，现在居住在水电之城宜昌，从事远程开发已经三年多了，主要用 python 进行爬虫开发，数据可视化工具开发。一直以来 python 社区并没有一份比较好的爬虫入门教程，免费的更少，所以我决定来试着解决这个痛点。</p>\n<p>这个项目包含</p>\n<ol>\n<li>\n<p>一份任务列表，这份任务列表包含了爬虫开发过程中的一些基本知识点，每一个任务都是一个小的测验，当你循序渐进的完成了这个任务列表中的任务时，你将有能力面对爬虫实际开发过程中一些更复杂的情况。这个任务列表的创意来自 <a href=\"https://en.wikipedia.org/wiki/Kata_(programming)\" rel=\"nofollow\">codekata</a></p>\n</li>\n<li>\n<p>一份爬虫开发过程中的注意事项和笔记，这些笔记能有效提高你的开发效率，还会介绍一些非常有用的工具</p>\n</li>\n</ol>\n<p>项目已经托管在 github, 关于这个项目更多的信息请戳 <a href=\"https://github.com/michael-yin/scrapy_guru/blob/master/readme.zh.rst\" rel=\"nofollow\">这里</a></p>\n</div></div>"], "reply": "19", "tittle": "如果你想学习 scrapy 爬虫开发，或许它能帮到你", "comment": ["谢谢，先看看", "支持一下楼主，公司电脑不能 pip ，安装起来简直要了我老命", "支持，先看看", "支持支持", "支持 我先看看 最近在学习", "支持", "支持", "有心，支持！", "赞", "有心，兹磁！", "先 mark", "前几天直接学 scrapy 爬了下 javlibrary...这个库很强大，对于错误处理以及存储都很方便，就是感觉文档有的东西不是很新呀，都得自己踩完了才能发现，比如 log 库，以及包引入(contribe)。", " 分词搞错了，当成 javlibrary 这个库很强大，去搜了一下[掩面而逃(*/ω╲*)]", "支持 lz ，感谢", " javlibrary 这个库很强大毫无破绽啊。😂", "已 fork ，感谢，感谢！🙏", " \r", " \r", "你们竟然在这里讨论这么神圣而不可侵犯的库", "楼主有心了，谢谢您的付出。", " 我还以为是 java...学习了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>大家好，今天使用 Tomcat 部署一个 Springboot 应用时出现了不支持中文问题，还请有经验的前辈帮忙</p>\n<p>问题描述：</p>\n<ol>\n<li>我的这个 Spring boot 程序使用 maven 打成 war 包放到了 Tomcat8 里面。</li>\n<li>应用中，前端使用 ajax 获取后端的一个数据，这个数据包括中文字符串。如果包含中文字符串则报错。\n报的错误不容易分析： <code>Caused by: java.sql.SQLSyntaxErrorException: ORA-00911: invalid character</code> ，但是我经过一步步推断，发现当后端发送数据包含中文字符串时就会报错。不出意外就是这个原因了。</li>\n<li>我使用嵌入在 Springboot 里面的 tomcat 调试程序是没有问题的。</li>\n<li>我使用嵌入在 springboot 里面的 tomcat ，将整个应用打成 jar 包，使用 java -jar 运行也是没有问题的。</li>\n</ol>\n<p>请教各位前辈，如果有遇到过这个问题的，还请指点迷津，感谢。</p>\n</div></div>", "<div class=\"topic_content\">傻了，又看了一下，貌似不是 tomcat 的问题（我也不知道），我看着觉着是 oracle 或者 hibernate 的问题。在使用 spring boot data jpa 的一个 dao 函数访问 oracle 的时候出现的问题，`ORA-00911: invalid character`。就是这个问题导致的。\r<br>\r<br>但是奇怪的是，我使用内部 tomcat 独立启动就没有这个问题啊。。。。</div>"], "reply": "8", "tittle": "Tomcat 部署 Springboot 应用时，不支持中文问题。", "comment": ["会不会是 tomcat 配置文件中没有设置字符集为 UTF-8 ？", " 查了半天也没查到结果，哭，请问在 tomcat 配置文件里设置呢，还是在应用方设置呢？", "server.xml connector 里边吧 URIEncoding 设置成 utf8", " @", " 感谢回复，我已经分不清是 tomcat 的问题了，还是 hibernate oracle 的问题了，在问题补充里面我补充了描述，谢谢。", "tomcat8 默認的就是 utf-8 ，肯定不是 tomcat 的問題", "貌似 spring framework 里面有一个序列化的时候中文的问题，你用 spring boot 应该也用 springmvc 了吧", "是 get 请求的参数乱码吧，三楼说的对。", " @", " @", " 谢谢回复了，是 hibernate 的问题。"]},
{"content": ["<div class=\"topic_content\">花了点时间，完成了一篇文章翻译\r<br>\r<br>最近几年，我们开始给开发者划分两种不同的职业路径：前端和后端。但是我们总是忘记了第三种选择：全栈\r<br>\r<br>全栈开发已经被提出有一段时间了，它曾经被直接叫做“开发”。\r<br>\r<br>但是由于开发工作的复杂性持续增长，我们的 UI （用户界面）需要从其背后的逻辑中解耦出来。于是，现在，我们也就有了两个不同的领域，前端和后端。\r<br>\r<br>让我们探索全栈开发，看看当考虑到各方面与之关联的挑战时，沿着这样一条路径走下去，是不是行得通。\r<br>\r<br>我在一家名叫 Fortech 的公司担任全栈开发工程师，我工作的一大部分是来领导一支全栈开发工程师团队。\r<br>\r<br>在我们的团队里，如果需要的话，每个人都能够在前端和后端之间切换，我们团队的文化也基于此。\r<br>\r<br>但是什么是全栈呢？\r<br>\r<br>更多请戳：\r<br>\r<br>翻译 ：  <a target=\"_blank\" href=\"http://www.zcfy.cc/article/1878\" rel=\"nofollow\">http://www.zcfy.cc/article/1878</a>\r<br>原文： <a target=\"_blank\" href=\"https://medium.freecodecamp.com/full-stack-between-reality-and-wishful-thinking-43110005f2a2#.vmvlzet2z\" rel=\"nofollow\">https://medium.freecodecamp.com/full-stack-between-reality-and-wishful-thinking-43110005f2a2#.vmvlzet2z</a></div>", "<div class=\"topic_content\">话说我本意是想分享这篇刚刚翻译的文章，欢迎 v 友针对这篇文章中的观点提出意见或者翻译中的问题，结果怎么感觉大家都没看点进链接，直接回答 title 中的问题了呢。\r<br>不过话说回来，倒是也无所谓。。。。</div>"], "reply": "28", "tittle": "为什么你需要成为一个全栈开发工程师？", "comment": ["希望能翻译地更本土化一些", "为什么你需要成为一个全栈开发工程师？\r", "因为当你写后端时觉得前端是 sb,写前端时觉得后端是 sb.还不如自己写", " + 1\r", "\r", "再加一个，喷走 DBA ，然后自己兼职 DBA", "不是以 freelancer 为目标的，全栈还不如精通一端。", " +1\r", "\r", "再加一个，自己离职走后，接任的全栈看着代码觉得自己是 sb", "成为全栈工程师是的原因是和项目各个环节的人都可以解释清楚事情。", "总结一句话：都是被逼的...", "为老板省钱。。。。", "以前在公司的时候，努力让自己成为全栈，一方面是希望将来自己单干，另一方面觉着有时团队合作相互沟通，人员参差不齐，效率好低。\r", "\r", "在公司，也要看公司文化，有的公司就让你各司其职。记得之前公司有一个重要产品空白，因为人手一些原因一直没人去做。那时也是年轻气盛，自己用业余时间独自完成了。拿给领导看时，领导很是惊讶，然后称赞。但是在年终工作报告时给我的评语是“不要单打独斗，注意团队合作”。那年年终选先进工作个人，就凭这款产品，我完全够资格入选，但事与愿违。而且之后领导从没有当众提及过，这个产品是由我独自开发的。", " 对，人员参差不齐很影响效率。总是有种要把别人代码重写的冲动", "关于产品，关于运营，关于“全栈 pm ”（三）", " 还有运维， NND 我改一个东西，你跟我叽叽歪歪半天，这也不行，那也不行，各种权限限制。喷走你之后，老子改完就 push ，立竿见影，那成就感杠杠的～", "关于产品，关于运营，关于“全栈 pm ”（三）\r", "\r", "关于产品，关于运营，关于“全栈 pm ”（二）\r", "\r", "关于产品，关于运营，关于“全栈 pm ”(一）\r", "\r", "\r", "知乎刘锤写的全栈 PM 系列，和程序员同理", "“全栈工程师”的概念和前几年流传的“ T 型人才”、“金字塔技能模型”是一个道理，背景是当下 IT 行业存在跨界多、培训出身多、本科 IT 毕业生质量不甚理想等等现状。说到底就是知识面窄，学习能力弱，导致跨工种 /部门沟通起来费劲、低效、推诿甚至扯皮，这种“互相认为对方是 SB ”的情况相信大家都遇到过。\r", "\r", "Google 连 SRE 部门都有 50%的人员招聘按照标准软件开发工程师的要求来录取， Facebook 之类的公司招起人来更是只分 Product 和 infrastructure ，因为人家招的动不动就是博士和专家，有足够的知识储备和技能保证，差不多拉一个出来就是架构师。\r", "\r", "但招黑的是，到了国内这个名词成了某些人炒作的手段，成了包装自我的名词，掀起反软件工程的反智风潮，甚至还出现了只会 JS 的“全栈工程师”，这就很烦了。", "当初只有我一个人干。", "页面，后台开发中。。。。", "本以为招几个人来能分摊压力。事实表明有他们加入，会让我浪费更多时间。最后还是自己都干了比较省事。", "基本上所有後端工程师都是全栈, 但前端玩不過專業的前端工程师", " \r", "\r", "能让一群人干复杂工作的效率比一个人高的前提是需要一个好 leader 。一个人既然你能招进来，其实就说明它们的实力已经勉强能用了，只要不是纯粹捣乱，都可以产生正向的作用……", " \r", "\r", "只会 js 的全栈惹着你了嘛？/w\\ 不服 solo 啊", "全栈不是意味着所有工作都需要你来做，而是在项目确定接口方案预估整体压力等时候，你能更好的沟通，不至于扯了半天牛头不对马嘴的谁了说不明白谁。", "因为：老婆孩子丈母娘，过年送礼新衣裳", " 你开心就好。", " \r", "\r", "一群水笔居然觉得另外一群水笔会 JS ？按你们的门槛，我六年级的时候就会 JS 了", "需求自己提原型自己画自己设计自己切图自己排版自己写接口自己调用接口自己上线...\r", "全天候 84 小时", "算了，上点干货吧，不撕逼了。\r", "\r", "所谓全栈的出现是有多方面原因的，但最最最主要原因是产业的成熟。因为产业成熟了，大家有了标准的规范、高质量的轮子，以及铺天盖地的教程。就是在这样良好的土壤里，才能孕育出我们现在所谓的全栈。\r", "\r", "1. UI 框架的成熟\r", "\r", "如果没有以 Bootstrap 为代表的一系列 UI 框架，那么后端会被 css 无情地摁在地上摩擦致死。各位后端都想想自己手写 css 的时候都做出了些什么玩意儿……\r", "\r", "2. 各种 MVVM 框架的成熟\r", "\r", "说句不好听的，在学习各种 MVVM 这件事上，那些只会 JQ 、只有丰富踩坑经验的前端在面对后端的时候，同样是毫无还手之力的。一个熟悉 MVC 的后端可以轻松理解 MVVM 的设计逻辑，而一个只会 JQ 的前端还没搞明白为啥他不应该直接操作 DOM 。\r", "\r", "3. WEB 后端框架的成熟\r", "\r", "各种 《 10 分钟造一个博客》大家应该有所耳闻吧。现代的 WEB 框架，还真的有能力 10 分钟给你搭出一个博客来。这样的入门门槛，别说是有代码基础的前端啦，就是纯小白，入门也没有太大难度。\r", "\r", "4. 浏览器标准的统一\r", "\r", "上古混沌时期的的 WEB 前端，其实并不需要很好的编程能力，更多需要的是踩坑经验，解决各个浏览器不同的标准，不同的实现，甚至不同的 Bug 。所以上古混沌时期后段想摸前端，那真的会一次有一次地被摁在地上摩擦。\r", "\r", "最后，真的要感谢那些踩坑填坑造轮子写教程的前辈们，否则真的是一端就能被坑得焦头烂额了，哪有时间精力全栈？", " \r", "你那领导故意忽略你的功劳, 是因为他已经发现你某方面的能力已经超过他了... 这种中年小男人型的领导早点离他远些吧...", "牛逼年限长的叫全栈 刚出来的叫打杂的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我知道，作为技术人员，翻译似乎是伴随在许多人工作之外的一件事情。但是，在我翻译了过几篇文章后，我发现并非所有人都可以进行这项神圣的工作。不然，真的是误人子弟。 PS: <a href=\"https://github.com/aleen42/PersonalWiki/blob/master/translation/translation.md\" rel=\"nofollow\"><strong>翻译列表</strong></a>在此，部分文章未经校对。因此，望有志之士帮忙看看。</p>\n<p>首先有两点我觉得大家在翻译时应该铭记（读后感）：</p>\n<ul>\n<li>不要以为你英文好就可以参加翻译，因为翻译过程中你写的是<strong>中文</strong>。这就意味着，你的中文水平同样决定了你的翻译水平。</li>\n<li>不要以为原句直译过来就是忠实于作者。若你所翻译的东西难于理解，我相信，你才是最大的不“忠”。</li>\n</ul>\n<p>最后，细心品味李老师的两篇文章。文章虽短，但意味深长。</p>\n<ul>\n<li><a href=\"https://github.com/aleen42/PersonalWiki/blob/master/translation/misunderstand_1/misunderstand_1.md\" rel=\"nofollow\">[轉載] 翻譯的誤區(一) 不知道把名詞轉換為動詞</a></li>\n<li><a href=\"https://github.com/aleen42/PersonalWiki/blob/master/translation/misunderstand_2/misunderstand_2.md\" rel=\"nofollow\">[轉載] 翻譯的誤區(二) 認為“雅”是最高境界</a></li>\n</ul>\n</div></div>"], "reply": "29", "tittle": "要是你们都喜欢翻译科技文的话", "comment": ["楼主，你用了太多“当 .......的时候”。", "我生活中特别爱说“也就是说”被女朋友嘲笑很多次", " = =", " 红红火火恍恍惚惚何厚铧", "嗯，翻译是一种再创作。\r", "PS: 谁来查查楼主写下了几个病句~", "如果报酬能足够我过上好生活，并且国内版权保护好一些的话。我想我会献身到这个事业（虽然现在英语不太好，但是技术文章能看懂并自动转换成容易理解的东西）。\r", "爱学习，爱技术，爱中文；恨那些机翻文档出书的人，浪费了很多选择和放弃的时间。", " hhhhhhh ， 我语文经常是拖后腿的科目", " 好", "楼主这个帖子，我觉得，读起来有点难度。大概是，楼主翻译得太多了，影响了正常中文思维了。", "翻译要花很多时间，但是收益很低甚至没有收益，大多数翻译的质量不高很正常。要是收益可观，总体质量自然就能慢慢提上去。", " - -, 所以有点懊恼. 看多了英文, 中文的句式有点西式化", " 況且是來自廣東的我, 習慣了平時說粵語, 以致中文表達總有點問題.", "支持", "对大写英文字母和繁体字有点眼盲...", "感谢楼主，看了那两篇文章后收获很多", "感觉被打醒了", "\"我知道，作为技术人员，翻译似乎是伴随在许多人工作之外的一件事情。”\r", "--------------------\r", "句式混乱。“作为……”起的是修饰作用，其前或后要紧跟其修饰的主语。一种改法：\r", "\"我知道，作为一项技术活，翻译似乎是伴随在许多技术人员工作之外的一件事情。”\r", "\r", "“但是，在我翻译了过几篇文章后，我发现并非所有人都可以进行这项神圣的工作。不然，真的是误人子弟。”\r", "--------------------\r", "1.主语重复，建议把“在我翻译……”里的“我”去掉。变成：\r", "“但是，在翻译了过几篇文章后，我发现……”\r", "2.逻辑病句。“不然……”跟前句逻辑不严谨。\r", "\r", " “翻译列表在此，部分文章未经校对。因此，望有志之士帮忙看看。”\r", "--------------------\r", "并没见到别人应该帮你的理由，应该把“因此”去掉。另外标点断句也有问题，建议改成：\r", "“ 翻译列表在此。（部分文章未经校对，望有志之士帮忙看看。）”\r", "\r", "\r", "--------------------加长分割线-------------------------\r", "\r", "打开了 LZ 的翻译列表，点开第一篇文章，看到第一句话：\r", "“在我开源 react-place 项目到时候，我注意到那么一个问题。那就是，准备构件发布有些复杂。”\r", "原文：\r", "\"While I was open sourcing react-place I noticed that there is some complexity around preparing the component for releasing.\"\r", "虽然 LZ 允许第三方提交，但我相信这句话还是 LZ 自己翻译的，因为主语重复的语病重现，并且标点乱用（一句变两句，多了一句无用的话），有“话作料”（这么一个问题，那就是），还有直译之嫌。\r", "翻译建议：\r", "“在开源 react-place 项目到时候，我注意到，构建发布时的准备工作有点复杂。”", " 在开源 react-place 项目“的”时候", " 还是你眼尖，我都没注意到。不过这个真的属于校对问题了。", " 红红火火恍恍惚惚何厚铧", " 谢谢指导~", " 你是来砸场子的么 233", "总觉得 google 翻译做得再好一些，所有的翻译都会失业 - 一个曾经的汉化组人员", " 机器翻还是不如人翻的", " 深度学习下一些模型已经非常接近人了，只不过一些类比、俚语可能翻的不好，但基本已经能望文生义了，再过两三年，很可能就可以达到基础人类水准", "有时候看技术原文，需要同时理解英语和技术难点，有时候就丢到 Google 翻译里面，感觉翻译真的挺准的，能帮忙不少。", "非常同意作者的观点，分享一个我的总结： ", "\r", "\r", "翻译的三个误区：\r", "\r", "我词汇量不高，无法做翻译 —— 词汇量不是关键，有搜索引擎帮忙，高中水平足够\r", "我英文水平不好，影响翻译质量 —— 中文水平其实比英文水平更加重要\r", "好翻译必须是严格按原文对应翻译 —— 好翻译不等同于照逐字翻译", " 再一次证明 \"Software is eating the world\"", " 嗯，有些技术点技术人员理解起来要比较容易。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>Apizza 是国内领先的在线 API saas 管理平台，支持在线的 API 调试，接口管理，快速生成文档，项目管理，团队协作以及分享。</p>\n<p><a href=\"http://apizza.cc\" rel=\"nofollow\" title=\"apizza.cc\">Apizza</a> ( <a href=\"http://apizza.cc\" rel=\"nofollow\">http://apizza.cc</a>) 最近推出了 api 团队协作功能，可以添加项目成员，共同维护编辑 API 文档。\n<img alt=\"图片描述\" src=\"http://ohmxrg21i.bkt.clouddn.com/apizza_20161204171956.png\">\n主要用法\n1.创建项目-》进入控制台-》协作人员\n<img alt=\"图片描述\" src=\"http://ohmxrg21i.bkt.clouddn.com/apizza20161205105505.png\">\nps:添加的协作人员的邮箱，必须系统存在该邮箱</p>\n<p>2.添加 api\n<img alt=\"图片描述\" src=\"http://ohmxrg21i.bkt.clouddn.com/apizza20161205111325.png\">\nps: 1 ， 2 的顺序无所谓，任何时候添加协作人员都可以。</p>\n<p>3.添加字段描述和返回结果\n<img alt=\"图片描述\" src=\"http://ohmxrg21i.bkt.clouddn.com/apizza20161205112147.png\"></p>\n<p>4.现在协作人员登陆账号，看看效果\n<img alt=\"图片描述\" src=\"http://ohmxrg21i.bkt.clouddn.com/apizza20161205112509.png\">\nps ：协作人员登陆-》协作</p>\n<p>5.选择协作项目-》进入控制台\n点击 Team ，可以查看到该项目其他成员写的接口和文档\nMe 表示自己在该项目下的接口已经文档\n<img alt=\"图片描述\" src=\"http://ohmxrg21i.bkt.clouddn.com/apizza20161205112904.png\">\nps:在协作项目中，可以新建 api ，新建分类，查看其他人的接口，但是没有权限修改和删除其他人的接口和文档，只能修改和删除自己的接口和文档</p>\n<p>6.新建 Api ，写文档，保存\n<img alt=\"图片描述\" src=\"http://ohmxrg21i.bkt.clouddn.com/apizza20161205114549.png\">\nps:可以保存到已有目录，也可以保存到自己的目录</p>\n<p>7.只查看自己的文档\n<img alt=\"图片描述\" src=\"http://ohmxrg21i.bkt.clouddn.com/QQ%E5%9B%BE%E7%89%8720161205114714.png\"></p>\n<p>最后点击浏览模式，把链接发给其他人浏览就可以了</p>\n<p>官网地址： <a href=\"http://apizza.cc\" rel=\"nofollow\">http://apizza.cc</a></p>\n<p>最后提示一下，如果想要添加的接口模拟请求（点击发送有返回），请安装 Apizza 的插件，插件主要是解决跨域问题^_^</p>\n</div></div>"], "reply": "22", "tittle": "Apizza(API 开发者在线工具） 团队协作上线了，让团队开发和维护 API 文档更简单，多多指教", "comment": ["firefox 不能用,差评", "postman ？", "mark~", " 确实不支持 firefox 。不好意思\r", "  不是，体验参考的 postman ，我们对不爽的地方也做了优化，如果有更好的意见，可以给我们提出来哈", "bug: get 请求，重复点击“参数”，模拟位置显示的参数会被重复加载\r", "另外文档返回示例那里可以把请求结果自动填入，省得自己手动复制\r", "参数注释没有分层级", "有开源计划不", "换个 ui,不然真的要被告的.", "同意文档返回示例那里可以把请求结果自动填入，省得自己手动复制", " 暂无开源计划哈", "感觉这个界面，有些细节不是很协调。。。", "JSON 的 Pretty 好难看", "Ubuntu 16.10  +  Chrome Version 54.0.2840.71 (64-bit)", "感觉还不错。", "有打算做 mock server 么?", " Ui 我们还会在优化\r", " 有计划这块", "漂亮", "swagger 不错", "Safari 无法用", "强制注册, \r", "差评\r", "UI 不行, \r", "中评", " safari 还不支持哈，毕竟是工具，目前只支持 chrome 内核的浏览器哈", "我们在用，还不错，顶一个", "多谢支持^_^"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>题主毕业小半年了，算上实习做了差不多一年的 Python 开发了，年底想跳个槽。\n幸运又不幸的是找到了一个工作，但是是做嵌入式 C 开发的，薪水比我现在做 Python 高。\n但是我想写 Python ， C 语言不太熟悉，而且听说挺难？现在很迷茫。。。。求各位大神指导。</p>\n</div></div>"], "reply": "31", "tittle": "Python 和 C 该如何选择", "comment": ["不要纠结语言", "作为一个职业程序员，我认为 C 是必学的。 C 不算难，多用用就熟悉了。以后你或许会用到 C 给 Python 写扩展，所以现在用 C ，对以后用 Python 也是有帮助的。", "没写过就能招过去啊 233\r", "嵌入式工资普遍比互联网低", "语言不是问题 以后的发展方向比较重要", "从嵌入式 c 转到 python 的路过", "入职两年 python PHP JAVA SHELL 都写过现在在写 C 的路过\r", "不要在意语言这种细节", "建议不去，和 C 和 Python 无关，和语言发展无关，和薪资水平也无关。\r", "\r", "你投的是 A 方向，如果一个公司招你做 B 方向，这种情况就尽量不要去，原因很简单，举个例子:\r", "\r", "你开家大保健，就会发现不挑人的顾客一般不会特别大方，也不会经常光顾。", " 应届生，可塑性强（勉强脸）", "我一个同事做 c5 年，他说还算刚入门！吓得我只想学 python 。", " 好吧，可是这跨行业了\r", " 嵌入式不好吗（ T_T ）", " 经验之谈", "c 怎么会招到 python 的人来做，现在缺人缺这么厉害么 ， web 和 python 的关系都比 c 近多了。", " 说的很有道理\r", "\r", " 哈哈哈", " 我现在就在做 WEB ，问了问和我一起面试的，他之前是测试也被招了（。。）", " 厉害", "确认你的发展发向，什么语言倒无谓。\r", "\r", "到底想做服务端， web 前端， mobile 前端，嵌入式开发，这个更重要。", "感觉这家公司略坑啊。。。", "选语言等于选开发方向吧，\r", "选 C 就等于选嵌入式开发这个方向，\r", "\r", "讲道理嵌入式确实是个夕阳方向，只要是个正常人用屁股都能想到（这里仅针对软件这块来讲），\r", "\r", "硬件的计算性能一直在过剩，嵌入式开发已经很难被定义了，以前掌上设备算嵌入式，后来有了 Android 伴随硬件性能进一步提升，手持设备进一步被 Android 化了\r", "\r", "而且嵌入式开发的范围已经被模糊化了，（直接写硬件驱动相关的是另外一类人，基本上都是电子出身，跟软件 计科不是一回事）\r", "\r", "未来嘛，我觉得嵌入式会被淡化掉，因为通用计算平台是一个趋势，绝大部分硬件会被设计成像软件可以热拔插，只要符合接口规范，到那个时候也就不存在嵌入式一说了", "另外拿 C 跟 Python 来提问，真的显得有点不专业，\r", "学 C 的人肯定不会拿 C 去做 web 应用，\r", "同理也不会有人拿 Java 去做 redis ，编程前 10 的语言 大多都有其特定的应用场景，以及背后的社区生态环境", " 小伙子大保健经验很丰富哦。。", " ，楼上 q397064399 基本说到位了。 另外就是嵌入式 c 相比现在热门的软件开发的岗位薪水低啊，虽然说我现在也不高，但总比嵌入式 c 高", "美帝火星车的 c 语言程序不是就是 python 写好了直接转的么，所以，学 Python..", "哪里工资高去哪里呗", "我好奇楼主不会 C 是怎么面上嵌入式的？", "如果是实习的话 还是去了吧 这个时候是该摸爬滚打会 学完 c 对底层有了了解 转其他都很方便 。到时候再再转 python 不要太方便哦 第一家公司 我是无所谓他好不好 只要能学到更多的东西就行", "lz 来我们这儿聊聊可好？想写 python 写 python ，想写 c 写 c", " 嵌入式是夕阳方向？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？？", "找不会 C 的人做嵌入式？这家公司应该很坑吧", "我觉得看公司\r", "不会前端的朋友和不会 ios 的朋友都被招去做了实习\r", "前者是在 apple 做前端 后者是在 expedia 做 ios app\r", "现在正是工作 offer 入手了\r", "前者去做高频交易 后者去 Facebook\r", "我觉得这么年轻 喜欢什么就做什么吧 大不了浪费两年", " 不是说嵌入式是夕阳，而是说以后不会存在嵌入式这种概念，通用计算平台必然会覆盖以前那些特殊领域，到时候就无所谓嵌入式不嵌入式了，当年 Java 被设计出来可是 一次编写到处运行，那个时候 Sun 公司希望这门语言能够被嵌入微波炉之类的小型设备，结果在 Web 领域发扬光大", "C 就业面很窄，而且做不到牛人工资不高。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>很多人都吐槽说很多 PHP 框架中的 ORM 是非常影响效率的一个组件，那是否可以把 ORM 设计成像模版引擎一样有一个解析缓存；比如说一个控制器中调用 ORM 组件的代码在开发模式下执行之后，在框架的 temp 目录生成一个该控制器中把 ORM 操作编译成 SQL 语句的缓存代码，正式上线，关闭 debug 模式之后就只执行那个缓存代码，也就是代码里面只剩 sql 语句，没有那些 ORM 操作的代码了，这样岂不是就像模版引擎缓存一样解决了性能问题？</p>\n<p>我观察过像 Laravel ， YII 这样的知名框架居然都没有这样做啊，为什么呐？</p>\n</div></div>"], "reply": "13", "tittle": "关于 PHP 框架中的 ORM 组件的性能问题", "comment": ["马一个，同好奇", "说 ORM 影响效率，正常来说都不在转义 SQL 这里，更多的是反射啊，类型转换这些地方。说现在的 ORM 慢，何不先做一下 profile ？以及编写简单的单元测试测试一下。反正模拟一下简单的使用场景又不用一两个小时", "你可以看下 TP3", "yii 根本就没有 orm\r", "\r", "字符串生成过程根本就不是性能瓶颈\r", "\r", "过早优化是万恶之源", "噗 yii 有 orm ，刚刚脑抽了", "同楼上，字符串拼接不是性能瓶颈。\r", "ORM 调用数据库会进行参数化查询， SQL 语句和数据分开，这样数据库可以对查询语句进行缓存。\r", "对于 PHP 代码本身，可以用 HHVM 来提速。据说 PHP7 会更快些。", "别光听别人说，你是真遇到问题了？能不能具体点？\r", "真遇到某个业务流程耗费太多资源，再深入研究瓶颈在哪比较好。", "你们知道 symfony 里的 doctrine 吗？ 其复杂和高级程度超出你们的想象， 不过我也是初窥门道。\r", "它本身就已经开启了文件缓存，还有各类其他缓存系统适配器（比如 redis, Memcached 等），\r", "对了，还有神秘的二级缓存。\r", "它是真正需要查询数据库时才会去查询（这个很微妙）！\r", "\r", "—— Symfony 的世界超乎你的想象！", "Doctrine2 的源码我已经看懵了", "个人看法是框架自带的 ORM 主要用来操作单表单条记录，最好是主键明确的情况。这样对代码层面的操作和扩展都有好处。\r", "但是如果是多表联合操作，或者更甚是需要一个类似数据报表的功能， ORM 就不太适用了。不是说不能做，是在这种稍微复杂一点的情景下，框架自带的 SQL 生成逻辑远远无法达到原生写的 SQL 的性能，而且 ORM 实现这些也是需要一个极其复杂的过程。", "相对于数据库查询本身消耗的时间， ORM 这点性能损失真的微不足道啊。\r", "\r", "这些框架没有搞这个可能是因为即使搞了也收效甚微。", "另外一个原因是代码里包含了很多条件分支，不同的条件下生成的 SQL 语句可能是不一样的，比如说如果 request 里有 userid 要加个 where user_id = ? ,没有的时候就不加，这样就需要判断你的缓存是否有效，这个时候实际上你的 ORM 已经可以直接生成 SQL 了。去缓存里拿反而有 IO 消耗。", "orm 的性能损失比的上数据库本身的性能瓶颈吗？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>不求详细说明各云平台 MR 的特点，仅希望了解自建平台和云平台之间的优劣，以供做路径选择分析。</p>\n</div></div>"], "reply": "2", "tittle": "自建的 Hadoop 平台与阿里云等云平台提供的 MapReduce 服务各有什么优劣？", "comment": ["说一点\r", "运维 3 台机器要一个人，运维 300 台也是一个人，你有 300 台么=。=", "阿里云或是 aws 等云服务商提供的是 elastic MR ，也就是说根据处理的数据量弹性申请计算资源，在 MR 作业完成后释放资源。通常来说相比于自建平台会便宜一点，同时也省去了运维成本。但是有一个要求就是数据得在他们的 storage 上面，比如 S3 等。如果你的数据是在你们自己的平台上产生的，就需要上传上去进行计算。\r", "\r", "自建平台更灵活可配置，当然需要有更强的运维能力。一般的小公司如果没有大数据运维能力，使用 aws 或是 aliyun 是一个比较好的选择。但是如果公司规模较大的活自建平台的可控力更强，或许会更省成本。"]},
{"content": ["<div class=\"topic_content\">旧号码放在闲置的手机里面，接收到短信自动转发到新号码\r<br><a target=\"_blank\" href=\"https://github.com/roxma/SMS-Forward\" rel=\"nofollow\">https://github.com/roxma/SMS-Forward</a>\r<br>\r<br>至于通话，一般手机都可以直接设置呼叫转接</div>"], "reply": "57", "tittle": "给自己写了个换号工具，自动转发短信 APP", "comment": ["屌爆了", "弄个双卡手机吧，这么搞短信费一个月都不少(各种验证码和推广)", "手机放家里，用 WiFi 发邮件 吧", "以前有这需求，当时拿 IFTTT 解决的。", "我搞过一个通过微信服务号转发的", "哈哈哈前段时间刚想写一个，没想到这就已经有人做出来了。但是自动转发还是要花短信费的啊", "自动转发短信，小心手机收到铭感短信，导致你的手机卡被运营商封禁，我就上过当！！！\r", "\r", "建议转发走网络", "思路不错～我准备弄个发邮件的", "嗯，确实不错的想法..mark", "为啥不用 push 服务？", "牛逼  有这个需求  谢谢", " IFTTT 貌似在 miui 上不起作用？买了台红米当备机结果发现系统相关的 recipe 都没法用", " 我是在魅族上用的  小米就不知道啦", " 做了麻烦 艾特 一下，有这个需求……", "家里放着个专门注册各种网站 APP 的手机，用 IFTTT 转发到邮件上，挺方便的", " @", "  IFTTT 就可以啊，都有现成的配置", "真用不着写代码。安卓的两个自动化软件都支持。", " 没错我就是这么被封了手机号的短信发送功能……\r", "现在只敢用短信网络转发到微信的功能了", " 可以用，备用机红米 note 3", " 咦？ Rom 是国际版，不知道有没有关系？反正短信未接来电全部不起作用，无论是 push 还是邮件都没有反应", "我以为是有了很不错的帮忙自动打开多个网站自动更换手机号，包括自动从手机上获取验证码（识别关键字）匹配成功就自动输入，自动按键完成。", "因为你标题写着：换号工具。", "看了内容，转发短信。", "我还是去找找哪个更便宜的 iPhone 5C ……", "iPhone 可以自动转发短信内容至同步……", " 这不是问题，我的每月 300 条没什么用（送的）", "牛逼", "建议用邮件或者微信。", "电信有短信转移的业务", " 具体怎么实现", " 看我发帖记录", "这不能叫换号，我以为是那种彻底不再使用旧号码的换号", "我用那个懒人短信, 不知道安不安全", "这个 app 是要一直前台运行着吗？", "用短信是因为可靠性高（很少遇到短信网络挂掉的情况），编码简单（不太熟悉安卓开发），自己用的，能 work 就好了\r", "\r", " \r", "我在 sony z3c 上面测试的，原理是一个短信 receiver ，由系统回调我的函数，关闭前台也可以收到短信\r", "\r", "\r", "  我也看到过这个 APP ，不敢用，所以自己写。", "用微信机器人，收到短信后发给微信机器人，然后微信机器人发给你的微信，这样就节省话费了", "成本高了", "正想说 7 楼和 18 楼的风险。如果收到垃圾短信也转发，会被封号的。", "正好换号了想试试，楼主有没有打包好的 apk 下载呀。", "买个双卡双待的手机", " \r", " \r", " \r", "你们说的 IFTTT 就是这个吗： ", "有没有自动接听，然后播放录音的 app ？？\r", "“你拨打的号码已过期，我的新号码是 xxxxxxxx ”", "iphone 有什么方案么？目前可好有这方面的需求", "感谢楼主分享\r", "\r", "多年用过 ", "\r", "\r", "不知道现在还能不能用", " 然后各种推销广告尾随而来", " 安全性没有保障啊。 z", "用 tasker 就很容易实现了，只转发包含\"验证|校验|动态密码|动态码\"，以及通讯录存在的联系人的短信。\r", "如果可以用 tasker 转发到短信就给更好了。", " 我记得联通有个改号提醒服务,原号码设置呼叫转移,新号码开通业务.\r", "别人打原号码会有换号语音提示.同时你和他都会收到短信提示", "太简陋，不如用 tasker 或者 ifttt", " 你自己的", " 是的， ifttt 很适合，楼主这样的 app 我自己也做过，后来发现了更好的 ifttt", "可以考虑用 IM 转发啊，比如 Telegram", "Tasker + Pushover 用了很多年，爽得很。", "正在使用 ifttt ，将 nexus 5x 的备用机短信和未接来电都提醒到主手机上", "ifttt +1 ，可惜身边没有安卓手机， ios 很多 recipe 不支持，挺可惜的", "我也要来推一下，之前无聊写的，用的云吧推送，只要联网就可以\r", "手机没电了咋整", " 定时器。", " 这个接收邮件的邮箱不用配置吗？是 ifftt 的登陆邮箱吗？我试了一条短信，邮箱没有收到。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>RT 。这个知识可以是领域内，也可以是领域外的。我更好奇的是非专业知识，虽然说有 google 和百度什么的，但其实要搜集到正确的专业知识还是需要一定的过滤。\n大家在搜东西的时候，如何避免知识贡献者的偏见，自己的偏见和自己对知识正确性的把握。</p>\n</div></div>"], "reply": "12", "tittle": "各位平时是如何通过网络正确理解自己未接触的新知识。", "comment": ["有官网，就去挖掘官网。至少 wikipedia 起步。", "这个话题居然那么少人讨论。是这个问题太入门了么？", "wiki ， wiki 引文，论文，出版物", "百度百科 逃", "> 如何避免知识贡献者的偏见，自己的偏见和自己对知识正确性的把握\r", "\r", "避免偏见的唯一方法就是获取更多信息。因为任何人都是有偏见的，不能期望别人能给你一个公平公正一碗水的结论。", "多采集信息  综合信息", "最主要还是自己实践吧，不能实践的文科就没办法了", "要想同时避免一类误差和二类误差就只能提高样本容量。", "google 搜， QQ 群，问懂得人", "正确理解？你都不能保证你获取到的信息本身是正确的\r", "实践是唯一真理", "大部分人判断的方式是和自己已知的知识进行比对，同时考虑来源的可靠度，论述的方式等等\r", "一般来说，有意寻找某些东西的时候，想要避开偏见不会太难。偏见经常是暗示的结果，在不自觉的情况下形成。", "就算看完苍老师的课，也必须实践才行啊"]},
{"content": ["<div class=\"topic_content\">现在在做 Android 开发，职位名称是软件开发工程师；另有另外一家大点的公司给了 Offer ，职位是 Java 运维工程师。\r<br>想请教下职位名称对职业发展有多大的影响？\r<br>另外，如果运维职位的工资和现在的开发职位持平，或者差距不超过 15%，是不是就毫无优势可言？</div>"], "reply": "7", "tittle": "请教下关于职位名称问题", "comment": ["运维会+分", " 运维职位开发占工作量不超过 30%", "你是不是以为你叫了全栈工程师，就不用干修电脑的活儿了？\r", "\r", "还是看项目吧。", " 个人倾向于 Java 开发相关职位，相对不太看好 Android", "这些都没有 CFO 的 title NB 啊", "不要干运维， Java 运维就是部署 Java 开发的应用，否则就叫开发了。", "软件工程师干 Java 开发呢？"]},
{"content": ["<div class=\"topic_content\">好吧，我承认是来打广告的，但是，但是，但是初心是好的。且听我讲：\r<br>\r<br>鉴于在国内， ReactNative 的 geolocation 几乎不可用，这就很气啊，于是 Google 了很久，也没有方便的 location package ，要么只支持 Android ，要么只支持 iOS ，要么就是关于 Map 的，我要的就是一个同时支持 Android 和 iOS 的 location 的 module 啊~😭。于是基于高德地图 Amap 做了一个，然后开源到 <a target=\"_blank\" href=\"https://github.com/Eleme-IMF/dodo\" rel=\"nofollow\">https://github.com/Eleme-IMF/dodo</a>, 希望后面的人不会因为这个问题被困扰，不用重复造轮子，如有疑问，欢迎 issue ，更欢迎 PR ！\r<br>\r<br>广告完毕！</div>"], "reply": "4", "tittle": "React-Native Geolocation 的墙内替代方案", "comment": ["如果大家觉得有需要，我可以写博文一篇来介绍实现方案", "既然是墙内 map ，为什么不用百度地图呢？", " 百度地图体积太大，需要一堆 ndk 的支持。后面也可以考虑做个 Adapter ，自持多种", "支持，不要重复造轮子。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>• 在用户 A 名下新建仓库:</p>\n<pre><code>userA/repo\n</code></pre>\n<p>• 克隆到本地:</p>\n<pre><code>local/repo \n</code></pre>\n<p>• 将用户 A 名下的 repo transfer 给用户 B:</p>\n<pre><code>userA/repo -&gt; userB/repo\n</code></pre>\n<p>• 现在远端和本地的情况分别是:</p>\n<pre><code>remote : userA/repo(不存在) , userB/repo\n\nlocal : local/repo (.git/config 中的 remote url 为 git@github.com:userA/repo.git) \n</code></pre>\n<hr>\n<p>• 接下来三个测试</p>\n<p>在 local/repo 提交 commit 并 push</p>\n<pre><code>commit 居然成功的 push 到 userB/repo 中\n\n注意此时的 local/repo/.git/config 中的 remote url 是指向 userA/repo 的\n</code></pre>\n<p>将 userB/repo 克隆到本地并查看.git/config 中的 remote url</p>\n<pre><code>当然毫无疑问的 remote url 为 git@github.com:userB/repo.git\n</code></pre>\n<p>在用户 A 名下新建同名仓库 userA/repo, 接着从 local/repo 提交 commit 然后 push</p>\n<pre><code>commit 也能 push 成功，但是却又出乎意料的出现到了 userA/repo 中\n</code></pre>\n<p>这应该是 github 出于好意设计出的仓库向前同步的功能，但如果真出现了 3 的情况，估计会疑惑到很大一批人。</p>\n<p>囧</p>\n</div></div>"], "reply": "6", "tittle": "一次奇怪的 github 测试", "comment": ["这个问题很难权衡啊，如果要保留重定向功能，又不出现 3 的情况，应该只能禁止 A 在 transfer 后建立同名 repo 了吧。\r", "此外，这个实验其实不需要两个 GitHub 用户， repo 改名后也会把原名重定向到新的地址。", " 确实， repo 的 transfer 和 rename 在这里是同一种情况，我个人偏向于取消重定向的功能，毕竟林子大了什么鸟都有😅", " 理论上你只能 push 你私有的 repo …所以有什么问题吗？", " 假设你是 userA ， userB 是你本人的 organization", "  ", "  我知道…但是感觉问题不大啊…一般来说只有所有者可以做 transfer 啊…就算有重定向也没啥问题吧…会有人搞事情么= =", " 一个 organization 的所有 owner 都是可以 transfer 的，就是担心会有不太了解这些的然后在原 user 下来建了同名 repo ，这就要玩完 2333333"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近刚从 Android 开发跳到做 Java 后端开发了。不知道是之前没做过服务器端开发还是普遍如此，发现这个项目真有点坑啊。一个数据库，从表名到字段名各种风格都齐全了，什么全大写、全小写、驼峰式、下划线式都有。这就算了， SVN 提交居然也都没有写提交信息。全是空的，偶尔 1,2 个人才写上一句提交信息，而且还有废话的，如： update 一下等等。刚进来的时候看了一天的开发文档，感觉规范写都挺好的，咋就没一个人去遵守一下呢？\n吐槽结束，准备明年开始大刀阔斧的重构了，坑就是为了要来填的不是~</p>\n</div></div>"], "reply": "41", "tittle": "年底跳槽都是为来填坑的？", "comment": ["好好的 android 为啥不做了呢？", "提交信息乱写的现象还是挺多的\r", "主要还是靠 git-blame 了解提交历史\r", "不知道 svn 有没有类似的东西", "svn 也有类似的功能", "本后端表示并非普遍如此，这锅得你司后端背", "小明的爷爷为什么活了 103 岁?", "我们这里 git 提交信息只有 3 种：\".\"、\"add\"、\"fix\"", " 想搞大数据方向，目前这个项目也是一个云平台。。先学学吧\r", "唉，还记得上家公司，每次提交 TL 都会 review ，没达到标准都不让提的。\r", "这边都太随意了，明显团队建设没弄好嘛~\r", "别人咋样先不提，自己先做好再说咯。。", "有一个 原则...如果之前的代码能够运行, 改之前一定要三思... 说不定牵一发动全身", " 嗯，了解。这个是因为老大们也都看不下去了，已经说了明年要大重构。\r", "再个这些代码也不是很老，都是今年才开发的，有些地方可能都会完全重写的。\r", "初步看了一下，依赖的地方确实挺多，不过我也不是一个人在战斗呢，慢慢来吧", "持续集成怎么样的感觉啊，新人（大四学生）在公司实习，发现公司开发流程和在学校里的完全不一样，他们这种持续集成的方式感觉挺不错的。", "我都是边做边局部重构，除非线上问题频发，公司是不会留整块的时间重构的。", " 新公司还没了解这方面，不过上家有用过，你们那个持续集成是什么样的呢？\r", "我上家就是提交代码到服务器仓库后会触发自动编译，然后也有定时每天编译发布的 daily 版本和每周编译一次的 week 版本，最后还有为了解决某个特定问题，手动编译的 black 版本，结束后都用邮件通知。", "我上个月才入职 也是几个坑要填 手头另外一个 offer 目测也是去填坑 而且还是偏运维的", "楼主我也是安卓想跳 java 后端啊😂", "大刀阔斧重构的前…… 先花两个月把单元测试、集成测试、功能测试补上吧，没测试的重构就是个灾难，三思", "我也是啊，刚入公司三个月。我现在是做前端的，基本上都是维护一些老系统，然后加新功能。看着这些 jquery 的老项目，有太多要吐槽的点。", "1. css 样式杂乱且极难复用；", "2. html 布局完全就是乱堆，每个元素都是浮动； 3. js 变量全局污染严重，上千多行 js 的文件。", "    更离谱的是还看到", "         if （ true ）｛…｝", "         else ｛…｝", "    这么感人的代码。", "我也是欲哭无泪啊，想重构，又不敢重构。", "唯一让我欣慰的是，有一个新项目，可以上 react 了，已经一个小迭代，这个项目一定要搞好，不想被后来人吐槽……", " web css html js 没有一门技术是为工程化设计的", " 嗯嗯，多谢。看了下它们一个测试都没写，直接来个 Main 方法测的…要不要这样，才刚做后端开发就遇到这么坑的。还以为年前会轻松下呢", " 为什么你知道小明的爷爷活了 103 岁？", " 现在已经越来越趋于工程化了， ES6 中已经有很多新的语法，再加上 webpack 等一些工具，前端就是一个独立的系统，独立的服务器进行部署，与后端通过接口来交互。前端的未来趋势还是大好，技术的更迭更是飞快，紧跟节奏，才能不被拉下", " 因为他就是小明", "明年 TL 的位子就是你的😁😁", "规范都是写得很好的，但是规范如果没有人遵守，它就是废纸。在开发过程中，单纯得靠这种文档规范机制，是不可靠，可以用什么 checkStyle 的东西强制要求按规范来", "由于经常提交推上去了以后，才发现有些地方忘了改， 我们的提交里一堆 bug fix ...", "目前就职的公司也是，我提出要建立 js 规范，但每个人都只看了一下，又特么特立独行自己写自己的一套习惯= =", " 也想搞大数据方向，可否私下聊，互相交流沟通", "//原来习惯写 ing ，最近学老外开始写 WIP ，顿时感觉自己水平提高了\r", "\r", "message 这个东西我觉得开发分支上确实没必要认真，但生产 /patch 分支还有 merge commit 一定要认真写清楚", "楼主你好 请问从 android 转 javaweb 需要掌握什么新的技能呢", "r#7 @", " 为责任心点赞，不过如果是我的话，会继续做 android 开发，兼并学下 ios 开发", " 我也是自学，网上有挺多资料的，我就只说一下我自己学的吧。最重要的数据库方面 MySQL 就行，很多人都说后端开发就是增删改查，可以看出数据库的重要性，然后就是基本的 JAVAEE 平台技术，初学时不建议一上来就 SSH 或 SSM 等封装好的框架，还是要学一下基本东西的，如： Servlet 、 Listener 、 Filter 等等。基础学完了再来熟悉框架，最后就是找一两个练手项目咯，通过项目才能学到更多。还有工作后我觉得作为开发人员基本的职业素养还是要有的，看个人吧", "  感谢回复 我现在也是做了 3 年 android 一直想找个契机自学 javaweb \r", "因为感觉做 android 很不安全。。。还是 javaweb 好一点", "  为啥 android 就很不安全？？", " 比如 android 哪天不行了，不过我觉得 android 挺棒的", "我来了一个不用表结构的公司，一个网站运营数据存在 MySQL 一个字段里，或者表的一条记录的多个字段里，反正一行解决。\r", "自己宣称的高科技。\r", "\r", "表示给开发带来了极大的困难，不可名状的后台，完全黑盒。勿入邪教的感觉。", " 莫名喜感", " 我感觉我们这儿持续集成做得并不是特别好，有这个东西，但是大家不怎么用，或者说大家比较随意，并没有那么规范（我在网上看到的流程和我们现在实践的不一样），所以我就只能努力自己实践了(づ｡◕‿‿◕｡)づ", "我只想说，大环境下，渣渣程序员太多了，代码不好好写，环境乌烟瘴气的。。搞得公司现在招人动不动就三年以上，五年以上，，，恶性循环", " 这个开眼界了，还有这样搞的？", "好的队友就是互相填坑。", "我倒是想搞移动开发，尤其是 ios ，不用加班.", "哪哪都是 坑的....淡定"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>上个月，笔者对国内两大云厂商（阿里云和腾讯云）的<a href=\"http://www.codingpy.com/article/a-comparison-of-qcloud-and-aliyun-products/\" rel=\"nofollow\">云服务器、云数据库和云存储三种产品做了性能评测</a>，算是对两家的部分计算和存储产品（数据库也可视作一种存储形式）做了简要对比。虽然评测文章在 V2EX 等社区的反馈还不错，但确实还存在不少缺失。除了不好评测的售后服务等指标外，还缺少了对其他使用更为普遍的云存储产品。</p>\n<p>因此，笔者近期抽空完善<a href=\"https://github.com/bingjin/CloudTesting\" rel=\"nofollow\">《云计算产品性能测试指南》</a>，新加入了对两种云存储产品（云盘）的性能和价格对比。本次测试总计耗时 20 多天，测试的强度和时间都非常充分。我在<a href=\"http://www.codingpy.com/article/cloud-block-storage-performance-testing/\" rel=\"nofollow\">这篇文章</a>中记录下了此次测试的过程和对比结果。文章的标题叫做<strong>：《 20 天持续压测，云存储性能哪家更强？》</strong></p>\n<blockquote>\n<p>和<a href=\"https://www.v2ex.com/t/318160\" rel=\"nofollow\">上篇</a>一样，测试的厂商为阿里云和腾讯云，测试的产品为高效云盘和 SSD 云盘。测试总时长超过了 20 天，而且使用的是标准的 SNIA SSD 硬盘性能测试规范， SNIA 是国际上的存储行业协会。</p>\n</blockquote>\n<p>文章较长，在论坛里先与大家分享一些结论：</p>\n<ol>\n<li><strong>腾讯云高效云盘的各项基础性能指标均优于阿里云，且优势明显；</strong></li>\n<li><strong>腾讯云高效云盘达到了预期的性能，而阿里云部分云盘没有达到， 400GB 容量的时延过高；</strong></li>\n<li><strong>阿里云大容量高效云盘的 IOPS 性能受宿主机闲置影响较大；</strong></li>\n<li><strong>包年包月模式下，腾讯云高效云盘的性价比非常高；</strong></li>\n<li><strong>阿里云高效云盘不同计费模式下费用差别不大，选择时灵活性更高。</strong></li>\n</ol>\n<p>具体的测试数据，大家可以到<a href=\"http://www.codingpy.com/specials/cbs_test/\" rel=\"nofollow\">这个页面</a>去查看用 highcharts 制作的互动图表。</p>\n</div></div>"], "reply": "1", "tittle": "上次评测完后，我又跑了 20 多天的云盘压力测试，这里是测试的结论", "comment": ["很有用~非常感谢"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><pre><code>[root@iasdZ28i253je0Z blog.ansheng.me]# hexo g\nINFO  Start processing\nINFO  Files loaded in 15 s\n</code></pre>\n<p>就是执行上面的命令，等了十几分钟，没什么反应，然后打开<code>top</code>，一看 CPU 百分之 98 ，内存百分之 60 ， 1H1G 的配置，这是什么鬼啊，之前貌似也慢，但是没这么慢</p>\n</div></div>"], "reply": "3", "tittle": "hexo 生成文章的时候奇慢无比，什么鬼", "comment": ["文章多了就慢", "原来这就是我没发现这个问题的原因😂", "本来就不是很快"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题 原始文件如下</p>\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"Windows-1252\"?&gt;\n&lt;!DOCTYPE RestingECG SYSTEM \"restecg.dtd\"&gt;\n&lt;RestingECG&gt;\n   &lt;PatientDemographics&gt;\n      &lt;PatientID&gt;&lt;/PatientID&gt;\n   &lt;/PatientDemographics&gt;\n   &lt;TestDemographics&gt;\n      &lt;DataType&gt;Resting&lt;/DataType&gt;\n      &lt;Site&gt;1&lt;/Site&gt;\n      &lt;AcquisitionDevice&gt;MAC55&lt;/AcquisitionDevice&gt;\n      &lt;Status&gt;Unconfirmed&lt;/Status&gt;\n      &lt;Priority&gt;Normal&lt;/Priority&gt;\n      &lt;AcquisitionTime&gt;15:23:28&lt;/AcquisitionTime&gt;\n      &lt;AcquisitionDate&gt;09-26-2016&lt;/AcquisitionDate&gt;\n      &lt;CartNumber&gt;1&lt;/CartNumber&gt;\n      &lt;AcquisitionSoftwareVersion&gt;009D&lt;/AcquisitionSoftwareVersion&gt;\n      &lt;XMLSourceVersion&gt;MAC5000 v1.0&lt;/XMLSourceVersion&gt;\n   &lt;/TestDemographics&gt;\n   &lt;RestingECGMeasurements&gt;\n      &lt;VentricularRate&gt;89&lt;/VentricularRate&gt;\n      &lt;AtrialRate&gt;89&lt;/AtrialRate&gt;\n      &lt;PRInterval&gt;150&lt;/PRInterval&gt;\n      &lt;QRSDuration&gt;80&lt;/QRSDuration&gt;\n      &lt;QTInterval&gt;340&lt;/QTInterval&gt;\n      &lt;QTCorrected&gt;413&lt;/QTCorrected&gt;\n      &lt;PAxis&gt;65&lt;/PAxis&gt;\n      &lt;RAxis&gt;44&lt;/RAxis&gt;\n      &lt;TAxis&gt;47&lt;/TAxis&gt;\n      &lt;QRSCount&gt;15&lt;/QRSCount&gt;\n      &lt;QOnset&gt;222&lt;/QOnset&gt;\n      &lt;QOffset&gt;262&lt;/QOffset&gt;\n      &lt;POnset&gt;147&lt;/POnset&gt;\n      &lt;POffset&gt;203&lt;/POffset&gt;\n      &lt;TOffset&gt;392&lt;/TOffset&gt;\n      &lt;ECGSampleBase&gt;500&lt;/ECGSampleBase&gt;\n      &lt;ECGSampleExponent&gt;0&lt;/ECGSampleExponent&gt;\n   &lt;/RestingECGMeasurements&gt;\n   &lt;Diagnosis&gt;\n      &lt;Modality&gt;Resting&lt;/Modality&gt;\n         &lt;StatementCount&gt;3&lt;/StatementCount&gt;\n         &lt;LabelText&gt;12SL è¯Šæ–­é™ˆè¿°&lt;/LabelText&gt;\n      &lt;DiagnosisStatement&gt;\n         &lt;StmtFlag&gt;ENDSLINE&lt;/StmtFlag&gt;\n         &lt;StmtText&gt;çª¦æ€§å¿ƒå¾‹&lt;/StmtText&gt;\n      &lt;/DiagnosisStatement&gt;\n      &lt;DiagnosisStatement&gt;\n         &lt;StmtFlag&gt;ENDSLINE&lt;/StmtFlag&gt;\n         &lt;StmtText&gt;QRS ä½Žç”µåŽ‹&lt;/StmtText&gt;\n      &lt;/DiagnosisStatement&gt;\n      &lt;DiagnosisStatement&gt;\n         &lt;StmtFlag&gt;ENDSLINE&lt;/StmtFlag&gt;\n         &lt;StmtText&gt;ä¸´ç•Œ ECG&lt;/StmtText&gt;\n      &lt;/DiagnosisStatement&gt;\n   &lt;/Diagnosis&gt;\n   &lt;Waveform&gt;\n      &lt;WaveformType&gt;Rhythm&lt;/WaveformType&gt;\n      &lt;WaveformStartTime&gt;0&lt;/WaveformStartTime&gt;\n      &lt;NumberofLeads&gt;8&lt;/NumberofLeads&gt;\n      &lt;SampleType&gt;CONTINUOUS_SAMPLES&lt;/SampleType&gt;\n      &lt;SampleBase&gt;500&lt;/SampleBase&gt;\n      &lt;SampleExponent&gt;0&lt;/SampleExponent&gt;\n      &lt;HighPassFilter&gt;16&lt;/HighPassFilter&gt;\n      &lt;LowPassFilter&gt;150&lt;/LowPassFilter&gt;\n      &lt;ACFilter&gt;50&lt;/ACFilter&gt;\n      &lt;LeadData&gt;\n         &lt;LeadByteCountTotal&gt;10000&lt;/LeadByteCountTotal&gt;\n         &lt;LeadTimeOffset&gt;0&lt;/LeadTimeOffset&gt;\n         &lt;LeadSampleCountTotal&gt;5000&lt;/LeadSampleCountTotal&gt;\n         &lt;LeadAmplitudeUnitsPerBit&gt;4.88&lt;/LeadAmplitudeUnitsPerBit&gt;\n         &lt;LeadAmplitudeUnits&gt;Î¼V&lt;/LeadAmplitudeUnits&gt;\n         &lt;LeadHighLimit&gt;2147483647&lt;/LeadHighLimit&gt;\n         &lt;LeadLowLimit&gt;268435456&lt;/LeadLowLimit&gt;\n         &lt;LeadID&gt;I&lt;/LeadID&gt;\n         &lt;LeadOffsetFirstSample&gt;0&lt;/LeadOffsetFirstSample&gt;\n         &lt;FirstSampleBaseline&gt;0&lt;/FirstSampleBaseline&gt;\n         &lt;LeadSampleSize&gt;2&lt;/LeadSampleSize&gt;\n         &lt;LeadOff&gt;FALSE&lt;/LeadOff&gt;\n         &lt;BaselineSway&gt;FALSE&lt;/BaselineSway&gt;\n         &lt;ExcessiveACNoise&gt;FALSE&lt;/ExcessiveACNoise&gt;\n         &lt;MuscleNoise&gt;TRUE&lt;/MuscleNoise&gt;\n         &lt;LeadDataCRC32&gt;2111414534&lt;/LeadDataCRC32&gt;\n         &lt;WaveFormData&gt;\nRgBGAEYARgBIAEgASABIAEsATABNAE4ATgBOAE4ATgBQAFAAUABQAE0ATABLAEoARgBE\n/6L/nv+f/5//mP+V/5f/nf+j/63/uv/D/8v/0v/b/+v//v8HAAIA+P/o/9T/u/+h/4v/\nhP+D/4P/gf+B/4T/iv+K/4z/jP+P/5D/jv+R/5b/mP+a/57/n/+c/5n/mP+X/5b/l/+Y\n/5n/mv+a/5v/nP+c/5v/m/+a/5j/mf+Y/5n/mv+a/5v/nf+d/53/nf+e/57/nv+e/57/\nnf+d/w==\n         &lt;/WaveFormData&gt;\n      &lt;/LeadData&gt;\n   &lt;/Waveform&gt;\n&lt;/RestingECG&gt;\n</code></pre>\n<p>另外问下如何上传附件，有个 MAC5000 心电图仪器 XML 的说明书上传，我准备用 python 解码后画图试试，原始文件 xml 里面有好几个 WaveFormData 节点，是代表各个导联的图像吗？</p>\n<p>我把原始数据和xml说明书放百度网盘了 <a href=\"http://pan.baidu.com/s/1skWSkXJ\" rel=\"nofollow\">http://pan.baidu.com/s/1skWSkXJ</a></p>\n</div></div>"], "reply": "4", "tittle": "python 的 ecg 心电图的图形怎么画出来的， base64 编码解码后，无图片，大家有研究的没有仪器是 MAC5000", "comment": ["竟然看到了医疗行业的朋友", "大体看了一下文档，", "WaveFormData 中的数据应该是 ad 采集的原始数值，需要根据其他参数还原成电压数据，然后在坐标上画出", "我以为是直接波形图，没那技术，还是放弃把，用现成的 ecg 程序可以分析和保存图像，太难"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>1.单位是一个大的局域网，需要分享一些文档，资料等\n2.需要其他电脑不能访问共享，只能是指定的几台电脑。\n3.IP 地址固定。\n大家有什么好的解决方案？领导给安排的，不会了。</p>\n</div></div>"], "reply": "11", "tittle": "求助！文档文件局域网分享大家有什么解决方案啊？", "comment": ["ftp IP fitter\r", "switch Mac IP 绑定", " ftp 服务器有什么好的建议吗？", "配置一个 seafile 服务器端\r", "然后用挂载盘客户端或者普通客户端\r", "优点是功能强大，缺点是成本较高\r", "\r", "\r", "如果想简单、低成本，就用 windows 共享\r", "主机新建一个 user 组的用户，配置好密码，然后共享一个指定的文件夹，将权限设置为只允许这个用户进行读写(?)。其他机器映射网络驱动器就行了，你自己过去输帐户名和密码并保存，基本上安全性没什么问题，不会扩散。\r", "成本几乎为 0", "直接买台群晖最省事,你的需求都可以简单做到.", "[xlight]( ", ")", " 还是第二种吧，现在东西不让买，不让投资。", " 不让花钱啊，花钱审批可麻烦了。", "可以使用 NitroShare 内网多操作系统间快捷文件共享工具\r", "\r", "跨平台 开源 自动发现\r", "\r", "详情 - ", " 这个跨平台没问题，貌似不支持权限控制啥的吧？", "通用标准做法是交换机上开个 VLAN ，要共享的几台机器划到一个 VLAN 去，然后里面开 SMB 共享（ Windows 自带那个）\r", "微软标准做法是大家加 AD ，然后用 AD 做 SMB 共享的权限控制，粒度可以非常细\r", "贪便宜的做法是那台机器上开个 Guest 账户，告诉其他人 Guest 账户的密码", " 我这没有交换机网络管理权限，是不是只能第三种方法了。"]},
{"content": "", "reply": "102", "tittle": "请问程序员周末都喜欢做些什么？", "comment": ["刷你的名字。", " 我第一次也报证书问题了  PC 的 chrome"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><pre><code>[root@iZ28i25233ffje0Z ~]# date\nWed Dec  7 23:35:09 CST 2016\n[root@iZ28i25233ffje0Z ~]# curl -I http://duoshuo.com/\ncurl: (7) Failed connect to duoshuo.com:80; Connection refused\n</code></pre>\n<p>然后我就不想再说什么了,</p>\n</div></div>"], "reply": "6", "tittle": "然而多说就这样挂掉了", "comment": ["没用几天就挂了。。。不知道除了多说还有没有不用备案就能用的社会化评论服务了。。。", "C:\\Users\\lslqtz>curl -I ", "\r", "HTTP/1.1 200 OK\r", "Server: nginx\r", "Date: Wed, 07 Dec 2016 16:50:41 GMT\r", "Content-Type: text/html; charset=utf-8\r", "Connection: keep-alive\r", "Vary: Accept-Encoding\r", "P3P: CP=\"DSP IDC CUR ADM DELi STP NAV COM UNI INT PHY DEM\"\r", "Set-Cookie: duoshuo_unique=497b9a5bfa95993b; expires=Thu, 07-Dec-2017 16:50:41 GMT; Max-Age=31536000; path=/; ", "; HttpOnly\r", "Expires: Wed, 07 Dec 2016 16:50:41 GMT\r", "Cache-Control: max-age=0\r", "Pragma: no-cache\r", "\r", "\r", "C:\\Users\\lslqtz>", "一切正常，你不怀疑是自己网络问题吗？🌚", " \r", " \r", "\r", "睡前又好了", "多说现在好多垃圾广告。。", "多说是不准备做了吗，微博也没人维护了， QQ 也没人响应了。\r", "\r", "垃圾广告我屏蔽了几千个 IP 才算好点。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>搞了一个 VPS ，想设置免钥登录，生成私钥和公钥之后，把\"#PasswordAuthentication yes\"  改成\"PasswordAuthentication no\"  之后就一直报这个错， Permission denied (publickey,gssapi-keyex,gssapi-with-mic).   搜索了下，权限都 OK ， authorized_keys 600 和 644 都试了，.ssh 也是 700 ，就是没办法啊，老报错，求高手解决</p>\n</div></div>"], "reply": "76", "tittle": "SSH 设置免密登录遇到的报错， Permission denied (publickey,gssapi-keyex,gssapi-with-mic).", "comment": ["连 ssh 时加-vvv 参数，看具体的 Log 分析原因。", "私钥的权限设置为 600 了吗？ ~/.ssh/id_rsa", "SELinux 问题? 试试 restorecon -r ~/.ssh", " 关闭了", " 设置了的", " 怎么理解？菜鸟实在不懂 哈哈", "\r", "你看这个行不行啊", "报这个错误，应该是你的公钥和私钥没有配对好。\r", "\r", "ssh user@ip -v\r", "\r", "看看具体报什么错误。", " 谢谢，这个看过，没用，哈哈", " 你是什么系统啊", "手工添加的 key 可以参考下我的脚本：\r", "\r", "\r", "\r", "如果是 rh 系的要注意 selinux ，用命令\r", "\r", "restorecon -R -v $HOME/.ssh", "前两天用 google cloud ，想改成 root 直接登录也遇到相同的问题\r", "改 sshd_config ， PermitRootLogin yes ，重启 sshd 服务\r", "然后执行了几个命令，突然就好了，不知道对你有没有帮助\r", "chown -R root:root ~/.ssh\r", "chmod 600  ~/.ssh/authorized_keys\r", "restorecon -r -vv ~/.ssh", " \r", "\r", "penSSH_6.6.1, OpenSSL 1.0.1e-fips 11 Feb 2013\r", "debug1: Reading configuration data /root/.ssh/config\r", "debug1: Reading configuration data /etc/ssh/ssh_config\r", "debug1: /etc/ssh/ssh_config line 56: Applying options for *\r", "debug1: Connecting to 我的 IP [我的 IP] port 22.\r", "debug1: Connection established.\r", "debug1: permanently_set_uid: 0/0\r", "debug1: identity file /root/.ssh/id_rsa type 1\r", "debug1: identity file /root/.ssh/id_rsa-cert type -1\r", "debug1: identity file /root/.ssh/id_dsa type -1\r", "debug1: identity file /root/.ssh/id_dsa-cert type -1\r", "debug1: identity file /root/.ssh/id_ecdsa type -1\r", "debug1: identity file /root/.ssh/id_ecdsa-cert type -1\r", "debug1: identity file /root/.ssh/id_ed25519 type -1\r", "debug1: identity file /root/.ssh/id_ed25519-cert type -1\r", "debug1: Enabling compatibility mode for protocol 2.0\r", "debug1: Local version string SSH-2.0-OpenSSH_6.6.1\r", "debug1: Remote protocol version 2.0, remote software version OpenSSH_6.6.1\r", "debug1: match: OpenSSH_6.6.1 pat OpenSSH_6.6.1* compat 0x04000000\r", "debug1: SSH2_MSG_KEXINIT sent\r", "debug1: SSH2_MSG_KEXINIT received\r", "debug1: kex: server->client aes128-ctr ", " none\r", "debug1: kex: client->server aes128-ctr ", " none\r", "debug1: kex: ", " need=16 dh_need=16\r", "debug1: kex: ", " need=16 dh_need=16\r", "debug1: sending SSH2_MSG_KEX_ECDH_INIT\r", "debug1: expecting SSH2_MSG_KEX_ECDH_REPLY\r", "debug1: Server host key: ECDSA 7b:70:a2:01:de:01:13:68:9f:38:2a:32:11:a0:60:7e\r", "debug1: Host ‘我的 IP' is known and matches the ECDSA host key.\r", "debug1: Found key in /root/.ssh/known_hosts:1\r", "debug1: ssh_ecdsa_verify: signature correct\r", "debug1: SSH2_MSG_NEWKEYS sent\r", "debug1: expecting SSH2_MSG_NEWKEYS\r", "debug1: SSH2_MSG_NEWKEYS received\r", "debug1: SSH2_MSG_SERVICE_REQUEST sent\r", "debug1: SSH2_MSG_SERVICE_ACCEPT received\r", "debug1: Authentications that can continue: publickey,gssapi-keyex,gssapi-with-mic,password\r", "debug1: Next authentication method: gssapi-keyex\r", "debug1: No valid Key exchange context\r", "debug1: Next authentication method: gssapi-with-mic\r", "debug1: Unspecified GSS failure.  Minor code may provide more information\r", "No Kerberos credentials available\r", "\r", "debug1: Unspecified GSS failure.  Minor code may provide more information\r", "No Kerberos credentials available\r", "\r", "debug1: Unspecified GSS failure.  Minor code may provide more information\r", "\r", "\r", "我改了默认的 22 端口，改成其他的了", " CentOS 7 64", "chmod 600 '密钥'", " 谢谢", " 是 600 哦", "我有个问题是在 .ssh 里面做了 config  分配，但是每次重启都要执行：`ssh-add -K ~/.ssh/id_rsa` 才可以。谁知道怎么破？", " 自己搜吧，关键词： No Kerberos credentials available", " 好咧，十分感谢大神，我研究研究去", "我得做法是，使用 ssh-keygen -t rsa 命令 把机器的公钥 id_rsa.pub 直接拷贝到服务器的 authorized_keys 文件中，然后就可以实现 ssh 免密码登录了。详细的步骤可以参见： ", "你知道 ssh-copy-id 吗？", " 你都没搞明白就瞎指导。本案问的不是 kerberos 认证，是 public key 认证", "上面-v 的结果不全\r", "gssapi 之后应该还有好多内容\r", "\r", "另外需要搭配服务器上的日志来看 secure 或者 auth.log", "从 debug1: permanently_set_uid: 0/0 来看，客户端是 root\r", "（如果没有指定用其它用户名登录服务器，则也是 root ）\r", "我怀疑是 PermitRoot no 导致的问题", "居然这么多回复都没解决？用户名用错了没？", "  你说改了端口，不用 22 。那么上面的详细信息为啥还是链接到 22 ？", "问问题前，请放出你的配置\r", "ls -laF ~/.ssh\r", "cat /etc/sshd/sshd_config\r", "\r", "不要让大家猜谜语", "另外， cat ~/.ssh/config 也放出来，可以修改掉 ip 与端口", "我之前试过这种报错是网络问题， 233", " 我知道，但是通过这个关键词能搜到对应的答案。我猜的话应该是 authorized_keys 不对。", " 认同你的这个观点：我怀疑是 PermitRoot no 导致的问题", " 收下脚本 省得每次都手工 curl 了", " 奇怪，为什么这个关键词能搜到……", "看起来客户端都没尝试用密钥认证，你在客户端把私钥和公钥分别放到 ~/.ssh/id_${type} 和 ~/.ssh/id_${type}.pub 了吗？", "有可能是 OpenSSL 版本太低了，是不是刚装好系统没更新过软件包", " 嗯~ o(*￣▽￣*)o   我一般这样用\r", "\r", "ssh root@xxxx sh- < ~/addkey.sh\r", "或者在目标机里面 wget  [一个容易记的缩短网址] -O - | sh", " 嗯~ o(*￣▽￣*)o 哥哥我收下再说 乃平身~话说我想个短网址来托管 bash 程序- -", " ba.sh ？", "ssh-agent\r", "运行这个试试", "cat 一下本地 ~/.ssh/config 配置，还有你连接时用的命令（用户名、端口等）", " 有的", " 极有可能是这个", " 真没有，我刚试了下，还是这些内容", " 木有的", " 用户名就是 root ，我暂时还没有加其他的，端口不是默认的 22 ，我改了一个其他的。默认配置也就改了#PasswordAuthentication yes\" 改成\"PasswordAuthentication no\"", " 刚买的 VPS ，没有更新，原则上应该不至于还需要去更新把", "难道楼主是在 vps 上生成了密钥然后就禁用密码登录出来了.......\r", "楼主你再重新说一遍上面的每个命令你都在什么地方执行的...\r", "\r", "另外 ls -l ~/.ssh/\r", "\r", "以及我也怀疑是 SSH 客户端版本问题，服务端的太新了所以协商不出来双方都接受的加密算法之类的", " 我之前在 nya 开的 CentOS 就是这样，莫名错误公钥连接不上，后来更新软件包就解决了", " \r", "\r", "ls -laF ~/.ssh \r", "\r", "总用量 20\r", "drwx------ 2 root root 4096 12 月  6 18:21 ./\r", "dr-xr-x--- 6 root root 4096 12 月  6 16:33 ../\r", "-rw-r--r-- 1 root root  395 12 月  6 17:31 authorized_keys\r", "-rw-r--r-- 1 root root  139 12 月  6 17:40 config\r", "-rw-r--r-- 1 root root  175 12 月  6 16:09 known_hosts\r", "\r", "-------------------------------------------------------------\r", "\r", "cat /etc/sshd/sshd_config     显示   cat: /etc/sshd/sshd_config: 没有那个文件或目录", " 这倒没有，是另外开了一个 SSH 链接，我用的是 MAC 自带的终端工具  \r", "\r", "ls -l ~/.ssh/ \r", "显示\r", "-rw-r--r-- 1 root root 395 12 月  6 17:31 authorized_keys\r", "-rw-r--r-- 1 root root 139 12 月  6 17:40 config\r", "-rw-r--r-- 1 root root 175 12 月  6 16:09 known_hosts", " 咋更新，我是在 vultr 买的 vps", " RHEL 系的话 yum update   ， deb 系的 apt-get update aptget upgrade", "这个设置了吗 AllowUsers", " 没有也，有关系吗", "你是不是在创建机器时候 指定的 key ？  不要这样，先设置密码 然后再用 ssh-copy-id 去拷贝证书，或者拷贝公钥", " 感觉是没找到本地的 key ，可以在本地 .ssh/config 配置\r", "\r", "```\r", "Host test\r", "  HostName x.x.x.x\r", "  Port 22\r", "  User root\r", "  IdentitiesOnly yes\r", "  IdentityFile ~/.ssh/id_rsa # 指定 key\r", "```\r", "\r", "然后试试\r", "\r", "```\r", "ssh test\r", "```", "把你 ssh 登陆命令打出来", " 试过，无效，哈哈", "还没搞定吗？ 你还是别找了，按这个说明重新配置一下吧， ", "  看不清楚楼主两边的环境，根本没法判断啊。 能不能 ls -al 列出 vps 和本地 Mac 的 .ssh 文件夹及里面的内容呢？", "客户端的 ssh_config 看看是不是 GSSAPIAuthentication 设置成 yes ？是的话注释掉看看", " 内容是指文件夹里面的文件，不是文件里面的内容，忘记补充了。", "有可能权限问题    \r", "chmod 700 /home/user \r", "chmod  600 /home/user/.ssh/authorized_keys\r", "试试", " 远程的 /etc/ssh/sshd_config 配置没有把 `PubkeyAuthentication` 设置为 `no` 吧", " 哈哈，都试过咯", " 是 RSAAuthentication ，目前是 yes ，也注释了的", "附言写上你的具体操作步骤和两边环境配置吧。", "呃，话说楼主你还上得去服务器的话先把密码认证打开再调试吧，反正默认也会优先尝试密钥登录，不行再 fallback 到密码上...\r", "\r", "然后服务器上 .ssh/ 中文件的权限，和 authorized_keys 里面的密钥是否正确？（除了权限，有没有奇怪的空字符之类的也可以检查下）", "以及认真的，服务端 yum update 更新一把试试...", "1. 移动.ssh 这个文件夹到 bak\r", "\r", "2. ssh x.x.x.x #随便连一个服务器\r", "\r", "3. 询问是否继续时输入 yes #此时 sshd 就会自动创建带有 sshd 上下文的.ssh 文件夹\r", "\r", "4. 把 bak 里的 authorized_keys 移动到.ssh\r", "\r", "跟 700 ， 600 没有关系", "   \r", "[root@niaoyun-118-192-147-6 .ssh]#cd  /root/.ssh/\r", "[root@niaoyun-118-192-147-6 .ssh]#ssh-keygen\r", "[root@niaoyun-118-192-147-6 .ssh]#ssh-agent\r", "[root@niaoyun-118-192-147-6 .ssh]#ssh-copy-id  -i id_rsa.pub   ", "\r", "\r", " ", " 哈哈，用这个里面的方法搞定了", "问题解决了，我也不知道咋回事，按照 vultr 大神给的链接， ", " ，重新配置了下，就好了。。。有需要的收藏这个 url", " 其实这个问题还有一种可能是 ip 子网设错导致的，很少见。还是给人留个思路，后辈装的系统，不会手动配固定 ip ，就用系统带的工具配，子网不能填写 255.255.255.0 这类格式，就没填，导致子网默认变成 32 ，虽然系统其他功能都能正常使用上网，但是就是 ssh 用证书无法正常登录，改成正常的子网即可", " 掩码产生的不止影响 ssh ，凡是需要判断远近的都会影响"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h3>有数量不算太多的 pdf ,epub 书籍, 小的 几 mb, 大的几百 mb, 不知道如何管理这些书籍比较好 ~</h3>\n<p><strong>希望能在线存储  +  多设备同步或者在线查看 ~</strong></p>\n<ul>\n<li>看到过有人存到 Github 上 !!!</li>\n<li>DropBox, Google Drive, 百度云等也可以</li>\n<li>iBooks 同步</li>\n<li>移动硬盘不考虑了</li>\n<li><a href=\"http://sspai.com/34743\" rel=\"nofollow\">Resilio Sync</a> 这个看起来也还不错 ~</li>\n</ul>\n<p>不知 V 友们还有什么管理 PDF 的好办法  ~</p>\n<h1>:D</h1>\n</div></div>"], "reply": "17", "tittle": "PDF 如何存储, 管理, 同步 ?", "comment": ["有个程序可以做成电子图书馆，仿百度文档的，但是得转码存数据库", "大的用 dropbox 来保存。小一点的手册直接扔在 evernote 管理，方便检索。", "Calibre + Dropbox", "owncloud-->外挂 google drive", "装脑子里，看了删\r", "\r", "\r", "哈哈，看玩笑，还是百度网盘吧", "存的话 Dropbox 好了。我按「中国图书馆分类法」做了分类，但是没用，里边的一本也没看… _(:з」∠)_\r", "\r", " ", " ", "Calibre + 网盘，另外其中一部分用为知笔记。", "还有大量预计有生之年不会看的，一直就放在网盘里没动过。", "Dropbox 还是不错，就怕明年关门", "Google Play Books", "Evernote 高级版", "我都是放在 Dropbox 里，批注之后会自动同步了而且还有版本记录，也不用担心会丢失。", "如果论文比较多，可以考虑 ", " 支持在线存储 + 多设备同步.", "这个其实小米的 多看阅读 完全符合你的要求.免费的有 10G 空间.谁用谁知道.", "Mac+iOS 用户可以尝试 DEVONthink+Dropbox 同步，日后查询检索之类的也很方便。", "感觉用 zotero+zotfile 应该是很好的一个方案。 zotero 用来管理 pdf 的文献信息， zotfile 可以把 pdf 附件都放在一个制定的目录下，然后推送给平板等设备。不用 zotfile 的话直接用 zotero 的存储，或者支持 webdav 的网盘，像国内的坚果云国外的 box 等。只是在 android 下还没有好用的 zotero 客户端， ios 上可用 papership 。", "其实就是学术文档管理么。。\r", "国内用 notexpress （收费）\r", "不然用 zotero"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>换个节点再发一下以求助。。。(╯﹏╰)\n自己本科毕业后，曾担任文字编辑，后因个人健康及家庭原因，回到了家乡——一个三线小城市，并入职当地一家厂子休养。因一直对写代码仍抱有幻想，于是在厂子里值班休养期间，自学了设备上使用程序的某开发语言。于是闲暇时可以帮开发部门接了点小的需求开发，做了些关于该软件的小修改。\n如今自己被投入运维部门，对一个完成度不太好的系统进行维护……结果是干了大半年的代码维修工工作，主要是自己靠反编译出来的部分代码，猜测业务逻辑，再手动修改数据表等，几乎没有多大进步……\n很惭愧地讲，本科是计算机，但技术有限，当初没能立刻拿到 OFFER ，家中也极力反对自己从事编程相关工作，于是只好从事其他工作。所以，在目前身体在好转之时，希望自己能做点有利于之后在代码这行发展的事情。\n值班时，也曾写了写不少 DEMO 小程序，比如发送 FTP 或者 EMAIL 的辅助程序，转 PDF 或 SWF 的小程序……虽然当初还有点小激动，面对生疏若干年的专业还能把玩两下，但可能在各位眼中这都不算程序吧，都是小把戏。\n所以，到现在自己也只敢说是对代码行业了解甚微，具体下面该干嘛都不太了解，写代码的能力怕是不如一个优秀的本科生，现在可能让搭个简单地 JSP 页面也不那么利索了（倒是基本 SQL 熟练多了）。\n所以想在这里求教各位，如果是练习，该从何入手？或者在过年前准备准备其他地方的面试什么的……（面试什么的可能会让各位大佬见笑了）\n关于兴趣：学生时期因参加过乐高机器人的编程（简直不好意思讲……），也拿过几个奖，所以一直对机器人、人工智能有所兴趣，但深知这不是一个三流大学毕业生靠想就能实现的，于是在本科阶段时曾看了几本相关著作，可实在是连“民科”都不敢自称。\n希望能得到各位的指教，先谢谢了~</p>\n</div></div>"], "reply": "18", "tittle": "刚入 IT 这行（伪），如何寻找下面的发展方向？", "comment": ["这行业，学不会的，做就好了。特别是学校里的技能是一定过时的（但是理论不会）\r", "如果你只是想找这行的工作，出门左转培训班", "转行吧，", "如果真想干，报个培训班吧", "去美帝读个博", "您才是真 IT 啊。", " 首先谢谢收了地板。。。\r", "学校里学的理论，怕是遗忘了不少，现在讲个什么树、图的可能都是捉襟见肘，只能在目前一点一点地实践（维护、填坑）中偶尔顿悟一下，很是惭愧。不知对这些的遗忘，是否会对就业和发展有影响。（感觉有）\r", "培训班以前回家乡时就报过，当初也做了个把网站项目，但是当初也由于身体问题，还没找到 IT 方面工作又歇菜了。。。于是才进了厂子。。。\r", "现在上网看那些相关开发方面的职业需求，总是感觉自己还差不少，以前培训班里速成的那点应该太不够了吧。。。关键是，也不太知道怎么去填补这些不够的（当然如果说要人工智能相关，那就更不知道怎么补了）(╯﹏╰)", " 确有此意啊，但是目前自己的本钱太有限，离招聘需求有差距的，不管什么方向或者岗位，又不太了解怎么补上。。。", " 不会报第二次做做网站的那种培训班吧囧。。。", " 并没有钱或者足够的语言技能，也穷。。。另外话说如果要再报一次培训班，那我就得借钱去报了……_(:з」∠)_ \r", " 怎么敢当。。。怕是到现在连门都没入呢。。。也不知道报培训班，搞几个网页查查数据库那种难道就够吗。。", " 做个简简单单的工作，野心越大，付出越多，得到越少。", " \r", "你先找个培训班的视频看看，觉得适合再报班吧，培训班的课程如果是 Java web 就算了\r", "都是讲 struts2 spring 这些框架（都是业界成熟的技术，完全没必要报班，自学就好），\r", "java web 上课基本上是给你讲 API ，如果你什么都不懂（例如连 HTML 屎什么都不知道的那一类），建议去报个班，如果有基础的话，找个培训班视频 梳理下框架知识就好了，\r", "\r", "开发无非就是两类问题，\r", "一类问题是理解客户的业务需求，并与客户交流 帮助客户找到潜在需求\r", "一类问题是将客户的需求转换成开发方案（前提 对框架熟悉 对编程语言熟悉 对常见的数据结构算法熟悉 ）\r", "\r", "至于你说的图 二叉树 动态规划 之类的，真心没必要去复习了，你上过计算机本科，算法复杂度知道吧？把复杂度背下来，业务编码中用到哪个算法 就去查复杂度，本科计算机书上讲的算法与数据结构，绝大多数 Java 类库都有成熟的实现（ C++有 STL 一般主流语言都有实现的），调接口就行了，实在不行 再去类库看看 那些代码就好了，你要是有时间把这些算法数据结构背下来，还不如去熟悉下业界各个领域开发的主流框架", " 鉴于目前觉得自己还真未曾有方向性地付出过什么，实在不敢就此作罢……于是才在这里向各位大佬讨教的……无法放下执念，但还是谢谢忠告~", " 以前上过 java web 的培训，多多少少学过那些个框架，后来也自己试着写过点小 DEMO 。不过当时也只是懂套用，不懂为啥，更不懂弄成这样的好处。现在隔的时间有点长了，所以有不少遗忘，但大体还是懂的。当然，其实那些学校里学过的东西也是，大多现在只算有个影子。你给的图看了，发现自己以前几乎都只记得零散的关系，受教了。\r", "目前，在做过些所谓的系统运维后，也自以为理解你说的开发涉及的两类问题了，大概一是理顺、深挖“你说的是不是这个意思”，还有“得怎么把这个意思一步步实现”（这段就是涉及自己写代码了吧）。但愿说的在您说的点子上……\r", "自己这里离魔都比较近，所以也在考虑是否一把年纪（笑）了再努把力，找找那边的工作。自己也毕竟离开学校几年了，不算应届生了，唯恐需要的门槛也会相应高出不少……\r", "若是要真正入这行，现在这样肯定是不够的，肯定还是要找空余时间，做点什么。对于主流框架，是跟着视频或文档，复习+学习下，写写 DEMO 就可以了吗？", " \r", "我也离开学校 1 年了，还不是科班毕业，干的也不是互联网 IT ，\r", "我做了几个 demo,也看过很多书，我说的都是自己的见解，\r", "\r", "主流的 java web 的功能需求，只要给我时间，我都能想到开发的思路，代码执行效率也许没别人高\r", "至于底层框架原理 如果你特别在意这些，我觉得大可不必，\r", "框架目的就是为了屏蔽底层细节，为应用开发提供便捷的平台，就像 Effective Java 里面讲的那样，\r", "程序员应该专注于应用程序，而不是底层细节，\r", "\r", "拿 java web 来讲\r", "\r", "servlet 屏蔽了 tcp/ip 协议 http 协议 等细节， servlet 容器 屏蔽了服务器多线程等网路 IO 监听模型等细节，\r", "像 spring 提供对象容器模型（屏蔽了反射技术细节）， Java 本身不需要自己手动回收内存，屏蔽了 JVM GC 等细节\r", "（培训班教 Java 根本就不讲内存回收，因为没必要，开发中，用 Java 就是 快糙狠，如果真的业务的需求连 gc 暂停的那一丁点时间都不放过，那直接上 C++，这种级别的项目，也没培训班出来的兄弟什么事情了）\r", "\r", "像 List Map 等接口就屏蔽了各类常见的算法以及数据结构的细节，你不需要管实现类的细节，只需要按照接口的约定，就能使用业界几十年 由最优秀的算法工程师 以及 专业工程师 调优过的算法库，", " 每个人的选择不一样，祝你好运。"]},
{"content": ["<div class=\"topic_content\">一个接口部署了三台机器， Nginx 做负载均衡，重复请求怎么处理，上 zookeeper ， redis 吗？</div>", "<div class=\"topic_content\">业务是 insert 一条数据比如说订单这样的，重复可能就是前端点得太快造成的，所以基本就是几秒钟时间左右的幂等</div>"], "reply": "30", "tittle": "一秒内的重复请求如何处理", "comment": ["简单但是有很大局限性的方法\r", "\r", "负载均衡改成源地址 Hash ，保证同一来源的请求落到一个后端\r", "\r", "其他的都需要有个", "接上\r", "\r", "其他的基本都需要类锁服务，但是局限性也少了很多。 Redis 就不错，大部分场景也能 Hold 。", "requestID", "我们是用用 redis 做锁的 获取到锁的请求才正常处理  其他的请求直接返回错误", "接口所有操作都是幂等的吗？\r", "幂等的话多次请求并没有关系。", "我觉得 lz 没有表达清楚这个问题，这个请求业务逻辑是什么样的。\r", "\r", "如果是重复的 get 请求最高效的做法是在 nginx 上做合并回源，确保请求同一个资源只有一个请求打到后端，其他请求都要 pending 这个请求的结果", "关键词 惊群问题", " 如果业务是 insert 一条数据，那幂等应该怎么处理？最直白就是一秒的相同请求只执行一个其他都丢弃", "重复请求有问题么？一秒内重复请求和一分钟内重复请求有什么区别呢？楼主还是要把业务逻辑表述清楚", "nginx session sticky 保持会话\r", "iphash 负载策略\r", "requestToken 过滤重复提交", "session 里加 token\r", "具体可以搜 session 重复提交", "重复提交 前台通过 ajax 提交的时候就可以过滤了 jquery 的 ajax 方法有个 gobal 属性建议看看", " +1 ，锁的 key 根据请求参数来定，你有什么特别的实现相互交流交流", " requestToken 过滤重复提交 能否给一个详细的思路", " 数据完整性、安全性等不要依赖前端，必须后端解决。", " @", " 具体的实现过程是怎样的，可否分享一下。", "送佛送到西 ", "requestID 年月日时分秒毫秒微妙纳秒+8 位随机数。", "nginx 可以配置啊 ", "从前端开始处理掉这个问题吧", "这是一个 csrf 的问题啊", "赞同 @", " 观点,这个需要看业务场景。\r", "如果是重试的重复请求,可以通过一个业务 /逻辑唯一 Id 来避免重复提交\r", "还有一种是明显按钮已经灰显了,但是用户通过自己拼的 URL 来强行提交,就把它当做一次正常请求", " 先分析这个过程，因为网络原因，然后前端或者 app 的请求重复了，但是内容一样，所以在请求中增加一个唯一的请求码，然后后台对于记录这个用户的上一次请求码，然后对比，一样就抛弃。先分析原因，再思考解决，然后验证。", "请求带有状态码？能将 session 独立出去在服务器端重新取得状态吗", "弄错了 这个貌似要前段处理", "这种不都是前端控制一下就完事的事情么...\r", "就拿创建订单来说,这个还能加锁?\r", "一个正常的流程就是:用户在购物车点击下单,那么前端应该就把按钮置灰,发送请求,如果请求超时 /失败,就重置按钮状态允许重新下单.\r", "没听说过要在后端做这个请求的去重的...\r", "也没办法判断这个请求是否重复....", "前端在给后端 POST 数据之前，先到后端请求一个 uniqid ， POST 数据时带上这个 uniqid ，后端对于 uniqid 相同的请求只处理一次。\r", "这个机制也可以用来防跨站、防刷", "前端处理下就好了， underscore 都有类似的工具类方法提供，多长时间内的只执行一次的这种", "避免重复请求，貌似只能通过请求 ID 来区分了。\r", "如果是前端的重复点击，那么就要保证前端每次传递同一个请求 ID ；\r", "如果用户不走前端页面请求，直接发 URL 改变对应的 ID ，那么只能从后端处理，后端必须验证该 ID 是否有效。\r", "总结：\r", "最保险的就是请求 ID 由后端产生，后端收到请求时验证一下 ID 是否合法，是否重复。", " +1 ，我们做过一个开放平台，用户下单的流程是： 1 、请求获取订单 id 接口。 2 、带上第一步的订单 id,请求下单接口，"]},
{"content": ["<div class=\"topic_content\"> <a target=\"_blank\" href=\"/t/325814\">/t/325814</a> ，这个里的问题可以说是一个幂等问题吗？生成订单的接口按理说用户请求自然要生成订单啊。能举个非常棒的需要幂等的例子吗？看过一个点赞的例子说点几次都相当于点一次，点多次你是都提示它成功还是提示已经点过了？</div>"], "reply": "11", "tittle": "问问关于幂等的问题", "comment": ["我们说幂等的时候，都有一个隐含前提：\r", "一个消息（或者请求）有一个标识字段类唯一地标识这个请求。\r", "\r", "拿点赞的例子，这个唯一地标识就可以是： 帖子 ID + 点赞人 ID\r", "拿下单的例子，可能就是订单号\r", "\r", "如果没有这个标识，就要想法创造这个标识\r", "\r", "没有标识你来说幂等？天方夜谭啊", "正好我现在正做一个幂等的业务：一个商户接入我们的系统首先要他传一个订单过来，之后我们这边会判断这个订单是否存在，如果不存在就创建该订单，因为这个业务是创建订单之后会有一个 step 状态，第一次创建状态就是 0 也就是新建。如果存在的话就返回该订单所在的 step 状态。之后这个 step 状态会在运营的接入下进行更新，每次商户如果需要查询订单状态的话也会反复请求我这个接口然后返回信息给他，不知道明白了没有，这是我所理解的。", "比如 get 一个静态文件， 比如你点感谢， 就算你手动发 n 次感谢的请求， 也只算一次。", "个人理解幂等是对于只读的资源的请求，无论多少次请求都不会对该资源造成影响，比如 get 。而对于带写操作的请求，比如 post ， put ， delete 都不是幂等的", "从购物车创建订单就可以保证幂等了。\r", "购物车数据提交到服务器保存，创建订单后删除购物车里的相应商品，重复提交就不会产生多个订单。\r", "\r", "post, put, delete 都可以幂等，看你程序是否实现\r", "比如 v2 对某个回复或帖子感谢", " POST 等也有幂等，不管请求 n 次，对应的业务逻辑代码只执行一次", "感谢楼主让我认识了一个新名词\r", "我看成了「关于杨幂的问题」。。。 😄 😄 😄", "幂等。。执行一次，执行多次。效果一样。", "还有一种情况是，幂等是有时效性，各大网站的缓存，就是一定时间内幂等。", "幂等不仅仅是描述事务，还包括行为\r", "比如，按 ID 删除是典型的幂等操作\r", "如果 API 设计为，删除成功返回 true ，记录不存在返回 false\r", "那么这个 API 接口就不是幂等的\r", "幂等的接口要求不管多少次调用，返回状态都无法区分\r", "\r", "所以，防止多次提交和幂等并不完全是一回事，但幂等操作肯定不存在重复提交问题"]},
{"content": ["<div class=\"topic_content\">地址 <a target=\"_blank\" href=\"https://github.com/vfreex/vimrc\" rel=\"nofollow\">https://github.com/vfreex/vimrc</a>\r<br>\r<br>基于 <a target=\"_blank\" href=\"https://github.com/amix/vimrc\" rel=\"nofollow\">https://github.com/amix/vimrc</a> 的 basic 版本精简而成，未修改默认按键和配色方案，方便和自己的 vimrc 集成。采用 vundle 作为插件管理器(基于 git)。\r<br>\r<br>默认安装的插件在 readme.md 里列出了，所有插件未更改默认设置，只在 vimrc 定义了几个 leader 开头的快捷键。\r<br>\r<br>欢迎使用或者提出建议。</div>"], "reply": "3", "tittle": "分享一个 vim 配置文件(for programmers)", "comment": ["简单来说，包含了 Vundle 插件管理、 YCM 语义补全、 ctrlp 模糊查找和 NERDTree 项目窗口这几个核心插件。\r", "另外定义了一些实用的快捷键（基本以<leader>开头，不会覆盖默认按键配置，有一些是继承自 amix 的 vimrc ），例如：:W 以 sudo 命令保存，<leader>pp 切换粘贴模式，<leader>ss 切换拼写检查，<leader>te 在新的 tab 打开文件, <leader>jd 转到符号定义， C+\\,c 调用 cscope 反向查找所有引用等等。", "star 了，晚点看看", "我用的 Fisa vim ，很爽啊。"]},
{"content": ["<div class=\"topic_content\">程序员有必要认真填写测试数据吗? 把测试数据用\"alsdfjalflasf\"这样胡乱填满能不能从侧面体现其代码逻辑清晰与否?</div>"], "reply": "12", "tittle": "程序员应该认真填写测试数据吗?", "comment": ["我觉得应该大致写写，比如用户名，刘翔这种。要不 debug 或者演示的时候， rghhukg 这种第一眼看还要反应一下", "显然应该.\r", "之前看过微信接口取到昵称 null, 原来这个微信名字就是叫 null", "正常写测试应该要准备好 TEST DATA ，然后测试数据应该各种场景都要想到。", "应该； 不能", "哈哈，我一般是 “受了点伤 jfk 是对方狙击手的” 这种就当作测试数据了", "我都是随性来的，有时候会填充些「 asdasdas 」、「按时付款打飞机」这种数据\r", "有时会认真地写「测试数据 1 」这种。", "我是这样的：\r", "\r", "标题：“让世界充满爱” \r", "\r", "描述：“这是一条可爱的文字说明。”\r", "\r", "注释里面一般会写：// 愿女票保佑程序无 bug", "我觉得使用模拟真实数据+测试标识+编号的方式最好", "给你瞧瞧起点的人是怎么测试的， ", "需要准备点正常数据，演示的时候需要；\r", "\r", "然后弄点异常数据，比如各种带符号的、空格的、超长的、什么乱七八糟的。。。\r", "鬼知道你们测试会不会这样搞。。。", "我认为正常和不正常都需要有，空、过短、过长、中文、特殊符号等都有一些。", " 还能从线上搜索到, 哈哈厉害"]},
{"content": ["<div class=\"topic_content\">如题，想实现基本的报名、填写手机号码、名字等基本信息的提交，然后后台可以导出或者查看，直接把链接加到微信公众号里，类似那种朋友圈里的问卷星、微信投票的免费应用。\r<br>\r<br>时间紧迫啊，周一要用， V 友们有好的推荐么？谢谢啦\r<br>\r<br><img src=\"http://ww4.sinaimg.cn/large/0060lm7Tgw1famvmbwqy2j311d0m6ak5.jpg\" class=\"embedded_image\" border=\"0\"> </div>"], "reply": "3", "tittle": "有没有免费的报名管理后台可以用？", "comment": ["金数据？ google form?", " 感谢", "你可以搜索微信号「简单支付」，里面有活动报名的功能，"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>大家好，我这里有两个字符串：</p>\n<p><code>0050D6059167-1-2</code> 和 <code>0050D60df167-12</code></p>\n<p>我现在需要扣取一个子字符串：</p>\n<ol>\n<li>\n<p><code>0050D6059167-1-2</code> ---&gt; <code>0050D6059167-1</code></p>\n</li>\n<li>\n<p><code>0050D60df167-12</code>  ---&gt; <code>0050D60df167</code></p>\n</li>\n</ol>\n<p>也就是说吧最后一个<code>-</code>以及后面的数字给扣掉，扣取前面的部分，这个怎么解呢？谢谢</p>\n<p>编程语言是Java</p>\n</div></div>"], "reply": "6", "tittle": "这个字符串用正则表达式怎么弄？", "comment": ["(.*)-\\d+", "能否用这个  -\\d*$  先匹配 -以及后面的数字     然后在从元字符串里面去掉", "楼上的正解\r", "\r", "这个更直观  ", " 多谢回复，这个方法可以，通过 group(1)就可以了。\r", "\r", " 多谢回复，这个应该可以，我通过下面的方式可以获取了。\r", "\r", " 多谢代码，这是 ruby 的方式吗，语法真是简洁。不过你写的正则那一块我不太懂，那个?=是什么意思啊？\r", "\r", "多谢各位了，我不太懂的原因还是我的 java 正则表达式捕获分组的原理不清楚，我刚才恶补了一下这个 group 分组原理，解决了问题：(.+)+(-.+)， 然后 group(1)就可以了", "js:str.replace(/\\-\\d+$/,'')就这样啊"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我是用 Chrome 的 SwitchyOmega + ss 的方案科学上网，发现一个问题：比如，我今天第一次打开 <a href=\"http://google.com\" rel=\"nofollow\">google.com</a> ，一般是打不开的，需要手动刷新一下页面才能加载出来。随后再访问 google 就顺利打开了。</p>\n<p>大家遇到过这种情况吗？</p>\n</div></div>"], "reply": "26", "tittle": "SwitchyOmega + ss，每天第一次打开被墙页面无法打开，需手动刷新", "comment": ["你 SS 的问题", "一切正常， Shadowsocks for Windows 3.36", "我这里是经常得删掉 cookie 才能重新打开，也不太清楚原因", "以前 goagent 就是这样。可能 dns 解析问题？", "还是路由器直接刷 openwrt ，再配置 ss 舒服", "只用 ss ，不需要 so 一样可以用的啊", "不需要 SwitchyOmega", "可能是 switch 的问题,试试使用第三方代理工具或者直接全局代理", "ss 根本不需要用 SwitchyOmega ，直接能翻", "根本不用，改个 host 多方便，不看 youtube 都不搬梯子。", "之前曾经出现过类似的问题，后来不知道怎么样就好了，可能是换了 SSR 的关系，楼主也可以试一下 SSR 兼容 SS 。", "一切正常呀", "调试办法：\r", "先取消掉 ss 开机启动，然后重启。\r", "新开机后命令行启动 ss ，不要 nohup 后台启动，命令带-v 看输出。\r", "然后打开浏览器，看 ss 输出有没有新连接，从而检查开机后第一次打开浏览器时，浏览器是否对 google 做了请求。\r", "如果做了请求，那就是 ss 的问题，如果没请求，那就是浏览器的问题。", "那个扩展没什么用了", "没出现这个问题，我用的这个。\r", "用 ss 可以不需要 SO. win 下， Linux 下都是如此", "楼上说的不用 switchomega 直接可以用的，这种方式是不是每个请求都得经过 ss ？这样感觉国内网站访问慢很多啊", " PAC", " pac 不用配合 switchomega 能直接在 chrome 上使用吗？", " 可以的", "貌似我用这也有这问题……我用的 ssr ，直接设的系统代理", "我之前 chrome 是这样的 ,但是迷信的尝试 ", "    之后... 解决了...", "遇到过，没解。", "ss 可以不用 switchyOmega 的", "有…\r", "之前没这问题，看到你的帖子后出现了", "看需要\r", "单用 ss,有时候想把某域名走代理就不方便\r", "这个时候 switch 就非常方便了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>虽然不是做前端的，但是 bootstrap 也是做过好几个项目了，过往的用到 bootstrap 的都是直接拿官方的示例代码排列组合，效果就那样，看网上的都挺好看的。</p>\n</div></div>"], "reply": "18", "tittle": "bootstrap 的正确使用方式是怎样的", "comment": ["购买 bootstrap theme", "bootstrap 的 admin dashboard 主题不是一般的多 当然正确方式是购买主题 别人会把 psd 也给你 想切图玩都无所谓\r", "当然前端么 所有的演示站点都等于代码白送", "1. 代码先行，一般开发人员都可以轻易使用 Bootstrap 布局，功能完成后，再添加一些 CSS 美化，前后端通用。\r", "2. 设计先行，现在有大量基于 Bootstrap 的 PS 模板，生成的静态 HTML 兼容 Bootstrap ，前后端通用。\r", "3. 后端管理界面，现在 ThemeForest 上大把，需要小小付费，拿来即用。", "楼上都说得差不多了，只是提一点：不使用 BS 默认的风格，就是正确的使用方式……", "bootstrap theme 才是他的精华…… bootstrap 定好了一套标准让会做的人做，然后成为主题，给不会的人用", "Bootstrap 的精华是布局，不是主题", "通过构建工具 引入 saas 或者 less ，为整站提供各种变量，或者根据需要启用组件，打包。", "…外包万能工具", " 个人粗浅的用法供参考", " 我差不多也是这样做的，先 bootstrap 来一套，然后再上一个自己的 style,覆盖部分默认样式。总感觉还有有点弱的样子", " 从 saas 或者 less 下手，重新编译 bootstrap ，但总感觉出来的效果未必比官方预编译的好，还是不会整界面", "尼玛，以为是 machine learning 的……", "改 less 文件啊，推荐一本书《 Bootstrap 实战》，老外写的", "  bootstrap 本身就是依靠这种变量和 mixin 写出来的，不会存在你说的效果未必比官方的差的问题。修改变量后依靠 gulp 或者 webpack 打包后的 css ，完全不需要再覆盖样式这样冗余的工作，而且重要的是你的整站会随着一起修改。有需求变更，只修改一个变量就好了。\r", "你们没做前端的工程化么", "同请教，之前都是引入 Bootstrap 的 css js ，然后再各种覆盖来的...  比较搓...", "原来是这样，学习了", "面向工资编程：\r", "1.如果工资低的话， 直接覆盖官方样式， 有良心就用官方的生成工具。\r", "2.如果工资高的话， 直接 hack 源码， leer561 已经说了， 可以自定义变量和 mixin 。\r", "3.如果工资更高的话， 可以直接阅读源码， 创建自己的框架轮子。", " 感觉应该是怎么爽怎么来，怎么又成就感怎么来，如果公司有这样的环境当然直接干源码来的境界高的吧，出发嫌工资给低了，故意不给老板整那么好，不然后面各种被逼加班苦的还是自己额"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><strong>记录一些要点，以便于常记起时有据可循！</strong></p>\n<p><a href=\"http://famanoder.com/bokes/56ec35859ce106dc4d7faf8a\" rel=\"nofollow\">回首来时走过的-模块化之路</a>  之前对于自个儿模块化之路的简单回顾，由于杂七杂八的内容太多，属于只可意会型，不便于对前端的模块化进行全面的理解；这几天面试了些前端，发现除了大神来秒杀我之外，大多人对模块化这块都比较陌生，甚至没听说过模块化是个什么玩意儿，那么就有些尴尬了；看看现在三分天下的流行框架： React 、 Angular(2)、 Vue ，他们的最大的共同点就是：模块化、组件化；还有由 Nodejs 衍生而来的各种前端构建工具： Webpack 、 Gulp 、 Systemjs ，使用它们的基础也是模块化、组件化，如果你非要说，你没有模块化、组件化，项目也跑的挺欢，也能用上这些构建工具，那么，只能呵呵了，何必呢？可见，模块化是必须的，无论项目大小，都得好好理解，从而应用到实践中去，一方面提高工作效率，另一方提高自己的前端水平；</p>\n<p>至于模块化的好处，网上各种论调就不多说了，除此之外，更重要的是：在模块化的基础上形成一种团队成员间的默契化规范，形成团队内的私有仓库，统一管理，达到像后端调用 package 一样自然而然的调用前端模块的目的；</p>\n<p><strong>一切源自 CommonJS ：</strong></p>\n<p>不要怕这又是个什么框架要去花时间学习， CommonJS 是 JS 的模块化规范，由于 JS 的历史原因，起初并没有模块化之说，之后 JS 成为了浏览器端的事实标准，地位越来越重要， CommonJS 规范就是为了解决这个问题而提出的，并希望 JS 不仅仅运行于浏览器端，而是任何地方；感觉很牛逼的样子！然后， Nodejs 在服务端实现了 CommonJS 规范，从而将 JS 从浏览器的小环境拉到了前后端通行的大环境，丑小鸭终于变白天鹅了！</p>\n<p>按照 CommonJS 规范，文件即模块，使用 require 引用和加载模块， exports 定义和导出模块， module 标识模块，使用 require 时需要去读取并执行该文件，然后返回 exports 导出的内容，由于模块的读取执行是同步的文件操作，所以 CommonJS 只能在服务端由 Nodejs 发扬光大， Nodejs 的模块化可以看看这里：<a href=\"http://famanoder.com/bokes/568bf01d7301c50815281e23\" rel=\"nofollow\">Browserify 让你的 Javascript 游走于前后端</a>；但是在浏览器端，这种同步操作并不适用，至少会很耗时，阻塞后续代码的运行；从而在浏览器端由 CommonJS 衍生出两大分支： AMD （异步模块定义）和 CMD （通用模块定义）；</p>\n<p><strong>AMD （异步模块定义）：</strong></p>\n<p>AMD 的代表是 RequireJS ，通过 define(id?, dependencies?, factory)来定义模块， require([dependencies], function(){})来调用模块，使用提前异步加载依赖模块的方式，模块加载完毕后执行回调函数，这里要好好理解 JS 的异步机制，不可按同步顺序执行的思维去理解，多个文件异步并行加载，哪个先执行完不是你按照加载顺序可预料到的，而是等所有依赖执行完毕，最后一并回调结果；</p>\n<p><strong>CMD （通用模块定义）：</strong></p>\n<p>CMD 的代表是 SeaJS ，与 RequireJS 定义和加载模块的方式略有不同，同样可以通过 define(id?, dependencies?, factory)定义模块，但是 SeaJS 是采用的就近依赖的方式来加载模块，一般不在 dependencies 里依赖模块，而是统一写法： define(function(require, exports, module){})，在 factory 里就近加载依赖模块，由 seajs.use([dependencies],function(mod,[mod]){})来使用模块；本质上也是异步的加载模块，只是和 RequireJS 相比加载和执行的时机不一样罢了；</p>\n<p>相比来说， Seajs 和 Requirejs 都是很不错的前端模块化组织方案，各有千秋； Requirejs 要等到所有前置依赖加载并执行完毕，再回调主要的代码逻辑，如果非要说有所欠缺，就得在前置依赖那里做优化了，但大致上是很流畅的； Seajs 只是将依赖模块预先加载并不执行，在需要时就近使用，这时就可能也许会出现延迟的现象；</p>\n<p>关于 Seajs 的简单理解：</p>\n<p><a href=\"http://famanoder.com/bokes/5741a8121496267822b0574a\" rel=\"nofollow\">好好的 Seajs ，说不用就不用了</a></p>\n<p><a href=\"http://famanoder.com/bokes/5675cf20a51cc4280d320a8b\" rel=\"nofollow\">好好的用好 seajs 吧！</a></p>\n<p><strong>工具是非常重要的生产力：</strong></p>\n<p>虽然浏览器端流行的模块化规范是 AMD 和 CMD ，但是借助工具的力量，我们依然可以在浏览器端模拟 CommonJS 规范，比如借助 Gulp 、 Webpack 之类的工具，我们在开发环境依然可以像写 Nodejs 一样写前端的 JS 代码，由工具打包成浏览器可运行的 JS ，同样，异步的调用代码块也是可行的；</p>\n<p><strong>UMD （通用模块规范）：</strong></p>\n<p>现在 JS 已经可以通行前后端了，那么很大程度上一个 JS 模块是既可以在浏览器端运行，同时也能在服务端跑了， UMD 方案即是对 AMD 和 CommonJS 规范的整合，实现对 JS 模块化的跨平台；像下面这个鬼样子：</p>\n<pre><code>(function(root, factory){\nif(typeof define ==='function'&amp;&amp; define.amd){\n// AMD\ndefine(['jquery'], factory);\n}elseif(typeof exports ==='object'){\n// Node, CommonJS 之类的\nmodule.exports = factory(require('jquery'));\n}else{\n// 浏览器全局变量(root 即 window)\nroot.returnExports = factory(root.jQuery);\n}\n}(this,function($){\n// 方法\nfunction myFunc(){};\n// 暴露公共方法\nreturn myFunc;\n}));\n</code></pre>\n<p><strong>ES6 的模块化：</strong></p>\n<p>ES6 作为 JavaScript 新的标准，自带了模块化的 buff ，通过 import 和 export 导入导出模块；基本思想与 CMD 、 AMD 差不多，只是多了更多语法糖式的东西，毕竟属于原生的支持，当然更加好用和易于理解；由于当前的浏览器环境，要想安心的使用，还是得借助工具的力量进行转换；</p>\n<p>总之，前端的模块化是必须的！不能安于现状，即便随便弄两下也能运行；很多时候静止也是一种后退，因为太多大神还比我们努力！</p>\n<p>原文来自：花满楼（<a href=\"http://famanoder.com\" rel=\"nofollow\">http://famanoder.com</a>）</p>\n</div></div>"], "reply": "2", "tittle": "前端各种模块化规范常回顾", "comment": ["很不错，希望能看到 OP 延申讨论至 ES6 的 import export 。以及 module bundler 的应用，例如 webpack 和 browserify", " 可以到我站点看看，有些简单的总结\r"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><strong>我已沦为 IE 狗！！！</strong></p>\n<p>从 9 月份一开始，新项目正式启动，产品以客户端的形式发布，<a href=\"http://%E7%9B%AE%E5%89%8D%E7%94%A8%E7%9A%84%E6%98%AF.NET\" rel=\"nofollow\">目前用的是.NET</a> 的 WebBrowser 内嵌网页的形式开发，对于后端来说，一切都是那么自然、简单；可对于前端来说，彻底将我带入到了 IE 的黑洞，自此万劫不复！说实话，我内心无比鄙视这个 WebBrowser ，因为 windows 绑定了 IE ， WebBrowser 默认使用 IE 内核，按理说现在 win7 及以上系统居多，所以这个内核怎么也是 IE9+居多才对啊，可恶的是，众多系统都是重装的非正版阉割后的系统，可恶的是， WebBrowser 在这些系统哪怕是装的 win7 、 IE11 都调的是 IE7 ，可恶的是程序对其不可控！可恶的是这个调用的 IE7 与浏览器的 IE7 还不太一样，我叫它非 7 非 8 ，有时我在 IE7 浏览器里看到一个样子，到了黑壳子里弹出检测结果是 IE7 ，样子居然和浏览器上不一样，完全（想骂人。。。）不在套路上！而且没有控制台，任意一个异常，无论是否影响程序，都会弹出一个讨人厌的脚本错误的提示框！由于我在浏览器上调试和开发的，所以一开始并不知道会有这些问题，即便当时我兼容到了 IE7 ，到了壳子里面又是一番乌七八糟的问题！当时每天下班回家躺在床上，我都在怀疑自己的前端之路是不是走进了一条死胡同，完全看不到光，说好的炫酷呢，说好的大前端呢？尼玛这都什么鬼？</p>\n<p>欣慰的是后端同学在积极研究怎么切换到 webkit 的壳子，基于一些不可预知的问题，以及项目催的太紧，到目前为止，我依然天天面对着 IE7891011 。。。。。不要拦我。。。让我哭会儿。。。</p>\n<p>话说还是要做个坚强的孩子！自己选择的路，再苦再累也要咬牙走完呀；一方面，兼容问题是前端不可避免的问题；另一方面，既然眼下没有更好的方案，只有靠自己一步步走稳脚下的路了；</p>\n<p>皇天不负苦心人，终于让我磨出了一个 ErrorInspector 模块！</p>\n<p>基于以上可恶的让人怀疑人生的问题，首先解决以下问题：</p>\n<p>1 、兼容到 IE7 ；</p>\n<p>2 、异常的反馈与追踪（支持跨域）；</p>\n<p>3 、屏蔽掉那个讨人厌的脚本错误提示框；</p>\n<p>4 、要跨终端，比如那个丑的不要的 IE 壳子，不可调试；</p>\n<p>5 、错误实时上报并通知和展示；</p>\n<p>6 、一并追踪与后端交互的错误，比如： 500 、 404 ，把 Jquery 的 ajax 拉进来；</p>\n<p>7 、包装 try_catch ，多用 try_catch ；</p>\n<p>由于要兼容到 IE7 ，那么基础库用 Jquery 肯定最好了，加上自己平时造的一些模块和组件以及 Jquery 的插件，基本够开发用了；可怜的我再次与牛逼的 React 、 Angular 擦肩而过了；现在以 Nodejs 的模块化方式开发，用 webpack 打包合并，目前感觉还凑合；</p>\n<p>最初的想法是，通过 window.onerror 和 try_catch 捕获并上报错误到一个独立的错误收集站点，不需要后端配合，自己用 Express 造一个简单的站点就是，通过 H5 的 webSocket 和 Node 的 <a href=\"http://Socket.io\" rel=\"nofollow\">Socket.io</a> 实时响应上报的错误，如果已打开浏览器端无需刷新即可收到通知，或者直接发送邮件提示，达到跨终端实时追踪上报；如果可以的话，在 Web 上可以做更多工作，比如，图形化分析和展示，常见错误的解决方法的预测和提示，如果是线上收集站点还可以对错误极其解决方法做分类收集，供浏览者参考；总之， face to error,just do it !</p>\n<p>因为问题最终上报到我这，所以就不存在浏览器兼容问题了，当然选最好的谷歌了， BSIE ！！！；没做太多优化，第一版错误反馈展示的页面大概是这个傻样子：</p>\n<p><img alt=\"图片描述\" src=\"http://img.mukewang.com/583a3d410001389e06340403.png\"></p>\n<p>当然，图片里是测试的结果，每条展开有更多错误的详情，包括错误引发的文件地址、行号、错误类型、浏览器版本、时间、所在页面、触发节点等；实际发现， window.onerror 捕获的错误并不总是很详细，最好是多用包装好的 try_catch 去主动上报，才会比较容易定位错误源，多用 try_catch 是个好习惯；因为难免存在跨域的问题，默认使用 new Image 的方式 GET 数据，当然，这不是必须的，支持自定义上报地址和上报方法；至于屏蔽掉那个讨人厌的脚本错误提示框，其实很简单，在 window.onerror 最后 return true 就是的，但是在谷歌里就会屏蔽掉控制台输出的内容，最好在线上环境使用，毕竟本地开发还得在控制台里调试；</p>\n<p>由于 Jquery 的 Ajax 使用特别灵活，所以做好全局去捕获 Ajax 与后端交互的错误；看看 Jquery 的 Ajax 常见用法：</p>\n<pre><code>// 以 GET 为例\n\n$.ajax({\n\turl:'',\n\tsuccess:function(data){},\n\terror:function(){}\n});\n$.get(url,data,function(data){});\n$.get(url,data).success(function(data){}).error(function(){});\n$.get(url,data).then(function(data){},function(err){});\n\n// ...\n</code></pre>\n<p>这么多种用法，每次都去捕获 error 事件，然后在里面上报，肯定是相当不靠谱的； Jquery 是很好用的，可以通过设置全局的 error 事件来捕获上面各种方式下的错误，爽不爽？比如这样：</p>\n<pre><code>$.ajaxSetup({\n    timeout:setAjax.$.timeout,\n    error: function(xhr){\n        setTimeout(function () {\n            util.getArgType(setAjax.$.onError)=='function'?setAjax.$.onError(xhr):alert(xhr.status+'，'+xhr.statusText);\n        }, 1);\t\t\t\t\t\n    }\n});\n</code></pre>\n<p>不过这种错误一般后端的可能性大些，前端常见的就是这里的参数没传好，引发的后端错误，当然可以选择屏蔽不上报，或简单的提示个服务器异常就行了；</p>\n<p>ErrorInspector 的用法：</p>\n<p>1 、最好放在各大 library 的后面，你写的 JS 前面，因为框架本身一般不会引发错误，主要是监控自己写的代码可能存在的未预知的异常；</p>\n<p>2 、初始化配置：</p>\n<pre><code>ErrorInspector.Config={\n\turl:'http://localhost:2333/ErrorInspector/xiaofeng',   //上报地址\n\tqs:{\n\t\tid:location.host,            //默认以当前域为 id\n\t\tpage:location.host+location.pathname,//错误页面地址\n\t\tfrom:Url,                    //错误来源的地址\n\t\trow:Number,                  //错误行号\n\t\tcol:Number,                  //错误列号\n\t\tmsg:String,                  //错误详情\n\t\tbrowser:util.Browser,        //浏览器类型及版本，默认几大主流浏览器，后续完善\n\t\ttime:util.fmtTime(),         //错误触发的时间\n\t\tinspector:String,            //上报者 window|user|log......\n\t\t// ...其他参数\n\t\text:'hufeng'                 //扩展的参数\n\t},\n\t$:{\n\t\ttimeout:Number,              //Jquery 的 Ajax 超时设置，会触发 onError\n\t\tonError:function(xhr){}      //全局的 Jquery 的 Ajax 错误捕获\n\t},\n        submit:function(data){},         //自定义上报方式，回调了上报内容     \n\tIgnoreFromJSPattern:/reg/ig,     //屏蔽错误来源的地址，比如第三方的广告\n\tIgnoreMsgPattern:/reg/ig,        //屏蔽上报的消息内容，比如没太大意义的 script.error\n\tIgnoreBrowserError:0|1           //是否屏蔽控制台，主要屏蔽掉那个 IE 上讨厌的弹框\n}\n</code></pre>\n<p>ErrorInspector.Config.qs 里的参数一般无需过问，错误触发时会自己收集上报；</p>\n<p>3 、 Tryit(function(report,log){});</p>\n<p>包装好的 try_catch ，回调的 ErrorInspector.report 和 ErrorInspector.log 其实大同小异，除了 try_catch 里的上报外，可以用回调值继续自定义上报；一般用这个函数包装代码块；</p>\n<p>4 、 ErrorInspector.report({name:value});</p>\n<p>主动上报；</p>\n<p>5 、 ErrorInspector.log;</p>\n<p>模拟简单的 console.log ，其实更像 alert ，可以充当统计代码用，或许还需改进；</p>\n<p>6 、后端使用 Express 和 <a href=\"http://Socket.io\" rel=\"nofollow\">Socket.io</a> ，玩过 H5 的 webSocket 的同学立马就懂了，不解释；</p>\n<p>这些天被 IE 忙活坏了，例子未整理，唉，其实 IE 并非那么可怕！ ErrorInspector.js 仅作分享，能力有限，欢迎改进！ github 地址： <a href=\"https://github.com/famanoder/face2error/blob/master/public/ErrorInspector.js\" rel=\"nofollow\">https://github.com/famanoder/face2error/blob/master/public/ErrorInspector.js</a></p>\n<p>如果你已在路上，就勇敢的向前吧！</p>\n<p>原文来自：<a href=\"http://famanoder.com/bokes/5839e76bd37f5e680891fb47\" rel=\"nofollow\">http://famanoder.com/bokes/5839e76bd37f5e680891fb47</a></p>\n</div></div>"], "reply": "11", "tittle": "前端异常 — 跨终端实时追踪", "comment": ["厉害了", "终端报错能实时追踪啊，这个不错", "感觉这个非常有用啊。", "哎，心疼 LZ...\r", "\r", "咋不一上来就用 eletron 呢", "node-webkit ， nwjs ， Electron ，选择这么多，偏偏要自虐进 ie 的坑。。。", "判断不到那么精确吧， js 都是经过压缩过的", "你应该使用 sentry", "这时候不应该上 ", " 么……", " 后端在研究中", " 所以一般 Tryit 或 report 主动上报", " 后端是.NET ，我做不了主啊"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我用的是 Personal Access Token 的方式登录，但无论是 Base Auth 还是其它登录方式都无法连上（帐号密码可没错， token 也都没错）\n<img alt=\"Alt text\" src=\"http://d.pr/i/ENG2+\"></p>\n<p>tower 帐号界面始终显示鉴权失败\n<img alt=\"Alt text\" src=\"http://d.pr/i/3uLp+\"></p>\n<p>github 设置里一直显示\n<img alt=\"Alt text\" src=\"http://d.pr/i/KOM0+\"></p>\n</div></div>"], "reply": "1", "tittle": "为毛我的 Tower 连不上我的 github 帐号", "comment": ["那就手动拉呗。。\r", "\r", "    $ git pull"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>欢迎大家访问：</p>\n<p><a href=\"http://github.rdnote.cn/\" rel=\"nofollow\">http://github.rdnote.cn/</a></p>\n<p>花了几天，撸的一个寻找 GitHub 的优质项目的网站，提前把 star 比较多的项目爬了下来。<br>\n同时希望大家给没打标签的项目打一下标签，来告知该项目是干什么的</p>\n<p>也希望大家点击右上角的提交项目，来提交大家收藏的 GitHub 优质项目，以分享给大家。<br>\n目前我只分了 12 类。以后会分更多的类别来区分项目。</p>\n<p>谢谢大家了</p>\n</div></div>"], "reply": "8", "tittle": "欢迎大家访问 GitHub 趋势网站", "comment": ["欢迎大家访问啊", "这个是干嘛的 ", " 你觉得那个很方便么？\r", "而且看的也不全", "没什么没有 ", " 已经加上了", "不错哈，收藏了~~~", "mark 了", " github trending 里周纪录一直看不到了\r", "\r", " lz ", " 这类 awesome 麻烦另外分个类剔出 swift 这些本来的列表（至少伪造了 repo 的 repository-lang-stats ）"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><hr>\n<p><a href=\"http://www.hello1010.com/api-sign/?ADTAG=h1\" rel=\"nofollow\">点击访问原文</a>\n您还可以<a href=\"http://shang.qq.com/wpa/qunwpa?idkey=eeeba45ca58ef89bd5f528eebd48d287010204522f428fa6c748eac20f162288\" rel=\"nofollow\">加入</a>全栈技术交流群（ QQ 群号： 254842154 ）</p>\n<hr>\n<p>系统从外部获取数据时，通常采用 API 接口调用的方式来实现。请求方和 接口提供方之间的通信过程，有这几个问题需要考虑：</p>\n<p>1 、请求参数是否被篡改；</p>\n<p>2 、请求来源是否合法；\n*3 、请求是否具有唯一性。</p>\n<p>今天跟大家探讨一下主流的通信安全解决方案。</p>\n<p><strong>参数签名方式</strong></p>\n<p>这种方式是主流。它要求调用方按照约定好的算法生成签名字符串，作为请求的一部分，接口提供方验算签名即可知是否合法。步骤通常如下：</p>\n<p>①接口提供方给出 appid 和 appsecret</p>\n<p>②调用方根据 appid 和 appsecret 以及请求参数，按照一定算法生成签名 sign</p>\n<p>③接口提供方验证签名</p>\n<p>生成签名的步骤如下：</p>\n<p>①将所有业务请求参数按字母先后顺序排序</p>\n<p>②参数名称和参数值链接成一个字符串 A</p>\n<p>③在字符串 A 的首尾加上 appsecret 组成一个新字符串 B</p>\n<p>④对字符串进行 md5 得到签名 sign</p>\n<p>假设请求的参数为： f=1,b=23,k=33 ，排序后为 b=23,f=1,k=33 ，参数名和参数值链接后为 b23f1k33 ，首尾加上 appsecret 后 md5 ：\nmd5(secretkey1value1key2value2...secret)。</p>\n<p>签名的 php 版本实现：</p>\n<pre><code>\tpublic static function sign($appSecret, $params) {\n\tif (!is_array($params)) \n\t\t$params = array();\n\n\tksort($params);\n\t$text = '';\n\tforeach ($params as $k =&gt; $v) {\n\t\t$text .= $k . $v;\n\t}\n\n\treturn md5($appSecret . $text . $appSecret);\n}\n</code></pre>\n<p>接口调用方的请求地址类似于：</p>\n<pre><code>/api/?f=1&amp;b=23&amp;k=33&amp;sign=signValue\n</code></pre>\n<p>以上签名方法安全有效 地解决了参数被篡改和身份验证的问题，如果参数被篡改，没事，因为别人无法知道 appsecret ，也就无法重新生成新的 sign 。</p>\n<p>这里使用了 md5 的算法进行签名，也可以自行选择其他签名方式，例如 RSA ， SHA 等。</p>\n<p>另外，多说一句，微信公众号开发时，<a href=\"http://mp.weixin.qq.com/wiki/8/f9a0b8382e0b77d87b3bcc1ce6fbc104.html\" rel=\"nofollow\">验证服务器地址的有效性</a>也采用了类似的方法，只是生成签名的方法不一样。</p>\n<p><strong>请求唯一性保证</strong></p>\n<p>md5 签名方法可以保证来源及请求参数的合法性，但是请求链接一旦泄露，可以反复请求，对于某些拉取数据的接口来说并不是一件好事，相当于是泄露了数据。</p>\n<p>在请求中带上时间戳，并且把时间戳也作为签名的一部分，在接口提供方对时间戳进行验证，只允许一定时间范围内的请求，例如 1 分钟。因为请求方和接口提供方的服务器可能存在一定的时间误差，建议时间戳误差在 5 分钟内比较合适。允许的时间误差越大，链接的有效期就越长，请求唯一性的保证就越弱。所以需要在两者之间衡量。</p>\n<p><strong>秘钥的保存</strong></p>\n<p>在签名的过程中，起到决定性作用之一的是 appsecret ，因此如何保存成为关键。我们分类讨论。</p>\n<p>接口调用方的代码跑在服务器的情况比较好办，除非服务器被攻陷，否则外接无法知道 appsecret ，当然，要注意不能往日志里写入 appsecret 的值，其他敏感值也禁止写入日志，如账号密码等信息。</p>\n<p>假如是客户端请求接口，就需要多想一步了。假如把 appsecret 硬编码到客户端，会有反编译的风险，特别是 android 。可以在客户端登陆验证成功后，返回给客户端的信息中带上 appsecret(当然，返回的数据也可能被拦截，真是防不胜防啊。。。)。特别说明一下，在 android 开发中，假如硬要把 appsecret 硬编码，建议把 appsecret 放到 NDK 中编译成 so 文件， app 启动后去读取。</p>\n<p><strong>TOTP ： Time-based One-time Password Algorithm （基于时间的一次性密码算法）</strong></p>\n<p>在一些小型项目中，可能不需要复杂的签名校验，只需要 做调用方的身份验证。<a href=\"https://en.wikipedia.org/wiki/Time-based_One-time_Password_Algorithm\" rel=\"nofollow\">TOTP</a>(<a href=\"http://tools.ietf.org/html/rfc6238\" rel=\"nofollow\">rfc6238</a>)即可满足。</p>\n<p>TOTP 是基于时间的一次性算法，客户端和服务器端约定秘钥，加入时间作为运算因子得到一个 6 位数字。客户端请求服务端时生成一个 6 位数字，服务端使用相同算法验证这个 6 位数字是否合法。</p>\n<p>下面再展开一下讨论，跟本文讨论的主题关系不大。</p>\n<p>TOTP 允许 客户端和服务器端存在时间误差，如口令在 N 分钟内有效。给出一下源码供大家参考：</p>\n<ul>\n<li><a href=\"https://github.com/PHPGangsta/GoogleAuthenticator/\" rel=\"nofollow\">服务器端的 php 实现</a></li>\n<li><a href=\"https://github.com/google/google-authenticator\" rel=\"nofollow\">android ， ios ，黑莓客户端端的实现</a></li>\n<li><a href=\"https://github.com/google/google-authenticator-android\" rel=\"nofollow\">android app 动态口令生成器</a></li>\n</ul>\n<p>与 TOTP 类似的还有 <a href=\"https://en.wikipedia.org/wiki/Htop\" rel=\"nofollow\">HTOP</a>，它是基于次数的验证算法。这里不展开讨论。</p>\n<p><img alt=\"TOTP 流程\" src=\"http://upload-images.jianshu.io/upload_images/157823-7eb6f772f636588e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p>基于 TOTP 还有很多应用，例如动态的登录口令。用户登录时，除了需要输入设置的密码外，还需要输入动态密码，每个用户的秘钥都不一样，用户的手机端安装一个 app 即可实现，动态口令每 N 分钟变化一次。 android 客户端在各大应用市场搜索 <code>google-authenticator</code>，如 <a href=\"http://shouji.baidu.com/software/796992058.html\" rel=\"nofollow\">百度应用市场</a>， ios 客户端在 appstore 也可搜索得到。下面给出部分下载链接：</p>\n<ul>\n<li><a href=\"https://www.microsoft.com/zh-cn/store/apps/%E9%AA%8C%E8%AF%81%E5%99%A8/9wzdncrfj3rj\" rel=\"nofollow\">Windows phone</a></li>\n<li><a href=\"http://gregstoll.dyndns.org/gauth/\" rel=\"nofollow\">WebOS</a></li>\n</ul>\n<p>支付宝、 QQ 令牌、银行客户端等这些手机客户端中也有类似的应用，在验证密码之后会多出一道动态口令的验证，他们使用的方案都类似于 google-authenticator 。</p>\n<p>大公司的运维人员，甚至是所有员工登录内部 OA 系统（单点登录），都需要 PIN+令牌码的双重验证（ PIN 是自行设置的固定密码，令牌码则是动态口令码），他们通常使用 RSA SecurID 双因素动态口令身份认证解决方案。</p>\n<hr>\n<p><a href=\"http://www.hello1010.com/api-sign/?ADTAG=h1\" rel=\"nofollow\">点击访问原文</a>\n您还可以<a href=\"http://shang.qq.com/wpa/qunwpa?idkey=eeeba45ca58ef89bd5f528eebd48d287010204522f428fa6c748eac20f162288\" rel=\"nofollow\">加入</a>全栈技术交流群（ QQ 群号： 254842154 ）</p>\n<hr>\n<p><img alt=\"SecureID_token\" src=\"http://upload-images.jianshu.io/upload_images/157823-19e09e5681936bc2.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n</div></div>"], "reply": "24", "tittle": "API 接口签名验证", "comment": ["secret key 编译进 so 里也可以逆出来，不知道有没有更好的方案来保存 secret key 。", "最近逆了二三十个 App ，全都是这种签名套路，签名算法写到 so 里然后加固下会安全点,  另外签名的时候最好不要用常见的 md5 ， aes ， sha1 ， rsa 之类的，代码特征比较明显，容易猜到", "实际上，如果考虑到通信双方的互信问题， RSA+SSL 才是更好的解决办法， RSA 的私钥是由通信双方各自保存，绝不能泄漏给第三方。缺点是 RSA 的消耗实在是太高了", " \"签名的时候最好不要用常见的 md5 ， aes ， sha1 ， rsa 之类\", 对这个有点疑问,你的意思是自己造一个加密算法? 以前 V2EX 里曾经有帖子讨论这个自己造一个加密算法是否更安全,结论是更不安全.", " 安全不安全是相对的，也许自己造的算法不完备，但是被别人一眼看出你在用 md5 和被别人跟踪了两个小时代码才逆出来你这个不完备的方案哪个更好呢", "太实用了", "mark", "首先，理论上密钥就不应该保存在客户端。\r", "然后，你自己造签名算法也没用，你总要在客户端保存密钥并且附带签名算法，我直接调你的库的可以了。", " 我当年在业余时间做过 12306 的抢票软件， 12306 的 web 端在提交订单时就附带签名信息，然而并没有什么用，我直接用调试器追踪到 js 签名函数，把整个函数用换成 C 重新实现了一遍，签名就过掉了。根本不用研究它怎么算的，直接无脑做语言转译就行。就算不能转译，我还可以加一个互操作层直接调它的函数。\r", "另外我当年移植安卓版的百度贴吧客户端到 windows phone 也是这么做的，", " 这个是无解的，因为密钥和签名算法都已经公开。", "好文章", " 用自己的算法伪造成 md5 格式", "很实用，文章中说到的，工作中基本都接触过，坐等大神给出更好的客户端保存“ appsecret ” 的方式……", " 签名算法不是都公开的吗?例如 amazon s3,weixin 等的. 要保密的是 app secrect key 吧", "防篡改用签名\r", "防伪造用 https", "  前端的签名岂不是会别人看到算法？你是怎么弄的", " 恩，只是提高了门槛而已。更好的方式就是每次在登录的时候拿到 secretkey ，每次都不一样。", " 主要目的是提高别人破解你的成本，不存在绝对的安全。", " 反正就是给攻击者挖坑就行了，别人跳的过去跳不过去没法定论，但是多挖坑准没错", "不错", " 密钥不保存在客户端，是每次领一个么？这样也能被逆出来的吧。", " 但是你怎么领呢？我也可以拿到你领密钥的 API 自己去领啊，关键你没法对客户程序鉴权。", "如果是前端调用 api 有什么好的签名方法吗", " 那就是用户就是破解者，然后可以根据特征封用户了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我们是谁：\n链家网是集房源信息搜索、产品研发、大数据处理、服务标准建立为一体的以数据驱动的全价值链房产服务平台。链家网的前身为链家在线，成立于 2010 年并于 2014 年正式更名为链家网。目前，链家网线上房源已覆盖北京、上海、广州、深圳、天津、成都、青岛、重庆、大连等 36 个地区。在房产交易服务领域，链家网旨在通过“链接人与服务”不断提高服务效率、提升服务体验，为用户提供更安全、更便捷、更舒心的综合房产服务，致力于实现推动行业进步，让房屋交易不再难的企业愿景。</p>\n<p>我们需要谁：</p>\n<p>工作职责\n1 、<a href=\"http://%E8%B4%9F%E8%B4%A3%E9%93%BE%E5%AE%B6.com\" rel=\"nofollow\">负责链家.com</a> 房产 O2O 产品的设计研发；\n2 、<a href=\"http://%E8%B4%9F%E8%B4%A3%E9%93%BE%E5%AE%B6.com\" rel=\"nofollow\">负责链家.com</a> 整体高扩展性架构设计，找出系统瓶颈，改进系统算法，提高系统性能；\n3 、 参与重大项目的技术方案设计及技术评审。</p>\n<p>任职要求\n1 、 三年以上 web 系统设计开发经验，熟悉常用设计模式；\n2 、精通 PHP ，熟悉 PHP 常用框架；\n3 、优秀的数据库设计优化能力，至少精通一种数据库应用，精通 mysql 者优先；\n4 、 熟悉 linux ，能熟练应用一门或几门以下语言： C/C++/shell/python/java/javascript 等；\n5 、 扎实的计算机基础，熟悉数据结构，有较强的算法设计能力；\n6 、学习能力强，有较好的沟通能力，能迅速融入团队；\n7 、较强的逻辑思维能力，具有较强产品意识者优先；\n8 、有项目管理经验者优先。</p>\n<p>有意向可投递简历至： liweiyun@lianjia.com(注明来自 V2EX)\n链家网的伙伴期待您的加入~</p>\n</div></div>"], "reply": "1", "tittle": "[链家网招聘] PHP/资深 PHP", "comment": ["鸟哥加入后连 php 大会都链家赞助了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"slider\" src=\"https://github.com/aleen42/PersonalWiki/raw/master/Programming/JavaScript/Framework/react/slider/preview.png\"></p>\n<p>该 React 组件主要是用于 slider bar ，及左右轮换。</p>\n<p>二话不说，先看 Demo: <a href=\"http://codepen.io/aleen42/pen/LbrqBO/\" rel=\"nofollow\">http://codepen.io/aleen42/pen/LbrqBO/</a></p>\n<p>若喜欢，继续看怎么去集成： <a href=\"https://github.com/aleen42/PersonalWiki/blob/master/Programming/JavaScript/Framework/react/slider/slider.md\" rel=\"nofollow\">https://github.com/aleen42/PersonalWiki/blob/master/Programming/JavaScript/Framework/react/slider/slider.md</a></p>\n<p>若是集成过程中有任何的疑惑，请不用怕。直接 issue 我的项目，楼主会在一天内回答你的问题。 Thx 🍕</p>\n</div></div>"], "reply": "6", "tittle": "React 的童鞋看过来，做了个 Slider 组件", "comment": ["楼主你这么强👍👍👍👍👍👍👍👍，大家知道吗", " 💀渣渣一枚", "为什么不用现成的呢？ ", " 我喜歡自己設計，嘻嘻", " 而且，從實踐中學習才是可貴的", "恩，是的。写一遍，技术完全学会，攒！"]},
{"content": ["<div class=\"topic_content\">講真，大學的時候這門課我就沒有學好。看到數據通路圖什麼的就頭大。請問你們是怎麼學的呢？</div>"], "reply": "6", "tittle": "你們是怎麼學習計算機組成的？", "comment": ["明明是剛剛發的，為什麼 Android 客戶端的列表頁面顯示四個小時前。帖子裡面顯示正常。", " 被降权了", "数字电路", " 降權是什麼意思咧？為什麼會被降權咧？", "去搞块板子，写个垃圾 CPU 核烧进去玩玩，你就啥都明白了。\r", "很多组成原理的实验书都有介绍，你可以找本看看。", " 谢谢，有时间我找找资料试一试。"]},
{"content": ["<div class=\"topic_content\">应该说是跨度比较大的转行.  技术转项目经理.产品经理这些应该还跟技术现在的技术沾边,这类不算.</div>"], "reply": "53", "tittle": "有转行的程序员吗?都是转到哪个行业呢?你们现在过的怎样?\r\nPS:我这里指的转行是脱离互联网行业, 而不是程序员转产品经理, 转产品岗这类.", "comment": ["转行的还来 V2EX ，楼主脑袋秀到了", "你应该去逼乎", " 转行的就不能来 V2EX? V2EX 就全是程序员?", "个人觉得互联网行业范围挺大的， LZ 说的行业是指转到传统行业么", "见过转厨师的，完全看个人爱好以及家庭实力", "以前有不少同事转行了，成功的少，河北的一个回家开超市，生意不好后来又回北京写代码，一个同事去深圳做电子产品的，一年厂倒闭，欠债跑路，又回公司写代码了，只有一个回去做生意失败了，后来回到北京弄了家游戏公司发起来了，到底还是本行，程序员也有不少认不清自己的，认为写代码是委屈了自己，以为换个行业多舒坦，到最后发现其他行业也不好混还是写代码更舒服", "如果可以，我想转行去做房东", " 哈哈，有这家底的，也不至于去写代码啊", "转行到事业单位，过几天就要上班了", "教书，上课前十分钟出门", " 哪个城市的体制内？", " 教计算机吗?", " 现在教 C ，计算机，不过主要是通信方面", "我是互联网转电商（就是开个网店卖东西），只在互联网行业干了一年半（其中有半年还是实习），经历多年的摸爬滚打，现在有个 7 人小团队。隔行如隔山，转行须谨慎，切记。", " 应该说是跟技术相关的. 产品, 项目经理之类的也跟技术沾边. 所以不能算. 这么说吧, 是跨度比较大的转行", " 多年的摸爬滚打. 这个多年是多少年了 哥们", "转猎头 hr", "据说转烤羊肉串比较火", "有，之前在外企做 iOS 开发。\r", "\r", "目前是银行柜员。\r", "\r", "现在过的很一般，白天上班，晚上做自己的项目，上架了独立设计何开发的 App ，并且有不少好评，虽然用户不多，但还在努力更新中。", " 你说的是 zhuyi?", " 代码写出来的是情怀 😄", "明年准备转了···", "家里有 2 套房，想转行 开的士！", "有转公务员的，而且是乡下的公务员", "明年准备转了，成都雾霾太吓人了，去山里面考个公务员，压力也没那么大。", "我老妈，从我小时候的制衣厂小工到组长到管理，到高管。我现在毕业了，她去卖瓷砖做老板娘", " 山里面做基层公务员好像很辛苦的啊,特别是贫困地方还有脱贫任务", "嗯，那天打车，碰到一司机，他说，你是做互联网的，我说，对啊。司机说，我以前是写 java 的。", " java 躺枪", " 已经做了两年多征地任务还不能脱身的路过。。。", " 嗯，那天在软件园，上来一个小伙，他问，现在出租车好干吗，我说，不好干。他说，他以前是开出租的，现在写 java 。", "08 年转行的，做过司机，秘书，现在做销售，做网站现在是业余爱好。。", "程序员一定要在互联网行业？", "其他再过几年我再想我能做什么行业？", " 4 年左右的样子", " 转行两年基层了?辛苦不?", "转行开超市,月入过万", "公司有一些同事都是从别的行业转过来当程序员的。个人隐私没有深入问。\r", "另外听说过医生转程序员的", "我是从会计法律方向转行当程序员的", " 6 年了, 刚开始还好, 前两年开始珠三角这边镇街级单位逢周四都得下乡. 如果实行休两天半, 估计也没多少时间干本职工作. 反正基层加班是常态. 要是遇上台风, 维稳, 山火等突发事件, 连续通宵都是必须的...", "互联网早期，有个陈姓老站长。创办了最早的站长论坛，技术氛围浓厚，就像你眼前的 V2EX ，被誉为中国站长发源地。\r", "同时也是一名糖果商人。后来选择了专做糖果生意，论坛渐渐荒废并关闭。糖果生意则取得成功，十几年下来，缔造了一个员工上千人的食品集团。", "的确有转行当公务员的，也有公务员转行做 CIO 的。", "想做传统行业了，互联网业界看不到任何希望，互联网创业根本就是赌、骗，非互联网的程序开发又都比较传统，对系统认可度不够高。\r", "卖卖爆米花，卖卖甜品，起码能看见我服务的顾客，让我感觉轻松的多", "理想都是转行开茶馆咖啡馆之类的不是吗?然后再破产再变回程序员.", "  赞同。 互联网要么撒币编故事骗风投， 要么无下限骗凯子骗无知群众。\r", "真不知道前途在哪。", "可以考虑去销售岗位啊，会技术的销售比会销售的技术牛逼多了", " 落伍者？", " 其实这样的生活挺好的，平淡稳定，能把写代码当成一种个人兴趣爱好，真好。", "这的确是一个有趣的话题，我们在除了码代码之外还有什么一技之长呢？", " 比落伍还老。落伍的站长之前也是在那混的。距今都超过 15 年了。\r", "相关人物 -> 陈天奖\r", "相关论坛 -> k666 站长论坛\r", "相关企业 -> 雅客食品", " 会开车，还能做鸭", "转老师比较好吧？", " 有好有不好，有时候感觉也是一种煎熬"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h3>先上图：</h3>\n<blockquote>\n<p>需要 vim8 支持</p>\n</blockquote>\n<p><img alt=\"coverage.vim\" src=\"https://cloud.githubusercontent.com/assets/486382/21000678/e4dc204a-bd24-11e6-9847-a4568511c1f3.png\"></p>\n<p>如图左侧绿色的小圆点说明是测试覆盖的行。该结果自动更新，如果有新的 coverage reporter 生成。</p>\n<p>目前支持基于<a href=\"https://github.com/gotwarlost/istanbul\" rel=\"nofollow\">istanbul</a>的 coverage 工具（ javascript ）。插件本身不提供生成 coverage 的功能。本质上是监听 coverage.json 文件，如果被修改，则更新 coverage 结果。</p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><h2>忘记<a href=\"https://github.com/ruanyl/coverage.vim\" rel=\"nofollow\">Github地址</a>了！</h2>\n</div></div>"], "reply": "目前尚无回", "tittle": "Vim code coverage 插件，实时显示代码覆盖率，类似 wallabyjs", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>先不管效率和公司制度，只考虑理想情况</p>\n<p>我觉得做程序的还是挺适合的</p>\n</div></div>"], "reply": "80", "tittle": "如果可以远程办公，你还会选择在大城市么？", "comment": ["会....小城市不好玩,也没人玩", "买座山，盖个农场，建个基站，连上网\r", "\r", "\r", "写代码", "嘛我觉得好玩是相对的，所谓的玩应该是种情感宣泄渠道，什么样的生产生活环境就需要什么样的情感宣泄方式。\r", "\r", "生产环境可以远程的情况下，寻找一个真正闻听自己内心声音的生活环境未必不可以。", "沟通成本太高", "嗯……家在这里……还是会……", "当然愿意了。拿着一线城市的工资在五线小县城生活。一个月工资能买好几平米。", "一边泡温泉一边写代码", "回老家。", "如果普遍可以远程办公，公司也不会开在大城市了，留在大城市并不会有更多的机会", "不会，会选个气候环境好一点的地方", "没有理由留在大城市", "我会选择民风比较好的城市", "应该会去西安、青岛、成都这样的城市生活，老家太无聊", "第一反应江浙沪包邮。。。", "远程办公不就是 IT 外包吗", "有美食 舒服的城市", "这得看发达到什么程度。现在这样一台电脑连上网是不行的。\r", "要像科幻小说里那样，召开国际会议，与会者不必集合起来，在各地开启设备，坐在指定位置就行。", "如果我有一个平台来实验的话，我就这么干：统一发放摄像头、投影仪等设备，强制规定摆放位置和开启时间。然后同事间彼此能看见。可以清晰的沟通交流。这就 ok 了。", "我会去一个可以送外卖的海边城市。。如果不能送外卖。。。去哪我 tm 还要出门吃饭。。还不如在大城市", "不会。找个十八线城市，空气清新生活舒适。", "谁在大城市带着，天天受罪啊。。。", "待在西安。\r", "不大不小刚刚好。", " IT 外包怎么了，你在 bat 打工不也是为了挣钱么，你想想工程队的老板们，那就是层层外包的。。。", "我情愿回老家", "会选择二线，但不会是一线。\r", "此外，选个环境相对好些的。", "肯定不会啊。\r", "\r", "留下来享受通勤和雾霾么？", "可能会留在大城市 但肯定不会再想在大城市买房了", " 来", "其实最大的问题在于 ，你们小朋友的教育问题。  如果你可以接受，是否远程都不是故事。\r", "\r", "PS ，大家想的本质其实是拿着一线城市的工资，去三线城市去消费。何苦来着", "我会回老家农村", "如果远程办公被普遍接受，公司肯定也不会开在大城市了。。。", "其实很多跨国公司的工程师都是这样的。我司有许多美国人 outlook 里的 location 叫 HM ，来公司一年后才反应过来是 HOME 。", "1.环境绝对要好\r", "2.所处的位置，不管是二线还是三线还是四线还是小镇，交通一定要便利\r", "\r", "三个月在家办公的体验最深就是远程办公对办公环境要求会高点。追求舒适。至于是否离开大城市我觉得这个并不是重要的。", "会选个社会环境和气候都好的大城市生活", "90%的概率不会选择，寄人篱下的租客生活有什么意思？", " 这还不如呆办公室呢，太不自由了…", "会啊，因为我在家里基本就是个废人了。", "不会 工作不是生活的全部", "不会，毕竟工作不是生活的全部。小城市的圈子太小了，到时候你生活得朋友都是周围的乡下人或者是网友？我觉得如果能远程办公，我可能在乡下买一栋房子，但不会天天在那里办公。", "有隔日就能上门的淘宝和京东快递么？", "然而 Work from home 基本上就是 组里没什么事我回家浪一天 的意思", "都是单身狗吧？\r", "\r", "有老婆孩子的难道不用考虑小孩的教育问题？二三四线城市的教育资源差多了。", "回老家远程的话，会", "远程办公，电脑一卡一卡的，带宽会收到很多限制", "别看很多人都是选择回老家      \r", "真正得做选择的时候还是会呆在大城市", "远程办公中，不会回老家 8 线小城市，也不会去一线大城市；会在 2 3 线城市生活（前提：离老家不远的），目前在三线城市苏州", "需要有视频会议，否则免谈", "如果远程办公这一条件成立。\r", "\r", "自然会回到家里，日日吃老妈做的饭菜。", " lol", "既然可以远程了， 我要全世界各地到处跑着办公。", "不太会，因为小城市给不了想要的。见过好多人，自由职业或者远程工作三五年，就和职场脱节了，导致进了一些厂子薪水和级别都很低。", "不会的，人是群居动物，不是独居动物，终究还要和人打交道的，大城市的人文环境，居民素质才是关键，你去小城市，一个说话的都没有", "会去一些环境不错有山有水的二线城市", "那就肯定回宜昌，咖啡店、书店，该有的都有，可以弄弄更多兴趣爱好了", "会，因为我来大城市不仅仅为了工作。\r", "\r", "我还要去夜总会、酒吧、 KTV ，我还要去租个车把大学城里面的妹子。", " \r", "一般这么说的人都是把不到妹子的。。。", " 其实 ... 已经有了 😅", " 同宜昌的,握爪", "如果不考虑医疗和教育。。", " VR 开会,大有可为!", "会，小城市这里看谁都像傻逼", "小团队还好，大了的话沟通成本太高了。现在跨个办公区撕逼都困难，沟通成本高。效率低", " 小城市也好玩，只是看你能否容易你所满意的圈子，大城市只是相对容易融入且选择较多而已，小城市照样嗨皮，哈哈", "会选择大城市。", " 关键是人吧,有一起的人就好玩,没人你真的只能待家里玩电脑", "不会", "会，综合考虑医疗水平 / 教育 / 饮食卫生 / 交通 / 快递，大城市无一样不好于非大城市", "你只考虑了工作部分", "不会，拿着壹线城市的薪资，按照五线城市的物价消费，生活不要太滋润。", " \r", "是把妹还是找个女朋友而已？", "融入不进去老家人的生活和爱好, 小地方从来都不是清新淳朴, 一直都是是俗和人情世故.", "不会，大部分程序员不靠口活", "不会，想回家。", "回家，盖房子，生娃，等老等死", "离家不远（开车 6 小时内）的二线城市", "假设楼主说的远程办公不是大公司一整个分部都在小城市然后大家一起远程办公。\r", "理想状态下是可行的，但是现实状态下几乎是不可能的。在大城市你能认识更多的人，获得更多的机会。短期来看，有可能觉得在小城市生活成本比大城市低，但相对的升职空间也更低，毕竟一般来说，条件相同的情况下老板都会选择提拔他比较知根知底的(起码每天都能看得见的)。当然了！最最最主要的是大城市好吃的多(x", "现在有互联网了，感觉教育资源的都没什么差异", "不会，亲近大自然不更好，(养老 233...", "娃上学怎么办？", "我还是会留在大城市，现在随随便便打开一个吃喝玩乐 app ，哪个不是围绕着大城市进行服务提供？小城市你们只想到房价物价，事实上我的老家四线城市，物价一点也不比我现在呆的武汉便宜多少，至少也就一碗面我家要 8 块钱，武汉要 12 块钱，也就便宜不超过五块钱的差价。\r", "\r", "还有其他行政方面的事情，越小的地方，人情社会味道越浓厚，除非是父母亲戚在当地真的混得不错，不然我是不会选择小城市的。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>目前在用这个有道取词\n<a href=\"https://chrome.google.com/webstore/detail/%E6%9C%89%E9%81%93%E8%AF%8D%E5%85%B8chrome%E5%88%92%E8%AF%8D%E6%8F%92%E4%BB%B6/eopjamdnofihpioajgfdikhhbobonhbb?hl=zh-CN\" rel=\"nofollow\">https://chrome.google.com/webstore/detail/%E6%9C%89%E9%81%93%E8%AF%8D%E5%85%B8chrome%E5%88%92%E8%AF%8D%E6%8F%92%E4%BB%B6/eopjamdnofihpioajgfdikhhbobonhbb?hl=zh-CN</a></p>\n<p>取词挺方便的，但是这个没有收藏功能，想有没有一款取词软件能选中单词取词弹框上有个收藏到单词本的功能，希望这样可以去有意识记一些常遇到的单词。</p>\n<p>另外，你们对英文阅读能力学习有什么好的建议或者方法么，背单词么，能分享下不。</p>\n</div></div>"], "reply": "6", "tittle": "chrome 上有没有一款取词插件但是带收藏到单词本的的英语取词插件？", "comment": ["goldendict 加 autohotkey 可以在任何软件里 双击 /拖拽 查词", "单词圣手（ Smart Word ）不知道符不符合要求", "\r", "\r", "我用这个", "朗易思听", "Google Dictionary 自带 download history ，是 csv 格式的。", "搭车问有没有剪切板管理器能把复制的文本关机前自动存起来让我第二天 review ？"]},
{"content": ["<div class=\"topic_content\">全文\r<br><a target=\"_blank\" href=\"https://yq.aliyun.com/articles/64351?spm=5176.100239.blogcont64670.12.K4HA7r\" rel=\"nofollow\">https://yq.aliyun.com/articles/64351?spm=5176.100239.blogcont64670.12.K4HA7r</a>\r<br>简介\r<br>背景\r<br>秒杀在商品交易中是一个永恒的话题，从双十一，到一票难求，比的仅仅是手快吗？\r<br>\r<br>其实对于交易平台来说，面对的不仅仅是人肉，还有很多脚本，外挂自动化的抢购系统，压力可想而知。\r<br>\r<br>秒杀的优化手段很多，就拿数据库来说，有用排队机制的，有用异步消息的，有用交易合并的。\r<br>\r<br>今天，我要给大家介绍一种更极端的秒杀应对方法，裸秒。\r<br>\r<br>（其实我很久以前就写过类似的文章，趁双十一跟大伙再练练）\r<br>\r<br>目前可能只有 PostgreSQL 支持裸秒，也即是说，来吧，强暴我吧，一起上。 有点淫荡，但是确实就是这么暴力。\r<br>\r<br>PostgreSQL 提供了一种 ad lock ，可以让用户尽情的释放激情，以一台 32 核 64 线程的机器为例，每秒可以获取、探测约 130 万次的 ad lock 。\r<br>\r<br>试想一下，对单条记录的秒杀操作，达到了单机 100 万 /s 的处理能力后，秒杀算什么？ 100 台机器就能处理 1 亿 /s 的秒杀请求，不行我的小心脏受不了了，下面听我娓娓道来。\r<br>\r<br>个人感想，说得那么心动想买一个实践一把。</div>"], "reply": "3", "tittle": "有没有了解 PostgreSQL，看到云栖的文章《裸秒》", "comment": ["虽然几乎不知道你在说什么，我只想说，我很爱 postgresql!", "这种并发量难道不是上内存数据库挡着流量么 又怎么会直接用 pgsql 来挡", " 假如 pg 可以呢？就不用自己那么操心做多额外的代码，减少系统复杂度，更加可靠可测试。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>就是知乎当天热门贴，最多赞，最高评论什么的。。。\n之前一直用看知乎 <a href=\"http://www.kanzhihu.com/%E8%BF%99%E4%B8%AA%E7%BD%91%E7%AB%99%EF%BC%8C%E8%8B%8F%E8%8E%89%E5%AE%89%E7%9A%84%E3%80%82%E4%B8%8D%E8%BF%87%E5%B7%B2%E7%BB%8F%E4%B8%8D%E7%88%AC%E5%87%A0%E4%B8%AA%E6%9C%88%E4%BA%86%E3%80%82%E6%B1%82%E6%8E%A8%E8%8D%90%EF%BC%81%EF%BC%81\" rel=\"nofollow\">http://www.kanzhihu.com/这个网站，苏莉安的。不过已经不爬几个月了。求推荐！！</a></p>\n</div></div>"], "reply": "7", "tittle": "有看知乎各种热门贴的网站吗？", "comment": ["。。。。。", "挽尊？", "即刻——知乎热门钓鱼贴", "墙外楼", "知乎有什么好看的？", "原来有 ", " ，后来了解到知乎的很多的热门回答都是大 V 在利益驱使下推上来的就很少看了。", "根话题就是总的热门流 "]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>大家好!本人 node 小白.想使用 node 开发一个简易后台,现在主要想采用 express + mysql + bootstrap 来开发,但是使用 jade 来布局感觉怪怪的.....想请问大家使用 node 来开发时主要采用什么样的技术方案呢?先谢谢来指导的朋友们.谢谢😁</p>\n</div></div>"], "reply": "13", "tittle": "node 开发,求指导!!", "comment": ["不知道现在后台是怎么个定义，竟然还包括 bootstrap 和 jade 了？", "jade 只是模板语言吧 布局卜是 css 嘛...\r", "不喜欢就换其他的，随便一搜好多种\r", "不爽就写纯 html 或者前后分离", "ejs 吧 那个更好玩", "交给客户端渲染", "楼主要先说自己会什么啊， nodejs 主要是用 javascript 开发后端，你是会 javascript 还是会其他后端语言，才好跟你说清楚。 nodejs + express 是一个带路由功能的 http 服务器，相当于 php 的 nginx + phpfpm + 带路由的 PHP 框架（ thinkphp ）。 后端工具都有选染 html 的模块，你如果用 jade ，说明要在后端渲染 html 。其实，如果在前端渲染，灵活性会更好。我一般选择 nodejs 提供后端 restFul 风格的 api ，前端用 vue+vue-route 进行数据绑定和页面渲染。跟 nodejs 配合的比较好的数据库是 mongoDB 。但如果，你是新手，太多技术要学了，如果你只是要快速完成后端，还是 thinkphp+mysql 来的快一些。", "最近也在学，推荐前后端分离。前端用 Angular 或者类似的和后端通讯", "最近在做一个项目，建议你用前后端分离的方式。", "要火了。。", "express 可以换模板语言用 ejs 啊， ejs 更自然点.... Jade 一直搞不太熟...", " 要是写接口不用啊.但是把数据展示处理啊改怎么办呢?", " 恩.请教一下,前后端分离是想移动端那样..用 node 写好接口.然后前端用 react 或者 vue 然后调 ajax 发网络请求,然后渲染视图么?", " 应该是想说 CMS", "模板也可以用 Handlerbars"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>相信有很多人喜欢既 gtk 的，又喜欢 python 的，但是在 windows 下，官方支持并不好。</p>\n<p>所以想把现有的工作完善了，使得:\n#可以发出一个可用版本\n#记录所有步骤和坑\n#代码公开位于 github 上\n#持续发布官方 Python 兼容的 gtk\n#所有依赖的上游库的变更，跟踪更改，更新至上游！</p>\n<p>希望发起一个捐款因为，支持这个项目，大家看怎么样，或者提点什么建议？</p>\n</div></div>", "<div class=\"topic_content\">感谢 hosiet 的回复，补充一下信息，说一下背景吧：\r<br>我是一个老牌的 Unix 极客，但是直到最近才深入了解了 Python ，顺便成为了一个 Buildbot 高手。\r<br>\r<br>项目的进一步发展需要一批 UI ，现有的项目更是 MFC, WinForm, WPF ， Web 各种 UI 框架都有的。后续需要各种老的 Python 命令行工具 UI 化。\r<br>\r<br>我非常喜欢 GTK ，具体原因说不出来。又因为在 Linux 下工作习惯了，也不喜欢 QT 的授权协议（ QT 双授权， GTK 支持 LGPL ），所以即使在 Windows 下，我也希望能继续使用 GTK ，特别是公司开发的是商业产品！\r<br>\r<br>东看西看，网上的介绍，包括 gnome 官方博客的介绍，都不是很满意，后来发现了 <a target=\"_blank\" href=\"https://github.com/wingtk/gtk-win32\" rel=\"nofollow\">https://github.com/wingtk/gtk-win32</a> 感觉挺好的，但是觉得这个项目更多的像是自用，并没有很好的持续发布机制。所以想能否改进一下，并且持续发布（依赖 <a target=\"_blank\" href=\"https://www.appveyor.com/\" rel=\"nofollow\">https://www.appveyor.com/</a> ），这样就能有一个一直好用的版本！\r<br>\r<br>目标：\r<br>#bootstrap 所有过程\r<br>#gtk+ 持续发布(64bit)\r<br>#确保 python3 绑定的部分没有问题(64bit)\r<br>#如果有需要 Fork 上游的工程，并且记录修订，后续 merge 回上游(64bit)\r<br>#优先保证在 pycharm 中使用体验，出现问题在 github 记录\r<br>#构建一个 Buildbot 服务器，辅助研发团队解决问题？</div>", "<div class=\"topic_content\">项目地址:\r<br><a target=\"_blank\" href=\"https://github.com/gnomeonwin/bootstrap_gtk_on_win\" rel=\"nofollow\">https://github.com/gnomeonwin/bootstrap_gtk_on_win</a>\r<br><a target=\"_blank\" href=\"https://github.com/gnomeonwin/gtk-win32\" rel=\"nofollow\">https://github.com/gnomeonwin/gtk-win32</a></div>", "<div class=\"topic_content\">本来只是抱着对 python 和 gtk 的热爱来瞎起哄，没想到也是各种各种了。\r<br>\r<br>好在软件需要的更多是智力成本，现在 github 和 <a target=\"_blank\" href=\"http://appveyor.com\" rel=\"nofollow\">appveyor.com</a> 对开源软件免费，我就是凭着兴趣继续向前摸索。\r<br>\r<br>欢迎大牛在日后指点。\r<br>\r<br>此处结贴，谢谢大家:)</div>", "<div class=\"topic_content\">最近尝试针对现有的 <a target=\"_blank\" href=\"https://github.com/gnomeonwin/gtk-win32\" rel=\"nofollow\">https://github.com/gnomeonwin/gtk-win32</a> 在 <a target=\"_blank\" href=\"https://www.appveyor.com/\" rel=\"nofollow\">https://www.appveyor.com/</a> 搭建一个持续集成系统，发布针对 python2 、 python3 的 gtk 绑定库， 记录在 <a target=\"_blank\" href=\"https://github.com/gnomeonwin/bootstrap_gtk_on_win\" rel=\"nofollow\">https://github.com/gnomeonwin/bootstrap_gtk_on_win</a> ， 但是以失败告终（我会继续跟进）。\r<br>\r<br>对于 gtk-win32 现有的状态，我只能说这就是一个东拼西凑、缺乏有效管理、上游不协作、非常老旧混乱的临时解决方案。\r<br>\r<br>但是， <a target=\"_blank\" href=\"https://github.com/wingtk/gtk-win32\" rel=\"nofollow\">https://github.com/wingtk/gtk-win32</a> 相比以前的思路，引入ｐｙｔｈｏｎ管理工程，已经是巨大的进步了！ 这是一个不错的起点，但是构建一个可以信赖的 gtk+python on windows 还有很长的路要走。</div>"], "reply": "15", "tittle": "众筹一个 gtk for python under windows 的项目", "comment": ["一行代码都没有就想骗捐？(玩笑)\r", "\r", "从您的账号信息，确实没可信度……连头像都没有！", " 现在还正在募集想法，什么骗不骗的？", "通常流程应该是先拿出个 demo 和说明给大家看看项目前景，然后寻找资金和人员支持，然后回到第一步继续开发。总之就是先 show me the code 打开局面，以后就好说了。\r", "\r", "例如究竟是支持 pygtk 开发还是和 py 无关直接改进 GTK+ 支持来间接提高 pygtk 效果，重心放在 python2 还是 python3 上，重心放在 GTK+2 上还是 GTK+3 上，都可以说明白点嘛", "QT 不是也有 lgpl 授权吗？ wxpython 授权也很宽松。 gtk 有什么优势?", "gtk 的 windows 支持是很感人的，我知道 workrave, dia(基于 python)等几个软件在 windows 平台上就是靠 gtk 来画界面的，效果实在太差。", "只有一个点子的软件众筹项目很难拿到钱，\r", "\r", "MOU 是前车之鉴，那还不是众筹是预购。", " 只能说，希望有个方案可以在 python 下用上不错的 gtk for windows 发布，就是简简单单的喜欢，如果没有好的方案，就想发动群众的力量，把不成熟的方案弄得更成熟些！", " qt 有ｌｇｐｌ授权，以前不知道，以为只有 gpl 和商业授权呢！　不过移动端的授权费，价格不菲。", "什么东西都没有就想要钱？那不是众筹，是诈骗！！！", " ｍｏｕ是什么东西？", " 你有收到我的银行卡号吗？哈哈", "只用 wxwidgets 不喜欢 gpl 授权的项目。", "windows 平台还用什么 gtk 啊，丑爆了", " lgpl 也不错，不要要求太高，水至清则无鱼！", "为什么我第一眼看成了众泰？"]},
{"content": "", "reply": "27", "tittle": "为啥大家的面试段子都是手写红黑树，而不是手写 AVL 树或堆树一类的", "comment": ["紅黑樹插入和刪除對要處理的各種情況相對 AVL 樹多得多，我覺得大多數人如果不是天天折騰這個，徒手擼一個紅黑樹還是很困難的（比如我）。", "紅黑樹原理不複雜，但是要處理的各種細節多得要死要死。", "看成面试段子手...", "面试杀手锏，完全不会写红黑树的飘过。", "红黑树规则比较多，不好好理顺的话会吐血的", "话说这东西我都要背下来才能手写，你们一般是怎么搞才能不靠死记硬背而把各种情况都搞定？", "红黑树一般存在于段子里和吹牛里，我是不太相信什么公司会考手写红黑树之类的，哪怕是 google 。", " google 那段子不是面试者自己爆出来的吗。 老实说如果不是事先准备，能当场正确写出红黑树平衡算法的 google 员工，我想也不多。", " 我在网上看见过百度某年笔试题中似乎有过，但不清楚这是真来自百度笔试题还是网友瞎编的，但确实我也不认为大多数程序员能笔试手写出能跑的红黑树，写个二分查找意思意思就行了。", " 我看过有人（好像是老外）写的关于应聘 google 的文章。印象比较深的就是讲其中一个优秀的应届生面试 google 失败，他自觉得算法准备得很好，比如准备了红黑树的几种旋转。但是被作者批了，大概意思是除了前几天刚学过红黑树的在校生，不会有人能清晰地记得红黑树的所有旋转方法，包括 google 自己的员工。而且作为一道面试题，这也不是很合适，因为不是在 20-30 分钟内就能凭借自己能力推导出来的。拿这个筛选，最后考察的不是能力，而是有没有“准备过”，这和面试筛选的初衷有点背道而驰。所以我觉得即使要考核，更可能的并不是直接上来就问红黑树，而是一道包装过的，表面上看上去根本不像红黑树的红黑树题。", " 说的很对呀，我觉得问一下红黑树和 AVL 树各自特点就好了，其实就是看一下对方的学习态度。", " 算法愉悦身心", "面试手写过最复杂的是堆排序", "因为要挑一个面试时大部分人写不出来(比如我)却都知道很基本的原理的\r", "\r", "用来衬托面试者的眼高手低，形成戏剧性的落差，别的东西没有这个效果。", "面试题应该要弱化准备过程，而强化思考过程。", "跟面试官的经历有关，有些学校只讲红黑树， 2-3 树，不讲其他的", "这有什么难的\r", "Map map = new TreeMap();\r", "手动斜眼，已经写完了", "我也觉得堆比红黑树难。。。", " 南京 Wind", "都是段子而已，面红黑树有什么意义？\r", "\r", "真的要写的话，也是对着论文抄算法，没有意义。", " 应该面一下  多线程红黑树 如何加锁 解锁 \r", "提升容器吞吐能力", " 多线程不适合用树吧……", " c++stl 有现成的，并不难", " \r", "你考虑下，红黑树的插入 是可以加锁的，\r", "插入时 只要当前节点的黑父是锁住的，就可以保证整体有序\r", "读的话，就肯定会出现丢失的情况，", "真不是段子，不要小看小公司的面试，手写红黑树手写哈希表我都遇到过！", " 别说自带的那个残废。", " 顺便说夸张点，自带的那个我闭着眼睛都能写出来。", "通常，有面试官问我红黑数这种问题。\r", "我一般扭头就走。\r", "不是因为，这个职位用不到还问这个。\r", "而是因为。\r", "我 tmd 真的不会"]},
{"content": ["<div class=\"topic_content\">原来的老大被夺权了，现在换了个老大，以前只是写周报，被每天写工作日报，心里是非常抵触的。</div>"], "reply": "85", "tittle": "针对每天写日报，每周写周报，每季度写季报，大家怎么看！", "comment": ["确实 原来我们不按时写日报周报都要罚钱的 leader 罚 2 倍。后来又没人写了，大家又都不写了。不过我还是坚持写周报的，当个总结回顾。", "周报有必要，日报就太啰嗦了，最后可能变成拷贝上一天的，改下进度，一天能做的需要特别说明的东西实在不多。", "被强迫做的事情都是有抵触的。作为一个局外人来看，写日报可以清楚地知道自己今天干了啥（领导也知道了），有没有荒废了时日。", "无非是你们工作太闲了。你抵触是因为你工作真的很闲。不然写个日报不是分分钟的事情", "在我看来，日报比周报要好。你把日报当 todo 用，方便你理清思绪，完成一天的工作。周报就纯粹是总结了，对你没有任何帮助，毫无意义。", "日报不是新入职的才写么，老员工都是写周报的", "我倒觉得你们缺一个比较好的项目管理工具 协同办公 比如 tower\r", "谁今天在做什么 做了什么 跟进遇到的问题一目了然\r", "还在手写日报周报？ OUT 啦！", "把 svn, git 的提交日志当日报周报不是挺好么", "写日报还好啦。。\r", "我们的奇葩老板，自己弄个垃圾系统，非要我们用。\r", "要我们填写每天的工作记录，还特么要填写时间段，几点几分几秒到几点几分几秒做了什么。\r", "\r", "太特么恶心了。", "周报有必要 日报有点烦了。。\r", "不过我是坚持自己做每日回顾的", "团队人员多了，项目业务多了，这很有必要的。\r", "与其抱怨麻烦，不如想着怎么把日报做成自动化。", "日报有啥好回顾的，我们都是周报，周会总结一下就行了。。。", " 哎 不适应啊！ 跟着原来的老大都是只写周报，现在弄着不爽啊，而且技术路线都被弄死了，只能用 c++！", "同意 Git log 当日报挺好.....", "微信群日报周报已写吐，每天回家了还要绞尽脑汁想想今天干了啥，最近领导还不满意，要求平均工时 11 小时以上。。。", "LD 想了解各个项目进度,看日报很正常,就是有时没啥东西写,写些形而上的又感觉没意思", "报告确实躲不掉，从团队来说也确实需要，对个人来说也确实麻烦 ——  但是麻烦归麻烦，不去用自动化工具来写报告那就是自己的问题了……", "闲的蛋疼", " 还是要把这些自动化就好, 写报告什么的, 让产品经理写不就好了, 毕竟他们的 KPI 才靠这个 ", " ", "从正面的角度来讲，确实挺有必要\r", "但是一强迫，啥好事都变成了坏事了。特别是还牵涉到利益的时候", "你们真的是缺一个项目管理工具。", "那么大家推荐个好用的在线管理工具？要能部署在自己服务器上的，因为有些项目是保密的", "目前只有周报，季度会有其他的报告，日报的话，感觉太占用时间了。写这玩意本来就挺占用时间的，还每天写", "我们只写日报，感觉没啥卵用，但听说会影响年底业绩，新人不懂，就看年终怎样了。。", "上个公司要写日报，我就跑了", "虽然不写日报,但是还是会自己做 daily review", " 平均工时 11hr ？算时薪么？", "我们也是要写，写着写着就习惯了，也没啥。相当于一天的总结吧", "如果就这点不满意的话，其实也没什么，快下班时候写一下，让领导安心。", "1. 其实写写挺好的，尤其能写给自己看，过段时间自己总结一下。我用 idonethis 好几年了，花不了多少时间，工作、学习的方向性会好很多。每天最多也就花 10 分钟回复封邮件的代价。这一年还买了 RescueTime ，配合起来安排自己的时间与事情，感觉比以前有所高效。\r", "\r", "2. 之前有的公司要求记日报，甚至还有日计划。但是我发现，除了刚开始的时候外，后面无论我写什么，对方根本不感兴趣。（我甚至故意把日期，姓名，项目名称写错来测试公司的日报管理）我监督了解下属进度也是一样，天天盯着你每天做了什么，我自己也不用干点别的了。招人讨厌还特低效。真想要了解这些，日报也就是个工具，光信那个很容易被人糊弄。\r", "\r", "3. 其实工作生活中的很多事情就是这样。同样一件事，看的角度不一样，态度会完全相反。比如，偶然碰上个紧急技术问题需要加班连夜解决，有时可能烦得要死，真心不想折腾，能凑合就凑合。（真的，甚至有时是自己的私人项目，也是这样，去它的忠实用户，且熬着吧~）换成熬夜和哥们姐们打麻将，那就完全没问题了（尤其是手气好的时候）。虽然，加班赶代码带来的好处有可能远远大于打麻将。", " 只算 8 小时时薪 工时低了没季度绩效钱 貌似还会拖累部门绩效。领导还说不喜欢看到第二梯队。。 公司高层看重工时。。 正在研究年后跑路计划", " 你签的劳动合同到期了么？主动离职有违约金么？", "修复 bug\r", "完成 需求\r", "需求 开发进度", "  签的 5 年 呆了半年才转正  应该没有吧", " 签之前没有就加班和工时问题达成一致么？还是说你接受了这个条件？如果你不想干了，建议等拿到年终奖之后，消极怠工或者故意留下一些恶心人的 bug 拖累项目进度，等公司主动辞退，然后捞一笔赔偿金走人。不过也要当心有心机的企业跟你耗，比如这样 ", "\r", "遇到这种铁了心耗下去的，还是先找好下家直接走人算了。", "我们上半年也是这样 日报 周报 然后大家都不写了~ 原来是我们技术部老大的老大，现在管其他的项目  今早还是转他们项目的邮件 日报 周报什么的？意思是他们项目还在写 要我们项目组也按着写~~麻痹的 没人吊他 就是不写~~这个人就是老板狗腿子 ~~", "多谢回复  签之前就不了解工时少居然会让领导看你不爽（虽然事干完了工资照发） 我们年终居然是按转正时间算的 估计有半个月工资就不错了。。", " 刚入行的话，那还是建议赶紧先找个合适的下家，主动离职算了。刚入行就被辞退怕是会影响找工作。签合同之前一定要问清楚工资结算方式，每天标准工作时间，加班费的计算方式，补假的方式和有效期，绩效、年终奖的评定方式。如果企业有用绩效、年终奖来逼员工义务加班的倾向，那我建议你还是换一家吧，不然真是用命换钱了。", " 年末还有一次招聘，然后就是来年二三月份还有一次大规模招聘。别错过了。", "以前在一个公司待了两周，体验了下日报，简直脑残。这种老大 200%是庸才。", "我之前见过一个人自动写日报的", " 今年已经跳过一次了 只能等来年了", " 哎，加油吧。工资是跳出来的，只有技术是实在的。", "我个人是很喜欢写日报的，周总结我也很想写，无奈自己太懒了。\r", "\r", "要是什么都没做，会讨厌写。", "表示也写日报 领导会看\r", "有时候一天搞定几个需求功能点，写写 1 ， 2 ， 3 还是挺好的\r", "尴尬的是 有时候遇到一个坑几天搞定一个需求功能点，那几天就有点僵了，天天都是 1...没有第二点了 \r", "\r", "有时候一天都没写代码，想思路，但日报上有不好意思写 我在思考没写功能....\r", "\r", "多少有点抵触，但也有好的一方面，恩 压力山大，好好干活。", "这东西可以自己写个脚本生成吧", "记得之前看到谁写的一篇博文，说他也很烦每天写日报的事情，后来做了一个工具，可以自动化写日报，从每天最后一个交日报的变成了每天第一个交日报的人。就是现在怎么也找不到这篇博文了，很烦，当时没有保存下来", "不知道这里有人看过那篇博文没有", "微博这里有一个讨论： ", "我们写周 PSE 、月 MBO 、年 KPI", "周报还可以，日报就有点。。。我又不是编辑", "10 人以内的部门，搭了个 Taiga ，感觉并没有什么卵用，还不如 git 来的实在", "周报就是日报的集合吧，如果每天不记下来具体事项，写周报其实很容易想不起来这周到底做了什么。", "作为程序员，我觉得可以通过 diff 前一天和今天的代码提交数来衡量工作量。周报简直是浪费时间。", "周报难道不是把日报汇总起来完事？", "不喜欢写", "竟然没有人劝离职的 😄", " 6666", "其实就和每天签到一样，习惯了就好了。我日报都是一句话的， 哈哈", "都挺好，总结性的东西有益身心健康，但是强制性就不对了", "最重要的是建立 feedback loop 。不管是什么类型的总结，口头的或者书面的，最重要的是获取反馈。", "我觉得就两个字： sb 。有时间精力干点啥不好。", "一天随便干点什么就够写了，如果心理很抵触说明还是钱没给到位，情绪通过这个点触发了。\r", "不为别的，加薪靠跳槽，过完年看看机会吧！", "这里有别人自动化写周报的方法：你可以参考", "链接是 ", "上个月 5 次没写日报，扣了 500 多。。", " 卧槽这么狠\r", "tower 这个工具没用，目前也是每周写个周报", " 好狠，你应该用闹钟定时提醒自己", "要么忍，要么滚。\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "我选择了忍。", " 没有精确到毫秒，差评😂", "如果用 github 管理项目的话，用 issue 的进度和 pr commit 情况来总结工作和控制进度很不错！", "我们只要求发周报。\r", "\r", "但我每天晚上最后一件事情，就是把明天待办列一个 list 。\r", "所有的事情应该都按照 重要 紧急 象限划分好\r", "这样的好处是，每天都是在实现自己的规划，而不是盲目的东做西做", "自己每天做了啥，倒是有记录。但是还要写新来同事的，就烦！", "我们每天都要写日报，不写发 10 块钱红包，每周五写周报。", "我受不了，我辞职。", "当做锻炼文笔。\r", "\r", "另外在报告末尾标注：版权所有，需经本人授权后方可转载。", "不管是不是强迫 自己最好也写\r", "否则你都不知道你干了什么", "无聊。都是上头布置的任务，还需要通过日报了解你做了什么，这样的上司和公司本来就不靠谱。", "C+C~ C+V~", "实习半年写了半年日报周报，后面回顾感觉挺好的。不过现在不要求了，连周报都懒得写了。。。", "没意思", "之前单位也是每周周报，觉得挺烦的。\r", "\r", "目前的单位没有这样的要求，但是自己会每天花几分钟做计划，每周计划关键任务。都是自我管理的方法。只是有时候由上而下的强制让人反感罢了。\r", "\r", "从另一个角度看问题就释然了。", " 闹钟已设置", "写出来还是很好的", "日报对我很有用"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>OJ 上总是时间超限…有没有什么解决方法\n或者写代码时应该注意什么</p>\n</div></div>", "<div class=\"topic_content\">感谢大家～昨天一直在准备…今天参加 acm/icpc China-Final</div>"], "reply": "21", "tittle": "OJ 时间超限", "comment": ["注意算法，去看看算法导论，之类的算法书籍，多刷刷就好了", "根据数据规模选取恰当的数据结构和算法。。。。", "你的解决方案时间复杂度高了。", "代码写丑了……\r", "\r", "换更好的算法多半能解决的", "o(n^2)以上的复杂度就很难过了", "这都发帖。。。。。。 😂", "在 LeetCode 上运行？多看看高票答案的实现就行", "brute force 确实是会", "如果 OJ 没有时间限制的话直接暴力秒全，时间限制是逼你选用合适复杂度的算法。", "OJ 不限时间，在相对计算规模下，所有的动态规划题目 都可以通过暴力枚举出来，\r", "然后再计算最优解，那还要 OJ 干嘛\r", "\r", "手动斜眼", "china final 好厉害！", "能参加 acm/icpc China-Fina 的会不知道怎么解决超时么..", "活捉 final 大神……", " 同啊，难道是钓鱼？", " 说不定是想问一下\"这 DP 我滚动加剪枝然后斜率优化到 On 怎么还 TM 卡常数我该怎么办\"来装个 B ，没想到咱们水平都太差", " 我是非 EC 队…学校不重视 acm …最近临近期末外加六级然后来参赛😂", " 厉害里的渣渣", " 嗯。今天出题人说完全按照最优时间复杂度限制的时间", " 感觉学校水题太多…大家都在刷水题", " 也可以刷 HDOJ ， LeetCode ， USACO 这样的啊", " 嗯嗯。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>idea 中（可能不只是 idea 中）， aliyun maven 的 nexus 的 public repository 更新索引失败。</p>\n<p>我在 pom.xml 里面指定</p>\n<pre><code>  &lt;repositories&gt;\n        &lt;repository&gt;\n            &lt;id&gt;nexus&lt;/id&gt;\n            &lt;name&gt;nexus Repository&lt;/name&gt;\n            &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt;\n        &lt;/repository&gt;\n    &lt;/repositories&gt;\n</code></pre>\n<p>idea 更新索引报错</p>\n<pre><code>java.lang.RuntimeException: java.io.FileNotFoundException: Resource nexus-maven-repository-index.properties does not exist\n</code></pre>\n<p>在网上查了查，这好像是 nexus 部署出现了问题。。。</p>\n</div></div>"], "reply": "9", "tittle": "Aliyun 的 maven 镜像有人用过吗？", "comment": ["在用..不过我把 idea 的索引关了..我使用方法和你有点不一样.是在 settings 文件中加\r", " <mirror>\r", "      <id>nexus-aliyun</id>\r", "      <name>nexus aliyun</name>\r", "      <url>http://maven.aliyun.com/nexus/content/groups/public/</url>\r", "      <mirrorOf>central</mirrorOf>\r", "    </mirror>", "去 setting.xml 里试试吧", "也是加在 settings 中的 速度飞起", "用过，但是貌似很久没同步中央仓库了，几个新版本的依赖都没有。", " @", " @", " 谢谢回复，我描述的可能不太清楚。我这种方式是可以在 aliyun 下载依赖的。但是目前遇到的问题是， idea 更新缓存错误了。\r", "\r", "我也试过在 settings.xml 里面设置，同样会出现更新缓存错误的问题。\r", "\r", " 如果 idea 不能更新缓存，那么在写 pom.xml 时候就不能补全了，这个有点不爽。", "有用过", "sbt 卡出世屎 配置了 aliyun 的后就快的飞起了", "挺快的", "一直用的阿里云的 mirror ，没有发现问题，速度飞快。\r", "我也是在全局配置文件中配置的，方法参考一楼。", "不管是啥包管理工具，尽量都换成本地的，不过阿里云的 mirror 有个问题，包更新太慢了，很多稍微新的都没用。。。"]},
{"content": ["<div class=\"topic_content\">想搜一个 PHP 的 ActiveRecord 库，我的搜索关键词是 php active record ，搜索结果中就不包含 ActiveRecord 关键词的。。。\r<br>\r<br>也就是说： php activerecord 与 php active record 搜索结果完全不一样。 \r<br>是我被 Google/百度 惯坏了吗？</div>"], "reply": "3", "tittle": "GitHub 的搜索的一个问题", "comment": ["我怎么搜索`php active record`的第一个结果就是`KumbiaPHP/ActiveRecord`", " \r", "\r", "对比\r", "\r", " ", " 你的搜索结果是什么样的？"]},
{"content": ["<div class=\"topic_content\">在公司用 mac 可以 ssh 连接上服务器，具体的配置都放在 config 文件中，目录和格式都正确。因为在公司确实连接上了。用 iterm 和 zoc 都可以连接上！\r<br>\r<br>但把这个电脑带回家死活就是连接不上服务器，报 Operation timed out 、 Write failed: Broken pipe 。\r<br>\r<br>\r<br>尝试的方法：\r<br>1 、网上找此问题解决办法全是清一色的说在 config 文件中加上这些配置 ServerAliveInterval 120\r<br>TCPKeepAlive yes  都试了并且不管用。\r<br>2 、可我在电脑上启动虚拟机在 window 的环境下可以连接上公司的这台服务器的，证明网络是没有问题的。并且尝试连手机的 4g 网、无果\r<br>3 、在家 ping 不通公司的服务器\r<br>4 、公司服务器是没有问题的，因为同样连接不上我的阿里云服务器 ecs\r<br>\r<br>求计策</div>"], "reply": "26", "tittle": "请教个 ssh 连接的问题，被折麽够呛", "comment": ["-vvv 贴出来", "Write failed: Broken pipe 这不是已经连上了么？延迟太大了吧。", "服务器限制了 ip 地址吧，只有公司的 ip 地址可以连，你在家里 ip 和公司不一样的", "如果工作需要就找运维，如果不想麻烦运维，那么把电脑放在公司，然后在这个电脑上开一个 ngrok ，你就可以通过 ngrok 连接公司的那台电脑，然后再通过公司那台电脑就可以连公司的服务器了= =", "是不是配了代理或者 vpn?", "应该是限制了 ip.", " 我在家用这个电脑的里的虚拟机是可以连上公司服务器的，而且用另外的 windows 电脑也可以连上", " 怎么用？求指教", " 没有", " 没有限制 ip ，在家里另外一台电脑就可以连接上去", "ssh xxx -vvv 看全部的日志 是什么问题自然一清二楚", " 打印出来很多、显示密码认证已经成功了，但是不知道为啥连不上\r", "OpenSSH_7.2p2, LibreSSL 2.4.1\r", "debug1: Reading configuration data /Users/bjlbeyond/.ssh/config\r", "debug1: Reading configuration data /etc/ssh/ssh_config\r", "debug1: /etc/ssh/ssh_config line 20: Applying options for *\r", "debug2: resolving \"101.200.63.184\" port 22\r", "debug2: ssh_connect_direct: needpriv 0\r", "debug1: Connecting to 101.200.63.184 [101.200.63.184] port 22.\r", "debug1: Connection established.\r", "debug1: identity file /Users/bjlbeyond/.ssh/id_rsa type 1\r", "debug1: key_load_public: No such file or directory\r", "debug1: identity file /Users/bjlbeyond/.ssh/id_rsa-cert type -1\r", "debug1: key_load_public: No such file or directory\r", "debug1: identity file /Users/bjlbeyond/.ssh/id_dsa type -1\r", "debug1: key_load_public: No such file or directory\r", "debug1: identity file /Users/bjlbeyond/.ssh/id_dsa-cert type -1\r", "debug1: key_load_public: No such file or directory\r", "debug1: identity file /Users/bjlbeyond/.ssh/id_ecdsa type -1\r", "debug1: key_load_public: No such file or directory\r", "debug1: identity file /Users/bjlbeyond/.ssh/id_ecdsa-cert type -1\r", "debug1: key_load_public: No such file or directory\r", "debug1: identity file /Users/bjlbeyond/.ssh/id_ed25519 type -1\r", "debug1: key_load_public: No such file or directory\r", "debug1: identity file /Users/bjlbeyond/.ssh/id_ed25519-cert type -1\r", "debug1: Enabling compatibility mode for protocol 2.0\r", "debug1: Local version string SSH-2.0-OpenSSH_7.2\r", "debug1: Remote protocol version 2.0, remote software version OpenSSH_6.6.1\r", "debug1: match: OpenSSH_6.6.1 pat OpenSSH_6.6.1* compat 0x04000000\r", "debug2: fd 3 setting O_NONBLOCK\r", "debug1: Authenticating to 101.200.63.184:22 as 'root'\r", "debug3: hostkeys_foreach: reading file \"/Users/bjlbeyond/.ssh/known_hosts\"\r", "debug3: record_hostkey: found key type ECDSA in file /Users/bjlbeyond/.ssh/known_hosts:21\r", "debug3: load_hostkeys: loaded 1 keys from 101.200.63.184\r", "debug3: order_hostkeyalgs: prefer hostkeyalgs: ", "\r", "debug3: send packet: type 20\r", "debug1: SSH2_MSG_KEXINIT sent\r", "debug3: receive packet: type 20\r", "debug1: SSH2_MSG_KEXINIT received\r", "debug2: local client KEXINIT proposal\r", "debug2: KEX algorithms: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,ext-info-c\r", "debug2: host key algorithms: ", "\r", "debug2: ciphers ctos: ", "\r", "debug2: ciphers stoc: ", "\r", "debug2: MACs ctos: ", "\r", "debug2: MACs stoc: ", "\r", "debug2: compression ctos: ", "\r", "debug2: compression stoc: ", "\r", "debug2: languages ctos:\r", "debug2: languages stoc:\r", "debug2: first_kex_follows 0\r", "debug2: reserved 0\r", "debug2: peer server KEXINIT proposal\r", "debug2: KEX algorithms: curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1\r", "debug2: host key algorithms: ssh-rsa,ecdsa-sha2-nistp256,ssh-ed25519\r", "debug2: ciphers ctos: ", "\r", "debug2: ciphers stoc: ", "\r", "debug2: MACs ctos: ", "\r", "debug2: MACs stoc: ", "\r", "debug2: compression ctos: ", "\r", "debug2: compression stoc: ", "\r", "debug2: languages ctos:\r", "debug2: languages stoc:\r", "debug2: first_kex_follows 0\r", "debug2: reserved 0\r", "debug1: kex: algorithm: ", "\r", "debug1: kex: host key algorithm: ecdsa-sha2-nistp256\r", "debug1: kex: server->client cipher: ", " MAC: <implicit> compression: none\r", "debug1: kex: client->server cipher: ", " MAC: <implicit> compression: none\r", "debug3: send packet: type 30\r", "debug1: expecting SSH2_MSG_KEX_ECDH_REPLY\r", "debug3: receive packet: type 31\r", "debug1: Server host key: ecdsa-sha2-nistp256 SHA256:zhKCIsZhxq5sDg73S6rVQ6AAYEU1KKkkJQfoi30n5Cg\r", "debug3: hostkeys_foreach: reading file \"/Users/bjlbeyond/.ssh/known_hosts\"\r", "debug3: record_hostkey: found key type ECDSA in file /Users/bjlbeyond/.ssh/known_hosts:21\r", "debug3: load_hostkeys: loaded 1 keys from 101.200.63.184\r", "debug1: Host '101.200.63.184' is known and matches the ECDSA host key.\r", "debug1: Found key in /Users/bjlbeyond/.ssh/known_hosts:21\r", "debug3: send packet: type 21\r", "debug2: set_newkeys: mode 1\r", "debug1: rekey after 134217728 blocks\r", "debug1: SSH2_MSG_NEWKEYS sent\r", "debug1: expecting SSH2_MSG_NEWKEYS\r", "debug3: receive packet: type 21\r", "debug2: set_newkeys: mode 0\r", "debug1: rekey after 134217728 blocks\r", "debug1: SSH2_MSG_NEWKEYS received\r", "debug2: key: /Users/bjlbeyond/.ssh/id_rsa (0x7fb9cac13760)\r", "debug2: key: /Users/bjlbeyond/.ssh/id_dsa (0x0)\r", "debug2: key: /Users/bjlbeyond/.ssh/id_ecdsa (0x0)\r", "debug2: key: /Users/bjlbeyond/.ssh/id_ed25519 (0x0)\r", "debug3: send packet: type 5\r", "debug3: receive packet: type 6\r", "debug2: service_accept: ssh-userauth\r", "debug1: SSH2_MSG_SERVICE_ACCEPT received\r", "debug3: send packet: type 50\r", "debug3: receive packet: type 51\r", "debug1: Authentications that can continue: publickey,gssapi-keyex,gssapi-with-mic,password\r", "debug3: start over, passed a different list publickey,gssapi-keyex,gssapi-with-mic,password\r", "debug3: preferred publickey,keyboard-interactive,password\r", "debug3: authmethod_lookup publickey\r", "debug3: remaining preferred: keyboard-interactive,password\r", "debug3: authmethod_is_enabled publickey\r", "debug1: Next authentication method: publickey\r", "debug1: Offering RSA public key: /Users/bjlbeyond/.ssh/id_rsa\r", "debug3: send_pubkey_test\r", "debug3: send packet: type 50\r", "debug2: we sent a publickey packet, wait for reply\r", "debug3: receive packet: type 51\r", "debug1: Authentications that can continue: publickey,gssapi-keyex,gssapi-with-mic,password\r", "debug1: Trying private key: /Users/bjlbeyond/.ssh/id_dsa\r", "debug3: no such identity: /Users/bjlbeyond/.ssh/id_dsa: No such file or directory\r", "debug1: Trying private key: /Users/bjlbeyond/.ssh/id_ecdsa\r", "debug3: no such identity: /Users/bjlbeyond/.ssh/id_ecdsa: No such file or directory\r", "debug1: Trying private key: /Users/bjlbeyond/.ssh/id_ed25519\r", "debug3: no such identity: /Users/bjlbeyond/.ssh/id_ed25519: No such file or directory\r", "debug2: we did not send a packet, disable method\r", "debug3: authmethod_lookup password\r", "debug3: remaining preferred: ,password\r", "debug3: authmethod_is_enabled password\r", "debug1: Next authentication method: password", " password:\r", "debug3: send packet: type 50\r", "debug2: we sent a password packet, wait for reply\r", "debug3: receive packet: type 52\r", "debug1: Authentication succeeded (password).\r", "Authenticated to 101.200.63.184 ([101.200.63.184]:22).\r", "debug1: channel 0: new [client-session]\r", "debug3: ssh_session2_open: channel_new: 0\r", "debug2: channel 0: send open\r", "debug3: send packet: type 90\r", "debug1: Requesting ", "\r", "debug3: send packet: type 80\r", "debug1: Entering interactive session.\r", "debug1: pledge: network\r", "debug3: receive packet: type 91\r", "debug2: callback start\r", "debug2: fd 3 setting TCP_NODELAY\r", "debug3: ssh_packet_set_tos: set IP_TOS 0x10\r", "debug2: client_session2_setup: id 0\r", "debug2: channel 0: request pty-req confirm 1\r", "debug3: send packet: type 98\r", "debug1: Sending environment.\r", "debug3: Ignored env TERM_SESSION_ID\r", "debug3: Ignored env SSH_AUTH_SOCK\r", "debug3: Ignored env Apple_PubSub_Socket_Render\r", "debug3: Ignored env COLORFGBG\r", "debug3: Ignored env ITERM_PROFILE\r", "debug3: Ignored env XPC_FLAGS\r", "debug1: Sending env LANG = zh_CN.UTF-8\r", "debug2: channel 0: request env confirm 0\r", "debug3: send packet: type 98\r", "debug3: Ignored env PWD\r", "debug3: Ignored env SHELL\r", "debug3: Ignored env TERM_PROGRAM_VERSION\r", "debug3: Ignored env TERM_PROGRAM\r", "debug3: Ignored env PATH\r", "debug3: Ignored env TERM\r", "debug3: Ignored env HOME\r", "debug3: Ignored env TMPDIR\r", "debug3: Ignored env USER\r", "debug3: Ignored env XPC_SERVICE_NAME\r", "debug3: Ignored env LOGNAME\r", "debug3: Ignored env ITERM_SESSION_ID\r", "debug3: Ignored env __CF_USER_TEXT_ENCODING\r", "debug3: Ignored env SHLVL\r", "debug3: Ignored env OLDPWD\r", "debug3: Ignored env ZSH\r", "debug3: Ignored env PAGER\r", "debug3: Ignored env LESS\r", "debug1: Sending env LC_CTYPE = zh_CN.UTF-8\r", "debug2: channel 0: request env confirm 0\r", "debug3: send packet: type 98\r", "debug3: Ignored env LSCOLORS\r", "debug3: Ignored env MAVEN_HOME\r", "debug3: Ignored env JAVA_HOME\r", "debug3: Ignored env CLASSPATH\r", "debug3: Ignored env _\r", "debug2: channel 0: request shell confirm 1\r", "debug3: send packet: type 98\r", "debug2: callback done\r", "debug2: channel 0: open confirm rwindow 0 rmax 32768\r", "debug3: send packet: type 1\r", "packet_write_wait: Connection to 101.200.63.184 port 22: Broken pipe", " 记得把日志中的 ip 去掉啊，另外 root 用户+密码登陆？？\r", "日志没看出来什么有用的东西，建议你去看看服务器日志", " 是不是要帮这位隐藏一下服务器 IP.. 不经意之间就粘贴出来了。。", "\r", "\r", "看起来很复杂啊...你可以试试按照上面的做法，设置通过代理连接看看  比如你本机开了一个 1080 的端口是 socks5 代理,试一下配置添加  ProxyCommand /usr/bin/nc -X 5 -x localhost:1080 %h %p", "忽略我上面说的代理 直接测试 ProxyCommand /usr/bin/nc %h %p", "iterm2 不走代理的", " \r", " 不经意间给粘贴出来了，汗。。。", "求解决办法啊", "公司局域网 ip 在服务器上设置白名单了吧", " 我回家后用其他电脑是可以连接上的，而且我同样用 mac 连不上自己的阿里云服务器", " 你 windows 能连上吗，用什么工具连的", " xshell", " 有尝试过清理 mac 上的 ssh key 吗，以前有遇到过类似的这种现象，不过当时是服务器重装造成的，清除本地的 ssh key 缓存重新连接即可。你可以尝试一下。", " 自从买回这个电脑，在家就没连成功过公司的电脑，在公司这台电脑能正常连接"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>公司需要给国内还有海外国家的验证短信\n看了云片 submail 啥的\n本来考虑阿里大鱼 可是不支持海外短信\n一筹莫展，今天想搜索看看鹅厂用的啥\n发现鹅厂有自己的短信服务国内国外都支持</p>\n<p>不知道有没有人用过，送达率和时间应该都比其他平台好一点吧\n<a href=\"https://www.qcloud.com/product/sms.html\" rel=\"nofollow\">https://www.qcloud.com/product/sms.html</a></p>\n</div></div>"], "reply": "11", "tittle": "有没有老司机用过腾讯云短信", "comment": ["给客户用过。\r", "\r", "范围不大，反应还行", "价格 ok,  接口全，支持 webhook ，支持短信回复。速度正常，后付费，企业可用个人不行。", " 是不是价钱太贵，不适合个人用？", " 价格很便宜, 只能企业认证的才能使用, 模板审核较严格.", " 同楼上，要企业营业执照审核", " 范围不大什么意思", " 支持自定义模板吧", " \r", "\r", "小规模使用", "已经用了好几个月了 还算稳定 \r", "申请模板只要符合规范 24 小时内都会通过\r", "\r", "另外 用了几个月了也没扣费不知道什么情况。。。", "国内短信和国际短信也就是海外短信我们做了好多年了，很成熟，可以沟通下", "对比了阿里大于、云通讯等几家短信服务商，感觉腾讯云这个短信的接口功能做的比较全，价格和阿里大于相同，算是便宜。"]},
{"content": ["<div class=\"topic_content\">渣本毕业吗，非科班，技术水平比培训班出身略好，毕业近一年半，一直都是自学\r<br>\r<br>家里人敦促我靠个县城的事业编，我自己想去外面去找份 Java 开发的工作，\r<br>\r<br>技术水平 目前很菜，基本增删查改， Java 基础还是可以的，写过 Linux 后台程序， Unix I/O 略 懂\r<br>\r<br>问题来了，是回家安逸混子，还是去北上广混程序员？\r<br>\r<br>，，，，，</div>"], "reply": "1", "tittle": "回县城考个事业单位，还是继续去北上广闯荡一番？", "comment": ["我觉得还是事业编 it 部门里 有大把时间，自学考个在读硕士，等过几年再考虑出来闯荡，一线城市人太多了"]},
{"content": ["<div class=\"topic_content\">本站帖子 <a target=\"_blank\" href=\"https://www.v2ex.com/t/326786\" rel=\"nofollow\">https://www.v2ex.com/t/326786</a>\r<br>\r<br>似乎是跟网络有关的？</div>"], "reply": "8", "tittle": "请问这个本站帖子里的他们在用树莓派做什么？", "comment": ["换个方式搭个 VPN 而已...仍然受限于国际出口，没什么卵用", " 请问这样搭 VPN 是绕道国内（较快的）线路连海外服务器吗？", "给钱买 CT CN2 国际出口怎么都快。从他叙述的这样搭，我觉得毫无意义，和从本地连接外国 VPS 无区别。不如买个 VPN 服务省事。。。", "我觉得楼上的回答不完全的，这不是 VPN ，这是民用的 BGP ，哈哈！\r", "\r", "如果各大运营商的用户共用自己的网络，就可以形成一个草根级别的 BGP ，这不关乎 vpn 。只关乎使用体验。\r", "\r", "试想你看视频的时候是不会想用移动的（自己的体验），但是如果访问 github ，你不会想用电信网络。问题是每一个运营商都有自己的绑定套餐，客户几乎是一入网，终身不换的。\r", "\r", "但是，你不可能只上国外技术社区，你也不可能天天就只追剧了。所以你偶尔想用邻居的网，完成你的任务。\r", "\r", "很不幸，很多有这种需要的人，只能同时使用多个ＩＳＰ的服务，这非常贵，非常非常贵！\r", "\r", "通常你先使用多个服务，然后购买多个手机，然后。。。。。。\r", "\r", "这些潜在的消费很不值得，其实你只是想用一下别人的网而已，用多少买多少，租来的最划算，持续占有成本高昂，但是很不幸，大部分人的网络都是闲置的，白白的为 ISP 付款，额外开销就更多了！\r", "\r", "这就是民用 BGP 的想法，一旦可以自由的使用网络访问资源，就不会有囤积资源的想法，不会有 BT ，不会有迅雷，只有轻松访问，随意使用，这也能减轻现在骨干网络负担。\r", "\r", "现在宽带标注的都是光纤到户，但是主干网络是没有那么多容量的，一味升级到户宽带，只会使主干网络越来越拥堵，我们真正需要的是到服务供应商的带宽！", "我也没看明白那个帖子，但楼上 @", "  说的 “民用 BGP ” ，  这个描述好形象。", "   原来你就是那个帖子的主人。\r", "话说， 这个 民用 BGP 的原理是怎么样的？ 那个帖子里的回帖有人回复过这个问题，貌似没有靠谱的（也许是我没有理解）答案。", "  同求原理 ， 多点之间的通信开销大不大 ， 树莓派(3)本身的性能与百兆网卡能否支持这样想法。", " @", " 我只是觉得这个理论上可行，有个大概的想法，但是我想跟人讨论一下，不知道有什么平台适合做这样的事情，可以画画图，大家一起辩证改进？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>各位大神，我是一点都没有基础，有什么好建议吗</p>\n</div></div>"], "reply": "50", "tittle": "想转行学技术， web 前端， PHP,html5 有什么好建议吗", "comment": ["兴趣是第一驱动力 而且做开发要做好进经常加班的公司的准备", "加班这点准备好。 html5 的趋势越来越火，只是觉得网站等等离不开 php 后台带代码， web 前端感觉学的比较全面的，就不知道从何下手，想去报脱产班学习会不会比较好。", "node 也是 js 语法 另外小项目可以用 baas 平台做后端 直接在界面中设置表结构输出 api 不用写后台代码", "前端是个坑，如果你学历好， 英文好， 随随便便就能找一个好公司， 如果不好的话， 呵呵， 抱歉， 小公司的前端等于打杂的。", "   英文就是我的致命点。如果培训出来大公司应该比较难进，只能先去小公司，那这样学 php 会比较好吧", "  那 h5 呢？怎么样呢？", "如果计算机基础一般，建议学前端，前端门槛低，但是深入的话还是需要一些基础的。", "前端虽说入门稍容易，但需要掌握的知识太多了，而且新技术是层出不穷。\r", "HTML ， CSS ， JavaScript 这是必须要掌握的。\r", "JS 可以看[廖雪峰的教程]( ", ")\r", "HTML 和 CSS 看 W3C 。\r", "不管想走哪条路，一定要多动手，自己去写代码才能转化为自己的东西。切忌眼高手低。", " 前端分为前端美工、前端开发和前端架构，对吧。大神你怎么看 H5 呢？", "学前端很累的， 3 个月技术革新一次\r", "当然，还是那么三大东西折腾来折腾去，但是太多的工具和库的学习成本实在太大\r", "\r", "做后端舒服很多（利益相关：做过 PHP ）", " 谢谢大师。“切忌眼高手低” 这点我会好好记住", "PS ：后端的工资起点高，比如 java 工程师，可能很菜，但是同一家公司内一般能达到前端的中级薪资水平", "  嗯，你们都是自学的吗？还是有去上培训的呢？", "前端是个大坑啊，如果可以选择，还是后端吧。。。", " 好的，看来是被坑过吧", "不要面向工资编程,要面向兴趣变成; 不然做了几年你就会来问‘能不能一直走技术路线，三十岁了该不该转管理’.\r", " 嗯，我是打算在技术学 4-5 年左右，想自己出来弄一下，前期基础想打结实一点。如果以后不是我搞技术，至少我看懂，不然被忽悠就惨了。", " 还没完全入坑，但是已无退路，正在痛苦得扭来扭去……", "  哈哈，等等我吧。我也准备跳入这个火坑了", "h5 不就是指前端嘛 前端和后端选准一个就往里学吧 不要像某些培训班号称培养什么大前端一样 前后端通吃 啥高级教啥 当然学习能力强的例外 4 个月出来结果啥都只会一点点 我就是被这种大前端培训班坑过 前端后端还有 h5 游戏全都教的培训班", "我也不是学计算机的，我是大学时候突然喜欢上计算机一直学，本专业和计算机毫无关系。如果你觉得自己计算机基础一般可以先补补基础，看看计算机专业的书，如果时间充裕就把计算机专业的都看看，比如 c 语言，计算机网络，数据库结构与设计，数据结构与算法。如果时间不充裕，可以学 web 前端，遇到不会的再补基础， web 前端主要学 html 、 css 、 javascript ，挑能看懂的书或者视频学习。前端越往后学需要的基础越多，基本上就是全栈了。", "说错了，是数据库原理", "如果你不喜欢前端，可以学学 php 、 python 这些语言比较简单些，兴趣是最好的老湿。", "扣扣    五二三八四 3880\r", "老司机带你上车", " 为啥我就连入门都不能，开始怀疑兴趣是最好的老师这句话了。。", "微软家的 c#教程真心做得好，学习起来应该很容易。", "主学 JS, html 和 CSS 也学熟练, 做几年前端或者后端 nodejs, 编程思想成熟了可以跨界各种玩了\r", "别想什么 Html5, 或者前端后端啥的, JS 基本上是万能的", "这么跟你说，前端的关键一是英文，二是 js ，这两样精通了，所有的库，所有的工具信手拈来，用的不爽还可以自己造轮子。当然，如果这两样没学好的话就是页面仔了，重复工作....", "很多人就盯着 html5 ，我都不知道为何 html5 成了前端代名词。。。", " 不要着急，万事开头难，多看点儿视频、书，说不定哪天就开窍了，书读百遍其义自见。", "唔，入门的话在编程语言选择方面， java 或 python 都还不错；而 javascript 、 ruby 这种的不太推荐，这些语言都过于灵活，涉及的概念也太多，对新手其实不够友好。\r", "\r", "另外建议注重一下计算机基础理论知识的学习，对于「程序员」来讲，这是基础，绝不能绕过。", "另外，关于前端再说两句。\r", "\r", "首先搁十年前你要说前端简单，那还可能是，因为那个时候毕竟前端会写点 html ， css 即可， js 最多用来做做表单校验之类的简单逻辑，稍微复杂的东西，那时候还都是用 flash 搞的。（ ps ：那个时候有的公司里前端工作还是设计兼着的）\r", "\r", "可是现在，前端所需要负责的东西越来越多，光是表单校验就能玩出一堆花儿来，更别提多平台，富交互组件，单页面应用，大型项目搭建和维护这些东西。各种框架、库和概念也是满天飞。后台还分 c#、 java 、 python 或 ruby 这些不同的平台和语言，在前端，所有人都只能搞 javascript ，恰恰这门语言的灵活性又非常搞，你琢磨这么多人一起玩这么一语言，可不玩的很遛嘛。\r", "\r", "所以，目前对前端来讲，只能说「入门简单」，毕竟基本的 html ， css 和 javascript ，你最多一个月就能全了解一遍，再稍微学一下 jQuery ，你就能作出一些看起来还想模像样的页面。可入了门以后那？没有坚实的计算机基础，面对这茫茫多的技术和概念，你也只能两眼一抹黑，完蛋。\r", "\r", "所以选择前端，千万不要抱着「简单易学」的心理，别对自己那么残忍。", " 我真的很疑惑，前端为什么总在讲计算机基础，\r", "这种应用层面的东西， javascript 自带 GC ，连内存都不用管了，跟计算机基础扯得上什么关系？\r", "排序有现成的 sort,都用浏览器做应用开发了？还追求性能？", " 对于非专业来说，初学 C#也是很难的，我学了一点就完全学不下去了，很多都看不懂。\r", "我还是建议先学 Python ，我入门 Python 之后再看 C#感觉简单了好多。\r", "Python 大法好！", " 额，与你相反。我是学了 C#才开始学别的语言的，感觉轻松， C#上手很友好，相对简单，而且还有神器 IDE 。说过分点，学 C#的时候其实你连 java 的基础也顺带学到了= =", "HTML 教程： ", "\r", "JS 教程： ", "\r", "PHP 教程： ", "\r", "\r", "这是我认为比较好的免费教程，可以去看看。多去看视频教程，想学什么就学什么 不要信楼上说的什么是坑什么不是坑。学了都没坏处的，你都学了才知道什么是你喜欢的什么是你不喜欢的。现在这个行业要啥都会才好混。\r", "不要还没有了解就买书，买书 1 你不知道买什么书好，初学就看书累的要死还看不懂，先在网上找视频看了入门，然后再买书。", "可以到 ", " 刷题", " C#在语言里面入门应该算是容易的了吧. 而且非常推荐使用 C#入门 OO", "建议是一群程序员喊着改行", "\r", "只能帮你到这里了！", "怎么这么多想转行程序员的，不过想想也不奇怪，有时我还想转行干别的呢，选什么都有可能失败，那就选最喜欢好了，另外干这行要有一点工匠精神", " C#和 JAVA 语法上有很多相似的。\r", "主要是 Python 的语法比 C#简练很多，平常写些简单的工具可以少写很多代码，可以专注于代码而不用理会界面，比较快能理解程序的运行原理。界面真的是个坑，总感觉很难看，你又忍不住要去改。。。。", "珍爱生命，远离 IT", "学前端吧，我觉得前端好就业，而且学到一定程度做后端没问题 什么都能接触到。", " 我想问一下 c#做后台的话，能跑在 Linux 之类的上面吗？跨平台不是很好吧？", " 可以跑 但是还不成熟. 期待.net Core 的生态更新吧", " 谢谢大师", "  好的， OK", "   哈哈，准备走上不归路了", "  嗯，好的"]},
{"content": ["<div class=\"topic_content\">之前用的是 pycharm 和 sublime ，可以他们都支持这种自动补全：\r<br>\r<br>div.col-md-12 &lt;tab&gt;\r<br>\r<br>可以补全成&lt;div class=\"col-md-12\"&gt; &lt;/div&gt;\r<br>\r<br>用 vim 之后装了 YCM ，发现这个插件只支持标签关闭。有没有能和 sublime 对 html 的支持一样的 vim 插件呢？</div>"], "reply": "8", "tittle": "vim 有什么好用的对 html 自动补全的插件？", "comment": ["据我所知， sublime 用的是 Emmet 插件吧？\r", "这个插件 vim 也有啊。\r", " 额 我好像直接安装官方版的就有这个补全了\r", "\r", "我去下载这个插件试试 多谢", "你说的那个不叫补全，你要是搜 vim auto completion 肯定都是推荐 YCM, neocomplete 之类的。你说的那个最开始叫 zencode, 后来改名叫 emmet.\r", "如果对这一块儿感兴趣的话，可以再搜搜 snippets.", "有没有 vim 的‘“（之类的补全", " 哦谢谢，原来不叫自动补全啊…… 我去用一下你说的这些，谢谢啦", " \r", " \r", "多谢啊！这就是我要找的东西，学到了更多写 html 的 zen ！", " \r", "如果你只是的输入 (, 然后添加 ) 的话, 那应该是有的.\r", "\r", "虽然我没用过,但是 star 这么多应该可以满足需要.", " ok 也去试一下 多谢"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><b>注意，本次分享适合以下人群收听：</b><br>\n.有一定的 node 基础知识，但是缺少项目经验的；<br>\n.大学刚毕业者；<br>\n.从培训学校刚培训结束的；<br>\n.工作一两年的；<br>\n.想和 hr 建立深厚友谊的；<br>\n.想在公司内部赚取外快的…（厉害了 word 哥...）<br></p>\n<p>分享嘉宾：慕课网兼职讲师张柳，实力派全栈工程师，擅长 nodejs 、 react 、 react-native ，效率流老鸟，带你编程带你飞！</p>\n<p>保证满满的干货！请用微信扫一扫即可进入直播间报名参加啦！\n<img alt=\"图片标题\" src=\"http://ww1.sinaimg.cn/mw690/8db48fb7jw1fao5kobod7j20hs0se45s.jpg\"></p>\n</div></div>"], "reply": "3", "tittle": "老司机教教你如何用 node.js 抢 HR 的饭碗！", "comment": ["直接接入到千聊？", " 嗯 是的，不用下载，直接关注进入就好", "感兴趣的小伙伴现在报名参加免费啦~"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>本地配置使用,没有问题，上传到服务器上就出问题了，\nFailed to load resource: the server responded with a status of 403 (Forbidden)\n无语了，记不清这是第多少次出问题了，又开始看文档，看网上的博客，手起键落，啪啪啪啦一阵\n然后最后还是不行\n不过我还会继续...</p>\n<p>官网上的文档写的很简单，也没有一个讨论的社区， github 上的这个社区 <a href=\"https://github.com/fex-team/ueditor/issues\" rel=\"nofollow\">https://github.com/fex-team/ueditor/issues</a> ，问题多的都快长草了，都不晓得当初百度决定把这个东西开源，然后都没想想后面怎么维护，百度是一家这样的公司 ？？？？？？  右手中指</p>\n<p>实际上作为一个新人是没啥发言权的，而且是使用别人的东西，自己本来就菜，\n学习一门新技术，通过查文档，看别人写的博客，但是希望学的技术可以让这个世界更美好点\n搬砖去了，期待有一天树起骄傲的中指，然后干掉这些个 SB 公司</p>\n</div></div>"], "reply": "167", "tittle": "从 Ueditor 看百度是一家什么样的公司？", "comment": ["黑一个东西不需要理由的，只是有些东西我们尊重，我们不会去黑  楼主这话 看上去牛逼哄哄的", "所以国内环境就是这样，我自己经营着一个前端开发群，问问题的很多人都巴不得你手把手教他们；\r", "类似：我不懂这个，你写个 demo 给我吧。\r", "楼主这个，真的，技术菜不是原罪，可怕的是白拿了人家的东西还嫌弃，这才是最恶心的。\r", "人家没逼你用，坑多大可不用。何必如此措辞呢？", "我是坚定不移的百度黑，从来没变过。\r", "\r", "但是人家既然开源出来了，就没必要这样黑了吧。且不说这东西用户基数那么大，肯定不会差到这种地步。文档差就用户自己贡献，这也是开源的意义。而且现在这种情况，其实和文档没多大关系，应该去寻求社区帮助。把环境，步骤，日志贴一下，说不定有人就能帮上忙解决了。\r", "\r", "我对所有开源都是一种感恩的态度，在免费开源软件的捐助 /购买远超过收费软件。公司商业策略上的问题和开源无关，至少应该区别对待。", " \r", " \r", "楼上正解", "觉得 ueditor 的文档还不错呀，我几乎都不用配置，官方的例子放上去就可以用呢", "ueditor 不好黑啊，在为数不多的富文本编辑器里也算好用的了。\r", "\r", "还是直接骂百度吧。", "403 怎么也能怪到 ueditor ……槽点有点多", "  评价的很客观，新人应该学习如何自己去解决问题，比如上 stackoverflow,而不是占用别人时间，或则埋怨什么；不过这贴是我写的，的确是埋怨了，或则说黑 UE 了，所以你说的我都接受，感谢你的回复", " 黑都黑了，黑之前没意识到这么多问题，不过挺应该去社区的；你对开源软件的态度值得学习，感谢回复", " 感谢你的回复，受教", "所以我写了这贴，听听大家对我的看法，感谢你的回复", "怎么突然就互相掐起来了。。看的一脸懵逼，百度其他不说，莆田系就够黑了，不能再黑了", "   确实不好黑，不黑了", "同是小白，花了一天研究，确实文档感觉说的挺少，但是仔细看还是能发现自己配置失误的地方。静下心再试试吧", " 的确，你当这是篇黑 UE 的帖子吧，而且还是业余的。。。", "拉一个开源项目下来还责怪作者文档写的差的，我觉得你不是在黑人你是在自黑，体现出自己的无知。另外，建议你去把 google 的 v8 项目拉下来，试着编译一下，你会发现没有哪个开源库是没有坑的，你觉得有坑那是你水，别人为什么不觉得呢？  v8 的 master 从 15 年的某次提交开始应该就无法按文档中的 gyp 编译了，你是不是又要骂 v8 也是个很烂的项目了呢？那我建议你把 chrome 浏览器卸了吧，那东西的 js 引擎是 v8 ，你把 nodejs 也卸了，千万别用，那东西的执行引擎也是 v8 。", "我自己用的第一款富文本编辑器就是 UEditor ，其实他的文档对于入门和简单基础功能使用来说还是比较好的，谈论用户体验的话，我对它的图片转存功能要大大的点赞，这个解决了我很多次从 word 中复制到该编辑器进行内容导入提供了非常大的便利。\r", "\r", "楼上很多人也是光黑楼主服务器配置问题，忽略了楼主后面说的开源社区 issues 长草的问题，这两个黑点应该是息息相关的，既然可能存在这种问题，就应该是在手册的末尾弄个 FAQ ，或者弄个 BBS 给用户讨论。（事实上他的主页上面的论坛按钮直接进入的是 github 而不是自建的 BBS ，我看其他技术社区都有用 dz 或者 wechat 自建一个 BBS ）。\r", "\r", "百度确实做了很多恶，但是他的 Echarts 和 UEditor 确实用心做了很多。\r", "\r", "最后吐槽一下百度的前端和设计真的非常成问题，看看 UEditor 的主页，设计的和那些普通大学生刚学 CSS 做出来的页面差不多的效果，缺乏大气美。相反 Echarts 的主页做的就不错。也可能是年代问题吧。还有我是百度贴吧重度用户，它的贴吧个个页面性能优化非常不到位，百度贴吧客户端访问外链会显示空白页面的 BUG 已经跨了 4 个大版本号还没有解决。还有 BSRC 提交可盗号的存储型 XSS 漏洞吝啬到只送一个娃娃和钥匙扣的境界我也是很服。\r", "\r", "楼主有什么问题我们也可以互换一下联系方式，有空私下交流。 o(∩_∩)o", " v2 好像黑开源的 ThinkPHP 已经成了一种风气，当时黑 TP 的时候怎么没人这样说呢", " 楼主心态很好，要是我估计早就跳起来了\r", "\r", "希望你能早日解决问题", "不知道为什么有些人看到别人发表的言论可能存在问题时开口就骂，我觉得发帖子的目的应该就是和大家交流讨论请教的吧。你不同意别人的观点，那么请文明的表达出你的想法，比如假设楼主解决不了 403 ，那说一下如何解决 403 错误，或者你不想帮助别人解决这样的问题，也不必开口就骂吧。不是很能理解这种行为", "百度的几个前端来源东西还蛮好用的，文档比阿里后台框架的强多了.", "真的无脑黑，百度欠你了。我相信 v2 上很多人都有开源项目，如果别人 fork 你代码还这样喷，我是看不下去", "  UE 有一个官网，地址 ", " github 上 fork 的代码，还有写这贴之前不知道开源和维护之间的啥关系，只是觉得 UE 挺多人使用的，而且许多人使用也存在问题；百度不欠我什么，就像你觉得我“无脑黑”一样，写这贴的时候我觉得 UE 使用起来问题多多；这贴是我写的，你说的“无脑黑”也没啥毛病", " 说的挺对的，，没啥毛病；“我觉得有坑是我水”；下次你遇到坑的时候，也希望你可以践行你的这句格言，此外，发这贴的时候沉浸在情绪中，没有意识到这贴还有这高级功能，自黑，体现自己的无知，感谢你的回复", " 最懂我的回复，一个小青年，感动的快哭了 QAQ \r", "我之前试着，去解决问题，通过看 UE 的文档，网上的博客，上 stackoverflow ，面对有限的文档由于经验和判断力有限，我试着通过 UE 官网，去加入 UE 的官方群，全部都是禁加，官网上的联系方式也没啥用， github 上的 issue 也没人管，我知道的遇到问题的人也比多，想吐槽下 UE 就写了这个帖子；此外，你说的百度的前端和设计，技术上应该是没啥问题的，毕竟是 BAT 中的一员，只是当初负责维护的人被调去其他部门，维护基本上停止了；至于贴吧的问题，你可以向百度贴吧维护的技术反映下，如果还是没有解决，你可以做点你想做的事   QWER\r", "我的问题自己已经解决了，感谢回复", " 问题已被解决，当穿着无知和骄傲的底裤面对的全世界的时候，保持安静才不会让人觉得更滑稽，感谢回复", " 文明的态度值得学习，也期待那样美好的社区，感谢回复", " 你把这句话当做课本里的”陈述句“来读，就不会这样觉得了，感谢回复", " 要是楼主发帖能文明一点，我想也没有人上来就对楼主有意见，可楼主发帖这语气根本不是来交流讨论的，就是想闹事情找喷嘛，求仁得仁，大家都开心\r", "在 V2 ，有问题说问题的，问题早就解决了，本来就不是来求助解决问题的，怎么文明回帖解决\r", "\r", "以上，希望帮助你理解", " 第一次发帖，并不知道 V2 的提问指南 ", "  ，最后一句完全是当时“中二”加上去的，发出来本来想改， V2 好像过了 300s 后  ", " 就不能改了；不过也没啥关系，反正是我写的，也是当时我想说的，评论里根据我发帖语气评论的，也没啥毛病，感谢回复", " 解决问题的确得静下心来，而且在一些差的情况下，保持心态；发这贴的时候没保持住，此外，问题已解决，感谢回复", "UE 这么烂为啥 lz 非要用呢？", " 领导指定说用这个东西，领导还说没什么问题解决不了的", "千言万语浓缩成一句 “呵呵”", "就是你这样的傻逼太多，国内很多优质的东西才不开源！\r", "\r", "傻逼，垃圾", "伸手党太多，不想自己动脑子解决问题的伸手党更多。", "UE 还有团队维护么 - - 我们现在有用到 ECharts 好像 开源的就不要喷了", "没用过。。。", "感觉这明显是 黑啊!\r", "\r", "我猜,当初写这个 UE 的人可能已经离职了,或者团队的人都散了,大家都有自己的事情,而且现在技术更新这么快,自然慢慢的就有点问题了..\r", "\r", "楼主这么说,感觉就像是 可以自己买私家车,自己嫌贵,有便宜的公交,嫌脏!\r", "\r", "勿为黑而黑..   \r", "\r", "建议楼主试试其他的吧...", "ueditor 这个插件里面包含 jsp 代码，这个代码还是 FE 写的，代码有多乱用过的都知道", "个人觉得 ueditor 起码是现在做的最好的中文编辑器了，百度能够开源已经是很不错了，题主作为一个技术还是应该专研怎么解决问题，人家开源了就是希望能够有更多的人去帮忙维护，因为没人为你服务而黑百度，这样真心不好，我以前一直是百度黑，但是在 ueditor 这件事情上，我还是要支持百度的，希望楼主能自己解决问题，当你靠自己解决问题后，你会发现你的能力提升了 10 个档次，虽然这样可能会花费你几天甚至更多的时间，但是这样对你的成长来说是值得的。\r", "\r", "祝楼主早日成为大神", "     呵呵 怪我咯，我还真没我有这么大的影响力    哈哈", " 骂别人的时候自己先照照镜子，你用过 UE 么？", " 你的意思是我我是伸手党咯，而且不想自己动脑子解决问题的伸手党？来来来，请正面回答下，不要骂人都含糊不清的，还有麻烦你解释下什么样的人不是伸手党？", " 我用的时候你可能还在尿裤子", " 原来是前辈啊， UE 差不多 2010 才开始开发的，那个时候我没有在尿裤子，附上开发背景 ", "仔细看了下帖子， lz 发帖的时候带着戾气说了一些不经过思考的话。感觉后面也诚恳认错了。的确，开源的东西就在那边，喜欢就用，不喜欢就不用，有能力就自己 fork 自己改。不做伸手党，努力解决各种坑才能成长。", " 我骂人？我说的含糊？既然你这么说，那我就骂你好了，我说你就是伸手党，开源的更多的是提供一种解决问题的办法，思路，而不是写得好好的东西给你，不然把源码给你做什么？用着别人的东西，不想着去改进产品，去解决遇到的问题，而是跑来这里对别人竖中指，还期待傲娇的竖中指，你这种是纯傻逼， 24K ，纯的！", "给 UEditor 写过插件，总的来说，这款编辑器没那么差劲。作为一个技术，我想说，软件开源出来，不断更新维护是要花很多精力的。如果不是收费软件，这不是作者的义务。", "。。。让这个世界美好点。。。", "开源不维护没啥问题，因为这事儿竖中指也没啥毛病\r", "\r", "但这个帖子的题目就有点标题党了，那你倒是说说，通过这，看出百度是啥样的公司了呢？\r", "还是那句话，不要为了黑而黑，这样黑，显得姿势水平略低", " 你如果没骂我的话，我的上一条回复就有问题了，在这给你道歉；还有，如果是骂我的我，你这次回复的说的就挺正确的，没啥毛病，感谢回复", " 写这贴之前不知道开源和维护啥关系，言辞也有点偏激，的确这不是作者的义务，但许多人使用依旧存在问题，可能是缺少个专业的社区吧，感谢你的回复", "我觉得还是就事论事。 Ueditor 不好用，文档少、过时，不解决 issue ，那就说 Ueditor 。百度有各种黑点，那就去就着那些黑点说。但是从 ueditor 然后各种给百度竖中指就不好了吧", " 从 Ueditor 看百度是一家什么样的公司？ 这是一个问句， LZ 是个标题党，写这个标题更多是为了听听大家的看法，仁者见仁，智者见智，你觉得我是为黑而黑，那就是为黑而黑吧，这确实是个显示了我姿势水平略低的帖子，没啥毛病，感谢你的回复", " 新人第一次发帖，写贴的时候情绪有点偏激，而且 v2 过了 300s 还不能编辑。此外，这贴是我亲手写的，可能黑点不是很对，请多指教，感谢回复", "mdzz", " 撤回下，应该说：吓得我都不敢在网上贴代码，敢情这东西不仅要负责一辈子，还是理所当然的", " 你的回复立场明确，言简意赅；此外，建议你不要随便回复你认为是 zz 的帖子，因为这样，我会觉得你和我没什么区别", "lz ，墙倒众人推，认错是没用滴。一旦被人占据了舆论高地(被人带了风向)，平时战斗力只有 5 的渣渣，都会跟风跳到你的头上狠狠踩一脚，博一个夺目的镜头，你就是最好的舞台，咩哈哈哈哈", " 此贴虽然是吐槽， LZ 却没有说过一个东西需要负责一辈子的话，如果有，请指出？感谢回复", " nonono,没啥关系，贴是俺写的；来者是客，来者不拒", " 图片转存功能并不复杂，只需要用 JavaScript 浏览器 API+图片上传即可实现。\r", "\r", "至于为什么不维护了，以个人经验猜测，是小团队去做其他项目了。毕竟业绩不好，人手就容易不足。", "其实我觉得虽说没义务但是做任何事情要么不做，要么尽量做好，不要半吊子.更不应该开源让别人当小白鼠然后自己内部搞一个版本，然后来源的就丢那儿不管了，虽说没法指责，但也觉得哪里不对.比如阿里某些来源就是拿来源做测试，然后内部搞个稳定版.", " 这个东西闲暇时间我看了源码看了好几周，经验能力有限，解决问题的时候心态没把握好写了这个帖子，不过没啥好解释的，此外，你的建议非常中肯，非常感谢你的回复", "樓主的態度已經很不錯了……不知道樓上那些人張口就髒話是為什麼", "微信后台用的好像就是这个"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>恶补下</p>\n</div></div>"], "reply": "3", "tittle": "看开源代码，遇到网络代码部分看着有点吃力，有什么好的书籍推荐下。", "comment": ["Linux 高性能服务器编程", "入门的话可以看 tcpip 卷一", " 手里有一本，好久之前坑的。现在忘的差不多了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://www.v2ex.com/t/326302#reply40\" rel=\"nofollow\">Mac 软件推荐 -- 大众篇(你用过哪些? 有补充的么)</a> 发了前一篇, 被喷了. (不过反正还是有人有收获嘛)</p>\n<p>无所谓了, 反正我的目的是来看看 V2EX 能否带来点流量.  欢迎有兴趣的同学前往<a href=\"http://www.tanglei.me/blog/app-in-mac-for-dev.html\" rel=\"nofollow\">我的 blog 原文</a>, 再有兴趣的可以关注下我的公众号: tangleithu (文末二维码)</p>\n<hr>\n<p>在前面一篇文章<a href=\"http://www.tanglei.name/blog/app-in-mac-for-common.html\" rel=\"nofollow\">“ Mac 软件推荐续(!程序猿篇)”</a> (文章取名装 X 失败, 悲伤)中, 我已经介绍了一些大众化的软件, 当然作为程序猿的你也应该参考参考. \n本篇文章将介绍一些可以提高程序猿工作效率的一些软件和工具及相关配置.</p>\n<p></p><h2>Mac built-in</h2><p></p>\n<p>首先介绍的就是我觉得应该熟悉 Mac 内置的一些软件及配置.</p>\n<p></p><h3>trackpad 配置</h3><p></p>\n<ol>\n  <li>\n    <p><strong>启用 Tap to click</strong>: 在 <code>System Preferences -&gt; Trackpad </code> 中启用, 用 <strong>tap</strong> 替换 <strong>click</strong> 的操作, 明明轻轻 <strong>tap</strong> 就可以完成的, 为何还要用力点击才 OK. 现在偶尔用其他人电脑非得用力 click 就太纠结了.\n同时, 还有 “右键”功能, <strong>Secondary click</strong>, 用两个手指 tap 弹出右键菜单. \n<img alt=\"mac trackpad 设置\" src=\"http://www.tanglei.me/resources/app-in-mac/mac-os-trackpad.png\"></p>\n  </li>\n  <li>\n    <p><strong>开启单词选词查询</strong>:\n选中某个中英文单词后, 三指 tab 会弹出词典释义. 这个在<a href=\"http://www.tanglei.name/blog/app-in-mac-preface.html\" rel=\"nofollow\">之前一篇文章</a>中也有介绍.</p>\n  </li>\n  <li>\n    <p><strong>Scroll 方向</strong>: 这个道是自己习惯就好. 由于我刚开始从 Win 转向 Mac 的时候习惯用 Win 的那种方式, 于是就没有开启 <em>Scroll direction: natural</em>, 然后也一直沿用至今.</p>\n  </li>\n  <li>\n    <p><strong>其他手势</strong>: 有必要熟悉一下, 比如知道在 Win 环境下用 <code>win+d</code> 可以显示桌面, 相应的功能在 Mac 下如何做.</p>\n  </li>\n</ol>\n<p></p><h3>快捷键</h3><p></p>\n<p>作为程序猿, 肯定离不开各种快捷键. 对于 Mac 内置的一些快捷键, 我们还是很有必要知道的.  基本的复制 /粘贴就不说了, 常用的还有</p>\n<div><pre><code>空格键: 预览\ncmd + ,: 设置\ncmd + -/=: 缩小 /放大\nctrl + u: 删除到行首(与 zsh 冲突, zsh 中是删除整行)\nctrl + k: 删除到行尾\nctrl + p/n: 上 /下移动一行或者前 /后一个命令\nctrl + b/f: 光标前 /后移 char\nesc + b/f: 光标前 /后移 word(蛋疼不能连续 work)\nctrl + a/e: 到行首 /行尾\nctrl + h/d: 删前 /后字符\nctrl + y: 粘贴\nctrl + w: 删除前一个单词\nesc + d: 删后一个单词\nctrl + _: undo\nctrl + r: bck-i-search/reverse-i-search, 输入关键字搜索历史命令\n</code></pre>\n</div>\n<p>上面的这些快捷键特别是在敲命令时还是很有用的(可能有的确实是在命令行中才生效), 特别是结合 zsh 自动补全等功能. 比较 DT 的是就是 <code>esc</code> 一起用的时候, 不能连续使用. 举个例子, terminal 中输入了 <code>git push origin source</code>, 光标在末尾, 这时按住<code>ctrl</code> 不放, 按一下 <code>w</code> 即向前删除一个单词, 第一次按 <code>w</code> 删除 <em>source</em>, 再按 <code>w</code> 删除 <em>origin</em>. 而 <code>esc + d</code> 不能这样结合使用(如下 gif 连续按就不 work), <code>esc</code> 必须中途释放再按才能 work.</p>\n<p><img alt=\"bash 自动补全\" src=\"http://www.tanglei.me/resources/app-in-mac/builtin-quick-key-git-push.gif\"></p>\n<p>啥? 你说上面快捷键 <code>ctrl + w</code> 等不太好按? 按键特别别扭? \n你需要做的就是将 <code>caps lock</code> 映射为 <code>ctrl</code>, <code>Keyboard -&gt; Modifier Keys </code>修改, 目前我笔记本上的 <code>ctrl</code> 键无效. 不过, 一般情况下我用我的 HHKB, 这种映射方式正好符合 HHKB 的布局. (其实我是在买 HHKB 之前就修改的这个映射)</p>\n<p>另外, 借助之前介绍的<strong>Karabiner</strong>, 可以将一些常用的方向键(上下左右)重新映射一下, 比如我目前是 <code>s + h/j/k/l</code> 来表示方向, 手不用太移动就能直接按方向(HHKB 本身按方向太麻烦, Mac 内置键盘有方向键还需要大幅度移动手), 用起来方便多了.</p>\n<p>Mac 内置的更多的快捷键列表可以参考 <a href=\"https://support.apple.com/zh-cn/HT201236\" rel=\"nofollow\">Mac 官网</a></p>\n<p>其他还有一些常用的软件的快捷键, 可以用之前介绍的软件 cheetsheet, 长按 <strong>cmd</strong>, 可弹出当前 active 的软件的快捷键.</p>\n<p></p><h3>截图</h3><p></p>\n<p>这个从快捷键中单独列出来了, 就强调下这个功能.</p>\n<p><code>cmd + shift + 3</code> 截取整个屏幕. \n<code>cmd + shift + 4</code> 部分窗口, 出现十字供选取, 若此时按<strong>空格键</strong>(这个技能得点赞), 会选取当前应用的窗口, 再 <strong>tap</strong> 即可完成截图.</p>\n<p>上面快捷键是截图后以文件形式保存在桌面(默认是桌面, 当然你也可以自己修改保存位置), 再上面快捷键基础上再同时按 <code>ctrl</code> 就会把图片保存在内存 /剪贴板中, 直接去相应窗口粘贴即可.</p>\n<p></p><h2>home brew</h2><p></p>\n<p>类似 centos 的 <strong>yum</strong>, ubuntu 的 <strong>apt-get</strong>, 能够方便管理安装软件包. \nMac 上类似的应用还有<strong>port</strong>, 我刚开始试用过 port, 貌似 brew 上的源会多一些. \nbrew-cask 是 brew 的一个加强版, 可以安装一些桌面应用, 例如 chrome 等等之类的.</p>\n<p>这里就不多介绍了, 详情可以到官网查看. \n<a href=\"http://brew.sh/\" rel=\"nofollow\">brew</a>\n<a href=\"https://caskroom.github.io/\" rel=\"nofollow\">brew-cask</a></p>\n<p></p><h2>iTerm2</h2><p></p>\n<p><a href=\"http://www.iterm2.com/features.html\" rel=\"nofollow\">iTerm2 官网</a>有介绍功能. 以下是觉得可能常用的功能.</p>\n<ol>\n  <li><strong>分屏功能</strong>\n    <ul>\n      <li><code>cmd + d</code> 竖着分屏, <code>cmd + shift + d</code> 横着分屏</li>\n      <li><code>cmd + t</code> 新建一个 tab, <code>cmd + num</code> 切换到第 num 个 tab</li>\n      <li>当前窗口含有分屏时, 通过 <code>cmd + [</code> 和 <code>cmd + ]</code> 来进行切换小的分屏</li>\n    </ul>\n  </li>\n  <li>\n    <p><strong>热键</strong> 设置一个热键, 比如我的是 <code>alt + 空格</code>, 弹出 iTerm2, 且以半透明的方式显示在当前 active 的窗口上面.\n<img alt=\"iTerm2 hotkey\" src=\"http://www.tanglei.me/resources/app-in-mac/iterm2-hotkey.png\"></p>\n  </li>\n  <li>搜索\n    <ul>\n      <li><code>cmd + f</code>搜索输入关键字后, 匹配的会黄色高亮, 此时按 <code>tab</code> 或者 <code>shift + tab</code> 会自动向后 /前以 word 的方式选中高亮的, 并自动 copy 到剪切板.</li>\n      <li><code>cmd + alt + e</code>, 在所有的 tab 中全局搜索, 搜索出候选项后, 再选着你想要进入的 tab.</li>\n    </ul>\n  </li>\n</ol>\n<p><img alt=\"iTerm2 search\" src=\"http://www.tanglei.me/resources/app-in-mac/iterm2-search-all.png\"></p>\n<ol>\n  <li>其他\n    <ul>\n      <li>新版本的 iTerm2 还支持直接在控制台里 ls 图片文件(图片显示在控制台里).(如上图下半部分, 连 gif 都支持)</li>\n      <li>自动识别控制台里的内容, 如含有链接或者本地文件路径可以用 <code>cmd</code> 加点击的方式直接打开链接或者文件(如下图上半部分). 这个功能很重要呢, 比如在编译过程中, 出现了 warning 或者 error, 一般会打印出具体文件路径, 此时直接从控制台就能打开文件进行 fix 了.</li>\n      <li>自动补全, iTerm2 本身是支持自动补全的(<code>cmd + ;</code>), 不过建议直接结合后面的 zsh 使用. <code>cmd + shift + h</code> 剪贴板历史(下图最后一行).</li>\n      <li>一些高级的功能目前可能处于测试版本, 你若用的稳定版是不支持的, 需要到官网下测试版. 还有更多的功能请到 iTerm2 官网探索吧.</li>\n    </ul>\n  </li>\n</ol>\n<p><img alt=\"iTerm2 imgcat\" src=\"http://www.tanglei.me/resources/app-in-mac/iterm2-imgcat-show-history.png\"></p>\n<p></p><h2>zsh</h2><p></p>\n<p>这个墙裂推荐啊. 结合 <a href=\"http://ohmyz.sh/\" rel=\"nofollow\">oh my zsh</a>, 丰富的<a href=\"https://github.com/robbyrussell/oh-my-zsh/wiki/Plugins-Overview\" rel=\"nofollow\">插件资源</a>.</p>\n<p>语法高亮, 自动补全等特别好, 在此推荐的几个插件或功能.</p>\n<ol>\n  <li><strong>git</strong>: 当前目录若是在一个 git repo 下面的话, 会自动显示当前的分支信息等等. 然后可以自己搞一些 alias, 简写命令, 比如我常用的一些.</li>\n</ol>\n<div><pre><code>alias gs='git status'\nalias gb='git branch -va'\nalias gco='git checkout'\nalias ga='git add'\nalias gc='git commit -m'\nalias gp='git push'\nalias gfom='git fetch origin master'\nalias gfod='git fetch origin develop'\nalias grod='git rebase origin/develop'\nalias grom='git rebase origin/master'\n</code></pre>\n</div>\n<ol>\n  <li>\n    <p><strong>autojump</strong>: 这个也炒鸡赞. 会自动记录你 <code>cd</code> 过的目录, 下次你直接 <code>j keyword</code> 就会自动 <code>cd</code> 到以 <em>keyword</em> 匹配的目录. 输入 <code>d</code> 会展示当前会话访问过的目录, 然后对应目录有标号, 接下来按标号即可跳转.</p>\n  </li>\n  <li>\n    <p><strong>osx</strong>: 举个最简单的例子, 比如你现在正在 finder 中浏览一个很深的目录, 现在突然想 cd 到这个目录去做一些命令操作. 如果你用 xtrafinder 这样的软件的话道有这样的功能, 如果配上这个插件, 你直接输入 <code>cdf</code> (cd finder)就自动 <code>cd</code> 到 finder 打开的目录下.</p>\n  </li>\n  <li>\n    <p><strong>zsh-autosuggestions</strong>, 如下图所示, 我在 <em>app-in-mac</em> 这个目录下, 刚输入了 <code>git</code>, 此时光标还在 <code>p</code> 前面, zsh 就已经自动给我补全了 <code>git push origin source</code>, 此时我只要按 <code>ctrl + e</code> 跳转到行尾(所以熟悉上文中的快捷键很有必要啊), 回车即可执行命令了.</p>\n  </li>\n</ol>\n<p><img alt=\"iTerm2 zsh plugins\" src=\"http://www.tanglei.me/resources/app-in-mac/zsh-plugins.png\"></p>\n<p>更多的, 还是请到官网查看.</p>\n<p></p><h2>sublime text</h2><p></p>\n<p>文本编辑器, 也有丰富的插件支持, 直接<a href=\"http://www.sublimetext.com/\" rel=\"nofollow\">官网</a>看吧. 这个 App, 我用得也不是很多.</p>\n<p>这里分享一个小的功能, 怎么在命令行用 sublime 打开特定的文件. 其实就是添加一个软链即可. (直接 <code>open filename</code> 会以文件默认关键的软件打开)</p>\n<div><pre><code>➜  app-in-mac git:<span>(</span><span>source</span><span>)</span> ✗ subl dungeon-game.cpp\n➜  app-in-mac git:<span>(</span><span>source</span><span>)</span> ✗ which subl\n/usr/local/bin/subl\n➜  app-in-mac git:<span>(</span><span>source</span><span>)</span> ✗ ls -la /usr/local/bin/subl\nlrwxr-xr-x  1 tanglei  admin  62  1 24  2016 /usr/local/bin/subl -&gt; /Applications/Sublime Text.app/Contents/SharedSupport/bin/subl\n</code></pre>\n</div>\n<p></p><h2>Vim</h2><p></p>\n<p>介绍 Vim 的文章也很多了. 这里就不详细展开了. 分享下我用的部分插件. (最近被 IntelliJ IDEA 搞得恶心了, 准备尝试抛弃), \n为了让多台电脑同步我的 vim 配置 /插件等, 我直接放 github 了(<a href=\"https://github.com/tl3shi/vimconfigs.git\" rel=\"nofollow\">ref vimconfigs</a>), 不同电脑只需要再建一个软链到 github 中的 vimrc 即可.</p>\n<p><img alt=\"vim 自动补全\" src=\"http://www.tanglei.me/resources/app-in-mac/vim-autocomplete.png\"></p>\n<ul>\n  <li>Vundle/Pathogen: 插件管理, 我用的 Pathogen, 直接将下面 github repo clone 到 <code>~/.vim/bundle/</code> 目录下即可</li>\n  <li>NERDTree: 文件目录树<a href=\"https://github.com/scrooloose/nerdtree.git\" rel=\"nofollow\">nerdtree github src</a></li>\n  <li>YouCompleteMe: <a href=\"https://github.com/Valloric/YouCompleteMe\" rel=\"nofollow\">YouCompleteMe github src</a> 自动补全, 对 C 系列, 结合其他的可支持 Java/Python/Js 等,  跪求 Scala 支持</li>\n  <li>ctrlp.vim: <a href=\"https://github.com/ctrlpvim/ctrlp.vim\" rel=\"nofollow\">快速搜索文件</a></li>\n  <li>minibufexpl.vim: 会把最近打开的文件列出来方便跳转, <a href=\"https://github.com/fholgado/minibufexpl.vim.git\" rel=\"nofollow\">github src</a></li>\n  <li>conque-term: shell 跑在 vim 里面, <a href=\"https://github.com/tl3shi/conque-term.git\" rel=\"nofollow\">github src</a></li>\n  <li>ag: 代码搜索, 可结合 ctrlp.vim, 如果后者搜索太慢的话, <a href=\"https://github.com/rking/ag.vim.git\" rel=\"nofollow\">github src</a></li>\n  <li>tagbar/taglist: 标签, 能显示类结构信息等, <a href=\"https://github.com/majutsushi/tagbar.git\" rel=\"nofollow\">tagbar github src</a></li>\n  <li>vim-surround:  处理诸如<code>(), \"\", []</code> 等配对信息, <a href=\"https://github.com/tpope/vim-surround.git\" rel=\"nofollow\">github src</a>, <a href=\"http://zuyunfei.com/2013/04/17/killer-plugin-of-vim-surround/\" rel=\"nofollow\">ref</a></li>\n  <li>vim-easymotion: 快速跳转, 关键字后会给匹配到的标记, 再选标记并跳转(类似后文介绍 Chrome 插件的 Vimium 中的链接标记并跳转功能:按键 <code>f</code> 会将本文所有链接突出显示并用字母标记, 然后按相应的字母则会新开标签页打开). <a href=\"https://github.com/easymotion/vim-easymotion.git\" rel=\"nofollow\">github src</a>, <a href=\"http://www.wklken.me/posts/2015/06/07/vim-plugin-easymotion.html\" rel=\"nofollow\">ref</a></li>\n  <li>vim-powerline: 增强状态栏 <a href=\"https://github.com/Lokaltog/vim-powerline.git\" rel=\"nofollow\">github src</a></li>\n  <li>vim-indent-guides: 缩进可视化, <a href=\"https://github.com/nathanaelkane/vim-indent-guides\" rel=\"nofollow\">github src</a></li>\n</ul>\n<p>具体效果等配置方法可以参考下面的两篇文章, 插件具体用法可阅读具体插件的 doc.</p>\n<p>Reference</p>\n<ul>\n  <li><a href=\"http://yuez.me/jiang-ni-de-vim-da-zao-cheng-qing-qiao-qiang-da-de-ide/\" rel=\"nofollow\">将你的 Vim 打造成轻巧强大的 IDE</a></li>\n  <li><a href=\"https://github.com/yangyangwithgnu/use_vim_as_ide\" rel=\"nofollow\">所需即所获：像 IDE 一样使用 vim</a></li>\n</ul>\n<p></p><h2>Dash</h2><p></p>\n<p>其实介绍<a href=\"http://www.tanglei.name/blog/app-in-mac-preface.html\" rel=\"nofollow\">前文</a> 介绍 Alfred 已经提到过, 这里再介绍一下. 程序猿应该必备啊. 内置各种语言, 各种环境的各种文档. 该 App 还提供各种 API 供其他工具交互使用. 例如 Vim(不是想象当中自动补全功能, 只是能够快捷地搜索 API), Sublime 等.  (p.s 要是有人写了一个 Vim 插件, 能够支持调用 dash 的 API(如果有的话) 自动补全代码, 那应该会很受欢迎的)</p>\n<p><img alt=\"dash\" src=\"http://www.tanglei.me/resources/app-in-mac/dash-main.png\"></p>\n<p></p><h2>其他 App</h2><p></p>\n<p></p><h3>chrome</h3><p></p>\n<p>插件</p>\n<ul>\n  <li>AdBlock: 广告屏蔽;</li>\n  <li>EditThisCookie: 修改 cookie;</li>\n  <li>Evernote Web Clipper: 印象笔记;</li>\n  <li>JSONView and JSONLint for Google Chrome™: 请求返回的 json 进行 beautify 方便查看;</li>\n  <li>Markdown Here: 在富文本输入 markdown, 渲染成 html;</li>\n  <li>Markdown Preview Plus: 渲染 <strong>.md</strong> 文件, 相当于 preview markdown;</li>\n  <li>Open Screenshot: 网页截图, 能够自动下拉截长图;</li>\n  <li>Postman: 请求伪造 /抓包等, 也可以用<code>curl</code>;</li>\n  <li>Proxy SwitchySharp: proxy 切换;</li>\n  <li>RescueTime: <a href=\"www.tanglei.name/blog/app-in-mac-for-common.html\" rel=\"nofollow\">前文有介绍的 RescueTime</a>;</li>\n  <li>undirect: google/baidu 搜索结果, 点击直达网站, 这个貌似不太好用了. 征求替代品;</li>\n  <li>Vimium: 操作 vim 一样操作浏览器, 移动查找等功能, 还有前文提到的快速标记链接并跳转;</li>\n</ul>\n<p></p><h3>Charles</h3><p></p>\n<p>类 Windows 下 Fiddler 抓包应用.</p>\n<p>相关命令 <code>tcpdump</code></p>\n<p></p><h2>其他有用的命令行</h2><p></p>\n<p>一些好用的命令(基本的什么<code>ls/cd/cp/rm</code>之类的这里就直接忽略了), 我觉得作为程序猿还是应该了解, 至少只当某个场景下直接用相应的命令就能解决. 具体参数可以再 <code>--help</code> 或者 <code>man commond</code>  再看.</p>\n<ul>\n  <li>screen: 特别是 ssh 到登录远程时用以管理会话</li>\n  <li>curl: 网络请求, 相关的还有 <code>traceroute, dig</code> 等</li>\n  <li>find: 文件查找</li>\n  <li>grep/zgrep/zcat: 查看日志的时候用</li>\n  <li>awk: 这个本身就很强大了, 具体编程语法不用太掌握但可以了解一些基本的用法, 比如之前用到过给一个 log 文件, 能够取里面的参数拼接 update 的 sql(文件里有相应 update 的值和 where 条件值)</li>\n  <li>sed: 文本替换, 还有 <code>tr</code>, 注意 sed 的语法 Mac 和 一般 Linux 还有些不一样( 比如原文替换的时候 mac 里需要用参数 <code>-i \"\"</code>), 比如之前<a href=\"/blog/give-up-wordpress-to-jekyll.html\" rel=\"nofollow\">迁移 wordpress 到 jekyll</a> 上的时候需要将一些链接整体替换成新的路径.</li>\n  <li>cut: 按列取数据, <code>awk</code> 也可以</li>\n  <li>sort: 这个就不多说了</li>\n  <li>uniq: 一般和 <code>sort</code> 一块用, 只能去重相邻的行</li>\n  <li>diff: 比较文件, 类似的还有 <code>comm</code> (输出 3 列, 分别是: 只在文件 1, 只在文件 2 和两个文件都在的行)</li>\n  <li>paste: 两个文件按列拼接</li>\n  <li>od: 以 16/8/2 进制查看文件</li>\n  <li>wc: 统计文件字节数 /字数 /行数</li>\n</ul>\n&lt;table&gt;\n  &lt;tbody&gt;\n    &lt;tr&gt;\n      &lt;td&gt;结合这些命令可能就能完成某些复杂的功能, 举个例子, 如线上的 web 访问日志会记录 <em>请求时间, 请求路径, 参数</em> 等等. 现在需要统计 当天请求路径为 A, 排名前 10 的参数, 就可以 ` grep 路径 A&lt;/td&gt;\n      &lt;td&gt;cut 取出想要的数据列&lt;/td&gt;\n      &lt;td&gt;sort&lt;/td&gt;\n      &lt;td&gt;uniq ` 之类的, 或者比如统计 http 404 请求最多的 10 个路径. 再比如, 随机生成 3 个长度为 8 包含字母数字的字符串(偶尔会用到, 比如各种生产 secret key 的时候),  直接用如下命令即可&lt;/td&gt;\n    &lt;/tr&gt;\n  &lt;/tbody&gt;\n&lt;/table&gt;\n<div><pre><code>➜  _includes git:(source) ✗ cat /dev/urandom | sed 's/[^a-zA-Z0-9]//g' | head -n 3 | cut -c 1-8\nMaL6nEmZ\n00m2Ub19\nrsc4AOQm\n</code></pre>\n</div>\n<p>其他的可能较少用, 但一旦用, 能省不少时间. 网上也有一些 online 的工具, 但哪有这个快准狠.</p>\n<ul>\n  <li>openssl sha1/aes-256-ecb/des/base64 等等: 比如当前我们开发用的 MVC 框架 play framework 用来加密 session 的算法, 可以方便算出 encoded 的 sessionid 进行 debug.</li>\n  <li>md5/base64: 常见的 md5, base64 编码</li>\n  <li>sips: <code>scriptable image processing system</code> 比如批量处理图片大小, 压缩等等</li>\n</ul>\n<hr>\n<p>全文完, 关于 Mac 使用技巧和工具软件推荐, 一共如下 3 篇文章:</p>\n<ul>\n  <li><a href=\"http://www.tanglei.name/blog/app-in-mac-preface.html\" rel=\"nofollow\">Mac 软件推荐(序)</a></li>\n  <li><a href=\"http://www.tanglei.name/blog/app-in-mac-for-common.html\" rel=\"nofollow\">Mac 软件推荐续 – 大众篇</a></li>\n  <li><a href=\"http://www.tanglei.name/blog/app-in-mac-for-dev.html\" rel=\"nofollow\">Mac 软件推荐续 – 程序猿篇</a></li>\n</ul>\n<p>p.s 如果你觉得这文章对你有那么一点点收获, 请不要犹豫扫描下面二维码关注我的公众号, 如果你再能帮忙转发一下就更好了. 么么哒.</p>\n<p><img alt=\"tanglei 微信号\" src=\"http://www.tanglei.me/resources/wechat-tangleithu.jpg\"></p>\n</div></div>"], "reply": "11", "tittle": "Mac 软件推荐(续)之程序猿篇(虽然前一篇被喷了, 但还是忍不住再发)", "comment": ["vim 下 Java 开发 真的比 idea 好用？", "上手的门槛高 效果也不一定比 idea 高多少吧？", "不错，学到了些东西", "vim 开发 java ，你还要装 rlwrap-jdb ，用来给 jdb 增加快捷方式，否则， jdb 会把人弄疯。", "idea 确实很好用, 前提是在不卡的情况~  目前 idea 一打开项目, 就卡得不行...额, 项目是 scala 的, 基于 sbt 的. 可能这也是一个原因吧.", "VIM 开发 JAVA 真敢想\r", "我这个 VIM 脑残粉都不敢这样用……", "膜拜 vim 党", "看到微信就知道是广告，举报一发", "我用的 fisa vim 配置， 爽！", "广告都从知乎打到 v2 了？", "觸摸板用輕觸還是點按這就純粹看個人習慣了。我的習慣是點按。而且用輕觸容易誤觸。", "另外……有些人在 iPhone 上，即使 Home 按鍵沒壞，也開著 AssistiveTouch ，我覺得這和過於習慣觸摸板輕觸可能也有關係。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h1>当 Docker 遇到区块链</h1>\n<p>这是一个文艺范十足(恶俗)的标题，试图撮合两个八杆子打不着的家伙。故事的结局一般都是按照套路出牌，两个主角愉快地在一起了。结局总是类似的，不过过程却有各自的精彩。</p>\n<h2>区块链刨底</h2>\n<p>区块链（ Blockchain ）技术自身仍然在飞速发展中，目前还缺乏统一的规范和标准，试图给区块链下定义都是一个难题。根据 <a href=\"https://en.wikipedia.org/wiki/Blockchain_(database)\" rel=\"nofollow\">wikipedia</a> 的定义</p>\n<pre><code>Blockchain is a distributed database that maintains a continuously-growing list of records called blocks.\n</code></pre>\n<p>越来越多的研究者、专家把区块链归类为分布式数据库的范畴，也有人把区块链定义为一种类似于链表的数据结构：</p>\n<p><img alt=\"\" src=\"http://7xi8kv.com1.z0.glb.clouddn.com/block_chain%EF%BC%8D1.png\"></p>\n<pre><code>区块链是一个类似于链表的数据结构，该数据结构中每一个节点记录了前节点中数据的 Hash 值、当前节点的数据。\n在当前节点不变的情况下，前节点的任何改变都会使得这条链无效(invalid)。\n</code></pre>\n<p>笔者认为两种定义是不冲突的、可以说是相辅相成的。前者更多地强调区块链分布式协作的集体行为，后者更多地关注这一协作群体中每一个个体，即区块链本身。在大多数语境下，大家关注更多的是区块链分布式协作的集体效应，因此下文关于区块链，在不特意说明的情况下，都与 wikipedia 的分布式数据库定义一致。关于区块链数据结构，推荐一本详细讲解 bitcoin 技术书籍 <a href=\"http://uplib.fr/w/images/8/83/Mastering_Bitcoin-Antonopoulos.pdf\" rel=\"nofollow\">Mastering Bitcoin</a>，你将看到， Bitcoin 的成功，不仅仅只有区块链的功劳， Game design 和密码学都是极其重要的部分！</p>\n<p>提到那些号称颠覆银河系的新科技、新技术，就不得不提 Gartner 技术成熟度曲线 ( The Gartner hyper cycle )。区块链号称颠覆整个金融行业的既有规则、既有模式，在 Gartner 2016 技术成熟度曲线中，我们可以在过高期望的峰值（ Peak of Inflated Expectations ）附近找到区块链。所以，各位同学冷静再冷静。并且 Gartner 也在分析 2016 成熟度曲线中提到 <a href=\"http://www.gartner.com/smarterwithgartner/3-trends-appear-in-the-gartner-hype-cycle-for-emerging-technologies-2016/\" rel=\"nofollow\">Bitcoin is the only proven blockchain</a>，注意这里的区块链指的是 wikipedia 版的定义。接下来是笔者的一得之见，跟大家一起分析一下为什么 Bitcoin is the only proven blockchain 。</p>\n<p><img alt=\"\" src=\"http://7xi8kv.com1.z0.glb.clouddn.com/block_chain%EF%BC%8D2.jpeg\"></p>\n<h2>Why Bitcoin is the only proven blockchain</h2>\n<p>前面我们已经定义过，区块链是一个分布式的数据库，维护持续增长的记录链表，这些记录链表又被称作“区块”。既然是分布式数据库，那么接下来这块由分布式数据库专家来写。</p>\n<p>提到分布式数据库，肯定离不开 <a href=\"https://en.wikipedia.org/wiki/CAP_theorem\" rel=\"nofollow\">CAP 理论</a>， CAP 是一个很有意思的理论，在分布式系统中有着霸主一样的地位。</p>\n<p>CAP 理论：一个分布式系统最多只能同时满足一致性（ Consistency ）、可用性（ Availability ）和分区容忍性（ Partition tolerance ）这三项中的两项。</p>\n<p>这三项看起来都是很好的东西，怎么不能同时满足呢？宝宝不开心，一定是架构师技术不好，没有找到更好的方式。但是，有一个坏人还给证明了， CAP 是正确的！</p>\n<ul>\n<li>一致性 <code>All nodes see the same data at the same time</code></li>\n<li>可用性 <code>Reads and writes always succeed</code></li>\n<li>分区容忍性 <code>The system continues to operate despite arbitrary message loss or failure of part of the system</code></li>\n</ul>\n<p>我们根据 Blockchain 的工作方式 （ Bitcoin 中矿工网络所维护的 blockchain 的工作方式），每个矿工节点独立地工作 （不考虑矿池，会加入无谓的复杂度），接收 Bitcoin 用户的转账请求，竞争寻找新的满足要求的 Hash 值，将这些交易打包到新的 block 并广播出去 （ Gossip 算法），或者接收并验证收到的广播数据。在同一刻，各个矿工的数据并不是严格一致的（有些接收到了一个广播，有些还没有，有些接收到了另一个广播），但是每个用户的读写请求都是会成功的，只是有可能读到的数据并不是最新的，也可能不是最终的，因此这是一个满足最终一致性的  AP  的系统。</p>\n<p>区块链 （最起码 Bitcoin 用到的区块链）是一个完全副本的（每个矿工节点都维护一份完全的数据）、 W=1, R=1 的单读单写的（客户端写成功一个矿工就算成功了，读一个矿工的数据就返回）、满足最终一致性的分布式数据库。完全副本带来了去中心化的好处，但这是一剂很猛的药，理论上讲区块链所维护的数据量不能超过矿工参与者中磁盘容量最小值，否则这个矿工将要面临被退出的处境。另外受限于单个矿工的计算能力和全网的广播扩散速度， Bitcoin 限制了每 10min 一个 Block ，每个 Block 1MB 的上限，使得 Bitcoin 网络的交易频率相对于 Visa 、银联等低得多得多。</p>\n<p>但是比特币依然是唯一被证实的区块链，那什么是<code>被证实的区块链</code>呢？笔者网上找了好久也找不到答案，只好再次发表拙见了。区块链是一个完全副本的对不对？要全网广播的对不对？代价很高对不对？性能不会很好对不对？那么只是把区块链用作分布式数据库的是不是有点套概念了？</p>\n<p>被证实的区块链(项目)指的是：</p>\n<pre><code>如果不能将这个项目中的区块链替换为分布式共享数据库，这个项目才是被证实的区块链\n</code></pre>\n<p>如果 Bitcoin 将区块链换成分布式共享数据库(变得易受攻击、篡改历史难度大大降低等)， Bitcoin 就不是目前大家看到的 Bitcoin ，所以 Bitcoin 是被证实的区块链。</p>\n<p><strong>被证实的区块链的定义提醒了各位，在区块链的基础上设计合理的游戏规则、奖励规则，将区块链用成区块链，而不是把区块链仅仅用成了一个分布式共享数据库，这才是真正意义的区块链。</strong></p>\n<p>可惜的是，目前这样的项目真不多，笔者抱一下 Gartner 的大腿，站在 Gartner 战队：</p>\n<pre><code>Bitcoin is the only proven blockchain\n</code></pre>\n<h2>Docker 镜像及分享</h2>\n<p>Blockchain 独角戏上演太久，大家应该迫不及待想要看到第二位主角出场了吧？</p>\n<p>Docker 镜像(images)留学归来，操着一口浓重的伦敦音：</p>\n<p>An image is an inert, immutable, file that's essentially a snapshot of a container. Images are created with the build command, and they'll produce a container when started with <code>docker run</code>. Images are stored in a Docker registry such as <code><a href=\"http://hub.docker.com\" rel=\"nofollow\">hub.docker.com</a></code>. Because they can become quite large, images are designed to be composed of layers of other images, allowing a miminal amount of data to be sent when transferring images over the network.</p>\n<p>本地的镜像可以通过 <code>docker images</code> 命令来查看，比如：</p>\n<pre><code>$&gt; docker images\nREPOSITORY                             TAG                 IMAGE ID            CREATED             SIZE\ndaocloud.io/daocloud/cockroach         v0.4                9845d5c4db1d        2 weeks ago         206.1 MB\ndaocloud.io/daocloud/spark-cluster     v0.6                9862ddb186a4        4 weeks ago         738.3 MB\ndaocloud.io/daocloud/dce-agent         2.0.3               3edfca3bd5aa        5 weeks ago         227.8 MB\ndaocloud.io/daocloud/dce               2.0.3               08a9b59123b5        5 weeks ago         27.08 MB\ndaocloud.io/daocloud/dce-controller    2.0.3               3bde2c3b0204        5 weeks ago         401 MB\ndaocloud.io/daocloud/sparrow           v0.1                f4040ff887c8        7 weeks ago         599.2 MB\ndaocloud.io/daocloud/dce-compose       2.0.3               e32a31fda169        8 weeks ago         21.08 MB\ndaocloud.io/daocloud/dce-swarm         2.0.3               55c1954cdfb4        8 weeks ago         19.49 MB\ncentos                                 6.8                 0cd976dc0a98        11 weeks ago        194.5 MB\ndaocloud.io/daocloud/hadoop-cluster    v0.5                db929fad9145        12 weeks ago        858.1 MB\ndaocloud.io/daocloud/zookeeper         v0.4                72d5965155da        3 months ago        567.2 MB\ndaocloud.io/daocloud/dce-etcd          2.0.3               e81032a59e55        5 months ago        32.29 MB\n</code></pre>\n<p>镜像存在镜像仓库里，通过 <code>docker pull</code> 的命令把它从仓库下载下来并通过 <code>docker run</code> 的方式启动容器。镜像开发者通过 <code>docker build</code> 命令把写好的 <code>Dockerfile</code> 以及一些二进制文件打包成镜像，然后 <code>docker push</code> 把镜像上传到镜像仓库，镜像可谓是容器技术的内容市场，心细的小伙伴可能已经发现 Docker 的布局 <a href=\"https://store.docker.com/\" rel=\"nofollow\">https://store.docker.com/</a> 俨然 Docker 在向乔帮主致敬啊。</p>\n<p>镜像仓库的存在有点类似 git repository ，极大的方便了镜像之间的共享。但是，前段时间看到一个新闻，说是一家金融公司把文本数据放在公有云上，不可见部分被篡改了（最看不懂的就是篡改不可见部分）！！！公有云厂商不愿意背这个锅，有些人就咆哮，私下看人家数据太不好了，小白客户可能不知道什么是  sha256 , md5 , 不知道什么是加密，可是金融行业从业人员，难道不知道加密防他人读、校验防篡改吗？发散来讲，放在镜像仓库的镜像也有被篡改的可能啊！让每个用户上传镜像时存 hash 校验？然后还要对镜像加密、 docker pull  下来的镜像还要先解密才可用？</p>\n<p>这也未必有点难为用户了，从业有先后、术业有专攻。<strong>DaoCloud 认为，你们安心做应用，剩下的我们来帮你搞定！</strong>我们试图构建第二个能被证实的 Blockchain</p>\n<h2>Daochain</h2>\n<p>假设这样一种场景，仓库提供者与贵公司大哥八字不合，或者 Docker 公司有个家伙年终奖发少了？你的镜像是安全的吗？</p>\n<pre><code>&gt; 刚才的锦囊我都知道，我自己存 hash 值\n&gt; 小红花戴起来，的确比小白上升了一个数量级的觉悟，但是你的同事想用你的镜像呢？\n&gt; 把 hash 值邮件给他，他自己下载镜像自己校验\n&gt; 但是有一天老板给你好几天假期，你可以度假了，你还能(愿意)及时地处理邮件吗，或者说你在帮一个美女实习生调 bug\n&gt; 公司内部共享一个共享数据库就好了嘛\n&gt; 但是每次上传或者更新镜像，你都会记得及时更新数据库吗？另外，企业间的共享怎么做？比如隔壁家一个叫 google 的公司做的镜像挺好用的\n&gt; 怎么那么多但是，你说怎么办？\n</code></pre>\n<p>正式一点，目前的公共镜像仓库是建立在开发者对仓库维护者的信任的基础上的，开发者相信公有仓库的维护者不会改变他们的镜像，但是在一些极端的情况下这个假设是不存在的，比如商业竞争、黑客攻击、内部员工故意使坏等等。另一方面，为了做到安全，现行技术可能会对镜像用户提出过高的要求，并且对容器原生技术有很强的侵入性（存 hash 值，校验等）。</p>\n<p>用户有分享(有偿或者无偿)的需求，这正是 <a href=\"https://store.docker.com/\" rel=\"nofollow\">https://store.docker.com/</a> 正在布局的，有保证数据不被篡改的强烈的安全需求。一句话：</p>\n<p><strong>安全无小事!</strong></p>\n<p>因此， DaoCloud 在镜像反病毒，漏洞检查之后隆重推出了分布式镜像校验机制—— DaoChain ，基于高端霸气上档次的区块链技术。</p>\n<p>简单来讲，用户 A 在使用 DaoChain 上传镜像到公有仓库的同时，会将 hash 值上传到区块链上， DaoCloud 与众多区块链的维护者共同维护这条区块链（移除了开发者对集中化管理者的信任假设），保证任何人对区块链的非法篡改都不会得逞，正常的数据读写得到满足。用户 B 凭借对用户 A 的信任（比如声望很好的大公司，阿里、 Google 或者公司同事）从公有仓库获取 Docker 镜像，同时从区块链中读取该镜像的 hash 值，并在本地进行验证。</p>\n<p>Daochain 使用<a href=\"https://www.ethereum.org/\" rel=\"nofollow\">以太坊</a> 作为 Blockchain 的实现，以太坊号称是第二代区块链（相对 Bitcoin 作为第一代区块链），具有图灵完备的特征，是一个有智能合约功能的公共区块链平台，通过过密货币以太币的润滑作用，提供去中心化的虚拟机来处理点对点合约。注意 DaoChain 只是用到了以太坊的实现，并没有使用它的公共区块链，而是自己私自搭建了另一个专属的区块链，我们欢迎各位矿工加入我们的挖矿队伍，具体方式参见<a href=\"#%E5%86%85%E6%B5%8B%E5%8F%8A%E5%A5%96%E5%8A%B1\" rel=\"nofollow\">内测及奖励</a>。</p>\n<p>一个典型的智能合约长这个样子：</p>\n<pre><code>contract mortal {\n    /* Define variable owner of the type address*/\n    address owner;\n\n    /* this function is executed at initialization and sets the owner of the contract */\n    function mortal() { owner = msg.sender; }\n\n    /* Function to recover the funds on the contract */\n    function kill() { if (msg.sender == owner) selfdestruct(owner); }\n}\n\ncontract greeter is mortal {\n    /* define variable greeting of the type string */\n    string greeting;\n\n    /* this runs when the contract is executed */\n    function greeter(string _greeting) public {\n        greeting = _greeting;\n\n     }\n\n    /* main function */\n    function greet() constant returns (string) {\n        return greeting;\n     }\n }\n</code></pre>\n<p>更多更详细关于智能合约的知识，可以参阅以太坊的 <a href=\"https://www.ethereum.org/greeter\" rel=\"nofollow\">Hello world sample</a>。</p>\n<p>讲到这里，聪明的你应该猜出来我们怎么做的了。我们是不是 the second proven blockchain 呢？欢迎大家来讨论！</p>\n<p>我们 DaoChain 的源码开放在 <a href=\"https://github.com/DaoCloud/dao-chain\" rel=\"nofollow\">DaoChain on Github</a>，透露一下， DaoChain 的核心合约也在这里哦。后续我们会完善客户端功能、添加更多测试和文档。同时也欢迎大家来提 Issue 和 Pull request 。</p>\n<h2>内测及奖励</h2>\n<p>DaoChain 第一版测试版现在向 Daocloud 用户开放测试，对区块链技术和镜像安全感兴趣的小伙伴们可以加入我们近距离感受“神秘”的区块链。</p>\n<h3>开始探索 DaoChain</h3>\n<p>克隆下 DaoChain 的源码后我们可以使用其中的 docker-compose.yml 来启动本地的区块链节点，访问本地 web 客户端。</p>\n<pre><code>git clone https://github.com/DaoCloud/dao-chain\ncd dao-chain &amp;&amp; docker-compose up -d\n</code></pre>\n<p>等待镜像下载 Ready ，等待服务启动后，打开浏览器，访问 http://localhost:8000 就可以看到 Web 客户端了。</p>\n<p>第一次使用需要登录 DaoCloud 账号并切换到账户详情界面创建你的区块链钱包，选择你要绑定的 DaoHub 组织，填入你的账户和密码就可以创建并绑定钱包地址到 DaoHub 组织了。</p>\n<blockquote>\n<p>注：这里填入的密码是用来加密区块链账户的私钥的，不是你的 DaoCloud 密码哟。</p>\n</blockquote>\n<p>客户端有四个页面：</p>\n<p><strong>云端镜像</strong>：在这里我们可以看到当前组织下拥有的镜像和镜像的验证情况，并且可以拉取镜像到本地。</p>\n<p><strong>本地镜像</strong>：在这里我们可以看到本地拥有的镜像和他们的验证情况，第一次进入的时候会一次性验证所有的镜像。目前版本可能会验证时间较长，请大家耐心等待。</p>\n<p>我们可以在这个页面对属于自己组织下的镜像进行签名，点击签名输入前面的钱包密码，客户端就会开始计算镜像的 hash 并写入区块链了（需要当前钱包有余额），可以实时看到写入情况。更新镜像导致验证失败的也可以进行重新签名。</p>\n<p><strong>镜像市场</strong>： 在这里可以看到 DaoHub 上所有开放的已经通过验证的镜像，大家可以自由分享、拉取。</p>\n<p><strong>账户详情</strong>：在这里可以看到当前账户的绑定情况、钱包余额。也可以进行挖矿，挖矿的时候还可以看到自己的算力。（第一次挖矿会有一段时间的算力为 0 的情况，这是以太坊客户端在生成 DAG 文件，耐心等待即可）</p>\n<p>内测阶段我们只为拥有 DaoHub 组织的用户提供绑定功能，在 Web 客户端绑定了以太坊账号后可以自行挖矿来获取以太币，也可以通过发邮件到 <a href=\"mailto:support@daocloud.io\">support@daocloud.io</a> 或者在 DaoVoice 上联系我们申请一些以太币来开始 DaoChain 之旅。</p>\n<h3>DaoHub 积分</h3>\n<p>在 DaoChain 中得到的以太币即为未来计划中的 DaoHub 积分，内测结束后大家可以用积分在 DaoCloud 兑换一定的奖励。</p>\n<blockquote>\n<p>注：内测的区块链网络在内测结束后可能不会保留（以太坊会在近期切换到 PoS 算法）</p>\n</blockquote>\n<blockquote>\n<p>请大家注意备份并保密自已以太坊账户的私钥（即 geth 容器中的 /root/.ethereum/keystore 文件夹，此目录已挂载为 volume ）</p>\n</blockquote>\n<h2>镜像共享经济</h2>\n<p>借助图灵完备的以太坊，我们实现了 DaoHub 的镜像验证功能，然而我们能做到的远远不止于此。 DaoChain 简洁的实现给我们留下了丰富的可扩展性。实现完全离线验证，接入其他镜像托管商，甚至是在未来实现基于区块链的镜像交易功能！</p>\n<p>区块链技术神秘而迷人，为了让它落地，我们需要发挥我们无穷的想象力！</p>\n</div></div>"], "reply": "6", "tittle": "当 Docker 遇到区块链", "comment": ["有没有推荐的区块儿链的入门书籍，想看下", " Mastering Bitcoin ，下载链接 ", " 网上还有中文版的～", "--- 区块链是一个类似于链表的数据结构，该数据结构中每一个节点记录了前节点中数据的 Hash 值、当前节点的数据。\r", "在当前节点不变的情况下，前节点的任何改变都会使得这条链无效(invalid)。\r", "\r", "浏览器的历史记录就是按照这个定义来执行的。。。", "前排关注,对比特币区块链项目感兴趣的可以加我微信交流一下哈,微信:13764246315 备注下 V2EX DaoChain", "比如声望很好的大公司，阿里。。。", "哼，区块连那么吊，还不是被中国人玩家玩到开发者都看不下去跑路了。"]},
{"content": ["<div class=\"topic_content\">访问地址： <a target=\"_blank\" href=\"https://github-trending.com/\" rel=\"nofollow\">https://github-trending.com/</a>  \r<br>\r<br>这是一个旨在帮助大家寻找优质的 GitHub 项目的一个网站。\r<br>\r<br>同时也希望大家把自己喜爱和常用的项目贡献出来，让大家做到知识共享，增加我们手中工作的利器。\r<br>\r<br>做的比较粗糙，还望大家多多见谅啊！</div>"], "reply": "5", "tittle": "Github Trending 正式上线，希望大家来访啊", "comment": ["自己先占位啦！！", "名字不错 呵呵", "不错 赞", "+1 看名字还以为是官方出品", "感谢支持啊"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题，有合作是要在澳大利亚本土运营，现在需要用到短信平台，有没有什么类似于阿里大鱼的？求助各位 v 站的朋友给些建议。</p>\n</div></div>"], "reply": "16", "tittle": "求助 v 友，国内我们常用阿里大鱼，在澳大利亚有没有类似的短信平台？", "comment": ["聯繫 Telstra 試試", "随便找个运营商去聊一下就完事了\r", "国外又不要短信 SP 证 没有各种复杂的各省挨个运营商去谈接入办手续 没有各种乱七八糟的没有三年五年审批不下来的东西 \r", "所以国外你可以直接接入运营商就完事了", "nexmo", " 澳洲电信也会有这种服务？", " 您有过类似的开发经历吗，求指点。合作比较小，也能直接找运营商聊吗", "clickatell, clicksend, smsgateway, 国际的有，澳洲本土的也有", " 感谢，刚刚搜了一下这家，似乎可以试试看，我们去研究研究", " 已感谢，我们去研究一下", "在澳洲用过 Nexmo 和 Telstra\r", "Telstra 的免费套餐每月 1000 条短信， 1000 次电话\r", " 刚刚看了 Nexmo 好像挺好使的感觉，您是都用来开发过产品（用于发短信）吗，这俩用起来都挺棒？", " \r", "小？\r", "在澳大利亚一个月手机费$50 ，这都不够吃一顿正经饭的，人家运营商也把你当上帝啊\r", "你用人家的 API 是要付费的，付费跟他的手机客户没区别", " 稳！刚刚楼上给出的澳洲电讯的我们看过了，好像确实挺不错的", "为何不用 Twillo", "Tropo", " 恩这个昨天后来也有朋友推荐了，我们看了似乎也不错。您实际用于过开发吗？", " 学生开发者，玩玩而已。 Twillo 应该是全球范围最大家的了，虽然发短信到国内偏贵，反正你们接入大鱼了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>用某网游下载器下载客户端，因为直连太慢，用 Proxifier 套了代理。于是从 Proxifier 里看到大量这样的日志（隐藏了游戏信息）：</p>\n<blockquote>\n<p>[12.13 00:19:41] patcher.exe - <a href=\"http://gameserver.com:80\" rel=\"nofollow\">gameserver.com:80</a> open through proxy 127.0.0.1:1080 SOCKS5\n[12.13 00:19:43] patcher.exe - <a href=\"http://gameserver.com:80\" rel=\"nofollow\">gameserver.com:80</a> close, 97 bytes sent, 8406978 bytes (8.01 MB) received, lifetime 00:02</p>\n</blockquote>\n<p>可以看到这游戏应该是直接通过 HTTP 方式从服务器下载文件。但是 Proxifier 里面这样一条日志，是否代表一次 TCP 连接的创建和销毁？如果是，就是说这个下载器会一个一个地下载这个游戏的文件，而每下载一个文件就要创建一次连接。这游戏大约 40GB ，每个文件差不多几百 KB 到十几 MB 不等。</p>\n<p>那么游戏官方是出于什么原因采取这样的方式来下载文件呢？对这样的下载方式，复用连接会不会更好呢？</p>\n</div></div>"], "reply": "6", "tittle": "什么样的原因，会使一个游戏官方在客户端下载器中使用“下载无数小文件，每下载一个文件就创建一次连接”的方式？", "comment": ["Cocos 的更新默认方案就是这种。太扯淡了", "会不会有 TCP 协议之上或者之下的复用(猜的)", "都几兆了，复不复用也没什么大关系了吧", "无他，唯懒耳。", "第一个问题，下载某个小文件出错了，重下这个小文件就行了。\r", "第二个问题，楼上，复不复用也没什么大关系了， 40GB ，网不是上天的速度，都够你下一会的。", "几百 KB 到十几 MB 不等——这个大小放在手机端，不算小文件了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>按照 Spacemacs Rocks 和 Spacemacs 的 README 都试过，已经换源多次。</p>\n<pre><code>Warning (spacemacs): \nError connection time out for melpa-cn repository!\nWarning (spacemacs): \nError connection time out for gnu-cn repository!\nWarning (spacemacs): An error occurred while retrieving the theme, using default theme. (error: (error Package ‘ spacemacs-theme-’ is unavailable))\nWarning (initialization): An error occurred while loading ‘ f:/space/.emacs.d/init.el ’:\n\nerror: Package ‘ package-build-’ is unavailable\n\nTo ensure normal operation, you should investigate and remove the\ncause of the error in your initialization file.  Start Emacs with\nthe ‘--debug-init ’ option to view a complete error backtrace.\nWarning (spacemacs): \nError connection time out for melpa-cn repository!\nWarning (spacemacs): \nError connection time out for gnu-cn repository!\nWarning (spacemacs): An error occurred while retrieving the theme, using default theme. (error: (error Package ‘ spacemacs-theme-’ is unavailable))\nWarning (initialization): An error occurred while loading ‘ f:/space/.emacs.d/init.el ’:\n\nerror: Package ‘ package-build-’ is unavailable\n\nTo ensure normal operation, you should investigate and remove the\ncause of the error in your initialization file.  Start Emacs with\nthe ‘--debug-init ’ option to view a complete error backtrace.\n\nWindows + Emacs 25.1 + Spacemacs 0.200.5\n</code></pre>\n<p>有没有只包含 spacemacs 需要的包的 melpa 镜像，然后打包下载，然后直接用本地的 melpa 镜像呢</p>\n</div></div>", "<div class=\"topic_content\">国外源和国内源都试过，能用浏览器直接打开 emacs-china 的源， https 和 http 都试过，试过很多 Spacemacs 版本，我试试旧版本 emacs 去。</div>"], "reply": "5", "tittle": "安装 Spacemacs 报错", "comment": ["贴到这里来你认为比贴到 Spacemacs 项目 issues 页解决的几率大？", "这不就是 emacs-China 的 elpa 镜像 Down 了，明天再试试", "Emacs 25.1 在 Windows 下的坑不止这一个的，去试试找那个 deps 包吧， ", " ，在找到这个之前，我也是一直连不上所有 melpa 的源及各种镜像，不过和你不同的是，我的 gnu 的源可以连上。\r", "\r", "最好还是换成 24.5 吧，稳定多了。", "用国外 melpa 镜像不好吗", "还不行就换成 http 在配置文件里搜 https"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这是在简书上《科技画报》的一篇文章，会编程的女生就是不一样。：） <a href=\"http://www.jianshu.com/p/b26b5b7d8601\" rel=\"nofollow\">http://www.jianshu.com/p/b26b5b7d8601</a></p>\n</div></div>"], "reply": "8", "tittle": "专注于写代码的程序媛果然和外面那群妖艳贱货不一样", "comment": ["我还是喜欢外面妖艳的， :joy:", " : :)", " : :)", "我还是喜欢外面妖艳的", "我还是喜欢外面妖艳的", "我还是喜欢外面妖艳的 :)", "我还是喜欢外面妖艳的 :)", "都是看脸的。：（"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"\" src=\"http://d.hiphotos.baidu.com/image/pic/item/dcc451da81cb39db756d5c71d9160924ab183063.jpg\"></p>\n</div></div>"], "reply": "7", "tittle": "惨案？误伤？", "comment": ["很正常,用的是 Shanghai Yovole Networks ，查不到备案信息机房为了自保直接给关了，不算什么大事。", "恢复了", "恢复了，就是有些图挂了", "不对，是间歇性抽风，时好时坏。", "同款皮肤", " 握爪（ 2 个月的坟都被挖出来了，这记洛阳铲可以的，蛤蛤）", " 🆒"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><ul>\n<li>到现在都不开放，而是弄一些内测的东西自 high ， high 完告诉别人：这就是未来</li>\n<li>有着各种限制，不是 HTML5 ，也不是 SPA ，感觉就像是一帮搞前端的人折腾出来的另一个“前端框架”，现有的 HTML 完全够用，非要搞一套自己的东西出来增加学习成本，显得这套东西的作者是多么的 NB ，看，连思路都跟前端各种框架的出现都一样（无意冒犯前端的各位兄弟），什么都不是的一个东西，就想挑战原生 APP</li>\n<li>时不时就会有个人出来写个文说这东西多牛逼，而实际在我身边做尝试调研的听到的更多的是：微信不允许这个，微信不允许那个，还有禁止这个...</li>\n</ul>\n<p>其实不看好小程序就是觉得作为一个什么都不是的东西，基本对 Native App 不会又什么影响吧，再加上微信的各种限制，导致其应用场景变得非常的窄，最烦的就是这东西还没出来一帮人就跟着吹嘘：这必将对 xxx 生态造成沉重打击。</p>\n<p>就我一个人不看好他，烦他吗？</p>\n</div></div>"], "reply": "1", "tittle": "就我一个人烦 微信小程序 吗？", "comment": ["角度不同,你是以程序员的角度看\r", "如果从用户的角度看,不需要安装,不会被骚扰.\r", "打造生态,初期会遇到各种不完善,各种质疑,比较正常.\r", "我对小程序其实挺期待,不过我也不赞同那些吹捧."]},
{"content": ["<div class=\"topic_content\">request.getParameter()获取请求参数，当一次请求成功，第二请求时，获取的值还是第一个请求的值。\r<br>刷新页面后这种现象不存在。</div>", "<div class=\"topic_content\">表单中的数据，在 JSP 中获取</div>"], "reply": "11", "tittle": "Java Web 项目 JSP 中用 request 获取请求参数", "comment": ["……完全没明白啥意思", "里边要写参数名的", "Chrome 看看 HTTP 请求？", "你取到的很可能只是个默认值。也就是说，你很可能在 set 的时候属性名拼错或者属性为 null", " 知道要写表单中的参数来获取值，但是在不刷新页面的情况下，二次请求还是获取第一次请求的值。", " 不是默认值，表单中的输入框的值，每次都输入不一样的，但在不刷新页面的情况下，二次请求还是获取第一次请求的值。", "chrome 看下 request 中内容", "什么浏览器？", " IE", "如果是 ajax 请求的话，参数那边可以带上时间参数，这样系统就不会认为是缓存了\r", "列入： url=\"http://localhost:8080/fnpartbuild/queryPersonList?name=admin&date=\"+new Date();", "不贴代码的都当是开玩笑！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>上个月初，微信公众平台正式开放了“小程序”的公测，随之引发的是几乎所有关注这一领域的码农们的一次集体高潮。就在微信小程序开放公测次日（ 11 月 4 日），其百度搜索指数便达到了近 2 万的峰值。这也是自年初微信公开课 PRO 版“应用号”概念推出， 9 月 22 日正式改名“小程序”之后所达到的又一个高峰。</p>\n<pre><code>简单来说，“小程序”可以理解为微信内部可以实现与各类 APP 应用相同功能的超级网页。对已经习惯了支付、出行、餐饮等各方面都用手机操作的今天，通过“小程序”可以将手机在各个领域上的功能进一步强化，同时用户不需要装载那些使用频率并不高的 APP ，真正将手机内存释放出来。\n虽然“小程序”的出现，将会进一步加大用户对于“微信”这个“超级 APP ”的依赖，造成一家独大的情况，但通过“小程序”便捷的入口，用户只需扫码即可实现以往 APP 才能体验到的功能，为用户尤其是线下的酒店订房、餐饮类、医药排号、交易等场景带来更多的便利。\n</code></pre>\n<p>微信小程序将引发的四大效应\n有了微信这个超级流量入口的支撑，对很多开发者来说，小程序是一个不容错过的机遇。根据微信开发者平台 [很快] 的预测，小程序适合功能单一、轻量级的服务，将对服务号形成一定程度的冲击。同时，相比传统开发人员的素质、技能需求，小程序的入门门槛更低，因此，参与者处于井喷状态，其竞争激烈程度将大于 iOS 和 Android 。</p>\n<pre><code> 但从机遇的角度考虑，小程序成本低廉，非常适合创业者进行最小化可行产品的试运行，允许创业者通过最廉价的成本验证 idea ，未来极有可能将于小程序诞生许多小而美的产品。另一方面，尤其是对于前端开发者而言，转型到微信小程序开发的成本几很低， web 前端人才将迎来前所未有的发展机遇。\n而从后端的角度来看，绝大部分小程序依然存在数据交换的需求，也给后端提出了更高的要求。在 To B 产业服务市场尚未饱和的情况下，未来也许会有公司瞄准小程序后端的市场，专为企业提供后端支持的服务。\n</code></pre>\n<p>小程序关注者聚集北上广深，多为 85 后\n或许是受即将到来的转型期影响，传统 IT 资源较为集中的北、上、广、深等地区同样也为微信小程序关注人群的主要分布地域，另外，根据小程序的百度指数用户数据显示，小程序的关注者多为 85 后程序员及互联网从业者。</p>\n<pre><code>据微信开发者平台 [很快] 统计，目前小程序关注者主要聚焦的渠道分三类，一是综合开发者社区，多为老牌的开发者社区，人群基数大、曝光度较高，如 CSDN 、开源中国；二是垂直开发者社区，例如类似 [很快] 这样国内仅有的独立专注于微信开发者的社区；三是自媒体等其他渠道，主要进行时评和宣传，开发者更多是通过其获取资讯。\n对于综合的开发者社区来说，由于多数有较为长期的积累，开发者人数多，技术资源也相对比较丰富，资讯体量大，同时多带有一定的媒体属性，具有一定的曝光量；而自媒体有的曾获取内测资格，拥有更多的一手资讯。\n\n相比起来，类似 [很快] 这样的垂直开发者社区，尽管在量的累积以及资讯的新鲜度上并不占有绝对的优势，但一方面属于纯微信开发者的聚集地，所关注的内容高度一致，开发者可以有很好的归属感；另一方面，专注于微信小程序的开发资源，这一垂直社区可以给到小程序开发者很好的支持。因此可以预见，类似垂直精准性型社区，将会是未来一个大的趋势，将受到开发者更多的力捧和支持。\n</code></pre>\n<p>开发问题是小程序关注者的关注焦点\n根据近期在 HTML5 移动生态大会上， [很快] 披露的数据来看，自 10 月份添加小程序板块以来，微信开发者社区内有关小程序的讨论量以指数形式增长。目前小程序频道的 UV 渗透率已超过 38%，小程序相关的问题量超过全社区的一半，小程序开发的话题量也已经突破 3 万。</p>\n<pre><code>根据社区内的详细讨论情况统计，开发类问题是小程序关注者的核心看重问题，小程序开发板块中超过半数的话题为开发问题相关的讨论。\n受小程序使用场景的影响，生活工具类小程序的试水目前在开发者社区更受欢迎。对比微信原有的公众号，“关注”这个动作本身就已经给用户带去了一定的负担，而小程序将简化更多操作，在任务指向型、操作型以及交易型等三大类应用方向上能带给用户更好的体验。\n\n因此线下的酒店订房、餐饮类、医药排号、交易等场景都极为适合小程序。对于小程序而言，能实现用户“即用即走，触手可及”的便捷化生活。      \n纵观目前的发展态势，“小程序”还面临着两个亟待解决的基本问题： 1. 由于整体入门门槛低，开发者处于井喷状态，对入门教程的需求水涨船高； 2. 随着关注度、使用频率的提升，小程序组件、 API 等诸多基本使用问题还有待完善。如何有效的解决，是摆在微信和开发者面前的需要思考的问题，不过，从目前透露的信息和平台的开放程度来看，整个微信平台投入了前所未有的资源和精力全力测试，相信解决也只是时间问题，处于市场爆发前夜，小程序的未来市场必然庞大。\n</code></pre>\n<p>结语\n综合来看，微信小程序的推出，不管是用户还是开发者，都将成为受益者。从产品功能、 idea 的验证等多个方面来看，瞄准小程序领域的开发者将有很大的机会打造小而美的产品，更多从用户使用场景、习惯出发，进一步整合线上与线下的资源，基于微信超级平台的流量支撑，小程序将成为越来越多创业者首选的阵地，社会效率将得到进一步的提升。\n移动设备，将会是用户粘性越来越高的载体，未来，将会进一步加剧市场流量寡头的业务形态的格局产生，但从用户侧，以往投入无效 APP 开发的社会资源将会进一步优化利用，整个产业将向良性结构方向发展，释放了用户的手机内存，提升了生活效率。</p>\n<pre><code>从小程序开发者生态现状来看，“小程序“的环境正在逐步成熟，各种渠道，尤其像 [很快] 微信开发者社区这样的垂直渠道的支持下，参与者，服务者越来越多，市场将会越来越繁荣。市场的繁荣，将会进一步满足用户需求，整合线上、线下资源，依托微信这一超级流量入口，未来有无限的想象空间。\n当然，开发者数量井喷，即将到来的激烈竞争，也是每一个关注小程序的开发者必须要面对的问题。但这又何尝不是一种良性的市场推动呢？\n</code></pre>\n<p>关于很快：\n[很快] 是领先的移动互联网营销服务平台，自成立以来逐渐形成集快赢（公众号营销）、快云（公众号管理平台）、快数（公众号大数据分析）、很快学会（公众号运营培训）于一体的全方位生态服务商。同时 [很快] 拥有国内最大的第三方微信开发者社区，面向所有微信公众号开发和运营者提供免费服务。</p>\n<p>[很快] 致力于构建一个聚焦移动社交媒体的生态体系，助力开发者实现开发最简化、变现价值最大化。</p>\n<p>[很快] 成立于 2015 年，一年多的时间完成超过 4 轮融资，并成功上市新三板，将至发展（代码： 430443 ）。</p>\n<p>[很快] 官方网站： <a href=\"http://henkuai.com\" rel=\"nofollow\">http://henkuai.com</a></p>\n</div></div>"], "reply": "6", "tittle": "[很快] ：微信“小程序”，链接“大未来”", "comment": [" ", "哈哈 能合作推广腾讯云服务器吗？", "个人建议程序员抵制微信小程序，实在是对程序员自身成长无一用处，对互联网的发展也是完全的抑制作用，甚至在小程序平台上做东西，都对公司的项目负作用。\r", "\r", "ps 我不仅仅是程序员，我还对灰产行业进行涉及，对微信相关灰产涉及的还比较多。微信是一个非常封闭的平台，在这个平台内进行操作甚至比网站排名还要黑。从微信目前的属性，以及腾讯一直以来的尿性，微信不是一个长期合作的好伙伴。而微信向外开放的公众号订阅号，附近人等，真实流量实际上非常非常非常少。\r", "\r", "ps2 怎么匿名？", " 我抵制了，做了 2 周这破玩意，果断辞职了 LOL", " 哈哈哈您是腾讯云的人？", " 不是 代理商~ 腾讯内部价格都很贵~"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><strong>Linux 与 Windows</strong></p>\n<p>众所周知， Windows 的应用无法运行在 Linux 上，而 Linux 应用也无法运行在 Windows 上。但是，事实上，当 Docker 将容器作为一种显著的打包应用的方法，并且可以在“任意地方”封装它的时候，这里的“任意地方”就已经包含了“ Linux ”。 Windows 也有容器，但是要让所有工作都一起运行还是不太可能的。</p>\n<p>但是，今天 Kubernetes1.5 的发布，让 Linux 和 Windows 一起运行的梦想能够实现了。</p>\n<p>Kubernetes1.5 （ alpha 版本）支持 Windows 服务器容器，跟 Docker 类似，他们共享同一个内核模式；而 Hyper － V 容器的单核模式则为多租户环境提供了更好的隔离（代价是延迟时间更长了）。最终的结果就是，在你创建的这个 Kubernetes 集群上， Linux 节点可以运行 Linux 容器， Windows 节点可以运行 Windows 容器；同时， Linux 节点也可以运行 Windows 容器， Windows 节点也可以运行 Linux 容器，真正实现混合集群。比如，单个 service 允许 Pod 使用 Windows 服务器容器，也允许其它的 Pod 使用 Linux 容器。</p>\n<p>虽然 Kubernetes1.5 功能全面，但是也有它的局限性，比如：</p>\n<p>Kubernetes 是由 Go 语言编写的，以至于它带有一定的依赖性，所以 Kubernetes master 必须运行在 Linux 上。如果端口映射到 Windows 也是可以的，但是技术团队更愿意把主要精力放在客户组件上。</p>\n<p>Windows 本地不支持网络叠加功能的容器，所以网络就被限制在了 L3 。（虽然问题也有其它的解决办法，但是这些办法都不支持本地。） Kubernetes Windows SIG 正在跟 Microsoft 协同工作解决这些问题，希望明年发布的 Kubernetes1.6 版本中，这些问题都能够得到解决。</p>\n<p>Windows 容器间的网络更加复杂，因为每个容器都有自己的网络 namespace ，所以推荐使用单个容器 pod 。</p>\n<p>运行在 Windows 服务器上的应用能够以任意 Windows 支持的语言运行。可以在 Linux 容器中运行 .NET 应用，但是前提是这些应用必须是用 .NET Core 写的才可以。 Nano 服务器操作系统也支持 .NET core ，而且还可以部署在 Windows 服务器容器上。</p>\n<p>这次 Kubernetes1.5 的发布也支持 IIS （目前它占据了网上 11.4% 的江山）和 <a href=\"http://ASP.NET\" rel=\"nofollow\">ASP.NET</a> 。</p>\n<p>Apprenda 努力开发 Kubernetes ，就是为了让企业既能够享受 Kubernetes 带来的益处，同时还能够有效利用他们已有的 Windows 资源。“我们的策略就是给我们的企业客户提供坚定使用 Kubernetes 的理由。要做到这点，没有 Windows 的支持是不行的。 2016 年 3 月，我们承诺 Kubernetes 会支持 Windows 服务器，我们在这次发布的 1.5 版本中做到了。” Apprenda CEO ， Sinclair 说道，“我们会在编排 Windows 服务器容器、 Hyper － V 容器的时候，将全部功能交付到 Linux 上，使机构组织者可以为他们的分布式应用获得单个控制面板。”</p>\n<p>以下是 Apprenda 的高级产品总监介绍了各项功能的视频 demo ，点击查看：</p>\n<p><a href=\"https://v.qq.com/x/page/t0355o1ln4k.html\" rel=\"nofollow\">https://v.qq.com/x/page/t0355o1ln4k.html</a></p>\n<p><strong>Kubernetes 其余功能</strong></p>\n<p>Kubernetes 1.5 （ beta 版本）也支持 StatefulSets （由 PetSets 改名）。由 Kubernetes 管理的 ReplicaSets 和 Pods ，会变成无状态，所以，如果这些功能不使用，或者用不到的话，就会变成“一次性”应用。但是在某些情况下，比如数据库，集群软件（比如 RabbitMQ 集群），或者其它旧的有状态对象，可能性就比较小了。 StatefulSets 提供更加具体的辨识资源的方法，这样更好维护这些项目之间的联系。</p>\n<p>Kubernetes1.5 还包括了一些早期所做的努力，比如让 Kubernetes 部署符合 OCI 标准的容器等等。</p>\n<p>转载请联系我们</p>\n<p>原文链接：</p>\n<p><a href=\"https://www.mirantis.com/blog/linux-windows-living-together-total-chaos-ok-kubernetes-1-5/?mkt_tok=eyJpIjoiWXpSa09EZzROV1F3WXpnMyIsInQiOiJUaDlmWEpSNTRjWEI3SFlkMm9SYnFudkJuQmRSbnd0Y1hzY2xBV3MzanpLYTFINzV1ZFA5MndZTE1tVGJadUhmZVVcL1VDdURqd282c1dodWFtYUJ6SUFOSGZJV3ZrNUJNcmtQTTJpdk9rWFRtVE5XUWRzc3pjSVJYbU9lb0hZdzUifQ%3D%3D\" rel=\"nofollow\">https://www.mirantis.com/blog/linux-windows-living-together-total-chaos-ok-kubernetes-1-5/?mkt_tok=eyJpIjoiWXpSa09EZzROV1F3WXpnMyIsInQiOiJUaDlmWEpSNTRjWEI3SFlkMm9SYnFudkJuQmRSbnd0Y1hzY2xBV3MzanpLYTFINzV1ZFA5MndZTE1tVGJadUhmZVVcL1VDdURqd282c1dodWFtYUJ6SUFOSGZJV3ZrNUJNcmtQTTJpdk9rWFRtVE5XUWRzc3pjSVJYbU9lb0hZdzUifQ%3D%3D</a></p>\n</div></div>"], "reply": "1", "tittle": "重磅｜ Kubernetes 1.5 正式发布", "comment": ["在 kube 里，组件改名是常态"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"heat distortion\" src=\"https://github.com/aleen42/PersonalWiki/raw/master/post/heat_distortion/DistortionEffect_800x600.jpg\"></p>\n<p>这里我转一篇有关前端 WebGL 的文章, 并且我认为这篇文章值得我们去反省, 我们仅仅甘于简单的页面开发吗?</p>\n<p>文章已经被整理并收录在一下的地址: <a href=\"https://github.com/aleen42/PersonalWiki/blob/master/post/heat_distortion/heat_distortion.md\" rel=\"nofollow\">https://github.com/aleen42/PersonalWiki/blob/master/post/heat_distortion/heat_distortion.md</a></p>\n<p>若你想直接跳过这篇英文而直接看作者到底都干了些啥, 那直接上 Demo: <a href=\"https://tympanus.net/Tutorials/HeatDistortionEffect/\" rel=\"nofollow\">https://tympanus.net/Tutorials/HeatDistortionEffect/</a></p>\n<p>虽然我对 WebGL 并不熟悉, 而且连一个入门阶段都未达到. 但是, 既然看到了这篇好文, 理应跟大家分享一下.</p>\n</div></div>", "<div class=\"topic_content\">Code is content based, but not browser based. 不要总想着代码能兼容于所有的运行环境，因为时代总会往前迈进。难道你还为旧版浏览器的兼容性而放弃前行吗？当然不行。参阅最近的翻译《 WebGL 的潜能》： <a target=\"_blank\" href=\"https://github.com/aleen42/PersonalWiki/blob/master/translation/webgl_potential/webgl_potential.md\" rel=\"nofollow\">https://github.com/aleen42/PersonalWiki/blob/master/translation/webgl_potential/webgl_potential.md</a></div>"], "reply": "26", "tittle": "当我这枚前端看到这篇文章时, ...", "comment": ["显卡不支持 WebGL 的表示什么都看不见。", "加入收藏 谢谢分享..", "前端其实就是 IT 行业的工业设计，就像社会分工一样，随着技术发展， IT 的“工业设计”也逐步细化分工\r", "工业设计在其他实物产品的行业，也是本世纪从贴牌到自主品牌后，厂家从无知到重视的\r", "IT 也一样，当开始重视自有品牌，技术成熟后，就不能仅局限于展示数据了，而更多要考虑 怎么 展示\r", "\r", "WebGL 只是其中一种方式，还有更多可能", "前端干好自己该干好的东西就好了，\r", "这种极其依赖操作系统图形子系统的玩意，让前端来玩不就玩坏了\r", "你用前端开发个 大型 3D 游戏试试，开发个 CAD 试试", " hhhh, 赶紧换显卡", "应该说我们仅仅甘心于前端开发吗？", " 轻量点的东西我们还是可以尝试的。毕竟目前硬件上来了，难道你不喜欢把这种东西做得更为轻吗？", " 只看技术的人，估计就会说我只甘于做技术。这屁事根本就是设计师的活= =", " 其实个人觉得，这种东西让前端来玩并非会玩坏，也跟该干好的并无冲突。纯属是一种业余学习，且知识层面能大一点。", "很早以前就感觉 canvas webgl 和 jquery angular 这些开发页面用的东西不是在同一个前端体系中的  同一个语言也有很多方向啊", " 是不是感覺到學海無涯= =", "   涉及到的领域不一样，真心的，前端并不需要多少图形学或者光照算法之类的知识，而这些才是图形计算领域的重点\r", "\r", "前端跟 20 年前 GUI 交互并没有区别，那个时代的 C/S 软件模型，根本就没有前端这个说法，\r", "基本上都是用户 GUI 交互 后台数据逻辑都是一个人能搞定，而且交互细节比现在的所谓的 web 前端交互细节还要复杂， C/S 死了原因很简单，跨平台很烂，软件更新比较烂，所以 web 才大行其道，连企业应用这种交互需求比较稳定的软件，都慢慢的全部移动到了 B/S ，足以说明 C/S 应用基本上死翘翘了\r", "\r", "90 年代，好不容易出了个 Java ，大家都盼望着一统天下，写一次到处运行，结果呢？ Java 自己搞了一套图形类库 Swing ，根本没法用，效率极低，此后 Java 基本上滚出了 GUI 交互领域， win 平台 桌面一直是 MFC 的天下，后来是 winform,因为类 unix 桌面市场比较小，基本上没人做，所以 GUI 交互跨平台慢慢滚出了人们的视线\r", "\r", "现在分工比较明确，首先是因为前端工具不好用， 20 年了，前端至今没有造出一个像样的轮子，弄个像样点的页面 \r", "需要学习很多复杂的技术，看看 RAD 快速开发工具 上手速度有多快，就知道前端目前有多荒凉", " hhh 正解.", " 真的，你有机会去学习下 C#的 winform 或者 delphi ，你会发现那些快速开发工具 做出来的 GUI 交互 \r", "学习成本是 前端的一半都不到", " 嗯嗯，的确是。接触过前端有关图像处理这块后，我发现，的确前端这块对于 GUI 交互缺少好的轮子。而且，全都需要自己去从底层造。可悲！", " 不过现在，前端这块不是有国外的一些厂商开始造工具吗？我比较欣赏 Adobe 对这块所做出的贡献。", " 还是较为赞同\r", "试个图片\r", "你可以先试着用 WebGL API 写一个 Text Input 出来。我事先真没想到写一个这么小的东西居然要这么多代码。感觉回到没有图形界面的石器时代。", " 我在看作者的文件都看暈了. API 一大堆, 還要一個個去查 MDN 的手冊= =心酸", "\r", "\r", " 使用 Unity 3D 写的吧？", "做过一段时间 webgl ，如 1 楼所说，浏览器兼容问题 /性能问题很头疼。现阶段做技术储备很不错，用来商用维护成本太高。\r", "移动端蛋疼的微信内置浏览器， three.js,scenejs 用起来一堆问题；\r", "桌面端除了 chrome 其他的都可能遇到蛋疼的问题，还不说目前广泛存在的 IE 系列；\r", "\r", "如果没记错的话， webGL 基于 opengl es2.0 ，把一些 api 精简了，导致绘制光滑曲面非常扯淡（也可能是我技术不精，我记得是再 opengl 里某个函数可以直接调用就能完成的事儿，在 opengl es 里没查到那个函数）", " 哥们，对于此问题我们可以看一下我之前所翻译的一篇文章《 WebGL 的潜力》： ", "\r", "\r", "我挺喜欢作者所提出的其中一个观点：代码基于内容，而非基于其运行环境（浏览器）\r", "\r", "code is then content based, not browser based\r", "\r", "若我们总局限于运行的环境，那么终将只会导致我们在开发过程中怕这怕那。那么，该领域怎么会有所发展呢？", "可以先了解 three.js babylon.js whitestorm.js", "I'm 图形这块就算不涉及 shader 也有很多数学上的东西", " 我并没有否认 webgl 的潜力，也看好它的未来；只是在现在并不好用（敢用），但我同时也提到了可以（应该）现在开始进行技术储备。\r", "\r", "简单来说，比如我用一周四级基于 three.js 开发了一个 demo 领导说效果可以，但是客户们大多通过微信直接打开的，而微信内置的那个傻逼浏览器却无法正常显示。调试了好久发现只能花两个月时间用原生 api 重写这个 demo 。最后结果是达到了，但成本却成倍提高。\r", "\r", "写业务代码是为了（给自己 /给公司）挣钱，一味地追新技术，费时费力容易踩坑，会把公司拖死的。\r", "当然，如果是行业巨头有足够钱用来给未来做技术储备这种情况除外。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"http://888pic.com/%E5%B0%B1%E6%98%AF%E4%BB%BF%E5%88%B6%E8%BF%99%E4%B8%AA%E7%BD%91%E7%AB%99%EF%BC%8C%E5%A6%82%E6%9E%9C%E5%A4%A7%E7%A5%9E%E7%9F%A5%E9%81%93%E8%BF%99%E4%B8%AA%E7%BD%91%E7%AB%99%E5%8E%9F%E5%88%9B%E4%BD%9C%E8%80%85%E6%98%AF%E8%B0%81%E6%9B%B4%E5%A5%BD%E4%BA%86%EF%BC%8C%E8%B0%A2%E8%B0%A2%E5%A4%A7%E5%AE%B6%EF%BC%81\" rel=\"nofollow\">http://888pic.com/就是仿制这个网站，如果大神知道这个网站原创作者是谁更好了，谢谢大家！</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "请问做一个这样的网站大概需要多少钱？", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我又是来拉流量的, 欢迎在文末扫码关注微信公众号.</p>\n<p>原问在 <a href=\"https://www.tanglei.me/blog/difference-between-du-and-ls.html\" rel=\"nofollow\">这里</a></p>\n<h2>由一次磁盘告警引发的血案 -- du 和 ls 的区别</h2>\n<p><img alt=\"difference-between-du-and-ls\" src=\"https://www.tanglei.me/resources/difference-between-du-and-ls/du-ls.jpg\"></p>\n<p>如果你完全不明白或者完全明白图片含义, 那么你不用继续往下看了. 否则, 这篇文章也许正是你需要的.</p>\n<h3>背景</h3>\n<p>确切地说，不是收到的自动告警短信或者邮件告诉我某机器上的磁盘满了，而是某同学人肉发现该机器写不了新文件才发现该问题的.  说明我司告警服务还不太稳定 :)</p>\n<p>第一次出现该问题时, 我的处理方式是: 先删了 <code>/tmp/</code> 目录, 空闲出部分空间, 然后检查下几个常用的用户目录, 最终发现某服务 A 的日志文件(contentutil.log)占用了好几个大 G, 询问相关开发人员后确定该日志文件不需要压缩备份, 所以可直接删除, 于是 <code>rm contentutil.log</code> 之后就天真地认为万事大吉了...(不懂为啥当初没 <code>df</code> 再看看)</p>\n<p>然而, 大约 xx 天后, 发现该机器磁盘又满了, 惊呼奇怪咋这么快又满了. 最终发现是上次 <code>rm contentutil.log</code> 后, 占用好几个大 G 的 contentutil.log 一直被服务 A 的进程打开了, <code>rm</code> 后空间并没有释放.\n<code>rm</code> 其实是删除该文件名到文件真正保存到磁盘位置的链接, 此时该文件句柄还被服务 A 打开, 因此对应的数据并没有被回收, 其实可以理解为 GC 里面的引用计数, <code>rm</code> 只是减少了引用计数, 并没有真正的进行释放内存, 当引用计数为 0 的时候, OS 内核才会释放空间, 供其他进程使用. 所以当 A 进程停止(文件句柄的引用计数会变为 0)或者重启后, 占用的存储空间才被释放(从某种程度上讲说明该服务一直很稳定, 可以连续跑很久不出故障~ 微笑脸).\n(tip: 如果不知道具体进程或文件名的话：<code>lsof | grep deleted</code>，这样会查找所有被删除的但是文件句柄没有释放的文件和相应的进程，然后再 kill 掉进程或者重启进程即可).</p>\n<p>后来, 白老板告知可以用修改文件内容的方式在不用重启进程的情况下释放空间.</p>\n<h3>du vs ls</h3>\n<p>前两天该问题又出现了, 该服务 A 的日志文件(contentutil.log)占用了约 7.6G(请原谅我们没有对该服务的日志做 logrotate)。这一次学聪明了, 直接用<code>echo 'hello' &gt; contentutil.log</code>, 然后 <code>df</code> 确认磁盘空间确实已经释放, 心想着这次可以 Happy 了, 突然手贱执行了下 <code>ls</code> 和 <code>du</code>, 有了以下结果:</p>\n<pre><code>[root@xxx shangtongdai-content-util]# ls -lah contentutil.log\n-rw-r--r--. 1 root root 7.6G Nov  7 19:36 contentutil.log\n[root@xxx shangtongdai-content-util]# du -h contentutil.log\n2.3M    contentutil.log\n</code></pre>\n<p>反正我看到这样的结果是百思不得其解, 如果你已经明确为什么会产生这样的结果, 那就不用继续往下看了.\n可以明确的是, 这里的 <code>ls</code> 和 <code>du</code> 结果肯定代表不同的含义, 具体原因不详, 在查阅相关资料和咨询强大的票圈后了解到, 这大概与文件空洞和稀疏文件(holes in 'sparse' files)相关.</p>\n<p><code>ls</code> 的结果是 apparent sizes, 我的理解是文件长度, 就类似文件系统中 file 这个数据结构中的定义文件长度的这个字段, <code>du</code> 的结果 disk usage, 即真正占用存储空间的大小, 且默认度量单位是 block. (apparent sizes 和 disk usage 说法摘自 <code>man du</code> 中的 <code>--apparent-size</code> 部分)</p>\n<p>给出一个具体的示例:</p>\n<pre><code>// Mac OS 10.11.6 (15G1004)\n➜  _drafts git:(source) ✗ echo -n a &gt;1B.log\n➜  _drafts git:(source) ✗ ls -las 1B.log\n8 -rw-r--r--  1 tanglei  staff  1 11  9 00:06 1B.log\n➜  _drafts git:(source) ✗ du 1B.log\n8\t1B.log\n➜  _drafts git:(source) ✗ du -h 1B.log\n4.0K\t1B.log\n</code></pre>\n<p>上面示例中, 文件 1B.log 内容仅仅包含一个字母\"a\", 文件长度为 1 个字节, 前面的 8 为占用的存储空间 8 个 block, (ls -s 的结果跟 du 的结果等价, 都是实际占用磁盘的空间), 为什么 1 个字节的文件需要占用 8 个 block 呢, 可以这样理解, <em>block</em> 为磁盘存储的基本的单位, 方便磁盘寻址等(这里说的基本单位应该是磁盘物理结构单位例如一个扇区 /柱面等, 对应一个物理单位), 而此处的 block 可以理解为一个逻辑单位, 且一个文件除了包括数据外, 还需要存储描述此文件的其他信息, 因此包含 1 个字节的文件实际在磁盘中占用的存储空间不止 1 个字节. 默认情况下, Mac 中 1 个逻辑 block 中是 512 字节, 因此 <code>du -h</code> 结果是 <code>8 * 512 = 4096 = 4.0K</code>.</p>\n<blockquote>\n<p>If the environment variable BLOCKSIZE is set, and the -k option is not specified, the block counts will be displayed in units of that size block.  If BLOCKSIZE is not set, and the -k option is not specified, the block counts will be displayed in 512-byte blocks. (<code>man du</code>)</p>\n</blockquote>\n<p>因此, 通常情况下, <code>ls</code> 的结果应该比 <code>du</code>的结果更小(都指用默认的参数执行, 调整参数可使其表达含义相同), 然而上面跑服务 A 的机器上 contentutil.log 的对比结果是 <code>7.6G vs. 2.3M</code>, 仍然无法理解了.\n沿着 <a href=\"https://linux.die.net/man/1/du\" rel=\"nofollow\">man du</a> 可以看到:</p>\n<blockquote>\n<p>although the apparent size is usually smaller, it may be larger due to holes in ('sparse') files, internal fragmentation, indirect blocks, and the like</p>\n</blockquote>\n<p>即因 contentutil.log 是一个稀疏文件, 虽然其文件长度很大, 到 7.6G 了, 然而其中包含大量的<code>holes</code>并不占用实际的存储空间.</p>\n<p>下面用一个具体的例子来复现以上遇到的问题. 注意以下例子为 Linux version 2.6.32 (Red Hat 4.4.7)中运行结果, 且在 Mac 中并不能复现(后文有指出为什么我的 Mac 不能复现).</p>\n<pre><code>// 从标准输入中读取 count=0 个 block, 输出到 sparse-file 中, \n// 一个 block 的大小为 1k(bs=1k), 输出时先将写指针移动到 seek 位置的地方\n[root@localhost ~]# dd of=sparse-file bs=1k seek=5120 count=0\n0+0 records in\n0+0 records out\n0 bytes (0 B) copied, 1.6329e-05 s, 0.0 kB/s\n// 所以此时的文件长度为: 5M = 5120*1k(1024) = 5242880\n[root@localhost ~]# ls -l sparse-file\n-rw-r--r--. 1 root root 5242880 Nov  8 11:32 sparse-file\n[root@localhost ~]# ls -ls sparse-file\n0 -rw-r--r--. 1 root root 5242880 Nov  8 11:32 sparse-file\n// 而 sparse-file 占用的存储空间为 0 个 block\n[root@localhost ~]# du sparse-file\n0\tsparse-file\n[root@localhost ~]# du -h sparse-file\n0\tsparse-file\n</code></pre>\n<p>此时若用 vim 打开该文件, 用二进制形式查看 (tip <code>:%!xxd</code> 可以更改当前文件显示为 2 进制形式), 能看到里面的内容全是<code>0</code>. 或者直接用<code>od</code>命令查看 2 进制.</p>\n<pre><code>// vim 二进制查看\n0000000: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n0000010: 0000 0000 0000 0000 0000 0000 0000 0000  ................\n....\n//od -b sparse-file\n0000000   000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000\n*\n24000000\n</code></pre>\n<p>实际上, Sparse 文件是并不占用磁盘存储空间的, 那为什么能看到文件里面包含很多 0? 因为当在读取稀疏文件的时候, 文件系统根据文件的 metadata(就是前面所指描述文件的这个数据结构)自动用<code>0</code>填充[ref Wiki]; Wiki 上还说, 现代的不少文件系统都支持 Sparse 文件, 包括 Unix 及其变种和 NTFS, 然而 Apple File System(APFS)不支持, 因此我在我的 Mac 上用 <code>du</code> 查看占用空间与 <code>ls</code> 的结果一致. 传闻指出 Apple 在今年 6 月的 WWWC 上宣称支持 Sparse 文件. (貌似目前我的系统版本还不支持)</p>\n<pre><code>// In Mac\n➜  ~ dd of=sparse-file bs=1k seek=5120 count=0\n0+0 records in\n0+0 records out\n0 bytes transferred in 0.000024 secs (0 bytes/sec)\n➜  ~ ls -ls sparse-file\n10240 -rw-r--r--  1 tanglei  staff  5242880 11  9 09:44 sparse-file\n➜  ~ du sparse-file\n10240\tsparse-file\n</code></pre>\n<p>以上是用 <code>dd</code> 等命令创建稀疏文件, 也有同学用 c 代码实现了相同的功能. 其实就是写文件的时候, 改变下当前文件写指针. 前面遇到的问题就应该类似.</p>\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;string.h&gt;\n\nint main() {\n    int fd, result;\n    char wbuf[] = \"hello\";\n\n    if ((fd = open(\"./filetest.log\", O_RDWR|O_CREAT|O_EXCL, S_IRUSR|S_IWUSR))\n)  {\n            perror(\"open\");\n            return -1;\n    }\n    if ((result = write(fd, wbuf, strlen(wbuf)+1)) &lt; 0) {\n            perror(\"write\");\n            return -1;\n    }\n    if ((result = lseek(fd, 1024*1024*10, SEEK_END)) &lt; 0) {\n            perror(\"lseek\");\n            return -1;\n    }\n    if ((result = write(fd, wbuf, strlen(wbuf)+1)) &lt; 0) {\n            perror(\"write\");\n            return -1;\n    }\n\n    close(fd);\n    return 0;\n}\n</code></pre>\n<p>以上先将\"hello\"写入 filetest.log, 然后改变文件指针到<code>1024*1024*10</code>(相当于文件长度这个字段变大了), gcc 编译后运行结果文件详情如下:</p>\n<pre><code>[root@localhost ~]# ls -ls filetest.log\n8 -rw-------. 1 root root 10485772 Nov  9 17:45 filetest.log\n[root@localhost ~]# du  filetest.log\n8\tfiletest.log\n[root@localhost ~]# du -h filetest.log\n8.0K\tfiletest.log\n[root@localhost ~]# ls -lh filetest.log\n-rw-------. 1 root root 11M Nov  9 17:45 filetest.log\n[root@localhost ~]# od -c filetest.log\n0000000   h   e   l   l   o  \\0  \\0  \\0  \\0  \\0  \\0  \\0  \\0  \\0  \\0  \\0\n0000020  \\0  \\0  \\0  \\0  \\0  \\0  \\0  \\0  \\0  \\0  \\0  \\0  \\0  \\0  \\0  \\0\n*\n50000000  \\0  \\0  \\0  \\0  \\0  \\0   h   e   l   l   o  \\0\n50000014\n</code></pre>\n<p>解释下结果: 文件长度应该是 \"hello\" 加上 \"\\n\" 共 6 个字节<code>*2 = 12</code>, 再加上<code>1024*1024*10</code>个字节, 即为<code>ls</code>产生的结果 10485772 个字节约 11M, 而<code>du</code>的结果为 8 个 block 也为 8k(这台机器上的 block 大小与前面的 Mac 不一样, 这里是 1024).</p>\n<blockquote>\n<p>Display values are in units of the first available SIZE from --block-size, and the DU_BLOCK_SIZE, BLOCK_SIZE and BLOCKSIZE environment variables.  Otherwise, units default to 1024 bytes (or 512 if POSIXLY_CORRECT is set. (<code>du --help</code>)</p>\n</blockquote>\n<h3>总结</h3>\n<p>总结一下: 出现以上问题说明自己对一些基础掌握得尚不牢固, 比如</p>\n<ol>\n<li>rm 某文件后, 文件占用的磁盘空间并不是立即释放, 而是其句柄没有被任意一个进程引用时才回收;</li>\n<li>ls/du 命令结果的具体含义;</li>\n<li>稀疏文件.</li>\n</ol>\n<p>然而这些知识点都在《 UNIX 环境高级编程》这本书中有讲 (之前走马观花看过不少, 咋对稀疏文件等一点印象都木有!)</p>\n<p>以上内容若有不清楚或不正确的地方, 还望大家指出, 感谢.</p>\n<p>另外, 我最终也开通了一个微信公众号, 欢迎有兴趣的同学扫码关注, 谢谢.</p>\n<p><img alt=\"微信公众号\" src=\"https://www.tanglei.me/resources/wechat-tangleithu.jpg\"></p>\n<p>参考资料:</p>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Sparse_file\" rel=\"nofollow\">wiki Sparse_file</a></li>\n<li><a href=\"https://linux.die.net/man/1/du\" rel=\"nofollow\">man du</a></li>\n<li><a href=\"http://blog.csdn.net/todd911/article/details/11237627\" rel=\"nofollow\">《 UNIX 环境高级编程》笔记--read 函数， write 函数， lseek 函数</a></li>\n<li><a href=\"http://www.cnblogs.com/coldplayerest/archive/2012/02/19/2358098.html\" rel=\"nofollow\">为什么用 ls 和 du 显示出来的文件大小有差别？</a></li>\n<li><a href=\"http://blog.qiusuo.im/blog/2014/08/18/rm-daemon-log/\" rel=\"nofollow\">删除守护进程的日志</a></li>\n<li>UNIX 环境高级编程 第 2 版, 第 3 章 文件 I/O, 第 4 章 文件和目录</li>\n</ul>\n</div></div>"], "reply": "31", "tittle": "你真的知道 du 和 ls 的区别吗?", "comment": ["你说了那么多，其实最开始的时候你该 df -h 一下 ……", "总结，清理进程正在访问时的文件不能用 rm, 要用 >.", "确实专业，支持下。", "我去， df 居然也不信，好吧，我光速打自己脸了", "这明显是开发的锅，日志系统不支持 rotate", "dd of=sparse-file bs=1k seek=5120 count=0 生成的文件 df 也是看不见的，所以你 df 了也没用……", "这个比上次那个免密码拷贝的高级多了。", "(请原谅我们没有对该服务的日志做 logrotate)\r", "\r", "这才是问题啊……\r", "log rotation 怎么能不做呢。", "学习了，看到一半猜到了可能导致的原因，但是以前并不清楚也没有在意过。\r", "\r", "特别大的 log 如果有保存需求我都会定期下载下来然后跑 cmix ……\r", "然后就再也没用过了……\r", "大概就是为了体验大文件无损变小的快感吧", "学习了。", "如果用 rm -rf 删，即便文件正在被另一进程 append ，是不是也不会有问题了呢？", "真的是涨姿势了！～", "好文", " 文件依然存在， append 的依然往磁盘写，但是其他进程已经看不到这个文件了。直到写文件进程释放。", "文中提到了 APFS ，不要和 HFS+ 搞混了。", "这篇好多了，学习了，以前还真没看这些细节，稀疏文件倒是了解，没用过", "感觉可以继续讨论一下\r", "稀疏文件在网络传送时的大小及速率？\r", "不同文件系统间转移同一稀疏文件有何差异？", "看了好久还是不懂 看来是外行人", "貌似是 APUE 第四章的内容", "我最喜欢的命令:\r", "sl", "终于不是争论 linux 好不好用的问题了。。", "确实研究的够深入，不错", "学习了，赶紧做个笔记", "之前遇到过类似的，测试数据库字段被删了，代码没改， supervisor 的 log 很快打爆磁盘，删了 log 要重启 gunicorn 进程才能释放空间", "学习了。。", "--------\r", "(请原谅我们没有对该服务的日志做 logrotate) \r", "\r", "这才是问题啊…… \r", "log rotation 怎么能不做呢。\r", "-----\r", " 前人留下的坑~ 刚开始并不知道木有。\r", "\r", "   APFS v.s HFS+  感谢指出.\r", "\r", "\r", "另外， 看来从其他地方 copy 到 V2EX 还是有用的， 收藏数量不少。 \r", "不过，我主要目的是推广我的微信公众号啊，新文首发微信公众号, 求关注。", "http 不支持稀疏文件，所以会补 0 传输。\r", "如果有对静态文件启用压缩，可以降低传输量，但是写入的文件会占据 ls 看到的大小。\r", "可以搜下 http gzip bomb", "一直用 linux ，之前虚拟机开了 100G 装 winxp ，结果用了 10 个 G 不到应该就是这个原因。\r", "以前貌似看过这头像，学长？", "刚看到开头，就猜到后面的二维码了。\r", "\r", "这套路已经看得太多：先无故作死，再查资料、猜，出现眉目却又引入新坑，最后翻翻官方文档给出结论。", " 这不是标准格式吗 ", "  \r", "\r", "\r", " 不过楼主动不动就说不用往下看了，真是不舒服，虽然我看了开头就知道是什么故事 ", " ", "  如果知道怎么回事, 确实不用往下看了啊， 多浪费时间啊。  :) \r", "\r", "  发文的目的， 第一句我就说了。  O(∩_∩)O 哈哈~\r", "\r", " 学弟?"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://gold.xitu.io/post/584d0e36ac502e00692aa962\" rel=\"nofollow\">https://gold.xitu.io/post/584d0e36ac502e00692aa962</a></p>\n<p>不全文转载了，见谅（ V2EX 似乎也不支持 Markdown 的表格）。</p>\n</div></div>"], "reply": "3", "tittle": "强/弱类型、动/静类型、GC 和 VM，你分清楚了么？", "comment": ["Is strong type with type inference the future?", "90% 的 Java 程序员分不清强弱和动静的差别，认为 Python 是弱类型。", "勿在浮沙筑高台。（特别是以外链还需要注册其它号才能看全内容的形式。）\r"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>目前用浮点运算后，报错 mgeneral-regs-only 。查了下 arm 编译手册，说是开启这个后，表示只能用通用寄存器，不能用浮点寄存器，但是我把这个关闭后，我自己的 Linux 内核模块时能编译通过了，但是编译整个 kernel 后， kernel 启动不了。怎么用正确的方式开启浮点运算？ arm 平台</p>\n</div></div>"], "reply": "3", "tittle": "arm a53 核怎么开启浮点运算？", "comment": ["你是用 32 位还是 64 位?", " 64", "kernel 里面不会用到浮点啊。\r", "如果要编译硬浮点的程序，在 gcc 里配好浮点就行了（-mfloat-abi=softfp ）"]},
{"content": ["<div class=\"topic_content\">现在上代码还是在服务器上通过 git 给 pull 下来，有没有可以一键发布这种系统？</div>"], "reply": "15", "tittle": "有没有比较成熟的前端代码发布系统？", "comment": ["一键的肯定没有，不同的系统对发布的定义不一样，而且，发布的方式也用不同。\r", "不过，大部分都可以使用 Node 脚本搞定，脚本写完后，可以一条命令来发布。", "bamboo jenkins walle? 一大堆 部署系统", "如果想搞的成熟些，机器多台，开发人员多个，项目多个，开源方案看看这个：\r", "\r", "如果就少量两三个人，维护一两个项目，几台服务器，试试 python 的 fabric 。", "ci?", "pm2", "用 CI 自动部署", "CI\r", "就上\r", "genkins", "用 gitlab 可以结合 gitlab-ci 弄", "daocloud\r", "自己的个人项目用这个-。-", "啥前端代码发布系统啊    专业点叫自动构建部署平台    ci   常用的 jenkins  配合 git 的 webhook 相当好用 配置一下  代码一有更新就会自动构建发布   各大代码仓库都有自带 webhook", "我比较喜欢 capistrano 系\r", "\r", "部署后，目录结构如下：\r", "\r", "project_root\r", "├── current -> releases/20150301100000 # this is a symlink to the current release\r", "├── releases\r", "    ├── 20150301100000\r", "    ├── 20150228100000\r", "    └── 20150226100000\r", "└── shared\r", "    ├── config\r", "    ├── uploads\r", "\r", "\r", "另外还有\r", "1 、先说始作俑者 capistrano （基于 ruby ）\r", "\r", "初始化环境、部署、回滚等等， ruby 圈应用很广泛，比较成熟了\r", "\r", "2 、 Mina ", "\r", "\r", "目录结构跟 capistrano 一样，也是基于 ruby ，定位是比 C 更简洁更轻量更快\r", "\r", "3 、 ", "\r", "\r", "基于 ansible 的部署模块，原理跟前面两两差不多。 \r", "\r", "目前部署个小项目啥的，基本就它了", " 这个不错", "如果是 js ， pm2 和 shipit 都不错", "看我头像 ：）", "nice 这个不错"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>项目地址： <a href=\"https://github.com/chnhyg/province-city-district\" rel=\"nofollow\">https://github.com/chnhyg/province-city-district</a></p>\n<p>数据来源： <a href=\"http://www.stats.gov.cn/tjsj./tjbz/xzqhdm/\" rel=\"nofollow\">http://www.stats.gov.cn/tjsj./tjbz/xzqhdm/</a></p>\n</div></div>"], "reply": "23", "tittle": "整理了一份最新版省市区数据，带行政区划代码，要的拿走。", "comment": ["\r", "民政部每个月末会推出新的行政区划码", "好东西，感谢！", "看了下 JSON 的结构，感觉需要调整一下，然后整合为一个大的 JSON ，会更加实用。\r", "抓取一部分说一说：\r", "  {\r", "    \"cityID\": 1,\r", "    \"provinceID\": 1,\r", "    \"divisionCode\": \"110100\",\r", "    \"cityName\": \"市辖区\"\r", "  },\r", "  {\r", "    \"cityID\": 2,\r", "    \"provinceID\": 1,\r", "    \"divisionCode\": \"110200\",\r", "    \"cityName\": \"县\"\r", "  },\r", "  {\r", "    \"cityID\": 3,\r", "    \"provinceID\": 2,\r", "    \"divisionCode\": \"120100\",\r", "    \"cityName\": \"市辖区\"\r", "  },\r", "  {\r", "    \"cityID\": 4,\r", "    \"provinceID\": 2,\r", "    \"divisionCode\": \"120200\",\r", "    \"cityName\": \"县\"\r", "  },\r", "  {\r", "    \"cityID\": 5,\r", "    \"provinceID\": 3,\r", "    \"divisionCode\": \"130100\",\r", "    \"cityName\": \"石家庄市\"\r", "  },\r", "比如这样的数据，并在同一级别里有什么作用？比较常见的做法是按 省-市-县 来嵌套结果，一个 JSON 可以清晰明了地把所有事情都做了。", " 嗯，暂时就分三个吧，不做调整。需要一整个的话可以转换一下，工作量不多。\r", "其实之前有考虑过这种格式：\r", "```\r", "[\r", "  {\r", "    \"id\": 1,\r", "    \"parentID\": null,\r", "    \"level\": 1,\r", "    \"name\": \"广东\"\r", "  },\r", "  {\r", "    \"id\": 2,\r", "    \"parentID\": 1,\r", "    \"level\": 2,\r", "    \"name\": \"深圳\"\r", "  }\r", "]\r", "```", " 我的意思是 city 应该是嵌套在 province 内的一个数组，而非并列在同一个级别。", " 理解你的意思，不太认同用嵌套，嵌套的数据结构更加复杂。", " 嵌套的话就不能一次遍历查询的到了", "增加一下邮编之类的吧", " 有没有可靠稳定的数据来源？", " 我们先前是调用别人的接口获取邮编的，调用了聚合的接口。邮政官网不知道有没有稳定的", "有界线坐标就更好了", "已拿走，谢谢,😄", "130185:{id: \"130185\", pid: \"130100\", name: \"鹿泉市\", area_code: \"0311\", level: \"3\", type: \"区\"}, \r", "130200:{\r", "    id: \"130200\", \r", "    pid: \"130000\", \r", "    name: \"唐山市\", \r", "    area_code: \"0315\", \r", "    level: \"2\", \r", "    type: \"市\"\r", "}, \r", "130202:{\r", "    id: \"130202\", \r", "    pid: \"130200\", \r", "    name: \"路南区\", \r", "    area_code: \"0315\", \r", "    level: \"3\", \r", "    type: \"区\"\r", "}, \r", "\r", " 这是我现在用的。\r", "\r", "用 id 作下标，可能比数组慢，但是不用遍历查询。\r", "\r", "能不能做这种格式的", " 这个不适合大多数人，不能在 repo 里改，如果你需要的话，我单独给你做一份？", " 只能数组？还是格式不行？", " repo 是给大家看的，得让大多数人接受才行。", "这种项目我第二次见了= =", " ？！ 我这个让人无法接受吗？有这么惨吗", " 倒不是说让人无法接受，只是说让大多数用户更轻松地去接受。", " 所以说怎样让大多数用户更轻松地去接受呢？", " 就像我当前的 repo 这样，同样的数据，能简单就不整复杂了，当然这是经验之一。", " \r", "[\r", "{\r", "id: \"邮政编号\", \r", "pid: \"父级邮政编号\", \r", "name: \"区域名称\", \r", "area_code: \"电话区号\", \r", "//后面两个可有可无\r", "level: \"2\", \r", "type: \"市\" \r", "}\r", "]\r", "这样子格式做一份谢谢", " 电话区号我没有数据源。"]},
{"content": ["<div class=\"topic_content\"> [深圳：个人出租住房暂将按 10%税率征收个人所得税] 深圳市地方税务局草拟了《深圳市地方税务局关于个人出租房屋个人所得税征收管理的公告（征求意见稿）》。其中，个人出租住房，暂减按 10%的税率征收个人所得税；个人出租非住房，按 20%的税率征收个人所得税。</div>"], "reply": "1", "tittle": "租房收税如果成真，你们还要在深圳么？", "comment": ["羊毛出在羊身上 最后还是叠加在企业手上"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>2017 年 1 月 1 日开始，苹果强制所有 iOS 应用必须使用 ATS ，即 APP 内连接必须使用更安全的 HTTPS 。</p>\n</div></div>"], "reply": "44", "tittle": "明年 1 月 1 日起， iOS 应用必须使用 HTTPS 才能上架，安卓怎么看？", "comment": ["这类贴 V2EX 已经发了一堆了，大家都看累了，不想看", "官方并没有强制要求 https", " 2017.1.1 就强制了。", "安卓躺枪了吧", "卖 ssl 证书的公司发了啊。", " 你是从什么渠道得知的消息呢？", "您好：\r", "\r", "这里是 Apple 开发者计划支持。\r", "\r", "我了解您想知道有关 HTTPS 的问题，我为您查询过，我们的 WWDC 里有提及过 App Transport Security 要求 HTTPS 。但目前为止，我们对于开发者上还没有这个规定，所以，暂时不须马上更改为 HTTPS 。一旦有新的规定，我们一定会通知我们的开发者。\r", "\r", "如果希望了解更多有关此项目，请查看我们的 WWDC: ", "\r", "\r", "另外，以下为开发者论坛的网页, 您也可以尝试搜寻您的问题, 并参考其他开发者解决的方法：\r", "\r", "\r", "\r", "如果您有需要联系我们，欢迎致电或通过电邮的方式跟我们联系，并提供案件编号案例编号: 100083922522 。我们的办公时间是北京时间周一至周五， 09:00 至 17:00 ，电话号码是 4006-701-855 ，或是到以下网站查询各地区 Apple 开发者计划支持电话号码：\r", "\r", "\r", "\r", "我们很乐意为您提供帮助，感谢您参与我们的开发者计划。\r", "\r", "Daniel\r", "Apple Inc. \r", "\r", "\r", "日期为： 2016.12.05", " 真正问过才知道的。", "还是都用 HTTPS 吧, 开发省心, 对用户来说也更安全", "用优越感看 （滑稽", " 有免费的啊", "安卓 7.0 开始 204 页面也强制 https 了，为此专门给自己的小 vps 买了个域名上 https", "  ", "     \r", "What has changed is that App Review will require “ reasonable justification ” for most ATS exceptions.        \r", "你可以在 2017 继续用 http, 只是每条例外都要写个理由, 然后等苹果审核......", "坐等个讨论结果", " ", " \r", "\r", "说得很清楚，除了特殊情况，所有的 App 在 2017 年就需要支持 HTTPS 。", "这特么不可能好吧，如果是给第三方网站做 App ，你怎么要求别人加 HTTPS 嘛，现在互联网上 90%都是 HTTP 好吧", "早就适配了，只是一直没时间测试所以没使用，真要这样的话要抓紧时间开始测试了。", " 开一家 ssl 公司,需要什么技术?", " 加解密，能防止别人破解密码就行", "去 itunes connect 看下，现在有个 App 使用非豁免类加密的标注了，一般都是 false 。", "Android 7.0 也加入了类似 ATS 的特性，但 Google play 并未强制实行，或许要等到明年？", " 大家可以去瞥一下这个帖子，有兴趣可以讨论一下 : )", " 附上链接 ", "Android 为什么要看？", "我也就是 yue 了! 用 HTTPS 不好吗? 很好啊!\r", "\r", "当看到 Mozilla 这篇博文([Mixed Content Blocking Enabled in Firefox 23!]( ", " HTTPS 了,但是可以做一个兼容 HTTP.", "不用 HTTPS 的话，传输层上很多中介可以直接查看明文传输的内容。很不安全。而 SSL 的成本并不高啊，技术已经很成熟了。", "骑着驴看", "Let's Encrypt 要立功了", "今天刚给服务器上了 ssl", "这是好事啊，省的被运营商劫持", " 谁跟你说的互联网上 90%是 http ，真是坐井观天，\r", "我明确的告诉你：现在互联网上的访问超过 75%是 https 的。", " 这个数据是大陆还是世界范围？有点不可思议。。。", " 来源请求？", "不是强制的，但是肯定是趋势。 over 。", " \r", " \r", " \r", " \r", "个人觉得 90%都是 http 是不可能的，虽然我没有准确数据。\r", "从全球来看， Google ， YouTube ， Facebook ， twitter ， wikipedia ，和国内的淘宝，百度搜索都已经全站强制 http 了，这些网站在全球的流量不至于低于 10%吧", " 强制 https ，手滑打错", "HTTPS 使用率\r", "\r", "来自 Chrome 的统计数据", "不仅该用 HTTPS ，还应该上 certificate pinning ，这样用户都无法监听流量了。", "https 我觉得是一种趋势了， 为了增强用户的安全性， 我觉得还是有必要的", "https 防窃听，我感觉从安全角度是个必然的趋势。", "HTTPS 增强连接安全性，是好事", "android 表示看看再说，安卓表示别想太多", "无论是不是强制 https ，用 https 肯定是现在和未来大势所趋，安全很重要"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题， openvz 的 container 支持 ipv6 nat 吗？很好奇。\n最近又温习了一下计算机网络，了解到神一般的 nat ，好想试一下！</p>\n</div></div>"], "reply": "9", "tittle": "有 openvz 大牛吗？怎么支持 ipv6-nat?", "comment": ["ip6tables\r", "可能需要安装 kmod-ipt-nat6", "我生无可恋", " ip6tables 是支持的，但是客服说 nat6 不支持，以前在 scaleway 上用过！不知道是不是 openvz 不支持？", "别说 ovz 的， CentOS 默认也没有啊", "ipv6 nat 需要 3.9+的 kernel ，你确定再用的 ovz 是 3.9+才行。不然就是瞎折腾。", "我想说， IPv6 被发明出来的很大一部分原因就是为了让 NAT 这个奇葩快点死掉……", " 我本人挺喜欢 Nat 的，简单安全，省心！如果不使用 NAT6 ，那么厂商提供的 /64 的 IPV6 地址池也是可以用的，但是想想手机有一个全球可寻址的 IPV6 地址，总是觉得不安全！", " 安全本来就是应该由防火墙来提供的，靠在出口层做地址转换这是什么套路…… 这就像某个（伟大的）国家，以为把地图上的坐标画偏一点，敌人的导弹就会跟着打偏，而实际的作用只是让所有人的的生活变得更麻烦了一点而已。\r", "\r", "更何况， NAT 自己就是一个安全隐患： ", " 还是觉得 nat 很容易做到比较安全，公网 ip 的话，达到比较安全就要费不少力。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>为了找一款 Mqtt 服务器，需要进行深度定制开发，最好是 Java 版本</p>\n<p>最开始找到了 moquette ，感觉还不错，使用 Netty 作为支撑，轻车熟路，结果没有官方支持的集群方案，遂弃之</p>\n<p>然后对比了一下各种 Mqtt server 实现，发现 ActiveMQ 比较合适，下载源码下来一看，十多个模块。。。想要编写插件，无从下手。。。 Google 一番，发现 Alibaba 某员工有分享经验，但很不完整，一直调试不同，直到找到一个老外的插件，结合官方插件，才明白应该怎么写。。。</p>\n<p>中途也加了各种关于 ActiveMQ 的 QQ 群，结果都没有理想答案，所以现在组建一个 QQ 群，为有共同方向的人提供交流场地</p>\n<p>QQ 群： 535375218</p>\n</div></div>"], "reply": "2", "tittle": "ActiveMQ 编写插件", "comment": ["占座", "[write plugin for ActiveMQ]( ", ")"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"kaleidoscope\" src=\"https://github.com/aleen42/PersonalWiki/raw/master/post/kaleidoscope/preview.png\"></p>\n<p><strong>Figure 1</strong> A simple preview of kaleidoscopes</p>\n<p>In Chinese, we will name kaleidoscopes as \"萬花筒\", which is a toy showing colorful shapes of thousands of flowers. Today, inspired by the project, <a href=\"https://github.com/claudiocalautti/spring-loaders\" rel=\"nofollow\">spring loaders</a>, I have tried myself to create a similar component with CSS and SVG, rather than Canvas. As the Figure 1 shown, that's my <strong>kaleidoscope</strong>.</p>\n<p>詳情可查看: <a href=\"https://github.com/aleen42/PersonalWiki/blob/master/post/kaleidoscope/kaleidoscope.md\" rel=\"nofollow\">https://github.com/aleen42/PersonalWiki/blob/master/post/kaleidoscope/kaleidoscope.md</a></p>\n<p>還是那句, 若你不喜歡英文, 可直接去看 POC: <a href=\"http://codepen.io/aleen42/pen/mOzbWW\" rel=\"nofollow\">http://codepen.io/aleen42/pen/mOzbWW</a></p>\n</div></div>", "<div class=\"topic_content\">React 的話, 可以參照另一個 Demo 直接引用: <a target=\"_blank\" href=\"http://codepen.io/aleen42/pen/JbmBjK\" rel=\"nofollow\">http://codepen.io/aleen42/pen/JbmBjK</a></div>", "<div class=\"topic_content\">另外，文章已提交申请，收录在社区 <a target=\"_blank\" href=\"https://medium.com/front-end-hacking\" rel=\"nofollow\">https://medium.com/front-end-hacking</a> 。所以，顺带推荐一下社区，我看那边人气还好像不怎么高。</div>"], "reply": "9", "tittle": "萬花筒", "comment": ["赞", "酷炫👍", " Thx", "好东西", " 值得分享", "  很有创造力的啊，已转发给前端小伙伴", " 一切都是受人啟發, 絕非自己憑空想像", "犀利！", " = = 吾犀利"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>大家在工作的时候怎么给项目命名的，如果有多个单词，比如 juicebar 是命名成 juicebar 还是 juice_bar 还是其他的</p>\n</div></div>"], "reply": "18", "tittle": "java 命名问题", "comment": ["做 android ，驼峰，参考 google java style\r", "\r", "全部小写，我会直接写成 juicebar", "java 变量用 juice_bar  ? 为什么会有这种想法 ////你这个一点都不 java", "Java 系：类大驼峰，对象小驼峰，”{“ 放行末。", "juice_bar 是 python 系,java 系是驼峰", "JuiceBar", "项目名 JuiceBar 类名 JuiceBar 变量名 juiceBar", "中文命名，就是方便", "sun 有一套专门的 Java 命名规范", "LZ 说的是项目名啊。我平常都是 juice-bar 的。", "Google Java Style\r", "贴个别人翻译的中文版吧 ", "项目命名： juice-bar", " 怎么发出去了。。。\r", "project: juice-bar\r", "package: juicebar\r", "class: JuiceBar\r", "method: juiceBar\r", "variable: juiceBar\r", "static variable: juice_bar\r", "final static variable: JUICE_BAR", "标准别太奇葩就行，重点是统一，否则没实际意义，我们一般是图省事直接约定用 google 规范。", "项目名的话， 我看 github 上几乎都是 abc-xyz ，小写连横杠。所以我也这么选", "juice-bar", "juijuice-bar ，因为有些系统会忽略字母的大小写", "。。。如果问这个问题，我很怀疑你工作的时候是不是用 java 。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h3>新兴技术出现的脚步永不停歇，技术人学习成长的步伐怎能放慢？</h3>\n<h3>虽然从程序员成长为架构师不能一蹴而就，但大咖们的很多宝贵经验都是可以借鉴受益的。</h3>\n<h3>《架构师》电子书是 InfoQ 网站上最火的系列电子书，鉴于我们网站的下载体验实在太渣，我们收集了全年共 12 本电子书，做成了合集，以飨 V 站的技术同道。</h3>\n<p><img alt=\"image\" src=\"http://static.geekbang.org/infoq/584f7a1ba540c.png?imageView2/0/w/800\"></p>\n<h2>热门文章：</h2>\n<ul>\n<li>从无到有：微信后台系统的演进之路</li>\n<li>为什么我不再使用 MVC 框架</li>\n<li>如何使代码审查更高效</li>\n<li>新浪微博 PC 主站的 PHP7 升级实践</li>\n<li>……</li>\n</ul>\n<h2>参与规则：关注 InfoQ 公众号，回复关键词：「 V 友」，即可获取由 InfoQ 出品的架构师 2016 全年电子书合集下载。</h2>\n<p><img alt=\"image\" src=\"http://static.geekbang.org/infoq/584f7dfe1e6e6.png?imageView2/0/w/800\"></p>\n<p><strong>电子书的内容采编不易、整理不易、制作不易，参与规则很简单，希望大家能够遵守。如果关注 InfoQ 公众号两到三天后，您觉得 InfoQ 每天推送的内容不行，欢迎取关。</strong></p>\n<h2>InfoQ 是一个关注中高端技术人的社区媒体，一线互联网圈从业人士产出原创优质内容，行业内最专业的编辑团队深度加工，每天早晨八点推送一篇互联网干货，专注技术人的交流与成长。</h2>\n<p><strong>祝好！</strong></p>\n</div></div>"], "reply": "47", "tittle": "不想当架构师的程序员不是好码农，送你一本《架构师》2016 全年合集可好？", "comment": ["这个分享方式有点不人道……", "不好", " 这么傲娇。。。", "不好", "电子书的内容采编不易、整理不易、制作不易，参与规则很简单，希望大家能够遵守。\r", " 我觉得还可以。看个人吧，不喜欢的话也没强求你关注呢。关注人家的公众号也给别人一点分享的东西嘛： P", "infq 的文章质量好，比很多权威指南好多了", "回复 Fenng 也可以吧😂", "上一次的还没看完。。。哈哈", "  没看完 +1....", "  是哒，不喜欢内容的可以不用关注，这个不强求~还是希望能给有需求的同学一点实惠的~", "  感谢认可，我们会继续努力呈现更多更好的内容的~", "  看破不说破，我们还是好盆友", "对了，回复 PPT 可以下载 InfoQ 举办的 ArchSummit 全球架构师峰会 2016 北京站的所有讲师 PPT ，这也算是一个小福利吧！", "鉴于我们网站的下载体验实在太渣，我们收集了全年共 12 本电子书\r", "\r", "头疼医脚？", "早就关注了_(:з」∠)_", "  网站的服务器在国外，下载体验差、网页响应速度慢这个问题我们自己也头疼得不行，但是因为种种原因，迁回服务器就能解决的问题我们一直没办法做到。所以我们现在重心更多的是投放在公众号方面，网站上也没有全年的合集下载，只有单月的下载方式。这个也不是头疼医脚的问题吧，更多的是不得已而为之。", "  希望我们的内容对得起你的关注~", " \r", "不管，就是，就是", "一直觉得 rar 不是一个技术人该用的压缩格式。 zip 多好，不用额外装软件。", "  @", " infoq 的下载体验确实不好，刊物整理不易，可以把 InfoQ 电子书或者专辑托管在看云上 付费阅读 让更多的用户享受到 InfoQ 优质的内容 ^_^ InfoQ 是一个内容好平台", "看了第二个文章标题 '为什么我不再使用 MVC 框架' , 感觉有点逗.\r", "为什么我不在使用 php\r", "为什么不在使用 gulp\r", "为什么不在使用 bower\r", "为什么不在使用 scala\r", "为什么不在使用 c++\r", "~~~~~~~\r", "\r", "😹", "InfoQ 点赞", "非常感谢 已关注收藏", "感谢~", "网站体验确实不好， 每次都是在多看里下了看的", "下了 谢谢", "早就关注 InfoQ 啦，文章确实都不错", "关注很长时间了", "\"架构师 2016.rar 是恶意文件， Chrome 已将其拦截\"", "infoQ 的内容是国内 top 水平", ".. 年终 kpi 是关注数么\r", "多谢了", "  我这测试没有问题呀，我也用的 chrome", "  我确定您不是我请来的水军哈，谢谢认可~", "你们一直发送广告邮件。。到后台去掉订阅也还是收到，只能用过滤器拉黑了。。", "一般说「合集」不是一个文件么，结果还是压缩包……差评！", "扫完之后才发现以前就关注过了.但在公众号看文章的习惯太少了.惭愧", " @", "  已经替换成了 zip 版", " 这个\"所有讲师的 PPT\", \"所有\"一词有误吧?", " 除个别讲师的 PPT 不能外传之外，所有的都可以下载", "百度云的下载链接失效了", "百度云下载的解压失败。。。。", "链接成功，提取成功，解压成功——不过为何会是中文版的，中文，中文，我还以为好的书籍都是英文的呢，哈哈~", "  @", " 我这边测试下载解压都没有问题啊", "谢了", "我只想说你恢复关键词明明是： V 友，\r", "谢谢分享~", "百度网盘已经失效.", " 不知道为什么之前看的时候失效了再点一次就没毛病..我的锅"]},
{"content": ["<div class=\"topic_content\">是我大电信被黑了吗？</div>"], "reply": "24", "tittle": "chrome, firefox 都报 shouji.189.cn 有恶意软件", "comment": ["chrome 没报！", "你的电脑中毒了，以前遇到过！", "换了电信线路，换了 DNS 从阿里到 114 ，就好了，难道是移动劫持了？", "好吧，先杀一把毒", " 有报。。\r", " ", " 没有。电信", " 有可能劫持", " ", "可能是包含了跨站脚本", "    \r", "\r", "没报", "联通没报", "是不是就浙江电信报了？四川电信没问题。", " 好像是， nj 没有", "电信， chrome 没报", "上海电信 没报", "电信也没报， chrome", "有病毒也可以拿 chrome 上，世界上有 chrome 0day 的没几个", " 我觉得更可能是谷歌安全浏览被墙...", "没事，一般国内巨头也喜欢搞搞拦截，也该试试被拦截是啥感觉了。", "dns 被投毒了？ 或是被中间人了？", "广州电信没报", "部分地区被劫持了，注入了网站安全详情上面提到的那几个网址下的非法 js", "北京联通没有报……\r", "\r", "ps. 重定向不是因为被劫持么？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"http://coolshell.cn/articles/17200.html\" rel=\"nofollow\">http://coolshell.cn/articles/17200.html</a></p>\n</div></div>"], "reply": "1", "tittle": "最近在看陈皓的关于 Docker 相关的博客，写的很透彻", "comment": ["嗯,加 pocket,回家看"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><ul>\n<li>传送门：<a href=\"https://zhuanlan.zhihu.com/p/23265155?refer=dreawer\" rel=\"nofollow\">怎么学 JavaScript ？</a></li>\n<li>作者：老姚</li>\n</ul>\n<hr>\n<p>鉴于时不时，有同学私信问我（<em>老姚，下同</em>）怎么学前端的问题。这里统一回复一下，如下次再遇到问我此问题同学，就直接把本文链接地址发给你了。</p>\n<p>首先说句题外话。关于有人管我叫大神的事情。个人感觉这跟你买东西时，人家管你叫帅哥一样，你答应与否都无妨。</p>\n<p>正题开始，“前端怎么学”应该因人而异，别人的方法未必适合自己。就说说我的学习方法吧：我把大部分时间放在学习 js 上了。因为这个 js 的学习曲线，先平后陡。项目实践和练习啥的，我不说了，主要说下工作之外的时间利用问题。我是怎么学的呢，<strong>看书，分析源码</strong>。个人这几天统计了一下，前端书籍目前看了 50 多本吧，大部分都是 js 的。市面上的书基本，差不多都看过。</p>\n<ul>\n<li><strong>第一个问题是，看书有啥好处？</strong></li>\n</ul>\n<p><img alt=\"\" src=\"https://pic3.zhimg.com/v2-d699bef68bf06ad540f5a07b4abc805a_b.jpg\"></p>\n<p>好处应该是不言而明的，书看多了，基础会逐渐夯实起来。看多了，自己的判断力，自然就上来了。看别人的文章，就能很快判断出，对方每块儿讲得对不对，哪块儿又是自己不清楚的，模棱两可的。当然也为看源码，分析源码提供了基础。</p>\n<p><strong>10 本书读 2 遍的好处，应该大于一本书读 20 遍</strong>。 10 本书的交集，那就是基础知识的核心，而并集那就是所有的知识。好书当然要多读，反复读。但是只读一本是不行的。因为每本书的侧重点都不一样。从不同的侧面，去理解一个知识点，是很有意义的。</p>\n<p>所以特别佩服印度人，他跟你讲英文，你一个词语没听懂，他会蹦出 n 个同一意思的单词，你听懂一个，就 ok 了。看书也是这样的，某一块讲得不透彻，不用担心，其他书籍可以帮助你来了解。</p>\n<ul>\n<li><strong>第二个问题是，书籍推荐。</strong></li>\n</ul>\n<p><img alt=\"\" src=\"https://pic3.zhimg.com/v2-f77a6dc99d23ba59acad059276d444de_b.jpg\"></p>\n<p>个人觉得不错的，没事可以翻翻的。书籍如下：</p>\n<ul>\n<li>\n<p><strong>《 javascript 面向对象编程指南》</strong>，风格轻松易懂，比较适合初学者，原型那块儿讲得透彻， 12 种继承方式呢。</p>\n</li>\n<li>\n<p><strong>《 js 权威指南》、《 js 高级程序设计》</strong>，这两本书经典是经典，但是太厚，适合把其中任意一章都当成一本书来读。洋洋洒洒，很难一口气看完。比较适合当做参考书。</p>\n</li>\n<li>\n<p><strong>《你不知道的 javascript 》</strong>狙击 js 核心细节，闭包、原型、 this 讲得都还清楚。目前《中册》也出了，还在看。</p>\n</li>\n<li>\n<p><strong>《 js 设计模式与开发实践》</strong>js 设计模式也是要学的，此书把 js 的设计模式讲得非常清晰，一点不晦涩，看起来没多少难度。</p>\n</li>\n<li>\n<p><strong>《正则指引》</strong>，分析源码时，如果正则表达式不懂，没法进行下去的。此书相对来说讲得比较清晰。</p>\n</li>\n<li>\n<p><strong>《基于 MVC 的 JavaScript Web 富应用开发》</strong>，看完后，基本能写出自己的 mvc 框架了。是本好书。</p>\n</li>\n<li>\n<p><strong>《 javascript 函数式编程》</strong>， js 是一门函数式语言，此书是函数式编程一个入门，函数是一等公民那是非常重要的。</p>\n</li>\n<li>\n<p><strong>《 js 忍者秘籍》</strong>， jq 作者写的，没有传说中的那么难读，话说就算你看完并理解所有知识点，也不会达到世界高手级别的。因为你还没有做到随心所欲。</p>\n</li>\n<li>\n<p><strong>《 javascript 框架设计》</strong>，如果初看此书，会觉得此书有罗列代码之嫌。在我看来，此书讲究的是框架的全局观。以上书籍是我认为是成就高手之路上必须看的，也需要反复看。\ncss 相关的书籍，说实话我看得比较少，总共有六七本吧。有两本必须推荐一下：</p>\n</li>\n<li>\n<p><strong>《 css 权威指南》</strong>， css 基础知识点那是讲得非常清楚的。什么层叠优先级、 line-height 啥的。不是随便一本书都敢叫“权威指南”的。</p>\n</li>\n<li>\n<p><strong>《 css 揭秘》</strong>，此书我也是不断的看，此书才不屑于全面讲 css3 各属性呢。 css 规范文档能讲的，它只会讲你最不在意的。此书解决的 47 问题，解决思路和解决方案同等重要，很有启发性。以上各书你都可以不买，至少买本此书吧。</p>\n</li>\n<li>\n<p><strong>第三个问题，怎么看。</strong></p>\n</li>\n</ul>\n<p><img alt=\"\" src=\"https://pic2.zhimg.com/v2-ae7d5152f31b0fa012cea9eaf785b8d9_b.jpg\"></p>\n<p>想必很多同学，都想看书，但是很难看下去。文字部分相对来说还能看看，一遇到代码，头皮就发麻了。此问题一开始时我也遇到的。</p>\n<p>说一个学习理论。比如说学英语，有个开水理论。词汇量必须达到 6000 才行，如果没达到，英文水平不会上去的，这跟烧开水一样，没事烧烧，放着凉凉，从来没烧到 100 度，那么此水是永远不能喝的。一旦煮沸过，就可以随时喝了。</p>\n<p>20 本书你看不下去，说明什么呢？<strong>任何一本书，你都没看完过</strong>。熟悉的，永远只是前三章。别笑，我原先也是这样的。</p>\n<p>那么现在的问题是，怎么把一本书看完呢？<strong>很简单，敲</strong>。《基于 MVC 的 JavaScript Web 富应用开发》这本书我看时，就是这样，终于有一天，我下定决心要把此书从头到尾敲一遍。文字加代码都敲，然后就一章一章得看完了。代码敲一遍后，你会发现，没之前看起来的那么难。</p>\n<p>如果你属于一看书就犯困那种同学。<strong>强烈建议你把《 javascript 面向对象编程指南》此书从头到尾敲一遍</strong>。坚持看完一本书后，信心就上来了。先保证看完一本再说,看完 3 本后，基本应该能做到几天就能看一本了。万事开头难，加油吧。</p>\n<ul>\n<li><strong>第四个问题，看书的层次问题。</strong></li>\n</ul>\n<p><img alt=\"\" src=\"https://pic4.zhimg.com/v2-b60001c313766ff9b1fa9201351ba9bf_b.jpg\"></p>\n<p>书看完后，要自己总结，要与其他书籍对比看。有同学同时对比着看《权威指南》和《高设》来的。随便拿出个知识点，你都能闭着眼睛说得头头是道，说明水平够了。</p>\n<p>下一块就是<strong>源码的学习</strong>了。看框架源码之前，想说一件事情： dom 的 api 不懂，没问题，你可以百度。</p>\n<p>但是正则一定要先研究研究，不然大多数人去尝试分析源码时，遇到的挫折都在于此。</p>\n<p><strong>怎么去阅读源码呢？敲，照着敲。</strong></p>\n<p>有哪些代码值得去敲呢？优秀框架或者库的源码都值得你去敲。但是拿 jq 来敲，来入门，那不行的。原因：太他么长了。八九千行呢！！</p>\n<p>个人觉得<strong>underscore.js</strong>库是不错的第一个选择。原因都是工具方法，敲完以后自己的水平应该略有小成吧。其实有一些 api 的实现，你要把它当成 getElementById 一样，深深的印在脑海里。比如 extend 方法，必须张口就来。敲完 underscore 库后，可以考虑去看看《 javascript 函数式编程》这本书了。</p>\n<p>jq 的源码不好敲。那么<strong>zepto</strong>的源码比较少 1800 多行，敲一天应该敲完了。敲几遍后，把所有不懂的地方，都百度清楚，然后就可以写自己的类 jq 的库了。然后就可以作为一项技能写进自己的简历里。比如“创建过自己的 jquery 库”。当然敲的过程，还能帮助自己对 jq 的 api 认识。</p>\n<p>然后是<strong>backbone.js</strong>，因为此框架是以类 jq 和 underscore 为基础的 mvc 框架。代码也没多少行。敲吧。 spine.js 与 backbone 类似。可以在敲其之前，先看看那本《基于 MVC 的 JavaScript Web 富应用开发》。希望你的简历可以添加这么一笔，“创建过自己的 mvc 框架”。</p>\n<p>其他的，我也敲过一些。包括<strong>jq.validate.js</strong>，包括一些插件。如果你愿意的话， bootstrap 你可以去敲敲啊。源码挺多的，可以按插件逐个来敲。分析明白了，轮播、分页、下拉框等等的插件那还不是分分钟随手就写一个了。最起码看看人家 api 接口是怎么设计的也是极好的。话说个人在阅读其 css 代码中，也学到了不少东西。说到插件，有两个必须提提，一个是表格插件，一个是树。都敲完，简历里可以这么写上，“创建过自己的 UI 框架”。</p>\n<p>当然了，你也可以敲你喜欢的框架代码，重要的是明白其<strong>实现原理</strong>，最好理解其为啥那么设计，如果对设计模式比较熟悉的话，会经常发现原来是这么回事。</p>\n<p>照着敲只是分析源码的入门，用途也是为了学习，最后能用在自己的项目中，那是才是正道。就算没啥用，也是打发时间的好方式，比看电视剧强多了。我闲着无聊时，就背着敲 underscore 源码。最后说句，如果你简历上能如期写上那几句话后，必须是大神。加油吧。</p>\n<ul>\n<li><strong>后记</strong></li>\n</ul>\n<p>写本文的最初目的，正如文章开头说的那样，方便自己回复大家的提问。本站的任何一篇分享学习经验的文章，基本都会引起共鸣，这确实是一个值得讨论的话题。这里再说说几个事情。</p>\n<ul>\n<li><strong>有人问我前端工作经验事情。</strong></li>\n</ul>\n<p>没几年。三年多。</p>\n<ul>\n<li><strong>初学者或新手（ beginner ）怎么办？</strong></li>\n</ul>\n<p>看书和分析源码是重要的提高方式，但不适合新手。新手需要的是能快速的入门和入行，能快速的上手工作。一种快捷的学习方式就是看视频。正如有的同学说得那样，知道有哪些东西，怎么用就可以了。</p>\n<p>看视频是有好处的，首先它是一种被动学习方式。我最开始的入门也是看视频来的，只需要看就行了。一遍没懂，再放一遍，我基本上是 1.5 倍数去看的。</p>\n<p>而读书是一种主动方式，需要自己一页一页翻。需要自己主动的去理解。而很多东西，也许只是视频老师一句话，就能突出的重点，需要我们自己去解读。还有另一件事情是，比如发现自己某个知识点不太清楚，可以单独去百度。比如 this ，文章很多的。这种学习方式也是快速掌握知识点的好办法。</p>\n<p>书籍需要技术评审，那么看文章一定要看看评论。不过视频就不好说了，视频一般都不会讲得太深入，偶尔也有讲错的。当年我也曾被一些视频误导过，建议找不错的视频看看。各大网站培训机构的免费视频挺多的。</p>\n<ul>\n<li><strong>看书和分析源码的时机。</strong></li>\n</ul>\n<p>但已经工作一年半载时，正是提高的好时候，此时可以去看书了。全面系统的梳理知识点，扫清自己的盲区。如果只是靠项目经验是不够的，通过项目来学习，那肯定是必须的，工作本身就是一个学习的过程。</p>\n<p>但是工作三年不看书的话，学又能学到多少呢？更何况每个项目都很类似，一直处在舒适区，那真就是 5 年经验重复第一年的了。所以我不认同这句话：面试时强调自己的学习能力是工作能力不强的表现。 3 年经验的水平，完全有可能超过 5 年的。</p>\n<ul>\n<li><strong>没有时间去学习？</strong></li>\n</ul>\n<p>如果你还没毕业，就已经天天在本站混了，其实你领先了一大步。都是混过大学的，天天充斥着 lol 和电视剧的陪伴，我只想说进入社会是要还的。最可怕的是什么呢？该还、还不还（这几个字别念错了）。时间是有的，就看你愿意付出不。下班后学习，周末学习，节假日别人玩的时候，在家敲代码，这样才能领先别人。</p>\n<ul>\n<li><strong>兴趣问题？</strong></li>\n</ul>\n<p>兴趣和擅长是一个良性迭代循环。你擅长某件事情，就会越喜欢它，越喜欢，就越愿意花时间，进而越擅长。此道理都懂，只是缺乏一个 trigger 。</p>\n<p>如果你喜欢玩游戏的话，其实你可能非常适合做前端。玩游戏就是一个反馈机制，前端工作的反馈，相对其他工作来说也是非常及时的。代码一改，网页一刷，就看到效果了。擅长、优越感、成就感通常都是连在一起的。每看完一本书，我都觉得很有成就感。每敲完一个库，也有成就感。</p>\n<p>以上纯属一家之言，每个人的学习习惯、方式、态度都不一样。先端正态度、找到自己的学习方法，进而养成坚持下去的习惯。最后说一句，你我共勉：只要你走在正确的道路上，不管、走得多慢，都是前进！</p>\n<p>收工。</p>\n<p><img alt=\"\" src=\"https://pic3.zhimg.com/v2-2fafd19aa7b1cc44cd58f2bd20c68e0e_r.jpg\"></p>\n<p>不好意思，不小心打开了前置摄像头！</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "怎么学 JavaScript？", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"http://blog.brucefeng.info/post/fix-online-accident\" rel=\"nofollow\">线上故障处理</a></p>\n<p>之前团队内部的分享。</p>\n</div></div>"], "reply": "1", "tittle": "分享——线上故障处理", "comment": ["嗯、步骤差不多。"]},
{"content": ["<div class=\"topic_content\">环境都配置好， localhost 访问 web 服务提示 503 ，查看各种错误日志只有在 error.log 中看到了下面这一行：\r<br>[Thu Dec 15 12:49:31.620859 2016] [ssl:warn] [pid 3128:tid 436] AH01897: Init: Oops, you want to request client authentication, but no CAs are known for verification!?  [Hint: SSLCACertificate*]\r<br>\r<br>看样子是我没有配置根证书？\r<br>我已配置的证书有：\r<br>SSLCertificateFile\r<br>SSLCertificateKeyFile\r<br>SSLCertificateChainFile\r<br>没有配置的：\r<br>SSLCACertificateFile\r<br>\r<br>可我证书从阿里云申请的，由 Symantec 颁发，下载的证书包里也没有 CACert ，怎么办？</div>"], "reply": "2", "tittle": "求助 Apache SSL 错误问题", "comment": ["看上去你是启用了校验客户端证书的功能。", "关掉 SSLVerifyClient"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://lang-php.com\" rel=\"nofollow\">https://lang-php.com</a></p>\n<p>如何？\n案例？</p>\n</div></div>"], "reply": "1", "tittle": "（ lang-php） PHP 多国语框架 v5.0 哪位兄弟用过？", "comment": ["实现看起来很麻烦，为啥不用流行框架下的 i18n 组件？加一个 IP Geo 识别就行了；求简单默认中文或英语，提供一个菜单选语言即可。"]},
{"content": ["<div class=\"topic_content\">和这破事儿逗逼了三天，试过各种办法，包括而不限于 onpopstate/onpageshow/ onload ，也试过本地数据缓存读写，还用过 AJAX 更新，都可耻地失败了——很神奇的是，在 Andorid 和微信自家的模拟器上都有效果，唯独在 iOS 的浏览器上失败。\r<br>\r<br>我想要的很简单，就是当 Javascript 调用 history.back() 或者 history.go(-1) 时，微信浏览器可以自动刷新前面调用过的历史页面。而在 iOS 的微信上，唯独 location=''  location.href='' history.go(0) 这几句就是死活无效。\r<br>\r<br>最后被逼无赖，解决方案还是要靠 URL 上的随机数，也就是在当前打开的页面添加随机数：\r<br>\r<br>var rnumber = Math.floor(Math.random()*1000)\r<br>history.replaceState({mod: rnumber}, 'Title', '?mod='+rnumber);\r<br>\r<br>然后下一个页面调用 history.back() 回来的时候，这个代码会生成新的 URL ，从而强制微信判断为不同的页面，达到强制刷新的目的。\r<br>\r<br>完成这个技术 hack 的目标是，在 Web page （纯页面，非 Web app ）的体系内，保持友好的「返回」体验，否则在页面上填写一个表单，点击提交以后，点击「返回」会返回填写表单的界面。虽然在逻辑上这里也没错，但是现在的体验都在向 APP 靠拢，故有此一折腾。。。\r<br>\r<br>\r<br>细节描述：\r<br>1 、在当前 view 添加随机值，可以动态判断，仅对编辑者有效：\r<br>var rnumber = Math.floor(Math.random()*1000)\r<br>history.replaceState({mod: rnumber}, 'Title', '?mod='+rnumber);\r<br>\r<br>2 、用户点击进入编辑页面（无变化）\r<br>\r<br>3 、在 POST 后的编辑页面输出\r<br>history.go(-2)\r<br>将浏览历史回退\r<br>\r<br>4 、前述的第一个页面会因为 javascript 的原因生成新的随机 URL ，导致微信浏览器识别为新的资源而强制刷新，从而加载编辑后的新内容。\r<br>\r<br>5 、此时用户点击左上角「返回」，会按原路返回「上一级」（而不是 Web page 中的上一页概念）。\r<br>\r<br>此方案在我手边的环境里测试有效（但不能担保对所有特别是对安卓全阵营有效）。\r<br>网上没找到特别明确的解决方案，所以这里特别记录分享一下，也许会对其他朋友有用。</div>", "<div class=\"topic_content\">我更新一下。。。发现随机数会导致分享 SDK 的签名失效（一脸懵逼）</div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>这是35天后的一个更新（第一个 APPEND 是昨天，这是第二个）</p>\n<p>现在我去掉了随机数，因为必须保证微信分享 SDK 验证过关，而我不想在本地 JS 做校验（其实是懒得改/也没有必要每次刷新都做一次）。\n我现在的做法：</p>\n<p>1、统一跳转到一个 backstep.html 的模板页面\n2、backstep 写入本地 localStorage，值为希望回退的步数（比如2或者3）\n3、然后通过 location.replace 将一个目标页面刷新：</p>\n<p>比如：</p>\n<pre><code>localStorage.setItem(\"back2steps\", \"{{backsteps|default(2)}}\");\nlocation.replace(\"{{url}}\")\n</code></pre>\n<p>4、在新的页面，读取 localStorage 并且将其重置为空\n5、如果读取到 localStorage 数字，那么将 history 调回 N 步，这个时候因为此页面已经在当前刷新过了，所以看上去就是刷新过的。</p>\n<p>例如：</p>\n<pre><code>window.onpageshow = function(){\n\tdetectBackStes = parseInt(localStorage.getItem(\"back2steps\"));\n\tif(detectBackStes&gt;0){\n\t\tlocalStorage.setItem(\"back2steps\", \"\");\n\t\twindow.scrollTo(0,1)\n\t\thistory.go(-detectBackStes);\n\t}\n}\n</code></pre>\n<p>以上，非常脏的做法，用户可能会有轻微的闪烁感（如果页面很轻则可能感觉不出来）。\n但至少实现了我现在想要的部分目标。</p>\n<p>我还是应该实际些。。。考虑去开 VUEJS 技能点 T_T</p>\n</div></div>"], "reply": "9", "tittle": "微信浏览器开发，后退时强制刷新的解决方案", "comment": ["之前也被这问题困扰了一整天，最后不得不以一个特别变态的方法实现:用 js 拦截所有 a 跳转，并复写 window.location 。如果页面试图跳转，就往 localStorage 里记录一下，再主动去跳转。然后用定时循环不断检查 localStorage 。\r", "写回复的时候突然又想到一个方法，页面到后台后， setTimeout 会被暂停，而微信的页面只能现实一个窗口，所以针对其他多窗口的浏览器，页面不在活动页面时 setTimeout 优化不会发生在微信上。这一点也可以用来 hack 一下。", "同加过随机数", "依稀记得是 200 from cache 而不是 304", "浏览器有一个机制叫做 Back-Forward Cache ： ", "\r", "不知道是否有帮助。", "按照楼主的方案，试了下，没成功，返回之后页面没强制刷新，能看到 url 上退回去的时候随机数变了。\r", "\r", "怎么破，就是想在使用手机的后退按钮返回时，需要强制刷新页面。否则页面是空白的。", " 什么系统？什么浏览器？微信版本号？手机的后退按钮要比程序回退应该要简单些，你测试一下 onpageshow 部分？", "安卓 6.0 微信 6.3.32 ， 浏览器不知道怎么看", "我这边是在微信中嵌入了一个 web 页面，中间是 ajax 加载了一些数据，现在后退了， ajax 那部分不响应，主要是这个问题，试过 ajax + 时间戳， cache 设置为 false 都不管用。手动刷新一下就可以。在微信的模拟器中也是这样。", "嗯，我再看看"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>转自： <a href=\"http://blog.xcatliu.com/2016/12/14/happy-birthday-26/\" rel=\"nofollow\">http://blog.xcatliu.com/2016/12/14/happy-birthday-26/</a></p>\n<hr>\n<p>今天是我 26 岁的生日， Google 送给我了一个 doodle ：</p>\n<p><img alt=\"Google user birthday\" src=\"http://blog.xcatliu.com/assets/happy-birthday-26/google-user-birthday.gif\"></p>\n<p>年终将至，工作变得繁忙起来。</p>\n<p>总结还是留到跨年的时候再写吧。</p>\n<p>最近比较浮躁，希望自己将来能够脚踏实地的进步，厚积而薄发。</p>\n<p>加油！</p>\n</div></div>", "<div class=\"topic_content\">感谢大家的祝福！</div>"], "reply": "53", "tittle": "今天我的 Google doodle 有点不一样", "comment": ["不错不错", "生快～", "生快🎂", "生日快乐， Google 去年给我发的生日快乐 doodle ，我都截图留着", "举高高", "日乐", " 人家 26 了还举高高¯\\_(ツ)_/¯", " 生日快乐", "我生日那天，推特给我一个全屏的彩色气球动画。\r", "\r", "外国都好这一套，当时我感到惊喜。", "生快哦～", "生快🎂", "生日快乐🎂", "生日快乐~", "谢谢大家~", "生快！", "生快，第一次知道 ", " ", "农历生日，然后就并没有什么用了", " 2333 同农历生日", "生快 ~~", "生日快乐🎂", "才 26 啊   好年轻", "支付宝  也会变界面，为什么不说支付宝？是不是  google 逼格高些？", "真是年轻啊，生日快乐～", "生快啊，哈哈哈，都 26 了，马上就 30 了。", "年轻真好.", " 没注意到支付宝😂", "生快", " @", " 26 还年轻啊。。。感觉已经不如很多晚辈了😰", "我快 18 了，祝你生日快乐！", "生快，希望 26 岁也能达到你的水平，好难。", "生日快乐~🎂", "举高高", "Happy Birthday", "生日快乐，重要的是身体得健康～", "HB", " 老实说我自认为也没有多高的水平。\r", "其实重要的不是和别人比较，而是自身持续的积累和进步吧。", "生快～\r", "农历生日，每年只有 qq 和 qq 空间能准时送上生日快乐～", "dalao 生快！", "生快🎂", "生日快乐!", "卤煮不知道的话我告诉你吧。\r", "如果你的手机装的有 Google 搜索，搜索的时候，可以看到这个同样的 doodle ，然后对着手机吹气，可以把蜡烛吹灭。", "恭喜", "生日快来,祝晚上能爽 3 次!", " 不至于吧，会变的多了，都说还不得累死。", "生日快乐～", " 真的吗？可惜，生日已经过了，只能等明年了 😭", " 已经不是年轻的时候了 😂", "每次生日都是腾讯啊、网易啊、 XX 银行给我生日祝福~单身狗的生日你不懂~不过会接到妈妈的电话，让我吃点儿好的，身在外地的我顿时眼睛进了沙~", "生日快乐 :)", "生日快乐", "!生日快乐!回头也看看", "生快~", "生快\r", "前几天我的也是这样的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h2>前言</h2>\n<p>设计模式是面向对象的最佳实践</p>\n<h2>实战</h2>\n<h3>PHP 实战创建型模式</h3>\n<ul>\n<li><a href=\"https://github.com/TIGERB/easy-tips/blob/master/singleton/test.php\" rel=\"nofollow\">单例模式</a></li>\n<li><a href=\"https://github.com/TIGERB/easy-tips/blob/master/factory/test.php\" rel=\"nofollow\">工厂模式</a></li>\n<li><a href=\"https://github.com/TIGERB/easy-tips/blob/master/factoryAbstract/test.php\" rel=\"nofollow\">抽象工厂模式</a></li>\n<li><a href=\"https://github.com/TIGERB/easy-tips/blob/master/prototype/test.php\" rel=\"nofollow\">原型模式</a></li>\n<li><a href=\"https://github.com/TIGERB/easy-tips/blob/master/builder/test.php\" rel=\"nofollow\">建造者模式</a></li>\n</ul>\n<h3>PHP 实战结构型模式</h3>\n<ul>\n<li><a href=\"https://github.com/TIGERB/easy-tips/blob/master/bridge/test.php\" rel=\"nofollow\">桥接模式</a></li>\n<li><a href=\"https://github.com/TIGERB/easy-tips/blob/master/flyweight/test.php\" rel=\"nofollow\">享元模式</a></li>\n<li><a href=\"https://github.com/TIGERB/easy-tips/blob/master/facade/test.php\" rel=\"nofollow\">外观模式</a></li>\n<li><a href=\"https://github.com/TIGERB/easy-tips/blob/master/adapter/test.php\" rel=\"nofollow\">适配器模式</a></li>\n<li><a href=\"https://github.com/TIGERB/easy-tips/blob/master/decorator/test.php\" rel=\"nofollow\">装饰器模式</a></li>\n<li><a href=\"https://github.com/TIGERB/easy-tips/blob/master/composite/test.php\" rel=\"nofollow\">组合模式</a></li>\n<li><a href=\"https://github.com/TIGERB/easy-tips/blob/master/proxy/test.php\" rel=\"nofollow\">代理模式</a></li>\n<li><a href=\"https://github.com/TIGERB/easy-tips/blob/master/filter/test.php\" rel=\"nofollow\">过滤器模式</a></li>\n</ul>\n<h3>PHP 实战行为型模式</h3>\n<ul>\n<li><a href=\"https://github.com/TIGERB/easy-tips/blob/master/template/test.php\" rel=\"nofollow\">模板模式</a></li>\n<li><a href=\"https://github.com/TIGERB/easy-tips/blob/master/strategy/test.php\" rel=\"nofollow\">策略模式</a></li>\n<li><a href=\"https://github.com/TIGERB/easy-tips/blob/master/state/test.php\" rel=\"nofollow\">状态模式</a></li>\n<li><a href=\"https://github.com/TIGERB/easy-tips/blob/master/observer/test.php\" rel=\"nofollow\">观察者模式</a></li>\n<li><a href=\"https://github.com/TIGERB/easy-tips/blob/master/chainOfResponsibility/test.php\" rel=\"nofollow\">责任链模式</a></li>\n<li><a href=\"https://github.com/TIGERB/easy-tips/blob/master/visitor/test.php\" rel=\"nofollow\">访问者模式</a></li>\n<li><a href=\"https://github.com/TIGERB/easy-tips/blob/master/interpreter/test.php\" rel=\"nofollow\">解释器模式</a></li>\n<li><a href=\"https://github.com/TIGERB/easy-tips/blob/master/memento/test.php\" rel=\"nofollow\">备忘录模式</a></li>\n<li><a href=\"https://github.com/TIGERB/easy-tips/blob/master/command/test.php\" rel=\"nofollow\">命令模式</a></li>\n<li><a href=\"https://github.com/TIGERB/easy-tips/blob/master/iterator/test.php\" rel=\"nofollow\">迭代器模式</a></li>\n<li><a href=\"https://github.com/TIGERB/easy-tips/blob/master/mediator/test.php\" rel=\"nofollow\">中介者器模式</a></li>\n<li><a href=\"https://github.com/TIGERB/easy-tips/blob/master/nullObject/test.php\" rel=\"nofollow\">空对象模式</a></li>\n</ul>\n<h2>测试用例</h2>\n<p>23 种设计模式都提供测试用例，使用方法：</p>\n<ul>\n<li>克隆项目： git clone git@github.com:TIGERB/easy-tips.git</li>\n<li>运行脚本： php [文件夹名称]/test.php ， 例如测试责任链模式： 运行 php chainOfResponsibility/test.php</li>\n</ul>\n<pre><code>运行结果：\n\n请求 5850c8354b298: 令牌校验通过～ \n请求 5850c8354b298: 请求频率校验通过～ \n请求 5850c8354b298: 参数校验通过～ \n请求 5850c8354b298: 签名校验通过～ \n请求 5850c8354b298: 权限校验通过～\n</code></pre>\n<h2>源码</h2>\n<blockquote>\n<p>源码地址 <a href=\"https://github.com/TIGERB/easy-tips\" rel=\"nofollow\">https://github.com/TIGERB/easy-tips</a></p>\n</blockquote>\n<p>这是我的一个关于《一个 php 技术栈后端猿的知识储备大纲》的知识总结，目前只完成了“设计模式”。</p>\n<h2>纠错</h2>\n<p>如果大家发现有什么理解有误的地方，可以发起一个 issue<a href=\"https://github.com/TIGERB/easy-tips/issues\" rel=\"nofollow\">点击纠错</a>,我会及时纠正， THX ～</p>\n</div></div>", "<div class=\"topic_content\"># 项目变更，路径失效，请直接访问&lt;https://github.com/TIGERB/easy-tips&gt;</div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><h1>项目变更，路径失效，请直接访问<a href=\"https://github.com/TIGERB/easy-tips\" rel=\"nofollow\">https://github.com/TIGERB/easy-tips</a></h1>\n</div></div>"], "reply": "39", "tittle": "PHP 完整实战 23 种设计模式", "comment": ["感谢楼主分享，期待算法部分~", " THX ，静待～", "非常感谢~~", "感谢楼主分享", "感谢 已关注楼主", "感谢！设计模式确实不懂", "非常感谢分享，楼主很棒！", "这玩意有个啥用？大部分都是花活！", "这几天 正在研究这些个模式....     \r", "\r", "我有种猜想... 算了,不猜想了,我怕挨骂...\r", "\r", "我这几天都是在    laravel 学院看的,  还有讲解和 测试用例!  建议各位看看,那个比较详细...\r", "\r", "那个大多我都看了下..  恩!  确实很多不懂,但是也有很多 我暂时确实用不着.....\r", "\r", "  发个链接吧....", "厉害了，楼主，感谢", "先 mark ~~", "厉害了   楼主", " THX~", " UW~", " THX~", " 是的，但是多看无裨，哈哈，毕竟前人总结的", " UW~", " UW~", " THX ～", " THX ～", "厉害了我的哥，已 Star ，感谢楼主。", "已经 start 能参与协作发 pr 么", " 当然可以~", "不错，学习一下", "手动点赞👍", "mark,谢谢分享。", "  UW 是什么意思？", " you are welcome 不客气的缩写 哈哈～", " THX~", "好人一生平安", " THX~", " 哈哈", "很感谢分享。", " UW ～", "  哈哈", "虽然看不懂 但是感觉很厉害的样子", "围观大触。。。向您学习～\r", "最近用 Swift 3 也实现了一遍设计模式，准备再总结一番，😄。\r", "\r", "丢个链接，希望楼主不要嫌弃～", " 互相学习， THX ～ 哈哈", " 哈哈～"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>今年在南京万和准备考一个 ocp 认证，课也上完了，准备考试，万和搞了一个考试群统计考试资料。\n考试资料包括我们的身份证正反面（首先这里我有一点做的不好，因为忙我没有打水印），然后他们做示例就把我的身份证正反面截图发群里了，没有打码，非常清晰。\n我打电话和群主联系。\n要求撤回信息，回复：超过 3 分钟了不能撤回；\n要求解散群重建，回复：不行，影响 60 人的考试，不能撤回。\n我说我情愿不考试了这信息也不愿意泄漏，回复我爱考不考。把我电话挂了</p>\n<p>然后另一个老师就联系我了，说身份证复印件自己都贷款 社保到处复印都没事，说把自己的身份证复印件给我都行，我说好，那你给我，回复：不好意思，今天换了一个包，没带。</p>\n<p>事后我咨询了律师，因为暂时还没造成损失，所以我不能告他们，只能投诉，现在我网上要求他们道歉，暂时还没回复我，我准备去现场找他们领导，如果领导不理准备报警。</p>\n<p>总计：身份证复印件一定要打水印。</p>\n</div></div>", "<div class=\"topic_content\">更新一下，首先感谢大家的支持，其实我平时也是多一事不如少一事的普通人，最怕麻烦，这次是真的搞火我了，通过此次时间我明白自己合理合法的权益一定要维护，即使事情再小，希望大家把我作为一个活生生的警醒吧。\r<br>\r<br>已经和他们领导沟通过处理了，领导表示让她们给我赔礼道歉并加上补偿，我接受道歉，经济和物品补偿没要，因为我并不是为了贪图什么才去反应问题的。事情虽然告一段落，可是事情造成什么影响就不知道了，毕竟东西已经发出去了，要保存的也保存了，不知道我挂失重办身份证能不能有一定的效果，希望有了解相关业务的同仁给予一定的帮助。\r<br>在此感谢大家的关注。</div>"], "reply": "32", "tittle": "培训机构泄漏身份证信息，如何合理维护自己的权益。", "comment": ["唉，帮不上忙，只是感叹一下\r", "\r", "总有人说我隐私洁癖，但\r", "这世界你当一回事，别人不当一回事\r", "而真的成为一回事的时候，你又无法举证两者的必然关联，只能哑巴吃黄莲\r", "\r", "没办法防住那个万一，但我还是坚持不要成为一万，少点损失总比损失无法控制要好", "报警，这种直接找到罪魁祸首当事人的，有毛怕的，先给他挂上号，给自己撸一条免责。顺便再把群里所有人 qq 联系方式一并丢给警察处理，给那个垃圾老师找点麻烦事儿！", "赞较真精神", "好多地方复印件打了水印就不要了", " 因为无法二次利用啊", "ocp 考试不需要身份证复印件啊，当初就不应该给。", "和微信那边联系联系可行么", "找个老外报警啊，肯定给你个满意答复", " 不要就不要，这种地方肯定会卖个人资料。\r", "\r", "我名下莫名其妙多了一个电信号码，已经投诉了。电信系统里根本查不到身份证信息。", " 老外没身份证呀。。。", "PS 去水印不是分分钟的事儿么……？", "这种事情，有的时候就得叫个真", "不嫌麻烦的话，直接挂失身份证（遗失证明），然后补办身份证，让这个人付钱。 钱倒是不多，就是费事儿。\r", "\r", "我非常赞同楼主关于保护自己身份证的行为。", "这种事情自己都不较真的话那就真的是...", "直接报警，泄露个人信息，搬法律。", "我也打算考 ocp …", "在国内你维护个球的权益，鸟都不鸟你。你要是报警或者上法院起诉，他们会说给你带来什么具体的实际损失？", "你们考虑过提供护照代替身份证么？", " 很多情况下，人家明确说了，中国大陆居民提交的唯一有效的证件是二代证，大陆不能提交护照啊。", " 护照也是公民证件，我能提交护照一定是提交护照的。", "唉.... 狗东 阿里  腾讯都有我的身份证复印件 高清无码的", "老外代报警   有这样的第三方服务", " 老外代报警是以朋友的名义报警主体还是 lz ，只是报案人是老外，性质的关键也是报案人而不是报案主体事件，因为歪果仁特殊优待会相对积极给处理", "支持楼主较真。\r", "不过如果他们较真的话就不小心给你把身份证泄漏出去，你损失更大。", "水印打得累，但人家想用分分钟 ps 掉。\r", "归根结底还是社会主义初级阶段法治社会的锅。", " 换身份证信息不会改的吧", " 后面的有效期会变的", " 照片也应该会改成近照吧？", " 银行会查身份证有效期，别的我真不知道....", " 挂失之后，照片、有效期都会变，在发新证时间之后用老身份证办的一切东西都可以免责的。", "总有些人喜欢用自己的不在意，要求别人说没关系。", "有时候就应该多较真一下"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>各位前辈，大家好 ~</p>\n<p>楼主在校大三，半年后该找工作了，最近在思考自己的职业规划，诚恳地希望能听到大家的建议，万分感谢！</p>\n<p>我觉得我想做的工作，是那种既能跟技术接触，也能和人接触的职业。为什么这么说呢？首先我对技术是感兴趣的，我写过一个教务系统的爬虫，做成 web ，期末期间每天少则几百，多则几千同学用我的程序，我非常有成就感，我很享受用编程解决实际问题的感觉。其次，我觉得我虽然不是特别擅长和人接触（比不上那些主要做学生工作的人），但也还可以！大学期间也做了不少学生工作（能办事）、主讲 C 语言讲座（能说）等。</p>\n<p>我上个暑假在一家互联网公司的技术部门实习，我发现自己并不是完全适应这种环境（感觉有些闷）。我希望我将来的工作是立足于技术，但也和人去打交道。因为我感觉自己不是一个坐得住的人，所以我希望能发挥出自己优势的组合。所以想请教一下大家，互联网公司里有哪些工种是符合我的这种描述的呢？</p>\n<p>我有听说过“技术支持工程师”，好像是负责售前售后咨询的？还有就是产品经理，似乎产品经理符合我的这种描述？</p>\n<p>谢谢各位菊苣</p>\n</div></div>"], "reply": "21", "tittle": "有哪些既和技术也和人打交道的工种？（职业规划求助）", "comment": ["产品经理确实挺符合的", "来港资公司吧，一份工资做几个工种～", "从技术着手，转型项目经理", "难道程序员不是既和技术也和人打交道的工种？🤔", "有技术背景的产品经理", "售前", "小公司因为人少, 分工也不明确, 所以技术才不怎么和别人沟通, 大公司应该来说不管什么岗位都要和其他成员沟通才能更好工作的, 感觉没必要把这当什么求职需求来讲 :D", "PM, FAE", " 非常感谢~ 可能我说的“与人沟通”更多的是指和客户吧~", " 为什么我感觉是小公司分工不明确的情况下，技术什么都要做，才要多和被人沟通呢。。", "在找的时候留意一点就可以了，的确可以学习到很多技术之外的东西。", "工程师在开发的过程中一样会参与很多的讨论，当然绝大部分都是和同事（熟人），可能楼主想要的是和陌生人打交道吧。", " 对，就是您这个意思。", "技术服务，技术支持", "PM ，技术总监，项目经理， CTO ， HelpDesk", "售后客服", "传统行业、工业行业的软件开发。你得经常和现场、业主、其他厂商打交道，要不你代码都不好写", "技术，人？ 这不冲突吧", "小公司任何岗位都需要,大公司楼上说的那些就是", "哈哈\r", "技术支持、售前售后工程师", "產品經理。。。"]},
{"content": ["<div class=\"topic_content\">1 、与应用通讯的服务端，支持 TLSv1.2 及以上版本的 https 协议；\r<br>2 、满足加密套件（ Ciphers ）要求支持完全正向保密（ Forward Secrecy ）技术；\r<br>3 、证书签名算法要求必须使用 SHA256 with RSA 或 SHA256 with ECC ；\r<br>签发一张 Symantec 或者 GeoTrust OV 及以上证书满足 iOS ATS 要求。</div>"], "reply": "1", "tittle": "苹果的 App Transport Security（ ATS）标准要求，看看你们是否能满足", "comment": ["数据来源是阿里云，关于里面的 OV 及以上证书这一条我找不到出处"]},
{"content": ["<div class=\"topic_content\">不想让自己的成果被人快速窃取，常规的代码保护方式就是代码压缩、混淆变量名和函数名。针对这种加密，格式化+变量名逐个还原，也能逐步的解密代码。\r<br>\r<br>我的思路是：通过自动化工具，在代码中故意加入各种干扰代码，即：一本正经的胡说八道。这样一来，即使格式化后，也会因为颇为庞大的代码量和莫名其妙的代码而极大降低了代码的可阅读和可维护性。\r<br>\r<br>当然也有局限性，真正对外的项目肯定不能这么干。只适用于公司内部的一些自研项目。通过这种方式，以避免拿来主意的同事拿着你的代码随便改改就去邀功。</div>"], "reply": "36", "tittle": "js 代码混淆的另一种思路", "comment": ["干扰代码一样可以去掉的", "哼哼,我写的 js 自带混淆,我自己都看不懂.", "倒是一个思路\r", "用力过猛的话会增加性能损耗和网络压力\r", "说回来如果只是防同事的话, 既然是同事他应该能拿到和你同等的代码权限才对啊, 这么防也防不住啊", " 厉害了， word 哥", " 哇，这都可以。 我孤陋寡闻了。", "其实，还不如学学 Google 的 No CAPTCHA ReCAPTCHA\r", "\r", "人家自己设计了一套语言和虚拟机，用来执行验证代码\r", "\r", "而验证代码是可以直接修改虚拟机当中的变量的\r", "\r", "等于说相当于，程序执行了一半，换了一套语言，接着解析执行。", "*修改虚拟机本身的变量\r", "\r", "**换成什么语言取决于之前程序执行的结果", "快速窃取的思路不是直接受控黑盒调用吗？为什么要解密代码？", " 没关系，我放到服务器上的代码就是“加工过的”，他拿到，也没啥用。\r", "\r", "自己最近在给一些内部项目做优化的时候，突然想到：我 tmd 是不是吃饱了撑的，优化个毛。 代码能跑通就行了。 \r", "我把代码理的这么顺，注释写这么清晰，又不给我加薪。 so ，我做他干什么呢？\r", "\r", "诚然，这么想，显得我非常狭隘和短见。然而，我还是控制不住自己的强迫症。", " \r", " \r", "大神们，你们说的太高深了，我不懂。\r", "我只略微懂点 js ，写点 node.js 项目。所以，我这个 topic 的思路也只是基于 js 代码哈。", " 用 shi 做蛋糕口味的参照物, 何必自寻苦恼?", "其实我觉得...那主要是为了压缩不是混淆", "用 clojure, scalajs 写\r", "然后编译+压缩下，\r", "基本作者自己都看不懂", "嗯，同意 @", " 的观点，干扰代码也能去掉，因为毕竟是「逻辑上没有意义的代码」，做语法分析很容易移除。如果真的要加大混淆力度的话，干脆不要写 JS ——用别的语言写，然后编译到 JS ，这样应该比手动设计干扰内容更高效。当然，理论上 JS 就没有所谓的源码加密……", "很多程序员写出来的代码自带混淆的", "你最终要让浏览器来执行的， 浏览器上能正常执行的代码，都防不住真正想拿你代码的人；\r", "你听说过有哪个前端框架或者类库是封闭的吗？\r", "只要东西好用，即使不想开源，也\"被开源\"了，\r", "我感觉是，没必要那么倒腾。", "这技术已经有了，小程序开发工具源码后来的混淆就加了很多拉圾代码进去，只是比较初级，很容易识别。", "估计 LZ 最近被同事给恶心了，你这种方法，跑一下 coverage 基本上就没用了.....", "来来来，转换成风骚六进制。。。。。。。。。。\r", "\r", "[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]+(!![]+[])[+[]]+(![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]]+[+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]])[!+[]+!+[]+[+[]]])()", "不懂混淆的意义，每次解混淆就完了", "压缩后基本就不可读了", "你这种员工，直接开除就行了", "加壳么？ ", "加一个反义词库就行了", "大家那么忙，谁会在意的你 js 代码，当真的到达这个地步了，买一个专业工具吧。", "全都是脱了裤子放屁，\r", "\r", "如果代码有被偷的价值>反混淆成本，无论你怎么搞 都是没有意义的", "往里加东西的话体积不就大了么", "转化成颜文字 ", " +1 过两天...这是谁写的代码？", " 这个是怎么转化的？", " 这个东西叫 jsfuck ， ", " 一般来说反混淆成本太高，所以平常保护一下还是有意义的。（毕竟不是每个项目都那么有价值）", "你有值得别人借鉴的代码证明实力比别人强啊。一直被模仿，从未被超越。。怕啥。你防着的这些时间可能已经比别人进步更多了。", "虚拟机", "一般的业务代码没有被偷的价值，有价值的一般是某些算法代码，这些代码可以用能编译成二进制的语言来写；但是如果对方能够反编译+看懂你的算法代码，那也只能说他厉害了。然而有这个实力的为什么还要偷你的代码呢。。。。", "楼主的动机真是奇怪，居然是为了防同事。"]},
{"content": "", "reply": "15", "tittle": "有个需求 如何统计一个数据库内所有元素的个数 数据库从十几万到一二百万的都有 求解决思路", "comment": ["排个序 然后线性遍历一遍？感觉一两百万不是很大啊", "你什么什么数据呢？如果是 mysql 直接 select count 就可以了， mongodb 用 find().count()", "count()？", "感觉是在说一个数据库中有多个表，楼主想统计所有表的总行数", " 是这样的 我不知道这数据库里面有哪些数据 这是分词结果", " 但我不知道里面有多少相同的数据啊", " 就是统计数据库内所有元素有多少个 比如 1 有 10 个 2 有 100 个之类的", "估计所有人都没理解 LZ 在问啥", "group by ？\r", "什么叫“元素”，你需要给出定义。", " 就是查看数据库里面某个 collection 里面的任意键值在该表中出现了多少次 =.=", " 元素=数据库一个 collection 里面的任意一个键值 group By 正在看", "说句实话完全没看懂楼主的问题.....", "还以为是统计数据库有多少张表，每张表有多少个字段呢。\r", "楼主这描述也太～", "你去做产品肯定会被程序员打死。统计数据库内所有元素，数据库那么多信息你指的是统计什么呢？", "mysql 十万百万建个索引不算多～"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我先来三个 haha ～</p>\n<ul>\n<li>混合：多语言混合开发，发挥不同语言的优势，各擅其能</li>\n<li>轻量：简单实用，归繁至简</li>\n<li>组件：复用</li>\n</ul>\n</div></div>"], "reply": "2", "tittle": "当今和未来软件技术发展的关键词～", "comment": ["你说得对", " 哈哈"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>受到《临高启明》一书的启发，我觉得群穿回计算机科学蓬勃爆发发展的起点，一同重造，加速历史，将会是一段令人激动的旅程。</p>\n<p>时间，我觉得不妨定在 1974 年 10 月 24 日。 1974 年 10 月 17 日是 D Richie 和 K Thompson 第一次从 Bell Labs 公开发布 Unix 。</p>\n<p>地点可以自定，实际上群穿的同志们不一定要在一个地方。只要相互知道其他人的存在，有可靠的方式交流就可以了（电报？无线电？）。</p>\n<p>临高启明穿回三百年，致力于重建现代文明，所以带回去了整整五百号人，世称五百废，五百宅。我们穿回三十年，目的只有一个，助推人类文明脱离蒙昧蛮荒的前信息时代的襁褓，让终产者，调整人，天网，脑后插管等伟大的世界线走入这个宇宙。依我看，十六个人就够了，史称十六使徒 XVI apóstolos 。</p>\n<p>欢迎大家踊跃报名，可以在本贴下回复自己的人物设定，比如人物家庭和教育背景，技术领域，性格，理想等等。也可以发布提议，情节，穿越设定，世界设定等等</p>\n</div></div>"], "reply": "57", "tittle": "同志们，是时候群穿回三十年前重造历史了！", "comment": ["坐等诸位改变世界。", "有请 V2 第一笔杆子 @", "穿回 74 年的中国肯定是在下乡种地不然就是被山呼万岁者抄家。。", "很显然只能回去一个人，如果 16 个的话，这帮人会因为争论发展哪种系统，哪种语言，哪种框架，哪种标准一直吵架到 2016 年。", " 请 steve jobs", "我叫王大锤，每天在几万平米的床上醒来，我好孤单。当我回到 30 年前的时候，我以为会改变历史，进而改变这个世界。\r", "万万没想到， 30 年后，我还是一无所成孤单地地在几万平米的床上醒来。\r", "因为我在北京买了一些地，盖了一些房……", "看到这个帖子的人，默默的点开了新的一局《文明》。", "穿回 74 年那纯粹是找死，你哪里人，干什么的，有介绍信吗, 什么，没有，你是台湾派来的特务吧，卒。", "没看过范队的电子生涯？\r", "\r", "然而造成工具已经是 2016 年，欢迎来到 2016 年。", "穿回去刚赶上严打流氓哦\r", "楼主一不小心弄个流氓罪那可不是玩的\r", "调戏", " 这是死循环啊。", "结果发现只有 Turbo C 还没有 google, 没有互联网, 代码不会写的啦........", "穿回 74 年有点辛苦，不如穿 94 吧，赶互联网的大潮", "首先确定要重造什么历史？", "  毛时代批斗，邓时代严打，还是蛤时代好啊", " 74 还行,先跑去香港干到 90 年,有些资本回来玩.截胡马云收购 ICQ,最后转房地产.直接 90 年回来,没钱也很难办", "我抄了所有的福彩、双色球等号码记录回到过去，结果发现还是一个都没中……", "哈哈哈，只会 JS 的前端分分钟失业。\r", "\r", "你懂汇编么？你懂计算机原理么？", "不如穿越到 90 年代，用 VB 写一个 OICQ\r", "\r", "或者穿越到 2009 年，屯积大量的比特币", "哎呀好像穿回去买房子啊。", "只会搬运工的 java 码畜，楼主你的要求太高端，实现不了。如果真穿了，我还是买买球赛、股票什么的算了。\r", "真有重生机会，不如先做个 v2 出来看你们喷。", "74 ，开玩笑，那时候还没改革开放，户口都是管控的，你怎么解释你的身份", "楼主有病，鉴定完毕。", "比如你现在 25 岁，你穿回去 74 年，在过到 2016 年，你算算你现在多少岁？ 42 年你能把人类的科技带到什么高度？", "首先你们需要一本《 21 天精通 c++》", "这么多人，没一个发现楼主算数错了吗？\r", "74 年是 40 多年前了。\r", "穿回 70 年代，你能干什么？当时国内一片混乱，何况经过文革大清洗，有几人好过。难道你穿越回去就能当根正苗红的红卫兵？\r", "没有合法身份，你粮食都买不到，当时还是统购统销，私人卖粮就是投机倒把罪。你卖粮还的拿粮油本和粮票。当时城市里还好些，粮食是定量供应的，至少不会被饿到，农村经历过 60 年代瞎折腾后， 70 年代初纯粹崩溃，，交完公粮后，由生产队分粮。当时很多地方农村，人均分粮不到城市 5 分之一，种粮的反而吃不饱。当然在农村总有办法。\r", "没身份，你饭都没得吃，难道你能去拉山头造反？\r", "\r", "你要是肉体穿越，回去最大可能就是被当间谍和敌特抓，当时地方监管可要比现在朝阳群众厉害多了。\r", "魂穿。。即使你成了红二代，，也得拜神，求着你爹站好队，不然更惨，想想习总他大姐当年文革不照样被搞死。或者你能像熙来一样大义灭亲，带头批斗那也行。\r", "即使是习总， 74 年还在当村长，直到他爹重新上位掌权后，才走上正轨的。\r", "\r", "总之 60 、 70 年代是建国后最黑暗的时代，，现在很多老年人都不愿意谈论哪个时代。我想你的长辈也是这样。现在你还想着穿越回 74 年？", "穿越，神穿到一万年以前也瞎想，流逝的过去无法回去，但我们能把握好现在", "穿越到一个没有 google 的年代…我还是搞点别的去吧。", "70 几年都还在用汇编和 C ，有点还在用打孔纸。\r", "你们确定没了万能的 nodejs 和强大的 ide 还会编程？", " 邓据说是因为刚放开，大家都不知道底线在哪里，社会风气很乱\r", "前几天还看到全球公审江蛤蛤……", "有意思，我选择做说客，不知道有没有这个角色", " 公审是轮子搞的吧？", " 对啊，轮子这么多年智商完全没有任何长进", " 不过倒是有蛮多国人借助“练轮子功被迫害”的理由，成功移民美国", " 我倒是觉得蛮亏的，如果在城镇里房价涨了肯定不少，而且一辈子不能回国否则吊销美国国籍", " 而且看他们还是蛮辛苦的，零下的温度举着牌子反华，下午就收摊。\r", "川普上台后要减钱，以后估计更难过。活该吧。", "1974+30=? 只有 27 楼看到？", "朋友，有网么？", "没有 stackoverflow 怎么编程？", "如果穿越的话，个人认为比较合适的年代是 85 年之后， 95 年之前。这个时间段有大多数现在需要的基础资源，但是超前的意识能有足够的回报。别的不多说吧，非典前屯点白醋屯点蒜，房地产大爆发时多屯点房，截胡马云，截胡王健林，如果可以就把国足从起点改下。\r", "虽然再往前几年跟着毛老大混几年接了毛老大的班做这些更方便，但是专业不符啊........", "所以，现在不是 2046 年吗？ \r", "\r", "\r", "\r", "顺便百度了一下“临高启明”，发现一个有趣的东西\r", "\r", "\r", " ", " 就算回国也未必能重新取得中国国籍，到时候成了无国籍的人，就更加麻烦了", " 理论上还是中国籍吧，户籍还在\r", "不过应该也不敢回来", " 中国不承认双国籍，也就是说，一旦取得他国国籍，则自动退出中国国籍。", "30 年前不是 86 年嘛，那会不是学潮兴起吗", "我只想存点钱，去买域名， ", " ， ", " ， ", " ， ", " ， ", " ， ", " ， ", " ，。。。。。难道不比敲代码来钱快？", " 很难。你买了 ", " ，可能他们两个就直接注册 ", " 了。别的也类似。要注意，这些域名本身是不值钱的，只有产品火了之后，他们才有了价值。", " 是啊。。不过可以多囤点拼音域名倒是真的，至少一辈子衣食无忧没问题了", " 拼音这个倒是值得考虑，相当于三十年前在北京买好房子。", "我要能穿越的话，干嘛要畅想过去，畅想现在就行了。", "我叫王二锤，我穿越回 1974 年 10 月 24 日，我的穿越点是一座 1974 年才存在的水泥墙，结果分子无法重组失败。\r", "\r", "我叫王三锤，我穿越回 1974 年 10 月 24 日，我的穿越点居然是 1974 年才存在的铁轨，我被火车撞飞。\r", "\r", "我叫王四锤，我穿越回 1974 年 10 月 24 日，这次我选择了一个 1974 就存在的开阔地，结果在到达途中，被 1985 年时间线上驶过一辆北京吉普撞残。\r", "\r", "我叫王五锤，我穿越回 1974 年 10 月 24 日，这次我选择在公海无人岛穿越......，\r", "\r", "我叫王六锤，我出生在这个岛上，从来不知道外面的世界，老爸说今天是公元 2016 年 12 约 16 日。", "楼主 改变世界带上我 我会 JAVA ^_^", "楼主 我要穿越回到 12 年前", "真希望人生能有一次读档的机会。", "先教会他们什么叫 char ，省得现在 Herb Sutter 还能炒得起 byte 的煋闻。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>前端菜鸟，想问下大数据系统（ Hadoop ， Spark ）的 web 监控页面的大致设计思路是什么，比如说网页展示与系统运行信息的交互机制？对于 C++的系统该用什么 Web Sever 比较合适</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "大数据系统（ Hadoop， Spark）的 web 监控页面的大致设计思路", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>自己技术和时间有限，稍微看了下石墨文档的更新网络请求。</p>\n<p>只检查了下 web 的网络。是在打开文档所在页面的时候创建了 websocket ，每个记录下来的动作都被实时发送到服务器，如果此时有另外的人在查看或者编辑此文档，这个动作会被下发到该客户端并更新文档。</p>\n<p>每个动作包含了该次修改的一个 uuid ，修改时间，文档内修改的地址(行数，列数？）， 修改的内容。</p>\n<p>其中最让我好奇，也不懂的地方是标记修改的地方的表示方法。</p>\n<p>比如在第一行连续缓慢输入 012 ，这个 websocket 连接会有三个 frame 发到服务器，其中标示修改位置和内容的为：</p>\n<p>Z:1&gt;1<em>0</em>1+1$0</p>\n<p>Z:2&gt;1=1<em>0</em>1+1$1</p>\n<p>Z:4&gt;1=2<em>0</em>1+1$2</p>\n<p>非常有趣的标记，似乎最后是修改的内容，前面是修改的位置，不过这个仅仅只是简单的测试，还有很多其他复杂操作的标记更复杂，这个标记方式，到底是怎么解析的~  ：）</p>\n<p>石墨文档的程序员们自己创造的还是有什么标准的方式吗？\n我好奇心实在重。</p>\n</div></div>"], "reply": "3", "tittle": "石墨文档 文本文档实时更新实现原理？", "comment": ["约定的标准,指令集", " 是类似 diff 这样的有公开的标准的设计还是石墨文档他们自己设计的一套标准呢？", "最近他们刚发了篇文章  "]},
{"content": ["<div class=\"topic_content\">如果仅仅我一个人，那么好说，我装上 gms 就行。\r<br>关键是别人用的，是很多个人，不可能每台手机都部署 gms 。\r<br>求推荐不依赖 Google play 的安卓双因素客户端 app</div>"], "reply": "19", "tittle": "没有 Google Play、GMS 的手机上的如何优雅的使用 Google authenticator?", "comment": ["谢邀\r", "authy", "同意楼上。自从 Google Authenticator 莫名其妙丢了我几个 tokens 之后就不敢碰了。换了 Authy 很好。", "微软也有个类似的", "LastPass Authenticator? 不过我不知道是不是需要 GMS", "这种验证码的生成算法是国际标准（ RFC6238 ） totp ，因此市面上有多到数不清的验证器应用。", "还有个开源的吧", "这个不只是谷歌可以用，我会说 1Password 里的“一次性密码”就是这玩意吗", "一直没装 gms 用啊……（直接装 apk", " 感谢，才知道这个，刚才已经全部转移到了 1P ，把 google 验证器给删了\r", "另外问下，暴雪和 steam 的验证可以转到 1P 里吗？现在都是用的专用 app", "难道 Google 身份验证器不是直接安装就能使用的么？并不需要 gms", "GMS 是啥", " 你试一下呗，反正我 outlook 、 dropbox 这些都能添加到 1P", " 不可以，暴雪的还好，通用 totp6 位，它前面算法一致，就是最后取 8 位， steam 的就完全不搭边了。你如果想弄出暴雪的 secret ，可以去我 github 找到工具。", " 不可以。\r", "我现在用的服务中，暴雪、 steam 、 Cloudflare 都是要用专属 app ，我很讨厌多装一个 app 所以就索性不开了", " 对的，而且用微软自家账号还可以登录时自动弹出通知提示确认~", " Sorry 误导了。用了 ", " 这个程序可以导出标准 otp 格式给 1Password 使用\r", "redhat 開源的 freeotp \r", "不支持導出！\r", "\r", "另外也有一個可以導入導出的 otp\r", "AuthenticatorPlus\r", "需要付費\r", "\r", "這兩個都不錯", "Authenticator 微软出品，免费", " \r", "\r", "\r", "你没看要求"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>office 365 ，写了一晚上的 ppt 保存的时候非要先上传到 onedrive ，结果上传到 onedrive 的时候崩了，保存失败，本地也没有备份，直接导致我一晚上的工作白做了。</p>\n<p>微软是对自己的服务有多自信啊，文件必须要先保存到云端才能本地，还不给本地备份，而且保存的时候你要等那个正在上载到 onedrive 的弹窗上传完才能关闭窗口。\n怎么就不能先保存到本地，然后你慢慢去上传到 onedrive 呢！！</p>\n<p>总之我现在恨死 onedrive 了， 而且这玩意在国内慢的要死导致我的两台设备上的 onenote 永远无法完成同步。</p>\n<p>我一晚上的工作成功啊，😱</p>\n</div></div>", "<div class=\"topic_content\">声明一下，我也是一直在 ctrl+s, 只是这文档默认选择先上传到 onedrive 然后才会保存的本地。然后我中途的保存等于说没有一次成功过。\r<br>崩了以后，试过恢复，每次都恢复失败。</div>", "<div class=\"topic_content\">感谢 V 友，已经找到了解决方案，那就是在 onedrive 设置里面去掉勾选 “ office 文件协作”，这样就会先保存到本地然后再上传到 onedrive 了。\r<br>虽然已经崩掉的东西还是找不回来了，不过起码以后可以不会再这样了。</div>"], "reply": "55", "tittle": "写了一晚上的 PPT 保存的时候崩了，微软是怎么想的，保存的时候必须先保存到 onedrive 然后才到本地，杀人的心都有了", "comment": ["同意，用微软的服务总给人一种“我要掉线了”的感觉。。。", "苹果的保存还挺好的", "现在的 office 365 没有自动保存吗？", "既然先上传的话应该就是先有的本地临时文件再上传的吧", "进设置看下，有自动保存，崩溃后重新进入当有恢复提示。", "你可以选择只保存在本地的……", "上次我也是，做了一下午的资料崩了没了\r", "恼了把 office 的自动保存改成了 1 分钟一次= =", "可以保存在本地然后用 onedrive 自动同步上传", "重要文档编写，我只信任在线 Google Docs 编辑", "Dropbox.", "你居然一晚上才保存一次？", "可以保存到本地啊。。", "没用过这产品，不过用 office 的时候，左手随时 CTRL+s", "现在已经被训练出了下意识 ctrl+s 的技能……", "LibreOffice 5.3 路过", "你居然一晚上才保存一次？  同惊讶~   怪自己咯~", "家庭版容易崩，企业版比较稳定。另外可以设置保存到本地，不经过 onedrive...", "多少年前，用 Word 做文档的年代，就是设定 5 分钟保存一次的，你这个一晚上，也太相信运气了。", "还没用上 office365", " +1", "我都是随手 ctl+S 。曾经和你一样，这种事就像成長，必须自己经历才能进步。 安慰一下楼主。下次注意", " 2333", "无论何种文件 建立文档之初就要保存一下 顺便确认保存位置，就算软件本身没有问题，难道不怕突然断电 机器死机吗 win98 时代以降 大多数人已经过于相信系统和机器了", "第一次用？明明可以选择保存到本地，这锅你和微软的二八分吧", "摸摸楼主\r", "我想起一个同事，没有保存就关闭文档，人家问他是否保存，他脑抽了点否...", "些东西时经常 Ctrl+S 是个好习惯。", " 这坑爹的输入法，写....", "我怎么总觉得 LZ 的文档路径是在 OneDrive 的目录中呢\r", "我做 PPT 的时候只有文档在 OneDrive 目录中的文件是这种情况\r", "所以我改文档都是先从 OneDrive 复制到桌面，改完确定无误了再覆盖回去。", " 自动保存也是先上传到 onedrive 啊。\r", " 恢复也失败\r", " 怎么设置，我现在只要保存就必定是先上传到 onedrive 然后才能保存到本地。\r", " 不是的，我一直在 ctrl+s ，但是那坑爹玩意只要你保存，他就往 onedrive 上传，然后谁知道并没有一次保存成功\r", " 麻烦告诉我一下，怎么先保存到本地，谢谢了。", " 是的，我的所有文档都在 onedrive 中，难不成是这个锅。但也应该是保存到本地再同步到 onedrive 才对呀。", "可以反馈一下，说不定会有 pm 跟进", " 似乎 Office 365 会识别 OneDrive 的目录，在 OneDrive 中的文件会使用那个“上载中心”保存。", "广州 E 家宽，上传 onedrive 可以满速", " 那我岂不是得先从 onedrive 里面复制出来，然后改，改完再复制进去。\r", "我的天哪", "不知道你的 onedrive 文件怎么设置的。\r", "我是设置了几个文件夹同步到电脑的，这些文件夹里面的文档不存在你说的问题，保存一下，关掉 word ，然后 onedrive 再同步，不担心网络问题。（ onedrive 设置里面， office 同步的勾我都没选）", "WPS 欢迎你", "楼主不适合用微软办公软件系列\r", "这么简单的一个东西，用不顺溜。", " 闻道有先后", "问下乐视客服要怎么做大型 PPT .", "\r", "也许楼主需要这个。既然不能痛痛快快访问 OneDrive ，所以只能稍微设置一下了吧。", " 谢谢，我最后一条 append 里面的解决方法也是可以的。", "难道不应该时不时的保存一下？", "v2 现在也跟知乎一样，政治正确不能喷微软了？", "同感 每次微软保存到 onedrive 都会有短暂未响应…", "凡是工作达到一定量的时候我都会 ctrl+a ctrl+c 然后才敢进行后续的操作。", "你对你自己的脸是有多自信啊，写了一晚上才保存一次……", " Ctrl+C 也是有概率失灵的，只是相对比较小而已。另外要是自己手贱 Ctrl+C 到其它地方就甩不了锅了。", "好吧一直 Ctrl+S 也抽……自觉另存为备份能破么。", " 另存为那也太累了，现在改了 onedrive 配置应该没什么问题了", "Google docs, 自带版本历史，不用保存。协同编辑也很好用，你的改动会实时同步到其他人那里。\r", "其实最爽的是，一个文档你在电脑上编辑时，随时可以切换到平板或者手机上继续编辑或 Review 。\r", "以前用 Office 的时候，退出的时候脑抽点了不保存的事我也干过...", " office 也是有这个功能的，协同编辑，只是 onedrive 不给力", "修改一下设置吧，默认保存到本地", " 至少用 Google docs 这么久了，从来没有什么地方要我自己去设置，也不用操心保存，只需要关注编辑就好了。想起以前用 Office 遇到的坑， Google docs 真是太省心了，但功能比 Office 少太多，有时候也不太方便。", "onenote 的同步简直是一个噩梦", " 我已经领教到了，而且更坑的是，同一台电脑上，桌面版和 UWP 版不共用一份数据，也就是说同一台电脑上的修改都需要 N 长时间的同步。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h1>.</h1>\n<p>先用标题把大家骗进来再说... ~</p>\n<h3>类似 markman 和 sketch-measure 的自动标注等功能是如何实现的呢 ?</h3>\n<p>Google 了半天搜到一点相关的技术实现的资料...\n只好求助万能的 V 友 ~</p>\n<h1>:D</h1>\n</div></div>"], "reply": "4", "tittle": "sketch-measure & 马克鳗 技术实现 ~", "comment": ["# :(", "两个原理可能不一样， sketch-measure 是利用图层的坐标信息（猜的），马克鳗是对比像素差异，找到骤变的相邻像素作为边界。", " ... 感谢解惑... :D"]},
{"content": ["<div class=\"topic_content\">偶然看到个网站的背景用的这种效果：\r<br>鼠标滑动会创造多边形，太有趣了！\r<br><a target=\"_blank\" href=\"https://www.famio.cn/wp-content/uploads/2016/12/GIF.gif\" rel=\"nofollow\">https://www.famio.cn/wp-content/uploads/2016/12/GIF.gif</a>\r<br>\r<br>想问下有没有类似的 demo ，我也想弄一个！</div>"], "reply": "26", "tittle": "网页上这种效果如何达到的？", "comment": ["在某博客上见过这个效果，地址忘了...", "太多啦，烂大街的科技感特效。", " @", " 感谢两位提供干货。\r", "但是觉得和我要的不是一个东西，虽然都是 particles ……", " 可以看一下配置文件，我记得以前实现过一楼效果", " 感谢朋友。\r", "已经在源网站里 F12 到了 js ，根据 js 搜索到了……嗯，居然这东西也是出自 V 站。\r", " 😂我也试试", "就是我博客的背景啊，不过不贴网址了， V2er 太凶残，一大波过来，服务器撑不住。。。", "github 搜索 粒子效果", " 大兄弟早点说啊~不过我也已经实装了，蛮好玩的，哈", "就我一个人觉得 low 成马了?", " 各有所好， I dont care.", "\r", "\r", "国人写的", "已成功 hexo+next", " 你好，请问你们这种首页只有中间一块的是什么搭的，用 wordpress 可以吗", "gif 是 404 ？", " 图床借了自己博客，问题解决了，故已删。", " 请问是加到哪里呢 foot 么", " 把`<script type=\"text/javascript\" color=\"0,0,0\" opacity='0.33' zIndex=\"-1\" count=\"99\" src=\"{{ url_for(theme.js) }}/src/canvas-nest.min.js\"></script>`放到 themes/next/layout/_layout.swig\r", "\r", "然后把 canvas-nest.min.js 放到 themes/next/source/js/src\r", "\r", "  并不好看，鼠标放着不动会不停抖， github 已 issue", " 放着不动抖动的样子还是很可爱的呢。", " =) 男神", "这种的太多了...... 以前我也喜欢,也想加 ........\r", "\r", "后来觉得 可能消耗内存....\r", "\r", "且 鼠标放一会 感觉有密集恐惧症....\r", "\r", "而且在看文章的时候,这东西一动一动的 ,太奇怪了...", " 就是用简单的 css 写的，你可以看一看源代码", " 谢谢，不行的，我不会写网页，是想问一下有没有模版给我用", "来我的网站玩玩 "]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>在 iOS 开发中，哪些下发补丁或者修复 bug 的 app 使用 jp 确实好，但是站在用户的角度想想，你这岂不是可以随时下发收集本人收集信息，获取私人图片，下发含有病毒的代码吗？这样在线下发的代码苹果无法审核，鬼知道你们做了什么\n，难道不应该在下载你的 app 的时候告知用户该 app 版含有 jp 代码吗？</p>\n</div></div>"], "reply": "26", "tittle": "关于 JSPatch 的反思", "comment": ["恶意数据的禁止调用主要靠系统沙盒，调用特定的代码想逃过审核太简单了，各种方法。", "你以为审核能审出病毒代码？", "你这无异于因噎废食，普通用户哪分的清楚 jp 是什么，如楼上所说，应该采取别的方法。", "如果有调用到系统功能的一些代码还是可以查出来的。即使在不靠谱我觉得通过苹果那一关总可以放心一点。但是使用 jp 这样就太随意了", " 只是对于我们来说如果有这个东西的话，如果这个 app 不是必需品是不会安装的", "jspatch 怎么了 以前还多少用 luapatch 呢\r", "想流氓你咋都流氓的起来", "对于心不正的人，再好的工具也能用坏。。 JSPatch 如此， Android 的热修复也如此。。", "APP 业务都写不完，还有时间收集隐私？", "审核在关键时刻也没有用 XCodeGhost 就是个教训", "我觉得苹果对于应用审核这个事情真的是对用户太好。所以对于那些所谓“一天一个花样的”（热更新）的 app 感觉留个心，国内厂商没有几个靠谱的。", " 一天一个花样，难道不是 React 么？还是那句话，心不正的人用再好的工具也能用坏。。", "即使不用 jspatch, 照样轻松获取用户信息, 所以关键不在是否用, 关键在于开发 app 的公司的职业道德, 虽说大厂基本无道德可言", "lz 没听说过代码签名吧，这些真的都不是问题", "不好意思，看错题目了", "就算事先写好了“病毒代码”一样能通过审核的，只要开发人员想这么做，就比较难组织", "就算事先写好了“病毒代码”一样能通过审核的，只要开发人员想这么做，就比较难阻止", "这是 JSPatch 被黑的最惨的一次", "你认为 Apple 没有搜集你的隐私吗？", " 没有黑 jp ，只是有个疑问，", "我自己以前也有用过，好用。", "这确实是个问题, 调调私有 API 还是挺随意的", "菜刀这么危险的东西，可以用来砍别人，可以用来砍自己\r", "我觉得不应该再销售了！！", "菜刀是必需品，而含有潜在危险的 app 不是，同类型的 app 一大把，你有的选", "我不是针对第三方，就事说事", "企业如果总是站在用户的角度想问题它该如何赚钱，告诉用户含有 jp 有多少人又知道这个是个啥，还降低了用户体验", "Apple 警告邮件( ", " jsp ？呵呵。。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>很久之前看过一款终端模拟器，名字忘了，有类似代码补全的功能，就是有一个下拉菜单可以补全命令，然后他的样子还挺好看的</p>\n</div></div>"], "reply": "7", "tittle": "求一款终端模拟器", "comment": ["iterm2 ？", "Black Screen?", "oh-my-zsh 也可以做到。", "Android 用户可以尝试玩玩 termux 呀", "乍一看是在问 terminal ，仔细看又像在问编辑器，最后一句像在问 Shell 。。。\r", "所以是 Guake|iTerm2|Terminator+Zsh+Oh-my-zsh+VIM-IDE 能满足你的需求", "android 上的 juicessh 不错"]},
{"content": ["<div class=\"topic_content\">刚领了阿里云的 6 个月免费的服务器，想跑一些有趣的脚本 <a target=\"_blank\" href=\"/t/327447\">/t/327447</a> ，某乎逛了一圈，没有特别心动的，请问各位大大有啥有趣 OR 实用 OR 好玩 OR 高效率的脚本（ bat 、 py 、 nodejs 都可以啦）：）\r<br>还发现一个好玩的问题：把\"shutdown -f -r -t 0\"放到启动项后要怎么破，就是开机后 0s 重启，然后一直重启，求答案。</div>"], "reply": "15", "tittle": "闲置服务器，求好玩脚本，另问：把\"shutdown -f -r -t 0\"放到启动项后要怎么破，只能重装系统？", "comment": ["安全模式呗……", "开一个 mc,我们来玩 mc", "Windows Server? 安全模式可破.", " mc 居然挺费资源，上次我的小鸡还没跑起来，内存就不够了……", " java 日常被黑", "把\"shutdown -f -r -t 0\"放到启动项后要怎么破\r", "\r", "挂 rescue CD 进去直接改文件", "mc 代码很垃圾是除了名的…… mojang 的人好吃懒做。\r", "\r", "貌似光影计算什么的竟然是在服务器计算的……\r", " Mc 对服务器和客户端都还挺有要求的", " @", " @", " @", " 😂😂😂还有其他脚本吗？", "tshock, factorio", " 游戏来的吗？", " 是啊，顺着他们 MC 往下说的，比较好开独立服务端的。这俩体积都非常小，跑起来吃流量不太吃性能", " 可是我不玩 MC 。。", " 我推荐的又不是 MC ……", " 你们带偏了😂😂😂"]},
{"content": ["<div class=\"topic_content\">macbook air 电脑装的 win10 ，开机黑屏，然后按了 option ， command ， shift 三个键，就跳到一个可以修复的页面，然后就无限读条了</div>"], "reply": "4", "tittle": "win10 跳过磁盘检查然后就一直读条", "comment": ["有人知道这是什么情况吗", "修复启动试下，看你这种估计是启动被破坏了", " 如何修复启动", "  用 U 盘装 PE ，然后进 PE 进行修复 系统启动，"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这个软件是个开源版的 dash ，但是我用起来很不顺手。</p>\n<p>例如我想搜索 java 的 String 类，我在搜索框里输入 java:String ，结果出来一堆没用的， String 类在中间呢，我得拉好久才能找到。</p>\n<p>请教大家有什么好的解决方案吗？或者替代方案。谢谢。</p>\n</div></div>"], "reply": "24", "tittle": "zeal 文档查看软件有人用过吗？", "comment": ["先输 Java 再按 tab 可以 过滤", " 你好，请问你使用的是 zeal 吗？我就是先输入 java ，再按 tab 的，这种过滤只是能让 zeal 只显示 java 的内容，但是结果里面 String 类并不在前面，在前边的是一些无用的 java 信息。", "Devdocs\r", "Web: ", "\r", "App: ", "\r", "Alfred: ", "DevDocs 由于版权原因无法收录 JDK 文档，不太符合楼主需求，不过还是挺赞的", " @", " 谢谢，我一直再用 devdocs ，非常赞。就是没有 java 的文档，在网站上很多人回复需要 java 的和 scala 的，不过暂时不好办。", "windows 上还有个 velocity 也可以离线查文档，不过功能也挺弱，不知道存不存在你说的问题", "这货的查询功能我感觉是真的废！", " 我没有 windows ，如果 velocity 有 linux 班的话就好了", " 没法用，卸了。。。\r", "\r", "另外，头像感人啊", "win 下感觉非常卡，不过可能是因为不是 ssd 的原因", " win 下我用 ssd ，查 C/C++的速度感觉很快啊...", "最近从 dash 切换到 zeal ，查询功能， docset 导入比 dash 。一分钱一分货吧。能用就好", " 我觉得查询功能这个样的话，丝毫没法用", "码一下， zeal 也在用...不过只能算是能看吧.....devops 没有 java = =可惜了，看看 v 友们还有啥推荐不", "看 Java 文档，不都是 cmd+B go to definition 看代码或者方法注释吗？\r", "其他看个 ruby/python/js 可以用 devdosc, 用 eletron 包裹了下 DevDocs ： ", " 是的，我就想万一不打开 idea 的话呢。。。", "java 直接点进去看 doc 就好了..切出页面来反而多了一步", "过滤的功能还是弱了一点，能过滤成员函数和类什么的就好了。。", "zeal 也是在用，确实有相当多需要提高的地方", "用了一年吧，觉得它的提升空间相当大", " 这个问题请看: ", "\r", "\r", "解决方法:\r", "\r", "git clone ", "\r", "\r", "按 ", " 配置编译环境\r", "\r", "编译报错问题修复: ", " 自行修改\r", "\r", "最终效果:\r", "大图\r", "\r", " 谢谢， github 已经把这个 pr 给收了，我现在正在更新软件，不出问题的话应该解决了，谢谢！", " ubuntu ppa 里面还没更新呢，我在官方 github 上面拉下来安装，自己编译安装的，很棒，界面也好看多了，很好"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h1>想请问一下关系型数据库的设计 简化 api</h1>\n<p>例如这种把构成 sql 语句都放在数据库中,后台只负责提供增删改查的 4 个 api,由前台传入特定的 apiid 就可以达到各种对象的增删改查的数据库设计的方案...大概怎么查到之类的设计方案</p>\n<p><img alt=\"\" src=\"http://7xqvqi.com1.z0.glb.clouddn.com/14819410525265.jpg\"></p>\n<p><img alt=\"\" src=\"http://7xqvqi.com1.z0.glb.clouddn.com/14819414264346.jpg\"></p>\n</div></div>"], "reply": "15", "tittle": "想请问一下关系型数据库的设计 简化 api", "comment": ["这种 api 是给人用的吗", " 只要数据库配好 指定了 apiid 然后前台负责给特定的接口例如 /select 带上指定的 apiid 参数 就能达成这个对象的查询效果了...", "你直接让前端传送 sql 就好了", "前端动 sql 恐怕很少吧。还不如用 Graphql 加一层。", "前端直接传 id 和查询类型不就行了，其他后台来生成 sql ，一般都是这样做的吧", "为了设计而设计, 设计这种 sql 的 sql 有意思么?  \r", "就设计 2 个字段,id 和 sql,传 id 和参数执行 sql 不就行了?", "  这种设计目的是 之后程序不用改动 只需要在数据库进行添加并附加一个 apiid 就会有新的对象的 增删改查的...", "设计成这样.还不如直接让前端传 SQL", "我的天... \r", "\r", "1. 你每次数据库操作都需要额外的一次 DB 查询\r", "2. 由于问题 1 ，所以做缓存是必然的了，那为什么不直接在应用层面去设计，很多 ORM 框架都可以提供 sql 和 id 的映射关系并在运行时决定执行哪个 sql 的\r", "3. 你确定服务端的业务逻辑仅仅用 sql 就可以实现吗，明显不行啊.... \r", "\r", "另外，你的 sql 参数怎么传入？多个 sql 执行顺序如何协调？", "怕不是遇到复杂业务连事物都没有了， mongodb 适合你……， rdb 不适合你", "lz 还是年轻，直接解析参数构造 sql 查询就可以了\r", "\r", "你这个定义应该放内存里而不是数据表里\r", "如果真的要做到可配置，那么放个某个配置文件里面就可以了\r", "至于喷性能的是什么心态？实现上难道不应该 100%放内存，难道每次 api 解释还查数据库？", " @", "  其实放配置文件到数据库 主要的目的是 不修改或添加代码的情况下 进行新对象接口 api 的提供,给运维人员带来方便.当然地,第一次查询或者服务器启动的时候就可以对这个 api 视图进行缓存...", " 缓存是必要的.sql 的参数是在细单概念上面的,相当于也有一个指定的 apiiddtl,至于 sql 的执行顺序是可以控制,当然地,如果很复杂的,会额外写 api 接口...", "  事物怎么控制？权限怎么控制？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>内存是 1gcpu1 核，编译 mysqlmysql-5.7.17 提示\nc++: Internal error: Killed (program cc1plus)\nPlease submit a full bug report.\nSee <a href=\"http://bugzilla.redhat.com/bugzilla\" rel=\"nofollow\">http://bugzilla.redhat.com/bugzilla</a> for instructions.\nmake[2]: *** [sql/CMakeFiles/sql.dir/item_geofunc.cc.o] Error 1\nmake[1]: *** [sql/CMakeFiles/sql.dir/all] Error 2\nmake: *** [all] Error 2\n设置 2g 交换分区编译后还是会报错，请问大家在不改变主机配置的情况下有什么好的解决办法不</p>\n</div></div>"], "reply": "19", "tittle": "在阿里云编译 mysql 报错", "comment": ["distcc(逃", "还是弄台 16 核 16G 的吧，编译完就释放\r", "几毛钱能解决的问题，花时间花精力干嘛？", "yun 安装就好了 为什么要编译呢..\r", "yum 打错了", "想不通这种问题为什么要加上阿里云？\r", "\r", "其实呢，标题换成：\r", "在腾讯云编译 mysql 报错\r", "在百度云编译 mysql 报错\r", "\r", "意义都不大", " 同，而且 mysql 也可以无需编译。", "你应该去 MySQL 的源码仓库提 issue ，或者改用二进制包安装。", "想省钱的话，应该是本地编译以及打包好再上传到服务器。", "用 Docker 构建服务", "同意上面 跑个 docker 完事", "爆内存了吧， make -j1 试试", "阿里云表示，这都怪我！", "好像 5.7 的 1G 内存是安装不上的。", "看了下标签是程序员，没发到云计算还算楼主有点良心", "包管理里面装不就行了嘛，这锅都能阿里背，虽然阿里是很糟", "docker", "1g 内存跑 5.7 ？", "5.7 1G 内存编译不了吧", "5.7 有 ppa  吗？"]},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"https://github.com/Bilibili/flv.js\" rel=\"nofollow\">https://github.com/Bilibili/flv.js</a>\r<br>\r<br>\r<br>知乎： <a target=\"_blank\" href=\"https://www.zhihu.com/question/53686737\" rel=\"nofollow\">https://www.zhihu.com/question/53686737</a>\r<br>作者原微博： <a target=\"_blank\" href=\"http://weibo.com/2319279011/EmhAixeFL?from=page_1005052319279011_profile&amp;wvr=6&amp;mod=weibotime&amp;type=comment#_rnd1481862588616\" rel=\"nofollow\">http://weibo.com/2319279011/EmhAixeFL?from=page_1005052319279011_profile&amp;wvr=6&amp;mod=weibotime&amp;type=comment#_rnd1481862588616</a></div>", "<div class=\"topic_content\">已有类似主题 <a target=\"_blank\" href=\"/t/327966\">/t/327966</a> 下沉一天</div>", "<div class=\"topic_content\">#27\r<br>&gt; \r<br>&gt; 谦谦的前 Leader 出来发声了。只不过，🙄。 \r<br>&gt; <a target=\"_blank\" href=\"http://www.zhihu.com/question/53686737/answer/136346111\" rel=\"nofollow\">http://www.zhihu.com/question/53686737/answer/136346111</a></div>"], "reply": "28", "tittle": "Bilibili/flv.js 作者月薪不到 5K，离职并称工资不如 Star 数", "comment": ["突然就心疼一下\r", "\r", "技术人员很多确实都是理想主义者，只要自己能做自己喜欢的事就不关心待遇问题什么的了\r", "\r", "可是小心，抱有这种心态的时候不要被公司被 HR 算计了啊", "逸站的员工都活在二次元", "二次元没有工资", "最近黑逸站的真心有点多， B 站管理你自己决定情怀能代替工资？真心为他们捉急，不要又步 A 站后尘啊……", "对于 SMG 来说，最不缺的就是人，下属院校里随手一抓一大把。", "96 年的......厉害", "只要有动漫 生活就有希望\r", "\r", " ", " ", "其实主要就是仨问题\r", "这个作者刚 20 岁\r", "这个作者高中毕业\r", "这个作者是老员工", "还有 5k...", "入职的时候被忽悠了", " 精准", "搞事情", "之前面了个 B 站的开发，他说 B 站产品经理都是傻逼，现在看来 HR 也是傻逼啊", "早就听说 b 站员工待遇差了，没想到这么差，这种级别的人才放到 bat 薪资起码是现在的 4 ， 5 倍。 b 站对用户来说是一个好网站，但对开发人员来说不是，如果总是靠爱发电迟早倒闭。", "调查了下 B 站这两年的百度指数走势和一些相关新闻。可以看出 B 的关注度一直在稳步增长，用户数也在往亿级上奔。规模上肯定不允许整体 Bilibili/flv.js 作者相同水平的工程师这都是这种薪资水平。\r", "比较可能的猜测是作者的能力兴趣和所在团队的主要职责不匹配，导致绩效上不去， Bilibili 内部又没有提供顺畅的转岗通道。而事实上转岗这件事大多数互联网公司基于五花八门的原因是普遍做得不好的。所以才会有人两步跳槽回本公司后，职责和职级才脱胎换骨的现象。\r", "我看 Bilibili/flv.js 作者年纪不大，猜测 B 站可能是第一家公司。求职时信息不对称，加入了一个不太适合自己发展的团队的可能性较大。其他的，不宜过分解读。\r", "\r", "作者：安江泽\r", "链接： ", "\r", "来源：知乎\r", "著作权归作者所有，转载请联系作者获得授权。", "利益相关，女装前端参上（笑\r", "\r", "不是洗地……现在技术的工资真没这么低……可能他进来比较早且没谈好吧……\r", "\r", "至于某楼说的只谈二次元不谈房价啥的……我天天和同事二次元和房价和时事政治和技术圈绯闻一起谈(笑，虽然不知道上头怎么想，不过也无所谓了\r", "\r", "说实话，二次元氛围确实不错，环境还是相对自由的……通风问题是有点蛋疼，也在解决，不过冬天需要开风扇确实没得洗\r", "\r", "只能说千人级别的公司了，什么人什么事都有吧，不能一概而论\r", "\r", "不过轮子哥说的不错，工作和爱好确实应该分开，用最短时间解决业务并赚更多钱，一直是我的追求……不过最近有点变动，嗯，从公司角度无可厚非，拿人钱财替人消灾嘛……\r", "\r", "作者：瞬光寂暗\r", "链接： ", "\r", "来源：知乎\r", "著作权归作者所有，转载请联系作者获得授权。", "心疼谦谦", "作者都有这么强大的光环了，内部人事竟然还没发现这块宝。现在他肯定基本要被大公司挖走了。", "  我就不同意了，什么叫没有谈好，简历造假，面试吹嘘，这就叫所谓谈好。这个世界只剩下欺负善良单纯的人了吗？", "这他妈的。。。", "5K 确实是一个太低的数字，但我还想说一句， flv.js 不是什么难度夸张的东西，真没必要因为这个 repo 为一个作者的技术能力加太多印象分", "估计自己没谈好吧，不合适自己再找才是王道", " 你看人看得太片面了.  很多不起眼的东西 做好做到极致了. 是一种态度, 一种思维方式.\r", "比 5kstar 本身要值钱.  不要只看到表面的东西.", "实现这个功能之前有一个叫 video.js 的有点骗人性质的实现，看起来是个 html5 播放器，翻了一下源码发现实际套了一个 swf 文件用来解码 flv 和流控，结果就是虽然 PC 上支持 html5 播放器特性但是不支持 flash 的移动端完全不能用(坑爹)......\r", "这个还没试过，不过源码已经看到了 demux 和 remux...不知道播放串流能不能用以及各客户端兼容性如何...", " 正常点水平应届批发价都 10K+的今天，有这样的开源项目的作者拿 20K 不为过吧……然而……技术印象分不多说，只是 B 站的内部薪资体系让人捉急（然而反正我们依旧是吃瓜群众……", " 我同意这个薪水很低，不过我来定价的话这个 repo 不会给我的定价加分就是了……", "谦谦的前 Leader 出来发声了。只不过，🙄。\r", " \r", "\r", " \r", "\r", "在他们看来，情怀真的可以当饭吃。\r", "「甚至如谦谦这样的 95 后，他们跟你们一样，也会遇到“糟糕的一天”，也会脑袋抽风，也会追新番，添本子，做视频。」 Exo me? 这和谦谦工资低有半毛钱关系？还想用情怀忽悠应届生继续去 B 站卖廉价劳动力？这篇洗地负分。", "B 站有个牛逼的 HR\r", "我有个小弟喜欢二次元，所以怀着神圣的心态面试了 B 站\r", "我找关系通过一个 B 站员工内推的，直接面对 HR\r", "这个小弟上海知名大学 CS 本科毕业\r", "应聘职位是后端工程师，写 web 后端代码的职位\r", "\r", "这个小弟能力我就这么说吧，你们毕业生有几个能吃透 mysql 的源代码的，他毕业时候研究过 mysql 和 innodb 的全套源代码并且能说的头头是道，他的主业还不是 c/c++，纯粹为了提高自己开发后端时候对数据库行为的掌控，即使是我已经工作 10 年的今天，有很多 MYSQL 问题我会主动跟他沟通，相关的后端能力这么能研究的人相信 V2 的人会有直接感觉吧\r", "\r", "然后面试在没有技术人员陪同的情况下， HR 跟他单聊\r", "\r", "HR 问他了一大堆八竿子打不到的技术问题，比如黑客技术，兴致勃勃的问他黑没黑过别人网站……\r", "\r", "最后 HR 拒了他，理由是他的 js 能力不行……\r", "\r", "从此该小弟 B 站一生黑……"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>第一次经历裁员，求问有什么要注意的。\n另外，一起的还有几个同事是武汉一号店的 java ，可引荐。</p>\n</div></div>"], "reply": "35", "tittle": "年底突然被裁员，是不是不好找工作啊", "comment": ["一号店怎么了", "赔了几个月工资？", "裁员补偿是多少？ 如果多的话就给自己放个寒假吧。", "来北京，我们收 java", " 一号店被京东收购了，结局一目了然", " 一号店被京东收了后也裁员了，一起来的这家公司，然后没想到。。。", " @", " 刚满半年，赔一个月工资+一半的年终奖。", " 太少了，只能继续找了。", " 目测他们应该不会去北京，一号店之前刚从北上广回来的。", "本来生活裁员了？", "工作好不好找不知道，但估计你回家的车票好买了。", "想起易迅了。", " 很良心了。。。还给年终", "亲。。我们公司在招技术，可以加我的 qq ，  2641883544 ，坐标深圳", " 查了下，如果走正规流程，没有提前 30 天书面通知要给两个月工资的。", " 不是 b2c 事业部", "收前端， 20K+，要求学历\r", "细聊： bWRsdW9AbGl2ZS5jbg==", "武汉的贪吃蛇大作战团队正在大力招聘", "你说的是途牛么？", "啥公司？说说", "据 100offer 的报告说，年前的平均工资比年后高一截", "不如先回家过个年？", " 看到了你的邮箱，可惜坐标武汉。", " 你在贪吃蛇，好像听说是个坑哦", " 弱弱的问一下，这种散列的是什么聊天工具啊，好高端的样子。。。", " Base64", " 哇，刚知道 Base64 Decode 和 Encode ，呵呵，这样避免邮件被爬虫抓挺好的。", "要是我我就高高兴兴回家过个年，放个寒假。", "如果是被裁的情况，平时的加班费用、年终奖费用等等这些都是可以算到赔偿金里的，前提是你得跟 hr 去谈，如果不谈的话，有可能就不会给你加到赔偿金里。\r", "年前被裁的我们被 hr 一忽悠，当时啥也不懂的就把协议签了……", " 确实，加班的工时还有婚假。", "悦跑圈？", " 不是，年底这么多公司裁员？", "我们招 java ，坐标武汉。求推荐， qq:810601150 。好人有好报。", " 前天约炮圈就裁了一半…结合你发帖的时间我觉得很像是。。看来年底确实挺多公司在裁员？", " 坐标？"]},
{"content": ["<div class=\"topic_content\">ATS 的标准要求：\r<br>服务器必须启用 https ，且 TLS 版本至少是 1.2 版本连接加密只允许几种先进的加密算法；证书必须使用 SHA256 或者更好的哈希算法进行签名，要么是 2048 位或者更长的 RSA 密钥，要么就是 256 位或更长的 ECC 密钥。\r<br>2017 年 1 月 1 日之前未完成 https 改造以及不符合 ATS 标准的，该 APP 将无法上架或者上架后应用不可用等情况。\r<br>\r<br>\r<br>目前有客户已经求助于网宿 MAA 移动加速方案，我方 MAA 的链路聚合方案（ ATS 支持标准和转 https 技术）正好可以满足该类需求。</div>"], "reply": "目前尚无回", "tittle": "苹果元旦 ATS 限制", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>把 Ubuntu 16.04 里的那个 nginx.conf 改了改用在了 debian 里，里面有这么一行（这行出现在 Ubuntu 官方的默认配置里）</p>\n<pre><code>    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE\n</code></pre>\n<p>加上之后很多手机浏览器就打不开了，包括 Android 4.x/5.x 上的 UC 家那个， 360 浏览器之类都不行。</p>\n</div></div>"], "reply": "10", "tittle": "为什么加上这行之后很多手机浏览器就打不开 https 的加密连接了？", "comment": ["\r", "\r", "手机不支持 ssl 协议类型，类似 ie6 无法打开很多 ssl 站点，比如支付鸨。需要在 Nginx 中配置多个支持。", "在採用激進的協議版本之前應該考慮是安全性還是兼容性更重要。（反正咱都是直接 drop 了這種客戶端的支持 (〃ω〃)", " 作为一个发行版默认设置太激进了，别的发行版都没这么做。至少应该是注释掉的让用户自已打开。\r", "这个设置会影响一大部分国产浏览器，包括最新版本。\r", "\r", "\r", "昨天迁移系统发行版，同时需要改了很多东西，结果一上线一大堆用户反应打不开网站，我本地却没问题，找了半天才发现原因，巨坑啊。", " 留着 POODLE 这么一个漏洞在 release 里会被喷得更惨……", " 哪个最新版本国产浏览器这么残疾啊？", " UC 家的夸克浏览器（ UCWEB 没试，应该也差不多）， 360 手机上的 360 浏览器，都是最新版。 android 原生的没问题，哪怕是 4.x 上的。", "难道那俩国产的浏览器最高支持到 SSLv3?", "SSLv3 早就不推荐用了…国产浏览器也是厉害的。\r", "我加了 SSLv3 ，好像夸克浏览器也不行。。。", " 我这里把这行去掉就可以了，加上就不行。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>右手腕不舒服，改用左手用鼠标，问大家个问题，你们左手用鼠标，切换左右键么？</p>\n<p>我试了试不切换左右键一点学习难度都没有啊，左手食指点右键和滚轮，中指点左键。\n如果切换了，倒是不习惯了。</p>\n<p>你们有类似的感觉么？</p>\n</div></div>"], "reply": "41", "tittle": "右手腕不舒服，改用左手用鼠标，问大家个问题，你们左手用鼠标，切换左右键么？", "comment": ["切换", "不切,跟你指位一样", "肯定切换，毕竟食指应该用在高频的点击上", "顺便把指针也换成向右指的", "自从用了那种竖着的人体工学鼠标之后就不再有手腕的问题了", "用 vim ...", "曾经也被这个问题困扰，换 mbp 后不需要鼠标了，这个问题也没了", "之前是切换的，但是总是有人来用我的电脑时候各种闹抽，干脆就不切换了。。", "换轨迹球吧", "自从用了脑机接口鼠标 就再也不用手了 \r", "（实验室产品）", " 用触摸板反而手疼。。。", " 最近感觉每个帖子里都见到你", "同意 lz 啊，老是右手搓鼠标真的是累。。。。。后来我就不用鼠标了😂😂😂", "苹果机的话还是触摸板舒服", "前段时间买了个手腕垫感觉效果拔群.....", "表示三个键都是食指按……或者中指跟食指一起按左键……", " 说明我们臭味相投，我身上有吸引&让你在意的特质", "反正我要切", "自己家用电脑上不仅换左右键，还要换鼠标主题。\r", "公司电脑上什么都不换，只是放到左手边使用。\r", "\r", "并没有不适应的感觉", "用左手鼠标当然更换顺序：把常用的左键更换一下位置不是更能充分利用微动的寿命嘛。", "用的微软的馒头。。。", "哈哈哈，我用的立式鼠标，前几天手疼，就直接买了。", "以前切换，现在不切换了，在公司用左手，在家用右手", "不切换，联系中指，习惯就好了", "这就是我为什么特意用 vim 插件。", "切换", " 咨询一下 win10 下怎么安装指针 inf ？右键并没有“安装”选项", "你可以用轨迹球，不用动手腕，只需要 1 天就能适应了", "不用切，期待有能够专为可左右开工设计的键盘和鼠标。", "换罗技的轨迹球吧，我之前是手腕疼的厉害，用轨迹球之后慢慢好了", "左手食指右键，中指滚轮，无名指左键，用的很习惯", " 你的头像成功吸引了我", "不光切换左右键，还指针都会替换成左手版，不然看着别扭", "鼠标换成左手了，按键也切了，搞得我一直在用快捷键，因为嫌左手太慢了 ", " ", "对了，推荐楼主使用右手复制粘贴快捷键\r", "Ctrl + Insert 复制 \r", "Shift ＋ Insert 粘贴\r", "Shift + Delete 剪切", "我接触过的左手鼠标用户都是不切换左右键的", " 我有个逻辑的，就是精准度不够，准备再搞个好点的鼠标轮着用", " 我用罗技和肯辛通的，其实精准一点都不差，主要是个习惯问题", " win10 没换过，因为用的微软 sculpt 本身是右手鼠标", "水果的话老款触控板并不算太贵，微软的话用罗技的触控板也不错（罗技的触控板感觉能追上水果的 feel ）", "我是累了就用触摸板。。。", "不切, 保证鼠标不需要特定设置, 去别人电脑上可以直接 ZB"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"http://www.zhangxinxu.com/wordpress/2016/06/png-icon-change-color-by-css/\" rel=\"nofollow\">PNG 格式小图标的 CSS 任意颜色赋色技术</a></p>\n<p>我现在的问题在于我操作的元素是 svg ，即图片的引入是通过 svg image 元素 xlink:href 来引入图片的。\n<a href=\"https://codepen.io/jingxiao/pen/woRaKW\" rel=\"nofollow\">尝试 demo</a></p>\n<p>在 MDN 上查了关于 svg 滤镜 filter 的相关 API ，和上述 drop-shadow 相似的 api 是\nsvg filter 中的<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/SVG/Element/feOffset\" rel=\"nofollow\">feOffset</a>但是这个属性只是提供偏移。\nw3cschools 上关于<a href=\"http://www.w3schools.com/graphics/svg_feoffset.asp\" rel=\"nofollow\">这个“ Drop shadows ”的一些 demo</a>,但我觉得 svg filter 中的 feOffset 和 css3 filter 滤镜中 drop-shadow 的功能还是差一点（吐槽一下 w3cschool 这样的描述）。\n给的 demo 是几个 filter 效果的组合使用。</p>\n<p><a href=\"http://www.zhangxinxu.com/wordpress/2016/06/png-icon-change-color-by-css/\" rel=\"nofollow\">PNG 格式小图标的 CSS 任意颜色赋色技术</a>中利用了 drop-shadow\"真正投影\"(相对于 box-shadow 仅仅是盒投影)，通过定位方式隐去真是图片显示改变颜色的投影实现。\n看了一遍 svg 中 filter 相关 api ，没有发现相关能改变投影颜色的。</p>\n<p>我感觉按这种方式想去改变 svg 中引入 png 图片的颜色是行不通的。</p>\n<p>不知道还有什么其他的方案。如果你有什么好的想法，有空的话，求指点一二，谢谢。</p>\n<p>ps: 吐槽下需求，需求是想 用户上传 png 图片，一些交互操作改变图片的颜色。</p>\n</div></div>", "<div class=\"topic_content\">项目是拓扑图相关交互，用到的图片主要是用来做节点 icon 。\r<br>如果不考虑用户自定上传图片，用 iconfont 的形式展示就可以很好实现。</div>", "<div class=\"topic_content\"><a target=\"_blank\" href=\"http://stackoverflow.com/questions/41207097/is-it-possible-to-change-color-of-png-image-in-svg-element-by-css-or-javascript\" rel=\"nofollow\">http://stackoverflow.com/questions/41207097/is-it-possible-to-change-color-of-png-image-in-svg-element-by-css-or-javascript</a>\r<br>\r<br>通过 svg filter feColorMatrix 可以做到改变颜色</div>"], "reply": "3", "tittle": "是否可以通过 css 或者 js 改变 svg 中引入 png 图片的颜色？", "comment": ["引入 canvas 相关的库，就可以做类似的事情了吧 \r", "比如 ", " 谢谢 这是一个思路 但就现在的项目应该使用不了 AlloyImage 因为是 svg 的东西，再者引入一个专门的图像处理库太重了", " 不是因为 SVG 用不了 AlloyImage"]},
{"content": ["<div class=\"topic_content\">正则见：  \r<br>\r<br><a target=\"_blank\" href=\"http://regexr.com/3et85\" rel=\"nofollow\">http://regexr.com/3et85</a>\r<br>\r<br>我是要查找所有的字符串，不过发现[]里的引用似乎不起作用啊？</div>"], "reply": "12", "tittle": "请教这个正则表达式怎么改能达到效果？ （关于搜索源代码文件里的字符串）", "comment": ["自已解决了 ([\"'])(?:\\\\.|(?!\\1).)*\\1", " 你这个有问题啊\r", "目前来说这个似乎可以：\r", "\r", "\r", "我正在想明白其中的道理。", " 遇到\\\"转义字符就不行了", " 哈哈源代码里不准用\\\"，所以不考虑这个问题。（我想了下考虑进去也能做到，只是更复杂了）", "(['\"]).*?\\1", "您这是要做词法分析吗", "(['\"])([^\\1]+?)\\1", "好像在中括号内不能用 \\1 ，被转义了。", " \r", "    (['\"])(\\\\\\1|.)*?\\1\r", "加了个 \\\" 支持", "same question [here][1]\r", "\r", "\r", "  [1]: "]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题，想实现这样一个功能，抓取 QQ 号里所有好友的名单,有什么方法能办到呢？</p>\n</div></div>"], "reply": "22", "tittle": "有什么方法能扒下 QQ 中所有人的名单", "comment": ["QQ 邮箱", "QQ 好友关系是腾讯安家立命的根本，是中国互联网最具商业价值的数据，没有之一， 360 曾经做了个扣扣保镖其他抓取 QQ 好友关系，抓到 8000 万的时候逼得腾讯发动震惊全国的二选一 3Q 大战，今天的腾讯更加强大，你个无名小卒想干什么", "webqq 好像获取的不是 qq 号", "2 楼的回复不错", "这是想搞事情啊", "题主只是想获取自己的 qq 好友，楼上的读题不仔细吗？\r", "\r", "自己的 qq 好友关系本来就应该算是属于自己的一个东西。\r", "\r", "腾讯没有公开的接口，楼主可以试试 webqq ，但是希望不大， webqq 阉割严重。\r", "\r", "然后可以搜一搜酷 q 机器人，他们应该会有相关的 api ，或者 mypcqq 。", "一楼靠谱，二楼好逗。", "听一楼的，邮箱列表包含所有 QQ 好友。", "QQ 邮箱 -> 通讯录 ->右侧 QQ 好友", "实在没接口的话 可以用按键精灵啊", "通过各种企鹅家的 web 应用想办法", " 你还没讲最早是 51 的彩虹 qq 直接用抓取的 qq 联系人做了个自己的 im ，可惜没有成功", "当时被诱导去 51 的页面发现竟然有自己的所有 qq 联系人，都是偷偷上传的", "QQ 群可以在群管理复制用正则\r", "好友得找找", "微信倒是可以了，还有现成。无聊做了一个微信联系人签名以及昵称追踪，做成 xml ，偶尔看一下，挺有趣的。现在很多人啊，像我这种不喜欢发朋友圈，不爽就改一下 What ‘ s Up~~~Hhh", " 好像和题目无关，歪楼一下下~~", "尝试过 QQ 邮箱，没成功劝你换个路子。 ", " ", " mypcqq  应该可以", " ", "qq 空间有现成的", "qq 邮箱通讯录  可导出", "加入收藏，是因为找到了一个非常简单的方法可以获取所有 QQ 好友，打算做成工具之后 @ 楼主"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>一辆自行车，一大袋乱七八糟的衣物什么的，二三十公斤的样子，选哪个快递的套餐比较经济实惠呢？</p>\n<p>刚寄了一个椅子同城的顺丰就要 42 ， 9.5KG ，感觉有点坑。</p>\n</div></div>"], "reply": "73", "tittle": "过年回家，好多东西好快递回去，选哪个？", "comment": ["难道不是骑自行车带回去吗？（逃", "邮政托运，实惠", " 嗯，这个主意不错，现在开始骑，到过年就能到家，真棒。", "看赶不赶时间 不赶的话就直接邮政", " 一点都不赶，", "主要是，邮政能不能上门收件的，而且我记得邮政也不便宜啊", " 邮政不能上门收件就推着自行车过去呗，就怕太贵了，", "邮政平邮包裹超级便宜，不要选邮政快递", "德邦，如果不急着到就邮政平邮包裹", " \r", " \r", "邮政平邮在哪儿下单？多少钱续重？", "经济实惠就要不怕摔。", "又贵又重选德邦。", "自行车的话，最好先打电话给邮政确认下是否收寄，寄的话去车店打包固定好。你也可以问问中铁快运，能上门", " 固定好之后就不知道怎么装了，这坑，我家小镇没卖自行车的店 ，！(^^)！ \r", "\r", "打包估计他们也要收钱吧。", "这个你需要货运！", "搬家公司", "走邮政普通包裹就可以吧\r", " 这个价格可以接受，这怎么发，打电话吗？没看到联系方式---。", " 直接带东西去邮局寄就行了，他们会拆包一件件的检查，我八箱子衣物就被一件件拿出来看了，不过拿出来检查和重新包装都是邮局的工作人做的，服务好啊:)\r", "\r", "你自行车不拆的话估计无法打包吧", "过年回家能玩几天，有必要把自行车带回去吗，回去之后只怕陪家人的时间太少，哪有空装逼骑车啊", " 是走了不准备再回来了，这个样子哦～", " \r", "我的东西应该不是很多，两个被子，剩下的就是书什么的乱七八糟的东西，一个袋子就搞定了。", " 自行车我也不会拆，拆了也装不上，哎， 1200 买的，八九个月，还在想要不要带回去呢", "德邦也可以，不过要记着走物流，不要走快递。", "顺丰 陆运, 找顺丰要个他们的大箱子", "东西多找德邦物流啊。我 n 年前从北京回老家，六个大箱子，一米见方那种，德邦物流拉着拖板车上门取，运费不到 300 。我感觉挺合适的。", "找货运便宜很多很多", "自行车 一般是不让寄的 除非你拆了打包好  之前记过邮政的包裹 相比其他快递  肥肠便宜 速度也能接受  被子啥的  建议寄邮政", "mark 。。", "翻翻淘宝已买到列表，多打几个快递电话。\r", "个人零寄跨省 8 元，续重 2 元", "二三十斤衣服物流随便邮寄\r", "自行车基本没戏", "买辆汽车，自行车放车顶，行李放后备箱，还可以带个妹子回家。(>^ω^<) 逃~", "中铁快运啊，到达离你家最近的网点后找熟人或者叫个车拉回家\r", "不嫌麻烦可以先把自行车骑过去，再跑一趟把打包好的其他东西送过去，取的时候同理……", "之前寄过邮政，记得是两块二一公斤，不过这个价钱跟距离有关，最好去邮政问问。", "自行车比较麻烦。其余的建议德邦物流或邮政平邮。使用顺丰等等的快递要贵多了", "德邦挺好的，建议，实惠服务也不错", "自行车不拆估计寄不了，可以去车店买个箱子让人家帮忙装一下。如果对车子没啥感情，还不如直接出了。。还有我用过天地华宇，贵点，但是车子打包好是可以寄的", "德邦物流", "自行车的话估计只能走中铁或者物流吧。中铁价钱比较透明，不过小心不要跑到山寨的中铁去了", "异地搬家我也推荐德邦，我去年从上海运了将近一吨的东西回湖建。。。其中也包括自行车。不过我是自己打包的，淘宝买纸箱和打包工具，打了二十几大箱", "走物流公司，把你所有东西包好，然后钉好架子。基本上属于高性价比方案", "中铁快运还是不错的，但是我这里需要到火车站自提", "我们这里最便宜的是百世汇通，仅次于物流，可以送上门。", "德邦", "我也是有一辆自行车，自行车火车托运统一价就是 35 块，物品打包就更便宜了。但是，一、你要自己去火车站取货，二、你家那边的火车站要有中铁的货运业务才行。", " 请自行车直营店老板帮你托运。", " 35 块钱这么便宜？", " 这都可以？还真没试过", "反正宝宝是在也不会用菜鸟了，妹的，上次寄了一些东西回家， 5Kg 收走宝宝 55 个大洋，那个心疼啊！明明圆通上门收也不会过 35 ，那个后悔啊。", "如果是坐汽车回去 可以提前联系下司机问下 放车上要多少钱  我之前摩托车也是  这样带回来的      \r", "快递应该挺贵的  可以提前去问下", "中铁快运，一公斤两块钱。。。", "走物流啊，比邮政便宜", " 首先，你得有个女朋友…………", "人肉快递", " \r", "中铁物流确实很便宜，去年把自行车用中铁物流从西安运到成都，加上包装费用也就是不到 40 块钱，注意不要被火车站山寨的中铁物流欺骗了，就是那种主动上前谎称自己是中铁物流那种，价格极其贵。", "德邦物流", "能卖的全卖了，剩下寄回家", "好了,背包问题", " 怎么联系它们呢？", "德邦。", "自行车卖了。。其余的邮政打包。。超级便宜。。", " 有人买也成呀。", "闲鱼出手，回家另购", " 咸鱼也没人买", "重的全卖了换成钱回去再买", "德邦不错，我几十斤大米冲山东邮到北京才十几块钱，而且有的地方还打折", "我离开乌市的时候走的韵达的物流（非快递）花了 700 多(⁄ ⁄•⁄ω⁄•⁄ ⁄)，几十公斤的书，几十公斤的行李，合计上百公斤……你看我用公斤而不是斤就知道_(:з」∠)_，两边的常用重量单位不一样", "不怕坏不怕烂的东西找附近的淘宝村或者是批发市场之类的，那里的快递超便宜，一般首重 5 元，续重附近省份都 1 元，再远的 2 元左右", "卖掉换成钱回家 回到家再买", "物流，中铁，这基础知识了", "这是一道送分题。\r", "\r", "走物流公司，自行车打木架；\r", "价格比快递便宜很多；\r", "物流公司中，德邦还不错，价格稍贵，楼主也可以找一找，选一些便宜点的；", "处理掉不就好了😂", "自己包装好，中铁快运门到门……\r", "都没有体积费 就按重量算……\r", "我跨城市搬家连塑料盆都弄回来了……", "弱弱的借楼问一句 德邦取件是自取还是上门呀"]},
{"content": ["<div class=\"topic_content\">主要是考虑对于新硬件的支持，有些旧的 PE 连 SATA 驱动都没有</div>"], "reply": "66", "tittle": "目前有什么好用干净的 Win PE", "comment": ["相信后面很多人会推荐 wepe ，当然我也这么想", "深度 pe 工具箱  至少没发现夹带全家桶", " +1 ", "上面已经有人说 WePE 了～", "天意 PE", "纯净技术新驱动全的 pe 一大堆，自己左转无忧启动满地都是。当然自己做一个也没什么问题，很简单的", "IT 天空的倒是一直在用。", " 貌似现在好找还干净些的就是 wepe 了，其他各种流转后都不知道有啥了", "我用的是“ 7pe_x64.iso ”，这里下载 ", " ——真的纯净过头了， Ghost 都没有，呵呵。当然支持 SATA ，移动硬盘等等。", " 通用 PE 好久前就卖了，现在作者做的是 WePE", "上无忧启动找找吧，一堆一堆的 PE", " 微 pe 很纯净", "MAX", "maxpe usbos", "现在还有人做 pe 居然", "IT 天空", "肯定是  微 Pe  呀   你百度下就知道了", "IT 天空", "WinPE 。。。。好古老的词汇。\r", "Linux 的 LiveCD 不好吗？为何非得用 WinPE 。", "推荐老毛桃 ", " \r", "老外的 Hiren ’ s BootCD ", " \r", "这个比老毛桃的工具要多，适合喜欢折腾的。", " block", " block", "老毛桃早就宣布撒手不管了，后续出现的那个网站，根本没承认过与他有关。", "無憂論壇", "无忧启动或者自己做，其他的基本上都不干净", "wepe", "我还在用超早的电脑店··· 看来该换换了", "repaik 的 pe 也好", "云爱 pe 不过兼容稍差一点", "AbsolutePE", " 老毛桃早就没更新了。。这是山寨。。。", "Windows ADK 中的原版 WinPE\r", "\r", "杏雨梨云 我推荐这个 目前用的还算舒服 ", " 天意 PE +1, WinPE + LinuxPE, 通吃各种情形", "难道不是用 ADK 自己做的最放心吗", " 某些电脑是不认 LiveCD 的， winPE 应该是很常见的东西，只是你听说比较少~", " 求问 ADK 里的和那些第三方的区别在哪里，引导方面呢？", " \r", "每一版 Windows （包括 SP ）都有相应的 WADK （以前叫 WAIK ），用这个可以做原版的 PE 镜像。\r", "第三方无非是加了一些驱动和工具。\r", "\r", "像老的原版 PE 没有 UEFI 驱动，不过好像 Win7SP1 以上就有了。当然你也可以自己添加。", "这里就我是用原版安装源做 PE 的吗？进到安装界面， SHIFT+F10 调出 CMD🙄🙄\r", "\r", "可能是有点麻烦，但干净啊。。。", "不知不觉，离开 Win 已经 5 年了。", "最干净的是不用 pe", "\r", "UEFI Legacy 通吃，无修改主页无捆绑\r", "目前我用的是这样，不保证以后不这样", "U 大师啊，你们说的 WEPE ，我试了下，连 U 盘都识别不出来，怎么做启动盘。。。", " @", " 请原谅我是百度来的", " 附议", "最干净的是不用 pe", "我是在远景论坛找的。。。", "推荐优启时代的 pe 以及 gho ， ", "老毛桃的还可以，大白菜的就算了。", "现在带 Nvme SSD 的主机，一大批传统 PE 都没法识别， Ubuntu 16.04 默认情况下不识别\r", "最近刚折腾过这些东西，感觉真的需要重新挑个合适的 PE 系统", " 你不是在搞笑？", "大白菜", "U 大师启动盘还是很干净的，需要的也比较全面。", " 当然是换 U 盘了", "  多谢", "目前使用微 PE 加官方原版系统玩，貌似没啥问题，连我某不知名平板都搞得定", " \r", "\r", "不加三个 www 就坑了~", " 求原版 PE 的步骤～ 不要各种集成的，就要个原版纯净的。", " 求 WADK 详细步骤", "微 PE 吧， 我还买了一个他们的 U 盘。感觉还不错。", "一点开就知道有人会推荐 wepe 他们家的 pe 很干净 用的是 win10 的 pe 工具包也很齐全 基本上没有第二个合适的选择了吧", "大白菜的应该还可以吧，蛮好用的", "只用来装系统分区之类的用微软原版 PE 就够了", " 大白菜用起来还不错 不过比较新的几个版本发现 会安装 360 全家桶。。。。", " 基本没步骤的，你用 U 盘装 Win7,8,10 的时候，从开始安装到安装完毕都是在一个小 PE 里完成的啊，  可以 SHIFT+F10 调出 CMD 来弄弄其他的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>base: 杭州</p>\n<p>level: p6-p8</p>\n<p>团队急需 Java 开发.</p>\n<p>电商基础链路,服务淘宝消费者与商家.</p>\n<p>有搜索引擎相关经验加分.</p>\n<p>联系方式:\nmxl73@outlook.com</p>\n</div></div>"], "reply": "10", "tittle": "阿里巴巴-杭州-共享事业部招聘", "comment": ["招 android 么", " 抱歉, 暂时不招. 这边是做 server 的", "补一下 JD, 仅供参考, 非硬性要求.\r", "\r", "1.负责具体业务功能的开发，深入发掘业务需求，独当一面，包括需求分析、架构设计和代码实现； \r", "\r", "2.持续优化系统架构，提高系统在高并发、大流量下的容灾容错能力，保证系统的高可用性（性能、安全、容量）； \r", "\r", "3.通过梳理和抽象，沉淀通用性的平台或服务能力，发现和解决存在的技术问题，并在具体的业务场景中进行验证推广；\r", "\r", "岗位要求:\r", "\r", "1. 本科及以上学历，计算机软件或相关专业； \r", "\r", "2. 3 年及以上使用 JAVA 开发的经验， JAVA 基础扎实，理解 io 、多线程、集合等基础框架，对 JVM 原理有一定的了解，对 Spring,ibatis,struts 等开源框架熟悉； \r", "\r", "3. 熟悉分布式系统的设计和应用，熟悉分布式、缓存、消息等机制；能对分布式常用技术进行合理应用，解决问题； \r", "\r", "4. 掌握多线程及高性能的设计与编码及性能调优；有高并发应用开发经验； \r", "\r", "5. 掌握 Linux 操作系统和大型数据库（ Oracle 、 MySql ）；对 sql 优化有丰富的经验； \r", "\r", "6. 学习能力强，适应能力好，有强烈的责任心，具备耐心 /细心的品质；\r", "\r", "7. 有搜索引擎相关经验加分.", "招 C/C++么", "招保洁员么", " 业务项目都是 Java 写的, 暂时没有 C/C++的岗位需求.", "招 python 么", "加班吗？", " 暂时没有 python 岗位, 抱歉.", " 按照我个人的情况来说, 工作日会加一些班."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>做了这个测试 <a href=\"http://bf0a4c6e6a83.ih5.cn/idea/yFPvHAV\" rel=\"nofollow\">http://bf0a4c6e6a83.ih5.cn/idea/yFPvHAV</a>\n测出来原来我最适合的是 Vue ~~</p>\n</div></div>"], "reply": "51", "tittle": "前端框架那么多，哪个前端框架适合我呢？", "comment": ["我测出来竟然是 Ember \r", "不科学呀", "楼主头像消失了？", "救命啊，喜欢 vue ，他给我推 ng ……", "vue", "终于测出 vue 了 哈哈哈哈哈 ╮(￣▽￣)╭\r", "感觉套路好深，好像第二题如果选 D 就比较容易出 vue", "也是", "竟然是 Ember , 可惜我比较适合 vue 哈哈", "vue 。。然后最下面有个 vue t 恤广告。。", "心理测试跟技术选择有毛线关系", "vuejs...", "react 哈哈", " 之前我也做过类似这种的心理测试，原理就是先让你认认真真填一通，最后在枚举选项中，随机生成一个，结论写的模凌两可，大家都说很准的。", "Vue.js", "单身选个框架都处处碰壁...", "react 。。。可是我喜欢 vue 啊！！！", "jquery", "我是 ember", "Ember..", "改名成 “哪个前端框架不适合我” 又能发一次贴了 2333", "测出来是 Angular 2.0 😄 可是我正在学习 React 呀！", "我是 ember...", "ember +1 ... 作为后端表示没听过。。。", "同 Ember 。。。话说上 V2EX 的应该很容易被测出是 Ember 吧，毕竟网站下面写着👇： World is powered by solitude", "Angular 2.0", "我也测出 vue", "vue.js", "react ……只有我一个？", "iOS 表示测出 Angular 2.0", " react +1", "vue.js", " 我也是喜欢 vue 然后给我推 ng  [", "额 react", "react+1 ，话说我平常确实玩 react 多一点...\r", "这种测试好无聊", " 感觉又不太像完全随机的耶", "页面居然是 gwt 写的， Java 程序猿恐成最大赢家", "react ，测完发现是卖 T 恤的", "其实我最早玩 backbone 的..", "Ember.....\r", "\r", "想学前端框架?首先,你要有个女朋友... ", "  \r", " ", "vue.js", "vue...满意", "测了几次都是 Angular ，然而我比较喜欢 Vue ，测这么多次是想试试 React ，唉:-(", "测出来 React ，然而 react 的全家桶有点累。", " 一步一步来呗，一开始难，熟悉之后就好很多了，配上 redux 用效果不错。", "angular 2...", "我们团队的表示测得好准 (～￣▽￣)～\r", "大家好奇怎么做到的.....", " 题目中带着心里暗示吧，或者是随机生成，其实以上都是我乱猜的", "vue", "想的 VUE 推荐的也是 Vue :dog:", " 和心理测试题一样有套路的呀~~", "填了两次，一次是乱填的，竟然都是 ng2\r", "我不服， 233", " 天意~"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>规则 1 ，把 css 放在 head 中加载，这个能让页面更早的开始渲染，同时能够避免把 css 放在页面尾部，因为可能会出现闪屏，就是如果 css 加载的很慢， DOM 结构先出来， css 后出来，然后页面样式突然发生变化，这就叫做闪屏，最后能包含关键渲染路径的样式：首屏</p>\n<p>规则 2 ，把 js 放在 body 末尾加载，因为 js 它本身会阻塞 HTML 的解析以及 css 的渲染。</p>\n<p>规则 3 ，不要使用 css 的表达式， css 的表达式一方面是兼容性问题，虽然看起来比较强大，但是实际性能开销很大，因为它实际的执行频率是远远超出预期的，如果使用了 css 的表达式，可能导致页面卡顿。</p>\n<p>规则 4 ，就是用外链的方式引用 css 和 js ，可以有效的减少 HTML 的体积，并且外链了之后， css 和 js 作为静态资源可以给他设置合适的缓存的响应头，能够合理的利用浏览器的缓存。</p>\n<p>规则 5 ，压缩 js 和 css ，在生产环境里面可以删除这一类文件不必要的注释、空白，并且对 js 进行变量名压缩，混淆压缩，对 css 进行属性的合并，然后选择符的合并。</p>\n<p>规则 6 ，不重复加载 js ，因为在 IE 里面，还是会多个请求，不能发挥缓存优势，并且你重复加载 js ，意味着要更长的 js 执行时间。</p>\n<p>规则 7 ，让 Ajax 请求可缓存， GZIP 、内容压缩都可以适用。</p>\n<p>规则 8 ，用 GET 方式发起 Ajax 请求，因为 GET 方式可以缓存，如果是获取信息的，那么 GET 方式是更语义化的。</p>\n<p>规则 9 ，是组件延迟加载，保障页面的关键的静态资源优先加载，因为并发数限制，还有一些延迟加载的典型手段叫做“ lazyload ”。</p>\n<p>规则 10 ，减少 DOM 节点数，那么 DOM 节点这个规则是非常容易理解，就是如果你的 DOM 结构非常的复杂，那么浏览器在解析的时候，进行布局、渲染时计算量更大，那么少一点的话，浏览器的开销会少一些，渲染布局的速度就会快一些。</p>\n<p>规则 11 ，是避免在页面中使用 iframe ，因为 iframe 它会阻塞父文档的 onload ，即使它是一个空白的也会比较耗时。</p>\n<p>规则 12 ，要减少 COOKIE 的体积，因为 COOKIE 在每一次请求，就是跟主文档相关的，只要是同域的， COOKIE 的全部内容都可以带上。</p>\n<p>规则 13 ，使用无 cookie 域名加载静态资源，可以减少静态资源加载时的网络传输量，静态资源加载通常是不需要 cookie 的，阿里在精简 cookie 后，每年节省的流量 TB 记。</p>\n<p>规则 14 ，是减少 js 中的 DOM 访问，这个有一些常见的优化手段，就是对于你查找到的元素，缓存在 js 的变量中，后面就不需要在去查找 DOM 树了，还有节点增加是合理利用 documentfragment ，然后在把 documentfragment 放在实际的 DOM 树里面，然后还有一个建议是不要用 js 去频繁修改样式。</p>\n<p>规则 15 ，使用更只能的事件监听机制，基于事件冒泡的委托机制，你可以有效减少绑定的数量。</p>\n<p>规则 16 ，就是你要学会使用常见的图片优化手段，因为对于代码来说，图片的体积很大，常用的图片压缩工具有“ PNGCrush ”“ JPEGTRAN ”“ PNGQUANT ”， JPG 图片的就常用的渐进式编。</p>\n<p>规则 17 ，就是不要在 HTML 中缩放图片，你实际上在页面上用到多大图片，那你就提供适当尺寸即可，不然它只会徒增渲染的开销。</p>\n<p>规则 18 ，就是不要把图片 SRC 置空，因为在主文档的浏览器里面都会引发额外的请求。</p>\n<p>规则 19 ，任何资源尽量在 25k 以内，因为 iPhone 无法缓存 25k 以上的资源。</p>\n<p>原文链接： <a href=\"http://www.maiziedu.com/wiki/frontend/property/\" rel=\"nofollow\">http://www.maiziedu.com/wiki/frontend/property/</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "浏览器性能优化的 19 条规则", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>一直想深入了解以下计算机视觉，但是天天忙项目、年年忙项目快荒废了，最近重新拿起，决定一定要学完了。</p>\n<p>有没有同学愿意一起跟 udacity 的课程的 <a href=\"https://www.udacity.com/course/introduction-to-computer-vision--ud810\" rel=\"nofollow\">https://www.udacity.com/course/introduction-to-computer-vision--ud810</a></p>\n<p>一起学习，好有动力，做点小 demo 什么的。</p>\n<p>我的软件超级棒， CS 的，但是信号什么的就不行了， Matlab 信号工具箱没有用过，如果有信号处理或者图像处理的朋友，求结伴学习的！</p>\n</div></div>"], "reply": "10", "tittle": "入计算机视觉领域，求同学、同伴", "comment": ["你从 ML 方向做 CV 的话，可能也不需要信号方面的相关知识吧", " 课程上这么说！", " 现在，不懂点信号，简直要失业的节奏！", "正在看 CS231n, ", "\r", "\r", "不谢 这个分支 repostory 会补充依赖的数学部分，好的话帮忙 star 吧", " 内容确实够丰富！", "搭车同求 cv 和 cg 的～ ", " \r", " \r", " \r", " \r", " \r", "\r", "因为和本地仓库冲突，重新建库提交之前的 star 都没了 各位看官觉得好的话麻烦帮忙点下 star\r", "更新：前两天提交了 C++ 和 线性代数、矩阵分析部分的教材", " 已 star"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>关注 Node.js 的同学们，周四晚上有一场 Node.js 的讲座，欢迎感兴趣的同学过来看一下~</p>\n<p><strong>主题是什么：</strong></p>\n<p>Node.js 开发漫谈</p>\n<p><strong>都会讲哪些内容：</strong></p>\n<ul>\n<li>Node.js 的历史沿革；</li>\n<li>Node.js 在 web 开发中扮演的角色；</li>\n<li>Node.js 的优势和劣势；</li>\n<li>Node.js （及 web ）程序员的进阶发展之路；</li>\n<li>Node.js 的发展及应用趋势；</li>\n<li>《 Node.js 开发实战》学习过程中的常见问题</li>\n</ul>\n<p><strong>分享嘉宾是谁：</strong>\n@桂林 Mongoskin 作者， Node.js 早期研究者，《 Node.js 开发实战》课程讲师</p>\n<p><img alt=\"桂林直播 banner.png\" src=\"http://upload-images.jianshu.io/upload_images/2093363-e9210d975b679f83.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\">\n直播时间：\n本周四（ 12.22 ）晚上 20:00 - 21:00</p>\n<p>参加方式：\n扫描下方二维码，备注「桂林直播」加群</p>\n<p><img alt=\"boolan_boo.JPG\" src=\"http://upload-images.jianshu.io/upload_images/2093363-9e4839ce33313051.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p>欢迎大家留出时间来听~</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "[本周免费直播] 关于 Node.js，你想了解的都在这了", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>a.txt 内容如下\n#this is 0 context\nabc\nddd\n#this is 1 context\nxxx\nxxxx\nxxxxx\n#this is 2 context\n1213</p>\n<p>上面的 a.txt ，我想变成三个文件，靠#分割，变成\na_0.txt\nabc\nddd</p>\n<p>a_1.txt\nxxx\nxxxx\nxxxxx</p>\n<p>a_2.txt\n1213</p>\n</div></div>"], "reply": "7", "tittle": "shell 一个文本文件->多个怎么写？", "comment": ["我去。。。\r", "\r", " #this is 0 context \r", "\r", "abc\r", "\r", " ddd\r", "\r", " #this is 1 context \r", "\r", "xxx \r", "\r", "xxxx \r", "\r", "xxxxx\r", "\r", " #this is 2 context \r", "\r", "1213", "a_0.txt \r", "\r", "abc \r", "\r", "ddd\r", "\r", "a_1.txt\r", "\r", " xxx \r", "\r", "xxxx \r", "\r", "xxxxx\r", "\r", "a_2.txt \r", "\r", "1213", "sed 's/ #/\\n/g' a.txt", " 这个不行吧。。", "用 AWK 吧= =\r", "awk '{if( $0~/^#/) x++ ;else print > \"txt\"x}' file", " niuB,感谢！", "echo $a | tr '#' '\\n' | while read line;do echo $line > youfile.txt;done"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>比如我启动了这个软件：</p>\n<pre><code> anyproxy -l 2333 -d www.example.com:80\n</code></pre>\n<p>就会把 2333 端口收到的所有的流量（多种协议）转发到指定 ip 的端口上？</p>\n<p>想参考下代码。</p>\n</div></div>"], "reply": "7", "tittle": "有没有什么任意流量转发的开源软件？", "comment": ["ssh -D 满足你需求", "直接 iptables 转发端口请求", "通常只支持 tcp 和 udp 协议的转发， socat 是最常见和通用的转发工具之一", "socat", "我用下面的这个跑了个 ss 转发的：\r", "socat, iptables", " \r", " \r", " \r", " \r", " \r", "\r", "多谢各位，我去看下代码。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>武汉游戏公司诚聘\njava 服务端开发工程师、 cocos2d 开发工程师\n1.计算机或者相关专业毕业，大专以上学历\n2.三年以上工作经验</p>\n<p>福利待遇：\n1.薪资： 12k-18k\n2.年终奖金+餐补+房补+团队活动+各种带薪假期等\n3.弹性工作时间制，周末双休</p>\n<p>欢迎各位自荐和推荐啊。</p>\n<p>招人招到有点要疯的意思了。\n年底好难招人啊，怎么破？</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "招聘、招聘、招聘。招 java 服务端和 cocos2d 开发工程师", "comment": []},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"http://36kr.com/p/5059419.html\" rel=\"nofollow\">http://36kr.com/p/5059419.html</a></div>"], "reply": "2", "tittle": "用学习逃避成长，听新知缓解焦虑", "comment": ["沉浸于信息景观来排遣中产阶级上升焦虑", "现在的所谓自媒体推广的这种二三手的知识，也就当个通勤伴侣罢了，还真有人当学习了？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>今年用一句话来总结就是：瞎混、瞎胡闹，虽然立志要入了计算机视觉的门，但是，三天打鱼两天晒网的，没有坚持下来。</p>\n<p>不过偶然见间翻到了一本书，忍不住推荐给所有的 V 友们，译言网的 十亿消费者：  <a href=\"http://www.yeeyan.org/articles/view/freeyiyu/4152\" rel=\"nofollow\">http://www.yeeyan.org/articles/view/freeyiyu/4152</a></p>\n<p>看完后，我理解了当年为什么要一部电话要 5000 人民币，背后居然有一个淳朴工程师在那么艰难的推动自己的理想，手段很 Low 但是很正值。</p>\n<p>以前读的社会契约论、国富论、什么经济学，现在看来，那些都是多少有些偏离这个国家的情况的，在这本书中记录和剖析的太深刻了，难道说比尔盖茨看过这本书？佩奇太忙没看过。有一句话太经典了，如果你看到了一幕最刻薄的二人关系，那么这两个人一定是中国人！ 完全以人际关系为中心的社会，什么专业性、职业操守都是幌子！记者这个职业不过是为了进入商界的垫脚石！！！以和为贵，却各怀鬼胎，总结的太透彻。</p>\n<p>可怜我心中挥之不去的工程师之魂，都是打红警打得，对里面的工程师印象太深刻了。再看看书中描绘的种种，顿时感觉误入歧途，光阴虚读！！！ 人人人</p>\n<p>以前以为士大夫才有理想，看完这本书后才发现，那些有理想的人，也不得寻找生存之道，其经历之艰难，恐怕只有当时明白个中滋味，他们的心中才是真正的坚强。顽强的继续理想，但是不要背离事实，这就是我看到的。</p>\n<p>技术不是决定性的，这真是一个可怕又神秘的事实。</p>\n<p>华尔街人才达到的斗争级别，中国的普通人之间就已经达到了！</p>\n<p>推荐所有程序员读一读？</p>\n<p>各位，大家读到什么好书了，拿出来晒晒！</p>\n</div></div>", "<div class=\"topic_content\">看来这里的 V 友，都不看书呀，天天刷首页来着，哈哈哈！</div>", "<div class=\"topic_content\">在未来的半年里面，我只想把计算机视觉这门课程学完了，有没有一起的 V 友？\r<br>\r<br><a target=\"_blank\" href=\"https://www.udacity.com/course/introduction-to-computer-vision--ud810\" rel=\"nofollow\">https://www.udacity.com/course/introduction-to-computer-vision--ud810</a></div>"], "reply": "6", "tittle": "三天不学习、赶不上刘少奇，话说，大家今年都读什么好书了，拿出来晒晒？", "comment": ["《 SRE:Google 运维解密》虽然现在有些概念还理解不了，但长见识了", " 我很好奇，在 google ， CM 和运维人员是不是比开发更厉害？", "如果只能推荐一本, 就是这本了: The Conservative Intellectual Movement in America Since 1945, ", "team geek", "学习这门课有什么前置要求吗？例如数学知识或者信号基础什么的？", " 奔着好玩去，有什么需要了解，就适当深入一下，好玩就好！"]},
{"content": ["<div class=\"topic_content\">收入是按税前还是按到手？\r<br>\r<br>一般到手可能就只有税前的 7-8 折~</div>"], "reply": "24", "tittle": "大家怎么定义收入的？", "comment": ["(税后+提出来的公积金) / (每月为工作出门在外的小时数+晚上在家工作时长)", "算时薪 ，（到手+公积金+医保-房租）/（工作时间+交通时间）", "这个在会计方面已经有定义了罢..", "算时薪，互联网公司给程序员 2 个人的工资干 3 个人的活这种情况太多了……", "到手工资加公积金和股票，算到工资性收入里。炒股收益和房租，算财产性收入里。", " 这个有意思", "按资产算，一年七位数", "收入=资产-费用，应该没记错。遁 QAQ", "公司每个月发到你卡上的数目", " 不要忽略通勤时间哦", "算时薪是很尴尬的,因为时薪的意思是多干多赚钱,但是显然大部分互联网公司不会因为加班而多给工资,所以主动加班反而会导致时薪的减少. 你并不具备\"多做多赚钱\"的话语权.", "老婆每月留下来的一个浮动四位数.", "除去生活成本后，能购买当地房产的平方数", "每天的收入，税后折算成在当地可以购买巨无霸汉堡的个数。", " 浮动就不太科学了，我是税后工资的 20%，你也可以建议调整一下家庭制度，有利于促进自己去赚更多的钱。每多赚 500 就可以到手 100 哦", "还是时薪靠谱，说真的很多人觉得 IT 高薪，但是真正计算时薪的话，其实只能算一般", "办签证、办信用卡的时候，以睡前年薪为“收入”\r", "自己花钱的时候以税后月薪为“收入”", " 那你们是不是把午休时间也排除了", "算了下时薪 12 块钱 真是惨", "我自己的定义；每月工资=吃多少次沙县 \r", "以 26 一次的沙县来说，我每月工资能吃 150 次，我预感今天完了还能涨 11.5 次沙县", " 午休算工作时间", "net income", "每个月花掉的钱", "定义？年底结余才叫收入吧"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>Shuttle ： A simple SSH shortcut menu for OS X</p>\n<p><a href=\"http://fitztrev.github.io/shuttle/\" rel=\"nofollow\">http://fitztrev.github.io/shuttle/</a></p>\n<p>自从用了之后，节省了不少时间，推荐一下。</p>\n<p>另外征集一下各位的利器是什么： <a href=\"https://www.wxappr.com/topic/122\" rel=\"nofollow\">https://www.wxappr.com/topic/122</a></p>\n</div></div>"], "reply": "54", "tittle": "推荐一款 ssh 工具 -- shuttle", "comment": ["用的系统自带的 ssh", "ssh_config 足够了", "ssh_config 加上 alias ,=ssh", "没有什么好用的 ssh ，公司的服务器不准许 使用密钥登陆，只能用密码，我就把密码用一个文件存起来::>_<::。", "感觉给命令加个别名更快", " +1", "常用的到~/.ssh/config 里配置 Host\r", "然后将下面的加到 Bashrc\r", "[ -e ~/.ssh/config ] && complete -o nospace -W \"$(perl -ne 'print \"$1 \" if /^Host (.+)$/' ~/.ssh/config)\" ssh", " 为什么公司不允许密钥登录？", " 如果不介意安全性的话。。 sshpass", "ssh auto login manage, 支持密码， 密钥。 开源 Python + Shell 实现。 [GitHub]( ", ")", "多用户操作服务器的情况下，貌似一般都不用密钥登录", " 运维说使用密钥怕你离职之后还把公钥存在服务器上，然后导致你离职了还可以访问公司服务器，还有就是怕你密钥泄漏。\r", " 就是不敢用。", "mosh, 用过就离不开了", "我们也不能用密钥，都是用动态令牌，每次输入动态密码进入跳板机，然后再进服务器。然后我就把令牌绑在自己钥匙上了。", " 用 expext 写个脚本   密码写到这个脚本里去      \r", "登陆的时候直接运行这个脚本就行了", "  .ssh/config 不行么, 为啥要\"把密码用一个文件存起来\"", "xshell", " 是 expect 吧？我去搜了一下，貌似还不错。\r", "\r", " .ssh/config 只能指定用户名， host 等等，不能配置密码。", " 是的   手机打字    不小心按错了没发现……", "服务器上存本机公钥，然后 .bashrc 加别名 alias my-server='ssh name@ip_address'  :smile:", "密码可以用 sshpass...   keyauth 写个 path 就行,, 我自己是撸了个小脚本来着,,, 能用就行", "alfred + ssh workflow 自己改写了下 首次使用上传本机公钥", "哈哈，就用这个，感觉很好用。看老司机用的都感觉不好用。", "自带的..", " 你用文件存密码 和用 sshpass 不是一样的么，反正都会暴露密码", "正准备下，发现之前已经装过了......还没用过", "iterm2 profile+expect 脚本，支持快捷键、标签颜色。", "不能用密钥的情况下，我自己手写 applescript ，调用 item 登进去的", "  无感知 动态 更替 RSA key pairs , 如果有人离职，估计还没走出公司大门，全线生产机器 RSA key paris 已经更替一次了", " +1  当然是大名鼎鼎的 iTerm2 了", "iTerm2+Zsh, 补发一张图, 除了高亮, 补全, 自动登录, 还可以加标签注释(badge), 关键是要知道当前工作在哪个主机上,不然标签一多傻傻分不清楚\r", "\r", " ", "secureCRT  =。=", "都不如 win 上的 mobaxterm 好用，可以就是没有 mac 版", "其实就是把 ssh_config 配置能完成的事做了个菜单栏工具,这么理解对吗?", " 感觉你们运维的想法有点不对啊\r", "\r", "运维说使用密钥怕你离职之后还把公钥存在服务器上，然后导致你离职了还可以访问公司服务器\r", "===================================================\r", "离职了管理员直接把账号停用就行了,如果这个都不想做,用密码登录不是存在一样的问题吗?\r", "\r", "还有就是怕你密钥泄漏\r", "===================================================\r", "密钥泄漏最多就是能登录到服务器,要进行特殊权限的操作还得输入密码啊.相反,登录和 sudo 都使用\r", "密码的话,密码一旦泄漏就完了.\r", "\r", "\r", "当然我说的这些是建立在每个人用一个单独的账号,然后特殊权限用 sudo 来干的基础上的.", "ubuntu    pac", " 最好的方法应该是发一个智能卡，离职上交\r", "反正私钥也导不出来", "  你们需要的是一个堡垒机", "未注册的 zoc", "不能登上 ssh, 然后做一些事啊, 给一些输入啊\r", "\r", "ssh xxx && command on remote server", "推荐一个 zoc", "用过一小会儿 shuttle ，不习惯然后退出， 过段时间发现自己不用就删了。 \r", "机器上装了个 vSSH Lite 可以保存两个 profile , 要更多，可以选择付费的 pro ， 貌似就 30 多块钱，不贵，但是觉得自己 mac 用的频率不高，所以一直没买。\r", "但是虽然频率不高，但是每个礼拜总有几天会用一下，所以最后还是选择 sshpass ， 存了几个 sh 文件， 放在一个目录，然后整个目录固定到 dock 中，鼠标点击以下就弹出列表， 选择就可以用 iterm2 打开， 相对来说已经很方便了。", "一般都是 ctrl+r", ".ssh/config\r", "  Host hk1\r", "    blahblah\r", "\r", "  Host jp1\r", "    blahblah", " 这种问题用多用户+用户组完美解决啊。", " 问下,动态密码进入跳板机,这个是怎么实现的?有这方面的开源软件还是商业服务?", " \r", "看看这个。。 \r", "\r", "\r", "\r", "\r", "这才叫强大嘛。。", "alias 完美解决哈！", "alias +1", "alias +2", " 那个本机的要怎么弄出来？？？", " 这个该咋弄,也是通过跳板机+动态密码,加了一层跳板机就没法了更不要说有动态秘钥了,请问有这方便的教程嘛？不然机器太多,实在是太麻烦了,谢谢", "我是这个软件和 config 一起，但是基本上 Config 为主", " Preferences - Profiles - General - Basics -  Badge  在这里设置"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>RT 比如进度条 list 选择之类的.  有框架什么的么. 找了下没找到</p>\n</div></div>"], "reply": "17", "tittle": "炫酷的 CLI 程序界面是如何画出来的?", "comment": ["libncurses", " node 实现的，代码不多。", " \r", " \r", " \r", "多谢各位 我看看去", "  这个项目炫酷炸了啊", "\r", "\r", "同问，有哪些可操作的 cli 程序？比较熟悉的， vi 编辑器， ntsysv 、 top\r", "还有哪些好用的？", " 炫酷炫酷！", " 厉害厉害.真很酷", " 膝盖已碎……", "跟字符画有点类似，这里有个字符画大全 ", " 这个真的厉害", "如果交互要求不高的, 就显示个进度条的, 可以就用输出控制, 反复盖写相应区域来实现. 如果真正的 cli 程序,要求界面, 菜单, 交互这种的, 还是用 curses 库吧.\r", "\r", "我曾经弄了一个带进度显示的小玩具, 你可以参考:\r", "\r", " \r", "那太多了, 随便说俩\r", "ranger (以前用过,还行), \r", "fpp(现在用,非常方便)\r", "screen, tmux(离不开)\r", "man 程序(也离不开吧)\r", "htop(我觉得比 top 好用, 自从 top 更新了后, 看着也不错了, 但还是不如 htop)\r", "emacs(只用过 1 星期)\r", "alsa 设置程序, 以及很多设置程序\r", "还有一些 linux 安装的程序, 我记得好像 ubuntu 6.0.4 版本是 cli 的, 很久不安装 linux 了不太清楚了.\r", "\r", "还有你说的 vim, 时刻在用啊, 包括写这个回复..呵呵", "来个 go 语言的， ", " nice", "进度条有 2 种实现\r", "1. \\b 　退格\r", "2. \\e[x,yH 定位\r", "\r", "不过交互好难做，一不小心就跑偏了。。。\r", "\r", "不如用 curses\r", "\r"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"http://www.wiz.cn/new-service-rule.html\" rel=\"nofollow\">http://www.wiz.cn/new-service-rule.html</a></p>\n</div></div>"], "reply": "77", "tittle": "为知笔记开始收费了，截止到 17 年 1 月 1，个人免费版将不再能同步", "comment": ["很好，可以卸载它了， 这个一刀切搞的挺好的，", " 很好，最大程度减少无用客户。", "我靠这么狠，看来只能换有道了", "回去就把这破玩意删掉", "然而我的 VIP 到 19 年，大部分时间都是用积分换的……延长一倍", "额。。。。。。。。。。。\r", "说卸载掉的都不是真爱。\r", "一年 50 软妹已经是非常良心的价格了。\r", "\r", "个人还是喜欢印象+OneNote+pocket 。\r", "印象家的真贵......", "一年 50 ，够便宜的了吧", "Keep 用的好好的", "买买买，刚买了两年的", "有什么好替代的产品吗？", "一直用的有道云笔记，生怕哪天有道也开始收费了。", "人家开发好东西是需要成本的      \r", "收费也无可厚非    \r", "国人都被免费给宠坏了", "买了 4 年", "已经买了", "哈哈 我用 leanote 搭在自己的私有云上。", "很好，排除了部分不愿付费的低级用户", "60 块钱很良心，值得付费享受更好的服务。", "国产软件好像都是走个路数，先把“终身免费”喊出名气，等人够了就可以割韭菜了。我不是说收费不好，但是这个玩法让人有点不舒服。\r", "链接是 14 年的软文吧，应该是最近一次提个人用户“终身免费”。 ", "表示听都没听过", " 感觉都是这样的。让我想起了 360 的云盘", "引用之前看到的一句话“美好的事物值得你的付出”，习惯性免费思维不可取，毕竟人家是在开发产品又不是在做慈善。如果你不愿付费，换个别的工具即可。", "印象笔记是我唯一可以忍受花一分钟打开的网站", "很早之前就买了的 Ulysses ，免费的 icloud 空间够你记录一辈子笔记了。再者就算加上照片，空间不够能可每个月掏 7 块买 icloud 服务也是个不错的交易。\r", "\r", "奉劝一句，别把时间浪费在免费这件事情上，最终会让你付出双倍代价。\r", "\r", "想想 evernote ，越做臃肿，功能复杂还不能同步。", "收费不是问题,问题是突然搞这么激进的收费,怕是为知会不会撑不下去...", "我为知用户、笔记近 1000 ，三年多了。 其实付费不可怕，可怕的是突然公司变向。 免费服务突然变成收费的，以后收费服务突然停服退钱？如果出现这种情况属于单方面违约吧？ 这不是钱的问题！不考虑这些，就说现在免费版，外链单独收费，现在买了外链的用户问到这个问题怎么办、为知说兑换三个月 VIP ，这可以理解成单方面违约了吧？  我也不知道自己咋办。。。 可能近期会买个 VIP 用，但是我以后还是会考虑换服务或者自己搞个服务了。 个人观点，仅作个人感慨。", "那是不是 web 版的也用不成了，还是仅仅不能客户端 同步", "\"同步速度提升和搜索优化将会陆续完成。\"\r", "他家的服务总的来说可以，但是不及有道。\r", "我是从 wiz 转向有道的，这个新闻到时没什么感觉", "折腾了这么多年，还是觉得自己的最靠谱，群晖的 note station 挺好用的，直接把 Evernote 导入就行了", " ～～那也是醉了，不过他可以说，我让你免费用了，你只是无法上传而已。。 VIP 功能，这好像也没什么不对哈。。", "主要问题在于线路吧，\r", "之前维持着免费的低速线路，\r", "却因为体验不佳而导致口碑下降。\r", "对这种小厂商来说，口碑是一切，\r", "忍痛舍弃免费用户，维持住口碑，\r", "也是一个方向。", "树莓派跑 leanote 足够用了", "刚买了两年的，可能那些动辄上千的软件我买不起，但是两年一百块钱我还是能承受的。", "会员还有好几年~~", "挺好的，刚刚看了下公告，说是公告发出前，已将仍为 VIP 的账户的 VIP 有效期翻倍了。看了一下账户 2034-08-12 到期，靠谱~", "会员没办法换了吗？\r", "一直想方设法要要数据迁移到 onenote ，但因为还能用一直拖。现在要好好搞一下了。", "这年头就是这样啊，一直收费的东西降价或免费了，一片欢呼；原先免费的东西开始收费了，和用户说拜拜~ 哪怕是一模一样的产品", "公司这么做，估计也是迫于无奈", "2021-03-13 到期", "现在收费软件越来越普遍，这应该是以后的趋势。免费的软件广告满天飞，个人并不觉得有什么好", "一股浓浓的，要跑了的味道。", "vip2024 年才到期， 但是还是想再买两年支持下", "抱歉，第一回听说这个", "只想知道怎么导出到 onenote 或是印象…", " 价格好贵，看了下要 19980 。你真有钱。", "现在来说有道蛮好用的", "可以，我还是很喜欢为知笔记的，付费继续用呗", " 请教 leanote 有免费的私有云方案吗？", " \r", "\r", "\r", "\r", "\r", "软文中说：\r", "“ 为此，为知笔记为个人用户提供终身免费服务”\r", "\r", "\r", "收费可以，但是最开始喊的口号再后来打脸，岂不是如同公孙一样了，我作为一个比较鄙陋和低俗的人，认为做人不能那么无耻和无底线，做公司应该例外吧，随便怎么不要脸应该都是没问题的。", " \r", " \r", " \r", "\r", "\r", "leanote 私有服务器部署以及 note station 内网部署都是很好的解决方案，表示正在双管齐下。", "支持为之收费，希望讯飞收费，好的软件就要有自然直观的营收点。 vip 用户可以放心用下去。", " \r", "\r", "\r", "如果 wiz 最初不四处叫喊“终身免费”的话，我也支持收费这种天经地义的商业行为。", " 因为流量贵了。还有许诺加薪升值的老板，几个兑现了。再看看 google 许诺我可以永久免费用的 rss 阅读器。其他的各种网盘不能用。有啥一惊一乍的。妄想可以一直免费的都是是自己的问题。", " \r", " leanote 好像没网页剪辑功能，也不知道如何跟其他网页剪辑工具结合使用，相比其他笔记软件这恐怕是很大的不足。", "已经买了 vip 价格还能接受吧。", "触不及防啊", " 弄个 frp 或者 ddns 之类的打个洞， note station 外网也同样能用", " \r", "\r", "我有一种比丑的思维就是说只要有类似的丑或者差不多也未必更丑总之只要有借口就总可以找到借口。\r", "\r", "\r", " \r", "\r", "好主意，确实是很好的解决办法，而且不仅 note station ， file station 也是可以外网用的，这样就成了低配版本的私有云了。", "小公司的还是不用为好，他这个软件当年在印象笔记还没进入中国的时候用过，然后软件崩溃一次，然后数据全丢了，然后 坚决不再用他这个软件了，最开始这软件是免费的。", " \r", "\r", "这个网页的解决思路，我使用 MWeb 实现了一个不太完美的替代：将 HTML 以 Markdown 粘贴到 MWeb 中，然后复制 Markdown 去 Leanote 。", "最初用的印象笔记，现在都不用了", "这样明显的打脸真的好么？\r", "\r", "“为知笔记为个人用户提供终身免费服务”\r", "\r", "要不你开始的时候就说清楚免费的功能细节限制，不然你就不要喊这句话。", " 同有一千+的笔记，看着这 vip 价格还算厚道，打算先续 1 年。暂时找不到同类支持 markdown 和代码格式的云笔记", "买啊， linux 下面就这么一款良心的笔记软件，不买我对不起用了这么多年的 Linux ！", "为什么乃们都不用印象，嫌慢的话国区版啊。", "那么问题来了。\r", "各个笔记 年费 对比。", " 你要这么想也没办法啊。", "有道云笔记，支持 markdown", " 有道不支持导出要命", "onenote 再买一个 gem 插件，凑合着用一下。。。", "  今天删了好多琐碎的笔记，我的笔记会定期整合，删了有 300 多条整合过笔记， 100 多条已读网页。 还剩 500 条。 VIP 我还是会买，不仅仅是便宜，是我根本不会花时间转移笔记，虽然我大部分笔记都是 markdown 但是用着后怕。 这种杀鸡取卵的方式让我对后续为知笔记运营的状况表示担忧。 后续考虑来个基 hub 的私有仓库😂  ，符合我的需求。", "能坚持到现在已经超出了我的预期，只是对它的未来表示担忧。", "感觉有道云笔记比这个稍微好点诶\r", "功能多\r", "关键是有个手写输入", " 没花一分钱，源代码 github 上公开的，下载下来自己编译安装，家里有外网 ip 和常年不关的小主机，安装一个问题不大，放自己硬盘上还没有安全问题。有能力开发插件的可以自己尝试开发定制。", "从 360 云盘到最近的为知笔记，让我明白，要享受免费服务的同时也意味着要承担失去服务的风险。", "价格算良心的了", "我用 google docs", "貌似无法导出笔记了啊"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>观察下面的表格</p>\n<pre><code>   B1 B2 B3 B4\nA1 9  9  8  3   10\nA2 2  6  4  4   40\nA3 8  9  3  4   30\nA4 3  3  5  2   60\nA5 9  9  1  6   90\n   50 60 50 70\n\t\n</code></pre>\n<hr>\n<p>上表中 A1~A5 表示 5 家快递公司， B1~B4 表示 4 种商品，矩阵内的值表示快递公司运送某种商品的单价。</p>\n<p>矩阵右侧的值表示各家快递公司需要运送的商品总数</p>\n<p>矩阵下方的值表示每种商品的总数</p>\n<p>求满足上述约束条件的最小运费</p>\n</div></div>", "<div class=\"topic_content\">每一家快递公司运送货物的总数必须等于其所在行最右侧的值\r<br>\r<br>每一种货物的运送总数必须等于其所在列最下方的值</div>"], "reply": "29", "tittle": "一个最优化问题", "comment": ["多重背包问题?", "下表不是从 0 开始，差评", "感觉楼上说对了，可以试试。 这种就是背包模型嘛。", "动态规划题，╮(╯▽╰)╭  先把递归公式写出来吧，写出来就差不多了", "个人建议 不会背包 或者 背包不熟悉 ，这种题目 直接给它穷举就好了", "前面几位回答就像数学答案上面的“易得”，“显然”一样呃", "个人感觉应该是动态规化，可是我写不出来公式。。有大牛教教 我么？\r", "如果 A 只有 5 个， B 只有 4 个， 完全可以暴力。", " 这个问题穷举的复杂度是多少？", "为什么这么多人说是背包？\r", "我觉得是个费用流啊。\r", "求背包状态转移方程。", "如果商品是整数，那么是整数规划问题，有现成的软件包的", " 排列组合就好，自己算吧", " \r", "不是显然，或者易得， 刷 OJ 的人 大多都会临时突击 各种算法 ，\r", "目的是啥，不还是套路，既然出了这个题目，就证明这个问题是计算可行性的，那不就是套路了，\r", "万千世界，其实就一个套路 就可以解释，万物所有的规律 包括 牛顿定律 啥的 都是套路，\r", "这题就算不是 DP 也跟 DP 差的八九不离十，", " \r", "\r", "但是穷举有一个问题，要排除无效集\r", "穷举的思路 是针对限定条件的，例如 \r", "\r", "   B1 B2 B3 B4\r", "A1 9  9  8  3   10\r", "A2 2  6  4  4   40\r", "A3 8  9  3  4   30\r", "A4 3  3  5  2   60\r", "A5 9  9  1  6   90\r", "   50 60 50 70\r", "\t\r", "这里 10 40 30 60 90 就是一个限定条件，\r", "\r", "显然可以通过枚举计算出  10 40 30 60 90 ，分别 由 4 个整数组成的 排列组合，\r", "\r", "这样就枚举出来 所有 A1 快递公司所能 运送 4 种商品的 条件集合\r", "\r", "快递公司的运送不同商品的结果集计算复杂度 O(n4)\r", "\r", "貌似还有更优的算法，不过我了解过（如果有知道的 可以告知我一声）\r", "\r", "A1 计算次数是 （ 10 ） 4 次方\r", "A2 计算次数是 （ 40 ） 4 次方\r", "..\r", "A5 的计算次数是（ 90 ） 4 次方\r", "\r", "依次下来 通过过滤\r", "就能得到所有快递公司 运送这 4 种商品的可行性集合，\r", "（但是这个可行性集 并不满足货物数量的限定条件）\r", "\r", "然后再从这个集合中，找出 符合（ 50 60 50 70 ）的集合\r", "\r", "\r", "最终从这个合法的集合当中 排序获得最大值即可", " \r", "这个问题 其实只要上过高中就能解，但是通过限定条件穷举出 合法集，是一种非常傻逼的行为，\r", "在会算法的程序员来看（我真不会多少算法），这种方法有点 Low 假如问题规模变大了，几乎是很难解的出来", "DP 的思想 其实就是通过转移方程，将一些不必要的计算结果集 给排除掉了", "再次强调，通过 X Y 的限定条件来穷举合法矩阵集的最优解  是非常 Low 的行为，\r", "\r", "如果有 人知道此类问题的算法叫什么名字 麻烦请告知我一声，（除了 DP ）", "看起来像是线性规划（", "好像叫 单纯形法", "华罗庚主持编写那本绿色封面 运筹学 上有", "有种运筹学作业的既视感", "啊不好意思上面鼠标截下来了\r", "这个题网络流的点数是 $O(n + m)$，边数是 $O(nm)$ 的，鉴于网络流的复杂度都比较高，所以大概只能跑几百的数据。", " 图中的(a, b)表示容量为 a ，初始流量为 b 吗？", "容量为 a ，费用为 b 。", "典型线性规划问题，用 GLPK 写一个 model 定义文件，秒解。", "122", "啊啊啊啊，竟然回答也需要铜币！重新回答一次吧\r", "数学模型：\r", "*******************************并不造如何上传公式或者图片**************************************\r", "matlab 求解：\r", "function [f]=transport(x)\r", "f=0;\r", "C=[7 1 1 6 3 3 7 6 9 7 9 5 4 2 5 8 7 1 3 9];\r", "for i=1:20\r", "    f=f+x(i)*C(i);\r", "end\r", "end\r", "\r", "lb = [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];\r", "ub = [Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf];\r", "x0 = [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];\r", "Aeq = [1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0;\r", "       0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0;\r", "       0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0;\r", "       0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 1;\r", "       1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;\r", "       0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0;\r", "       0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0;\r", "       0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0;\r", "       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1];\r", "Beq = [30 90 30 60 70 30 50 40 20];\r", "[x,f] = fmincon(@transport,x0,[],[],Aeq,Beq,lb,ub)\r", "\r", "结果如下：\r", "x =\r", "\r", "  1 至 13 列\r", "\r", "    0.0000   39.1780   30.0000    0.8220   20.8220    0.0000    0.0000    9.1780    0.0000    0.0000    0.0000   50.0000    9.1780\r", "\r", "  14 至 20 列\r", "\r", "   30.8220    0.0000    0.0000    0.0000   20.0000    0.0000    0.0000\r", "\r", "\r", "f =\r", "\r", "  560.0000"]},
{"content": ["<div class=\"topic_content\">背景 : Android 程序员，有几个 Spring + SpringMVC + myBatis 项目经验， Spring-boot 也玩过一点。会用，懂一点基本原理。\r<br>需求 : 计划年后回归做 Java EE ，所以需要一些书来提高姿势。\r<br>问题 : 如何进阶？</div>"], "reply": "14", "tittle": "如何提高 Spring 水平？有推荐的书吗？", "comment": ["官方文档", "大概说说：\r", "《 spring 源码深度解析》 这书\r", "看看下面这些：\r", " spring data jpa \r", "Aphache shiro\r", "Echarts (这会用就可以）\r", "redis \r", "nginx\r", "Linux 会就更好", "楼上说的已经很全面了~补充个 maven~\r", "\r", "\r", "多年经验的话，就要从整个架构的层面思考了~\r", "比如说写一个集群管理系统，或者是实现自己去实现一个 zabbix\r", "有一个 master  管理 node~\r", "这样子如何设计呢~", "说实话， Spring 的官方文档写的真是好。。。看完之后不是大神也是 Spring 小神了", "书的话推荐《 Spring 实战》", "实际不到两年开发经验 \r", "maven 和 gradle 都属于会用的水平 gradle 相对更熟点\r", "Echarts 比较熟 原来做过数据可视化的产品 前端会 jQuery 了解 Angular\r", "redis rabbitmq kafka 这些准备接下来学习下\r", " nginx 该如何学习？以前只是稍微配置过一点。之前一直使用 Win 近几个月才切换到 Mac 如何深入学习 Linux ？顺便问下 为何要学习？\r", " 架构层面的东西真没考虑过 一直都是怎么开心怎么玩 所以学的用的很杂", "Nginx 大概知道如何配就可以了。毕竟两年经验，实际工作中也很少会让你去搞。\r", "\r", "Linux 短时间没法深入，如果打算年后找工作，重点放在 java 的基础上。\r", "面试官一般问的问题：\r", "基础：集合， IO ，并发问题，线程\r", "项目：针对你简历上写的项目，还有你负责的模块。\r", "其他是加分的而已。\r", "就算你经验不够，基础好，还是很多人要。工作 3 、 4 年的人很多基础很差的！很多只会用框架而已。", "Spring in action 刚看完（感觉这本书没有文档好，但是比文档精炼一些），在看 spring 技术内部。感觉这本书写得不是很好（但我觉得作者水平还是有的）\r", "\r", "我也还在摸索，自己的方向是看源码，搞清楚 AoP 和 IoC ，掌握各种常用的模式", " 源码比较庞大 好像比较难系统的看 有什么经验分享吗？", "《 spring 揭秘》。不知道为什么现在居然买不到实体书了。 ioc 那一部分刚看完，讲的真的挺透彻的", "敢问，为什么走回 JavaEE 呢", "最近也在看 spring 的源码 , 姿势水平还不够高看得懂局部看不懂整体设计 ,也就说知其然不知其所以然...有点挫败感.", " 打断点、配合书看。弄清楚目标，不要漫无目的就好", " 做一般的 app 开发很容易到瓶颈，再深入一点又不知道会了之后能干什么，发展路线也不如 Java 清晰，而且在废都 Android 的需求量太小，看招聘网站的数据， Java 岗位数量是 Android 的 6 倍。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>#自动化操作 windows 下某一客户端软件 比如操作 QQ 的登录 具体步骤是 打开 QQ 输入 QQ 号和密码 点击登录，想通过脚本来操作的话，这个过程有什么实现方案吗？</p>\n<p>QQ 登录只是一个案例 具体的是这类操作 能否通过脚本来实现 求赐一个方向</p>\n</div></div>"], "reply": "10", "tittle": "windows 下类似登录 QQ 之类的操作有什么实现的方案吗？", "comment": ["按键精灵\r", "AutoIt\r", "Ranorex\r", "QTP", "模拟鼠标键盘操作即可", "keepass ？可以自定义按键，只要你能纯键盘输入，就能自动输入。", "可以玩玩 arduino ，硬件模拟键盘", "不知道楼上用按键精灵试过登陆 QQ 没，我用 dvoroak 键盘布局，用的 autohotkey 实现。其他软件都可以自如地用， [除了 QQ 和微云的登陆界面] 。貌似这两个登陆界面都“反”改键软件。出于安全考虑？\r", "\r", "所以我猜你可以自动化登陆别的工具， QQ 你还真不行。", "autohotkey: ", " \r", "doc-en: ", "\r", "doc-cn: ", "关键字：自动化测试。只能说这么多了。", "qq 界面用的是自绘，要自动化试试模拟鼠标点击坐标， postmessagea 或者键盘消息", "QQ 的密码框是另外的窗口句柄啊..", "打算用 winapi 尝试一下了 各位"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>1.RT</p>\n<p>2.<code><a href=\"http://mp.weixin.qq.com/s/DosyzPKJFsYhkbN1Djew6g\" rel=\"nofollow\">http://mp.weixin.qq.com/s/DosyzPKJFsYhkbN1Djew6g</a></code></p>\n<p>3.22岁进外包公司，每天coding到3点，近视了；</p>\n<p>4.25岁进IT公司任高级工程师，天天坐着成了胖子，患前列腺炎；</p>\n<p>5.28岁进互联网公司担任架构师，贷款买房，同年秃顶；</p>\n<p>......</p>\n</div></div>"], "reply": "10", "tittle": "程序： D 的一生", "comment": ["有了孩子基因延续的任务不就完成了吗？死而无憾了---《自私的基因》", "不对，应该是读书的时候已经近视了……", "现在猝死了吗？", "那你们当什么程序员，回家种田啊！每次出来这样嘲讽自嘲，是不是好 low ？", "好惨...", "想起了 D 的意志", "借楼问一下，架构师一般负责什么工作？", " ....\r", " 这应该不是遗传的。。\r", " 那你想呢\r", " 0.0\r", " 所以要注重身体健康\r", " :D\r", " 招聘平台上不是都有写，在不行就去面试下。", "D 之意志～", "D 之残影"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>在优秀工程师供不应求的形势下，互联网创业公司如何组建自己的技术团队？作为招聘的弱势方，早中期公司可以用哪些手段招聘到合适的技术人才？\n不同阶段的程序员求职时有何不同特点，看中的又是哪些因素？</p>\n<p>本篇文章是简寻 CEO 何斌在虎嗅旗下知识分享平台「怒马」上直播的一堂分享课程。</p>\n<p>作为一名程序员，何斌曾打破过国际大学生超算比赛世界记录，也是一名连续创业者，亲手搭建过两个公司的技术团队，包括已经拿到红杉资本 2300 万美元的极验验证，以及简寻团队。在为简寻客户服务期间，何斌见证并帮助了更多中早期公司进行技术团队搭建和招募。</p>\n<p>本篇文章分享了何斌关于创业公司搭建技术团队的渠道、心得和一些不同观点。全全文分为四部分，分上下两篇发送，其中第一部分为上篇（点击链接可阅读），第二三四部分为下篇：</p>\n<p>不同轮次，不同策略\n被忽视招聘渠道\n像做运营一样做招聘\n程序员入职偏好</p>\n<p>被忽视的招聘渠道</p>\n<p>在聊完不同轮次公司的不同技术招聘场景后，再来看看招聘渠道的选择，主要分为免费的主动投递，付费的猎头渠道和社交渠道等</p>\n<p>拉勾</p>\n<p>更新和反馈频率，要熟知拉勾的规则，去提高招聘的效率</p>\n<p>BOSS 直聘</p>\n<p>保证足够多有效沟通，能很快得到反馈但是时间成本比较高</p>\n<p>猎聘&amp;智联&amp;前程无忧</p>\n<p>简历获取成本较低，需要与技术团队沟通，提高搜索技巧。 比如你搜索「前端」，出现的人可能非常一般，这时候可以用「 React 」代替，提高搜索精准度，因为前端项目里出现这些词的简历可能更容易导向到合适的人，所以搜索姿势需要有一些调整。</p>\n<p>技术社区</p>\n<p>如 V2EX 、 CNode:Node.js 等 BBS 社区，发帖需要体现公司的「技术氛围」「有技术大牛」「足够好的福利」「自由开放的氛围」。</p>\n<p>公司技术人员的口碑渠道：推动公司的技术人员参加各种技术讲座，形成技术口碑，也能得到不错的简历。</p>\n<p>在知乎上回答相关问题：回答人工智能，某个语言下面的的一些问题，哪怕去分享一些项目经历也是不错的尝试。</p>\n<p>把公司牛逼的项目开源到 Github 上，构建技术影响力，同时，可以针对这个项目建立社群，聚集一批对这个项目有兴趣的人。</p>\n<p>新渠道的免费服务</p>\n<p>新的渠道出现，早期会有红利期，也会提供一些优质的服务，初创企业可以多尝试</p>\n<p>被忽略的渠道</p>\n<p>●       微博\n●       知乎\n●       Github &amp; Stackoverflow &amp; V2EX\n●       各种技术活动\n●       如果是做 Research 的人，论文，研究院、学校公开的联系方式也是很好的来源渠道\n●       老简历数据</p>\n<p>猎头渠道</p>\n<p>招聘中高端的技术人员，猎头其实非常重要，我做过一个统计，一个社招人员的招聘成本至少在几千块钱到一万块钱之间。企业之所以还会花一些钱来完成这件事情，是因为沉没成本会对企业发展带来很致命的影响。</p>\n<p>在企业每个月有几十万支出的前提下，核心人员不足，对进度造成的影响是得不偿失的。我知道很多公司都有一定的招聘预算，那么，在这个前提下如何选择猎头服务?</p>\n<p>首先，猎头的价值体现在两个方面，一是代替 HR 从海量数据进行筛选的价值，这个是时间价值，他们花了 HR 本该花费的时间去做了很多工作；</p>\n<p>二是猎头能用自己的渠道找到候选人，猎头渠道有很多策略，比如他们有自己内部的简历库数据，有自己的策略去识别老的简历当中哪些比较好，会打 cold call 或者通过自己人脉的积累去完成候选人的扩张，因此筛选一个靠谱的猎头本身就是很困难的。</p>\n<p>猎头服务有 KA 模式和 PS 模式： KA 的模式，是客户导向， 猎头根据企业需求做详细的进度跟进，忠诚地为一家企业提供服务；另一种是 PS 模式， 业绩导向比如有专门的猎头找百度的人，有猎头专门找腾讯的人，还有专门找 PHP 或者 iOS 的人猎头，以人为导向，穷尽细分领域，但会把一个人卖到多个企业去，所以建议企业将 KA 猎头作为主体供应商， PS 猎头作为渠道的补充。</p>\n<p>像做运营一样做招聘</p>\n<p>大家可以发现，对中早期公司来说，组建一个技术团队，看起来是简单的招聘问题，但实际上更像运营问题，因为其中涉及的是你如何用自己的理念、水平去吸引到一群合适的人，加入公司，做一件你们共同认为有价值的事情，因此这里就涉及到一些非招聘领域的注意事项：</p>\n<p>雇主品牌\n对创业公司来说，好的雇主品牌能够带来非常好的招聘背书，能够提高「简历投递、邀约、面试到场、接受 offer 、留存」全流程数据。但好的雇主品牌绝非 xx 网站给你颁发了一个「最佳雇主」之类的称号，那没有用。</p>\n<p>雇主品牌核心是，不管实际福利也好，成长机会也好，价值感也好，一定是能让员工实际感受到的东西，只有他们感受到了，才会通过内部和外部的方式把它推广出去。</p>\n<p>一般来说，技术分享讲座 、技术活动社区、恰当的公关宣传都对构建好的雇主品牌有作用。</p>\n<p>最合适的人才是最好的\n首先，并不是公司里所有的事情都需要最厉害的人来做，因此招聘的时候可以招一些跟业务匹配而非技术顶尖的人，记住，把最好的人留给最核心的业务。</p>\n<p>其次，创业公司不要迷信大公司的人，大公司的人离职到创业公司，可能有很多原因，他们来到小公司不一定匹配，不匹配的情况下，流失的概率非常大。</p>\n<p>程序员的入职偏好</p>\n<p>不同阶段程序员的不同特点\n3 年内的工程师\n在意技术和专业成长\n希望解决技术挑战\n团队有大牛</p>\n<p>3-8 年的工程师\n有家庭压力，在意薪资和福利\n开始思考是否转型做管理</p>\n<p>资深工程师\n职位变动代价非常大，思考多\n开始从行业角度思考问题，所以会思考是继续做经理人还是去创业</p>\n<p>如何和程序员沟通</p>\n<p>用逻辑推断而不是臆想说服他们（有理有据的去说明问题）\n如果能聊技术最好，能快速拉近距离\n关注程序员自身的职业发展，为他提供建议\n交心，关心，变成朋友（帮他解决一些类似的问题）</p>\n<p>如何留住工程师</p>\n<p>1.技能\n做的事情稍高于能力\n有牛逼 leader 带\n能够在 1-2 年内技术跟随公司产品持续进步</p>\n<p>2.团队归属感\n不要把工程师只当成执行者，而是将他们当做团队一员，让他们感受到技术对产品的驱动，产生产品认同感，团队认同感，能和大家一起玩</p>\n<p>3.薪资待遇\n创业公司的待遇最好稍高于市场价</p>\n<p>4.福利（以下福利对程序员通通有正面反馈作用）\n牛逼的队友而不是猪队友\n有逼格的显示器\n有逼格的机器键盘\n人体工程座椅</p>\n<ol>\n<li>不能无条件的留工程师（以下条件下就不要生拉硬拽了）\n工程师的个人参与，已经对整个公司协作产生影响\n影响公司的目标一致性</li>\n</ol>\n<p>最后，总结一下，对中早期公司来说，以运营的思维进行招聘，是在已有「公司发展」、「舒服的工作环境」、「公司已有成员的水平」、「薪资福利」等基础上，更主动地吸引与公司匹配的优秀人才，共同为认可的事情努力，并非靠忽悠，否则来的人也不长久。</p>\n<p>毕竟，如何留住人才其实才是一门更大的学问。</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "不同阶段的程序员求职有什么特殊偏好?", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近三个月，迷上了 Python ，从觉得很 Low 到觉得很赞，现在超喜欢。</p>\n<p>在了解 Buildbot 和 Twister 后，更是喜欢，说说大家心目中 Python 好玩的地方吧。</p>\n<p>我自己自己觉得好玩的几个地方：</p>\n<ol>\n<li>python -c \"import os;import sys;各种神语句\"\n2.1 python -m SimpleHTTPServer # 简单 Web 服务器\n2.2 python3 -m http.server # 简单 Web 服务器</li>\n<li>a if 布尔表达式 else b # 超简洁语法？</li>\n<li>ipython #快速实现想法，先实验，再产品，快速迭代没法说</li>\n<li>python plus gtk # 跨平台，入门简单，喜欢没法说</li>\n<li>[1, 2, 3, 4]+[5, 6, 7, 8] #列表直接相加，超赞赞</li>\n<li>Decorators #神奇的 @</li>\n<li>async, await #爱你没法说</li>\n<li>webpy 简单轻量没法说</li>\n<li>Pycharm 超赞、超赞</li>\n</ol>\n<p>不满意的地方：</p>\n<ol>\n<li>怀念 Linq</li>\n<li>怀念 Linq To Object</li>\n<li>怀念 Linq To Xml</li>\n<li>GIL 噩梦挥之不去！！</li>\n</ol>\n</div></div>", "<div class=\"topic_content\">RedHat 正好有一个博客谈到了 Python 代码的 CodeReview 和如何更加 pythonic 的问题，值得一看:)\r<br>\r<br><a target=\"_blank\" href=\"https://access.redhat.com/blogs/766093/posts/2802001\" rel=\"nofollow\">https://access.redhat.com/blogs/766093/posts/2802001</a></div>"], "reply": "39", "tittle": "每一个 Python 粉丝心中都有一个神 Python，你心中最酷炫的 Python 功能是什么，拿出来晒晒？", "comment": ["这些都有啥啊，楼主你玩玩 Ruby 不得上天？", " 没玩过 Ruby ，唯一一次也是再改 gitlab 配置文件是碰到的。 gitlab 能在短期内起步，并且使用 ruby ，相信 ruby 一定是一门生产力超高的语言，对不对？", "之前写过一段时间的 Python ，一开始也差不多，之前一直写 Java 突然接触 Python 感觉要起飞。", "直到后来实习的时候写了半年多的 Ruby ，每天在天上就没下来", " ruby 是不是生产力超强？但是语法风格怎么样?不会跟 perl 一样吧，不喜欢 perl ，也不太喜欢 shell! 感觉 python 比较 balance 。\r", "\r", "当然，最怀念的还是丝般顺化的 C#，可惜语言的优劣是次之的，关键看环境、库、解决方案之类的，这点上 C#就不行了!", "你对 Python 这个症状，跟我前几天初看 Go 语言一样一样的\r", "我第一次用 Python 是 惊讶于 a, b =b, a 过了一年多才明白过来这不是语法糖", " 刚开始还很讨厌缩进规则，用着用着，越来越喜欢了，居然也不在乎了，真是情人眼里出西施！", " 你是被降权了么？为什么我收不到你的回复了。", "马克一下!", " 什么是降权？认为操作吗？", "exec 啊，解析执行太牛逼了，程序的逻辑运行时可以随便修改。\r", "\r", "不过要注意安全，慎用。", " 顿时就想到了 eval ，哈哈！", "python -m http.server", "正好相反，弃 Python 投 ", " core)了", " C#颜值绝对高，就是不知道你以后能不能正常上下班了？", "Let's Go.", " 我是计算机民科／业余兴趣，工作不是编程，纯粹做一些自己的东西或利用计算机程序提高效率。", "print", " 印象最深的还是%运算符了！！！", " 虽然我很想用 C#做一些事情，但是基本上我为 python 的生态系统折服了，放弃了对 C#的那份执着，我只想早下班。我需要的是一个既像 shell ，又像通用语言的东西， python 正合我意:)", "python -m json.tool\r", "唯一在用的", " 开发一个项目快速成型的话， ruby python 这些胶水语言都算生产力强吧，然而后期就有得填坑了。假如说你喜欢 py 的理由大多都是关于语法糖的，那么在这点上， py 目前是比 ruby 弱的", "python 写脚本，写内部项目比较好；如果要分布式，高响应，高吞吐量的还得 java ，虽然 java 比较繁琐", " 为什么 dropbox 用 python,  tornado 、 twisted 都不行吗？是不是没用好？", " 对于各种神语言，我还是离远一点好了！", "修改一下成 Ruby 的\r", "\r", "ruby -e \"puts 1\", 简单服务器 ruby -rwebrick -e'WEBrick::HTTPServer.new(:Port => 3000, :DocumentRoot => Dir.pwd).start'\r", "and or # 超简洁语法？\r", "pry #快速实现想法，先实验，再产品，快速迭代没法说\r", "shoes # 跨平台，入门简单，喜欢没法说\r", "[1, 2, 3, 4]+[5, 6, 7, 8] #Array 直接相加，超赞赞\r", "Decorators #神奇的 @\r", "fiber call/cc #爱你没法说\r", "sinatra 简单轻量没法说\r", "RubyMind 超赞、超赞", "  Decorators #神奇的 @ <= 这个忘记修改了， 应是元编程。。", " 最后一个是 RubyMine 吧", " 嗯， 写错了。。", "念念不忘的 import this", " ruby 超像自然语言", " 我感觉 python 已经很自然了，不能想象 ruby 是什么语法了！", " 不懂", " python 我也经常用 and or 当?:用", "没意思", "就喜欢这些彩蛋： ", " 这种写法有没有坑啊? 总感觉不如 x if (bool) else y 清晰", " pry 还是远远不能跟 ipython 比的，虽然作为 repl pry 更棒，但是 ipython 背后是一大堆的科学计算工具 ……其他都差不多， Ruby 元编程更爽", " 暂时没发现，至于逻辑是否清晰，习惯就好了", " 听你说的这么酷炫，我花了点时间了解了一下 ruby ，看起来挺有特色的，特别是 web 开发的部分。我现在的印象还停留在 google maps base on ruby on rails （书名忘了）这本书的例子里面，当年确实被她的生产力震惊了。 \r", "\r", "github 和 gitlab 都是用的 ruby ， web 开发的话，估计生产力确实牛牛！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我用 electron 做了一个简单的 app ，监听 sass 文件，然后调用 node-sass 将其编译成 css 。</p>\n<p>但发现 node-sass 不支持 electron ，错误如：</p>\n<pre><code>&gt;Node Sass does not yet support your current environment: Windows 64-bit with Unsupported runtime (50)\n</code></pre>\n<p>github 上提问， contributor 说 node-sass 就是不支持 electron ，也没有支持的打算。我又搜到了一些模糊的答案，比如重新编译说明的。</p>\n<p>但宝宝此刻好像一个麻瓜一样。编译什么的，完全不懂。求解决过的大神指点下。</p>\n</div></div>"], "reply": "7", "tittle": "node-sass 不支持 electron，求解决方案", "comment": ["换 stylus 能解决么？", "何必呢。。。直接 gulp 不好么。。 windows 都自带 ubuntu 了", " 我也不想用 electron ， 但是没办法。 \r", "现在的问题时如何解决 node-sass 的支持问题。", " 没试过啊。谢谢你的建议", "为什么要集成在 electron 里面，它明明只是开发时候用的。", " 这肯定有人做了。看看别人怎么做的吧。 ", " 类似这种吧。", " 这几天在 github 上看了相关讨论。\r", "解决方案就是重新编译。\r", "\r", "不过，我总是编译不通过，各种报错"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>现在我需要判断一群人在一年之内是否完成了 n 天的目标。</p>\n<p>完成一天的目标有以下两个必要条件：</p>\n<pre><code>A ：在指定的建筑内某一具体的屋子里出现 （屋子是固定的）\n\nB ：使用了某个 App 例如 ABC （假设 ABC 存在并且我是其中的工作人员，能够拿到数据）\n</code></pre>\n<p>如何优雅的判断？</p>\n<p>btw：ABC的功能可以随意增加，甚至在屋子里放二维码让ABC去扫  都是可以提出来的</p>\n</div></div>"], "reply": "7", "tittle": "［讨论贴］如何优雅地完成这个判断？", "comment": ["房子内放置一个 ibeacon ，调整功率刚好覆盖目标区域\r", "\r", "然后 app 启动时，会读这个 beacon ，上报给服务器，连同自己的身份信息\r", "\r", "服务器做统计", "不就是 APP 签到么。。。\r", "很简答， 就是查看发送 app 的 ip 。如果是内网 ip ，则 OK ，否则，不 OK ，", " 当然，可能还需要其他数据做参考，比如位置。", "按照你的思路来想：\r", "屋子里面放一个显示器，显示动态生成的二维码。\r", "app 扫的时候提供身份信息。", " 涨见识了   果然众人拾柴火焰高     ibeacon 非常适合解决这个问题，，，感谢", " B 条件是 app 签到   但这里还需要 A 条件的地理位置签到做交集   所以这种办法其实实施起来会有点麻烦", " 对  这种就是最直接的方式   在看到 1 楼 @", " 的回复之前  我一直都是这么考虑的"]},
{"content": ["<div class=\"topic_content\">1.x 还适合入吗， 2.x 怎么样？话说明年直接上 4.0 了。还是选择 vue ？各位给个观点参考。</div>"], "reply": "30", "tittle": "新手应该从 angular 的那个版本入手？版本更新太快，有点看不懂。", "comment": ["vue 2.x 开始会好点", "vue2 +1", " \r", " \r", "话说今年 vue 的发展上了高速", "新手就上 2 吧， 2 -> 4 没有太多包袱", " 嗯， 4 会兼容 2 ，不过 1.x 就比较尴尬了", "vue2 一天上手", "2 个 ng 都挺尴尬的，我挺喜欢 ng1 ，但是那个脏检查的却有性能问题\r", "所以我选择了 vue1", "不会前端一系列，表示，只用 angular 1 就好。。。", "本来以为我是第一个推荐 vue 的，结果发现好多人，所以 vue 已经深入人心，选 VUE 吧，淘汰 ng", "个人比较喜欢 vue 和 react", " \r", " \r", " \r", " \r", "感觉明年 vue 会大规模应用", "html/css/js （基础）\r", "jQuery 、 jQuery-ui （曾经流行）\r", "React （未来趋势）、 Vuejs", "选 2 把，从 2 开始比较好， 1 到 2 版本改动太大，简直就是伤筋动骨， 2 以后只会迭代优化，不会有这么大的改动", " 有道理，以前听一个人讲 1.x 和 2.x 会共存，没有冲突。", "  jq-ui 现在没什么人用了吧", "感觉题主单纯是来黑 angular 的。。。。", " 😢，没有黑的意思。我之前接触过一点 1.x 的东西，现在 angular 的版本的问题让我有点动摇要不要继续 1.x", " 是没有冲突，而且官方也出了一些从 1 升级到 2 的方法，但是并不能完全使用，还有 1 现在还有人维护，但是个人并不看好 1 ， 1 没有突出的重点", "react ?", "ng2 做大规模项目更合适", "2 到 4 相当于 2 到 2.1 只是命名规范变了而已。\r", "要学当然是 2 啦。\r", "至于 Vue 和 react ，看看呗，喜欢就再深入学习一下嘛。", "建议学 angular2  很成熟了", "angular4 会兼容 angular 2", "vue 吧，快上车，来不及了！！", " 嗯，明白了。感谢🙏", " \r", " \r", "明白了，选择 angular2 。谢谢", " react 学习成本感觉会大一点", "  😃", " 其实单纯 react 的学习成本低一点", " 感觉真心不大"]},
{"content": ["<div class=\"topic_content\">原文好像被删掉了\r<br>这有一个备份\r<br><a target=\"_blank\" href=\"http://www.haodocs.com/article/58511f43a553256240446006\" rel=\"nofollow\">http://www.haodocs.com/article/58511f43a553256240446006</a>\r<br>\r<br>原作者是张子阳，一个.net 专家\r<br>这是他的博客\r<br><a target=\"_blank\" href=\"http://www.cnblogs.com/JimmyZhang/\" rel=\"nofollow\">http://www.cnblogs.com/JimmyZhang/</a></div>"], "reply": "16", "tittle": "最近几年创业失败的一些总结", "comment": ["楼主好人，我当初 feedly 上有看到，点进去想看时就已经提示被删除掉了。。", "转别人的文章经过同意了么", "“创始人初期别忙着老往外跑，先关注家里面的东西，如果等产品出来了，发现和自己想的有出入，这就很成问题了。因为有时候，产品经理并未能完全领悟创始人的想法。”", "“在一家公司干得好，然后寻求更好的机会和平台，叫跳槽；在一家公司混不下去了，然后想换一家公司来改变环境和缓解压力，叫落荒而逃”。", "“大体上，我想做点一开始就能产生现金流的事情，不要过度依赖资本输血。如果资本一停止供血，公司就倒闭，那真是浪费生命啊（除非能做到 C 轮或以上，已经把股份变现了一部分，至少可以弥补一些损失）。”", " 这话真呵呵", " 如果只有链接，应该是可以不经过文章作者统一的吧。不然那些类似 hacker news 的网站都有危险。", "讲真 大部分经历都不叫创业  结论也都是浅藏辄止带来的感想  没有借鉴意义", "好文啊~虽然不是很懂那些轮", "虽然人人都有个创业梦，但这事真的要谨慎的，我记得王兴有个我很认同的观点，鼓励创新就是鼓励失败，因为大多数创新必定以失败告终，创业又何尝不是，只见成功的光鲜，却少有人关心一将功成万骨枯的惨烈，更少有提及多少后浪也被拍在沙滩上。不要放弃梦想，但也别在自己不擅长的领域做梦，且行且珍惜吧。", " 只是链接而已，真有道德。。。", "95%的人，好好上班是正道。", "最近看到某人说的一句话：中国最大的泡沫不是房地产，而是创业公司，年流水 400 万的公司估值 2 亿。呵呵。", " \r", " \r", "目标网站不是原作者的。\r", "“这有一个备份 ”", " 呵呵，世人皆醉你独醒的节奏，但从 2000 开始，虽然纪录过泡沫，经过多次高潮和低谷，但估值的“游戏”，已经很成熟，除了死掉的公司，基本没有输家！\r", "\r", "你认为你比一堆投资公司，以及投资人背后的一堆 LP 更聪明？", "  真不错，，，个人经历过两个创业公司，其实有些经历深有体会。"]},
{"content": "", "reply": "1", "tittle": "有没有什么好玩的、前沿的、新的、热门的技术或者项目", "comment": ["目测没有，专业技能搞定在扩展，对个人发展比较好，否则，就乱、浮躁。"]},
{"content": ["<div class=\"topic_content\">最近在开发个网站，加了 RSS 订阅功能，有什么办法在本地测试 RSS 订阅服务？就是想看看它显示出来的东西是什么样子的。有没有满足这个需求的 RSS 订阅器或者浏览器插件？</div>"], "reply": "目前尚无回", "tittle": "如何在本地开发服务器测试 rss 订阅服务？", "comment": []},
{"content": "", "reply": "71", "tittle": "问下各位资深代码大神 是不是习惯了一种编辑器并且自定义后，再换一款其他的编辑器 是个很难下决心的决定？", "comment": ["是的.也没必要", "不是“资深代码大神”。我的问题是：为什么要换？\r", "分割线\r", "emacs 万岁", "换编辑器还好,换电脑才真是麻烦,磨磨蹭蹭大半年才能用新电脑开始工作", " 大半“年”  666 XD", " 因为旧电脑还能用啊", "不是大神，但是习惯了 sublime 的快捷键真的好用啊，用习惯了就感觉 pycharm 的快捷键各种不够，装 vim 插件又会和 ide 自带的有很多冲突。不过还是得用 pycharm ……编辑的慢一点无所谓啦。", "从 webstrom 换到 atom 的过程非常痛苦，好多插件都得自己折腾，心累。", "eclipse 换 intellij 也没花多少时间，换了之后发现生活如此美好。", "1. 为什么换？\r", "2. 如果是更好用的工具，为什么不换？", "你这是要挑起战争啊", "鼠标也是很难换其他型号了", "换了 WebStorm 以后就回不去了。。。\r", "\r", "JetBrains 大法好", "换编辑器要一起换键盘啊，换了 hhkb 还好意思不用 vim 吗。", "sublime - vim - atom - vim - emacs", "换前想想自己为什么要换。", "如果有更顺手的就换", "Pycharm-atom-vim-spacemacs", "从 Android studio 换到 Eclipse 简直想死 一个月了还没适应", "vim - emacs - evil", "vim jetbrains. 其他的 spacemacs 在尝试 处于不懂状态", "看性格吧，基本上各种主流编辑器和 ide 我全用，就是把快捷键调成一样就行了", "等你需要 ssh ，根据各种情况可能被迫要学会 vi ， vim ， nano 啥的， 233", "Vim 又不占 control 键，有啥冲突啊！没有 vim 插件的编辑器 /IDE ，难以接受。好在基本都有。", "感觉 vim 主流 IDE 全部通吃啊， 爽的不行", "换编辑器的原因是因为有更好的出现了，虽然要新学习，但是磨刀不误砍柴功", "个人认为主要学习成本在于快捷键的切换，其他好像没什么吧", " 不同的编辑器代表不同的思维方式。不但是快捷键。\r", "Emacs 和 vim 都很优秀，只能看爱好选了", " 你为什么要堕落？居然用 eclipse ,安卓的老爸 google 都不用 eclipse 了。再说安卓以后还是不是用 java 写都不知道。😄，所以用 java 写的 eclipse 一点优势都没", "你这是明摆着要挑起战争啊。\r", "\r", "vim 好，其他全是垃圾，我干嘛要换。", " C-a C-d C-u 还是比较常用的", "   为什么想从 subliime 换到 vim", "我换个电源插座都要适应大半年", "写 golang (不是大神)\r", "sublime -> vim -> atom \r", "现在对 atom 很满意  ( 听说 jetbrains 出 golang IDE 了 : )", "折腾是因为对现状不满或还有可以调教的空间，不过一旦找对感觉自己感觉爽了就懒得再换了。包括手机桌面上哪个图标该在哪个位置，早中晚饭该吃哪家餐馆等等。\r", "然后我用 webstorm 和 vscode ，快捷键配得一样。", "现在虽然觉得 VSC 很好用，但是为了习惯了自定义 ST 的这些功能，没必要也不能换。。。", "用着 vim ,看到 atom 很漂亮起了异心...就把 atom 的快捷键搞成 vim, 偶尔用用", "等着 neovim 分离出 vim 后端, 一统江湖", "不是", "曾经各种折腾编辑器，后来 vim 也不插件了，裸着凑合用就行了。", "不用换, vim 已经渗透到各个 编辑器 /IDE 了", "vim", " vim 插件功能欠缺，对 split pane 的支持不够好，基于 tab 管理文件的方式不方便", "     \r", "使用 sublime 时间最多, 可能我还没有遇到我觉得最好的编辑器吧，尽管功能什么的已经很强大了。", "一直用的 sublime text ，感觉其他的都没法配的像 st 那么好看，颜控，哈哈", "菜刀，砍刀都是刀，何必这么纠结呢", "不难，但是必要性有多大？没什么必要就还是用原来的吧，毕竟顺手。", "从宇宙最好的 IDE Visual Studio 切到 JetBrains 家以后,忍受不鸟把快捷键和主题配色全改回 VS 的了...", "sublime text -> atom, 换得很开心", "是的…… Sublime 用顺手了，换 VSCode 都花了好几天……各种不习惯键位，插件", " 从 Android Studio 换成 Eclipse ，这不是逆行么", "kate 转 vscode 的表示\r", "\r", "我就是需要一个能支持语法高亮的编辑器而已……", "不是", "emacs", "atom 使用中， bug 多的一逼，但是没办法换别的", "在朋友的推荐下，从 eclipse 换到 vim ，过程很痛苦，结果很美好", "说什么什么编辑器好看的，你们不配评论编辑器！\r", "\r", "妈的那个优秀的编辑器不能定制界面？\r", "Vim 不行吗？ Emacs 不行吗？ st 不行吗？ JB 全家桶更不用说了。", " 那叫堕落，😄", "怎么看到这么多人从 Sublime Text 转到 Atom 的。。\r", "Atom 真的这么优秀吗。。", " C-a C-d C-u 是 Emacs 快捷键啊……（ Vim 笑：你把 C-a 都冲突了……）", "是的，我从  Sublime Text 转到 PhpStorm 转了两次（第一次没转成功，放弃了），估计有半年时间才慢慢习惯。\r", "\r", "为此还特意写了这个 ", "尝试换 Atom 装了几个提示的插件 卡的一逼。。。。 换回去。", "用各种 IDE 都要先看看有没有 vim 插件", "我的妈呀 强烈吐槽一下 一直用的 eclipse 被坑惨了 最近转 idea 但是各种不习惯 已经严重影响工作效率了", "我在个人电脑一直用的 Pycharm 。在公司的电脑上，我用了半年的 Eclipse ，用了半年的 Vim ，现在一直在用 PyCharm 。\r", "一个编辑器到底好不好用，要不要换其他的，只有你用过了才会知道。", " 我尝试换了一次没换成功。=。=\r", "\r", "组里就我一个人用 Intellij IDEA", "我感觉很多时候是脑子不够快，不是编辑器不够好，所以差不多就行", "用了 atom ， sublime ，又转 vsc ，微软的开发工具就是不赖", " \r", "我以前组和现在组都只有我一个人用 intellij 。键位可以设置成 eclipse 键位，剩下的习惯起来就很快了， alt+enter 算是万能的快捷键。", "有那么好的 ide 不用，干嘛要去折腾文本编辑器？\r", "py 和 php 、 js 使用的 jet 全家桶和 atom 。。。", "从 vim 到 spacemacs 还好过渡挺平滑的", " @", " \r", "我也不想啊 老大说系统要带源码编译 而且其他人都用 Eclipse 我就屈服了", " 编译源码并不需要 IDE 吧"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>在你工作 /学习的过程中，真正写代码的时间有多少？</p>\n</div></div>"], "reply": "33", "tittle": "在你工作/学习的过程中，真正写代码的时间有多少？", "comment": ["平均下来，一天满打满算三小时", "去掉发呆吃饭,喝水 , 上厕所 , 睡觉,刷网站, 估计一天 3 个小时都不到~", "平均每天 2 个小时吧，主要是有时候宁愿刷 V2EX ，刷知乎也不想写代码。", "70%的时间是调试", "这要看任务是什么, 如果是新功能实现, 大概 60%, 如果是解决发现的问题, 大概 3-5%时间在写代码.", "谋定而后动……", " 我今天 90%的时间是调试", "你说打字的时间？可能 2 小时吧。加上构思 4 小时。加上 stackoverflow 大概 6 小时。其他时间在发呆和上 v2 。", "极少时间写代码", "思考占大部分时间", "大部分都是思考，调试。", "我用 wakatime 记录\r", "以前写 PHP 后端的时候平均 6 小时\r", "现在做 DevOps 不定，有时一整天都不写代码，有的时候 4~5 小时\r", "\r", "学新语言的时候 80%都是写代码，重复资料上的案例或自己的延伸练习", "学习时 80%敲代码，工作时 80%在想问题、调试等", " 这位大大是在德国做的 DevOps 吗", "大家都不开会不修生产的么?!  开会 2 小时，摸鱼 1 小时，修 /查生产 1 小时，调试 /对付测试 2 小时，思考 2 小时，最后下班了写 1 小时代码", "难道不是应该 80%的时间用来怎么写么？？不用计较真正写代码的时间把，想好了再写多好", "想好了再写比蒙头瞎写强", "工作一天八小时来算。一小时吃饭，上厕所什么的半个小时？可能午休半小时。等待服务重启的时间有大概半小时。跟别人聊天加起来一个小时。剩下的全是写代码，调试，写代码，调试", "多的话，一周可以有 48 个小时（六天班），用 WakeTime 统计。", "今天在验证问题、和产品扯皮中度过了 3-4 小时", "因为是极限编程，出去拉屎、吃饭、回复下信息，每天保持在满满 code 5-6 小时。说实话很辛苦……有的时候任务量不大，还能小左喘息。", " 在柏林。小角色而已，怎敢妄自尊大。", "80%的时间在读老代码和骂人， 20%的时间在写新代码。", "每天大部分时间是和产品撕，实际写代码时间大概 3 个小时吧，还是建立在每人打扰情况下。", " \r", "可能最多也就 3 小时吧", "除去思考、发呆、刷网页、上厕所、吃饭、午休，不到三小时。。如果哪天心血来潮特别爱写， 5 小时左右", " 这是什么软件？", " 同问什么软件？看起来不错", " ", " 同好奇，识图显示是 resumeTime", "2 hours", " \r", " \r", " \r", "对, 我是用的 resucetime\r", "\r", "\r", "这位同学厉害啊!\r", "这个统计东东我以前应该使用过, 如果记得没错应该是一个 jetbrains 的插件, 这位同学巅峰时候 11 小时在码码, 平均 6.5 小时码码\r", "佩服", " \r", "wakatime jb 系 zsh atom vim 还有 sublime ，他都有插件 \r", "resucetime 我也在用\r", " "]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzI3OTUzMzcwNw==&amp;mid=2247483732&amp;idx=1&amp;sn=a74f8d879f18aa69dadf095bd1c030a8&amp;chksm=eb4700b0dc3089a6180dec66899ec97e95cf070d79eae6f10fb397066f780d82dd6c5bebe660#rd\" rel=\"nofollow\">原文在此</a> 看看 V 站的开发者对此问题怎么看.</p>\n<p>实现一个函数, 完成 开根号 的操作, 方法签名如下.</p>\n<pre><code>double sqrt(int v, double t)\n</code></pre>\n<p>要求:</p>\n<ol>\n<li>不能调用系统库函数, 诸如 <code>Math.sqrt(v)</code> 之类的;</li>\n<li>假设计算出的结果为 <code>r</code>, 要求满足如下条件 <img alt=\"\" src=\"http://mmbiz.qpic.cn/mmbiz_png/ZMXDhhGnYibubEfzjQ6giarvS2B9rR8R92Gia9gQEWJ3zh24OshSta0vcNOtflzfunSnud3EbmgKoxohYWNY1uA6g/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1\"> (防止图片有问题留下 $|r - \\sqrt v| \\leq t $), 其中, <img alt=\"\" src=\"http://mmbiz.qpic.cn/mmbiz_png/ZMXDhhGnYibubEfzjQ6giarvS2B9rR8R929Q6zOCdgquj8YIG7Q2KCaUM3ic7abLOcxY7q4WxlTkO6WKCooA9WqCA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1\"> ($\\sqrt v$) 是真实的值, <code>t</code> 为给定的一个误差, 例如<code>0.1</code>等, 即你计算出的值<code>r</code> 要在给定的误差范围内.</li>\n<li>实现语言不限, 你条件可以比上述<strong>更加苛刻, 但不能宽松</strong>, 举例而言, 我调用你的接口 <code>sqrt(9, 0.21)</code> 返回值属于 <code>[2.79, 3.21]</code> 这个区间的任意一个都满足条件.</li>\n</ol>\n<p>其实你可以 <b>拿出笔和纸, 尝试解答一下</b> 强调一下, 一定要注意<strong>给定的误差条件</strong>, 欢迎沟通交流.</p>\n<p><a href=\"http://mp.weixin.qq.com/s?__biz=MzI3OTUzMzcwNw==&amp;mid=2247483732&amp;idx=1&amp;sn=a74f8d879f18aa69dadf095bd1c030a8&amp;chksm=eb4700b0dc3089a6180dec66899ec97e95cf070d79eae6f10fb397066f780d82dd6c5bebe660#rd\" rel=\"nofollow\"><strong>原文点我</strong></a> 是在微信上搞了一个<strong>投票调查</strong>(求投票), 微信公众号里的阅读原文是一个对该问题在面试过程中的模拟.</p>\n</div></div>", "<div class=\"topic_content\">其实, 本意是想让写一个二分的.  \r<br>说分分钟秒掉的, 很 easy 等等的同学, 能不去网上找, 现在动手写一个么. 然后再来看看写的是否符合题意.</div>"], "reply": "85", "tittle": "一道程序猿面试题目, 大家来看看?", "comment": ["牛顿迭代，这题面试要出不分分钟秒掉……", "两个思路，一是二分法逼近，二是牛顿法", "这个不就是二分法求解吗？牛顿迭代法迭代的次数可以更少，但是记得是不能根据任意的 elision 值来求值的。", "第一反应就是牛顿法, 这个比较考数学功底了吧, Leetcode 上有个基本一致的题", "这个不是数学题吗 ", " ", "牛顿法", "SICP 里面就有一个这样的例子，不过是用 Lisp 写的就是了", "看来 V 站的程序猿素质高些, 哈哈. 我也认为 2 分(至少经过提示后), 应该能写出来才对. 不过实际面试过程中, 很难有人写出来. 题目就是 leetcode 上原题稍微变动加了个约束条件.  \r", "\r", "说归说, 能 show me your code 试试吗?", "用牛顿法，公式已经忘记了，初始值远取很重要。 ", "牛顿迭代+1\r", "误差通过证明误差收敛的公式分析(这里需要知道部分变量的准确的函数值，才能给出误差的上界)\r", "sqrt.c(apple)的实际做法是把估计值列举出来，存储在数组中，然后再用牛顿迭代计算：\r", "函数式编程 用 fixed point 来解\r", "参考资料 ", "看到题目，不借助搜索引擎的情况下能想到牛顿法，但具体到代码上估计还是得查一下…", "'''\r", "function sqrt(num, ep) {\r", "  let step = (cb) => {\r", "    return (a,v) => {\r", "      let x = (v + a / v) / 2,\r", "      d = Math.abs(a - x*x);\r", "      if (d < ep) return x;\r", "      return cb(a, x);\r", "    };\r", "  };\r", "\r", "  let Z = (f) => ((x) => f((v1, v2) => x(x)(v1, v2)))(x => f((v1, v2) => x(x)(v1, v2)));\r", "\r", "  return Z(step)(num, num/2);\r", "}\r", "\r", "console.log(sqrt(9,0.21));\r", "'''", "变量 xjb 命名，函数 xjb 创建，凑凑活活写出来了。\r", "\r", "同感，这不数学题吗，哈哈。数值计算虽然经常被用到软件中，但它毕竟是用数学手段去解决数学问题。", "Newton Iterative Sqrt Method   ", "道理我都懂，可是对 v 对开根号， t 是干嘛用的？", " 最大误差。", "sqrt = ->(sq, t) { rt = sq * 1.0; rt = (rt + sq / rt) / 2 while (rt * rt - sq).abs >= (t * t); rt }\r", "sqrt.call(9, 0.21)\r", "# => 3.00009155413138\r", "sqrt.call(9, 0.0001)\r", "# => 3.000000001396984", " t 是误差，计算机开根号 也只能求解近似值", "上面的解法好像改变了精度了。\r", "\r", "按照原题要求的精度来的话，牛顿迭代和二分法的 Ruby 实现：\r", "test = ->(sq, t, rt) { (rt+t) * (rt+t) < sq || (rt-t) * (rt-t) > sq }\r", "sqrt1 = ->(sq, t) { rt = sq * 1.0; rt = (rt + sq / rt) / 2 while test.call(sq, t, rt); rt }\r", "sqrt2 = ->(sq, t) { (0..sq.to_f).bsearch { |rt| test.call(sq, t, rt) ? sq - rt * rt : 0 } }\r", "\r", "sqrt1.call(9, 0.21)\r", "# => 3.023529411764706\r", "sqrt1.call(9, 0.0001)\r", "# => 3.00009155413138\r", "\r", "sqrt2.call(9, 0.21)\r", "# => 2.993255615234375\r", "sqrt2.call(9, 0.0001)\r", "# => 2.9999834150075912", "如果让我面试做这种狗屎题，我心里肯定会说， \r", "你这套路不对，这题我平时刷的时候没怎么见过，\r", "面试时间一般也就 20 分钟-1 小时\r", "这还要人编写正确的程序出来，还不给上网查资料，\r", "这么简单的题目，写错了就没分，我操，面试官 傻逼  脑残 负分 滚出\r", "为什么说这题简单呢？因为这题 一看就是烂大街的题目 我要是做不出来 不就负分了么\r", "（虽然我能把二分整数搜索的算法记忆的滚瓜烂熟）", "public static double sqrt(int v, double t) {\r", "        assert (v > 0 && t > 0);\r", "        double lo = 0.0, hi = v * 1.0;\r", "        while (lo < hi) {\r", "            double mid = lo + (hi - lo) / 2;\r", "            double midSq = mid * mid;\r", "            double diff = (midSq - v) >= 0 ? (midSq - v) : (v - midSq);\r", "            if (diff <= t)\r", "                return mid;\r", "            if (midSq > v)\r", "                hi = mid;\r", "            else\r", "                lo = mid;\r", "        }\r", "        return -1.0;\r", "    }", "现在让我来说为什么这题是狗屎题了吧\r", "\r", "让我解的话，只能想到一种办法 ，那就是根据 t 的精度进行 暴力搜索 \r", "每次只加 0.0000001 （假设） 直到 条件不满足的时候，那么前一个解 必然是在区间范围内的\r", "\r", "这样一来，想到什么了没有，被我们暴力搜索的候选结果集 是一个等差数列\r", "既然是等差数列，那么就是有序候选集，搜索有序结果集 必然采用我大 二分搜索法 能大大降低算法复杂度\r", "\r", "关键是你 TM 的这公式，让我根本想不出这 二分搜索 递归结束的条件啊\r", "（我们平常用二分搜索 都是搜索 整数   递归的结束条件 比较简单 ）\r", "\r", "所以呢？\r", "\r", "面试的时候，如果面试者讲暴力搜索，面试官心里面会想 这么暴力？连二分都不会\r", "\r", "面试者心里想，什么狗屎题，老子也知道这题二分是能解的，但是你这破公式，我就是想不出 一个递归检索的条件", " \r", "你这错了  我瞄一眼 就知道你这错了，\r", "面试你这样写 直接负分滚出，题意都没看懂", "所以这题在没有其他数学功底等套路的情况下，\r", "最多只能想到二分搜索，但是这题 难点并不在二分搜索本身，而在于从公式中(ﾉ*･ω･)ﾉ推导出结束条件，\r", "结束条件，刷过这个题的人，肯定会心一笑，正好踩到面试官的点\r", "没刷过这个题的人，心里就骂娘了", "如果你真要考察 对二分搜索的应用能力，我建议出一个题目\r", "讲一个故事 需要应用到 3sum ，要求算法复杂度低于 O(n3) ，即可 \r", "你这题目，面试者很难 get 到结束条件", "这题解法太多了，之前网上看到过一篇文章，对比了 13 种不同的解法", "方法很多，最常见就是牛顿迭代法。收敛比较快", "出题人有数值分析的基础吗？……", "```lisp\r", ";Newton's method 二次开方\r", "(define (sqrt x)\r", "    (define (sqrt-iter guess x)\r", "        (cond ((< (abs (- x (* guess guess))) 0.001 ) guess)\r", "            (else (sqrt-iter (improve guess x) x))\r", "        ))\r", "    (define (improve guess x)\r", "        (/ (+ guess (/ x guess)) 2))\r", "    (define (abs x)\r", "        (if (< x 0)\r", "            (- x)\r", "            x))\r", "    (sqrt-iter 1.0 x))\r", "\r", "(sqrt 4)\r", "```", "还记得以前看过一个开平方的神奇常数，用一个常数值作为起始猜值进行迭代，收敛会特别快", "我想强调的不是说这道题目本身 而是说当有人给你一种思路后、能否在一步一步引导情况下思考并解决问题，最后能否将已经明白的思路变成实实在在的 code ，这肯定是较好的程序员应该具备的能力。  ", "二分就是期待的答案，然而事实上就是并没有多少人写出。 结束条件就是一个坑给刷过这道题的人埋的，没刷过的人期望是经过提示后能写出二分。", "  楼上的代码貌似有不少是满足不了题意的", "想到了当年 POJ 上面的一道打表题。。", " 是 0x5f375a86\r", "\r", "贴一段神奇的代码，据说比编译器的开方函数还快 5 倍\r", "```\r", "float InvSqrt(float x)\r", "{\r", "    float xhalf = 0.5f*x;\r", "    int i = *(int*)&x; // get bits for floating VALUE \r", "    i = 0x5f375a86- (i>>1); // gives initial guess y0\r", "    x = *(float*)&i; // convert bits BACK to float\r", "    x = x*(1.5f-xhalf*x*x); // Newton step, repeating increases accuracy\r", "    return x;\r", "}  \r", "```", "没有用到系统库函数啊 ：）\r", "```\r", "double h_sqrt(int v, double t) {\r", "  double vd = (double)v;\r", "  double sqrt;\r", "  asm (\"sqrtsd %1, %0\"\r", "       : \"=x\" (sqrt)\r", "       : \"xm\" (vd));\r", "  return sqrt;\r", "}\r", "```", "牛顿迭代法，没有查资料写的  \r", "我想到平方根倒数快速算法，基于牛顿法，是雷神 3 里的一段代码，有对应 64 位的魔法数，也有误差分析，最后取倒数行不？\r", "\r", "计算机程序的构造和解释中有非常详细的分析，由牛顿迭代法到最后抽象出的不动点搜寻，可以解决许多问题，比如求方程的根，求 PI 的值这种类型。", "def simple_sqrt(v, t):\r", "    if v < 0:\r", "        raise ValueError('domain error')\r", "\r", "    if v == 0:\r", "        return 0\r", "\r", "    # binary search\r", "    if v < 1:\r", "        left, right = v, 1\r", "    else:\r", "        left, right = 0, v\r", "    while True:\r", "        mid = (left + right) / 2.0\r", "        dest = mid * mid\r", "        diff = dest - v\r", "\r", "        if diff > 0 and (mid - t) * (mid - t) <= v:\r", "            return mid\r", "        if diff < 0 and (mid + t) * (mid + t) >= v:\r", "            return mid\r", "        if diff == 0:\r", "            return mid\r", "\r", "        if diff > 0:\r", "            right = mid\r", "        else:\r", "            left = mid", "这位 @", " 是何方神圣....", " 菜鸟一枚", "这道题我不做", "# Python\r", "def sqrt(num, deli):\r", "    val_min = num - deli\r", "    val_max = num + deli\r", "    point = 1\r", "    while 1:\r", "        lower, bigger = [point, num] if num > point else [num, point]\r", "        mid = (lower + bigger)/2\r", "        tmp = mid ** 2\r", "        if tmp < val_min:\r", "            point, num = mid, bigger\r", "            num = bigger\r", "        elif tmp > val_max:\r", "            point, num = lower, mid\r", "        elif val_min < tmp < val_max:\r", "            return mid\r", "\r", "print(sqrt(16, 0.21)) # 3.98828125", " 二分法是你期待的答案。\r", "但二分法并不是一个好的答案。牛顿迭代法的收敛速度比二分法快很多。\r", "这道题的重点不是怎么算出平方根（方法有很多），而是做误差分析。如果需要严格地证明误差小于一定的值，首先必须要有已知的参考值。所以要有数据类型允许的范围内一系列已知的答案才能完整地解这道题。\r", "ls 给出了各种方法，都被你否认；虽然也没有考虑误差的问题，但你也没仔细想过。\r", "总的来说，你不是来问问题的，你想表达的就是：“我说的就是对的，其他都是垃圾。”", "func sqrt(_ num: Double, precision: Double) -> Double {\r", "\tvar start = 0.0\r", "\tvar end = num\r", "\twhile (end - start) > precision {\r", "\t\tlet middle = (start + end) / 2\r", "\t\tif middle * middle > num {\r", "\t\t\tend = middle\r", "\t\t} else {\r", "\t\t\tstart = middle\r", "\t\t}\r", "\t}\r", "\t\r", "\treturn (start + end) / 2\r", "}", "我水的掉渣。。。。。。", " 二分想不出结束条件完全是水平不行而已，和数学功底或者刷没刷过这个题有什么关系，只要会二分，结束条件都是显而易见的。倒是牛顿法的话结束条件难以判断一些", " 跪求所谓显而易见的结束条件 谢谢", " 同求，谢谢。", "......热身算法题难度呀，这种题面 MFG 都要求直接秒的", " 区间的大小小于要求误差的时候取中值", "题主的本意是，\r", "通过一些不那么一眼就能看出来的题目 来检测一个人对教科书上的基本算法应用能力，\r", "你们又是 牛顿迭代 又是啥的，明显是刷过题 知道各种套路老司机 何必来这里折腾，\r", "\r", "这题的坑 楼主自己都说了，用二分搜索 结束条件 是新司机一下子想不到的，\r", "何况这是个面试， 20 分钟-30 分钟的样子，能把二分写对，然后还要写测试，", " show code 吧， 不打嘴炮了，请问如何计算 你所谓的区间大小", "签名都是错的，大把大把的 (v, t) 都可以让二分搜索永远停不了机。", " 能写出牛顿迭代或者仅仅这种方法当然有好的印象加分， **看中的是在交流过程中思考解决问题的能力， 不是说这道题目写出来就 NB ， 写不出来就滚蛋**。 \r", "\r", "\r", "还有其他一些喷子， 麻烦好好看看原文好么。。。\r", "\r", " \r", "\r", "你们使劲喷吧， 让喷子来得更猛一些  喷之前， 求看完原文， 及想强调的东西。  \r", "\r", "我也当做自己在吃瓜 :) \r", "\r", "不过， 可能题目文字上面描述得还可以更好。。。 对于某些人来说是比较排斥看什么公式的。", "直接用循环控制二分次数。。。精度妥妥达到要求。。。", "对于看过 SICP 的来说很简单吧。书上列题啊。", " ", "第一，这个帖子里我没看见有“喷子”，只看到了你对回复者的不屑。", "第二，牛顿迭代法并不是什么厉害的算法，这是计算方法的送分题。只要考试及格的人都会。", " 想不到的应该算是新手了，这么简单的题你要是非要胡搅蛮缠那你当我不会好了。这个题在我看来，二分基本算是白送，不需要任何前置知识，如果考虑到 double 表示的精度加点分，这个都不会还说会二分太逗了吧。\r", "牛顿法本来就没要求，只不过这个题是有一个更好的解法，面试官又没要你会。事实上面试官希望你用二分，因为牛顿法其实是不好判断精度的。", " 你有时间打这么多字，就写个 递归结束条件 都不会？", " 也就一行代码吧", " 这个代码貌似是当年 doom 的作者写的", " 这不正是应该考察应试者的问题嘛。。定义了一个接口， 让实现，说这个接口是错误的。好吧。\r", "  那我错了。。开发者头条那喷了。 我并没有任何对回复者不屑的意思。\r", "\r", ">\r", "看来 V 站的程序猿素质高些, 哈哈. 我也认为 2 分(至少经过提示后), 应该能写出来才对. 不过实际面试过程中, 很难有人写出来. 题目就是 leetcode 上原题稍微变动加了个约束条件. \r", "\r", "说归说, 能 show me your code 试试吗?\r", "\r", "\r", ">\r", "我想强调的不是说这道题目本身 而是说当有人给你一种思路后、能否在一步一步引导情况下思考并解决问题，最后能否将已经明白的思路变成实实在在的 code ，这肯定是较好的程序员应该具备的能力。 \r", "\r", "二分就是期待的答案，然而事实上就是并没有多少人写出。 结束条件就是一个坑给刷过这道题的人埋的，没刷过的人期望是经过提示后能写出二分。\r", "\r", "楼上的代码貌似有不少是满足不了题意的\r", "\r", "\r", ">\r", "能写出牛顿迭代或者仅仅这种方法当然有好的印象加分， **看中的是在交流过程中思考解决问题的能力， 不是说这道题目写出来就 NB ， 写不出来就滚蛋**。 \r", "\r", "\r", "还有其他一些喷子， 麻烦好好看看原文好么。。。 \r", "\r", " \r", "\r", "你们使劲喷吧， 让喷子来得更猛一些 喷之前， 求看完原文， 及想强调的东西。 \r", "\r", "我也当做自己在吃瓜 :) \r", "\r", "不过， 可能题目文字上面描述得还可以更好。。。 对于某些人来说是比较排斥看什么公式的。\r", "\r", "\r", "-----\r", "哪条有不屑的意思？ 如果有， 可能回复给你的语气不太好吧？\r", "再看看你的， “总的来说，你不是来问问题的，你想表达的就是：“我说的就是对的，其他都是垃圾。””\r", "其实， 你前面部分， 我**挺认同**的。 \r", "\r", "“二分法是你期待的答案。 \r", "但二分法并不是一个好的答案。牛顿迭代法的收敛速度比二分法快很多。 \r", "这道题的重点不是怎么算出平方根（方法有很多），而是做误差分析。如果需要严格地证明误差小于一定的值，首先必须要有已知的参考值。所以要有数据类型允许的范围内一系列已知的答案才能完整地解这道题。 \r", "ls 给出了各种方法，都被你否认；虽然也没有考虑误差的问题，但你也没仔细想过。”\r", "\r", "一直强调， 面试过程不是说要追求这道题目完成的答案。\r", "\r", "咱俩的讨论， 就此打住吧。 如果有冒犯你的地方还请见谅。", "简单、暴力解\r", "```\r", "function sq(v,t){\r", "  var i = 1;\r", "  var d = 1;\r", "  while(true){\r", "    if(i*i == v){\r", "      return i;\r", "    }\r", "    if(i*i < v){\r", "      i+=d;\r", "    } else {\r", "      i = i-d;\r", "      if(d < t){\r", "        break;\r", "      } else {\r", "        d*=0.1;\r", "      }\r", "    }\r", "  }\r", "  return i;\r", "}\r", "```", "|r^2-v| <= t 是推不出来|r - \\sqrt(v)| <= t 的吧，而且用|r*r - v|判断可能会溢出，应该用 r-2t <= (v-t^2)/r <= r+2t 来判断，这里假设 t^2<v ，如果大于 v ，直接返回 0 就行了。", "膜一下 @", " , 顺便楼主要的一行代码\r", "sqrt = ->(v, t) { (0.0..v).bsearch { |x| (x-t) ** 2 < v && v < (x+t) ** 2 ? 0 : v - x ** 2 } }\r", "sqrt.call(2, 0.001) # => 1.4140625", "0x5f3759df", ">>> def newton(x, y=1.0, tolerance=0.001):\r", "...     if (abs(y*y-x) < tolerance):\r", "...             return y\r", "...     else:\r", "...             return newton(x, (y+x/y)/2)\r", "... \r", ">>> newton(2)\r", "1.4142156862745097\r", ">>> newton(3)\r", "1.7321428571428572\r", ">>> newton(9)\r", "3.00009155413138", "我就来看有没有提 Carmack 的开根号，果然有", "```\r", "double sqrt(int v, double t){\r", "    double x = 1;\r", "    while(x*x -v > t || v - x*x > t){\r", "        x = x+(v-x*x)/(2*x);\r", "    }\r", "    return x;\r", "}\r", "```", "想到平方根倒数速算法", "最先想到的是方根倒数算法，其次是牛顿迭代法", "奇怪……是我想的太简单了吗……感觉二分的条件很好写啊= =||\r", "```\r", "double simple_sqrt(double x, double e) {\r", "    double left = 0.0, right = 1.0 < x ? x : 1.0;\r", "    e = e < 0 ? -e : e;\r", "    if (x < e) return 0;\r", "\r", "    while (right - left >= e / 2) {\r", "        double middle = left + (right - left) / 2;\r", "        if (middle > x / middle) right = middle;\r", "        else left = middle;\r", "    }\r", "\r", "    return left;\r", "}\r", "```", "```python\r", "def sqrt(v, t):\r", "    \"\"\"assuming v is positive int, t is positive double\"\"\"\r", "    start = 1\r", "    end = v // 2\r", "    while True:\r", "        mid = start + (end - start) / 2.0\r", "        print('start = {}, mid = {}, end = {}'.format(start, mid, end))\r", "        if abs(mid * mid - v) <= t:\r", "            # we have abs(mid - sqrt(v)) <= abs(mid * mid - v) <= t\r", "            return mid\r", "        elif mid * mid < v:\r", "            start = mid\r", "        else:\r", "            end = mid\r", "    return start\r", "```", "想太多了，二分法下，限制 x 是正整数， v 是正小数的情况下，结束条件用 |x*x - v| <= t 就行。因为我们有：\r", "\r", "t >= |x*x - v| = |x - sqrt(v)| * |x + sqrt(v)| >= |x - sqrt(v)|", "泰勒级数 根下 x+1 在零点展开", "``` java\r", "public double sqrt(int v, double t) {\r", "        double min = 0;\r", "        double max = v;\r", "        double minRes = 0;\r", "        double maxRes = max * max;\r", "\r", "        double tmpMin = min;\r", "\r", "        while (v - minRes > t || maxRes - v > t) {\r", "            minRes = min * min;\r", "            if (minRes < v) {\r", "                tmpMin = min;\r", "                min = (min + max) / 2;\r", "            } else if (minRes == v) {\r", "                return min;\r", "            } else {\r", "                max = min;\r", "                maxRes = minRes;\r", "\r", "                min = tmpMin;\r", "                minRes = min * min;\r", "            }\r", "        }\r", "\r", "        System.out.println(min);\r", "        System.out.println(max);\r", "\r", "        return min;\r", "    }\r", "```\r", "结果:\r", "3.005859375\r", "3.0234375", " \r", "``` java\r", "public double sqrt(int v, double t) {\r", "        double min = 0;\r", "        double max = v;\r", "        double minRes = 0;\r", "        double maxRes = max * max;\r", "\r", "        double tmpMin = min;\r", "\r", "        while (v - minRes > t || maxRes - v > t) {\r", "            if (minRes < v) {\r", "                tmpMin = min;\r", "                min = (min + max) / 2;\r", "            } else if (minRes == v) {\r", "                return min;\r", "            } else {\r", "                max = min;\r", "                maxRes = minRes;\r", "\r", "                min = tmpMin;\r", "            }\r", "\r", "            minRes = min * min;\r", "        }\r", "\r", "        System.out.println(min);\r", "        System.out.println(max);\r", "\r", "        return min;\r", "    }\r", "```\r", "输出\r", "2.98828125\r", "3.0234375", "牛顿法知道原理，但是公式不记得了，用二分法妥妥解决。\r", "t 就是迭代结束的条件。", "《计算机程序的构造和解释》开篇就讲这个。要不怎么说这是程序员的“圣经”呢。", " 看了一上午，长知识", "public class Sqrt {\r", "\r", "    public static double sqrtBisection(double num, double deviation) {\r", "        return bisection(0, num, num, deviation);\r", "    }\r", "    public static double bisection(double left,double right,double num,double deviation) {\r", "        double center = (left + right)/2;\r", "        if (Math.pow(center-deviation, 2)<=num&&Math.pow(center+deviation, 2)>=num) {\r", "            return center;\r", "        }else if (Math.pow(center-deviation, 2)>num) {\r", "            return bisection(left, center, num, deviation);\r", "        }else {\r", "            return bisection(center, right, num, deviation);\r", "        }\r", "    }\r", "    \r", "\r", "    public static void main(String[] args) {\r", "        System.out.println(sqrtBisection(10, 0.01));\r", "    }\r", "}\r", "结果为： 3.1640625\r", "试着做了下", "#include <stdio.h>\r", "double eps = 0.1;\r", "double abs(double x){\r", "    if(x < 0) return -x;\r", "    return x;\r", "}\r", "double sqrt(int v, double t){\r", "    double l = 0.0 , r = v + 0.0;\r", "    eps = t;\r", "    while(abs(r - l) <= eps){\r", "        double m = (l + r) / 2;\r", "        if(m * m > v) r = m;\r", "        else l = m;\r", "    }\r", "    return (l + r) / 2;\r", "}\r", "int main(){\r", "    return 0;\r", "}\r", "\r", "一般的算法竞赛者二分都是这样背的", "sqrt' :: Double -> Double -> Double -> Double -> Double\r", "sqrt' target buttom top t\r", "    | abs (result * result - target) < t * t = result\r", "    | result * result - target > 0           = sqrt' target buttom result t\r", "    | otherwise                              = sqrt' target result top t\r", "    where result = (buttom + top) / 2\r", "\r", "sqrt :: Int -> Double -> Double\r", "sqrt v t = sqrt' (fromIntegral v) 0 (fromIntegral v + 0.25) t\r", "\r", "最近刚学 haskell 于是尝试着写了下，写的很难看 献丑了 orz"]},
{"content": ["<div class=\"topic_content\">主要是要判断一个唯一用户和他经历过的页面 title 即可。</div>"], "reply": "3", "tittle": "有同学是做用户行为路径分析的吗？请教下这种路径分析的简单思路是什么？", "comment": ["加到 session 校验里", " ？你是说唯一用户 uuid 和 title 都放到 session 里面？", "不是 你要校验 session 会去读 http header 可以顺便读下 refer 这个数据"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>本文和大家分享的主要是 swift2.2 中的数组相关用法，希望通过本文的分享，对大家有所帮助，一起来看看吧。</p>\n<p>什么是数组</p>\n<p>1.抽象数据类型的一种；</p>\n<p>2.是一串有序的由相同类型元素构成的集合；</p>\n<p>3.swift 数组使用有序存储同一类型的多个值。相同的值可以多次出现在一个数组中的不同位置中；</p>\n<p>4.swift 数组会强制检测元素的类型，如果类型不同会报错，遵循像 Array &lt; Element &gt;；这样的形式，其中 Element 是这个数组中唯一允许存在的数据类型；</p>\n<p>5.数组常量不可修改元素值和大小；数组变量可任意进行增删改。</p>\n<p>swift 数组相关操作</p>\n<p>1.创建数组；</p>\n<p>2.访问数组；</p>\n<p>3.修改数组；</p>\n<p>4.遍历数组；</p>\n<p>5.合并数组；</p>\n<p>6.COUNT ， isEmpty 属性。</p>\n<p>swift 集合</p>\n<p>1.swift 提供 Array,Set,Dictonary 三种集合类型来存储集合数据；</p>\n<p>2.swift 数组 Array 是有序数据的集。</p>\n<p>实例</p>\n<p>//: Playground - noun: a place where people can play</p>\n<p>import UIKit</p>\n<p>var emptyArray = <a href=\"\" rel=\"nofollow\">Int</a></p>\n<p>emptyArray.dynamicType</p>\n<p>var someInts = [Int](count:3, repeatedValue:0)</p>\n<p>var anotherInts = [10, 20, 30]</p>\n<p>var copyInts = anotherInts</p>\n<p>var addInts = anotherInts + copyInts</p>\n<p>anotherInts[0]</p>\n<p>anotherInts[1]</p>\n<p>anotherInts[2]</p>\n<p>// 0 1 2</p>\n<p>anotherInts.append(40)</p>\n<p>anotherInts</p>\n<p>// +=</p>\n<p>anotherInts += [50, 60]</p>\n<p>anotherInts.insert(-10, atIndex: 0)</p>\n<p>anotherInts[0] = 0</p>\n<p>anotherInts</p>\n<p>let range = 0...3</p>\n<p>anotherInts[range] = [-1,-2,-3,-4]</p>\n<p>anotherInts</p>\n<p>let constantArr = <a href=\"\" rel=\"nofollow\">Int</a></p>\n<p>for item in anotherInts {</p>\n<p>print(item)</p>\n<p>}</p>\n<p>for (index, item) in anotherInts.enumerate() {</p>\n<p>print(index, item)</p>\n<p>}</p>\n<p>anotherInts.count</p>\n<p>emptyArray.count</p>\n<p>anotherInts.isEmpty</p>\n<p>emptyArray.isEmpty</p>\n<p>原文链接： <a href=\"http://www.maiziedu.com/wiki/swift/array/\" rel=\"nofollow\">http://www.maiziedu.com/wiki/swift/array/</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "swift 2.2 数组的使用", "comment": []},
{"content": ["<div class=\"topic_content\">如图 能获取到交易记录，交易记录中有交易前持仓比例、交易后持仓比例，买入 /卖出价格。\r<br><img src=\"http://ww4.sinaimg.cn/large/41783fb7jw1fazci7ed9pj20gt04x76h.jpg\" class=\"embedded_image\" border=\"0\"> \r<br>能根据这些信息计算出这个人该股交易的盈亏比利吗？\r<br>可以获取的数据还包括他时间段内的所有股票的持仓比例。</div>"], "reply": "2", "tittle": "有没有 根据某人股票交易 记录计算盈亏 的算法？", "comment": ["手动🔝", "持仓比例也是浮动的吧，会根据持仓的其它股票变动。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我们的 api 目前是这样设计的</p>\n<pre><code>/users/?page=2&amp;pre_page=20\n</code></pre>\n<p>客户端提交页数和每页的数量，服务端返回如下</p>\n<pre><code>{\n   \"code\": 0,\n   \"pagination\": {\n      \"page\": 1,\n      \"limit\": 20,\n      \"total\": 100\n   }\n   \n   \"data\": {}\n}\n\n</code></pre>\n<p>不过这样会出现数据重复或丢失。比如当前用户正在 app 翻页刷新，如果正好在后台删除了一条消息，那么就会因为数据变化导致分页时有一条数据丢失了。</p>\n<p>后来想到一个解决方案，通过 cursor 分页</p>\n<pre><code>/users/?cursor=2015-01-01 15:20:30&amp;limit=10\n</code></pre>\n<p>上面就可以解决 app 端翻页时数据出现变化的情况，不过依然会有 2 个严重的问题。</p>\n<ol>\n<li>时间戳重复会导致永久丢失某条数据</li>\n<li>如果存在筛选条件(如饿了么按照经纬度排序获取数据)，此方法失效</li>\n</ol>\n<p>对于第一个问题，我们想到使用主键作为过滤条件(主键递增),可以解决重复的问题。但第二个问题似乎想不出什么好的办法。</p>\n<p>不知道大家怎么处理分页问题，有好的建议或方案还望不吝赐教。</p>\n</div></div>"], "reply": "38", "tittle": "如何处理 api 分页导致的数据重复或丢失", "comment": ["不要搞太复杂\r", "把页面做成自动更新的，使后台对数据的操作实时反映在页面上", "你可以看看 twitter 咋做的", "学习 twitter 的 api 设计，使用 sinceid ， lastid ； 推算 page 难维护难想难写容易错。", "这个不应该是后端的事情么？\r", "脏读 可以通过事务控制来 防止", "大部分场景下不需要考虑客户端状态同步\r", "\r", "如果真的需要，可以把删除动作同步到客户端；然后分页使用 itemId 作为判断依据，而不是 page + size", " 说得对，客户端不要搞太复杂。用 itemid 来分页吧。", "用游标加长度来做参数。这种类似的 feed 流的接口，内容总在更新，客户端接口就适合游标了。", "传入数据库的 id 字段", " 谢谢，我去查一下 twitter 的分页方案。", " \r", " \r", " \r", "\r", "使用游标或 id 一旦出现筛选条件就会失效了，有没有一种通用的方案呢。", "丢了就丢了呗，你看新浪微博刷新一次直接时间起飞到上个世纪，一样股票大涨", "丢就丢了+1", "按 lastid 来分页，只适合按照时间排序类似微博这种，万一后来来个需求让你按照热度、点赞数、评论数来生序降序就呵呵了", " 对啊，我担心的问题就在这里。按照 id 分页，一旦将来增加排序需求的话完了。", "我们就是动态排序的,按照 Redis 里 SortSet 得分从高到低\r", "当时想到个分页方案是以得分作为游标,这样每次翻页的时候获得得分更低的指定条数数据.\r", "而顶贴的时候得分会更新得更高,不会出现重复的问题,\r", "但是可能会漏掉几条翻页过程中被顶上去的帖子.\r", "\r", "不过这个方案没通过,最后还是用了传统分页+客户端对近几页的帖子 ID 去重", "个人觉得只能是按照 id 排序来进行分页，包括美团在内的公司对于多维度排序的处理也只是将主要纬度的数据分别建表，按各个纬度的 id 进行排序分页", "这有什么影响吗？不要做的太复杂。", "为什么不按照时间戳呢", "  如果这个列表还掺杂着排序的操作呢(比如在后台设了权重值)。", "办法是有，数据库与缓存做 diff 比较，但是颇为复杂。\r", "写文一篇 ", " \r", "  排序之后必须要拿第一页， itemId 是被忽略的", "分页，连网易的微博都做不好，你还想做好？太天真了~ [手动滑稽] ", "数据库读写不分离一下吗？", "的确没有太好的办法吧...\r", "一般都是用 SELECT * FROM table WHERE sort_field > last_id ORDER by sort_field LIMIT size.\r", "要么就前端处理重复,后端每次多返回一些数据...", "看 xx app 的分页那叫一个烂，之前遇到过你说的问题，当时偷懒，让客户端对重复数据进行处理 /捂脸", "题外话  强烈建议  下一页不要客户端拼参数，服务端的接口中直接指定 next url", "一般都是按毫秒级的时间戳来分页的，别想太复杂", "你看看豆瓣的评论怎么分页的", "晚上刷百度贴吧时，发现贴吧的分页做的很差，经常连续很多都是前面已经出现过的。\r", "这个问题不是那么好解决，或者说没那么重要", " 目前看来还是无法用简单的方法去处理分页问题。不过像 feed 流这种业务场景，倒是可以用 twitter 的 since_id 和 max_id 来处理，因为 feed 数据本身就是有序的(发布时间)。不过一旦出现其他排序条件，普通的方法还是得跪。", " 为什么不要客户端拼参数呢? 这一版的 api 我们目前还没正式使用，目前打算服务端返回一个\"next\"字段取代\"page\"，当然还是由客户端这边提交过去。", "取排序后分页最后一项，将参与排序的字段拼接成一个 next ，客户端下次请求的时候把 next 作为参数回传到服务端，服务端通过这个字段计算出下一页。\r", "```\r", "?next=&size=\r", "```\r", "```\r", "{\r", "  list:[],\r", "  next:\"\"\r", "}\r", "```", "逻辑删除，然后返回给客户端的时候不显示出来就好了吧？\r", "或者直接在服务端删除，请求 20 条数据，只返回 19 条就好啦", "多少无关紧要 请求 20 条 返回 22 条和 17 条都没什么大的关系 逻辑上没有问题就好了\r", "\r", "对于用户过滤这种可以考虑第一页的时候就把结果的主键给放 redis 的 sortedset 里 后面如果新增可以在缓存期内无视 而删除则无非是多了一个而已", "分页逻辑天然就有这个问题，最好的方式是接续查询，用上一页最后一条记录作为查询下一页的条件，这样查出来既不会多也不会少。", " 我倾向 所有需要分页的 API 外层都有一个 next 字段，里面是下次页的 url ；至于为什么不要客户端拼，很简单，你要是这个版本按照 id 分页 下个版本按照时间分页， API 能分分钟改掉并且完全不影响客户端~", "你就不能给每条消息分配一个 ID ？然后拉到的消息和已有的 ID 相同就 update ，否则才 insert ？", " 你这种处理方式会有问题，返回的总数与实际数量不符。对于一些严格的场景，这样是不行的。\r", "如果需要严格的话，还是按 @", " 的方式来。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>今天帮表哥抢票广州到西安的票<br>\n11 点广州发的一波根本进不了<br>\n开始网页不动，能动的时候没票了<br>\n各位 v 友可有靠谱的手段（软件）？</p>\n</div></div>"], "reply": "43", "tittle": "春运抢票好难啊", "comment": ["每年都这样 习惯了", "不要急。捡漏机会很大\r", "我急了三年，后来觉得太浪费时间就不盯着抢了，有空就看看，一般最后半个月、 1 星期总能买到。\r", "你想想，这么多人，抢来抢去，好像生怕回不去了，最后还不是都回去了。。。", "终点站往前往后多买 /少买几站", "发车前一两天还有几波票放的", " 这样的基本也就是硬座和站票了吧", "等简陋，一般开始抢之后 2 天 去捡漏", "总是能回家的", "那几个旅游订酒店的网站之流 大概有付费代抢业务 ...今天我抢了完全没抢到之后在这类网站付费代抢了一波，而且放弃了学生票的优惠。。。心痛。。由于买的是 1.20 的票。。过几天才开始抢现在还没出结果", " 学生不是可以提前几天抢的吗", " 你的图像很喜感啊", "年年用心蓝，今年回省会城市后就不用抢票了", "神器都是收费的，而且巨贵", " 今年都是一样的", " 非常感谢", "捡漏好", " 有什么神器吗？推荐下", "兄弟，你这价值观不对啊。", "  你说的太好了。。。", "京东火车票预定了，好像加 20 保险费出票率更高", "这么早就开抢了?", "代抢春运期间各地火车票，高铁票；今天预售 1 月 18 日(腊月二十一)的车票。---今年将迎史上最难抢票年，预售期缩短、客流量增大、近五年最早春运。\r", "今天刚帮一个乌鲁木齐的朋友捡漏一张 1 月 16 号的票", " 怎么联系？", "坐全价飞机...orz", "智行火车票", "喷了 你们都这么早就放假了？》？", "前两年，，一放开了抢，结果只抢到了站票。。\r", "然后开车的前两天去火车站换的坐票。。", "用的高铁管家来抢的，不知道能不能抢到", "智行火车票", "总能捡到", "当务之急应该是努力多赚钱，明年坐大灰机", "   qq 86242412", "过几天高峰期", "发车前两三天是抢票的黄金期，可以尝试", "托管第三方帮你抢", "不是所有车站都 11 点，看中途有没有早点放票的站。\r", "或者买中转的。", "表示没有抢到过票....", "一直刷捡漏吧~帮朋友刷了 2 天，今天早上起来捡漏一张卧铺，虽然是中铺，不过也满足了~", " 学生票只能抢硬座 但是我那个时间很长。。我要买硬座", "想办法让 12306 走海外 CDN 吧。。。（电信不适用）", " 海外的 cdn 负载低 还是 先出票？", " 负载低，负载低的情况下直接连接源站反应的延迟就低，你可别忘了，用户与 CDN 建立的连接数有十个，但是实际上 CDN 到源站只会给该用户建立一个连接。", " 有什么渠道可以连国外的 CDN 抢票"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>你会不会？<br>\n会不会狠傻逼？<br>\n妹子会不会看不懂啊？<br>\n什么鬼？<br>\n大家要不要 coding 一下？<br>\n一起看看效果啊！ <br>\n坐等新技能 get~<br></p>\n</div></div>"], "reply": "24", "tittle": "#圣诞节#用自己的语言写一份情书或者实现一个“告白”？", "comment": ["送一个聊妹经典代码：\r", "#include <stdio.h>\r", "#include <math.h>\r", "#include <stdlib.h>\r", "#define I 20\r", "#define R 340\r", "int main()\r", "{\r", "int i,j,e;\r", "int a;\r", "for(i=1,a=I;i<I/2;i++,a--)\r", "{\r", "for(j=(int) ( I-sqrt(I*I-(a-i)*(a-i)) );j>0;j--)\r", "printf(\" \");\r", "for(e=1;e<=2*sqrt(I*I-(a-i)*(a-i));e++)\r", "printf(\"\\3\");\r", "for(j=(int) ( 2*( I-sqrt(I*I-(a-i)*(a-i)) ) );j>0;j--)\r", "printf(\" \");\r", "for(e=1;e<=2*sqrt(I*I-(a-i)*(a-i));e++)\r", "printf(\"\\3\");\r", "printf(\"\\n\");\r", "}\r", "for(i=1;i<80;i++)\r", "{\r", "if(i==25)\r", "{\r", "printf(\" I LOVE YOU! \");\r", "i+=30;\r", "}\r", "printf(\"\\3\");\r", "}\r", "printf(\"\\n\");\r", "\r", "for(i=1;i<=R/2;i++)\r", "{\r", "if(i%2||i%3)continue;\r", "for(j=(int) ( R-sqrt(R*R-i*i) );j>0;j--)\r", "printf(\" \");\r", "for(e=1;e<=2*( sqrt(R*R-i*i) - (R-2*I) );e++)\r", "printf(\"\\3\");\r", "printf(\"\\n\");\r", "}\r", "long time;\r", "for(;;)\r", "{\r", "system(\"color a\");\r", "for(time=0;time<99999999;time++);\r", "system(\"color b\");\r", "for(time=0;time<99999999;time++);\r", "system(\"color c\");\r", "for(time=0;time<99999999;time++);\r", "system(\"color d\");\r", "for(time=0;time<99999999;time++);\r", "system(\"color e\");\r", "for(time=0;time<99999999;time++);\r", "system(\"color f\");\r", "for(time=0;time<99999999;time++);\r", "system(\"color 0\");\r", "for(time=0;time<99999999;time++);\r", "system(\"color 1\");\r", "for(time=0;time<99999999;time++);\r", "system(\"color 2\");\r", "for(time=0;time<99999999;time++);\r", "system(\"color 3\");\r", "for(time=0;time<99999999;time++);\r", "system(\"color 4\");\r", "for(time=0;time<99999999;time++);\r", "system(\"color 5\");\r", "for(time=0;time<99999999;time++);\r", "system(\"color 6\");\r", "for(time=0;time<99999999;time++);\r", "system(\"color 7\");\r", "for(time=0;time<99999999;time++);\r", "system(\"color 8\");\r", "for(time=0;time<99999999;time++);\r", "system(\"color 9\");\r", "for(time=0;time<99999999;time++);\r", "system(\"color ab\");\r", "for(time=0;time<99999999;time++);\r", "system(\"color ac\");\r", "for(time=0;time<99999999;time++);\r", "system(\"color ad\");\r", "for(time=0;time<99999999;time++);\r", "system(\"color ae\");\r", "for(time=0;time<99999999;time++);\r", "system(\"color af\");\r", "for(time=0;time<99999999;time++);\r", "}\r", "return 0;\r", "}", "```\r", "我想你到写不出代码了.\r", "陪我去看《你的名字》吧.\r", "```", "你的名字。。。话说有个朋友跟一个妹子去看《你的名字》，散场出来，貌似妹子挺有感触的，可惜了，朋友是程序员，缺根弦。。没有后续...", "颜色搭配太俗，亮瞎狗眼", " hhhh", "。。。。。。。。。", " 妹纸： exe 文件？不会是木马吧，于是决定不打开。", " NoNONO,你可以运行下看看~~~", "会", " 坐等 coding", " 妹纸：这啥玩意儿？乱码看不懂", "妹子： 这个怎么用 ～～～～～", " windows 限定？妹子用 linux 咋办？", " 要我贴图么..", " 你想办法喽~", "妹子用 IE6 打开了链接，啥玩意，好丑", " C#语言 用记事本去编译运行", " 哈哈哈哈", "本周五晚的一个干货直播分享~感兴趣的小伙伴可以扫描二维码直接进入直播间。\r", "![图片标题]( ", " )", "程序员老是用代码感动自己。。。", " 撸出来确实很有成就感那", "人家根本不理你，这就很尴尬了", " 或许是因为看不懂..", "表白是最终胜利的号角，而不是发起进攻的冲锋号（逃："]},
{"content": ["<div class=\"topic_content\">手头的 cz88 想做成 local drive ，不是一般的“可移动磁盘”，因为有些软件和系统组件不允许安装在移动存储中。\r<br>想过一个方案是在 U 盘内新建一个 vhd ，每次插 U 盘的时候自动挂载这个 vhd\r<br>有没有更好的变成“本地磁盘”的方案……\r<br>\r<br>补两张网上的图\r<br><a target=\"_blank\" href=\"http://article.fd.zol-img.com.cn/t_s312x2000/g5/M00/02/0F/ChMkJ1XRVQaIdR54AAD3s1xNmGAAAAL2ADQA9sAAPfL529.jpg\" rel=\"nofollow\">http://article.fd.zol-img.com.cn/t_s312x2000/g5/M00/02/0F/ChMkJ1XRVQaIdR54AAD3s1xNmGAAAAL2ADQA9sAAPfL529.jpg</a>\r<br>\r<br><a target=\"_blank\" href=\"http://article.fd.zol-img.com.cn/t_s312x2000/g5/M00/02/0F/ChMkJ1XRVQaIGzKDAAD4-T7kp80AAAL2ADDiPIAAPkR596.jpg\" rel=\"nofollow\">http://article.fd.zol-img.com.cn/t_s312x2000/g5/M00/02/0F/ChMkJ1XRVQaIGzKDAAD4-T7kp80AAAL2ADDiPIAAPkR596.jpg</a></div>"], "reply": "35", "tittle": "讨论下 U 盘做本地磁盘的最佳方案", "comment": ["我装 Linux 无压力， Windows 不知道", "Windows 装过， 32G USB3.0 ，略卡，基本上没问题，", "顺便，可以移动的那种…", " @", " 可能你们理解做了，我不是要做成 live CD or windows to go 那种把系统装到 U 盘里。我只是想要把 U 盘的类型改为本地磁盘，插上的时候电脑里会把 U 盘识别为本地磁盘，也就是所谓的“量产”", " 安装 Linux 在 U 盘，即插即用？", " 这个就…不是很清楚了…", " 诶等等…问一下就是说每次使用都可以存储更改吗？", " 当然。就像你本地的硬盘一样。", "有一些 U 盘可以量产，在识别时识别为本地磁盘。\r", "USB-HDD ？", "可以用 diskpart 脚本 attach vdisk,  win8 可双击挂载，或者，量产优盘直变本地盘，不过闪迪的悬。", "有什么好处？", " 我说的就是这样…( ･᷄ ･᷅ )", "数码之家似乎是量产大本营，而这里的程序猿恐怕对此未必有太多的需求和经验吧", " 大兄弟！我要的就是你的答案！感谢感谢！\r", " 没错，闪迪的没量产工具，所以只能找其他替代方案，感谢回复！", " 是的，闪迪的没工具。。\r", "DiskGenius 支持转成 USB-HDD ，但实际上基本没用。。\r", "单独购置一个 U 盘也可以 xD", "话说 CZ80 默认识别就是硬盘", "subst 就能 mount 任意文件夹了啊", " cz80 早期批次的都是用的 ssd 主控，所以识别为 local drive 了，后出厂的都改为 removable 了。", " 确实很蛋疼，以前可以拿来直接给 nas 装系统，现在就非得折腾半天才可以", " \r", " \r", "CZ80 路过，的确是识别成硬盘盘符。\r", "话说人家的终身换新真不是吹的，我那个推拉没感觉了，都直接给换了个新的。。。", "用量产工具就行了", "怒😡答 64g ssd 驱动", "你不想量产只能加载两次启动，因为这个变本地硬盘的驱动没签名", "闪迪主控的好像没有量产工具。", "好像 Windows 下有个驱动程序可以把 U 盘识别成硬盘，叫 cfadisk", "以前学校封了移动磁盘的驱动，插入后格式都会显示 raw ，但插入我同学的一个 U 盘后，显示为本地磁盘而且正常使用，是不是这种", " 我找到的 win7 以上都不能正常启动了。", "如果你的 U 盘只是在一台电脑上当硬盘的话，没什么问题，如果是多台电脑…那你还得考虑驱动。", "闪迪不支持量产，不用想了", " NAS 装系统是指白群吗", "我的 cz80 和 cruze blade 都是识别成本地磁盘，我还想让它识别成可移动设备的，。。", " 黑的，先装 win server 再虚拟跑黑裙其实主要是 win 不支持", "CZ80 我弄 WTG 用过，用段时间以后掉速太厉害，很卡。后面直接买了 msata-usb3.0 搞定。直接撸三星 T3 这种最好咯。", "试试优启通", "我用的是淘宝上商家自制的 U 盘，银灿主控，量产后可以划成数个本地磁盘。"]},
{"content": "", "reply": "112", "tittle": "在 github 上搭建博客用什么比较好", "comment": [" 我是用第三方 cdn 的服务\r", "\r", "简要教程： ", "推荐 hexo", " 想借签一下你主题，可否：）", " 借鉴？", " Cloudflare 在国内好像支持不好，很容易不能访问。我的网站一直用的 Cloudflare ，现在在找中文环境替代方案。", " 我自己做一个自己博客的生成工具，想使用你的主题，里面有些东西会有所修改（如代码样式等等）。想征得你的同意。", " 随便用~ 可以的话加个链接就好了。", " 好的，谢谢！主题链接肯定会加上的。", "Hexo 还不错", " 样式改好啦好啦", " 五迷加油， GitHub 已粉，哈哈", " weibo 已粉啦啦啦"]},
{"content": ["<div class=\"topic_content\">如果华为开了 100w 的 offer （加股票），还有签字费。放弃阿里的股票。值得跳槽么？</div>"], "reply": "2", "tittle": "大家帮忙说说你的见解。", "comment": ["不值得", "是 100w+股票, 还是 100w 已经包含了股票在内?"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>虚拟机模拟器都可以</p>\n</div></div>"], "reply": "5", "tittle": "求在 linux 下运行部落 冲突的解决办法", "comment": ["Android-x86", "我之前在 Windows 8 上装 VMware Player ，里面是 Windows 7 ，然后用 Bluestacks 跑过 coc\r", "VMware 的虚拟机怎么跑应该和外面的操作系统关系不大，我猜在 Linux 上也能用", "Chrome ARC\r", "官方模拟", "虚拟机 remixos", "这个标题的空格点的好 我刚才还在外面想 运行部落 部落是个 Linux 下的什么软件 为啥会冲突 进来才发现你问的是部落冲突这个游戏=-="]},
{"content": ["<div class=\"topic_content\">学生时代，我写代码是用 Vim 的，后来正式工作后，部门强制要求使用 Emacs ，不知不觉也就喜欢上了 Emacs ，特别喜欢 rgrep 和 buffer ， Vim 命令也忘的差不多了，基本上就用 vimdiff 了，但是 Emacs 的很多技巧我并没有专研和研究，目前发现做一些复杂的事情时，技巧并不高，并且小拇指按 Ctrl 键时小拇指会比较痛，所以各位 Emacs 同学可以分享下自己使用 Emacs 的技巧或配置吗？\r<br>\r<br>谢谢。</div>"], "reply": "34", "tittle": "有没有使用 Emacs 写 C++的同学，来说说你常用的 Emacs 技巧或配置？", "comment": ["“部门强制要求使用 Emacs ” 大千世界，无奇不有。", "caps lock 也作为 ctrl 就行了。不过写 c++我觉得还是 VS 和 QtCreator 最好。 emacs 的话就配置一下 clang 补全差错的相关插件。", "很好奇部门为什么要强制使用", "C-x C-c ， 然后打开 CLion", "这又是某个智障主管的锅吧。。。\r", "\r", "话说习惯 vim binding 不一定要用 vim 啊，可以用 spacemacs 搞定", " \r", " \r", " \r", "\r", "因为之前部门结对编程，技术栈以及工具都是统一的，其实现在感觉这种部门可能一般都比较屌，做的东西可维护性等都比较高。", "楼主不是阿里的吗", "我是用 auto-complete 和 gtags 来做代码跳转和补全，没有什么其他特别的配置。\r", "\r", "工作的代码规模比较大而且是交叉编译， clang 不是很好用。", "ctrl 键可以和 caps lock 互换.\r", "\r", "代码跳转用 cscope\r", "\r", "yasnippet 做代码模板", " \r", "\r", "以前是", " \r", "\r", "互换之后用不习惯啊", " 强制用个几天就习惯了，现在让我去用 ctrl 反而不习惯。。不得不说换到 capsloack 之后舒服很多", "Spacemacs c c++ layer\r", "总体上来说都挺好的 Gdb many windows 最近还在学习中", "什么公司，居然强制使用 Emacs 开发 C++", "Spacemacs 应该是最好的选择", " 我觉得这都不是借口，因为没有一个问题是解决不了的，应该就是有个旧思维的头头把着话语权，就让下面也都跟着连累了。\r", "\r", "PS ：我也用 emacs ，但是我不会尝试去说服每个人都用 emacs", "c++…\r", "建议换宇宙第一 IDE", "好羡慕，都用 emacs 多好啊\r", "我这儿就我一个人用 emacs ，好孤独", "mac 下面安利 emacs-mac\r", "配置文件安利 spacemacs\r", "c++ 安利 ycmd 和 semantic layer", " \r", "你想太多了，我之前部门老大的招人标准， emacs 基本上 2 天就能够日常使用了，其实最主要是单元测试，集成测试， yum 源，编译环境等等都是统一的，最主要是大家是结对的，经常需要登录你的 IDE 做开发，所以也就需要统一的环境。不过部门也没多少人，绝大部分还是老员工，新来的老员工带个 2 天，就简单上手了，也没啥。", " \r", "\r", "谢谢。使用 spacemacs 后还能用 eshell ， rgrep 吗？", " 我这里是就我一个人用 vim ……后来调去写 mfc ，结果我使用了 vsvim 插件……", " 啊 如果是用 spacemacs 的话默认不是 eshell 了，你通过 bindkey M+' 会启动一个 ansi-term-1 的 buffer 来与 shell 交互。", "我换 Vim 了……", "楼主可以参考一下这篇博客 ", ", 我现在 c++开发环境就是基于这个配的\r", "另外安利一下自己的 dot_emacs, mac 下直接可用 ", "部门强制要求使用 Emacs ，是情怀部门吧？", "都强制使用 emacs 不每人配一个脚踏板吗？", "用了十年 emacs ，没觉着手指有啥不适啊\r", "主要写 php ，近几年也写 go\r", "\r", "php 慢慢换到 phpstorm 了", " \r", "\r", "不是。该部门可以追溯到雅虎中国搜索团队了。", "还是脚踏板好", "大千世界，无奇不有。", "直接部门所有人把部门老大的配置拷一份用不就统一工具了吗", " \r", "\r", "不仅仅配置，并且集成了单元测试，集成测试，编译链等工具，最主要是还需要结对编程。", " \r", "\r", "谢谢了，看看。"]},
{"content": ["<div class=\"topic_content\">我有一个源站 IP ： x.x.x.x\r<br>域名 A 和域名 B ， A 和 B 都解析到 IP 。\r<br>访问 A 时，地址栏为 <a target=\"_blank\" href=\"https://A\" rel=\"nofollow\">https://A</a>\r<br>访问 B 时，地址栏为 <a target=\"_blank\" href=\"https://B\" rel=\"nofollow\">https://B</a>\r<br>\r<br>server 环境是典型的 LAMP ，求思路</div>"], "reply": "17", "tittle": "域名解析+SSL 的一个问题", "comment": ["加个 Nginx 做转发？\r", "\r", "话说 HOST 解析和 HTTPS 没关系吧", "如果源站上跑的是 NGINX 的话，用 server_name 就可以区分开了。", " @", " 感谢朋友和 MOD\r", "\r", "刚刚爬文看到一个思路，干脆直接搞个多域名的证书得了，是不是也能达到同样效果。", "我只知道 lnmp 这情况就是添加虚拟主机就搞定了，一摸一样的例子。我就是这样的。 lamp 类似吧。", "2 楼最方便", "浏览器和 Web Server 都能支持 SNI 的话完全可以正常工作不需要什么思路", "这不就是 virtual host ？", " 因为网站已经成型，不想改服务器架构，所以尽量还是找方便的办法吧。", "Apache 看看脚本有没有添加虚拟主机的命令", "Google 搜索 lamp multi site ssl ，第一个结果看看符不符合你的需求", " @", " 多谢！已经找到相关 VH 配置，正在测试，问题应该不大。谢谢各位", "virtual host", "搜索 SNI 或者 SAN （ subject alternative name ）", "apache virtualHost 对不同的域名配置不同的证书,\r", "前面可以用 varnish, nignx", "分目录，一个服务器可以放很多站，不同站加载不同的配置文件。", "所以问题在哪里？\r", "你的问题中也没有提到 SSL 啊", "如果 yum 安装的 apache ，在配置 conf.d 目录下新建 vhost.conf 添加\r", "<virtualhost x.x.x.x:443>\r", "servername a 域名\r", "documentroot a 主文件目录\r", "</virtualhost>\r", "在建立一个 virtualhost 把 a 换成 b 的内容，重启 apache 。\r", "如果是源码安装的，编辑配置文件 httpd.conf ，将 httpd-vhost.conf 前的#去掉，然后编辑 extra 下的配置 httpd-vhost.conf 文件，把两个<virtualhost>内容添加上，最后重启 apache 。\r", "对于 ssl 自己研究吧。说的不好还请谅解。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><blockquote>\n<p>如题 <br>\n想买个恒温热水壶泡咖啡等,<br></p>\n</blockquote>\n<hr>\n<blockquote>\n<p><a href=\"http://www.mi.com/kettle/\" rel=\"nofollow\">http://www.mi.com/kettle/</a><br>\n除了小米,还要什么推荐吗?先谢谢大家了啊</p>\n</blockquote>\n</div></div>"], "reply": "3", "tittle": "有没有推荐的**恒温 60**热水壶?搭配象印的保温杯", "comment": ["小米的这个恒温水壶我买过一个, 后来退掉了. \r", "用了两天之后水壶的温度传感器失灵了, 虽然没有搜到其他人有说过这个问题, 但是心里已经有阴影.\r", "再吐槽一下小米商城退货很繁琐, 退运费还需要你找快递开发票.", "小米真是啥玩意都有啊。\r", "那就再卖个象印或者虎牌的热水壶，好像 2K 多吧。", "算了,还是买松下的 靠谱,还是有点昂"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>每次 Party 男生都抱怨女生少，这特么女生扎堆的过来，男生在哪里!<br>\n群里一个小伙说的好，去了就有机会，不去永远没有机会。!<br>\n嗯，是这么个理儿。!<br>\n坐标 [北京] 本周六下午 13:00 建国门!<br>\n<img alt=\"图片标题\" src=\"http://ww3.sinaimg.cn/mw690/8db48fb7jw1fazfd2q2lkj208i04hglr.jpg\">\n<img alt=\"图片标题\" src=\"http://ww2.sinaimg.cn/mw690/8db48fb7jw1fazfcpces8j20u01hck0l.jpg\"></p>\n</div></div>"], "reply": "1", "tittle": "不知道要说什么，活该单身么？", "comment": ["报名今天下午截至，想要参加的抓紧了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h5>地址</h5>\n<p><a href=\"http://edms.ngrok.cc/\" rel=\"nofollow\">http://edms.ngrok.cc/</a></p>\n<h5>目的</h5>\n<p>做一个微成本的 web 实践</p>\n<h5>声明</h5>\n<p>只是出于学习的目的</p>\n<h5>简介</h5>\n<p>把开源的 mayan-edms( <a href=\"https://gitlab.com/mayan-edms/mayan-edms)\" rel=\"nofollow\">https://gitlab.com/mayan-edms/mayan-edms)</a>  搭建在我的旧 pcduino v2 （ os 为 arm 款 ubuntu ），再用 <a href=\"https://www.ngrok.cc/%E6%8F%90%E4%BE%9B%E7%9A%84%E5%85%8D%E8%B4%B9%E5%86%85%E7%BD%91\" rel=\"nofollow\">https://www.ngrok.cc/提供的免费内网</a> http 服务转发功能转发至外网地址 <a href=\"http://edms.ngrok.cc/\" rel=\"nofollow\">http://edms.ngrok.cc/</a></p>\n<h6>pcduino</h6>\n<p><img alt=\"pcduino\" src=\"http://i1.piimg.com/567571/b17757b39842688c.jpg\"></p>\n<h6>web</h6>\n<p><img alt=\"web\" src=\"http://i1.piimg.com/567571/2ca62785bab13184.png\"></p>\n<h5>地址</h5>\n<p><a href=\"http://edms.ngrok.cc/\" rel=\"nofollow\">http://edms.ngrok.cc/</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "[作品] mayan-edms + Pcduino + ngrok", "comment": []},
{"content": ["<div class=\"topic_content\">想做个类似 QQ 机器人的东西自用....百度过这方面资料，发现好多都是几年前的，去 github 也搜过，同样分不清哪个能用，有没有最近做过这方面的 V 友，分享一个现在可用的源码？</div>"], "reply": "17", "tittle": "有没有现在可用的 QQ 协议", "comment": ["如果只是使用的话可以买个小灰\r", "直接在 v 站搜", " 想找个开源的顺便自己研究玩玩", " 想找个新点的，直接搜好多都是很久前的都不维护了", " 不开源都担心被抓，开源是找死啊", "基于协议的没有，只有付费的。\r", "smartqq ，也就是以前的 webqq ，可以自己研究下，能发文字消息。", " 能不能发下相关的源码来看看，我想研究下", " github 看到不少源码，不过都是几年前，好像都是基于 WEBQQ....找个现在能用的这种就好啦", " 谢了，我回头 clone 下来研究看看。。", " 基于 web QQ http 的好做，但是封的厉害。 PC 的有一些教程但谁都不会把最核心的 key 放出来", " 嗯。，我知道封的厉害，，所以才来找找新版协议嘛😂", "webqq 的每天都要登陆\r", "自用机器人可以用手机 qq+xposed+qq 机器人插件", " 每天需要重复登录？一直保持 http 连接不行么？", " 我放服务器上做机器人过。每天登陆，不然收不到信息。\r", "当然也有人说是三天，我服务器在国外。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>地址：\n<a href=\"http://edms.ngrok.cc/\" rel=\"nofollow\">http://edms.ngrok.cc/</a></p>\n<p>目的：\n做一个微成本的 web 实践</p>\n<p>声明：\n不以营利为目的，只是出于学习的目的。</p>\n<p>简介：\n把开源的 mayan-edms( <a href=\"https://gitlab.com/mayan-edms/mayan-edms)%E6%90%AD%E5%BB%BA%E5%9C%A8%E6%88%91%E7%9A%84%E6%97%A7\" rel=\"nofollow\">https://gitlab.com/mayan-edms/mayan-edms)搭建在我的旧</a> pcduino v2 （ os 为 arm 款 ubuntu ），再用 <a href=\"https://www.ngrok.cc/%E6%8F%90%E4%BE%9B%E7%9A%84%E5%85%8D%E8%B4%B9%E5%86%85%E7%BD%91\" rel=\"nofollow\">https://www.ngrok.cc/提供的免费内网</a> http 服务转发功能转发至外网地址 <a href=\"http://edms.ngrok.cc/\" rel=\"nofollow\">http://edms.ngrok.cc/</a></p>\n<p>求赞！求指导！</p>\n</div></div>"], "reply": "1", "tittle": "[作品] mayan-edms + Pcduino + ngrok，求点赞", "comment": ["ngrok 不错"]},
{"content": ["<div class=\"topic_content\">请教个问题哈 用百度统计查看个站数据的时候 每次都要到登录的页面填验证码\r<br> 感觉很麻烦 就算时间间隔半天也要重新登 \r<br>百度的人说是隐私保护 但从用户体验看 就很不舒服啊 求问有什么好的解决方案么 学习下</div>"], "reply": "4", "tittle": "关于用户登录密码和隐私的疑问", "comment": ["一个小学生的问题，起了个哲学专家的标题", "~~ 你这个题目和问题 确实没多少关系 ，有意思", " @", " 我明明是想问深层次问题的", "就是区分人和机器用的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>标题是今天无意中看到一段视屏： <a href=\"https://v.qq.com/x/page/k0022nq3fyf.html\" rel=\"nofollow\">https://v.qq.com/x/page/k0022nq3fyf.html</a></p>\n<p>我真不知道该怎么说了，主持人问：国产化对你意味着什么。</p>\n<p>那个专家答道：毕生的追求。</p>\n<p>麒麟系统就是 ubuntu 套了个壳的中国版，两台电脑比较也没有公布配置。</p>\n<p>唉，水分很大啊。主要是受不了是改一改图形界面就说是毕生的追求。还说的那么冠冕堂皇。</p>\n<p>懂的人自然懂，不懂的人估计觉得国产系统很厉害吧。</p>\n</div></div>"], "reply": "32", "tittle": "实力比拼：国产系统 PK 国外系统？", "comment": ["补充一下完整的视屏： ", "这么说 gentoo 必然是国产系统了（逃", "用 IE 来 PK 谷歌浏览器  呵呵哒", "哈哈哈，最近真是各种。想必央视财经的主播也是影帝。说什么国产大法好", "核心还不是别人的吗。。。。。。", "哈哈 央视又来带节奏啊", "毕生追求 == 骗经费骗一辈子", "\r", "前两天刚在知乎上看到，服了。", "骗的还不是纳锐人的钱，想想就气，蛀虫。推荐这些人看看外国 coder 写的那篇， The code I ’ m still ashamed of", "真的是很愤怒。", "想起来几年前的一件事儿。某单位的“科研人员”制作了一个最安全的系统，给出了一个 ip 地址，欢迎大家挑战。（我印象中好像是在中国版的 twitter 上发布的）那个所谓的系统，电脑根本没联网。我估计应该是应付上级检查用的。", "  哈哈，这个我知道，因为 这个人 是我的 《高级操作系统 1 》的代课老师，姓杨吧好像，忘了。他还讲过这个事情。且先不说是不是骗钱的。。\r", "\r", "自己觉得他是有能力做出来操作系统的，不是骗钱，而且确实 挂出来 有欢迎挑战，开了一些访问端口，有现金奖励，后来可能维护什么的就关了。这个系统难以攻击可能原因是 它即不是 win 也是 linux/unix 系列的，是从底层自己实现的。所以在没代码的情况，黑盒攻击它，比较难。\r", "\r", "这个老师不是科研人员，不在编制内，领了一个私有的团队，他有讲过说：政府单位跟他付费合作的事情。。\r", "\r", "就能力来说，这个人真的是很低调的高手，过来给我们讲三门课《高级操作系统 1 》《高级操作系统 2 》《 gcc 编译器代码分析（可能是这个名字）》，敢同时讲高级操作系统原理和 gcc 原理的老师可是真的没有几个，水平特别厉害。。\r", "\r", "所以，麒麟被黑，我完全同意。有些人就是在骗经费。但是这个安全系统是我老师带队私人开发的，我自己觉得，这个骗钱的概率真的不大，可能用在了对安全要求特别高的地方。", "我看这个演示真是，视频播放不控制硬件变量我也就忍了，但那个浏览器速度比拼，傻子都知道，哪怕是局域网上的网页，也需要经历一个数据包传输-->本地渲染的过程，你就这么“秒开”，我知道是为了艺术，但你这个造假是不是火候也太差了，而且右边你用的好歹是 Chrome ，左边似乎是 ie ，连这点自信都没有么？\r", "\r", "国产系统是非就不吐槽了，我觉得腾讯哪天出个 Linux 版本的 QQ ，比这些个面向经费开发的系统加一块都强。\r", "\r", "唯一觉得不错的，算是武汉的深度公司，似乎网易云音乐和搜狗输入法就是他们蹿腾搞的，虽然不用他们的 deepin 系统，但这一点还是很感激的。", "真正靠谱的国产系统应该也有，比如国产超级计算机的那些操作系统", "麒麟有很多，谁知道是哪个麒麟。国防科大中科院还有啥都叫麒麟，有些是魔改有些是真的好好做国防用", " 我也觉得深度算是良心，而且深度自己也有好多包的贡献", " 你说的是遨游浏览器 360 浏览器 QQ 浏览器等？", "确实，这里不公平的因素有太多了，硬件、应用程序、平台都有很大不同，根本不是公平的较量，但是无论各位如何吐槽，就目前来讲，这段视频完全可以骗过大部分人的眼睛，比如我爸妈，看了以后都是惊呼“中国终于要崛起了”。我相信将视频放在很多 211 大学的课堂上，很多非工科女生仍然会深信不疑。这就是这段视频目前的宣传效果，它是针对“普通人”，而不是针对 V2EX 上的朋友。可是中国有多少“普通人”，又有多少像 V2EX 上具有火眼金睛的技术人员。如果这段视频呢仅仅是在 V2EX 上播放，我想它绝对是一个笑话，但是看右上角的 Logo ，你就知道，它已经成功地骗过了大多数人的眼睛。", "同意楼上.\r", "早年电视上有个叫 AIPC 的广告,那会儿还小,真是像被洗脑了一样,完全相信了那个广告.  然而那则广告太夸张都成鬼畜全明星了...  被节目这套说辞骗到的估计大有人在", " 天河上跑的那个 FreeBSD 魔改麒麟应该还是有技术含量的，需要支持专有硬件，不是可以随便糊弄过去的东西，其他的估计就是些拉大旗作虎皮的了。\r", "\r", "其实政府如果真有心做这个的话，针对某个通用的发行版比如 ubuntu/debian 或者 fedora ，做一个代码审查过的源代码重构建发行版就已经是个功德无量的事情了。这个事儿一些注重代码安全的国外大公司也在做，但是不觉得国内单独哪家公司有这个能力 /推动力。", " 如果是国防用，那么魔改开源代码也是应当举双手支持的。土共高技术含量的操作系统真的不差，但都是内部军方、研究所使用。\r", "但是需要担忧的是低端魔改，比如 Ubuntu Kylin 这样目标是消费者而没什么创新的骗经费工具。先不说要推向市场有多困难，骗的经费还不如给基层科研工作者加福利加工资。\r", "BTW 天河 2 我用过，印象中是自己开发的定制 Linux, 不是 BSD", "看得我尴尬症都犯了。。。。", "昨天在知乎看到了，看视频看的异常尴尬，我觉得可以看看这个回答 ", "我在用深度", "分啥国产，外产的系统，都是人类的智慧结晶，人类造出来的系统，我觉得根本没必要贴上什么国家标签，涂上颜色吧，特别是开源分享的系统。\r", "好用的系统好好用就是了，撇开那些高大上的特殊领域不谈，对绝大多数普通人来说，水产的系统只要好用、满足需求就行了。\r", "何况也没见有多少个郭嘉整天嚷嚷着要做什么所谓的“自主知识产权”的“国产系统”。\r", "好的系统放出来，别人用着好用，别人自会夸奖，自吹自擂，然后还要再贴上个已经被黑成翔的所谓“自主知识产权”“国产”的标签，就让人感觉很恶了。", "你们为啥看央视？", " 我在我那台 08 年的笔电上安装了 deepin ，然后，没然后，再后来笔电挂咸鱼上 350 包邮卖了。。。。", " 哈哈,我心目中最佳", "以前用过深圳的超算，用的是 suse 。。", " 有道理，技术就不该受概念共同体的限制。", "中国从来不缺乏各行业牛人,  尤其是科研方面. 但是不是那么太经常出成绩, 跟大环境的偏浮躁有点关系. 完全个人观点.", " 即使只是想好好做一个大家都能用的操作系统，在你骗不到经费的情况下，你不提国产，你就得饿死。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>啊哈哈哈。。。。。。\n<img alt=\"图片标题\" src=\"http://ww2.sinaimg.cn/mw690/8db48fb7jw1fazj9yvfu9j20qo0zk40n.jpg\"></p>\n</div></div>"], "reply": "10", "tittle": "去男厕所溜了一圈。。。。", "comment": ["天天男厕所溜", " 证明你的属性是 boy 啊", "楼主应该是个妹子", "槽点是这俩拐角布局的小便池吗？很多地方有这种脑残布局……", "这广告打得好", " 哈哈哈", " 来来来 在北京的", "来也匆匆 去也匆匆 恨不能相逢。。。  不自觉的就唱起来^_^", "二维码居然能扫出来。。世纪佳缘。。男厕所。。", " 哈哈哈是啊是啊~现在还缺男生，妹子太多了，想要参加的可以报名哈~"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h1><a href=\"http://edms.ngrok.cc/\" rel=\"nofollow\">http://edms.ngrok.cc/</a></h1>\n<h2>我甚至求大佬们 D 一下</h2>\n<p>求用户体验！跪谢</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "求各位大佬体验一下 ", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这是什么鬼，表示遇到好几次了，难道是 V2 做的限制，怎么联系负责人？</p>\n<p>之前创建的热帖没被移除到别的地方了？不会是触碰到了v2的底线了吧？很无奈，虽然每个贴都挺热的，哈哈。</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "不服啊，为什么我的账号莫名其妙的登陆不了了，然后又密码错误", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"how to draw\" src=\"https://github.com/aleen42/PersonalWiki/raw/master/post/how_to_draw/preview.png\"></p>\n<p>Since my company has given me a requirement of drawing in a browser programmatically, simply shown as the figure above, I would like to share some points with you about drawing in JavaScript. Actually, what we're going to draw? <strong>Any kind of images and graphics</strong>.</p>\n<p>More details in: <a href=\"https://github.com/aleen42/PersonalWiki/blob/master/post/how_to_draw/how_to_draw.md\" rel=\"nofollow\">https://github.com/aleen42/PersonalWiki/blob/master/post/how_to_draw/how_to_draw.md</a></p>\n<p>POC or Demo: <a href=\"http://draw.soundtooth.cn/\" rel=\"nofollow\">http://draw.soundtooth.cn/</a></p>\n</div></div>"], "reply": "5", "tittle": "使用 JavaScript 来进行绘画？", "comment": ["cool!!", "thx", " thx", "确实好酷啊", " thx"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如何声明函数</p>\n<p>1.通过关键字 function 函数名称([参数…]){函数体; return 返回值;}那接着在声明函数的过程中我们需要注意这样一些问题。</p>\n<p>2.首先呢和名称有关的名称我们不能包含特殊字符，可以以字母和下划线开始，后面呢可以跟上数字字母下划线，不要使用“？*”包括中文来当我们的函数名称。</p>\n<p>3.那第二呢函数名称最好含义明确，而且呢最好一动词开头，因为呢它是来完成某一功能的，假如说我想玩你可以写一个 play ，最好以动词来开头，当然这个不是强求的。</p>\n<p>4.那最好我们的函数名称遵循驼峰标记法或者是下划线法。那这个呢和我们的变量命名差不多。</p>\n<p>5.第四点很重要，函数名称不支持重名，也就是重名的函数是会报错的。</p>\n<p>6.第五点也需要知道，我们的函数名称不区分大小写。但是我们只是用的时候最好遵循大小写。你写的是小写同样的你在用的时候也要写小写。</p>\n<p>7.接着还需要知道，我们的参数，括号中的参数不是必需的，你可以有也可以没有,那可以有一个也可以有多个。</p>\n<p>8.最后函数体，当我们函数体内碰到 return 的时候就立刻结束了，那 return 呢是给这个函数加上一个返回值，如果没有 return 的情况下，默认的函数返回的 null ，那也可以通过 return 返回任何的值都可以。我们来一个简单的例子。</p>\n<p>声明函数实例</p>\n<p>首先自定义函数的时候使用 function 关键字 function sayHi()括号中间可以写上你的参数，可以有也可以没有。 在函数体内写上一个 echo 'say Hi to King';</p>\n<p>function sayHi()</p>\n<p>{</p>\n<p>echo 'say Hi to King';</p>\n<p>}</p>\n<p>那这样就定义了一个函数，同样的我还可以再来定义一个。</p>\n<p>{</p>\n<p>echo 'this is a test';</p>\n<p>}</p>\n<p>那这样连个函数我们就定义完了，我们来看一下页面有什么效果吗？是没有任何效果的。</p>\n<p>原文链接： <a href=\"http://www.maiziedu.com/wiki/php/user/\" rel=\"nofollow\">http://www.maiziedu.com/wiki/php/user/</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "Php 中如何声明函数？", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>楼主昨天在某宝花了一百多大洋买了一个黑苹果，装完之后体验了一俩小时，感觉还不错吧，主要是 UI ，然后就开始安装各种开发环境：</p>\n<ol>\n<li>Python</li>\n<li>前端</li>\n</ol>\n<p>对于 Mac 还是小白，不知道有哪些是必备的一些软件，也经常会写 markdown ，求大神指点迷津，晒晒自身使用的软件。</p>\n</div></div>"], "reply": "51", "tittle": "Mac OS 上有哪些程序员必备的软件？", "comment": ["Python 的话， Pycharm", "楼主难道不知道世界上有一种软件叫做搜索引擎吗", "[PIRATE LINK REMOVED] 不用谢", "node JS 编辑器一个 浏览器若干个 开搞", "Alfred", "brew \r", "shadowsocks|其他科学上网\r", "alfred3\r", "dash\r", "Charles\r", "KeepingYouAwake", "markdown 编辑器: MacDown (支持实时预览)\r", "XCode (这个是必须安装的吧)", "surge on mac", "Sublime Text\r", "Oh My Zsh\r", "Tuxera NTFS\r", "SnippetsLab\r", "CrossOver\r", "Steam", "jetbrain 全家桶", " @", " #4's link needs to be removed.", "\r", "按照这个 作下 homebrew 和你需要的章节就行", "XCODE 可以不用安装，直接安装 command-line-tools", "GitHub awesome 系列包含 mac, shell 等等", "另外多留意社区，很多黑科技", "我没装 XCODE  之前下载的 8.0 一 brew 就叫我升级 应用商店又升不了 8.1 就卸载了..", "同为前端\r", "\r", " ", "楼主一百多买的是机器么 。。。如果是的话真牛逼 。。\r", "\r", "如果买的是系统的话，其实可以尝试自己折腾一下黑苹果，起码可以省一百多买软件，\r", "\r", "除了 7 楼列出的都有用，此外你还需要 Pycharm 、 Firefox 、 Chrome 、 f.lux 、 QQ 、 WeChat 等等", "黑苹果我只在 vm 上安装过,楼主的是怎么安装的?", " 他应该说的意思是，在 x 宝买的安装 hackintosh ，。，", "Markdown 推荐 typora", " 谢谢举报。这个帐号已经 Deactivate 。", " brew 可以安装 bartender 和 dash 和 iterm2 和 alfred 吗？我才知道。。。", " brew cask install 即可，还能安装各种字体呢", " \r", " \r", "这招真溜\r", "\r", "\r", "\r", "让我想起了 White bear problem", "flux", "先把 xcode 装上", "Docker", "shell 用 item2 \r", "markdown 用 Typora\r", "网页翻墙 用 lantern  比较简单\r", "虚拟机 用 virtualbox 和 vagrant 特别好用 方便迁移和分享给队友环境\r", "chrome 、 postman 、 netbeans 、 formail 、搜狗输入法 and 网易云音乐 基本搞定  话说我搞 PHP 的（拍 黄 片）", " 接受不了 MAC OS 桌面上有 我的电脑...... lllllolll", " 无所谓 是我的电脑", "写几个在用的工具\r", "1.PDF Expert ，界面简洁，轻量，装完才 65mb ，抛弃了 acrobat ，而且打折的机会也比较多\r", "2.sublime text ，没什么好说的，必备\r", "3.chrome ，一般都用 safari ，需要 flash 了才开 chrome\r", "4.Pycharm ， Jetbrain 套装就是好用\r", "5.印象笔记，习惯了，也下了有道云笔记，但是没有很强烈的更换欲望\r", "6.Bear ，新秀，界面很美观，功能的支持度也不错，但是个人感觉，免费版的，编辑器的功能大过笔记，因为不能 sync\r", "7.Kap ，开源的录屏软件，简约轻量，很不错\r", "8.Mweb ，使用最多的 markdown 编辑器，但是现在后起之秀非常多，用的最多的就是发布功能，一键发布到 wordpress ，光编辑的话， Caret 和 iA writer 这两个用的比较多， UI 美观， Bear 也不错\r", "9.GNS3 ，偶尔模拟下网络设备\r", "10.wireshark ，图形化界面比较美观，而且从 windows 到 linux 用过来的，就比较习惯用这个了\r", "11.virtualbox ，开源的虚拟机，也是从其他平台上转来的， parallels desktop 太贵，而且用的次数不是很多，觉得不值，就没买\r", "12.Cleanmymac3 ，算是用的比较多的 app ，磁盘查阅和软件卸载， UI 也非常好看，就是比较流氓的会开机自动启动，还关不掉，功能倒是不错\r", "13.ss ，科学上网必备\r", "14.iStatistica ，显示电脑状态数据，个人感觉比 iStat menus 好看\r", "15.UltraEditor ， windows 上延续过来的老牌编辑器了\r", "16.坚果云，私人云里还算不错的， dropbox 需要多一步梯子，还是坚果用的多点\r", "17.BitTorrent sync ，很不错的同步软件，是通过编程随想才知道的\r", "18.homebrew ，必备，就是有些依赖还没适配到 Sierra 上", "月经，自己搜", "黑苹果稳定吗？", "  底部的任务栏是什么软件？", "没啥必备的", "楼主 你装黑苹果 本身就违反苹果的协议了", " 求问下边任务栏是什么软件？", "  @", " \r", "ubar\r ", " FUCK", " 我也是 typora 重度用户，换了好几个还是这个好", "有 pycharm 就足够了....", " 是的。本来用的 macdown.. 然后觉得 typora 甩了其他的不止 100 条街。", " 唯一比较麻烦就是更新太频繁了，我基本上每次打开都要更新 23333333", " 这花了不少钱吧(´･_･`)", " 还行吧，大部分都是免费使用服务收费，或者开源的，就 jetbrain 贵点", "Alfred", "ShadowsocksX"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>Java 后端，最近在写一个 Python 的小程序。有个需求是，这个程序有很多配置，因此我用了一个 YAML 文件来做配置。现在是通过 Python 读取这个文件转成一个 dict ，再使用的时候通过 key 来拿到配置。</p>\n<p>这样就会有一个问题，程序中到处都在用这个 dict ，如果某天某个 key 变化了，就需要找到使用这个 dict 的地方一个一个修改。这样后期也非常不好维护。</p>\n<p>现在的想法是有没有类似一个 Java 中的 Bean 一样，我把这个 dict 转换成一个对象，这个对象都是属性的集合，这样可以通过对象获取对应的属性，后面也好维护。</p>\n<p>在 python 里面属性的集合怎么实现，或者说在 python 里有没有更好的实现方式。</p>\n</div></div>"], "reply": "3", "tittle": "Python 中有没有类似于 JavaBean 的一个属性的集合", "comment": ["直接拿 Python 源文件作为配置文件不就行了, 至于配置的项用类属性还是直接用常量就看你自己的选择了, 我认为 Java 这种编译行语言拿 XML/YAML 之类的文本作为配置文件无非就是为了更改配置还需要重新编译, 但是 Python 完全没必要.", "python 你也可以建立一个 class 呀, 只不过你转成一个 dict 变成转成一个那个 class 的 object 就好了. \r", "\r", "另外, 即使你那个 dict 到处被读取,使用, 你也不能到处用 hardcoded 的 key name 吧, 应该弄常量代表 key name 字符串, 然后用那个常量读取. 这样你改 key, 只需修改一处.", "你需要静态语言"]},
{"content": ["<div class=\"topic_content\">刚刚逛招聘网站发现居然有公司招聘易语言的程序员,真的没想到还真有公司用易语言来做开发;\r<br>ps.这里并没有贬低易语言的意思,只是觉得她太冷门了.</div>"], "reply": "40", "tittle": "居然有公司招易语言的程序员!", "comment": ["一般做外挂用。", " 还是个需要出国的工作,只不过是去菲律宾=.=", " 博彩行业这么玩的不要太多", "YY 不就是易语言么", " 去菲律宾的百分之八十都是做菠菜的", "之前不是在 V 站都有发过帖子的嘛", "YY 一直是 C 好吧。。多玩盒子有些是易语言的现在应该也改 c 了", " 菠菜自动化用的吧？", " ", " 你说这个？", "灰产专用语言", "比 PHP 差一点的语言 /斜眼笑", " 不是 C++吗？看他们招 C++哦", "灰产", "黑产入门语言", "写过梦幻外挂的冒个泡", "澳门在线…", "这玩意...Github 都不作为一种语言统计了...", "求解，为啥黑产要用易语言\r", "初中的时候玩过，感觉没有任何优势啊", "易语言不就是 VB 么？", "在非专业开发领域已经是 NO.1 了。自然会向专业领域辐射点能量。", " 像 vb 一样简单 应该可以调汇编这些吧？ 还可以编译二进制机器码 最有趣的是他自己搞了一套规范 极力模仿 c++的风格但是又搞的乱七八糟 还增加了反编译的难度", "嚇我一跳的是，外國人需要掌握多少個中文才能看懂代碼？", " sb", "灰产的轮子多，做灰产用易语言的人多，导致灰产开发中易语言的流行，这个跟现在服务器都用 java 开发一个道理", "黑产专用语言", " 披着高级语言外衣的低级语言？那就有点厉害了啊", "一般是灰产专用\r", "不过也有另一种可能，国企之类的，领导一拍脑门，我听说有个什么易语言，你们软件以后就用这个写了。", "黑产用易语言主要是因为开发外挂的很多人英语不行，因此他们喜欢用易语言\r", "不是说易语言关键字用中文就怎么了，你看这圈子所有资料都是用中文的，对中文母语的人还是有独特优势", " \r", " \r", "YY 是纯 C++\r", "盒子是 lua", "易语言写外挂到底有啥优势", " 张口 sb 的才是 sb 吧?mdzz", " 说的是盒子的更新客户端", " 有很多现成封装好的裤，调用就行了", " 资料多，工具全。过壳，过保护，过驱动， 现成案例，一条龙服务。", "这个语言写辅助程序还是很牛 X ，如：某些抢票软件·", "某些方面的轮子很成熟，直接用。", "知道 360 和孕妇和 WIFI 、前段时间的 985 文章都是营销后，深刻怀疑这也是", " +1", "疑问：易语言凭什么比其他语音更适合写外挂，辅助程序？", "易语言相对上手容易  注册机用的多"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>个人 win10 用的双显示器：一个 27 寸的 1080P 分辨率，另外一个 28 寸 4k 分辨率（缩放 150%），下载的 intelliJ IDEA 在 4k 显示器下完全模糊的无法直视，下载的 phpstorm 也是完全模糊，刚看到 phpstorm 的 2017.1 版本出现了： <a href=\"https://confluence.jetbrains.com/display/PhpStorm/PhpStorm+EAP+171.1834+Release+Notes\" rel=\"nofollow\">https://confluence.jetbrains.com/display/PhpStorm/PhpStorm+EAP+171.1834+Release+Notes</a> 而且里面出现了“ implement JDK-managed HiDPI mode ”，兴致冲冲的下载了，所有字体还是模糊发毛，为啥 jetbrains 对高分辨率这么不重视， V 友们怎么处理高分辨率下这种模糊的？</p>\n</div></div>"], "reply": "16", "tittle": "为什么 jetbrains 的产品都不支持 4k 分辨率？", "comment": ["我这里 win10: phpstorm ,  android studio 都支持 4K\r", "24 寸屏， 200%缩放\r", "\r", "编辑区和 terminal 的字体需要单独设置到原来的 2 倍大小", "不是不支持 4K ，而是不支持 Per-Monitor DPI Scaling 。这个除了 MFC 和 WPF 以及 UWP 以外没有支持的很好的， Qt 5 貌似在努力实现。最无痛的解决方案就是用两台一样的 4K 显示器。", "是你眼光不行，买的都是该尺寸上蛋疼的分辨率。\r", "\r", "这种尺寸+这种分辨率玩游戏看片还行，办公用纯蛋疼。", "为啥要用不同分辨率的，看着不蛋疼吗", "本人 Jetbrains 家脑残粉，在老司机的告诫下知道：写代码的话， 4K 屏不要买超过 24 寸的， so 。。。。", "15.6 寸 4k 屏路过。\r", "不过 JB 确实对 Windows 下的高分屏支持不完善。不说第三方厂商，微软自己也不完善！", " 谢谢，请问一下怎样设置编辑区和 terminal 的字体大小？", "Jetbrains 家编辑器字号在不同 DPI 上很麻烦。在 4K 上需要调到二十多号，切到普通分辨率上还需要手动调回十几号。", " \r", "\r", "Settings > Editor > Colors & Fonts > Font / Console Font\r", "我这里 Consolas 字体 size 调到了 28", "在我 exe 上右键打开属性，然后禁用缩放。", "Jetbrains 是支持 Sysytem DPI 不支持 per monitor DPI 。 Chrome 也是， FireFox 是支持的。解决办法楼上也说了一个，我补充一个吧。将 DPI 低的显示器作为主显示器，然后调整字体大小。\r", "\r", "当然最好的解决办法还是两个相同 DPI 的显示器。另外 Per monitor DPI 连微软很多地方（主要是 MMC 相关的）都不支持。", "Mac 大法好！", "多看了一眼\r", "哦\r", "原来是 windows", " 同感同感", "买 Mac 吧，效果贼棒", "mac 用户表示统统都支持 27 寸 4k 完全不糊 windows 上高分屏就是搞笑的"]},
{"content": ["<div class=\"topic_content\">我就从我简历里拿出来介绍，大家帮我看看我这样的在北京大概能拿多少钱吧。明年准备去北京找工作呢。\r<br>对了。我学历低。才中专。\r<br>电脑软硬件以及网络等都有一定了解。\r<br>熟悉计算机语言 VB 了解 C 语言 ，从开始接触 PHP 的工作后计算机语言就开始生疏了。\r<br>掌握 HTML 、 CSS 、 JS 等网页基础。掌握 PC 站移动站排版，自适应排版。手写简单 JS 特效。\r<br>熟悉网页语言 PHP ，织梦 CMS 程序，以及 thinkphp 框架、及基于 TP 的 onethink 程序。做过的很多个项目也是在 onethink 的基础上扩展完善的。\r<br>做过 webapp 的项目，其实也就是移动站用 hbuilder 封装起来的 app 。对常用的一些接口了解，如微信接口，支付宝接口，短信接口等等。\r<br>做过的项目都不算大项目，对大数据及性能优化方面不了解。这方面需要提高。电脑软硬件以及网络等都有一定了解。\r<br>熟悉计算机语言 VB 了解 C 语言 ，从开始接触 PHP 的工作后计算机语言就开始生疏了。\r<br>掌握 HTML 、 CSS 、 JS 等网页基础。掌握 PC 站移动站排版，自适应排版。手写简单 JS 特效。\r<br>熟悉网页语言 PHP ，织梦 CMS 程序，以及 thinkphp 框架、及基于 TP 的 onethink 程序。做过的很多个项目也是在 onethink 的基础上扩展完善的。\r<br>做过 webapp 的项目，其实也就是移动站用 hbuilder 封装起来的 app 。对常用的一些接口了解，如微信接口，支付宝接口，短信接口等等。\r<br>做过的项目都不算大项目，对大数据及性能优化方面不了解。这方面需要提高。</div>"], "reply": "2", "tittle": "大家帮我看看像我这样的到北京能拿多少工资吧， PHP 的", "comment": ["没有人帮我瞅瞅吗", "可以把织梦 CMS 和 onethink 去掉 ~~"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>支付宝 AR 红包大家玩挺嗨啊，不过估计热度就这几天：</p>\n<p>1 ，个人给附近陌生人发红包也不会是大的。</p>\n<p>2 ，商家更愿意发代金券，现金红包被隔壁客人（其实只要有图 500 米内都可以）领走也没意义呀。</p>\n<p>3 ，公司内熟人探宝还是可以的，不过需要藏好（我拍了一下书内页，发现不 care 里面文字，只要轮廓对就可以领）</p>\n<p>总之，猎奇作用大于实际价值，发红包，还是微信好。</p>\n<p>end of story</p>\n</div></div>"], "reply": "27", "tittle": "支付宝 AR 红包大家玩挺嗨啊", "comment": ["拍图片就可以领了，不用到现场拍。刚才测试了一下 MacBook ，网上随便搜张角度类似的图就可以识别", "是的啊 支付宝技术团队很强啊~ 技术和想法~", "值得夸赞的是，支付宝居然解决了虚拟定位的问题，不知道怎么搞的", " 不和《 PokemonGo 》差不多嘛。这算哪门子想法，应该说二次抄袭的有点水准", " ", " 玩下 pokemon 啊", "感觉挺复杂的啊", "除了获取用户的地理位置，还能获取到周围的情景图，加上其他一些淘宝信息、支付宝信息。你不就全裸了？这大数据建立起来真低成本，自己不用出一分钱推广，说不定在流转过程中用沉淀资金都能赚一小笔，蛤蛤，该给这个产品经理加工资了吧。", "赞同楼上", "又一款约炮神器，拍你家床，然后包个发红包。等人来领", "拍了个网页上的 doc ，不知道不一样的页面能行不，测试时用的同一页面也识别了 5s 以上(7P)", "红包版精灵宝可梦", "\r", "\r", "想到两年前支付宝发布 kungfu 这个概念视频，当时觉得好逆天的功能现在不就实现了么。", "我对自己的裤裆拍了一张,至今没有同事过来拿钱.", "还是比较看好这个 AR 的。", " 我对我的裤裆拍了一张，领走了你的红包", "我觉得这个不会太火，局限性太大，大部分人可能就在家随手拍一张，别人也不可能闯进你家里找。只能适合一家人或者一屋子里的几个人玩，看新闻说这个 AR 会替代去年的敬业福玩法，感觉不太现实", " ", " ", "估计图是本地处理的，所以能够拿到原图，拿到原图+GPS 模拟就可以扫荡红包辣？", "羡慕你们朋友多的，我都是自己藏自己找。", "你们用技术手段抢红包，当心被支付宝列入价值观不符的用户 //doge", " 并没有解决。。。", " 你用的什么虚拟定位？\r", " 我打算用这个原理写外挂了，别拦我。。。", "已经被商家用来做广告了… 抢了好几个 1 分的商家红包……", " 机器学习已经发展到了这个地步，可以生成不存在的像素实现高清化？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>官网 <a href=\"http://apizza.cc\" rel=\"nofollow\">http://apizza.cc</a></p>\n<p>该工具第一感觉就是 postman 的国内版，（其实不是）很多人也觉得像 postman ，是的，体验上借鉴了 postman ，新的体验只是增加学习成本，但是代码都是我们一行一行码的，并不是破解谁的或者找个开源的项目修改的，界面风格我们还会在调整， postman 不足的地方我们及时改进，大伙的意见我们积极响应。做这个工具的原始灵感是因为我们觉得 postman 文档做的不好，我们就开始了，只希望做一个国内最好的一款 api 工具。我们一点一点的小心改进着。。。</p>\n<p>看下界面效果</p>\n<p><img alt=\"图片描述\" src=\"http://ohneu9iiw.bkt.clouddn.com/20161223103250.png\"></p>\n<p><img alt=\"图片描述\" src=\"http://ohneu9iiw.bkt.clouddn.com/20161223103028.png\"></p>\n<p>ps ：如果要测试 api ，请安装一下 apizza 的 chrome 插件，主要是做跨域用的。</p>\n<p>目前只支持 chrome 内核浏览器，（毕竟是工具）。</p>\n<p>已经在用的小伙伴，给点好评，也欢迎没用过的小伙伴指点一二^_^</p>\n</div></div>"], "reply": "8", "tittle": "Apizza，免费的在线 api 工具，支持模拟请求，生成文档，团队协作，还没用过的小伙伴可以试试。指点一二", "comment": ["赞一个,我也写过跟你们这个一模一样的,不过比你们这个还强大点,也是因为 postman 太不方便", "额,看了下,小极科技,好熟悉的赶脚...", " 恩啦，恩啦", "mark~赞", "要注册才能用. \r", "差评!!!", " 是个工具嘛，我们是有信心让用户注册的，不然会被喷的。原谅，原谅", "和我做的产品几乎一模一样~~哈哈  我们的想法几乎是一样的！！！！！但是我的界面 体验没有你好~", " 嘿嘿。同道中人啊"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"http://resume.zscself.com\" rel=\"nofollow\">resume.zscself.com</a><br>\n明天就要考试了，下午吃完晚饭之后就看不下书去了，虽然是二战但是还是没有多少信心，也许是我报的这个学校要求有点高吧（强行甩锅）。<br>\n现在我在宾馆里，在网上试着自己写了一下简历，发出来希望让大佬们帮我点评一下，这次如果失败了就去找工作去了，也许我就不是考研的料吧（再次强行甩锅）。<br>\n简历里的 GitHub 不知道要不要留，里面都是一些类似于期末大作业之类的。简历里写的那两个项目没敢传到网上去，毕竟给别人做的不敢发呀......而且有一个已经丢了（晕）。<br>\nGitHub 里最近的那个 repo 是 fork 的一位 V 站大佬的，我只是照猫画虎晒微修改了一下。具体的链接把简历里的“ resume ”替换成“ bilibili ”就可以了。<br>\n希望 V 友们不要说什么“考研没有用”、“你这个心态就不对，根本就是在逃避就业”，道理我都懂，但是有的人就是不撞南墙他不回头。<br>\n絮絮叨叨说了这么多，你能看到最后我真的很感激。</p>\n</div></div>", "<div class=\"topic_content\">我这个简历就是三两个小时写出来的，最初只是想要放空一下紧张的心情顺便给以后准备一下，成色不怎么样也是必然的，这种临时拼凑的东西怎么可能入得了给位大佬的法眼，其实发出来之后收获还是蛮多的，今天考试算是考完了，总体来说还算满意，小弟先谢谢各位的回复了。    \r<br>突然发现“照猫画虎”这个词用的不是特别恰当，应该叫做“比葫芦画瓢”。</div>"], "reply": "55", "tittle": "恳请各位大佬点评一下我的简历。", "comment": ["错别字：\r", "我通过晚上的技术博客理解了 Java 的反射机制。\r", "我通过网上的技术博客理解了 Java 的反射机制。", "职位：软件开发实习，替换为具体的： Java 程序员 /工程师或其它\r", "\r", "专业技能再简练点，就初级，初中级，中级划分，比如 SSH （ Struts2 、 Spring 、 Hibernate ）框架（初级）\t\r", "\r", "精通>掌握>熟悉>理解：突然来这句是什么意思？\r", "\r", "大二的经历可以去掉，大三的项目经验充实点\r", "\r", "寻求一份实习工作，如果贵司以后愿意给予机会，希望继续留在贵司工作。（这句话去掉）\r", "\r", "找个模板弄好看一点", "蓝桥杯……\r", "现在看到这个也有点感慨啊", "  我觉得万一看简历的人对这四个词的理解和我不一样，容易产生误会。。。其他的我一定虚心接受。", "精通>掌握>熟悉>理解\r", "这个排序真是太奇怪了\r", "精通>掌握>熟悉>了解\r", "这样才对吧..不过掌握和熟悉,这两个似乎没什么特别明确的顺序..", "掌握 Java 和 C 语言编程、掌握面向对象编程、熟悉 J2EE 开发。\r", "这个太牛了，掌握 C 起码应该年薪 20 个吧。", " 噗。。。是我对这几个量词没理解到位，但是我就暂时先不改了，让其他围观群众接着拍砖和参考，过两天考完了我在一口气全改了。", "好好加油", "没有实际应用的东西就不要写了，没在实际开发中用过代表你不会。项目的话，你要明确的写出你开发了什么，哪个模块是你写的，用的什么技术，把业务能说出来。直接看你简历，就是些针对业务的 CRUD 的开发经验，应该多关注分布式，会有亮点，去北京的话这简历太平淡了。", "精通>掌握>熟悉>理解  去掉\r", "复习考研（二战） 去掉\r", "自我介绍与总结   没有正面作用，删掉重写获取去掉\r", "专业技能 这一个栏目下面所有 label 都去掉， 不需要你标记这个 label ，而且有些分的也不对\r", "\r", "\r", "写简历不要自嗨... 加入太多无用信息了\r", "人应该挺踏实的，只是简历写太糟糕， 10 分我给 2 分，好好整理重新写一份吧", "考完研拿出一两个月好好看看书，写一个拿得出手的小项目再去投简历，第一份工作很重要。\r", "来自一个同样考研落榜的人的经验之谈。", "寻求一份实习工作，如果贵司以后愿意给予机会，希望继续留在贵司工作\r", "\r", "这句话去掉 太掉身份了", "\"掌握 Java 和 C 语言编程, 蓝桥杯 C/C++组优秀奖\" -- 那么, Java 中的异常是什么? 如何在 C 语言里实现异常机制?\r", "\"掌握 绝大部分数据结构知识, 熟悉 数据库基本知识\"-- 那么, 数据库中的索引是做什么的?怎么实现的? \r", "欢迎 lz 回答这两个问题", "没有亮点啊", "楼主考的是什么学校啊？", " 我承认我这个地方写得太自嗨了，但是我还是愿意尝试去回答这两个问题。 Java 中的异常是什么这个我不会。如何在 C 语言中实现，如果是我的话，我会往“通过返回不同的中断号”这个方面想。索引是什么，应该和操作系统中的索引型文件累死，通过 SHA 算法或者其他可以获得唯一编号的算法「姓名的拼音排列顺序之类的」获得一个唯一编号，然后按顺序存储相应的编号和所对应记录在文件中的位置「类似指针」。至于查找编号，可以使用 B ＋树「数据结构里是这么说的， B ＋树是应数据库而出现的一种 B 树变形」。谢谢拍砖。", " 抱歉，不太愿意在这里直白地说，专业课代号 877 ，如果感兴趣去查一下吧，不太费事。", " C 语言实现异常除了 setjmp/longjmp 还有啥方案么？", "做的项目要突出自己的作用\r", "从你的表述中要看到对方想要的潜质。", "去掉二战，去掉考研成绩（各省改卷尺度问题）\r", "意向具体点比较好\r", "\r", "同样是二战的路过。当时考完时我觉得自己要完了， 408 太差，谁知结果出来时还好，最后考上。\r", "明天加油！", " \r", "1.Java 中没用过异常, 这个有点不应该,建议这方面补充下知识. 然后回头看看自己的代码, 如何加入异常.\r", "2.\"应该和操作系统中的索引型文件累死\" --  这里答的还算在点子上, 但是何须用 OS 进行类比, 简单的说说平时在数据库中加过哪些索引就行了.", " 异常肯定是用过，有的时候需要 sleep 时肯定要加 catch 的。但是确实没有深入去了解其中的原理。", "今年找工作，梦幻般收获一个大 offer ，假如不是读研，我不见得能得到它。\r", "之前我对读研的想法还是比较消极的，但不得不承认，当一种学历渐次普及时，获得它还是值得的。\r", "楼主接下来的两天务必摆正心态，考好试，别辜负自己两年的时光。", " 我觉得能自己实现 sjlj 的异常已经很不错了. \r", "别的方案由 zero-cost 的 exception table, 但是既然我不是一个专业 C/C++开发, 这个知识点我就不班门弄斧了.", "你到底把我家钥匙放哪儿了", "建议把绿色换成深一些的，或者黑色，打印出来看不清。", "没有 key point +1\r", "完全没有做好找工作准备 +1\r", "大学四年缺乏规划 +1", "感觉掌握大部分数据结构，蓝桥杯不至于拿个优秀奖吧……还有都不知道报的是什么组别", " 没办法，大一去参加，大二才学数据结构和算法「摊手」", "你确定 github 要用动漫头像？", "张士超你到底把我家钥匙放在哪里了？", "我觉得本科这样很不错了", " 为什么 GITHUB 就不能放动漫头像了？", "多写点 Technical Details ，多出现一些关键词，比如用到的技术栈，模块名称。\r", "\r", "不要写“一个下午完成平台文档的阅读”这种，要换成 具有快速学习的能力，能够在短时间内了解并熟悉新的模块和框架，并运用到实际项目中去。\r", "\r", "不要写“我通过晚上的技术博客理解了 Java 的反射机制。” 这种，要写成，能够运用多种手段对自己不熟悉的模块进行调研，并尽快实现，来满足项目需求。", "蓝桥杯，哈哈，我 13 年也参加了，不过这个太水了，我都没看算法去混混就三等奖了，也就刚毕业找工作没经验的时候用用，如果现在有经验了还是主要写下自己做过什么，展现一下解决问题的能力", "哈哈，政治考完咯，其实大家都感觉考的不错，当然我也不例外，希望可以一直保持下去。    \r", "还有，我 tm 真的不知道钥匙到底放哪了「抬头望天」    \r", " 嗯，现在没有项目，也只能用这个证明了「或者说撑门面」。    \r", "shijingshijing 我看别人介绍经验时说“尽量把东西量化”，毕竟别人也不傻，写得太虚让人很反感。", "张士超你到底把我家钥匙放在哪里了？", " 量化是用来描述结果的，需要对比才量化。 CV 一定要注意用 formal language ，不要太口语化，但是也不要故意装逼把简单的说的很复杂，要让看简历的人能够看到你做了事情，适当的吹一吹可以，但不要吹的太厉害，又不能太随意。比如把 1 吹成 1.2 是可以的，但是吹成 10 就基本 pass 了，看你简历的人也是阅人无数的，基本上一瞄简历对这个人就能比较完整的复刻。", "问个题外话， 你是之前拿了上海彩虹合唱团钥匙的那个小子么 ？", "你给的地址打不开是什么鬼", "简历在哪呢，没找到.....", "如果能考得上还是去吧，这年头一张 985 的文凭真的蛮重要，看题主坐标估计目标哈工大？", "地址失效了？", "我不太相信熟悉 linux 环境的人用 sql server 。", "这简历看起来挺干净。。", "你把我家钥匙放哪了?", "二战，不容易啊，苦日子过了两年，希望你能考上吧。否则落榜来找工作更苦……", "感觉挺好的", "仿佛看到了曾经的自己（明显我们是一届的😂），如果我没记错的话，较大的公司是不会给非在校生提供实习机会的，好像是因为国家不允许，所以其实你的路数就是要找工作，不过当然期望楼主考上，我就在简历上给你点个人建议吧。\r", "\r", "*******干货分割线*******\r", "1. 你的优势没有表达清楚：比如说你学习能力强（自我评价中），你可以用一个实例或数据佐证一下；\r", "2. 相关经历不够清晰：感觉像是在看个人陈述（ Personal Statement ，通常申请学校要写一份），而不是简历，要突出重点，你解决的问题而不是你做了什么；\r", "3. 专业技能部分：可以不写那么多话，简单突出重点即可，如编程语言： Java/C ， 如此即可；\r", "4. 优势前置：把你认为你的优势放在最前面展现出来，让人有读下去的欲望；\r", "5. 侧重职位：软件开发工程师太泛了，切记你参加的是社招不是校招，社招是招人干活不是培养人的。\r", "*****************************\r", "\r", "以上。\r", "\r", "最后希望楼主考上研究生哈，加油！", " 😂linuxer 不会理 sql server 一套的，", "写简历不是写自传，你认为重要的东西公司不一定看重。把你自己能做什么，做过什么写清楚就行了。不要描述过多个人感受。", "在校经历得改改，考试多少分就不用写了吧", "CET4 太基本，除非考满分，不然就别写了\r", "150 满分考 100 ，实在说不上扎实\r", "整个简历写得太口语化，容易给人感觉教育程度不高，而且实在看不出亮点\r", "职位倾向也看不出来，一般公司没时间帮判断这个的", " 666 ，满分才能写，看来 v2 比逼乎还吊，四级 650 分差不多就超过 99%的人了。", "github Danmaku-De-annoymous 这个项目的 readme 语法错误很多，非常奇怪的用法更是太多了， chrome 插件 Grammarly 挺好用的，还检查固定搭配什么的\r", "\r", "does it work(s)\r", "available with (in)\r", "etc"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>明天临时有事去不了了，门票给有需要的人吧</p>\n</div></div>", "<div class=\"topic_content\">已转</div>"], "reply": "1", "tittle": "GDG 上海 门票转让", "comment": ["6666666"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>两周前来的初创公司,当时来面试的时候说之前的 代码是外包写的,我已经有心理准备了.</p>\n<p>但是却没想到,居然这么渣.</p>\n<p><img alt=\"\" src=\"https://i.imgur.com/O9bj5Tl.png\"></p>\n<p>这只是冰山一脚,for 循环用的出神入化,sql 拼的清新脱俗,</p>\n<p>没有用户登陆认证的说法,只需要传 userId 来识别用户身份,</p>\n<p>没有任何安全意识,用户列表直接返回了用户的所有信息,包括手机号 密码(明文).</p>\n<p>没有订单概念,微信支付只负责生成订单 id,不保存,支付宝由客户端自己生成订单(私钥当然也在 app 啦~)支付成功后由客户端直接提交 userid,money 直接存放数据库..</p>\n<p>数据库有一个查询要 14 秒 ,居然还不建索引,不优化.不过想想 之前的 sql,也就明白了</p>\n<p>这仍然只是冰山一角.</p>\n<p>负责人不懂技术,现在技术只剩下两个 ios 和我了(说是目前不打算做 android)</p>\n<p>现在年底了.工作不太好找.不造该咋办了.</p>\n<p>工作正好2年半,不过学历是大专</p>\n</div></div>", "<div class=\"topic_content\">更糟心的是,给我的代码跟服务器上的对不上.\r<br>\r<br>我说一次.然后联系之前的人压缩给我,并说:这次肯定是最新的.\r<br>\r<br>然而 我还能发现 服务器有的功能我本地并没有.......\r<br>\r<br>这不是我想要的生活.先投简历.今天跟老板说</div>"], "reply": "133", "tittle": "刚入职,遇到这样的代码,怎么办...", "comment": [" 你以为我还看得懂吗？ 哈哈哈哈", "你能改好 就是 CTO 了 你应该这么想～", "都坑,我们这边一波坑完又来一波,先是外包写的 php 代码,然后请了个八年经验的人来用 Java 写,然后代码写得和你这个只能说不遑多让,自己写 jsp 页面测试接口(心疼 postman),然后把这些描述接口的页面直接部署到公网上了.....重点是我和领导反应了多次,然并卵...........................................要我贴网址么", " \r", "\r", "一听自称有很多年 Java 经验的，一般都坑…\r", "\r", "Java 写得好的要么转管理了，要么做架构了，一般都不刻意声称自己有很多年 Java 经验", "貌似用的 hibernate", " 最可怕的是领导啥都不懂,还不听你的意见", "写的是不安全！还是还是可以看懂啊！", "能怎么办？死马当作活马医", "能做就做，不做就走。不要遇到点风浪就要死要活的", "看来以后你们遇到 hr 问你还有什么要问的，你应该附加这个事情：你们的项目先前有外包过吗？如果有，你懂的", "   顶你， 我 BOSS 也是经常这样喷我。 导致我现在一副没心没肺的样子。哈哈哈哈", "刚入职 就投简历了..这样的话你下一份工作 也做不长...", "老板给你工资就是让你解决这些个问题的，要是每个都写的贼好，还要你？　\r", "我要是看到这样的代码，快快的去提离职申请，　坚决走人．", " 所以你觉得试用期的存在完全是为了公司利益咯?", "一看就是故意写烂的,不建索引也是为了将来可以\"做优化\",不做验证也是为了将来可以\"提高安全性\".\r", "和阿里云超售一样,给事业单位做东西的都是这样的搞法.\r", "以前接手更新过一个内网 cms,里面有句(伪代码)\"if(!NetWorkConnected){thread.sleep(3000);}\",这不坑爹么.", ": ) 代码质量低都是有原因的\r", "\r", "这么说吧, 我最近在做一个项目的前端, 1w\r", "\r", "但是这个项目怎么看都要写几个月啊!\r", "\r", "嗯", "不能做赶紧走，越到后面压力越大", " \"三行代码情诗\"", "一堆坑，重构吧", "不好意思，看到“ for 循环用的出神入化,sql 拼的清新脱俗”我已经笑得生活不能自理了", " 做过外包，见过像你这样自以为是人写的代码，其实也是一陀屎，好不到哪里去。外包一般都是被催的要死，能赶紧完成功能就是了，要不然就有人跟你唧唧歪歪了，至于优化，哈哈。。。。", " 认同", " 别的不敢说，代码质量我还是很重视的，平均每天就写个一两百行，这要还写不好，该吃屎了", " 一句话就是永远不要相信用户的输入", "虽然知道这么拼 SQL 有风险，但是还是按照他们（同事）的方式拼接，反正项目也不是自己用。。。", "心疼...", "外包的 写完将就用 人家又不负责, 坑的就是接手的,重构? 不给你那么多工资的话,谁会重构呢", "LZ 已经走人了么？唉，我准备年后也撤了。本来需求就一天三变哪还有时间去重构啊。我看到项目代码有的还是 07 年写的，我就对重构不抱有太大期望了", " 都拼 sql 了 还用 orm 做什么", " 我没说 orm,不过感觉拼的像是 hql", "哈哈 做外包只要能吃苦就行了", " \r", " \r", "\r", "没错  是 HQL .用了 hibernate 还在拼 sql 不知道在想啥", "要么忍，要不走"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这两天翻译的一篇,讲 2017 年网页性能进行优化指南的文章.\n完整版的译文: <a href=\"https://github.com/Mrwaite/Share/blob/master/Front-End%20Performance%20Checklist%202017_CN%20.md\" rel=\"nofollow\">github</a> 或者 <a href=\"http://code.mrwaite.cn/2016/12/23/%E8%AF%91-%E5%89%8D%E7%AB%AF2017%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%B8%85%E5%8D%95/\" rel=\"nofollow\">个人博客</a></p>\n<p>初次翻译,翻译不好的地方,请予以指正.\n以下是文章中具体 33 个优化点:</p>\n<ol>\n<li>比你的最快的竞争对手快 20% 。</li>\n<li>100 毫秒的响应时间，每秒 60 帧。</li>\n<li>First meaningful paint 时间小于 1.25 秒， SpeedIndex 小于 1000</li>\n<li>选择和设置构建工具</li>\n<li>渐进增强</li>\n<li>Angular ， React ， Ember 和 co</li>\n<li>AMP or Instant Articles</li>\n<li>选择 CDN</li>\n<li>设置资源优先级</li>\n<li>使用 “ cutting-the-mustard ” 技术</li>\n<li>考虑微优化和渐进式启动</li>\n<li>正确设置 HTTP cache 头部</li>\n<li>限制第三方库和异步加载的 JavaScript</li>\n<li>正确的图片优化</li>\n<li>让图像优化提高到下一个水平</li>\n<li>web fonts 优化</li>\n<li>快速推送 critical CSS 样式</li>\n<li>使用 tree-shaking 和 code-splitting 减少有效负载</li>\n<li>提高渲染性能</li>\n<li>通过预热连接加速传输</li>\n<li>准备好迎接 HTTP/2</li>\n<li>正确部署 HTTP/2</li>\n<li>确保服务的安全性</li>\n<li>服务和 CNDs 支持 HTTP/2 ?</li>\n<li>Brotli or Zopfli compression</li>\n<li>启用了 OCSP stapling 吗？</li>\n<li>你已经采用 IPv6 了？</li>\n<li>启用了 HPACK 压缩？</li>\n<li>为缓存和网络降级启用 service workers 了？</li>\n<li>监控混合内容的警告</li>\n<li>在 DevTools 中优化了你的开发工作流吗？</li>\n<li>你在代理浏览器和旧版浏览器中测试过吗？</li>\n<li>建立了持续的监控？</li>\n</ol>\n</div></div>"], "reply": "5", "tittle": "[译] 前端 2017 性能优化清单", "comment": ["赞", "国内支持 ipv6 就景安一家貌似  少的可怜。", "博客主题很好看，文章也赞", " 感谢。博客主题是 hexo-theme-apollo ，初次翻译很多翻译不到位的见谅。", " 这篇文章只是作为 2017 年性能优化指南性的文章嘛，还有有一定超前性的（ AMP ， RAIL performance model ， HTTP/2 都是未来的趋势啊），作者在最后也这么说了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>以 lua 为原型， 做如下改动：</p>\n<ul>\n<li>语句块用大括号包裹，摒弃 do ， end 。</li>\n<li>函数传参支持类 python 的 key-value 形式。</li>\n<li>table 存储类似 php 形式，不允许稀疏数组。增加 size()函数获得 table 元素数量。废掉 ipairs 。</li>\n<li>加入异常机制。</li>\n<li>内置 map ， reduce ， filter 。</li>\n<li>更好的 string 库，正则库，以及增加多进程库。</li>\n</ul>\n<p>目前在用脚本写一些处理程序，感觉python太重太死，lua 虽小巧简单又难以满足需要。js么压根就不想用。</p>\n</div></div>"], "reply": "45", "tittle": "如果有这样一门语言，能火起来吗", "comment": ["Rust", "* 语法改了没多大意思\r", "* kargs 基本和糖差不多\r", "* 就是一个库的问题\r", "* 异常不是什么好实践\r", "* 库的问题\r", "* 库的问题\r", "\r", "基本上，你需要的是一个更好的模块机制，加一个好的包管理器，方便你引用别的库，因为你的需求基本都是引入一个函数库就能解决了，剩下的就是提供更好的开箱即用的体验，这个完全可以用模块机制+完善的包管理器就可以实现", "js 不是很好吗", "综上所述， Rust :thumb", "rust", "感觉这些和能不能火起来没啥关系。。人气主要在于：有好爹、有难以替代的应用场景、有核心优势", " 有好爹说的是 golang ？", "这不就是 Python+大括号么，我现在 Python + 游标卡尺也很好啊。", " 也可能是 C#", "如果有这样一门语言。就跟我说汉语一样。。我觉得我会喜欢。比取写。把这个数组做个冒泡排序，然后就给我排序了。。就好了", " \r", " \r", " 我用 lua 做原型就是希望能足够简单， rust 对标 c++，基本杜绝快速上手的可能。", " \r", "用大括号是希望在简单的编辑器里也能高亮对齐。\r", "命名式传参代替 table ，能省掉现在难看的大括号。\r", "至于稀疏数组，对于新手来说实在是坑坑坑，而且已经深入骨髓，不指望 lua 能改掉了。", " python 有时候很爽，有时候又蛋疼， 比如要教文案，策划写简单脚本的时候。", "lua 库太少, 做应用, 要什么没什么很尴尬", " 或者应该换个标题，这个语言有没存在的意义？", "如果语法有用的话 c#应该是最好的语言 因为这语言有你要的所有特性\r", "(1)历史悠久\r", "(2)像 c 像 java ，可以 dll ，可以汇编，也可以直接操作底层\r", "(3)你想要的语法糖都有\r", "(4)大厂搞的\r", "结果每次 c#的东西都被批判一番。。。所以我得出个结论，语法没卵用， swift 是因为苹果搞的能赚钱大家捧， js 是前端一家独大加上前端程序员爱折腾搞出一堆乱七八糟的东西，反观 java 多少还在用 1.6 甚至 1.5 的...", "第一感觉是， table 的问题，反正 lua 的 ffi 比较方便，另外引入一个库提供合用的数据结构就行\r", "然后我想起了悲催的 haskell ，默认的字符串速度实在太慢，社区就搞了一堆 ByteString ， Text 各种类型\r", "在库之间转换这些不同类型的值的时候特别心累，哈哈哈哈哈", "其实 js 还是蛮可爱的（把闭包、 this 、原型链搞清楚之后）", "kotlin", "语言火不火跟生态以及他爹的关系相当大。", "po 说的语言已经有了： C#/Java", "能不能红主要看爹", " 你去看看最新的 ES ，更可爱", "忘了贴地址了\r", "现在 语言 的发展 主要靠社区力量", "lua 有啥好的……\r", "\r", "当年做 mud 机器人搞得不要不要的。", "社区的力量 看看 vuejs ，靠国内给推动起来了", "最好能计数从零开始，并且实现 class 。", " 满足你", "一言不合开发新语言，哈哈，有技术追求，加油", "最火的语言就是你压根不想用的 js", "想要一门语言火起来，向 js 学习吧", "kotlin + 1", "如果有一个好的 ide ， java 开发速度跟脚本语言应该区别不大", "题主有个误区，一个语言火不火不是看语言好不好，而是看爹是不是厉害。 Java 不是个好语言，但是当时 Google 挺它，所以就特别流行。", "语言拼生态系统，实际是拼爹。 kubernetes 现在火的一塌糊涂，还不是有 google 这个爹", "不能。。。你说的这些都不是重点。。。", " Java 火起来的时候 google 还刚起步好吧", "我想发明一种语言，什么语法无所谓，但是用的人每人发 1000 块红包，我觉得应该能火 [滑稽", "那么 JS 他爹是谁？", "其实我觉得如果 python 语法运行在 lua vm 上会比较好点 luavm 效率不错 但是写 lua 老是要写 end 太蛋疼 类库也太少", "Kotlin 不错，现在在安卓平台火。语法比 go 更符合我的胃口，不知道啥时候在 Web 上火起来。", "语句块用大括号包裹，是 c-ish 语言的风格，  map ， reduce ， filter 又都是函数式的风格，\r", "所以你需要的就是一个 C-ish 的函数式语言。\r", "\r", "如果不纠结语句块风格的问题， 我推荐 ruby ， 什么 map ， reduce ， 人家连循环都不怎么用， 各种迭代器， 什么 table ， 人家各种提倡容器。\r", "字符处理？如 Perl 般强大， string 方法， string 就是对象， 内置方法不够用， 自己 open ， 想要什么加什么， 正则？内置了正则， 而且正则也是对象。多进程？ 内置了多线程， 支持多进程。\r", "\r", "所以， ruby 大法好。", " 人家 python 嫌重， Ruby 同样不够小巧。", "Kotlin"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>上个月，笔者对国内两大云厂商（阿里云和腾讯云）的<a href=\"http://www.codingpy.com/article/a-comparison-of-qcloud-and-aliyun-products/\" rel=\"nofollow\">云服务器、云数据库和云存储三种产品做了性能评测</a>，算是对两家的部分计算和存储产品（数据库也可视作一种存储形式）做了简要对比。虽然评测文章在 V2EX 等社区的反馈还不错，但确实还存在不少缺失。除了不好评测的售后服务等指标外，还缺少了对其他使用更为普遍的云存储产品。</p>\n<p>因此，笔者近期抽空完善<a href=\"https://github.com/bingjin/CloudTesting\" rel=\"nofollow\">《云计算产品性能测试指南》</a>，新加入了对两种云存储产品（云盘）的性能和价格对比。本次测试总计耗时 20 多天，测试的强度和时间都非常充分，本文将记录此次测试的过程和对比结果。</p>\n<h2>哪两种云盘？</h2>\n<p>云存储类别下，目前两大云产商提供了以下产品：</p>\n<ul>\n<li>块存储（阿里云、腾讯云）</li>\n<li>文件存储（阿里云）</li>\n<li>对象存储（阿里云、腾讯云）</li>\n<li>内容分发网络（阿里云、腾讯云）</li>\n<li>表格存储（阿里云）</li>\n<li>归档存储（阿里云）</li>\n</ul>\n<p>可以看出，<strong>阿里云的云存储产品类别更为丰富</strong>，云计算先行者的优势突出。</p>\n<p>在上述六种产品中，笔者上次已经对比过对象存储。内容分发网络（ CDN ）测试起来花的时间又特别长，进行有意义的比较需要的数据特别大，而且目前没找到自动化的工具，因此这次不考虑测试 CDN （欢迎推荐可以自动化测试 CDN 性能的工具）。</p>\n<p>那么剩下的两家均提供的产品，就是块存储（ Block Storage ）了。块存储，简单来说就是提供了块设备存储的接口，一个硬盘就是一个块设备。在云产商提供的产品中，所谓的普通云盘、高效云盘、 SSD 云盘，都是块存储设备。</p>\n<blockquote>\n<p>如果你对存储类型不太熟悉，建议阅读以下文章：</p>\n<ul>\n<li><a href=\"http://www.infoq.com/cn/articles/block-storage-overview\" rel=\"nofollow\">从 OpenStack 的角度看块存储的世界</a></li>\n<li><a href=\"http://limu713.blog.163.com/blog/static/15086904201222024847744/\" rel=\"nofollow\">三种存储类型比较-文件、块、对象存储</a></li>\n<li><a href=\"https://www.zhihu.com/question/21536660\" rel=\"nofollow\">知乎话题：块存储、文件存储、对象存储这三者的本质差别是什么？</a></li>\n</ul>\n</blockquote>\n<p><a href=\"http://www.codingpy.com/article/a-comparison-of-qcloud-and-aliyun-products/\" rel=\"nofollow\">上一篇评测文章</a>中，其实也对普通云盘的性能进行了对比，但包含在云服务器性能测试中。对于选择普通云盘做对比，有的读者也提出了异议。</p>\n<p><img alt=\"V2EX 读者评论\" src=\"http://ww3.sinaimg.cn/large/006tNc79gw1fafsl3flr9j30pe058my1.jpg\"></p>\n<p>确实，企业用户一般不会用服务器的本地存储保持核心数据，因为本地磁盘的数据迁移困难，而自建 raid5 磁盘阵列的数据持久性页不高，因此大多采用 SSD 云盘或高效云盘等分布式存储成为主流选择。一线云厂商比拼的也主要是分布式块存储，如 AWS 的 EBS 就是一种分布式块存储设备。</p>\n<p>为了较为完整地比较两大厂商的块存储产品，笔者近期对两家的高效云盘和 SSD 云盘进行了压测，算是对<a href=\"http://www.codingpy.com/article/a-comparison-of-qcloud-and-aliyun-products/\" rel=\"nofollow\">上一篇</a>的补充。期间犯了不少错，多花了不少冤枉钱，不过总算最终得出了比较可信、直观的数据。</p>\n<h2>厂商预期的性能</h2>\n<p>在介绍测试详情之前，先来看一看厂商对自家产品的描述。</p>\n<p>在各自的产品介绍页面（<a href=\"https://www.qcloud.com/product/cbs.html?utm_source=Zhihu&amp;utm_medium=Community&amp;utm_campaign=Community\" rel=\"nofollow\">腾讯云</a>、<a href=\"https://www.aliyun.com/product/disk?spm=5176.8142029.388261.46.NEXakN\" rel=\"nofollow\">阿里云</a>），均给出了详细的性能指标及具体的计算公式。</p>\n<ul>\n<li>阿里云：\n<ul>\n<li>高效云盘\n<ul>\n<li>IOPS ：<code>min(1000 + 6 * 容量, 3000)</code></li>\n<li>吞吐量：<code>min(50 + size * 0.1, 80)</code></li>\n<li>访问时延： 1-3ms</li>\n</ul>\n</li>\n<li>SSD 云盘\n<ul>\n<li>IOPS ：<code>min(30 * 容量, 20000)</code></li>\n<li>吞吐量：<code>min(50 + size * 0.5, 256)</code></li>\n<li>访问时延： 1-3ms</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>腾讯云：\n<ul>\n<li>高效云盘\n<ul>\n<li>IOPS ：<code>min(1500 + 容量 * 8, 4500)</code></li>\n<li>吞吐量：<code>min(75 + size * 0.147, 130)</code></li>\n<li>访问时延：&lt; 3ms</li>\n</ul>\n</li>\n<li>SSD 云盘\n<ul>\n<li>IOPS ：<code>min(容量 * 24, 2400)</code></li>\n<li>吞吐量：<code>min(150 + (容量 - 250) * 0.147, 260)</code></li>\n<li>访问时延：&lt; 3ms</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>其中：</p>\n<ul>\n<li>IOPS ：每秒读写(I/O)操作的次数，数值越高越好。</li>\n<li>吞吐量：一般用 MBPS ，每秒传输的 MB 字节数来衡量，下文用英文 Throughput 替代。</li>\n<li>访问时延：访问时延，完成一个 I/O 请求所需的时间，下文用英文 Latency 替代。</li>\n</ul>\n<p>上述三项指标中，两家只给出了 Latency 的数值范围。不过，这个可以说是最重要的性能指标。其他指标不变的情况下， Latency 为 1ms 的性能是 3ms 的 3 倍。</p>\n<p>另外，从给出的计算公式中，无法直观地比较 IOPS 、 TP 。因此，笔者用绘制了云盘性能与容量（ volume ）的关系图。</p>\n<p><a href=\"http://ww1.sinaimg.cn/large/006tNc79gw1fah1xdjyjyj31400lgwig.jpg\" rel=\"nofollow\"><img alt=\"两大产生云硬盘预期性能对比\" src=\"http://ww1.sinaimg.cn/large/006tNc79gw1fah1xdjyjyj31400lgwig.jpg\"></a></p>\n<p>上图中，<strong>红色虚线为腾讯云云盘，蓝色实线为阿里云云盘</strong>。</p>\n<p>由于腾讯云的云盘最大容量为 4000GB ，而阿里云为 32678GB ，但是为了方便查看，只绘制出了容量在 <code>[0, 4000]</code> 范围内的性能数据。另外，在图中以 Hybrid 代称高效云盘，下文同。</p>\n<p>从上图来看：</p>\n<ul>\n<li><strong>腾讯云高效云盘的预期性能遥遥领先于阿里云</strong>，尤其是最低吞吐量都比阿里云的峰值要高；</li>\n<li>但是在 SSD 云盘方面，<strong>阿里云的预期性能优势比较大，只有在容量 1TB 以上时才低于对手</strong>。</li>\n</ul>\n<p><strong>不过，以上只是厂商预期的性能数据，不代表产品的真实性能就是如此</strong>。产品实际表现如何，与预期性能差距有多大，还需要我们亲自测试、使用才可得知。</p>\n<h2>测试准备工作</h2>\n<p>在开始测试之前，笔者在两家产商分别购买了测试服务器及云盘。</p>\n<p>测试所使用的虚拟机配置为：</p>\n<ul>\n<li>CPU ： 4 核 Intel Xeon</li>\n<li>内存： 4GB DDR3</li>\n<li>操作系统： Ubuntu 14.04 64 位。</li>\n</ul>\n<p>选取的测试云盘如下：</p>\n<ul>\n<li>高效云盘： 50GB 、 400GB</li>\n<li>SSD 云盘： 250GB 、 500GB</li>\n</ul>\n<blockquote>\n<p>测试阿里云的 500GB SSD 云盘时碰到了两个大杯具，首先是余额不足导致测试程序中断，一切重来。。第二个杯具和 SSD 云盘的性能有关，具体下文中会提到。。。</p>\n</blockquote>\n<p>下文中，笔者不会具体介绍测试步骤，只说明执行了哪些测试及测试结果，具体步骤请看此前在 Github 上分享的项目：<a href=\"https://github.com/bingjin/CloudTesting/blob/master/test_cbs/test_procedure.md\" rel=\"nofollow\">CloudTesting/test_cbs</a>。</p>\n<h2>执行哪些测试</h2>\n<p>一般来说，块存储性能主要看 <strong>IOPS 、 Throughput 和 Latency</strong>三个指标，厂商也大多提供这三个指标的峰值作为购买参考。</p>\n<p><a href=\"http://www.codingpy.com/article/a-comparison-of-qcloud-and-aliyun-products/\" rel=\"nofollow\">上一篇评测</a>中，笔者就是使用 fio 对普通云盘进行测试，对比了三个指标的差异。不过现在回过头来看，<strong>测试的压力还不够大，使用的块大小、队列深度还不够全，虽然最终结果差异或许并不会太大</strong>。</p>\n<p>因此，这次针对高效云盘（ HDD+SSD ）和 SSD 云盘的测试，笔者将根据 SNIA 发布的<a href=\"http://snia.org/sites/default/files/SSS_PTS_Enterprise_v1.1.pdf\" rel=\"nofollow\">企业级 SSD 评测规范（ Solid State Storage Performance Test Specification Enterprise v1.1 ）</a>进行，以下简称该规范为 PTS 。</p>\n<p>SNIA 是存储网络行业协会(Storage Networking Industry Association ， SNIA)的简称，这是一个由厂商和大学成立的行业组织，致力于开发和推广存储系统标准。</p>\n<p>除了 IOPS 、 Throughput 和 Latency 三项基础测试外， PTS 还包含了以下五种测试：</p>\n<ul>\n<li>Write Saturation (WSAT)：持续应用工作负载，测试性能随着时间如何变化。</li>\n<li>Demand Intensity Response Time Histograms (DIRTH)</li>\n<li>Cross Stimulus Recovery (XSR)</li>\n<li>Host Idle Recovery (HIR)：测试宿主机闲置时间对性能恢复的影响。</li>\n<li>Enterprise Composite Workload (ECW)</li>\n</ul>\n<p>SNIA 官方有提供测试服务，但是收费，而且也不适用于云存储设备。</p>\n<p>因此，笔者选择了一家云计算公司根据 PTS 规范实现的自动化测试库（代码地址：<a href=\"https://github.com/cloudharmony/block-storage\" rel=\"nofollow\">https://github.com/cloudharmony/block-storage</a>），其中包含了 IOPS 、 TP 、 Latency 、 WSAT 和 HIR 五类测试，其他的没有实现。</p>\n<blockquote>\n<p>SSD 云盘的测试中没有 WSAT 和 HIR 两项，具体原因后面会提到。</p>\n</blockquote>\n<p>注意， PTS 测试中所有 fio 命令的队列深度均为 64 。具体测试细节请看官方提供的 <a href=\"http://snia.org/sites/default/files/SSS_PTS_Enterprise_v1.1.pdf\" rel=\"nofollow\">PDF</a> 文件。</p>\n<h4>PTS 测试耗时长</h4>\n<p>根据 PTS 规范，每项 SSD 性能测试需要经过<strong>1 、净化、 2 、准备工作负载、 3 、进入稳态、 4 、测试等四个环节，因此整个测试过程用时非常长，而且云盘容量越大，耗时越长。笔者在测试时，平均每块云盘大概花了 2 天的时间。</strong>由于各种原因，这次至少买了 10 块云盘做测试，因此也就有了标题中“ 20 天持续压测”的说法。**</p>\n<p>以腾讯云 500G SSD 云盘的测试时间为例说明：</p>\n<p><a href=\"http://ww4.sinaimg.cn/large/006tNc79gw1fafuzvt59sj30z208sjtj.jpg\" rel=\"nofollow\"><img alt=\"测试时长说明\" src=\"http://ww4.sinaimg.cn/large/006tNc79gw1fafuzvt59sj30z208sjtj.jpg\"></a></p>\n<p><strong>此次测试采用的是第三方提供的自动化测试库，整个步骤都是可重复的，对测试数据有疑问的同学可自行验证。</strong>在这里说明下测试所需时间，是<strong>为了提示大家启动测试程序后该干嘛就干嘛，同时保证账户中有充足的余额（尤其是后者）</strong>。</p>\n<p>在介绍测试结果之前，说明一下对两家厂商测试过程的差异（云盘均为直接格式化，未分区）。</p>\n<ul>\n<li>腾讯云由于不支持单独购买按量付费的服务器，因此开了 4 台 VM ，每台配一种测试云盘。</li>\n<li>阿里云支持单独按量购买云盘，因此只开了 2 台 VM ，每台挂载 2 块云盘，测试时针对每个云盘单独启动一个测试程序。</li>\n</ul>\n<h2>性能测试数据</h2>\n<p>经过漫长的时间，上周末终于完成了对 6 块云盘的 IOPS 、 TP 、 Latency 、 WSAT 、 HIR 五项测试。</p>\n<p>测试数据大约 190MB ，下载地址为：<a href=\"https://pan.baidu.com/s/1i5BJZCD\" rel=\"nofollow\">https://pan.baidu.com/s/1i5BJZCD</a>，提取码： e2xd 。其中，文件夹的命名规律为：<code>厂商_云盘类型_容量</code>。除了 <code>aliyun_ssd_500x</code> 和 <code>aliyun_ssd_250x</code> 外，每个文件夹下均有一个 <code>report.pdf</code> 文件，为测试程序自动生成，里面包含了测试结果、数据和图表。</p>\n<p>另外，笔者用 Highcharts 制作了一些可交互图表，可用来查看汇总后的各项数据。地址如下：<a href=\"http://www.codingpy.com/specials/cbs_test/\" rel=\"nofollow\">http://www.codingpy.com/specials/cbs_test/</a>。</p>\n<h2>阿里云的一个大坑</h2>\n<p>笔者在本文撰写快要结束时，看到阿里云 SSD 云盘的性能比预期的差很多，回头去调查原因。这才猛然发现<strong>阿里云 SSD 云盘必须搭配 I/O 优化实例才能给发挥最大性能</strong>。当时就想破口大骂。。。</p>\n<p>踩过这个坑的朋友不知道有多少？</p>\n<p><img alt=\"阿里云 SSD 云盘必须搭配 I/O 优化实例\" src=\"http://ww2.sinaimg.cn/large/006tNc79gw1fag7ria7i9j30yw0citbe.jpg\"></p>\n<p>因此，之前的 SSD 云盘数据（即 <code>aliyun_ssd_500x</code> 和 <code>aliyun_ssd_250x</code> 两个文件夹下的数据）就不具备可比性了。笔者只好重开 ECS 进行测试，为了节约时间，<strong>SSD 云盘将只测试 IOPS 、 Throughput 、 Latency 这三个基础指标</strong>。</p>\n<p>本文先对比高效云盘，重新测试完后，过几日再与大家分享具体的 SSD 云盘性能对比。</p>\n<h2>高效云盘性能对比</h2>\n<p>下面我们来看看高效云盘的测试性能，与产商预期的性能值之间是否存在差异，差异又有多大。</p>\n<p>先来回顾一下厂商预期的性能，请看下图左边部分。</p>\n<p><a href=\"http://ww1.sinaimg.cn/large/006tNc79gw1fah1xdjyjyj31400lgwig.jpg\" rel=\"nofollow\"><img alt=\"两大产生云硬盘预期性能对比\" src=\"http://ww1.sinaimg.cn/large/006tNc79gw1fah1xdjyjyj31400lgwig.jpg\"></a></p>\n<p>上图显示，<strong>腾讯云高效云盘的预期性能遥遥领先于阿里云</strong>，其中最低的吞吐量都比阿里云的峰值要高。</p>\n<p>但是真实测试数据如何？请看下面的测试结果。</p>\n<h3>基础指标测试</h3>\n<p>首先是 50GB 容量的 IOPS 、 Throughput 、 Latency 三项指标的数据（可点击图片查看大图，或查看<a href=\"http://www.codingpy.com/specials/cbs_test/\" rel=\"nofollow\">交互式图表</a>）：</p>\n<p><a href=\"http://ww4.sinaimg.cn/large/006tNc79gw1fagx5ncp9nj30xc0m841a.jpg\" rel=\"nofollow\"><img alt=\"\" src=\"http://ww4.sinaimg.cn/large/006tNc79gw1fagx5ncp9nj30xc0m841a.jpg\"></a></p>\n<p><a href=\"http://ww2.sinaimg.cn/large/006tNc79gw1fagx6a4pk6j30xc0m8wga.jpg\" rel=\"nofollow\"><img alt=\"\" src=\"http://ww2.sinaimg.cn/large/006tNc79gw1fagx6a4pk6j30xc0m8wga.jpg\"></a></p>\n<p><a href=\"http://ww3.sinaimg.cn/large/006tNc79gw1fagx6o9qksj30xc0m8jt8.jpg\" rel=\"nofollow\"><img alt=\"\" src=\"http://ww3.sinaimg.cn/large/006tNc79gw1fagx6o9qksj30xc0m8jt8.jpg\"></a></p>\n<p>400GB 容量的性能对比（可点击图片查看大图，或查看<a href=\"http://www.codingpy.com/specials/cbs_test/\" rel=\"nofollow\">交互式图表</a>）：</p>\n<p><a href=\"http://ww4.sinaimg.cn/large/006tNc79gw1fagx717ku9j30xc0m841e.jpg\" rel=\"nofollow\"><img alt=\"\" src=\"http://ww4.sinaimg.cn/large/006tNc79gw1fagx717ku9j30xc0m841e.jpg\"></a></p>\n<p><a href=\"http://ww3.sinaimg.cn/large/006tNc79gw1fagx7c3wz6j30xc0m8abt.jpg\" rel=\"nofollow\"><img alt=\"\" src=\"http://ww3.sinaimg.cn/large/006tNc79gw1fagx7c3wz6j30xc0m8abt.jpg\"></a></p>\n<p><a href=\"http://ww3.sinaimg.cn/large/006tNc79gw1fagx7rhjofj30xc0m8765.jpg\" rel=\"nofollow\"><img alt=\"\" src=\"http://ww3.sinaimg.cn/large/006tNc79gw1fagx7rhjofj30xc0m8765.jpg\"></a></p>\n<p>&lt;small&gt;图注： RW Ratio 指的是 I/O 操作中的读写比例， 0/100 表示顺序写, 100/0 表示顺序读。&lt;/small&gt;</p>\n<p>从上述图表对比来看， 可以得出结论 1 ：</p>\n<p><strong>在 50GB 、 400GB 两个容量级别上，腾讯云高效云盘的各项性能指标表现均优于阿里云，而且优势也比较明显</strong>。</p>\n<p>接下来，我们比较一下测试值与预期值之间的差异。由于预期值都是理论情况下的峰值，我们从测试数据中提取出各自的峰值。</p>\n<p><a href=\"http://ww2.sinaimg.cn/large/006tNc79gw1fag01yvq5hj314y0fqq6e.jpg\" rel=\"nofollow\"><img alt=\"高效云盘性能对比\" src=\"http://ww2.sinaimg.cn/large/006tNc79gw1fag01yvq5hj314y0fqq6e.jpg\"></a></p>\n<p>看完上面的数据，你至少会有这两个疑惑：</p>\n<ol>\n<li><strong>腾讯云的测试峰值怎么接近预期值的两倍？</strong></li>\n<li><strong>阿里云 400GB 高效云盘的延迟怎么那么高，离预期的 1-3ms 差距很大？是不是数据有误？</strong></li>\n</ol>\n<p>第一个疑惑，腾讯云两个容量的测试峰值均为预期值的两倍。产品首页中没有直接说明，只能去翻产品文档，最终在 <a href=\"https://www.qcloud.com/document/product/362/5145?utm_source=Zhihu&amp;utm_medium=Community&amp;utm_campaign=Community\" rel=\"nofollow\">CBS 使用约束页面</a>中找到了一段解释：</p>\n<blockquote>\n<p>产品文档中承诺的 IO 性能，如 1TB 的 SSD 云硬盘，随机 IOPS 能达到 24000IOPS 。含义是读写可同时达到 24000IOPS ， 4KB/8KB 的 IO 都可做到， 16KB 的 IO 大小，则无法做到 24000 （由于吞吐已经达到了 260MB/s 的限制）。</p>\n</blockquote>\n<p>简单来说，就是<strong>腾讯云高效云盘的读写操作可同时达到预期性能峰值（数据块 16KB 以下）</strong>。这样，腾讯云的数据就可以解释的通了。</p>\n<p>笔者选择的测试峰值是数据块 512b 、 50/50 读写比例下的数据，这时读写均达到了预期的 IOPS 峰值，总 IOPS 接近预期峰值的 2 倍。而顺序读、顺序写的值都接近预期的峰值。</p>\n<p>而<strong>阿里云方面，读写无法同时达到预期性能峰值</strong>。</p>\n<p>第二个疑惑，阿里云 50GB 高效云盘的 Latency 在正常范围，怎么 400GB 的就超标了？笔者一开始还以为数据错了，为此重开了虚拟机，用 ioping 做了简单的比对。结果如下图：</p>\n<p><a href=\"http://ww4.sinaimg.cn/large/006tNc79gw1fagvbj5ihxj312q0vc7fn.jpg\" rel=\"nofollow\"><img alt=\"高效云盘 Latency 对比\" src=\"http://ww4.sinaimg.cn/large/006tNc79gw1fagvbj5ihxj312q0vc7fn.jpg\"></a></p>\n<p>重新测试之后，笔者确信了此前自动测试库跑出的数据应该是没问题的。<strong>至于高时延背后的原因，可能是“邻居”比较多、 IO 操作比较活跃吧。</strong> Latency 的自动测试大概跑了 4 个多小时，重新测试时性能也没有变化，阿里云这个算不算违反了服务协议（ SLA ）呢？</p>\n<p>解决上面的疑惑之后， 我们可以得出以下结论：</p>\n<ul>\n<li><strong>结论 2 ：腾讯云达到了预期的性能；阿里云部分没有达到， 400GB 容量的时延过高。</strong></li>\n<li><strong>结论 3 ：腾讯云高效云盘的时延在 1ms 以下， IOPS 、吞吐量的优势更加突出。</strong></li>\n</ul>\n<h3>WSAT 、 HIR</h3>\n<p>下面来看 WSAT 和 HIR 测试的情况。上面提到， WSAT 测试是指在持续应用工作负载，测试性能随着时间如何变化。</p>\n<p>WSAT 自动测试最终得出的是一段时间内， IOPS 的平均值，结果如下：</p>\n<a href=\"http://ww2.sinaimg.cn/large/006tNc79gw1fag0ivl80oj30y8036aal.jpg\" rel=\"nofollow\">\n<img alt=\"WSAT 测试\" src=\"http://ww2.sinaimg.cn/large/006tNc79gw1fag0ivl80oj30y8036aal.jpg\">\n</a>\n<p>上述数据，与两家厂商预期的峰值非常接近，说明两家的高效云盘能够长时间达到 IOPS 性能峰值。但是这里看不出性能如何随时间变化，必须从生成的 PDF 中查找，笔者截图如下：</p>\n<p><a href=\"http://ww4.sinaimg.cn/large/006tNc79gw1fagw5zhogyj30xc0p0adi.jpg\" rel=\"nofollow\"><img alt=\"四种云盘 WSAT 测试\" src=\"http://ww4.sinaimg.cn/large/006tNc79gw1fagw5zhogyj30xc0p0adi.jpg\"></a></p>\n<p>从上述 4 张趋势图来看，可以得出结论 4 ：</p>\n<p><strong>两家高效云盘的 IOPS 表现均比较稳定，几乎呈一条直线，只有阿里云的 400GB 云盘有些略微波动</strong>。</p>\n<p>最后来比较 HIR 测试的结果。 HIR 主要测试宿主机闲置时间对性能恢复的影响。</p>\n<p><a href=\"http://ww1.sinaimg.cn/large/006tNc79gw1fagw6gjipoj30xc0p00x5.jpg\" rel=\"nofollow\"><img alt=\"四种云盘 HIR 测试\" src=\"http://ww1.sinaimg.cn/large/006tNc79gw1fagw6gjipoj30xc0p00x5.jpg\"></a></p>\n<p>从上述 4 张趋势图来看，可以得出结论 5 ：</p>\n<p><strong>容量越大，似乎闲置时间对性能恢复的影响越明显；阿里云 400GB 高效云盘的性能波动受闲置时间影响较明显。</strong></p>\n<p>综合上述五项测试的结果，可以认为<strong>腾讯云高效云盘的综合性能应该是阿里云高效云盘的 2 倍以上</strong>（结论 6 ）。</p>\n<h3>加入价格因素</h3>\n<p>延续<a href=\"http://www.codingpy.com/article/a-comparison-of-qcloud-and-aliyun-products/\" rel=\"nofollow\">上一篇</a>的风格，在比较完性能指标之后， 我们再加入价格因素。</p>\n<p><a href=\"http://ww4.sinaimg.cn/large/006tNc79gw1fagwlnfsvkj310w06iabb.jpg\" rel=\"nofollow\"><img alt=\"高效云盘价格对比\" src=\"http://ww4.sinaimg.cn/large/006tNc79gw1fagwlnfsvkj310w06iabb.jpg\"></a></p>\n<p>上图中，腾讯云高效云盘按量计费的价格，为根据<a href=\"https://www.qcloud.com/product/cbs?utm_source=Zhihu&amp;utm_medium=Community&amp;utm_campaign=Community\" rel=\"nofollow\">官方产品页面</a>给出的定价计算，包年包月价格为单独购买云盘时系统显示价格；阿里云高效云盘的价格根据<a href=\"https://www.aliyun.com/price/product?spm=5176.54360.203004.4.hoqhjj#/disk/detail\" rel=\"nofollow\">其给出的费用规则</a>计算。这里说明一点，腾讯云在单独购买云盘时，还只有包年包月这种模式，不够灵活。</p>\n<p>从上图对比来看：</p>\n<ul>\n<li>结论 7 ：腾讯云和阿里云的包年包月价格相同；</li>\n<li>结论 8 ：腾讯云的按量计费价格比阿里云贵，约为 1.8 倍；</li>\n<li>结论 9 ：阿里云按量计费与包年包月的价格相差很小。</li>\n</ul>\n<p>一般来说，数据盘中存储的多为持久性数据，以按量付费方式购买的企业用户应该并不多。所以，<strong>在包年包月模式下，腾讯云高效云盘的性价比非常高</strong>。</p>\n<p>不过由于阿里云两种模式之间价格差异小，使得用户在云盘使用方式上更加灵活。<strong>在笔者看来，按量计费和包年包月的核心并不在如何收费，而在于云计算产品的使用方式。价格差会使用户倾向于以某一种方式使用产品，而不是根据有业务情况自由选择。</strong></p>\n<h2>结语</h2>\n<p>上文中，我们分别从 IOPS 、 Throughput 、 Latency 、 WSAT 、 HIR 五项测试指标，对腾讯云、阿里云的 50GB 、 400GB 容量的高效云盘进行了性能对比。</p>\n<p>经过对测试数据进行分析，笔者主要得出了以下结论：</p>\n<ol>\n<li><strong>腾讯云高效云盘的各项基础性能指标均优于阿里云，且优势明显；</strong></li>\n<li><strong>腾讯云高效云盘达到了预期的性能，而阿里云部分云盘没有达到， 400GB 容量的时延过高；</strong></li>\n<li><strong>阿里云大容量高效云盘的 IOPS 性能受宿主机闲置影响较大；</strong></li>\n<li><strong>包年包月模式下，腾讯云高效云盘的性价比非常高；</strong></li>\n<li><strong>阿里云高效云盘不同计费模式下费用差别不大，选择时灵活性更高。</strong></li>\n</ol>\n<p>如果你正在考虑采购这两家产商的高效云盘，希望本文对你有帮助。如果你考虑的厂商不是腾讯云或阿里云，可以参考本文中使用的自动测试库进行全面测试。不过别忘了，要想获得最大的云盘性能，则必须购买相应厂商的云服务器，否则云应用的性能反而可能下降。关于如何测试云服务器的性能，请看笔者<a href=\"http://www.codingpy.com/article/a-comparison-of-qcloud-and-aliyun-products/\" rel=\"nofollow\">上一篇评测</a>。</p>\n<p>下一篇笔者将对比腾讯云和阿里云 SSD 云盘的性能。</p>\n<h2>参考链接</h2>\n<ul>\n<li><a href=\"http://tech.hnr.cn/yjs/2015/1117/38468.html\" rel=\"nofollow\">云存储的四大优势</a></li>\n<li><a href=\"http://www.infoq.com/cn/articles/block-storage-overview\" rel=\"nofollow\">从 OpenStack 的角度看块存储的世界</a></li>\n<li><a href=\"http://www.snia.org/forums/sssi/ptstest\" rel=\"nofollow\">SNIA SSS Performance Test Specification (PTS) Testing Service</a></li>\n<li><a href=\"http://storage.it168.com/a2011/0811/1231/000001231318.shtml\" rel=\"nofollow\">网络存储协会发布企业级 SSD 评测规范</a></li>\n<li><a href=\"https://help.aliyun.com/document_detail/25382.html\" rel=\"nofollow\">阿里云：云盘参数和性能测试方法</a></li>\n<li><a href=\"https://help.aliyun.com/document_detail/25383.html?spm=5176.doc25382.6.550.dSYhIM\" rel=\"nofollow\">阿里云：云盘的特点和应用场景</a></li>\n<li><a href=\"https://www.qcloud.com/document/product/362/6741?utm_source=Zhihu&amp;utm_medium=Community&amp;utm_campaign=Community\" rel=\"nofollow\">腾讯云：如何衡量云硬盘的性能</a></li>\n<li><a href=\"https://www.qcloud.com/document/product/362/3065?utm_source=Zhihu&amp;utm_medium=Community&amp;utm_campaign=Community\" rel=\"nofollow\">腾讯云： CBS 应用场景</a></li>\n<li><a href=\"https://www.qcloud.com/document/product/362/2353?utm_source=Zhihu&amp;utm_medium=Community&amp;utm_campaign=Community\" rel=\"nofollow\">腾讯云： CBS 产品分类及对比</a></li>\n<li><a href=\"https://github.com/cloudharmony/block-storage\" rel=\"nofollow\">块存储测试套件</a></li>\n<li><a href=\"http://www.computerweekly.com/feature/Key-storage-performance-metrics-for-virtual-environments\" rel=\"nofollow\">Key storage performance metrics for virtual environments</a></li>\n<li><a href=\"http://blogs.vmware.com/virtualblocks/2015/08/12/pro-tips-for-storage-performance-testing/\" rel=\"nofollow\">Pro Tips For Storage Performance Testing</a></li>\n<li><a href=\"http://louwrentius.com/understanding-iops-latency-and-storage-performance.html\" rel=\"nofollow\">Understanding IOPS, Latency and Storage Performance</a></li>\n<li><a href=\"http://docs.aws.amazon.com/zh_cn/AWSEC2/latest/UserGuide/EBSVolumeTypes.html\" rel=\"nofollow\">Amazon EBS 卷类型</a></li>\n<li><a href=\"http://www.cnblogs.com/huang0925/p/3879542.html\" rel=\"nofollow\">AWS 系列之三 使用 EBS</a></li>\n<li><a href=\"https://blog.sungardas.com/CTOLabs/2015/09/storage-performance-benchmarking-on-aws/\" rel=\"nofollow\">AWS 存储测试数据</a></li>\n</ul>\n</div></div>"], "reply": "48", "tittle": "20 天持续压测，告诉你云存储性能哪家强", "comment": ["大家可能喜欢直接看长文，因此把全文发过来了", "不错", "楼主幸苦", "先收藏", "收藏", "我目前用腾讯云 不错哦哦哦", "收藏 -_- 长文有参考价值", "坐等洗地。", "坐等某云洗地", "先前排观看收藏并截图", "坐等某云洗地", "收藏", "@千万云", "为啥你家超售的 io 要比别人差？", "不怕不识货，就怕货比货", " 没有比较，就没有伤害， O(∩_∩)O~", "1000w 准备好没 ", " ", "主体看完了，赞\r", "不过很多人应该是直接跳到最后看结论吧？ :D", "加油！ 这种有价值、硬碰硬的文章赞！", "我们这种 P 民，还不是哪个钱少用哪个\r", "什么性价比什么稳定性都是浮云", "腾讯软文，鉴定完毕。没猜错的话楼主就是腾讯 CVM 的技术负责人李力吧，编程派也被腾讯收购了，原本都是高质量的干货，现在一看全是腾讯云的软文。", "腾讯云的块存储后端是分布式文件系统，阿里云的块存储经测试推断就是本地磁盘（因为测试结果与本地磁盘结果很相似）。（ 2 年前测试结果）", " 求收购。我自己网站最近更新比较少，所以这几篇显得比较集中，因为时间比较少，大多是在微信公众号上分享下其他博主的干货。", " 确实，个人对性能不感冒，基本没要求，价格几乎是唯一决定因素。", "ali 云最近很多不好的消息。。\r", "所以也比较看好腾讯云。。。\r", "不过最近最关注的是 AWS\r", "楼主有兴趣做个测试 或 扫盲吗。。？", "随意点进来，居然被楼主点名了 ", "  \r", "这种东西说白了都是一分钱一分货，云产品也是如此，要比较差距，建议楼主在 AWS 上也测试一把，国内这种比较没啥意思 ", " ", "今天不都在秀女友吗?\r", "\r", "为何力哥在秀代码,因为这才是真爱啊!", "aws 呢？", "对于我们这种 P 民  哪个便宜好用用哪个", " 腾讯云的块存储后端是分布式文件系统，阿里云的块存储经测试推断就是本地磁盘（因为测试结果与本地磁盘结果很相似）。有没有这么夸张啊！", " 为啥今天秀女友，难道今天是光棍节么？", " aws 也在用。做个测试或扫盲具体指的是干啥？\r", " aws 云盘类别多，没想好该选哪个对照，而且花美金。你知道的，美金最近有点贵", " 这位英雄你好，我是腾讯云的李力。因为你的瞎鉴定，我今天在公司被同事黑了一中午[笑着哭]\r", "\r", "万万没想到，我一个技术人员成为网红竟然不是因为铁打的技术让人膜拜，而是自带了 pr 属性（有意的合作方请先把大把的钱打到我的账户上）\r", "\r", "另外还有 27 楼的 @", " ，好像是在跟我说话？ [继续哭]\r", "\r", "关于本文，跟我是完全没有关系的，我曾经在腾讯云 CBS 团队粗浅的帮过几天忙，可能还不如文章作者对存储系统的评测能力专业。其实对任何评测保持警惕都是很有必要的，而对评测的质疑也很简单，就看这么几点：\r", "\r", "1. 评测方式是否合理\r", "2. 评测功能是否全面\r", "3. 评测结果是否可重复\r", "\r", "第 3 点是最重要的。世面上为黑而黑的评测确实不少，这个评测的数据我会去找 CBS 的同事问问，其它的质疑方最好也能在技术和具体数据上验证和打脸（而不是来黑我啊）\r", "\r", "另外一方面，我统一声明一下：包括知乎和 V2EX 在内，我在互联网留下的所有回复都是我个人的行为，不代表任何公司和组织的观点。至于我前一段时间在知乎上写的一些云计算相关的技术分享，也完全属于此类，其原因是另外一个悲伤的故事，作为新晋网红，有机会再与大家分享。", " 我上个月 31 号不是给你打了 3 个多亿吗？怎么会不够钱用了？", " 我可以提供 AWS Beijing 区机器以供测试， 50G 和 400G 不要用太久并不太贵... ", " 没收到，再来 6 个亿吧\r", " 你这是要让楼主继续往坑里跳啊\r", " 你是 AWS 的？个人在用的话就不必了，毕竟对你来说不安全。我好像还没在 AWS 国内开账号，晚点注册一下看看去。", "阿里云的 IO 业界不是已知慢得吗？", "不测一下七牛吗", "这两天我发现腾迅云的 cvm 不能自助扩展配置啊。。。这也太坑了，想要升级配置，就得重新买一台，再重新配置运行环境么？。。。", " 七牛没有块存储吧\r", " 关机了之后可以升配吧，我用的时候提示只有买了系统盘是云盘的支持升配。如果非要重买，你可以弄个镜像，用镜像回复。各家都支持这个功能", "先马了再慢慢看。", "不错 腾讯云代理商来凑个热闹~", "帮忙打个广告：[[深圳] 腾讯云招聘后台开发工程师]( ", ")", " 什么意思？这两天不能用了？", " 不是不能用，是开始先买的低配，后来按别人要求，想提高配置，发现硬盘，内存， CPU 都没有升的办法。。只好又重新买了一个高配的。这哪叫什么云主机嘛。。。\r", "后来查了一下，可以自主升配置的那个叫什么云宿主机来着，忘了产品名字了，价格挺高的， 6K/月，这可用不起。。。", "笔者在本文撰写快要结束时，看到阿里云 SSD 云盘的性能比预期的差很多，回头去调查原因。这才猛然发现阿里云 SSD 云盘必须搭配 I/O 优化实例才能给发挥最大性能。当时就想破口大骂。。。\r", "\r", "看到这就没往下看了，这也太扯了吧。普通用户掉坑可以说平台有坑，你一个想做专业测试的，这么不熟悉也敢测试？那就是一个学习发动机专业的，不管会不会开车，也能去做汽车测试了？", " 你应该往下看看\r", "笔者重新做了测试 23333\r", "这才算是严谨...", " 感觉他就是个典型的喷子\r", "喷头早就准备好了, 看到个喷点, 直接开喷\r", "文章都不看完"]},
{"content": ["<div class=\"topic_content\">笔者最近在弄监控系统，调研了一些主流的\r<br>\r<br>nagios 太老\r<br>ganglia 太丑\r<br>zabbix 点来点去，操作略复杂\r<br>小米的 open-falcon 核心程序员已跳槽\r<br>\r<br>有没有看起来高大上，功能和性能还不错的开源监控系统方案呢?</div>"], "reply": "36", "tittle": "有高大上的监控系统吗？", "comment": ["监控什么？\r", "ELK ， EFK 行不？", "statsd + graphite + grafana", "\r", "\r", "够不够高大上?B 格够不够?", "生产用的话  Zabbix /  Solarwinds 啊", "   别高大上了，远程给某公司维护服务器，他们公司的监控系统就是狂拽炫酷吊炸天类型的。。。 远程过去简直卡的不行。。。我特么就是想看个数据而已！！！", " 很棒啊，晚点研究研究怎么用", " 好像只有数据展示的部分，没有报警的功能", "很多监控还都行，主要是要做告警啊", "用 open-falcon 吧，新版本会很快发布的", " 哥们是内部人士？", " open-falcon 作者", "  哪个是作者？", "我司监控系统，亲情打造，全链路请求，服务状态监控，高大上，可惜内部使用的。路过吹一下(逃", "我们公司有监控系统，公有，私有都可以提供，无埋点，全链路，哈哈...... @", " 之前用的 open-falcon 太容易各种 bug 了~  最明显的就是 一些乱七八糟的的数据被写到了监控结果之中~\r", "再遭遇两次之后就弃坑了", "influxdb + related", " 捕获一只野生的炜哥\r", "\r", "\r", " 这个就是作者", "Google 系的普罗米修斯 听名字就高大上", "指标收集： statsd\r", "存储： graphite\r", "展示： grafana\r", "告警： graphite-beacon\r", "中小公司，这三个配合起来很方便", "小米的 open-falcon 核心程序员已跳槽 ,什么时候的事？", "Prometheus+grafana,结合容器很好用,有一定学习成本", "samuelebistoletti/docker-statsd-influxdb-grafana:latest", " 遇到了具体什么 bug ？", "试试 telegraf ？ ", "Linode LongView 我觉得就够了。", "laiwei 大神啊~  @", "   支持 open-falcon  现在内部就用的 of 比较好用稳定", " 有一段时间了，目前没有截图~ 大概情况就是 运行一段时间（ 3-5 天）之后，选择 screen 的时候，会发现有很多很多选项，但是每个选项看起来都是 error trace 的一句话", " 这是什么东西？ google 也搜不到啊。。。", "这个不知道算不算高大上： ", "  应该是 ", " 高大上", " 准备尝试 Prometheus", "最近再研究 icinga ，感觉还不错", "可以试试我们开源的     "]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>首页看到了两篇贴，不理解，</p>\n</div></div>"], "reply": "4", "tittle": "CM 是撒？", "comment": ["安卓 cm", "我第一次知道它是两三年前，以为是厘米。。。", "CM 是 CyanogenMod 的缩写，一个基于安卓的第三方固件，提供原生安卓没有的一些功能。\r", "\r", "网址： ", "认真有效的回复都应该被赞赏。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>台电 x98 因为刷系统的问题，只能用安卓 4.4 版本官方 rom</p>\n<p>7 。 0 － 7 。 3 版本，都打不开，要不然进不去闪退了   要不然能打开列表，到笔记详情的 时候就闪退</p>\n<p>刚尼玛充了会员  这是逼我买个 ipad 么</p>\n</div></div>", "<div class=\"topic_content\">机器是台电 x98  系统安卓 4.4.4 官方 rom  ， atom x86 架构</div>"], "reply": "12", "tittle": "有为知笔记的工程师在么 APP 打不开啊等着用呢", "comment": ["应该发在全球工单节点", "这个标题太不准确了，这样描述会比较好\r", "\r", " “为知笔记不兼容安卓 4.4 版本”\r", "\r", "如果等着用，可以先用电脑版", "建议再描述下分辨率和系统平台 x86/armv7/arm64", "  台电 x98 应该就包含了这些信息了。 随便搜一下都有", " V2EX 没法修改帖子了 啊??? \r", "\r", "出来玩，只带了个 安卓平板，没有 win 系统  web 的又卡的很 虽然能应急。。。\r", "\r", "3q", "准备收费了", " 应该是为知没适配 x86 处理器，而台电也没适配好。 x86 安卓平板好多软件不支持的", "应急的话, 可以用模拟器吧..", " 只知道游戏不好兼容  从来没遇到软件有问题的  \r", "换印象笔记了", " 感觉在 v2 ，程序员节点发问题，会被更多人看到。", "为之确实是越用越感觉不好用的产品之一。\r", "感觉开发的水平和数量不足以撑起这个产品。\r", "先用模拟器导出吧\r", "我是转有道了，虽然也有问题，但略微舒适点", "前段时间刚把 x98 刷成砖了 心好累"]},
{"content": ["<div class=\"topic_content\">木头是一名高三的学生，每天两点一线的生活再加上繁重的功课压力，让他有点喘不过气，但是他懵懂的内心中每天都有一点小小的确幸，那就是每天放学的时候，他都可以在公交车站牌那里看见他暗恋已久的同班的一个女生，他一直想鼓起勇气接近她，但是每次小鹿乱撞的内心在关键时候总掉了链子，每当上课的时候，他总是在关注这个女生，每5秒一次的频率要向这个女生的方向瞟一眼，要是这个女生偶尔回头向他这个方向看过来，他可能今晚会兴奋到失眠。每次考完模考重新分座位的时候，他是多么的希望能和她离得更近一点，哪怕只能看见她的侧影，木头的心里也会觉得踏实。就这样在日复一日的紧张复习中，木头的内心一直有个想法，就是要好好学习，努力的让女神注意到他，并且能考上和女神一样的大学，以后能长相思守。直到有一天：\r<br>\r<br>那一天放学，天公不作美，电闪雷鸣，淅沥沥的大雨倾盆如下，木头和他的一个好兄弟撑着一把伞走在通往公交车站牌的路上，忽然前方闪过一个倩影，木头定睛一看，正是他让魂飞梦萦的女神，木头灵机一动，鼓起勇气拿着伞捣了捣女神的伞，女神回过头看到了木头笑了笑，木头的内心更是欢喜无比，这时经过了一个路口，木头的兄弟非常识趣的说：我方向和你们不一样，这伞是我的，我先拿着了。木头激动的问道：那我怎么办呢？木头的好兄弟指着女神说到：你找她帮你打伞啊！说完就拿着伞拔腿跑了。然后木头满怀期待的望着他的女神，女神冷冷的说了一句：我没打算帮你打伞啊！木头的心一下僵住了，或者说一下举足无措，他的脑海中完全没有想到会是这一幕，内心一下子跌倒了万丈深渊，木头极力的保持着此时的平静，非常勉强的挤出了一丝笑容说到：噢，没事！但是为了避免尴尬，还是和女神一起走着，瓢泼的大雨打在木头的身上，模糊了木头的双眼，他想起了一句歌词：\r<br>\r<br>心里的雨倾盆的下 却始终淋不到她\r<br>半响，木头开启了一个话题：请说你喜欢网球王子啊？女神：是啊。木头：那你最喜欢里面的谁呢？女神：当然是不二助啦~ 就在这个时候，身后传来了一个女生的声音，喊着女神的名字，木头不管三七二十，趁女神转头的那一刹那，拔起腿就向车站飞奔而去，也不管上的是哪一路公交，只想找一个可以容纳自己的地方钻进去！\r<br>\r<br>也不知道过了多少天吧，木头才从这个事情里缓过神，等他缓过神的时候，他的女神已经和班里有名的高富帅在一起了，木头每次放学回家，已经看不到女神了，蹉跎岁月，只留下木头的一声叹息。\r<br>\r<br>石头是一名大三的计算机专业学生，他每天的事情基本上就是在寝室里打打游戏，刷刷校内，写写代码。这不，在校内上发现了一个同校的小美女，正式他喜欢的类型，让他眼前一亮，于是石头立刻点下了申请好友的按钮！几天后，好友申请通过了，石头凭借着自己在网上多年摸爬滚打的本身和这个小美女展开了第一轮互动，效果还挺ok的，顺利要到了她的qq号码。在慢慢的熟悉中发现，这个妹子性格活泼开朗，有点大大咧咧，和她开玩笑一点不忌讳，而且还特别的会来事，有时候还会主动关心石头，石头有些动心了，好久没有遇到这样的一个妹子了，他想更深入的去了解这个妹子，于是就把她约了出来。\r<br>\r<br>见面的那晚，石头特地翻出了压箱的GXG衬衣，和太平鸟休闲西裤，抹了点发蜡，心情激动的出门了，在教学楼下看见妹子的时候，下了一点小雨，妹子打着一把小伞，本人没有让石头失望，石头欣喜中又夹杂着一丝紧张，过去和妹子打了个招呼，顺势把妹子手中的伞接了过来，妹子很顺从的和石头一边走一边聊着，从专业学习聊到了校园生活，从寝室夜话聊到了国际形势。就这样在绕着大学转了一圈，然后准备送妹子回寝室，但是妹子矜持了下，没让他送到楼下。这一次的见面就像一颗树苗一样在石头内心深深的扎了根发了芽，他感觉到其实这个妹子对他印象也是蛮好的，于是他觉得自己得抓紧攻势，约了她两天以后出来玩，出来的那天，石头精心准备了一套约会方案，妹子也玩的很开心，石头搭着妹子的肩膀，妹子很顺从，石头鼓起勇气去拉着妹子的手，妹子调皮的闪开了，在河边的杨柳小道上，石头觉得表白的时机已经成熟，他向妹子表达了和她在一起的想法，妹子对石头说：其实追我的男生挺多的，我发现和你在一起也挺开心的，但是我不清楚你是不是真的喜欢我还是想玩玩而已！石头一听，赶紧解释自己是真心，然后妹子说了一句：以后在一起的时间还多着呢，干嘛这么猴急呢！\r<br>\r<br>接下来的一段日子里，石头的心思全在这个妹子身上，他发现自己越来越喜欢这个妹子，每天都想见到她，对她的需求感越来越强，于是他做了很多送奶茶，充话费，帮写论文这样的事情，但是妹子对他的态度却渐渐发生了微妙的变化，妹子再也没有主动提过男女朋友的事情，石头每次问她，她都搪塞过去，而且对石头也渐渐开始忽冷忽热，石头很迷茫，是不是自己做错了什么呢，不知道该怎么办，直到有一天：\r<br>\r<br>这天晚上石头从网吧上网回来，忽然看见妹子在他的寝室楼下，他感觉很奇怪，于是上前和她打了个招呼，妹子的眼里闪过了一丝紧张，说在等一个朋友。石头觉得有蹊跷，于是他假装离去，在旁边的小卖部买了瓶水暗中注视着妹子，半响，一个帅哥从寝室里面出来，和妹子眼神示意了下两人匆匆离开，石头于是跟了上去，直到两人走到暗处，紧紧的抱在了一起。看到这里，石头的内心那个纠结啊，狠狠的把矿泉水一次性喝完用力扔到了远处。他看见两个人默默的依偎走远了，而自己静静的留在原地，灯光将他的影子拉的好长好长！\r<br>\r<br>石头再也没有联系过这个妹子，直到有一天这个妹子在qq上主动联系他，想给他一张圣诞贺卡，石头只是淡淡一笑，默默的关闭了聊天窗口。\r<br>\r<br>更多原创技术和非技术性文章欢迎关注微信公众号：fuckingxcode</div>"], "reply": "5", "tittle": "程序员那些事之那些年我们没有追到的女生", "comment": ["习惯性先拉到最下面", "不就备胎的故事吗？感觉就是标题强行加个程序员，其实内容跟程序员一点都没关系。", "footer 不加 wechat 你 TM 还是好同志", "footer 不加 wechat 你 TM 还是好同志 +1", "第一个结尾没看懂，第二个更是没有期待着的神结尾。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>自己的外贸站的“ contact us ”需要一个提供给别人联系我的途径，感觉 qq 邮箱的邮我这个服务很不错： <a href=\"http://openmail.qq.com/\" rel=\"nofollow\">http://openmail.qq.com/</a> 国外有没有类似于这种免费服务提供商？</p>\n</div></div>"], "reply": "14", "tittle": "国外有没有类似于 QQ 邮箱“邮我”这种服务的？", "comment": ["好像 Google 有这个功能，不是发邮件，而是把用户反馈记录下来。叫做“ Google 表单”（ Google Form ）。", "Sendgrid 好用，推荐", "a[href='mailto:']", "你知道 mailto url 么？", " \r", " \r", "\r", "QQ 这个不泄漏邮箱地址，也不需要你要有邮箱知道吗？", " 邮我 不是必须登录 QQ 邮箱 才能发送吗？", " 我记错了。。", "国外链接的邮件地址是加密的，看上去是乱码，可以防泄漏。", "微软的 可以创建 alias ，然后创个规则即可", "  这个不登录就可以发.相当于一个留言簿,不过这人让收件人怎么回信!", "Google Forms +1", " 「邮我」也是要登录的\r", " ", "企鹅最强的是什么？\r", "企鹅最强的是什么？\r", " 1fb41nd5k8pj20560560st"]},
{"content": ["<div class=\"topic_content\">买吧，感觉不太划算\r<br>\r<br>不买吧，还总想看看\r<br>\r<br>新书一般没有电子版\r<br>\r<br>你怎么办</div>"], "reply": "49", "tittle": "如果新上市一本，你看了一眼目录，发现只有一两章内容想看，你买还是不买？", "comment": ["=_,= 看看图书馆有没有……", "去新华书店或者图书城看完也就两三个小时的事。", "安排一个半天的时间，直接去书店看完了", "买，大陆的书价还要啥自行车", "楼上+1\r", "即使几页的内容如果对日常工作有用，投资回报比率都是正无穷。。。\r", "在国内买技术书这种一本万利的生意，根本不需要犹豫。。。", "楼上+1 。\r", "另外我个人对封面有独特的癖好，封面顺眼肯定就买了，或者内容质量足够高，哪怕就只有一两章内容，肯定买了。", "学生吗？书很便宜啊，买 100 本也花不了多少钱", "以前买的还没看完,这本先不买了", "肯定不买啊，因为这种书往往你看完感兴趣的两章后，会发现也不过如此。", "只要对自己有一点价值就买，看一两章扔了也不可惜， 5 6 楼+10086 。", "买。当年高考前刷题，买了几十本练习册，每本练习册只做自己需要的某个单元或某个类型题，如此一番经历让我对时间有了更进一步的认识。", "不买。。。知识不只是一个地方才有。", " \r", " \r", " \r", "各位说图书馆的，你们那里的图书馆就那么先进么，技术类新书怎么着也得半年以后才会有吧，至于书店，不是所有书店都有新书﹋o﹋", " 但是作者给总结的可能比自己找的要好，甚至还有作者自己的一些心得体会", " \r", " \r", " \r", "大陆的书架跟国外比确实是低，但技术类书通常比文学书贵三四倍，特别是很多书第一章就是环境搭建啊、软件介绍啊，感觉买这种书真是……", " 图书城基本所有新书都有。", "看这一两章产生的价值能否值这个价", "盗版吧，一般新书 半个月内就会有盗版出现，\r", "买份盗版，然后给书的作者 打赏一杯咖啡，", "看书的本质 如果有一两章对你有用那就值得的  盗版的话 小说现在也要付签到豆了噢", "不买，技术书籍普遍比价厚重，搬家时候太麻烦了，租房搬家又比较频繁，现在是能电子书就尽量电子书", "能借就借 不能借就拼单买一本", "书价 30 一共 10 章\r", "分章卖，一章 15", "其实每本书可以看的也就那么一两章，你这么想", "我这里可以去推荐学校图书馆购买，大概一两个月到馆吧", "买，有一点有价值的都会买。学到东西对自己提升远高于书价，你就这么想吧", "买， 每个月基本花买一两百块钱买书，多一本不多。 就算有两页有用，也值了。\r", "反正公司全额报销...", " 30 块。。。买不到的\r", "\r", " 哈哈，赞，感觉确实是这样", " 按照技术书均价 50 来看， 100 本就是 5000 ，对于学生来说很便宜？", "steam 喜+1 压根就不玩，还会在乎几本书？", "我会推荐给图书馆，然后过半年去借……", "买吧", "买。买了最多后悔几周，不买后悔几年。我就为本书后悔几年过。", "我买电子版教材的时候，遇到过（ springer 出版的数学书）是可以分章节购买的，但是一章节几十刀，我还是选择 kindle 租书或者下 PDF", "买。 有所得就好，其它只是当前不感兴趣多了解也无妨，指不定哪天用到了。", " \r", " \r", "其实一本两本的没问题，如果很多书都想看。。。。。。。", " 关键是技术类新书根本没有电子书", "今年买了 O'Reilly Safari 的订阅，书随便看，太爽了。", "喜欢就买啊，买书不要有任何的顾虑，拿来收藏也好。", "图灵出版的话，有电子版卖的。 ", "看价钱，在我接受范围内就买吧，超出了，就拍照或者直接看完吧。", " 如果真的能看完这 100 本技术书中哪怕 1/3 ，那我觉得实习半个月都能轻轻松松 cover 5000 块的开销。。。\r", "5000 块买书可以让你以后有不可限制的技术水平和薪资，买台 16GB iPhone 呢，只能让你每天多浪费 10min 清内存。。。\r", "只是一点不成熟的小建议╮(￣▽￣)╭", " 谢谢，感觉工业出版社和邮电出版社的比较多\r", "\r", " 计算机类的一般都在 50 到 150 之间\r", "\r", " 多谢啦，茅塞顿开啊，题外话， ios 也需要清理内存么，没用过 iphone", "话说你们真的认为 5000RMB 不算什么吗？", "买，会看书的都知道不是所有书都值得从头看到尾，发现有用的部分了，直接买了看", "一般都变成 想看某几章-》买书-》买回来放着-》吃灰 这个循环", "5000R 真的不算什么，随便举个栗子什么 SSR 氪金啊， MOBA 买皮肤符文啊，强化锻造打红字啊， SS4=1 肝深渊啊，类似这种开销分分钟破 5000R 吧。", "国内的技术类书籍虽然和通俗读物类比还是贵不少的，但和国外比起来又便宜太多。所以能买的尽量买吧。", "买了书还要考虑家里得占用个地方放置吧..这才是头疼的 特别是搬家的时候。", " 搬家这个问题现在考虑有点早…\r", "\r", " 比普通读物贵是真的……通常三倍多的价\r", "\r", " 看 46 楼，@zjddp 话说…………… 5k 啊，真不少，你们都土豪\r", "\r", " 就是这样，不过我都是看其中几章"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><pre><code>&lt;IfModule mod_rewrite.c&gt;\n    RewriteEngine On\n    #img 域名下只能访问图片\n    RewriteCond %{REQUEST_FILENAME} !^.*\\.(jpg|png|jpeg|gif) [NC]\n    RewriteCond %{HTTP_HOST} ^img [NC]\n    RewriteRule ^.*$ – [F,L]\n&lt;/IfModule&gt;\n</code></pre>\n<p>本意为当访问资源扩展名非图片扩展名并且访问的 host 是 img.xxx.xx 则阻止请求，但实际效果是当访问 url 为 img.xxx.xx 时皆为 403 ，不管第一个条件是否符合；条件 1 和条件 2 颠倒过来也是一样的效果</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "apache 重写规则带多个条件时出现问题", "comment": []},
{"content": ["<div class=\"topic_content\">网址：\r<br><a target=\"_blank\" href=\"https://yijuanzhaopian.com/arhb/\" rel=\"nofollow\">https://yijuanzhaopian.com/arhb/</a>\r<br>\r<br>使用方法：\r<br>手机上截屏，上传，扫描。\r<br>\r<br>限制：\r<br>只对 iOS 做了适配，省流量图片限制 500K 内\r<br>\r<br>经验：\r<br>相机离远慢慢（很慢）靠近能增加识别率\r<br>\r<br>图例：\r<br><a target=\"_blank\" href=\"https://s.yummy8.net/arhb/1.jpg\" rel=\"nofollow\">https://s.yummy8.net/arhb/1.jpg</a>\r<br><a target=\"_blank\" href=\"https://s.yummy8.net/arhb/2.jpg\" rel=\"nofollow\">https://s.yummy8.net/arhb/2.jpg</a>\r<br>\r<br>（=。=！ V 站怎么发图？）</div>", "<div class=\"topic_content\">安卓的截图别球试了。。。分辨率太多没法适配。。。\r<br>深圳布吉小学附近那位兄弟！真的不支持！传 10 遍也不支持啊！\r<br>\r<br>V 站也是良莠不齐啊。。。</div>", "<div class=\"topic_content\">流量飞升，因为机器流量比较贵，开今晚一晚，明天关掉。。。代码稍候公开。\r<br>再次提醒安卓的同学，安卓截图不支持（提示位置不一样），暂时仅支持对 iPhone 截图的处理。</div>", "<div class=\"topic_content\">原始截图较大，建议用微信传给电脑版，再上传，微信会帮忙压缩图片（注意发送时候不要勾原图）。</div>"], "reply": "67", "tittle": "支付宝 AR 红包图片处理在线工具", "comment": ["火钳刘明 顺便问一下开源吗？", " 这有什么可开源。。。我为了省事儿， php 代替 ps 处理了一下图片而已，想要代码拿去。", "截个图还 1.4M ……", "Ios 默认截图 2m 微信压了一下 jpg 格式不对😯", " 对，截图特别大，建议微信传到电脑上，再上传，微信会压缩。", " 微信传给电脑版，再上传。", "提示格式不对", "原理是啥？", " 只支持 jpg 和 png\r", " 原理见这里 ", "做个 1080*1920 的吧", "好像并不可以啊", " 回头自己改代码吧\r", " 什么不可以", "关键是如何获取，支付宝处理之前的照片，我刚才试过很多照片（在 ps 里面把遮盖条纹替换成附近的图片）确实能识别出一些图片，但是还是有很多照片识别不出来，特别是照片里面有斜条纹的，根本没用！！！", " 处理之后还是扫不出来", " 你说的我都懂。。然并卵啊，现在支付宝走私有协议，原图几乎不太可能看到了，除非逆向它，恢复的图片识别率差不多 50%吧，找轮廓比较清晰的红包拿。\r", "\r", " 没办法，跟图片有关系，理由如上。", "我是安卓系统，手机截图。然后用 photoshop 处理下，再扫描\r", "可以领取红包，", "怎么提交了就没反应了> <", "。。。。", "欺负我的电脑烂。", "为什么你给的图片格式是 810*1440 ， iPhone 哪个手机截的图是这个尺寸的？", "安卓试了，确实不行，处理后的图片非常模糊", " 6plus ，通过微信传一下就变这个分辨率了。 iPhone 的 16:9 都支持的，我测试了原图", "试了下，确实有几个可以识别。", "支付宝已经开始测试随机掩码了", " 嗯嗯，趁还可以多弄几个\r", " 肯定啊，这样下去不行的", " 手机型号不一样，尺寸就不一样，这个应该还不是很通用的", "- -试了好多次 木有成功 无缘", "楼主你妹啊 / 把 0.5M 限制去掉啊", "成功了一个，识别率不是很高", "我觉得你算法又问题。。\r", " ", "80 几 K 的照片，一直不成功。。辛苦楼主了。", " 你可以尊重一下楼主吗？可以看看 LZ 的要求吗？", " 我觉得你这个是安卓", "为什么运算放服务器，用 JS 写不就不需要上传了么", " 对！在外面过圣诞🎅🏻，回头改", "一天只能领 10 个。。。", "处理后感觉还是有问题啊， iOS, 发图给微信电脑版，之后上传处理的 ", " ", "哈哈，跟风领了两个，主要是把图片压到 500K 太麻烦了", "感觉可以直接拿 canvas 处理（海外党没法做测试", "rmbp 的 成功率很高, 好像是屏幕的分辨率越高越好", " iPhone 6s ，谢谢。", " 噢噢噢，不好意思，请你贴一张截屏的原图好嘛？难道不是 16 比 9 ？", "感觉成功率不高啊，难道是我屏幕分辨率的问题？而且现在好像载入不出来了？", "支付宝除了图像识别应该还有 LBS ？好像是有个 500 米范围的限制", " 安卓模拟位置可破", "好可怕， 你的红包地址位置怎么在国外。。", "\r", "html 本地优化版，欢迎共同研究。", "网页为做任何加密，通过 GUI PHP 开源想项目为基础改的，大家玩吧。\r", "网页为做任何加密，通过 github PHP 开源项目为基础改的，大家玩吧。 \r", " 居然不能修改评论 脑子有点炸刚玩 V2EX", "用 ps 方便点", "cnwtex @", " 240px*240px 的支持吗\r", "因为手机助手只能这么大 \r", "屏幕 5 寸", "html 的 \r", "这篇不错\r", "纯前端 canvas 作处理就好了……真心不用流量……自己写了一个自己用", "我用 canvas 写了一个，也不错，小有收获", "厉害了", "这类似于反交错…具体的反交错有非常高质量的方案的。\r", "推荐用 Python 写，或者 avisynth …？", "我想要源码。", "我用 PowerShell 自己写了个脚本来玩，手机（ android ）上开 USB 调试，然后电脑上可以直接出图.....试了几个，成功率一般，非规则图形成功率较高，有棱有角的没成功过，大概是锯齿太厉害了，尝试加高斯模糊，依旧不能识别。", "虽然成功率不高，但也证实了确实可用....\r", "估计支付宝很快又出类似验证码的干扰方案了....", "领了几个不到十块钱", "\r", "我领了二十几块钱", "识别率不太高，感觉画面内容丰富的容易成功，刚刚领了两个，谢谢楼主", "我做了一个， canvas 本地处理，不用流量。。。", "领了几个  十多块  同事领了一个 25 的", "附近有个人藏了十几个 每个都是 3 元 领了他四个之后 加我问我是谁 😂", "非常感谢有效果，有那个网址的源码可以分享下吗", "学校里的红包试了几个都是 0.01.."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这好像是个很愚蠢的问题……但是我确实不明白……</p>\n<p>我大致有以下几个问题：</p>\n<ol>\n<li>为什么很多 CSS 框架都首先推荐大家用 npm 安装？</li>\n<li>安装后的 CSS 框架如何使用？</li>\n<li>什么情况下该用 npm 安装？</li>\n<li>这样有什么好处？</li>\n</ol>\n</div></div>"], "reply": "7", "tittle": "用 npm 安装 CSS 框架有什么意义吗……", "comment": ["不光是 css 框架用 npm 装，而且 js 相关包也用 npm 装啊\r", "\r", "用的话 import (es6) 或者 require", "1. 这个是目前最好用的包管理工具\r", "2. 你要用什么组件就先用这个安装，再到你的具体文件里 import 就可以使用，记得遵循 namespace\r", "3. 只要你的项目复杂到需要一些基础 CSS 或 JS 库，就可以使用这个\r", "4. 大型项目有很多需要的组件，这个管理工具可以快速安装和整合资源，并提供一系列工具加快开发速度", "使用的时候 import 就行", "1. 统一管理\r", "2. 直接引用路径\r", "3. 同 1\r", "4. 同 1\r", "\r", "比如 ", "\r", "您的项目如果 CSS 采用 less 构建\r", "则可以使用 ", " 插件在 import 时极大的可以方便管理\r", "\r", " \"npm://normalize.css/normalize.css\";", "方便安装移植，为了组件化", "1 、学习不同的工具要成本\r", "2 、管理依赖要成本\r", "用包管理工具减少管理成本，统一用 npm 减少学习成本", "如果把整个前端项目当做是一个完整的工程的话， npm 安装 css 是有意义的。\r", "避免了在项目中 copy 第三方的代码，同时也方便升级第三方代码的版本。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h3>We 重邮</h3>\n<p>知乎文章： <a href=\"https://zhuanlan.zhihu.com/p/24380030\" rel=\"nofollow\">https://zhuanlan.zhihu.com/p/24380030</a></p>\n<p>官网： <a href=\"https://we.cqu.pt\" rel=\"nofollow\">https://we.cqu.pt</a> \\ <a href=\"http://we.cqupt.edu.cn\" rel=\"nofollow\">http://we.cqupt.edu.cn</a></p>\n<p>仓库地址： <a href=\"https://github.com/lanshan-studio/wecqupt\" rel=\"nofollow\">https://github.com/lanshan-studio/wecqupt</a></p>\n<blockquote>\n<p>We 重邮是一个微信小程序，是有别于订阅号 /服务号的一种全新的连接用户与服务的方式，可以在微信内被便捷地获取和传播，同时具有出色的使用体验。</p>\n<p>We 重邮是碎片式信息一体化校园移动门户，适用于学生和教师，集课表、成绩、考试、空教室、学生、一卡通、借阅、学费、电费、报修、公告等各功能于一身。</p>\n<p>We 重邮有更好用的课表查询，本周视图、学期视图、对应日期及时钟轴，清晰明了。</p>\n<p>We 重邮有更方便的考试安排，帮你折算出考试周对应的日期，以及考试时间倒计时，一目了然。</p>\n<p>We 重邮有更强大的学生查询，搜人利器，通过模糊查询姓名、学号、班级就可以搜索到学生的学院、专业、课表等基本信息，适合于查同学课表以及寻找失主。</p>\n<p>We 重邮也是老师的点名神器，通过课表即可查询教学班学生名单，再也不用担心忘记带学生名单，点名方便快捷。（逃</p>\n<p>We 重邮还是校园生活助手与管家，一卡通余额及消费、寝室电费，一览无余，让同学们更合理安排生活费，此外还有校园物业报修申报，随叫随到。</p>\n<p>We 重邮更是个百事通，校内头条、教务公告、 OA 公告、会议通知、学术讲座、综合新闻等，随时随地即能了解校园动态，还能预览与下载附件，掌上办公，指日可待。</p>\n<p>We 重邮更是 /更有... （期待你的发现）</p>\n</blockquote>\n<hr>\n<h3>开源须知 &amp; 开源许可证 License AGPLv3</h3>\n<blockquote>\n<p>开源是一种精神， We 重邮微信小程序的开源更是蓝山工作室的一种进步</p>\n<p>开源是自由的，而不是免费的； Free(自由) is not free(免费)。</p>\n</blockquote>\n<p>请认真阅读并遵守以下开源协议</p>\n<p>AGPLv3 <a href=\"https://github.com/lanshan-studio/wecqupt/blob/master/LICENSE\" rel=\"nofollow\">GNU Affero General Public License v3.0</a></p>\n<p>此外， We 重邮代码仅作学习微信小程序所用，版权归重庆邮电大学-蓝山工作室所有，禁止私用，违者必究。</p>\n<p>@ 重庆邮电大学 - 蓝山工作室 https://lanshan.studio</p>\n<p><strong>仓库地址： <a href=\"https://github.com/lanshan-studio/wecqupt\" rel=\"nofollow\">https://github.com/lanshan-studio/wecqupt</a></strong></p>\n<h3>真机截图</h3>\n<p>更多截图见：<a href=\"https://github.com/lanshan-studio/wecqupt/issues/196\" rel=\"nofollow\">v0.0.8 预览图 · Issue #196 · lanshan-studio/wecqupt</a></p>\n<p><img alt=\"img\" src=\"https://cloud.githubusercontent.com/assets/11243798/21165504/c4c85a02-c1da-11e6-8937-36e9a8f5de59.png\"></p>\n<h3>欢迎大佬们 Star 、学习、提建议💪</h3>\n</div></div>"], "reply": "38", "tittle": "我们的微信小程序-We 重邮即将公测，同时也将其开源啦，欢迎 Star、学习、提建议。", "comment": ["眼前一亮，作为高校内部的团队，这样的调性确实不多见。", "“ We 重邮也是老师的点名神器，通过课表即可查询教学班学生名单，再也不用担心忘记带学生名单，点名方便快捷。（逃”\r", "🌚🌚🌚🌚🌚🌚🌚🌚🌚🌚🌚🌚🌚🌚🌚🌚", "很赞~", "兹瓷，友校表示很羡慕", "赞赞赞", "毕业多年，还记得这个网址 202.202.43.125/web", "微信小程序的封闭不说，就算按框架来说也是屎一般的存在，数据必须手动更新，当然 dom 不存在了这个不好说好还是不好。没有自身的路由管理，虽然小程序有页面注册，但是你页面跳转还是得按相对路径来，这个对模块化也是相当不友好。总得来说比市面上的框架落后了不止一点半点", " 话说数据不手动更新还能怎么更新？", " 微信小程序和框架解决的不是一样的问题，你单纯从灵活性上比有些片面。小程序从模块化等等很多方面看确实很屎，但不妨碍我们用它去更好的解决一些问题。", "很不错噢。", " 我是指每次数据变动都需要 this.setData 。", " 话是这么说，可是也希望 tx 在正式发布时能有所改善。", "好奇，非企业可以注册么？", " 非企业不可能注册，但我们是找老师以学校的名义注册的", " 嘿嘿网址大全", " 49 师傅带我飞", "资讯那一栏里是富文本不？", "表示学校没有接口的孩子伤不起", "师弟师妹现在真是太优秀，我们这些前浪已经被拍死在沙滩上了。我在学校四年居然还没听过蓝山工作室，真是惭愧。\r", "\r", "衷心祝好，虽然我们这些校友不好意思厚着脸皮沾你们的光，但是我们内心是为你们骄傲的。", " 谢谢😄 。 四年都没听过蓝山工作室，哈哈，那应该是我们太低调啦...", " 不是，里面还是不支持 html 标签的，所以是后台把数据爬取后去掉标签转为纯文本的。", " 你们是学校提供 api 吗？还是爬虫抓取？", " \r", " \r", "域名 ", " 推荐给你们，闯荡一番事业", "ｸﾞｯ!(๑•̀ㅂ•́)و✧，小伙子很棒啊。", "小程序开发最大问题是官方开发工具比较难用，还经常崩溃，可以试试我的 ", " 以及 vim 插件 ", " ，完全开源， 你用它做啥都行。", "重邮计算机吊打重庆本地大多数高校这个真的不是盖的。。。", "真不错啊，", " 嘿嘿，这里也能遇见是你。", "支持下。重邮四年，只留下了 FBBBB 和 cqupt3c", " 一部分是学校提供 api ，还有一部分是爬虫抓取的", "赞一个，曾经在重邮住过一个星期", "师弟师妹们牛逼，我们当年整个学校就没几个人能自己独立写程序的。", "首次在 V 站上看到母校，赞一个～", "毕业十年了，谁还记得幽幽黄桷兰， bbs.cqupt.edu.cn ，谁还记得 202.202.43.121 这个 Ip", " 学长好， 120/121 服务器阵列的盘坏了一块。我们准备抽掉坏盘，起 ZFS 。 bbs 在内网才能打开，公网被老师关了。", "工作室的来给大佬顶一发 /斜眼笑", "请好的，加油。", "之前有点版权争议，改为私有仓库后，掉 star 了- -，现在重新开源😶"]},
{"content": ["<div class=\"topic_content\">github 地址\r<br>\r<br><a target=\"_blank\" href=\"https://github.com/open-falcon/of-release\" rel=\"nofollow\">https://github.com/open-falcon/of-release</a>\r<br>\r<br>最后一次是 9 个月前更新了？\r<br>\r<br>没人维护了？主程跳槽了？\r<br>\r<br>不敢用了啊~</div>"], "reply": "10", "tittle": "小米的监控程序 open-falcon 是不是没有人维护了？", "comment": ["小米公司的东西就不要用了", "大部分公司的开源产品也就是自己内部用用的", "早就跳槽了 ", "这个主要是给开发监控系统一个思路，看看代码就自己改吧，很多地方都不够好", "感觉挺好的，挺稳定，当然，内部用。", "最后用有基金会扶持的软件，别的东西说不维护就不维护", "大公司的项目都是 KPI 弃坑", "这些都是面向 KPI 编程或者面向简历编程的产物, 楼主还真敢用啊.\r", "你的正确姿势是, 自己弄一个自己的, 有自主知识产权的, 结合自身业务(实际并没有)的......框架, 对一定要叫它框架, 哪怕你觉得自己写的东西是狗屎, 另外起个高大上的名字, 然后开源出来, 再发动部门同事前同事同学朋友亲戚前女友机器人纷纷来 star,  注意时效性, 这东西一定要在年度 /季度考评前做完, 或者在你面试前搞完.", "不用担心， open-falcon 是一个核心社区在维护，新版也会很快发布的\r", "\r", "of-release 一直没有更新，是因为 v0.1 版本没有什么需要紧急修复的）：", "  想问下，核心社区在哪？ 什么时候会发布新版？", " 17 年 4 月份"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>同一个域名不同的二级域名，一个可以，一个不可以，这是怎么回事<img alt=\"\" src=\"http://ww4.sinaimg.cn/large/6a2da4e3gw1fb3ig94q3gj212o0oltfq.jpg\"></p>\n</div></div>"], "reply": "3", "tittle": "Mac 上用 Charles 抓 https 包 安装了 Charles 的证书部分域名仍然不能显示包内容", "comment": ["要把 https 域名加入到 SSL Proxying 中，不同子域名算不同域名，或者直接添加一个 *:443 可以涵盖所有……", "用 chrome 打开那个 url 看看，是不是显示 ssl 证书不合法。是就是服务器证书问题", "显示域名是因为服务器开启了 sni 吧"]},
{"content": ["<div class=\"topic_content\">CSAPP 中\"程序机器级表示\"一章有一段例程：\r<br>long lt_cnt = 0;\r<br>long ge_cnt =0;\r<br>long adsdiff_se(long x,long y)\r<br>{\r<br>       long result;\r<br>       if(x&lt;y){\r<br>            lt_cnt++;\r<br>            result = y-x;\r<br>       }\r<br>       else {\r<br>            ge_cnt++;\r<br>            result = x-y;\r<br>       }\r<br>       return result;\r<br>}\r<br>其中 lt_cnt++被汇编为：\r<br>       addq   $1,lt_cnt(%rip)\r<br>印象中%rip 寄存器在 32 位下是指令指针寄存器，这里的这种用法有没有特别的含义？\r<br>还有这里的加 1 操作可以直接用 inc 指令吗？</div>"], "reply": "13", "tittle": "x86-64 汇编的%rip 是不是不再特指指令指针寄存器，可以作为普通整数寄存器使用？", "comment": ["rip 作为内存引用操作数的一部分是只读的,你直接修改它的值试试,这显然不是普通寄存器的用法\r", "inc 不会影响到状态寄存器,所以溢出了 FG 也不会告诉你. add 会", "这是第几版那一页的 LZ?发来瞧瞧，忘记了", "不。。 rip 依然是 rip ，这里只是读了一下 rip 而已，这种用法好像在 CSAPP 第三版的 program counter relative addressing 讲了，很久以前看的记不清位置了，翻翻看吧。", "这是目的操作数，怎么能只是读一下呢？@Kirscheis\r", "第三版 3.6.5 。 @", " 这里是寄存器相对寻址， rip 相当于一个指针。这种用法的好处是重定向操作更简单了。可以看一下 ", ",上面说错了，(%rip)是内存引用。", " 嗯，刚回复完就发现我理解错了。", " 我的重点是为什么 c 语句 lt_cnt++;会被编译为汇编语句： addq $1,lt_cnt(%rip) ？", " 额，哪里有疑问？", " 位置无关代码", "说错了， inc/dec 不会影响状态寄存器的进位位，但是会影响零位和溢出标志", "RIP 是 64 位的， EIP 是 32 位的。在这里用 RIP 是 position-independent 的用法，用于 ELF relocation 。", " 因为之前没有任何汇编语法基础，没有理解变量符号 lt_cnt 在语句“ addq $1,lt_cnt(%rip)”中的真正含义。\r", "想当然的以为就是变量的值(contents of memory location),但在内存寻址的操作数中，其含义实际是指变量地址，对吗？\r", "变量符号还有两外两种用法，含义又有区别：\r", "movl var, %eax           /值\r", "movl $var, %eax         /地址\r", "\r", "AT&T 的汇编语法参考我只找到这个（ 32 位）：\r"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>RT~</p>\n</div></div>"], "reply": "12", "tittle": "想要学习 Python 各位有没有比较推荐的学习/mooc 网站嘛~", "comment": ["不推荐上面看文档，这个文档的 tutorial 是按照标准介绍一个语言的流程来的，很可能你花一个月读完了所有东西还是写不出一个有实用功能的程序。\r", "\r", "推荐廖雪峰的教程，或者 learn python the hard way ，看完之后翻一番 python cookbook 。\r", "\r", "也不推荐视频教程，看完之后脱离视频还是写不出程序（个人体会）", "看文档就好比看教科书，真正想要分数高还是得做题", "试试这个网站\r", " ", "现在学习资料到处都是。。。关键还是动手多写。", "入门用的 老鸟忽略\r", "从 0 开始\r", "may be you can see this link : ", " .bolger is a da niu.", "安利一个， "]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><b>免费报名｜程序员如何打造核心竞争力？</b><br>\n2016 年的最后一期。关于职场，关于未来，关于生存。不仅仅是程序员，适用于每一个职场中人， 2017 整装出发。本周五晚 9 点，来听，元旦快乐～<br>\n微信扫描图中二维码即可进入报名页<br>\n<img alt=\"图片标题\" src=\"http://ww3.sinaimg.cn/mw690/8db48fb7jw1fb42h7jxvvj20hs0se0xj.jpg\"></p>\n<p>或点击下面链接微信授权登陆报名即可。<br>\n<a href=\"http://m.qlchat.com/topic/230000308026128.htm?preview=Y&amp;intoPreview=Y\" rel=\"nofollow\">http://m.qlchat.com/topic/230000308026128.htm?preview=Y&amp;intoPreview=Y</a><br></p>\n<p><img alt=\"图片标题\" src=\"http://ww2.sinaimg.cn/mw690/8db48fb7jw1fb42hcmmkoj20hs0vkgnm.jpg\"></p>\n</div></div>"], "reply": "4", "tittle": "快要放假了，没有心情上班，来听个分享课吧", "comment": ["这个人物介绍够水", "Tony 老师，听着就像理发店的……", " 额。。起码的人身尊重呢？以名字来论人物的本身，是不是太不公平？", " 人只是比较低调而已。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>本文和大家分享的主要是前端开发中， CSS3 伪元素选择器相关用法实例，希望对大家有所帮互助。</p>\n<p>源代码</p>\n<pre><code>&lt;!DOCTYPE html&gt;\n\n&lt;html&gt;\n\n&lt;head&gt;\n\n&lt;meta charset=\"UTF-8\"&gt;\n\n&lt;title&gt;not 选择器&lt;/title&gt;\n\n&lt;style&gt;\n\n    :root{\n    \n        background: #126fb0;\n        \n    }\n    \n    body *:not(h1){\n    \n        background: #fff;\n        \n    }\n    \n    :empty{\n    \n        background: #ff6600;\n        \n    }\n    \n&lt;/style&gt;\n\n&lt;/head&gt;\n\n&lt;body&gt;\n\n&lt;h1&gt;not 选择器&lt;/h1&gt;\n\n&lt;p&gt;not 选择器 not 选择器 not 选择器 not 选择器 not 选择器 not 选择器 not 选择器 not 选择器 not 选择器 not 选择器 not 选择器 not 选择器 not 选择器 not 选择器 not 选择器 not 选择器 not 选择器 not 选择器 not 选择器 not 选择器 not 选择器 not 选择器 not 选择器 not 选择器 not 选择器&lt;/p&gt;\n\n&lt;br/&gt;\n\n&lt;table border=\"1\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\"&gt;\n\n&lt;tr&gt;\n\n    &lt;td&gt;1&lt;/td&gt;\n    \n    &lt;td&gt;2&lt;/td&gt;\n    \n    &lt;td&gt;3&lt;/td&gt;\n    \n    &lt;td&gt;4&lt;/td&gt;\n    \n&lt;/tr&gt;\n\n&lt;tr&gt;\n\n    &lt;td&gt;1&lt;/td&gt;\n    \n    &lt;td&gt;2&lt;/td&gt;\n    \n    &lt;td&gt;&lt;/td&gt;\n    \n    &lt;td&gt;4&lt;/td&gt;\n    \n&lt;/tr&gt;\n\n&lt;tr&gt;\n\n        &lt;td&gt;A&lt;/td&gt;\n        \n    &lt;td&gt;B&lt;/td&gt;\n    \n    &lt;td&gt;C&lt;/td&gt;\n    \n    &lt;td&gt;&lt;/td&gt;\n    \n&lt;/tr&gt;\n\n&lt;/table&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>\n<p>伪元素选择器是什么</p>\n<p>针对于 CSS 中已经定义好的伪元素使用的选择器。伪元素和我们上面的这个伪类，顾名思义它就是假的，那么这个为伪元素的使用方法呢。就是选择器，伪元素{属性：值}，那么与类配合使用就是选择器.类名：伪元素{属性：值}</p>\n<p>原文链接： <a href=\"http://www.maiziedu.com/wiki/css3/element/\" rel=\"nofollow\">http://www.maiziedu.com/wiki/css3/element/</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "CSS3 学习之伪元素选择器", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"mingtocat\" src=\"https://github.com/aleen42/mingtocat/raw/master/preview.gif\"></p>\n<p>Mintocat 是之前为了 Ingress 的 biocard 所设计的一只属于自己的 Octocat 。鉴于当时 GitHub 官方的 Octodex 并没有设计带中国元素的 Octocat ，因此，奇思妙想下它就被我弄出来了。具体详情可以戳： <a href=\"https://github.com/aleen42/mingtocat\" rel=\"nofollow\">https://github.com/aleen42/mingtocat</a> 。</p>\n<p>最近，我又想把它提交官方，但迫于无奈，官方只收纳其公司自己设计师所设计的。所以，真的。。。。。一万只马在奔腾。</p>\n<p>那么，问题来了。若做成贴纸并贴在 Gitbook 上的话，会好看吗？</p>\n</div></div>"], "reply": "163", "tittle": "你们愿意把这只猫做成贴纸贴在 Macbook 上吗？", "comment": [" 嗯嗯， 的确是，因为贴起来会有很大的违和感", "风格不搭啊", " thx", " 也是", "我一直搞不懂为什么 GitHub 是一只🐱和🐙结合的怪物", "你应该发 dribbble", "颜色调整一下应该会更好，现在有点太花了。", "我的 MacBook 贴纸是一个 NFC 标签，贴住 Logo 灯。", " 下意识喜欢= =", " 怎么我感觉和 behance 差不多= =", " ggggg", "嗯， 贴笔记本上避 bug ， 贴门上辟邪， 贴床上避孕", " 哈哈，要开光啊。不然服务器又宕机", "个人感觉不够萌。。。", "不错，愿意", "很喜欢这个设计，袍和冠非常精细。有贴纸的话愿意购买，但是贴本子上，总感觉电脑上不适合贴长条状的东西。", " 來 你来装个萌", " hhhh ，贴还是不要了。很违和", " 所以说，作为贴纸收藏还是不错的?", " 收藏或贴别的地方都是可以。或者出一版适合贴电脑的？不适合贴电脑属我个人看法而已啦", "这个看脸的世界。。。这个脸真的不好看><不过衣服挺漂亮的~赞一个", " 嗯，有空再设计= =但目前作为一枚程序猿，可能精力会多放在技术上面。", " hhhh ，遮着他的脸", "有意思~", "感觉脑袋画小了一些。\r", "估计月饼厂那边可能会有人贴。", "只有我觉得看起来真奇怪么???\r", "ps:衣服真的很赞,但是看起来真的好奇怪~~~~", " 有聊", " = =,哪家月餅強?", " 只是直覺上來設計, 繪畫並沒按照嚴格的要求來, 就好像比例, 光影等那些. 畢竟, 這只是突發奇想而畫出來的 svg 而已", "好萌~", " 卡哇伊咧", "可以的", "感觉有点恐怖", "有军事系统的猫吗？比如正二品骠骑将军章鱼猫。", " wow 那就太帥了吧= =估計要出手辦", " 為啥?", " 你也可以的", "很可爱的，只是头和身子不太协调，身子胖一些会更萌一点，毕竟是我萌衣冠\r", "\r", "可以买到实物的时候再发个帖通知一下大家 ", " ", "首先要有一台 macbook", " 首先要是蘋果粉", " = =不商業化啦, Octocat 的版權畢竟屬於 GitHub", "感觉有点太花了", " 畢竟是位皇帝, 太簡單估計也不好看", "到底是 Macbook 还是 GitBook ，我怎么听不懂", " = =我的天, 是 MB, 我打成了 gitbook", "不错，挺好看的，如果出个实物的话我会入手一个", "不喜欢", "感觉不错！！！", " hhh thx", " 随心", " thx", "我已经把 mb 贴满了，改天给你们看看。", "我愿意接受它贴在我的 Macbook 上，但前提是不要太大（和官方大小差不多就行），另外质量要好。", " ", " 6666", "I have a 🐙 , I have a 🐱 , eh....", " this is a 🐙, this is a 🐱, this is a  🐙🐱", "做 hi 头像了", "不愿意。\r", "首先我没有 MBP ；\r", "其次，同类型的大明衣冠的 Q 头像已经很漂亮了；\r", "再次，我完全不觉得那是猫头，莫名其妙生搬硬凑到人身上去干嘛？\r", "最后，我喜欢明交领袄，圆领无感，而且男装更无感了（纯属个人喜好）。", "没有下文了么？我很喜欢呢~~~微信都拿来当背景图了。", " 真的？最近没时间搞啦。贴纸什么的需要重新设计。", " ^_^ 设计的很好啊，真的很喜欢。只是我没有贴纸的习惯……我的微信 kelvinblood 。朋友圈 banner 就放的这张图。", " 666 thx"]},
{"content": ["<div class=\"topic_content\">在 python 文档的 how to 部分找到下面的内容：\r<br>\r<br>It is perfectly possible to send binary data over a socket. The major problem is that not all machines use the same formats for binary data. For example, a Motorola chip will represent a 16 bit integer with the value 1 as the two hex bytes 00 01. Intel and DEC, however, are byte-reversed - that same 1 is 01 00. Socket libraries have calls for converting 16 and 32 bit integers - ntohl, htonl, ntohs, htons where “ n ” means network and “ h ” means host, “ s ” means short and “ l ” means long. Where network order is host order, these do nothing, but where the machine is byte-reversed, these swap the bytes around appropriately.</div>"], "reply": "18", "tittle": "网络编程中文件传输是否需要处理大小端的问题，如何处理？", "comment": ["啥？\r", "\r", "难道文件传输不是直接按字节流传的吗？\r", "\r", "难道大小端不是只在多字节整数还是什么的上面才考虑吗？", "把主机序转换成网络字节序就可以了", " 对于大小端模式的概念我本身并不是很清晰，文件以字节流的形式传输这个我知道，因为之前看 python 文档网络编程部分的时候见到一个注意事项，关键字好像有提到文件传输，大小端这个方面的，发帖前我也有重新翻文档，但就是找不到，所以有此一问", " \r", "大小端是指程序变量 在内存中地址映射的问题吧，\r", "跟网络文件没有关系，所有的文件都是有序字节流，没有大小端这个概念", "贴个链接：理解字节序 : ", "大小端序问题关注的是一个多字节数在内存中的表示形式。\r", "比如 0x12345678 ，在大端序机器的内存中表示为 12 34 56 78 ，小端序表示为 78 56 34 12 。则如果凭空给你一个字节流不告诉你大小端序的话，你是不知道它代表多少的。\r", "因此，如果两台机器以不同的方式解读同一个字节流，则结果是不一样的。于是在网络协议中大家就约定好都用大端序表示多字节数。其实这无所谓，只要通信双方约定好用同一个字节序来解读", "不会有歧义。\r", "至于传输文件，你负责的只是原封不动地把一台机器的数据搬到另一台，又不负责对内容进行解读，这些数据无关大小端序。但是如果你要处理网络协议头中的字段，那就看协议的规定了。虽说通常都是大端序的，但如果那个协议是个私有协议，谁知道呢。", " 是不是说，网络之间的文件传输也是有大小端之分，只不过协议已经帮我们处理好了？", " 可能是我表述得不清楚，也可能是你还沒有理解。\r", "這個問題和網絡沒有關係，你可以把網絡看成一個管道，你在這一頭發送什麼，另一頭就能原封不動地收到什麼。\r", "大小端序只是一個多字節數在內存中的表示形式，跨機器時要注意解讀的順序。", " 内存就是一个柜子，一个抽屉一字节。一个 short 两字节，一上一下，两个顺序都可以。但是 CPU 只认一种。\r", "而网络是个管道，你把抽屉里的东西倒进管道里，一次一抽屉，先倒先出，反正没什么上下关系。\r", "对面也是原样接收。只有在对面需要解读这个数的时候，才需要考虑字节序。", "小端都是异类。(逃", "你这个问题就是抽象思维没有到\r", "传输一个文件并不需要明白这个文件的含义。这就是一串 byte 。反正原样发送原样接受，这个文件传输就搞定了。至于这个文件是大端小端， who cares ？你发的是啥收到就是啥。\r", "\r", "另外，大多数网络协议约定俗成大端，但私有协议爱怎么玩怎么玩。不过协议用什么顺序和你文件内容又有什么关系呢？文件内容保证原样送达就行。", " 大概明白了，就是我们爱怎么就怎么，剩下的交给 cpu 去解析", "据我所知苹果是小端序，最近用 Protobuf 向后台发二进制流之前要先转端序，其他网络是大端序", "单个字节不存在大小端的问题", " @", " 这跟 cpu 有关，跟系统基本无关， x86 机器都是小端", "基于 socket 的数据传输传输的是二进制流，顺序和字节都会原封不动的传输过去，这和你从一个文件中读取一段数据一样一样的\r", "需要注意大小端的是对整数解读问题，因为整数的数值涉及到了字节序（所以说只有两个以上的字节才有顺序问题， socket 传输的数据可以看作 char*，亦即不存在这种顺序问题）问题，比如大端数值为`0x1234`的两个字节原封不动搬到另一个小端机器解读的时候就是`0x3412`了，注意这时候内存中的字节内容、顺序是不变的", "文件传输 不存在 大小端问题!!!!\r", "文件传输 不存在 大小端问题!!!!\r", "文件传输 不存在 大小端问题!!!!\r", "\r", "大小端问题是在内存数据中,不同的 CPU 架构可能会使用不同的顺序存储多字节整数的高低字节.\r", "只有整数存在大小端问题,浮点数和单字节字符,字符串均没有大小端问题.(宽字节有没有大小端问题我不知道)\r", "\r", "当然如果写一个程序,直接把运行的程序中一些数据保存到文件中,那么在保存的文件只能在同样架构的 CPU 主机上读取才是正确的.如果是标准的文件格式,那么存储的时候就的考虑序列化的问题."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>RT ，虚拟机下载太慢了， so,,</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "Mac 下有什么软件能下载 xfplay 的视频？", "comment": []},
{"content": ["<div class=\"topic_content\">昨天新装一台 ubuntu 16.10, 安装为之笔记的时候发现现在已经不提供二进制版本下载， 只能自己克隆代码编译。\r<br>虽然现在官方文档比较粗糙， 折腾了一晚上才编译成功， 但是对为之笔记更加放心了</div>"], "reply": "27", "tittle": "为之笔记客户端彻底开源了", "comment": ["是 Wiz 为知笔记吗？", " 是的", "不是早就开源了吗？", "一个做了这么多年的软件，居然 Bug 满天飞，真不知道为啥还有这么多人用。", "你这就放心了？我是更不放心，虽说前面一次重装系统后自己编译出来了，但是心里一直很别扭，再加上前面的收费政策改变，我已经转到 leanote 了。\r", "N 年前，向老魏买过 cybernote 的正版...现在只剩回忆了～～～", "开源的只是*nix 平台的吧， windows 平台并没有开源", "*nix 的 wiznote 客户端一直都是开源的", " 暴露年龄。\r", "n 年前就是看魏拾俊用 C++ Builder 能做出界面这么好看的软件来，才去学了 C++ Builder 。后来转 VC/MFC 老费劲了。。。", " 哈哈， 当年还觉得 delphi 简直神器呢", "cybernote 我居然没听过，", "你们还记得一个叫菊子曰的东西吗？", "我用笔记最重要的功能是网页剪报，所以现在用有道了。 Evernote 的剪报我自己用的不是很舒服。", " 不要用觉得这个词，当时 delphi 就是神器，用 vc 开发累得死去活来， delphi 噼里啪啦的就给你整出来了，界面还特别漂亮，后来大家貌似都走偏了，用来开发远程控制一类的木马程序去了，估计都是受灰鸽子影响", " 我这正好反过来。先啃的 VC+MFC 。后来见到 C++Builder ，才明白 VCL 是人间真爱。", "已经转蚂蚁了.....为知搜索太难用了", "Wiz-note 客户端开源， 然而并没有太大用处。\r", "\r", "无论是用开源的客户端还是官方的客户端， 你唯一能确定的就是连接到官方的服务区端。\r", "说到底，还是一个笔记应用。\r", "我周围同事基本上也就是用来记一记日记， 我考虑过公司内部架设服务器，然而并不能。\r", "\r", "话又说回来，为知笔记本客户端还是很不错的， 另外，他有为知盒子， 相当于内部服务器，价格的话， 对于公司不贵， 只是公司不愿意花这个钱而已。", " 我比较关心的是加密笔记没有预留什么后门， 开源和自己编译可以确认这一点", "上次用的时候 还叫 网文快捕", " 这个不是个发博客的工具吗，如果没记错的话，当初还不错，挺好用的", " 后来也停止服务了，唉。总感觉好时光刚遇上就没了。", "因为 search ，我用 google docs 记笔记，搜索无敌，", " 记得，用过", " 恕我直言,就算是你自己编译的,你也不会去看他的源码,有没有后门还真说不准", " \r", "你关心它是否有后门。\r", "\r", "却不关心你的没有后门的客户端，在书写了笔记之后，上传笔记数据到哪里。\r", "\r", "这样是否有真正的意义？", " 我当然看了 aes 256 方式加密的", " 只要加密过程中没有后门， 放在哪里都是安全的", " 有印象 什么年代的事情了"]},
{"content": ["<div class=\"topic_content\">1. 目前有很多大公司在维护 Java GUI 产品吗？（考虑传统行业）\r<br>2. IntelliJ IDEA 是用什么 GUI 框架写的？\r<br>3. 目前使用 JavaFX 是个比较好的选择？</div>"], "reply": "10", "tittle": "桌面 Java GUI 是一个坑吗？", "comment": ["1. 目前有很多大公司在维护 Java GUI 产品吗？（考虑传统行业） \r", "==>因为是个坑，所以我估计较少，就算有，也会采用 Java Web Start\r", "\r", "2. IntelliJ IDEA 是用什么 GUI 框架写的？\r", "==>包括 Eclipse ，都是以 Java 为基础开发，所以这也是这些 IDE 运行时需要有 JDK(JRE)的原因\r", " \r", "3. 目前使用 JavaFX 是个比较好的选择？\r", "==>除非必要，能 B/S 就不要 C/S ； 非要 C/S ，能.NET ， C#, Python,...就不要 Java", "是", "非要 Java ， Eclipse 采用的 SWT 可以研究一下", "xmind 也是 Java 写的软件，运行挺流畅的。不过现在确实是能 B/S 就不要 C/S", "是", "我用过 javafx ，坑挺多的，不过 javafx 提供的 API 还不错，写出能跑的 GUI （很难看）还是比较容易的。 javafx 的网上资料好少。除非你的工作就是这一块，否则不推荐。", " XMind 是用的 Eclipse RCP 平台，前东家也用过，其中的界面库也是 SWT ，看起来和原生没什么区别，视觉效果比起 Swing 好多了。", "我现在正在用 javafx ，确实有些坑，但总体来说开发和维护效率比 swing 高很多， javafx 本来就是作为 swing 的替代推出的。", "是个大坑 0.0", "JavaFX 请看 => "]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h1>~</h1>\n<ol>\n<li>工作中有很多文档,  Pdf,  excel  等, 还有一些图片, 需要归档,  以便于后期的整理查找...</li>\n<li>目前的方式是按月份建立文件夹... 里面再按星期建文件夹... 存档该周的资料...</li>\n<li>有什么更好的方式来归档杂乱的文件, 如果是 OSX 或者 Win 的 App 就更好了 ~</li>\n</ol>\n<h1>:D</h1>\n</div></div>"], "reply": "6", "tittle": "求推荐 : [文档] [图片] 管理存档 App", "comment": ["Mac 的话就 DEVONthink 吧", "过节没人么... ～", ":(", "同 1 楼。", "同 1 楼。", "程序员怎么会有这么多文档？ 手动疑问。", " 倒是也不多... 每周 1.2 个... 还有不少标注... 切图... 不好整理... 找到一个 Together3 ... 功能类似 1 楼... ～"]},
{"content": "", "reply": "29", "tittle": "12306 的历史订单最多保存 30 天，超过 30 天的历史订单如何能查到（需要打印出来）。为什么历史订单会有保存时间限制，而不是像电商那样把所有订单一直保存？", "comment": ["12306 又没有售后，保留订单干什么。。。", "数据日积月累， 12306 光为存放这些『过期数据』得花多少钱？", "可以查自己的短信记录", " 哈哈，有道理", "同意 1 楼； 30 天的历史订单 + 各项规定我觉得应该就足够了。", " 没有售后 666 [手动 doge]", "同样遇到了，前两天查的时候死活查不到，结果看到了底部的小字……\r", "\r", "最后无奈，去注册邮箱搜索的 12306 …… _(:з」∠)_", "车票过期作废，无售后；数据量太大，保存成本高、查询困难，无价值。", "铁路 gong 安可以查到全部数据，包括非 12306 买的票，几年内的都可以，数据库不会清空的", "内网还是保存了，外网流量用不起也没含义。", "差不多够了吧，显示那么多，纯粹增加无谓的系统压力", "车票预售期好像都 60 天了， 30 天的确太短了点", "如果需要留存的信息，以下内容就足够了：\r", "1. 用过的车票\r", "2. 短信\r", "3. 邮件", "订单归档还是比较麻烦的,并没有想象中的那么简单", "2016 年 58 次购买记录。", "发了邮件就够了吧，猜测内部应该有存档", "邮件存档就可以了", "这个是意味着必须在 30 天内去取纸质车票么？", "邮件和短信，感觉都很方便留存的呀", "大数据耗费很多。技术也比较复杂", "反正过完春运 12306 就会从手机里消失，留着有啥用~", "邮箱有啊", " 是的，过期即使去柜台也没法取了，会没法报销。", "解释一下", "那可是 12306 啊😂  能用就行了，你还想怎样？好几亿打造的网站怎么你还有什么要求？做人不能过分啊😂", "分库存了吧， 30 天后归档到历史库，《---猜的。如果 12306 的运营学腾讯，开个 svip 可以查 2 年，我就问 lz 开不开", "首先，是乘车后 30 天， 60 天预售期不是要 30 天取票。\r", "\r", "无售后，用后作废的东西，想不出保留订单记录有何意义，顶天是你个人的统计需求，没必要为了几个特殊人的特殊需求整个系统增加复杂度和存储开销。\r", "\r", "TRS 的合同制票数据本身就是存储开车后 30 天，如果你没有乘车，或者刷二代证乘车需要取报销凭证，必须在票面发车日期后 30 天内取出否则就取不出来", "这些数据保存起来就是大数据啊, 分析以后的人口流动数据, 规划高铁建设, 这些最原始数据太有用了吧 , 对于每个人来说, 能够记录一生的长途出行数据, 那也是很有意义", "它内部肯定有记录吧，只不过不开放公众查询而已。", "我觉得肯定是保存了，只是没开放查询而已。这种大量的数据其实归档和查询都是很麻烦的事情，我淘宝现在的订单列表第二页就跑到 2014 年了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>只是想体验一下，单独买一个 mac 好像没有必要，大家觉得呢？</p>\n<p>谁愿意 give a hand!</p>\n</div></div>"], "reply": "33", "tittle": "想用 xamarin 开发一个 IOS 程序，有没有 V 友愿意提供 mac 编译服务的？", "comment": ["虚拟机或者黑苹果", "虚拟机是个好建议", " @", "  有虚拟机可以装苹果？ XCode 或者 Itunes 能用吗？ 能升级吗？好维护吗？印象中很复杂的样子！", " 怎么就没虚拟机能装黑苹果了呢？百度一下也好啊", "用 Virtualbox 跑过 OSX El Capitan ， 卡的飞起", "＠ yst @", "  @", "  以前用过 kvm+gpu passthroug ，性能超好，但是后来 itunes 不能用了，偶尔死机，不想玩了，累！", "可以下个 vmware osx 的模板，就可以新建 osx 虚拟机了，有的版本需要一些破解什么的，网上搜下就有。不过对我来说，还是 PC 黑苹果比较好，用了快 8 年了，很容易呀。", " 以前用 linux+kvm+gpu passthroug ，性能不错，但是死机、升级各种问题，害怕了，不敢用了！", " 主要是， xcode 和 itunes 能不能用很在意，毕竟是用来开发的！", " 看起来很酷，谢谢。不过，我还是自己买一个 mac 吧，任意折腾！", "虚拟机只装过一次，测试过 xcode 可以编译。黑苹果下是没有问题的，我家里办公室都是黑苹果， 08 年就开始折腾了，至今换过几拨电脑了，仍然装的是最新版本的 OSX ，遇到不能用也可以解决呀。其实 xcode 是不受影响的，就是 itunes ， cloud, imessage 等需要登录的服务，有可能会被苹果拒绝登录。这时只要想办法修改系统，尽量模拟白苹果就可以了。比如之前出现过的，双网卡不能登录，白苹果都只有一个网卡，拔掉一个就好了。还有 SMBios 要对的上，一堆工具可以生成，序列号也可以从网上搜个白苹果的，总之有各种办法解决苹果拒绝登录的。", "买个二手 mac mini 其实也不错。\r", "楼主如果是对 iOS 有兴趣就算以后不用 Xamarin 还是得搞个 Mac 吧？", "黑苹果吧，虚拟机卡的飞起", " 用 Linux KVM+GPU Passthroug 很流畅，就是不稳定", " 已经有台式机，要买的话，还是买个本吧，哈哈！", "你源码不泄露了？", "18000 才入手 很便宜的 你买一个吧 没什么的~ 还要人来帮你编译 哎~", "  我的两台黑苹果，都是没办法登陆，有没有具体的办法，指点下，谢谢！", "VMware 装 Mac 虚拟机还是挺方便的， 有 SSD 的话速度还能接受", "你没 Mac 上架都别想", "要怎么帮你？我有黑苹果和 rmbp13'", " 什么源码？玩的东西，开源一下，没关系！", " 大家说的我都不敢提让别人帮忙编译这件事情了，我还是买一个吧。", " 把你的登录失败信息加上\"黑苹果\"去 google 搜下就会有很多说明的。一般我印象中， SMBios 的原因最多，不更换个序列号成功率比较高。看你用的变色龙还是四叶草启动的，需要修改对应的启动配置文件。", "现在人已经不装新 app 了，直接做微信小程序吧", "买个二手 mac 也挺好", "😂好奇为什么都是在谈论黑苹果\r", "\r", "需要的话可以找我。。不过你得自备签名证书乱七八糟的。。\r", "E-Mail ： ", "Xamarin 的 TableView 各种坑，最后直接导致我用回 Swift 。。。使用需谨慎。。。", "前一阵子搞 jenkins 自动打包 meteor 程序，搞完现在闲置中，可以提供一下", "挂到 Github 上就行了", " 我是一个 WPF 砖家， Xaml 我不怕。我还是一名 gtk 粉丝，折腾不在乎，哈哈哈:)", " 我确实想过很多组合， icon framework, cordovar, ...，前段的世界太乱了，最终决定给 xamarin 一次机会吧！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>15MacPro 10.12.2 系统<br>\n然而我在使用 Atom 或者 IDEA 进行开发的时候，无法进行正常的编辑，一开始光标响应不了键盘，需要随便输入一些东西之后，然后删除，才可以进入正常编辑；对于这个问题，很是头疼，希望能够得到大家的帮助。\n<img alt=\"问题图片\" src=\"http://chuantu.biz/t5/44/1482762200x3085961248.png\">\n<img alt=\"正常图片\" src=\"http://chuantu.biz/t5/44/1482762250x3085961248.png\"></p>\n</div></div>"], "reply": "10", "tittle": "Mac 平台下第三方的 IDE 新建文件的开始无法编辑的问题。", "comment": ["![问题图片]( ", ")\r", "![正常图片]( ", ")", "你是不是输入了 a 或者 i 才可以开始编辑的？", "在这里又看到你的帖子了， 可以尝试换下输入法啥的", " 是的，请问你是怎么解决的？", " 楼上的哥们儿把问题描述的很清楚", "百度 vim 编辑器入门", "你可能不小心点了 vim 模式，默认的 atom 是没这个问题的，就算是中文也是能输入的", "看起来是使用了 vim 模式，你搜一下如何取消吧", " 谢谢，已解决。", " 谢谢，已解决。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>各位万能的Ｖ友，请问下　 SQLSERER 2005 数据 如何迁移到 Mysql,有什么好的方法么？</p>\n<p>目前我想到的方法是：</p>\n<ol>\n<li>导出 excel (.xls)</li>\n<li>用 csvkit 将 xls 转成 csv</li>\n<li>将 csv 导入到 mysql 　（第三步还没实践）</li>\n</ol>\n<p>几点说明:</p>\n<ul>\n<li>关于不用导入导出向导-&gt;导出 dsn?        后来查了才知道的，也不知道靠谱不，不确定，用过的可以为之正名</li>\n<li>关于为什么要先导出 excel 转成 csv?        因为　数据里面有\",\"，我已经尝试过了会有点问题</li>\n<li>关于 csvkit?                                            Python 的一个比较好用的工具，效果不错，地址<a href=\"https://github.com/wireservice/csvkit\" rel=\"nofollow\">https://github.com/wireservice/csvkit</a></li>\n</ul>\n<p>这样看起来的话，还是有点复杂，而且我还没有尝试将 csv 导入到 mysql,不清楚会不会有中文字符问题，毕竟 Sql server 2005 是　<strong>Chinese_PRC_CI_AS</strong>，导出后导入 mysql 不一定兼容</p>\n<p>求教Ｖ友有没有这方面的经验的，指点一二，有什么简单的方法能够完成，而且最好能解决掉中文字符集的问题(存入 Mysql 最好用 utf-8 格式)。</p>\n<p>先在此谢谢各位</p>\n</div></div>"], "reply": "35", "tittle": "求助： SQLSERVER 2005 迁移到 Mysql 的解决方案", "comment": ["其实目前的情况是我手边正好也没有 mysql 的数据库（最终是用 mysql ），就先拿 sqlite3 做了下测试\r", "\r", "发现成功将 csv 导入到 sqlite3 中了，在 sqlite3 的管理界面里也看到中文数据了，但是用 python peewee 去连 sqlite3 发生了\r", "peewee.OperationalError: Could not decode to UTF-8 column 'name' with text '\r", "\\ufffd\\ufffd\\ufffd\\ufffd'\r", "\r", "当然这个是 Windows 下的状况，我怀疑是中文字符集问题，当然也可能是 windows 的锅，回去试试 mac\r", "\r", "如果有哪位 V 友有经验，请指教一二，谢谢", "字段不多的话建议自己写个程序脚本 要转换字符集什么的\r", "现成的工具不一定能满足要求", "表不多的话，自己写程序更可靠点。", "navicat 有数据同步功能，可以同步 2 个不同的数据库，另外用 navicat 也可以导入 excel", "都在线的话，写程序搬\r", "无论是 CSV 还是 XLS 都会因为字符串问题一堆坑\r", "\r", "PS. 提醒， CSV 是个极其不可靠的格式", " @", " 嗯 正在自己码，就是累啊，想想如果有现成的轮子可以省好多时间", "  这个 navicat 有 mac 版么", " 有 mac 版.", " 是啊，已感受 csv 。。。又要面对这些字符集大坑，抓狂😫", " 有，但是我没用过 Mac 的数据同步功能，不知道是不是一样的", "SQLSERVER 先转 access,然后用 access 转 mysql 专用工具,效果很好", "  @", "  mac 上装了试了一下，没有中文的导入报了两个 error ，不过有数据导入，但是有中文的报了 3 个 error ，没有数据导入。。。还在尝试。。。", " 还要转 access....又要装一个微软的东东...", "试一下 DB2DB 工具，我上次试了下 MSSQL 转 Sqlite3 效果不错。\r", "\r", "不过这个工具收费的。", " sqlserver 自带转 access 的功能吧", " 哦,你说的是导出 access...了解了，刚才理解错了 ；这个可以试试：）", " @", " \r", "\r", "有进展了，从 xls 直接导入 navicat 有问题。不过我先转成 csv,然后改了下字段长度，终于成功导入了中文。", "M$ Access ，用 ODBC 连接两个数据库。\r", "然后复制粘贴即可......", "这 5 个多小时你一直在折腾数据的导入么？\r", "被这种精神感动，是夏目友人帐的那种感动", " 差不多了\r", "\r", "总结下就是工具虽然方便，但是在导入的时候自动判断字段的属性 还有长度 其实大部分时候是错的，调整起来也是真的麻烦\r", "\r", "所以如果要多次迁移的话，还是自己写代码保险，一劳永逸； 就一次的话，工具也是可以用用的，但是工具真的也有工具的问题，谁用谁知道啊。。。", "你需要的是 Kettle", "kettle 做数据清洗和转移是很方便的，各种方便的组件。\r", "\r", "另外，导入数据到 mysql 中最高效的方法是 mysql 的 load 方法，可以先从 mysql 查询数据写到一个文本文件中，然后再 load 进 mysql 当中。", "SQLite3 管理界面是什么鬼， SQLite 并没有官方 GUI 吧", "  @", " 嗯，反正都已经折腾到现在了， Kettle 我也一并去试试看吧。。。或许有惊喜呢", " 好吧，我描述有问题， SQLite 命令行界面\r", "\r", "$ sqlite3 test.db\r", "sqlite> select * from table;\r", "\r", "这样是可以看到中文显示，但是用 peewee 读表，就是字符集错误", "写程序搬，不用任何转换工具\r", "总共的表数如果少，那么直接针对每个表写个搬迁程序，一个表一个\r", "总表如果多，就写一个通用转换读取表 meta 信息的全自动化转", "\r", "这是 Mysql 官方的提供的 connector-net 的包。\r", "\r", "第一步：\r", "```\r", "select  COLUMN_NAME,case when DATA_TYPE='varchar' then DATA_TYPE+'('+CAST(CHARACTER_MAXIMUM_LENGTH as varchar(20))+')' when DATA_TYPE='numeric' or DATA_TYPE='decimal' then DATA_TYPE+'(10,5)' \r", "else DATA_TYPE end as 'type'\r", ",CHARACTER_MAXIMUM_LENGTH,* from INFORMATION_SCHEMA.COLUMNS where TABLE_NAME='你的表'\r", "\r", "```\r", "然后创建你的 mysql 表\r", "\r", "程序迁移。", "kettle", "\r", "\r", "随便写的，你可以稍微改一下。实测可以。", "  要下班后回家才能翻 qiang ，回去再看，先行谢过。", "  软件要 800M ，回去再下载试试", " 如果数据量不大，可以直接使用向导生成。 如果数据量大，需要用分页支持。请使用 5.x 版本吧。 6.x 7x 资源要的多", " 哇塞，整一个项目工程啊，慢慢看。。。", "可以遍历数据库所有表，然后创建表和字段。都在 INFORMATION_SCHEMA.COLUMNS 表里面。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>kafka consumer 在其他一些语言(如 golang, c, java, scala) 都有高可用机制，而 php 只有一些依赖库，貌似没有人开源类似 kafka consumergroup.</p>\n<p>所以我们把自己内部使用的 php kafka consumergroup 放出来，欢迎拍砖和一起完善。</p>\n<p>简单说明介绍见: <a href=\"http://www.hulkdev.com/posts/php-kafka-consumergroup\" rel=\"nofollow\">http://www.hulkdev.com/posts/php-kafka-consumergroup</a></p>\n<p>源码地址: <a href=\"https://github.com/meitu/php-kafka-consumer\" rel=\"nofollow\">https://github.com/meitu/php-kafka-consumer</a></p>\n</div></div>"], "reply": "2", "tittle": "开源 php kafka consumer", "comment": ["那个啥，可以考虑加入 composer ，现在 php 的第三方库基本都这个了", " ok, 多谢提醒。"]},
{"content": "", "reply": "4", "tittle": "好久没有来了，露个脸~", "comment": ["脸呢", "脸呢", "没脸", " 丢了。😄"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>好烦，真正写代码的时间少，调试查 BUG 解决开发环境疑难杂症等琐事的时间长，不知道公司里搞视觉图像算法的会不会有这种情况，工作时在干什么？\n要是搞图像算法机器学习的大部分时间都在干什么？\n会不会像我们搞客户端服务端的一样？</p>\n</div></div>"], "reply": "9", "tittle": "好烦，真正写代码的时间少，调试查 BUG 解决开发环境疑难杂症等琐事的时间长，不知道公司里搞视觉图像算法的会不会有这种情况，工作时在干什么？", "comment": ["感觉也会把，我现在是实习，了解的不是很多。大部分时间在跑数据.....", "要我说，调试与 DEBUG 能学到的东西远比一古脑的敲键盘学到的东西多。\r", "\r", "久病成医  ", " ", "任何行业，流程化的东西大家都会，但是疑难杂症就不是谁都能解决的，它是考验一个人的经验与技术。", " 头像是什么啊？", "以前看过一篇文章，讲的是现在国内外研究 NLP 的，百分之七八十的时间都是在手动标词性，弄用来训练机器的数据。", "连外行人都知道微软程序员一天只写 10 行代码，真正的程序员都是大部分时间用来调试和学习", "其实差的不太多，而且不光要调 bug ，还要调参数……", "搞 CV 的人，看文章的时间比较多。\r", "\r", "摸着石头过河，往往不适合 CV ，方法得用别人的。", "感觉调 bug ，能学习到的东西更多"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>新上了服务；</p>\n<p>定期看看日志；</p>\n<p>接口有很多错误；</p>\n<p>错误的原因是超时；</p>\n<p>超时的原因是上游服务挂了；</p>\n<p>上游服务挂了的原因是 Swift 崩溃了（请注意下面的 <a href=\"http://libswiftCore.so\" rel=\"nofollow\">libswiftCore.so</a> ）；</p>\n<p><img alt=\"\" src=\"https://ww4.sinaimg.cn/large/006y8lVagw1fb4e427zqbj30p00fdjv3.jpg\"></p>\n<p>崩溃的原因， Google 转了一圈，据说是 print(Error)，一个多么标准的接口；</p>\n<p><a href=\"https://bugs.swift.org/browse/SR-2476\" rel=\"nofollow\">https://bugs.swift.org/browse/SR-2476</a></p>\n<p><a href=\"https://bugs.swift.org/browse/SR-2713\" rel=\"nofollow\">https://bugs.swift.org/browse/SR-2713</a></p>\n<p>于是，我也崩溃了…</p>\n<p>哎， Swift + Ubuntu ，小孩子玩玩还可以，真没有达到商用的级别。</p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>更新：最后还是彻底解决了这个问题，又可以愉快地和 Swift + Ubuntu + <a href=\"https://vapor.codes/\" rel=\"nofollow\">Vapor</a> 玩耍了。不过，还是打算花时间学习下 <a href=\"https://github.com/PerfectlySoft/Perfect\" rel=\"nofollow\">Perfect</a>，看口碑更成熟稳定些。</p>\n<ul>\n<li>调试：使用 gdb 分析 core dump，找到崩溃的代码地址。</li>\n<li>原因：是 <a href=\"https://github.com/SwiftyBeaver/AES256CBC\" rel=\"nofollow\">AES256CBC.swift</a> 在调用 Linux 进程时，「偶尔」会导致 <a href=\"http://libswiftCore.so\" rel=\"nofollow\">libswiftCore.so</a> 崩溃。</li>\n<li>办法：替换生成随机数的方式。</li>\n</ul>\n<p>更多：<a href=\"https://atjason.com/daily/2016-12-29.html\" rel=\"nofollow\">https://atjason.com/daily/2016-12-29.html</a></p>\n</div></div>"], "reply": "17", "tittle": "吐槽一下 Swift + Ubuntu 吧，如果你也在玩的话…", "comment": ["虽然没看懂，但是还是感觉很厉害", "Swift 做后端服务语言？", "在 Linux 服务器端使用 Swift 的经验教训: ", " 是的，但还不成熟。", " 谢分享，看看；大概还是能运行的，但碰到诡异的错误后，就完全没办法了。", "Swift 的稳定性我一直持怀疑态度", " \r", "\r", "Apple 平台的 Swift 稳定性，不用怀疑；\r", "Linux 平台的 Swift 稳定性，不用怀疑；", "  没毛病", "为什么要在后端用…不坑都得烧高香", " 胆肥呗；是个挺小的服务，正好在用 Swift ，就想试试；没想到就入坑了…", " 回答真是一针见血!", " 不得已在 ubuntu 上写 swift 的表示+1\r", "也可能我人品差，就最近 1 个月就遇到 2 个 swift 本身的 bug ，一个提交了 bug 后说已经在 master 修复了，今天又遇到一个，正在蛋疼编译 swift 中。\r", "我的 swift 版本虽然没有每天更新，也不是太老，手头的版本就是上次提 bug 后才更新的，不到一个月。可见这东西离稳定还挺远的吧。", "发现的两个 bug 在 xcode 上都没问题，都是 ubuntu 上实现的锅", " 我估计能用的版本要到 5 之后。。。", " 再说一个坑：昨天发现这个问题，就把 Swift 3.0 升级到 3.0.2 ，依然没有解决问题；结果另外一个在 3.0 下编译的程序，运行就直接挂（还过有监控，不然谁知道挂了啊）；哎，这么小的版本升级都不兼容，我也是醉…\r", "\r", "手痒试了 Snapchat 版本，结果直接无法编译了，遂放弃之…", " 其实，很多不是实现有问题，是还没实现…", " 是的；.net 开源的更早，但估计 Linux 下的 .net 应该还是废柴（纯 YY 、无证据）\r", "\r", "关键没动力推进啊，这是个悖论：\r", "\r", "作为开发者，肯定是选用稳定、库多的平台；\r", "而作为平台，如果总是没有开发者使用，肯定不稳定、库不多。\r", "\r", "我就是那个可怜的、在 Swift + Ubuntu 中爬坑的宝宝…"]},
{"content": "", "reply": "7", "tittle": "Android 用 XML 来表示 UI， react 认为应该全部写在 js 里，他们都认为对方的传统是好的", "comment": ["发动下嘴炮技能吧。。还在纠结 react 的界面为啥在 js 里面的，基本都是刚刚开始学习 react 的。。多学一阵就好了。", "不过是发现两者都在用对方的传统方式，怎么就触动了你脆弱的神经了", "看不懂", "不能说 react 的界面在 js 里吧， jsx 组件里什么都有，全用 js 写。习惯就好了，挺棒的。\r", "安卓不懂，写过 xml 解析，看的挺累的。", "用 anko 的话是不是觉得 UI 写在 kotlin 里面？", "你也可以不写在 js 里...", " 我正想说这个哈哈哈哈哈哈哈"]},
{"content": ["<div class=\"topic_content\">近期交付了一个大连的一个三甲医院网站\r<br>客户要求上一套第三方的统计系统\r<br>发现自己已经很少使用这东西，现在上线一个多月后，我去看了看统计分析，好久没认真看过这玩意了，一些数据跟大家分享一下，从一个单点看现在互联网用户的一些情况\r<br>\r<br>\r<br>该网站所有搜索引擎收录正常，其中百度有官网认证排在第一个\r<br>\r<br>昨天一整天百度网页搜索进站访客 0 …… 360 搜索进站访客 1200+\r<br>百度移动端倒是有一些 比 360 多多了\r<br>\r<br>7 日平均输入量 移动和非移动全算上 360 网页占比 71% 百度网页占比 6.8% 搜狗网页占比 7.9% 必应网页占比 5.6% 搜狗移动版占比 4.5%  360 移动版占比 2%，另外神马搜索还有不少份额（相比于我对他规模的认知）\r<br>\r<br>\r<br>全站最近 30 日访问汇总 移动设备和非移动设备各 50% 但是最近 7 日汇总非移动 62% 移动 37% 不得其解\r<br>\r<br>\r<br>浏览器内核统计：\r<br>\r<br>webkit 91%\r<br>gecko 6%\r<br>trident 2.8%\r<br>\r<br>IE 已经彻底小众了\r<br>\r<br>大部分非移动用户进来之后奔预约挂号栏目，然后通过连接访问第三方预约挂号系统离开网站\r<br>\r<br>用户 OS 语言：\r<br>\r<br>95%中文， 2.8%英语， 1.8%日语 考虑到大连有大量日语环境，这个数据没啥意外\r<br>\r<br>操作系统上，\r<br>win7 48% iOS 24% android 14% win10 5.5% win8.1 1.6%\r<br>\r<br>\r<br>\r<br>没有什么其他的想法，只是单纯分享一下数据</div>"], "reply": "17", "tittle": "一个大型三甲医院网站的统计数据", "comment": ["这么多人访问……", "还以为 win10 用了这么恶心的推广手法起码能上 20%的", " 用了 win 10 腰不酸，腿不痛，也不用去医院了。", "说明用 IE 的身体更健康么", " 我们公司有专门的 APM 监控，可以监控到更详细哦，有机会可以合作，😄。微信： damon_linke", "神马搜索和 UC 跟小米浏览器捆绑了，才有那么多流量的", "win10 不是主推 edge 嘛， edge 的 ua 是 chrome ua + edge ，这部分可能算在了 webkit 里？", "（好吧突然脑残当我没说，看到后面的操作系统统计（", " \r", "您好我是 UC 的主编，看阁下骨骼清奇天赋秉异，十分具有来我大 UC 当小编的潜质，明天来我们这里上班吧！", "說明用 wp 的人不會生病", "百度一整天 0 ， 360 是 1200+\r", "7 日平均 360 占比 71%\r", "百度搜狗必应 持平\r", "\r", "？？？？！", "楼主是接的包么，大连医院做系统竟然不找本地的软件公司，简直狗血啊", "iOS 24%，这个数据很高， android 偏低……\r", "但为何移动和非移动设备各 50%？\r", "\r", "从 OS 看这个统计有点不合理，估计 android 上的一些“助手”或者其他工具把你们的统计 block 了", "医疗行业，不合理就对了。营销界早就杀成了血海。怎么可能呈现出平均的统计水平。", " 请问一下为什么微软的 edge ua 要打上 chrome ？\r", "\r", " 楼主请问一下为什么大连会有大量日语环境？", " \r", "你随便走大连的一个大学里面满地都是日语培训广告\r", "大连跟日本经济关系紧密", " 大连的日企挺多的，连外包公司都大多是做对日的。"]},
{"content": ["<div class=\"topic_content\">PC 端的可视化布局系统，各个组件直接拖拽哈\r<br>\r<br>基于 bootstrap 和 kendo 做的\r<br>\r<br><a target=\"_blank\" href=\"http://o.qcloud.com/static/api/v3/#build/show\" rel=\"nofollow\">http://o.qcloud.com/static/api/v3/#build/show</a>\r<br>\r<br>需要用 QQ 号登录\r<br>\r<br>感觉比 bootstrap 的可视化系统好用很多哈\r<br>\r<br>大家如果有更好的，也可以推荐一下哈</div>"], "reply": "14", "tittle": "腾讯蓝鲸的可视化布局系统", "comment": ["挺不错", "  这个出来很久了 用了一段时间, 觉得自己写也差不多", "web 制作又回到可视化编辑的路子上了吗", "想起 10 年前就是用 DW 这样拖拖拉拉……", "用了一下。感觉比自己码代码还慢。", "还是敲代码靠谱。", "拖了几下，感觉好难用啊， firefox 浏览器里。", "Google 也有一个可视化编程  是给小孩子玩的。。", "我发现我们传统 IT 公司用这个拖拉做界面反而可能更好……\r", "因为不是互联网公司，没有美工，是面向企业的。", "是不是即使只用了一个元素，所有的 css,js 都要引用？", "可视化布局的有很多 这个不算最好的", " 推荐几个？", "印象中这种方法执行效率低，体积大。。", "发现里面组件库还不错。。 可视化就算了。。"]},
{"content": ["<div class=\"topic_content\">初学者\r<br>java 环境下\r<br>double pi =3.14;\r<br>int a = 10;\r<br>int b = 2;\r<br>double z = pi*a*b;\r<br>System.out.println(z);\r<br>\r<br>我预期的结果是 62.8\r<br>但 myeclipse 的结果是： 62.800000000000004\r<br>\r<br>我的问题是：最后的 4 为什么会出现\r<br>如果我想深入了解这个误差为什么会出现，可以去看哪些教材\r<br>\r<br>谢谢了</div>"], "reply": "9", "tittle": "一个有关误差的问题", "comment": ["IEEE 754", "你自己琢磨下怎样用二进制来表示一个浮点数的问题应该就有思路了。", "深入理解计算机系统", "需要 10 进制浮点运算的请使用 BigDecimal", "epsilon", "0.999999........... = 1", "IEEE 浮点\r", "或者买本《深入理解计算机系统》，翻了一下目录，大概 67 页开始", "准确一点，这个问题是二进制浮点的精度问题。\r", "大部分的小数，是没办法用二进制进行精确表示的。", "1 楼和 8 楼结合来看，答案很全面了。\r", "\r", "重点在于，初学阶段，你只需要记住 double 是无法准确判定 == 的就好了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>大家好，我最近要写一个网站，第一次做前端的东西，这个需求不知道怎么做，希望有经验的大哥帮忙看一下：</p>\n<h2>工具：</h2>\n<ol>\n<li>后端使用 Spring</li>\n<li>采用后端渲染，具体来说是 thymeleaf</li>\n</ol>\n<h2>需求：</h2>\n<ol>\n<li>网页的左边是导航栏，导航栏可以展开，里面有子菜单。</li>\n<li>点开一个菜单，展开子菜单之后，有几个选项，任意点击某个子选项，右边就变成相应的内容，但是<em>左边的展开状态是不变的</em>，如果使用纯后端模板技术的话，刷新页面，左边的展开状态就变了，变成了完全闭合。</li>\n<li>如果点击别的子选项，右边变成别的内容，再点击第一个子选项，里面以前写好的内容还在。</li>\n</ol>\n<p>上面是需求部分，真心请教各位大神，这样的效果使用纯后端模板可以实现吗？如果能请指点我一下。如果不能的话，如何实现呢？非常非常感谢。</p>\n</div></div>"], "reply": "14", "tittle": "这样的网页效果如何实现呢？", "comment": ["1. 当然可以。\r", "2. 可以实现，刷新页面时，在后端把 html 状态变一下就行了。\r", "3. 不苛求的话也可以， 定时提交保存。参考论坛或网页笔记的草稿功能", " 感谢大哥回复。\r", "第一点通过 js 我能实现的了。\r", "现在第二点第三点还实现不了。我现在点击左边菜单，右边变化，是通过 `$(\"#text-content\").load(\"page\");` 这样的语法简单实现的，这样很菜。您说的那个后端把 html 状态变一下的策略，前端这部分代码还需要改变吗？\r", "您说的第三点，是在第二点的基础上，定时保存吗？\r", "\r", "另外，有没有类似的简单 demo ，简单项目啊。谢谢大哥", " 其实我也不太懂。 第 2 点可以用 bootstrap 的 collapse 组件，通过增添 in 类实现菜单展开和关闭。\r", "保存的话，定时或检查到改动， ajax 提交就 ok 吧。", "这样玩很快就内存溢出了吧", "最蠢的办法就是如你所用的 点击左边 右边通过 Ajax 把页面 load 进来 状态保存就每个页面固定的需要保存的东西用 localStorage 存一下每次页面 load 完毕之后检查下有没有历史值 有的话加载进来\r", "\r", "最后说一句：毕设 /作业自己做自己 Google ，都是很简单的问题（因为我感觉这些需求 特别 像 作业 /毕设 ， 看错了还请见谅）", " 好的，谢谢了，我在研究一下。", " 多谢回复。我其实不是做毕业设计，我已经是研究生了（摔。不是计算机的，以前没写过前端。\r", "\r", "你的回复对我很有用处，但是我不能全部明白，想具体请教一下。\r", "\r", "你说我的办法是最不好的，然后后面说保存到 localstorage 里面。这算是在我的方法的基础上的解决方案吗？\r", "\r", "如果是的话，还有没有别的解决方案呢？就是不用 load 的方法？多谢", " \r", "其实现在大票的框架都能满足你的这几个需求了，还要自己造轮子是不是有点麻烦，所以我才感觉像毕设（= =||）\r", "我所说的用 Ajax 来 Load 页面加上页面状态保存在 localStorage 里面算是很蠢的办法了，好处就是你后端的代码基本不用动，主要是前端用 js 处理这一系列需求。\r", "要不可以考虑下 iframe ，很多前端框架都是用 iframe 处理的。\r", "\r", "（因为我后端，前端也不太熟悉。。", " 好的，我去看看 iframe 可以不，我现在看到 html 就头疼，还是后端写起来流畅啊", "写成 api 接口，用 ajax ，很容易实现。", "Angular/Vue/React ，虽然入门要花点时间，但用起来很合适", "iframe ???", "右边做成 iframe", "使用 angular 的 ng-view 很容易实现吧"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>之前一直用网页实现 PS 中图层移动的功能来抢红包。\n然而现在网站被封了。\n求解其他方法。</p>\n</div></div>"], "reply": "12", "tittle": "有人对阿里 AR 红包感兴趣的吗？", "comment": ["撺掇公司土豪发红包。", "那种方法太不智能了，最好的好像是要用深度学习才行", "网站被封了？自己建一个网站啊", "懒得弄了，之前自己写了个 Python 脚本处理，然而现在我附近的红包分两种： 1. 仅限朋友 2. 0.01 元", "有人公布了基于 tensorflow 的破解思路和训练网络的网络结构和方法，大家都来研究研究如何？\r", "\r", "鄙人之前一直久闻 tensorflow 大名，这次真的想入门试一下", " 你可以飞行", " 买一台精灵规划航线，机载手机全世界收割红包", "666 的不行，几毛钱，几块钱的红包把深度学习都搬出来了......有着精力，干点啥 不比拿红包里那几块钱赚得多？", "=_,= 还有人为了老板查岗来做自动切屏呢...开心就可以了。\r", "\r", "\r", "机载手机的那个，看到的瞬间就笑了 233", "哈哈 前面用 python 搞了个脚本 抢了十来个 现在不好弄了", "昨晚研究了下 tensorflow ，算法都看不懂，正打算发贴请教下，咋补这数学呢，离散数学似乎还记得，但完全应付不来。", " 虚拟定位可听说过"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>似乎主流的虚拟主机多是支持 php 的</p>\n<p>想找一款适合做小作坊生产环境的虚拟主机</p>\n<p>一定要支持 python</p>\n<p>多谢 v 友们！</p>\n</div></div>"], "reply": "13", "tittle": "哪些支持 python 的虚拟主机值得推荐？", "comment": ["估计也就剩 sae 了吧", " 感谢\r", "不太明白为何\r", "阿里腾讯金山都没有提供支持 python 的虚拟主机(是我没找到吗？)\r", "是国内使用比例太小吗", "楼主可以考虑 docker 云", " 以前好像有的有  估计是不盈利被砍了吧", "直接支持 Python 的据我所知只有 SAE ，剩下的都是 Docker 了。\r", "\r", "\r", "\r", "其实 sourceforge 的空间支持 python cgi\r", "但生产环境肯定是 gae 稍好\r", "稍好你妹，上 vps/docker", " \r", " \r", " \r", "感谢建议！~\r", "选择 Docker 了", "阿里云 iaas 自己搭建不好嗎?", " DaoCloud 云平台现在没法当生产环境用了。", "ecs 之类的也不错呀，可以和 mysql 放在一起。\r", "比较灵活，性价比也高。", "别听楼上的。都很贵，和 ecs 差不多。每月几十。\r", "\r", "看 bae ，百度的那个， Python work 每月才几块钱", " bae 支持  而且比 sae 便宜很多", "用搬瓦工咋样？"]},
{"content": ["<div class=\"topic_content\">学习 Clojure 近一年了，写了自己的一些玩具项目，最近在公司一个新项目中用上了 ，目前为止是我一人维护，有什么好的方式去推广的嘛？\r<br>大家有在公司推广自己喜欢的语言可以谈谈经验，谢谢🙏</div>", "<div class=\"topic_content\">首先谢谢大家的善意提醒，原文不太具体，我这里再补充下。\r<br>\r<br>我是在一个对内的项目上用的 Clojure ，具体来说是个 restful 接口，目前为止最大的优势就是 DSL ，我用 macro 定义了接口处理的模板，之后每个接口使用这个 macro 就可以了，其他语言通过各种框架也能做到，但没这么简洁。</div>"], "reply": "31", "tittle": "大家有在自己公司推 Clojure 的嘛", "comment": ["那是给自己挖坑，没事找事", "你会后悔的", "天呐...... 看了一下感觉很偏啊", "你老板和你 CTO 没骂娘？", "小心被老板发现", "我天，，我最近看 clojure 都快吐了。。。你咋坚持下来的。。相比还是 scala 看得明白－ －！", "好奇，什么场景的项目用这个，，讲讲有啥优点咩？", "这语言相比主流语言有啥优点么？", "我就问你，你走了这项目谁来维护？", "类 LISP 语言从诞生至今始终没能成为主流语言是有原因的。。。\r", "\r", "Apache Storm - 一个非常有名的用 clojure 写的流式处理框架(应该算是 clojure 最大的实践项目之一了)打算未来用 Java 重构。而阿里已经做了 JStorm (Java 版的 storm)。\r", "\r", "阳春白雪的东西适合科研、高校。生产环境中带来的提升远远没有其引入的问题多。", "楼主还不如写 swift 玩，估计明年出 4.0 就能写服务器程序了，毕竟有个好爹。", " 好像现在 storm 已经基于阿里的 jstorm 开发了", " @", " 我加了个附言，你们可以看看", "如果 clojure 在公司可以有更多使用场景，建议通过招人来组建一个团队，慢慢随着业务和团队成员的增多，在公司里就会更被重视\r", "\r", "建议可以用 Clojure 多写一些公司内部工具、平台，不断地做内部技术分享强推", "公司有好多 Clojure 的小项目。。。接手没有很难啊，学一阵子就好了。。。", "有在公司推荐 scala, 但是 clojure 还是算了, 入手困难, 自己弄弄还好, 要推广还是很难", "用小众的动态语言 ==> 坑公司啊....", "楼主心地为何如此毒辣~", "若要成此神功,必先自宫,当年东方不 buy 就是这样玩的.... 东方不 buy 也没有要求大家都自宫!~", "还不如 Kotlin", "Resume Driven Development", " 主要是招人太难", "插个广告...\r", "\r", "中文社区 ", "\r", "社区地图 ", " scala 看到隐式转换就头疼了", "相比这下 scala 就好推多了，有 spark 和 akka", " 啥公司, 想了解一下\r", "\r", " Clojure 是 Lisp 方向的脚本语言, 同时跟 JVM 生态集成, 也就是说直接在 Clojure 代码里调用 Java 类库和 API. 这个对于喜欢脚本语言的人来说还是很有吸引力的, 某些场景跑跑脚本之类的. 另外我想有些人会像我一样被 Rich Hickey 的思想所吸引.\r", "\r", " 不能一概而论吧, Scala 复杂的类型也会有人吐啊.\r", "\r", " 国内算是很偏了, 但是跟国外比比也还好, 已经算是挺成熟的社区了 ", "在个人项目里玩 ClojureScript, 公司项目不敢弄. 小众技术最头疼的事情是人手, 没有人手, 想扩张业务又没人顶上, 想做点别的事情不能丢给别人接盘, 没有人力的储备语言好也不顶用.\r", "\r", "Clojure 本身的扩展能力不弱, 有人手的话就算缺什么轮子, Java 生态里找找, 没有就用 Java 写一个 import 进来, 或者 Clojure 写一个虽然性能慢但代码量少很多也不一定要多少时间, 总是有办法的.\r", "\r", " 的 Storm 说来说去不是 Clojure 语言有什么问题, 就是人太少想推事情结果没人手 ", "\r", "\r", "所以我是觉得早点抱团弄社区攒文章攒资源, 对于小众技术来说这个事情重要性大了去了.", " 维护是一个不可忽视的问题，尤其是大型项目或是公司业务项目。像 Storm 这样的项目，几乎所有的互联网公司都在用，为什么相比于 Spark ， Hadoop 没有这么多贡献的人呢，而阿里要另起炉灶写一个 JStorm 呢，除去所谓的 kpi 因素， clojure 语言过于小众，维护、上手、改进困难是一个不可忽视的问题。", " 是啊, 很多时候甚至是最重要的因素, 没人维护... 玩不下去. 像 js 语言有各种坑, 但是招得到熟练的工人, 于是就有各种办法.", "  社区确实非常重要， Clojure China 我也去看过，但是感觉基本没啥原创文章，大部分都是转载而已。", " 整个国内都没多少 Clojure 的文章, 论坛就更难了, 毕竟论坛是讨论为主的, 流量大以后才逐渐会有高质量的文章沉淀."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>1.RT</p>\n<p>2.是时候拿出你们的年经贴了骚年们</p>\n</div></div>"], "reply": "27", "tittle": "2016 年，程序员大大们年终总结怎么写，求个模版。。。", "comment": ["唉，公司要求 1000 字，写了我一天时间……", "毕业后就没写过超 800 字的作文了", "是公司要求的吗？如果是自己的，就随便了，想怎么写就怎么写。把这一年里发生的事儿，对这事儿感悟写出来就行了", "千言万语汇成一句话,没有年终奖", "1 、 买一套 260 平米的房子 （完成）\r", "2 、 换一辆路虎极光 （完成）\r", "3 、开一家咖啡馆 （完成）\r", "4 、有两次说走就走的旅行 （完成）\r", "5 、股市逆市盈利 150% （完成）\r", "6 、养个小三 （完成）\r", "7 、和喜欢明星共进一次晚餐 （完成）\r", "8 、养一只阿拉斯加雪橇犬 （完成）\r", "9 、改掉爱吹牛逼的毛病 （未完成）", "哎，这是个好问题，面试的时候用来问面试官", "依然单身，在这个城市也没有朋友", "有加薪、有大成长 就认真写感悟和收获\r", "要跳槽 和上级不对付   记流水账", " 666666666666", "这一年混的还行，唯一不爽的傻逼领导让写年终总结，恩奖金也有点少", "自己随便写了一点，还没写完。", " 一行没写呢，泪奔\r", " 写过几篇文章也没这么多字\r", " 公司要求的啊。。。\r", " 有，还没发呢\r", " 厉害了我的哥\r", " ？？\r", " 好凄凉啊\r", " nice baby\r", " 这话还是不说了，别被看到了,:d", "  求模版", " 没模版 ... 就在我的博客。", " 看到了", "这种东西不拖到死期之前是不会有灵感的。。。。", "哈哈  一夜回到小学~", "一年以来，在单位领导的正确领导下，在直属 leader 和同事们的大力支持和帮助下，较好地履行了工作职责，完成了本职工作任务。现将一年来的工作情况作以总结。　　\r", "\r", "第一，代码能力得到了锻炼，严格要求自身，对产出的代码高标准、严要求，在 Bug 率比去年同期水平降低 20%，交付时间也降低了 15%。\r", "\r", "第二，业务水平实现了增长，业务能力在领导的得力指挥下，在测试同事的积极反馈下、在产品同事的大力支持下，公司产品的业绩得到了显著增长，超过同行业标准的 30%，客户满意度再上新台阶。\r", "\r", "第三，思想觉悟不断提高，认真学习领导讲话，积极投入到公司业务当中，进一步提高思想觉悟，认真学习业务知识，积极接触新的技术，主动抽出业余时间，在原有 Java 的知识上，学习了 PHP 、 Python 、 Go 等语言。实现码农编码，码为公司，不断加强自身码性锻炼和知识修养。\r", "\r", "第四，改正了自身存在的缺点，在公司要求码农要成为复合型人才的基调下，我所处的后端的领导班子提出“班要多加，觉要少睡”的工作精神，在前期我对此有些抵触情绪，也收到了一些批评，在后期经过领导的不断教育和财务部门善意的减少补贴，我认识到了自己的不足，努力向单位优秀员工学习，以部门为家，以公司为家。\r", "\r", "……", " 小时候的作文就是这样憋出来的吗 23333\r", " 23333\r", " 6 翻了，感谢", "你们公司好闲，还有时间写年终总结", " 这个可以", " 可以的", " 简直 6666", "10.172.0.1/git/project1/commits/master\r", "10.172.0.1/git/project2/commits/master\r", "10.172.0.1/git/project3/commits/master\r", "10.172.0.1/git/project4/commits/master\r", "10.172.0.1/git/project5/commits/master", " 这。。。\r", " 这样会被打死", " 厉害了 可以去国企了 哈哈", "只做了三件微小的工作..."]},
{"content": "", "reply": "目前尚无回", "tittle": "了解一下 大家有上过 Udacity 的课吗,觉得怎么样呢", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"\" src=\"https://i.v2ex.co/Q04t598o.jpeg\"></p>\n<p>又是一个雾霾天，</p>\n<p>柚是一年圣诞节~</p>\n<p>望着灰蒙蒙的窗外，</p>\n<p>小数顺手在柚子上画了一个摔倒的圣诞老人，</p>\n<p>一个茫茫雾霾里找不到雪橇的圣诞老人&lt;偷笑&gt;</p>\n<hr>\n<p>虽不知圣诞老人是否会背着口袋如期而至，</p>\n<p>但是 2016 结束已经开始倒计时，</p>\n<p>数人云 2016 最开心的一件事是向开源迈了一步，</p>\n<p>数人云开源容器管理工具 Crane （ <a href=\"https://github.com/Dataman-Cloud/crane\" rel=\"nofollow\">https://github.com/Dataman-Cloud/crane</a> ）；</p>\n<p>数人云开源 Mesos 调度器 Swan （ <a href=\"https://github.com/Dataman-Cloud/swan\" rel=\"nofollow\">https://github.com/Dataman-Cloud/swan</a> ）；</p>\n<p>感谢大家的支持，如果你对容器感兴趣，也期待继续支持，撒花撒花~~</p>\n<hr>\n<p>那么，回忆你的 2016 里印象最深的是什么？</p>\n<p>假如，圣诞老人在你的袜子里塞一个空白的纸条满足你一个愿望，</p>\n<p>你愿意在纸条里写什么呢？</p>\n<p>技术更牛逼一些？多一点年终奖？来个女朋友？一个小心愿？等等......</p>\n<h2>有奖讨论 | 你梦想袜子里纸条上写什么？</h2>\n<ol>\n<li>\n<p>欢迎继续支持数人云开源容器管理工具<a href=\"https://github.com/Dataman-Cloud/crane\" rel=\"nofollow\">Crane</a>和开源 Mesos 调度器<a href=\"https://github.com/Dataman-Cloud/swan\" rel=\"nofollow\">Swan</a>，贡献 Star&amp;Fork</p>\n</li>\n<li>\n<p>说说你梦想袜子里纸条上写什么？(・・?)</p>\n</li>\n<li>\n<p>即日起截止<strong>12 月 26 日中午 12 点</strong>，所有评论楼层的 5%， 15%， 25%， 35%， 45%， 55%， 65%， 75%， 85%， 95%，</p>\n</li>\n</ol>\n<p>将数字四舍五入后作为中奖楼层，均有礼品一份</p>\n<p>注：老规矩，小数回复不占楼层，重复评论会直接取消获奖资格噢~</p>\n<h2>看看礼品 | 妹子送不了，还是送袜子吧~</h2>\n<p><strong>迪卡侬 4 双装袜子 4 份</strong>（ 25%， 45%， 65%， 85%）</p>\n<p><strong>3M口罩 3 个套装 6 份</strong>（ 5%， 15%， 35%， 55%， 75%， 95%）</p>\n<p><strong>数人云餐具 8 套</strong> （今年的圣诞节时间是 2016.12.25 ，故 20#、 16#、 12#、 25#均可获得数人云定制情侣环保餐具两套）</p>\n<p>注：如圣诞节时间楼层与百分比楼层重复，则顺延至下一位获奖者~</p>\n</div></div>"], "reply": "110", "tittle": "数人云互动趴 3.0|柚是一年圣诞节，说说你的梦想", "comment": ["去日本看樱花~", "子吃下", "当一个 YouTuber", "![]( ", ") \r", "开奖啦！\r", " @", " @", " @", " 获得迪卡侬袜子套装一份；\r", " @", " @", " @", " @", " @", " 获得 3M 口罩套装一份；\r", " @", " @", " @", " 获得数人云定制餐具一套；\r", "恭喜以上同学，也感谢大家的支持，请加小数微信 18612256271 ，备注 V 站昵称领取礼品~~", " 我的天~第一次中奖啊。简直不敢相信。", " my god 人生第一次中奖..激动啊..感谢 数人云..", " @", " 楼主给不了妹纸，送个礼物还是可以的~~", "霾都刚需，已加微信...", "我第二次被抽到了，这中奖率也有点高的", " @", " 没有妹纸，难道中了奖的袜子也被你俩抛弃了么？快来领奖呀~~"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>下个月开始就准备学习<code>《 Python 学习手册》</code>的内容，之前听说这本书讲的特别细，刚好我有需要再充实下基础知识，想再打捞点，来年要找工作呢。</p>\n<p>问个问题：</p>\n<ol>\n<li>你觉得应该用怎样的方式来学习这本书？</li>\n<li>里面的知识点比较多，你觉得我是否应该把比较重要的知识点深入的理解下，包括代码实现；</li>\n<li>你觉得那些章节的知识点比较重要？帮助与后续更深入的学习</li>\n</ol>\n<p>拜托了🙏</p>\n</div></div>"], "reply": "4", "tittle": "问几个读过《Python 学习手册》的 V 友几个问题吧", "comment": ["这本书我也买了，有些后悔。要是以前写过 python ，看这本书就当参考了。个人感觉 python 难点是面向对象这部分，是这本书翻译的问题？看了几遍没能理解。倒是看了 a byte of python 以后，几句话就明白了。整本学习手册翻完，看 sqlmap 依然云里雾里。", "- -,表示正准备看，面向对象，也不知怎么学才好", "我大约看了二十几章,并不是很难.总体感觉,这本书非常的罗嗦. 它把几个章节组成一个部分.每个部分开头会把整体介绍一遍. 而这个所谓的局部介绍也超长无比....,总会有学了很多的错觉.\r", "\r", "回答一下:\r", "1.你觉得应该用怎样的方式来学习这本书？\r", "不适合作为入门读物;加深各方面细节时,使用. 例如:对于包的 import 不理解,可以把包的部分整体看一下.\r", "\r", "2. 里面的知识点比较多，你觉得我是否应该把比较重要的知识点深入的理解下，包括代码实现；\r", "像老师说的,都是重点.\r", "\r", "3. 你觉得那些章节的知识点比较重要？帮助与后续更深入的学习\r", "没有记住章节目录...", " 我这个也不算入门了吧，只是吸纳的太多，但是理解的不是很深入，想深入理解下。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>前一段时间 android 夭折， iphone 遥遥无期</p>\n<p>只剩下人老珠黄的 windowsphone, 但是毕竟能用呀。</p>\n<p>有一个问题, windows phone 几乎没有什么软件，特别是网络软件。</p>\n<p>特邀请各位程序员开发一个能够把两台电脑链接起来的软件，不要 ssh ，不稳定；不要流行软件，不稳定；只要新的小众软件。</p>\n<p>第一名得 200 奖金，谢谢，有没有来挑战的，就是为了好玩！</p>\n<p>截至日期这周日凌晨！</p>\n<p>我先报名参赛，有没有一起玩的？</p>\n</div></div>", "<div class=\"topic_content\">有人反映我手机、电脑分不清楚，在我眼里，手机和电脑没什么区别。\r<br>\r<br>看来我是互联网的移民了，我感觉手机就是电脑的延伸么！\r<br>\r<br>我想要的就是一个和ｓｔｒｏｎｇｓｗａｎ一样的软件，但是要简单、简单再简单，能在ｗｉｎｄｏｗｓ　ｐｈｏｎｅ　上用就好！\r<br>\r<br>把手机和一台服务器连接起来！就像在一个网络里面。\r<br>\r<br>关键是要支持ｗｉｎｄｏｗｓ，要开源！</div>", "<div class=\"topic_content\">看来是，不能愉快的谈话了，我自己做一个吧！</div>", "<div class=\"topic_content\">有些人的回答还是蛮暖心的，有些人就是想多了！\r<br>\r<br>故事背景是这样的，前一段时间我发现我的移动网络，突然非常非常慢，对 github 之类的都很慢，我就调查了一下，发现移动使用的是运营商级别的ｎａｔ，公网ｔｃｐ　 IP 的 Port 都已经使用到 30000 多了。\r<br>\r<br>我还蛮喜欢移动的，所以想如果我能用 udp 连接外网，会不会快一点。以前一直以为ｕｄｐ是不能双向通信的，用ｎｃ测试了一下，ｕｄｐ居然也可以双向通信。\r<br>\r<br>所以想法就是，使用ｕｄｐ连接到一个不拥堵的主机，然后在通过那个主机上网。\r<br>\r<br>问题是，我平时主要使用手机，现在ｗｉｎｄｏｗｓ　ｐｈｏｎｅ已经不卖了，软件更是少的可怜，我就决定自己谢谢看。\r<br>\r<br>但是我只会写传统的软件，对于移动端，了解不多。　所以就想着能和一个玩伴，一起写个小程序，能写就玩玩，不能写就算了。\r<br>\r<br>又很怀念，编程挑战的感觉，所以号召大家一起玩，热闹。\r<br>\r<br>没人响应，我就自己写吧，已经差不多了，但是移动端的程序太复杂了，各种安装、配置、烦烦烦！\r<br>\r<br>话说，大家就没有一点玩乐的编程心态吗！！！　没意思！　几百行代码，能怎么样，等我写好了，免费送给大家！\r<br>\r<br>今天肯定要ｆａｉｌｅｄ了，时间不够，又没人碰撞想法，不好玩！</div>"], "reply": "37", "tittle": "编程挑战邀请", "comment": ["到底要搞什么，是我语文不好还是楼主表达有问题？", "楼主小学就放假了？", " 我的理解是 200 元请大家帮他开发一个  两台电脑链接起来的软件 . \r", "\r", "不过为什么上面一直在说手机系统,下面突然变成开发电脑上的软件了?", " 手机也是电脑吧", "200 块都能骗软件？？？？", " ", "如果成功了，记得 @ 我一下，我也来骗个", "安卓上很定可以的，开热点，两台电脑连上热点就是一个局域网了。", "我来翻译一下：", "我有个点子，预算 200 ，来个人帮我做一下", "  好", "200 块有点不够看", "万一是美金呢", "楼主，仅仅跟你明确需求就已经花费了 200 的人工成本。再去实现就是亏本生意。", "感觉智商受到了侮辱...", " 赶紧感谢一下！", " 有需求就可以外包了，哈哈哈！", "200 给我，我能用任意语言的任意框架给你写个 hello world", "补充一下吧~\r", "\r", "楼主要么太年轻，要么想玩心机...\r", "\r", "可是找错了受众...\r", "\r", "隐约想起一个经典的故事（大意）：\r", "\r", "十亩地，想收割，想出这么个“妙招”，举办一次比赛，一人一亩，最快的人奖金 200 ，最后 200 解决了十亩地，大赚。。\r", "\r", "（大概意思哈，理解就行）\r", "\r", "不过结合楼主几个帖子看，我估计楼主是前者，太年轻，一腔热忱。。。", " hello world 我也会写！", "楼主是不是未成年？", "楼主想钓鱼的话我建议去 Minecraft 里面钓 LOL", "如果有现成的方案， 200 元倒是可以考虑给你提供信息。用一根网线桥接就可以把两台电脑连接起来组成局域网，如果是比较老的网卡，需要制作反绞线。不知道你为啥还要 windowsphone 上做一个类似中转服务的东西干嘛。如果是两台计算器访问 windowsphone 的服务，那也要明确到底是干嘛。", " 我猜测楼主的意思是重新造一个类似 VPN 的轮子，以及一个支持 Windows Phone 的客户端（桌面电脑没说，猜想楼主的意思是桌面电脑直接跑服务端？）。然后把一台桌面电脑和 Windows Phone （ Windows Phone 本质上也是电脑）通过这个私有协议的网络连接起来。", "大概看了一圈楼主的资料...想法多是好事啊", " 我就是想写个小程序玩玩，哈哈:)", " 嗯，我就是想写一个，小的不能再小的 vpn 软件给我自己的 windows phone 用，有简单的想法，没写过移动端的程序，所以想百花齐放，看看大家是怎么 Coding 的。", " 我就想写点小软件，配合一个 gtk 的 UI 玩。能像飞鸽传书那样受欢迎就好了！", "意思是走 UDP 协议的 VPN 吗(・o・)", "不就是 SS 么？", "200 骗软件？", "给我钱吧，用两根绳子就可以把两台电脑连起来了", "毫无吸引力啊", "windows phone 8 8.1\r", "\r", "windows 10 mobile 我一路用过来的,上面自带的 vpn 客户端不是挺好用的?\r", "\r", "家里搭个 vpn 服务器,随你喜欢. 就好了啊.\r", "\r", "我家里是 windows server 的 pptp 协议.连过,正常.\r", "公开的 vpn 免费服务 pptp l2tp 用过 正常.", "200 2333", "特邀请各位程序员开发一个能够把两台电脑链接起来的软件，不要 ssh ，不稳定；不要流行软件，不稳定；只要新的小众软件。\r", "\r", "好葱白楼主，能用几百行代码写一个稳定性超越现有流行软件、协议的东西。如果楼主能写好，出 200 请楼主喝咖啡。\r", "\r", "立贴为证！", " 程序好了，正在向微软申请权限， tun 设备的权限需要邮件申请！ 最终，还是想写个 xamarin 的玩玩。", " 我就是写着自己玩玩，不喜欢免费的东西，不安全！", " 原始的动机就是这样，用一个串口把两个电脑连接起来，但是链路建立在 upd 之上！", " 简单一点，自己玩玩！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>1.查看 video 标签,src=\"blob:<a href=\"http://www.bilibili.com/ac6c75a9-ef1d-4d90-a81e-c0c8c3a8e663\" rel=\"nofollow\">http://www.bilibili.com/ac6c75a9-ef1d-4d90-a81e-c0c8c3a8e663</a>\",src 用为何使用的是这种模式？</p>\n<p>2.参考视频地址： <a href=\"http://www.bilibili.com/video/av7227473/\" rel=\"nofollow\">http://www.bilibili.com/video/av7227473/</a></p>\n<p>3.福利歌，致命复活-&gt;爱需要勇气（何雁诗）</p>\n</div></div>"], "reply": "4", "tittle": "bilibili 视频使用 HTML5 播放的时候，资源是怎样存储和取回前端显示？", "comment": ["看起来像是 socket 的 id ，也许是 hash 过的。", " 可能是\r", " ...", "`video.src = window.URL.createObjectURL(stream)`"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>写了个小工具不改变默认 cd 的行为下</p>\n<p>可以使用 <code>cd ....</code> 来代替 <code>cd ../../..</code></p>\n<p>保留 cd 的所有特性</p>\n<p>额外支持 用 <code>cd ....</code> 代替 <code>cd ../../..</code></p>\n<p><code>cd .</code> 当前目录</p>\n<p><code>cd ..</code> 上层目录</p>\n<p><code>cd ...</code> 上上层目录</p>\n<p><code>cd ....</code> 上上上层目录</p>\n<p><a href=\"https://github.com/kaidiren/smartcd\" rel=\"nofollow\">https://github.com/kaidiren/smartcd</a></p>\n</div></div>", "<div class=\"topic_content\">评论里有很多种方法。\r<br>根据需求自取。:)</div>"], "reply": "49", "tittle": "cd 路径深的时候，可以回来方便点", "comment": ["shopt -s autocd 2> /dev/null\r", "alias -- -=\"cd -\"\r", "alias ..='cd ..'\r", "alias ...='cd ../../'\r", "alias .3='cd ../../../'\r", "alias .4='cd ../../../../'\r", "alias .5='cd ../../../../../'\r", ".0() {\r", "    cd \"$(git rev-parse --show-toplevel)\"\r", "}", "d", "  这个在用的 autojump 有权重的概念。陌生的路径跳起来会有问题。", " 实现的方式可以有很多种，但是我这边用的思路是尽量和 bash 原来的方式靠近，另外用的也不是穷举的方法  可以 CD .............. 很长的。虽然意义不太大 。_(:з」∠)_", "zsh 是不是支持类似的东西的..", " 不知道，不喜欢 zsh 。所以一直没太用。_(:з」∠)_", "alias cd2='cd ../../'\r", "alias cd3='cd ../../../'\r", "alias cd4='cd ../../../../'\r", "一直是这么搞的，再偶尔搭配 autojump ，也足够用了", "cd -\r", "popd\r", "pushd", "不支持 tab (:-0)TL", "以前弄了个这个玩意\r", "\r", "function cdjump {\r", "    CDJUMP_LAST_PWD=`pwd`\r", "    for (( i=0; i<$1; i++ ))\r", "    do\r", "        cd ..\r", "        echo \"Jump to `pwd`\"\r", "    done\r", "}\r", "\r", "function cdjump_fuck {\r", "    cd ${CDJUMP_LAST_PWD}\r", "}", "zsh, 用的 bindkey -s '\\eu' '^Ucd ..; ls^M'\r", "meta-u 就回上一层， meta-u,u,u,u,u,u,u... 十分迅捷", "fasd 直接 z 回来就行了", "cd -", "zsh 还是 oh my zsh 就带有这个功能…", " 这个常用", " +1", "zsh 自带这功能，配上 z.sh  真是实现光速文件夹切换", "zsh 支持不带 cd 命令，只输入正确的路径即跳转的功能\r", "oh-my-zsh 提供了一堆点的 alias\r", "于是只需要用点就够了", "嗯，一直用自带的…… zsh 。", "oh-my-zsh 自带了一堆的 alias \r", "看下就知道了", "Jump", "这功能 prezto 里面有啊", "这个还要新建个 project ？随便新建几个 aliases 不就行了\r", "\r", "另外推荐个自己写的快速跳转自己访问目录的命令\r", "还不如 pushd popd......", "难道只有我用 ranger?", "oh-my-zsh 的 d 命令。。不要太好用", " ranger 是个好东西，我也在用", "oh-my-zsh 启用 z 命令", "autojump+zsh+ohmyzsh 你值得拥有", "学习了，我一直都是手动打 cd Σヽ(ﾟД ﾟ; )ﾉ", "一直用 cd ~ 习惯问题？", "  +1", "oh-my-zsh 再开启 z plugin ，路径问题就基本解决咯", "cd -", "感觉这个用习惯了会经常在 cd 以外的地方用\r", "\r", "比如 cp .../foo.txt . 这样的", " 小守护~", " 我的天。是 XD 么？", " 这个是直接跳回 用户的根目录。 跟 ... 的初衷不一样的。", " tab 还是 ../.. 补全吧 _(:з」∠)_", " 快捷键什么的直接就高了一个层级。缺点是要记住这个快捷键。😂", " 😂  所以慎用。", "fish 用户飘过", " 😂 今天风不错，飘好，不送。", "alias p=pushd\r", "alias po=popd\r", "\r", "至于别的方案，自己机子上用用可以，换机器的时候就不好适应了…", "cd ../  回车\r", "↑ 回车\r", "↑ 回车\r", "↑ 回车。。。", "↑ 跟 回车 距离那么近。。。感觉等你算好要敲多少个  .  你都出来了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>物联网开发中， ucos 系统任务间的通信是指，两个任务之间有数据的交互，具体的一起来看看吧。</p>\n<p>1 ）消息邮箱</p>\n<p>我们还是提供两个任务 Task1 和 Task2 ，假设我们还是解决刚刚的问题， Task1 进行按键扫描，有多个按键 key1 到 key n ， Task2 根据扫描出来的按键处理 LED 灯 1 到 LED 灯 n ，上次我们使用了一个方法，这个方法使用了一个事件标志组来进行，这个时候假设我不使用事件标志组，我使用消息邮箱，这个时候，我加入一个全局变量 key-value ，假设这个 key-value 等于 0 ，表明没有按键按下， key-value 于 1 ，表明第一个按键按下， key-value 等于 2 ，表明第二个按键按下， key-value 等于 3 ，表明第三个按键按下，依次往下面增，那这个时候，我们的 Task2 要想判断哪一个按键按下，就不再像我们事件标志组那样一步一步的进行判断，我们只需要判断 key-value 的值就行了，那这个 key-value 的值是由谁改变呢？</p>\n<p>是由 Task1 这个任务改变的，在这里我们也可以看见， Task1 和 Task2 之间进行了一个数据的交互，它们要的是 key-value 这个数据的值，也就是 Task1 改变 key-value 的值， Task2 使用 key-value 的值，在这里我们就把它叫做消息的邮箱，就像一个邮箱一样，就像我们写信一样，我们把这个信放进邮箱，邮箱帮我们把信传递到远方，远方的亲戚朋友呢，打开我们的信，就可以看到信中的内容，同样，我们远方的亲戚朋友也可以使用这个邮箱，也可以写信发送给我们。</p>\n<p>在这个过程中我们的 Task1 和 Task2 就进行了一个数据的交互，那这个就被称做消息的邮箱，我们可以看到，在消息的邮箱过程中，我们有个任务提供发邮箱，而另外一个，我们会接收这个邮箱任务，接收以后使用，使用完后，它有可能向 Task1 发送邮箱， Task1 接收到了这个邮箱以后，也会进行使用，这就是消息邮箱这个概念。</p>\n<p>2 ）消息队列</p>\n<p>事实上就是由多个消息邮箱构成的队列，就叫做消息队列，那既然有消息邮箱了，我们为什么药使用消息队列呢？</p>\n<p>我们还是提供两个任务 Task1 和 Task2 ，假设 Task1 还是进行了一个按键的扫描，比如这个时候，它扫描的是我们 windows 下面的标准按键——键盘，而 Task2 呢进行按键的处理，比如应用处理，在这里我们都知道有两个问题， Task1 在进行按键扫描，并且在发送这个消息邮箱的时候，它发的很快，因为它必须扫描的很快，它才能保证这个按键不被丢失，比如说你扫描的很慢，某些人它打印键盘的速度很快，那这样的话，这个按键就会丢失，但是应用程序它有可能处理不了那么快，就是说，它处理的速度可能会比较慢一些，那这个时候怎么办呢？</p>\n<p>比如 Task1 发出去了， Task2 接收到了，但是它还没有处理，那这个时候 Task1 又发送了下一个按键，那下一个按键能不能被接收到呢？</p>\n<p>或者说上一个按键能不能被处理呢？这是个问题，那这个时候，我们就可以使用多个消息邮箱，比如我在 Task1 和 Task2 之间，我们建立很多个消息邮箱，第一个按键按下以后，我们发送到第一个消息邮箱，第二个按键按下以后，我们发送到第二个消息邮箱，第三个按键按下以后，我们发送到第三个消息邮箱，依次类推。到最后一个的时候，接下来再有按键按下，我们就再往第一个发送，那这个时候，对应用处理的要求稍微就要低一些，为什么呢？我只要保证在这个多次之间，我们只要把第一个按键处理掉以后就行了，因为处理掉第一个按键以后消息邮箱已经变成空啦，这个时候，我们就可以往第一个里面放，那也就是说我们假设本来有程序需要 10 毫秒，处理这个按键，但是现在如果有 7 个消息邮箱，我们可以每隔 70 毫秒处理一下，只要保证在同一时刻，只要有一个消息邮箱为空就行。</p>\n<p>那这么多消息邮箱组合在一起，我们就把它叫做消息队列，这个队列满足一个先进先出的规则，先进的队列的成员先出去，当然这个队列，我们也可以满足一个后进先出。比如说这个按键比较紧急，你必须先处理这个按键，那我们可以把这个按键直接发送给 Task2 ，那它就是一个后进先出的原则，这个就是我们的消息队列和消息邮箱的不同，在这里我们可以看出消息队列的本质，实际上多个消息的邮箱构成的一个队列的数据结构。</p>\n<p>原文链接： <a href=\"http://www.maiziedu.com/wiki/iot/ucoscomm/\" rel=\"nofollow\">http://www.maiziedu.com/wiki/iot/ucoscomm/</a></p>\n</div></div>"], "reply": "1", "tittle": "Ucos 系统任务间的通信详解", "comment": ["哥们讲起 ucos 让我想起我当年大学做的一张大图： "]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h2>下面我们开始编写一个 Hello Worlds ,你将看到 opener_server 带来的是多么简单的编程！</h2>\n<h3>写 Hello Worlds 有很多方式，我们用最简单的网页模式，写一段 javascript 代码，来注入我们的 Hello Worlds</h3>\n<h3>使用 javascript 与 jquery ：</h3>\n<pre><code>\nvar url=\"https://test1.openerserver.com:10008/op\";  // 安装了 opener_server 的服务器地址： test1.openerserver.com \nvar start_http_server={'action':'new_http_server','ip':'','port':'1008'}; // 开启一个新的 http 服务器，监听在端口 1008 上\nvar reg_url={'action':'reg_url','type':'http_get','url':'/helloworld','host':'*:1008','go':hello_fun}; \n//注册一个 url 地址 /helloworld ，绑定到 1008 端口上，设定这个 url 处理模式为 http get 模式，最后处理这个 url 的代码放到 hello_fun\n\nvar hello_fun=`my ($r,$key)=@_; \n$n-&gt;{send_normal_resp}-&gt;($r,$key,'Hello Worlds'); \n\n`;\n//### 接收传入参数，$r 包含所有这个 http 请求相关信息，$key 包含该 http 请求的唯一 id\n//### 发送返回，返回内容是 html ，加入一个 hello world 字符串。\n\nvar opener_flag='opener'; // 设定 http header 中 opener_flag 字段，相当于访问该 opener_server 的密码\nurl_post_data(url,JSON.stringify(start_http_server)); // ajax post 到 opener_server 服务器\nurl_post_data(url,JSON.stringify(reg_url));\t\t\t  // ajax post 到 opener_server 服务器\nfunction url_post_data(go,data){\n\t$.ajax({\n\t\t  url: go,\n\t\t  cache: false,\n\t\t  headers: {\n\t\t\t  opener_flag:opener_flag\n\t\t  },\n\t\t  data: data,\n\t\t  type: 'POST',\n\t\t  dataType: 'json',\n\t\t  success: function(data){\n\t\t\tif (data.result=='ok')\n\t\t\t{\t\n        console.log(data);\t\t\n\t\t\t}else{\n\t\t\t\tconsole.log('error');\n\t\t\t}\n\t\t  },\n\t\t  error: function(dd,mm){\n\t\t\tconsole.log('error:');\n\t\t\tconsole.log(dd);\n\t\t\tconsole.log(mm);\n\t\t\t}\n\t});\n}\n</code></pre>\n<p>在一个含有 jquery 代码的 html 页面上，执行上面的代码就可以了。<br>\n然后访问 <a href=\"http://test1.openervpn.com:1008/helloworld\" rel=\"nofollow\">http://test1.openervpn.com:1008/helloworld</a> 就可以看到结果。</p>\n<p>我们已经执行了上面的代码，那么下面你可以更改上面这段代码，来实现你需要的 Hello Worlds\n例如：更改要注册的 url 地址...</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "第一个 Hello Worlds ，打开 opener_server.pl 的大门。OPener_Server 第 3 弹", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>日常开发可能经常需要有非代码侵入的方式来分析偶发的请求超时或者偶发慢请求。</p>\n<p>tcpkit 可以用来做 tcp/udp 数据包内容分析，同时提供 redis/mc 命令延时统计功能，也支持 dns 请求耗时分析。</p>\n<p>这个工具可以跑在客户端，从客户端看请求出去到回来的耗时。也可以跑在服务端，看请求进来和出去的耗时。也可以自己定制数据包分析方式。</p>\n<p>简单介绍见: <a href=\"http://www.hulkdev.com/posts/tcpkit\" rel=\"nofollow\">http://www.hulkdev.com/posts/tcpkit</a></p>\n</div></div>"], "reply": "7", "tittle": "分享一个 tcp/udp 分析工具", "comment": ["记得 wireshark 里的 tshark 命令也是支持 lua 脚本的 dessector 的，不知道你这个的优势在哪里", "赞", " 如果支持的话，那么从功能上来说对于熟悉 wireshark 是没优势可言，功能体量也不是一个级别的。 tcpkit 主要是对于个人来说是更加简便，也可以轻松跑在服务器上。", "ngrep tcpdump wireshark", "感觉 66 的", " ngrep 很好。", "mark"]},
{"content": ["<div class=\"topic_content\">为什么在 div1 和 div-a 下面出现&amp;#8203 ？\r<br>&lt;!DOCTYPE html&gt;\r<br>&lt;html lang=\"en\"&gt;\r<br>&lt;head&gt;\r<br>  &lt;meta charset=\"UTF-8\"&gt;\r<br>    &lt;title&gt;Document&lt;/title&gt;\r<br>&lt;style&gt;\r<br>  *{padding:0;margin:0;}\r<br>  .div1{background:red;}\r<br>  .div-a{height: 200px;}\r<br>  .div-b{background:#ccc;}\r<br>&lt;/style&gt;\r<br>&lt;/head&gt;\r<br>&lt;body&gt;\r<br>&lt;div class=\"div1\"&gt;\r<br>    ​&lt;div class=\"div-a\"&gt;&lt;/div&gt;\r<br>    ​&lt;div class=\"div-b\"&gt;&lt;/div&gt;\r<br>&lt;/div&gt;\r<br>&lt;/body&gt;\r<br>&lt;/html&gt;</div>"], "reply": "3", "tittle": "html 的问题", "comment": ["因为你的 div-a & div-b 的开始标签前面多了个我也不知道是什么的东西 删掉后就没了", "关于这个转义字符的详解 \r", "楼主把文档保存成 UTF8 无签名格式就好了"]},
{"content": "", "reply": "12", "tittle": "- - \r\ngo 中一个文件想要引用另一个文件中的函数怎么写", "comment": ["函数首字母大写会导出给外部调用", "看两个文件是不是在同一个包，同一个包可以直接调用。如果不是同一个包，需要 import ，另外被调用的方法得是 public 权限。", " \r", " \r", "比如 test.go 中有个方法 add, main.go 中想调用这个方法，这两个.go 文件在同一个目录下 .把 test.go 打包么？", "和打包有什么关系", " test. go 是哪个 package 下的？ package main ？", " package test", "  test.Add()", "除非你是 go run xx.go 单个文件运行的,否则一个文件夹下的就是一个包,一个包内可以互相无权限限制调用.", " \r", " \r", "只要直接两个文件都是 package ，直接在同一个目录下能调用", "个人经验， go 项目的文件夹就是包，文件夹名就是包名，同一文件夹（包）下的所有文件可以视为同一文件，也就是可以随意拆分或者合并为一个或多个 go 文件都没有影响，文件名对程序也没有影响，同一文件夹（包）下的所有文件， package name 必须一致。要使用其他文件夹（包）下的资源，使用 import 导包， import 导包的路径是相对于 gopath 的相对路径", " main 包除外", " :D"]},
{"content": ["<div class=\"topic_content\">teamviewer 远程上简直就想万能木马,本地所有的文件都可以下载.\r<br>\r<br>有没有办法限制对拷贝本地文件呢?有没有推荐的相关远程工具可以解决这个问题???</div>"], "reply": "4", "tittle": "teamviewer 远程权限过大如何控制?", "comment": ["QQ 远程协助，还不是一样可以传文件", "QQ 远程协助，   网络不好的时候想死的心都有", "装个虚拟机，在虚拟机里面装 teamviewer 。", "\r", "\r", "楼上三位都不知道这个？？？"]},
{"content": "", "reply": "7", "tittle": "iOS 开发提升遇到瓶颈，想了解逆向工程，看看微博啊，微信啊那些大厂的代码，我应该多去关注那些技术和论坛呢？求大神指点", "comment": ["逆向实用性不高吧。", "因为感受到微博的异步 UI 带来的流畅度，我最近入坑了 AsyncDisplayKit ，发现源码就是个宝库啊，打开了新世界的大门。真想进阶可以看看", "adk 在你需要性能优化的地方用就好了。我也蛮喜欢的。 yykit 作者还剥离了一些，满实用的。", "github 上很多开源的代码先读一遍", "大厂的代码真不见得有多好，还不如在 github 上多看看开源的代码", "纯看是提升不了的，亲自动手写啊，自己做项目，没点子就山寨其他 app 练手，遇到问题就 Google ，每解决一个问题就能提升一点", "Great artists steal"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>都贴出来一下给兄弟我参考参考，回重庆做前端混了快一年了，感觉已经失去了对外界的联系。</p>\n</div></div>"], "reply": "26", "tittle": "各种开发语言在各地现在都什么价钱啊", "comment": ["什么都干,公司性质不一样...", "你的多少，贴出来看看。", "还有对语言明码标价的~~", " 我啊。所有东西扣完了有六千多点吧。", " 重庆去过一回，普遍这个情况吧。还是来北上深杭吧，好一些。", "这问题好牛 X ，让我立刻想到了“笛卡尔积” -_-!!!", " 不要嘲笑我嘛。虽然没有明码票价但是你知道你自己在哪里是拿的个什么价位的工资不是？给我参考一下呗。", " 会好多种语言怎么算", "爬一下拉勾网完事", "厦门做前端, 七千", " 拉勾.... 用的多了就有转行的想法", "php 4000 黄冈", "跟语言关系不大，跟水平关系大。", "行业、技术、学历、情商这些都不考虑，只看个语言，建议去看语言排行榜好了。毕竟有年度语言和年度最赚钱语言，搜一下就有了。", "拉钩。。。 呵呵", " 还是兄台知道我想了解什么啊", "白菜价。", "py 深圳 2w", " 还是做交易给的高，真赞", "lz 不说自己工作了几年怎么参考。。。", "COBOL 等非常非常小众的语言应该工资比较高，毕竟没多少人会，只是就业面很窄。", "php 估计要 5 块钱一斤了吧", " py 是做什么", "跟城市关系更大", "南京 Java 一年 7 块，不知道是什么水平啊。。。", "Java 济南 12k/m"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>分享一篇自己的博客:)</p>\n<p>在互联网时代，我们有学不完的新知识，特别是处于软件行业，每天出现新的语言、框架、领域。比如 Vue 、 Spark 、微服务、 React 、机器学习、 Sass/Pass 都是最近才火起来的。我时常怀疑一个程序的一生到底能够学习多少编程的知识，而学习多少才算是足够，这个领域有学不完的知识，而且在不断的更新。</p>\n<p>直到前一段时间我在知乎上看到一个答案： The first 20 hours-How to learn Anything 以及相应的 TED 演讲。学习一个完全陌生的领域到足够使用的程度仅仅需要 20 个小时的练习。</p>\n<p>重点在于足够使用， 20 个小时的学习不可能让学习者成为这方面的专家，但是足够掌握其中最核心的概念，熟练最常用的操作。如果是学习编程语言，足以拿一门语言的最核心和常用的特性来进行开发。我们需要的仅仅是 20 个小时。另外一个同样重要的点在于练习，单纯的接收信息和记忆不足以使你真正的理解和掌握它，必须靠足够长的练习来锻炼自己的大脑或者身体来掌握这些新技巧。</p>\n<p>链接： <a href=\"http://mrlongx.com/index.php/2016/10/19/how-to-learn-new-thing-in-20-hours/\" rel=\"nofollow\">http://mrlongx.com/index.php/2016/10/19/how-to-learn-new-thing-in-20-hours/</a></p>\n</div></div>"], "reply": "17", "tittle": "20 小时学习新事物", "comment": ["1W 小时理论听过没？虽然也不完全正确\r", "\r", "20 小时只能了解", " 这里的 20 小时是练习时间，并不包括阅读、看视频的时间，达到的程度是足够使用来做事。 1W 小时理论达到的是专家级别的了，跟这个有区别 :)", "还是不要浮躁为好。", " 文章的重点不在于该不该花 20 小时学习新的东西，而是可不可以的问题？", "20 个小时只是 demo 水平 各个工程领域都有或多或少的坑 没有一定的经验 根本搞不定", " 这个问题对于每个人的情况都有所不同， 20 小时不能认为是固定的时间，而是少量的时间，相比需要 21 天才能学会 C++，或许，通过 2 天的练习就能撸 C++", " 如果一切顺风顺水的话，或许可以短时间入门。\r", "可是问题在于，计算机能力的关键在于解决问题的能力，你每遇到过让你心力交瘁的问题，一个坑废掉几天时间，这方面的能力才会提升。\r", "这就是书本和实践的区别", " 仔细想一下在这么长使用一门编程语言的时间内，遇到心力憔悴的问题发生的概率是比较小的，也许一个星期才会遇到一个。大部分的时间是在运用最常用的那部分功能，而我所希望的 20 小时能够解决的问题，就是掌握这些最常用的部分。如果真的遇到心力憔悴的问题，可以说这个问题已经超出了 20 小时学习的范围。比如：不能把 IDE 或者编译环境的问题归咎于编程语言的坑，不能算法的问题归咎于编程语言的坑。", " 问题在于，只会编程语言是不能叫做足够使用的。", " 坑多坑少和你处于什么样的阶段也密切相关。在业务快速成长阶段，随着流量或者需求的不断增多和精细，遇到的问题简直是井喷式的。", "这个看个体差异。\r", "如果有基础的理科生学 PHP ，给 20 个小时，应该可以了。\r", "如果无基础的文科生学 PHP ，甚至连“变量”是什么都不知道的，给 200 个小时都未必能入门。\r", "\r", "如果有人带，随时答疑， 20 个小时的确是可以了。当然这 20 个小时并不一定就是连续的，可以分拆 20 个。大学里面一节课也才 45 分钟， 20 节课可以排一个学期了。", "听起来和“快速阅读”之类的技巧有些像，不是很实用的样子..", "有点像学生时代，最后百分之二十的时间掌握百分之八十的考试内容，目标是期末不挂。但是学的快，忘的也快。", " @", " 与编程语言不想关的问题已经属于独立的问题，它可能是高并发、安全、快速算法、协议底层，但是这个跟语言独立，如果把计算机所有问题都包括进来这个命题就变成了「用 20 小时学习整个编程领域」了。我所想表达的不是快速学习所有东西，核心在于对于完全陌生的领域，只要花比想象的少的时间就能够达到整体了解并运用的程度。当然，我承认很多领域是很庞大，系统的了解是要花费非常多的时间的。至少我有一个信心就是学习新的狭窄的领域只需要花费很少的时间的。\r", "\r", "举个简单的例子，游泳，如果想像菲尔普斯游的那样好，当然 20 个小时是不够的，但是想要从完全不会到能够游泳我想 20 个小时肯定够了。相应的，编程，如果想像 C 语言之父那样精通（他也不是所有领域都精通，任何人只能在狭小领域精通）， 20 小时肯定也是不够的，但是想从完全不会到能够用 C 来解决问题肯定是够的（具体能够解决什么问题，受限于学习者对问题领域的知识丰富程度，但使用 C 语言的最常用的特性肯定是够的）。\r", "\r", "所以我真正想表达并不是快速学习，而是我们能够用少量的时间就掌握任何一个全新的领域的最常用最核心的技能。", "LZ 说的没问题啊，这本来是 20 小时就能解决的事情，不过学到的东西也比较狭隘就是了。\r", "\r", "说一万小时的和 LZ 讨论的不是一个层次的东西。", " 你 get 到点了 :)", "一屋不扫何以扫天下，成大事者不拘小节，这两句话之间的争辩而已。要先有坑，才有坑填的机会，也就是上手了，才有可能接触这些坑，才有后面的 1 万小时…"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>不知道这里用 hg 的人多不，我在 windows 下创建的 repo ，在 windows 下克隆使用一切正常，但是到 mac 下克隆出来的中文文件名会乱码，有什么解么？</p>\n<p>网上查了各种方法都不对，包括 FixUtf8 ， set LANG environment ，传递 encoding 参数，还是说我弄错了什么。</p>\n</div></div>"], "reply": "10", "tittle": "hg 跨平台使用，文件名乱码", "comment": ["你确认是 hg 的问题而不是本身文件的编码问题？", "你在 Windows 下文件的中文名编码可能是 GBK, GB18030, UTF-16-LE, UTF-8. 改 OS X 的 Terminal.app （如果你用这个 Console ）输出字符串的编码和 Shell 里的 LC 打头的编码包括 LANG ），都改成跟 Windows 一致的。\r", "P.S. 我不用 hg ，可能 hg 本身也能指定 Encoding ，这个你自己看着办了", " 不是文件编码，是文件名编码。", "为什么会有中文文件名……\r", "这是坑自己啊", " 非程序人员使用的一些文件。", "先确认仓库里面的文件名是什么编码, 如果那文件当初在 win 提交的，那大可能仓库里面就已经是 gbk 编码的文件名，因此 fixutf8 插件没用， fixutf8 插件是对仓库中 utf8 文件名的文件在 win 平台 checkout 时候使用本地编码的补丁，因此楼主需要一个“反 fixutf8 ”插件……（就是把 fixutf8 里面几个变量倒过来）\r", "\r", "。。上次使用 mercurial 都 5 6 年前了，就是因为这类坑，但是这个是设计问题， hg 设计是保持提交者的原汁原味，所以比较无解的。\r", "所以楼主有两选择：\r", "1. 自己本地弄个反 fixutf8\r", "2. 修改仓库内为 utf8 ，参考 ", " ", " 试试这个，不过 mercurial 官方是说请使用 ascii 作为文件名来在跨平台上面使用", "调试一下 hg 就好了...", "就像这样, 最快找问题的办法, 调试.\r", "\r", " ", "我不能给建设性的意见，不过我以上读过 mercurial 的源码，很简单，所以你要是半天否解决不了，不如花半天时间看它代码，多半能找出哪一步是问题所在，这也是我解决问题的办法。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>所谓的前车之辙后车不看，嗯，就是这样</p>\n<p>大家都知道剑网 3 这游戏彻彻底底就是抄魔兽世界的，界面，设定，快捷键，魔兽世界有插件，剑网 3 也要有，而且，根据暴雪的要求，所有的魔兽世界插件不能编译（也就是 luac 是不允许用的，当然混淆是可以），一开始有一些插件为了收费混淆了，后来被抨击久了全改成原版代码了。而且，这些插件大量优秀产品，什么 xperl ， bartender ， dbm ，哪个不是千行万行级别的，有的插件光设置 tab 就七八个。</p>\n<p>然后，剑网 3 也搬了这一套，开始做插件，第一次是几乎开放了所有权限，包括 IO ，这意味着什么，我在 lua 里直接操作你本地磁盘，何等卧槽的事情。当然，内测阶段搞插件的也没有干坏事的，金山也不是傻子，很快这些 IO 接口就封闭了。但是后来我们发现， load 和 loadstring 这两个函数还是可以用的，这意味着你可以绕过游戏的沙箱直接调用内部 API 去做一些外挂才能做的事，刚开始也没人拿这个干坏事，只是调用一些 3D 交互函数取一些玩家信息、坐标什么，后面真的有人去开发外挂了，甚至替换剑 3 的 lua 解析器去掉沙箱的屏蔽。</p>\n<p>这只是前言而已，剑网 3 一直开放了你想都不敢想的函数，对就是 http 请求，包括 inapp-browser ，这意味着插件可以通过一些机制，合法的上传信息或者接受来自服务器的指令，一开始这也没什么，大家上传一下 dkp 分数，搞一下人口普查，但是别有用心之人在自己的插件里放了操控指令，可以接受远程服务器的喊话，你想，我一条指令下去全服 1/3 的人都在世界频道里艹你娘是个什么感觉。剑网 3 屁事多，若干个玩家爱横情仇(yuan cheng yue pao)不可开交，于是这个事就爆发了，那个插件作者为了自己(xx)之人使用了远程喊话，控制某阵营的所有插件使用者为 xx 道歉。</p>\n<p>当然后来这个权限也去掉了，再加上插件白名单机制，剑网 3 花了可能有 3 年的时间，才做到了 wow 他看到的那个样子。</p>\n<p>正所谓前车之辙后车不看，明知山有虎，偏要走一走。抄都抄不明白啊~</p>\n</div></div>"], "reply": "12", "tittle": "有帖子讨论金山的产品不能用，我想到了金山(西山居)踩坑的例子，分享一下", "comment": ["好久以前的事了，那时候我还在玩；一群人上线就喊话还是很壮观的。\r", "现在早就 A 了。。", "不知道楼主槽点在哪里。我觉得插件系统对剑三是加分，那些破坏性的功能即使没开接口，也会有人去做的，而且更隐晦。", " 魔兽世界一开始的底线就是(1)插件不能访问网络(你说网易的集合石这不算，毕竟他自己的游戏他随便搞)(2)插件不能控制 3d 交互(也就是说你只能平面绘图，不能操控摄像机和视角)(3)所有技能必须由用户释放后插件的释放才有效，这是说给动作条的\r", "\r", "剑 3 一开始所有的底线都破了，直到后面修修补补才改回 wow 一开始的样子", "环境不同？\r", "\r", "国内一般都是急于把功能先实现，坑慢慢填。\r", "\r", "海外弄个功能都是讨论许久。", "吐槽啥不好吐槽剑网 3 ，当年剑网 3 绝对是一股清流，月卡制，不卖道具。全抄 WOW ？ WOW 以后有不抄 WOW 的游戏吗？再说经脉系统让你忽略了？\r", "如果是为了圈钱，最好的方式是搞免费网游，卖道具，而不是出个月卡制的网游。", " 哦 经脉系统不也改成 wow 的天赋系统了么？我当时戳奇穴戳 9 到 10 也很生气啊，动不动归 0 ，不过我运气好戳出来 3 个 10 呢", "想起来当时我室友新买的笔记本 wow 全特效不卡（团本>30 帧），玩剑 3 卡的简直是看漫画。。。\r", "其他的   没玩过不评价", " 卧艹，怎么感觉你啥都懂啊。。。 来来来，相互粉起来。。 ", " ", "我觉得是疏于管理，对安全性认识不足，可以理解。剑三是国内少有学 wow 学得好又接地气的作品，堪称范例。", " 是因为其他国产武侠网游太烂了，不是清一色的道具+传奇风就是没抄到 wow 的精髓倒闭了\r", "这么多年叫嚣模仿或者超过 wow 的，活下来的就剑 3 一个，难能可贵", " 国内公司如果按照暴雪那种跳票的频率，会死的很惨", " 我觉得剑三能活下来不是因为它抄 wow ，而是能从始自终把握住自身的特色，借鉴 wow 只是锦上添花，所以我更愿意说成学。当然要说有副本就是抄那就没办法了。"]},
{"content": ["<div class=\"topic_content\">假设有下面一张表:命名为 stu 好了，如下\r<br>id     name    goal\r<br>1        a          10\r<br>2        b            8\r<br>5          c          6\r<br>9        d            9\r<br>使用一段 sql 能够变成如下这个样子:\r<br>id    name    goal   next\r<br>1       a         10        8\r<br>2        b          8         6\r<br>5         c         6        9\r<br>9         d          9        null\r<br>不知道 v 友看懂了没有？就是想要用一段 sql 实现按 id 排序之后，把下一个记录的 goal 添加到上一个记录的 next 里面，也就是要按这种规则添加一列。\r<br>想了一晚上，唯一想到的就是用子查询这点思路了，但是还是想不通，，诚心求帮助。</div>"], "reply": "17", "tittle": "一段 sql 求帮助", "comment": ["不如查出来程序拼接", " 不好意思，并不行呀，要能用程序，我就不开这主题了。。", "update 里套一个 select,用 order 排序，用 limit 指定行，差不多可以了", "select A.*,(select B.goal from stu B where B.id>A.id  order by B.id asc limit 1) as next from stu A order by A.id asc", "这个需求有做过类似的，用了一种不完美的办法：\r", "1 、你可以查询两次，在已排序的结果上增加一个 rownum ，得到结果集 a,b ；\r", "2 、用 rownum 做为管理条件（ rownum = rownum + 1 ），用左连接关联两次查询的结果；\r", "3 、稍微筛选一下，就能得到你要的结果了， a.id,a.name,a.goal,b.goal  、\r", "不过有个问题，就是最后一条记录会有问题， next 会取不到值，没想到更好的办法了", "select *, (select goal from stu where id > s0.id order by id asc limit 1) as next from stu s0 order by s0.id asc;\r", "\r", "goal 有索引的话，效率不低的。", "错了是 id 索引……", "这个倒霉就倒霉在 ID 不连续上面了", "先说你是什么数据库，数据库不一样支持的 SQL 也不同的。不说数据库怎么弄……\r", "\r", "像 Oracle 的话，一个分析函数可以搞定。", " 额，好吧。。，我是 mysql", " 第一反应就是「这不一个 lead() 函数就搞定了么」，然后看到了你在 10 楼的回复…", "为什么 ID 会是不连续的呢", " 要么不是用 auto_increment 而是在程序里处理，要么存在物理删除", " 也有可能插入失败导致的", "SELECT\r", "\tt1.rowno1,t1.id,t1.name,t1.goal, t2.goal AS next\r", "FROM\r", "\t(\r", "\t\tSELECT\r", "\t\t\t(@rowNO := @", " + 1) AS rowno1,\r", "\t\t\ta.*\r", "\t\tFROM\r", "\t\t\t(SELECT * FROM stu) a,\r", "\t\t\t(SELECT @", " := 0) b\r", "\t) t1\r", "LEFT JOIN (\r", "\tSELECT\r", "\t\t(@rowNO2 := @", " +1)-1  AS rowno2,\r", "\t\ta.*\r", "\tFROM\r", "\t\t(SELECT * FROM stu) a,\r", "\t\t(SELECT @", " := 0) b\r", ") t2 ON  t1.rowno1 = t2.rowno2", " 请问是什么分析函数？", "看 11 楼"]},
{"content": ["<div class=\"topic_content\">浏览器有时候会自动 URL 编码。。。比如我在 js 里用 window.location.herf 跳转到一个参数里带双引号 \"   的一个地址，抓到的 HTTP 请求包里浏览器就自动编码成%22 了。。。 有没有什么办法能用 js 构造一个不会被浏览器编码的跳转，抓的包里传过去的是没编码过的？？\r<br>\r<br>       求解  thx..\r<br>      什么奇怪的思路都行。。只求能解决问题。。。</div>"], "reply": "6", "tittle": "有没有什么办法从 js 上禁止浏览器自动 URL 编码？", "comment": ["你这是要做 xss 扫描工具吗？", "你自己写一个浏览器，就可以实现了。\r", "btw ：你应该先想想，浏览器为啥要这样编码", "编码过的 URL 到服务器上要解码回来的，不然没法 parse 。", "我的做法是把%替换成!，服务器再解码。\r", "浏览器行为不统一就算了，有些系统内部处理都不统一。例如微信广告平台。新建广告时， url 里的中文转义成%后是可以提交的，但提交后，又自动解码成中文，于是下次修改的时候，提示说 url 不能有中文。如果又改回%转义的，广告又要重新审核（ url 判定为变了），各种麻烦……\r", "于是直接%替换成!，系统就不会自动转义了，我在服务器端再将!替换成%，再解码出来。", " 嗯  就是一个 xss  ...", "抓包看到的%22 难道就不是\"了么。好好学学 HTTP 协议，知道浏览器是怎么处理请求包的。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>码神日志——实践开发者的社群理想网易云信&amp;网易视频云联手出品人，通过每期专业领域深度内容的分享，把相同垂直专业领域的开发者筛选出来，交流互动，共同成长，组织专注精准的垂直技术社群。</p>\n<p>现在可以通过链接进行免费报名哦： <a href=\"http://www.huodongxing.com/event/4358327117600\" rel=\"nofollow\">http://www.huodongxing.com/event/4358327117600</a></p>\n<p>活动详情可以点击图片进行查看！</p>\n<p><img alt=\"1\" src=\"http://p2.pstatp.com/large/106500008cf6b7141074\"></p>\n</div></div>"], "reply": "1", "tittle": "10 月 29 日码神日志免费报名啦——实践开发者的社群理想", "comment": ["支持一下自家产品。"]},
{"content": ["<div class=\"topic_content\">收费的都可以，主要用途就是在几台电脑之间自动同步数据（同步盘类似）</div>"], "reply": "12", "tittle": "老问题.国内网盘已经不敢用了，刚刚费力把 360 云盘几十 G 的内容下载回，有什么国外好用的网盘不", "comment": ["那为什么不用 syncthing", "梯子快不差钱当然 Dropbox Pro 。\r", "我用 Dropbox 存一些文件类的数据，梯子不快就没买 Pro 。\r", "国内网盘目前在用百度云，存影音文件， 3T 多了，就算想挪到国外也挪不动了。\r", "为防数据丢失，基本都是线上线下双备份。放百度云就是为了看视频方便。", "网盘和数据盘的区别表明了用户是如何看待自己的数据的.\r", "比如我一直都只用同步盘, 拒绝用网盘, 数据必须是基于我自己的电脑的, 网上或者其他设备上可以有拷贝, 防止丢失, 方便存取\r", "但是一旦用上了网盘就悲剧了, 表面上可以 30g 的小电脑拖一个 100t 的无限大硬盘, 但是问题就出在万一你和那 100t 之前的关系万一断了, 回头路都木有", "上面好像偏题了, 补充一下, 我自己用的 bt sync", " \r", " \r", "主要是一些资料 平时工作频繁用的文件，还有一些备份东西", "  这个还要研究下 看看", "Dropbox 好评！一些重要资料都是在用 Dropbox 。", "你这个需求还是用 btsync 把", "自己有服务器可以架 syncthing 。\r", "推荐 Dropbox, Mega, 但是容量都不大。", "onedrive 5T", "mega", "onedrive 365 ，无梯子，满速上传下载"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>iDev 苹果开发者大会火热报名中，通过此篇文章可用 ￥ 199 抢购原价 ￥ 569 的大会门票一张，仅限 5 人！</p>\n<p>优惠码： [ shazishev2ex ]\n抢购地址： <a href=\"http://www.bagevent.com/event/207773?discountCode=shazishev2ex\" rel=\"nofollow\">http://www.bagevent.com/event/207773?discountCode=shazishev2ex</a></p>\n<p>————————————————————————————————————————————————</p>\n<p>小编语\n本文为 DevLink 专访系列，本期采访嘉宾是 iDev 苹果开发者大会 iOS 逆向工程讲师——沙梓社。在即将到来的 iDev 大会上，他将和大家分享对逆向工程的理解，以此激发大家的思路和灵感。</p>\n<p>《 iOS 应用逆向工程》第一作者——沙梓社是 iOS 越狱社区骨灰级活跃份子，对技术有着狂热的追求。非典型技术男。做事标准较高，喜欢归纳总结，推崇深度思考，乐于讨论分享。渴望结识优秀人才，督促自己不断成长。</p>\n<p>而这次 iDev 大会组委会特别有请到了他来作为嘉宾，希望他能在苹果的开发者大会上，分享一些他多年的专业知识。这次他为我们带来的议题题目为《 iOS 逆向工程一隅》。</p>\n<p>什么是逆向工程？\n它能解决什么正向开发所解决不了的问题？\n很多 3 年经验的 iOS 工程师都已碰到技能提升瓶颈，我们应该如何用 iOS 逆向工程来武装自己，打破 App 开发的“ 3 年之痒”？</p>\n<p>————————————————————————————————————————————————</p>\n<p>以下为采访内容，提问者： DevLink ，受访者：沙梓社。</p>\n<p>1 、沙老师您好，能否简单的介绍一下你自己？</p>\n<p>大家好，我是沙梓社，“老师”还不敢当，以我目前的状态来说，无论是在做人还是做事上，我都还是一枚普通的学生，哈哈。</p>\n<p>我是一个非典型的技术男、理工男。我在读硕士时“侥幸”踏上了 iOS 逆向工程这条“贼船”，之后就再也没有下来过；我出过书，创过业，做得越多，见识越广，对“人外有人，山外有山”的感受就越深，虽然我自认为是一个比较有上进心的人，但随着年龄的增长和经历的丰富，我慢慢褪去了年轻气盛的浮躁，逐渐生出了心平气和的淡定。</p>\n<p>2 、您关注的领域在大家看来，与普通开发者会有一些差异，您关注的更多是 iOS 在代码安全领域的事情，而不是具体的开发实现。能否介绍下为什么比较关注这个领域么？</p>\n<p>其实这里存在一些普遍的误解，就是 iOS 逆向工程主要服务于 iOS 安全；但事实并非如此。 iOS 逆向工程是一个工具， iOS 安全只是这个工具的应用场合之一，而我的兴趣点其实并不在这个应用场合；我关注更多的是如何运用逆向工程技术来改进自己的代码，如何运用逆向工程思维来优化自己的产品。这是一种打破思维定势的思考和办事方法论，也就是苹果所提倡的“非同凡想（ Think Different ）”。</p>\n<p>其实对这个领域的关注，更多地要归功于我的硕士生导师。计算机硕士毕业，一般需要在毕业设计中体现一些“研究成果”，而在 5 年前， iOS 开发还停留在初、中级阶段，绝大多数功能只需要对着文档撸代码就可以了，没有什么“研究”可言；这样我的硕士是无法毕业的。基于这个最主要的原因，结合苹果较为“封闭”的特点，我的导师建议我选择“研究”性质相对较强的逆向工程，做一些技术门槛相对正向开发更高的事情，来顺利毕业。</p>\n<p>后来，我在摸索中深深感受到了逆向工程的巨大魅力，从此一发不可收拾。谁能想到，本来只是为了硕士毕业的选择，竟然对我的人生产生了如此深远的影响。真是——缘，妙不可言~</p>\n<p>3 、您这次分享的主题是关于 iOS 逆向工程的，能否跟大家“剧透”一下要讲些什么？</p>\n<p>刚才提到，正向开发没有太多“研究”可言，而这也是绝大多数 iOS 工程正在面临的“三年之痒”——很多拥有三年 App 开发经验的 iOS 工程师，遇到了技术提高瓶颈，职业规划貌似也碰到了天花板。在我看来，这是比技术问题更值得深入探讨的话题，它的难点在于，没有标准答案，解决方案又因人而异。</p>\n<p>我这次的分享不会过多涉及技术细节，这些琐碎的东西可以在我建立的诸如 QQ 群、论坛等渠道私下交流；主要想讨论的，是我对逆向工程的理解，和它所能够解决的一些问题，希望以此为契机，激发大家的思路和灵感。在我创业的一年半载中，我观察到，绝大多数的 IT 工程师是“两耳不闻窗外事，一心只写圣贤码”的，且不以为“耻”，反以为荣。私以为，这样的思维方式，在提高专业技术上是我们的绝对优势，但在培养综合能力上则是我们的巨大短板。</p>\n<p>在这次会议中，我希望能够通过从形式到内容上的不同，来带给与会的朋友们一些“冲击”，激发他们的思考。</p>\n<p>4 、作为越狱社区的活跃者，您如何看待 iOS 越狱这件事？有人说，随着 iOS 系统的进步，普通用户对越狱的需求变得少了，您是怎么看待这个问题的？</p>\n<p>我是越狱的坚定拥护者；我的所有 iOS 设备，只要能越狱，一定会越狱，因为我需要实现很多不越狱所实现不了的功能，比如定制第三方推送的提示音（ <a href=\"http://t.cn/RtiZ7vD\" rel=\"nofollow\">t.cn/RtiZ7vD</a> ）。</p>\n<p>苹果在防范越狱上采用了非常高明的招数——它不是生硬地通过法律或其他手段来阻止黑客继续越狱，而是“偷走”了越狱社区里无穷无尽的奇思妙想。例如，现在的 banner 式推送通知，灵感来源于 Peter Hajas 开发的 MobileNotifier ；现在的 control center ，灵感来源于 BigBoss 开发的 SBSettings ；现在的 night shift ，灵感来源于 f.lux 。</p>\n<p>大多数普通果粉感兴趣的并不是越狱本身，而是越狱之后他们能干很多不越狱干不了的事。现在苹果把大多数果粉越狱后最想干的事情，给搬到了原版 iOS 中，很多果粉就没有再越狱的理由了。没有了群众基础，国外的大多数越狱玩家也就丧失了研究越狱的动力，由盘古等国内团队接棒了。虽然我是越狱社区的一员，但我认为，越狱的黄金时代已经过去，我们社区的活跃程度也大不如前了。但好消息是，几乎所有老玩家，都还奋斗在一线，寻找下一个“监狱”，哈哈。</p>\n<p>5 、除了《 iOS 应用逆向工程》这本书以外，您接下来有没有其他的写作计划，能否透露一下？</p>\n<p>我暂时没有其他的写作计划了；很多朋友问我是否会出版《 iOS 应用逆向工程》的第 3 版，我的答案是否定的，因为虽然 iOS 在不断更新换代，尽管实现细节会略有差异，但 iOS 逆向工程最最核心的思路却一直没有变化，书中所介绍的思维方式和方法论适用于所有 iOS 版本。在这种情况下，我不想换汤不换药地为了出书而出书，那意义就不大了。</p>\n<p>前阵子，机械工业出版社的编辑朋友问我，有没有打算把我的创业文章整理出版；因为总共也没写多少东西，而且都是粗浅的理解，还远远够不上出书的水平，所以后来我抱歉地拒绝了。</p>\n<p>6 、我们知道，前段时间您刚刚结束了一个为期 18 个月的创业，并把创业经历写成了文章与大家分享，对于技术人员创业，您有什么建议给大家么？</p>\n<p>我花了整整一个月的时间，专心去写这十篇文章（ <a href=\"http://t.cn/R5em4LU\" rel=\"nofollow\">t.cn/R5em4LU</a> ），它们既是一次分享，又是一次总结；我所有的建议都已经毫无保留地体现在文章里了。</p>\n<p>如果是对技术人员创业，我的建议就是不要把自己当成技术人员。随着阅历的丰富，我对这一事实的感受越来越明显：每个人都是独一无二的，不要被别人和自己贴的各种标签给束缚了手脚，限制了自己；大胆去做。</p>\n<p>7 、对身处苹果生态链的一线开发者有什么要说的么？</p>\n<p>在今年的 5 月，我有幸作为 PHP 之父 Rasmus 的贴身翻译，全程参与了你们主办的 PHP 全球开发者大会；对大会的评价，大家的反响都出奇地高。其中，我认为最能洞悉参会意义的，是知乎上的“ trylife ”，他说：</p>\n<p>我去参加参加大会的动机是沐浴大神的气息，特别是父与鸟哥的气息。气息这种事情很虚，远比“ PHP7 为什么这么快”虚无缥缈难以捉摸，但是影响深远，一旦捕获受益终生。\n这种事情很难线上体验，会有很多缺失。但是其他的如分享的内容，你总是可以免费得到的，无非就是晚一点。找基友也有群，也不用太腼腆。</p>\n<p>这也是我想对参会的各位朋友所表述的。</p>\n<p>对于无法到场参会的朋友，我想说的是，在职场中，我们每个人的价值，不是“我会什么”，而是“我能为我的用户、客户、领导、上司、老板、公司解决什么样的问题”。这句话跟张小龙说过的“用完即走”一样，字面意思极其浅显，但希望大家有一天能领悟到它的深层含义。</p>\n<p>谢谢！</p>\n<p>————————————————————————————————————————————————</p>\n<p>iDev 苹果开发者大会，将于 2016.11.5-6 在北京国际会议中心举办，是面向苹果生态链开发者举办的线下技术交流活动。</p>\n<p>议题范围涵盖 iOS 、 macOS 、 Object-C 、 Swift 以及苹果硬件及智能设备等，内容选题覆盖从企业级开发到函数式编程，从动态化到 hybrid ，从实际开发到测试管理，都安排了诸多环节来帮助大家“抬头看路”。力争为致力于苹果系统开发的同学们提供一个线下的学习、分享、交流平台。</p>\n<p>购票地址： <a href=\"http://idev2016.devlink.cn/\" rel=\"nofollow\">http://idev2016.devlink.cn/</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "苹果开发者大会专访讲师——沙梓社：运用逆向工程思维来优化自己的产品", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><blockquote>\n<p>不知道有没有 V 友玩《球球大作战》这款手游的。</p>\n</blockquote>\n<blockquote>\n<p>玩了一阵子，被里面很牛逼的小学生虐的简直要跪。</p>\n</blockquote>\n<blockquote>\n<p>而且里面小学生无一例外，都很牛逼。无解。。</p>\n</blockquote>\n<blockquote>\n<p>于是就用业余时间撸了一个棒棒糖代点工具试图来抗衡 RMB 玩家(算是有点卵用)</p>\n</blockquote>\n<blockquote>\n<p>不过自己拿拿免费的棒棒糖(游戏点券)买买小东西也是可以的。</p>\n</blockquote>\n<blockquote>\n<pre><code>原理：通过模拟请求游戏内的邀请链接，获取指定奖励\n框架: Lumen + Easywechat + Redis queue\n</code></pre>\n</blockquote>\n<blockquote>\n<p>工具集成在公众号中的。 V 友们可以扫码关注一下，有<code>付费</code>和<code>手动</code>两种方式</p>\n</blockquote>\n<blockquote>\n<p><code>付费</code>用户每日凌晨 <code>0~2</code> 点会自动获取当日棒棒糖数量上限，<code>手动</code>的只有靠自己动手撸啦~</p>\n</blockquote>\n<blockquote>\n<p>关注公众号会自动送 一张 <code>月卡 VIP</code> 兑换券。体验电动撸……</p>\n</blockquote>\n<blockquote>\n<img src=\"http://static.blog.lurrpis.com/gmcloud.png\">\n</blockquote>\n<blockquote>\n<p>一楼还会送几张年卡兑换券给广大 V 友哈～～🙏🙏</p>\n</blockquote>\n</div></div>"], "reply": "4", "tittle": "Lumen + Easywechat + Redis 队列 实践球球大作战工具", "comment": ["```\r", "年卡:\r", "UCDKMVQ7GA1DYCFT\r", "0SPR0KLQ53SAQOFW\r", "HED5XEPT8ZQR0HZP\r", "ALNWSTGWIODG6I9S\r", "KOGQ6KHQEMJJL04G\r", "I8YRMZIFEWKPSTYO\r", "UU33AC4YGVMKGTWS\r", "REMTVLHMSTLBR2MA\r", "VXZKZCSXJI18RRYT\r", "3UQ2HSZSJJJHICHY\r", "```", " 为何回复不能解析 Markdown ....", "这是什么鬼！棒棒糖只能买一点点道具，并没什么卵用，上星还是要有人合作。", " : ) 谢谢指导"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>对于 Web 产品来说， API 的重要性不言而喻，相信前后端工程师都深有体会。</p>\n<p>关于 API 的开发流程，笔者咨询过一些朋友，也在面试的过程中问过一些候选人，抱随意的态度较多：口头约定、邮件约定、通过即时聊天工具发送，也有编写较详细的 Word 文档的。大家都被这么一个问题困绕着：想了解 API 的完整参数及含义，除了看源码之外别无他法。如果是自己编写的代码，短期内还能回想起来，如果是别人编写的代码，那可能看了源码也还是一知半解。</p>\n<p>再说一个在开发中的常见现象。 API 中的 ID 字段，对类型“不敏感”的后端工程师，可能一会儿返回 number 类型，一会儿返回 string 类型。而前端工程师，都喜欢用“===”来判断，对类型有严格的要求。对于 number 类型，如果超过一定的位数，在浏览器端又会有溢出的问题。就这么一个类型不一致的问题，不知道浪费了全世界工程师的多少青春岁月。</p>\n<p>所以，我们迫切需要这么一个产品：</p>\n<ul>\n<li>方便地管理项目中的所有 API</li>\n<li>API 文档清晰直观并且方便查看</li>\n<li>有自动化 API 测试工具，方便开发和测试工程师进行回归测试</li>\n<li>有方便地生成规范的 API 的功能，比如 RESTful API</li>\n</ul>\n<p>对于前端工程师来说，还有一个必不可少的功能： API 模拟容器（响应数据是根据 API 定义 MOCK 出来的），以便在后端没有开发好接口之前就能进行页面开发。这个 API 模拟容器对代码没有侵入性，即前端编写的代码，上线时不需要进行任何处理。</p>\n<p>就笔者的观察，能满足以上需求的工具在整个业界（包括国外）都还很少见。</p>\n<p>今天向大家推荐一款 API 管理产品：<a href=\"https://nei.netease.com/\" rel=\"nofollow\">NEI 接口管理平台</a>（以下简称 NEI ）。</p>\n<p>NEI 是网易杭研前端技术部推出的一款产品，旨在帮助项目团队更好的管理 API 接口。 NEI 是杭研前端团队多年的技术沉淀，是很多位资深工程师的丰富经验总结，之前一直只对网易内部用户使用，今年 9 月初正式对外开放。</p>\n<p>下面大致地介绍一下 NEI 。</p>\n<p>NEI 按项目来管理所有资源，资源的创建和维护可由团队成员协作完成，目前它已经提供了以下功能：</p>\n<ul>\n<li>项目管理：动态、团队管理、权限管理、项目文档等</li>\n<li>页面管理：项目中的页面定义</li>\n<li>异步接口：即本文所说的 API</li>\n<li>接口测试和用例管理：方便回归测试和生成测试代码</li>\n<li>数据模型： NEI 中最强大的功能之一，对应数据库中的实体对象</li>\n<li>页面模板： NEI 配套的构建工具会根据定义生成模板文件</li>\n<li>规则函数：自定义 MOCK 数据， NEI 也预置了常见的规则函数</li>\n<li>业务分组：按照业务对项目资源进行细分，方便管理</li>\n<li>工程规范：本身可以当作脚手架，也可以和 NEI 项目结合，集成项目中的 API 和数据模型</li>\n<li>消息中心：保证重要的操作能及时通知到相关负责人</li>\n</ul>\n<p>下面是几篇介绍文章：</p>\n<ul>\n<li><a href=\"https://github.com/NEYouFan/nei-toolkit/blob/master/doc/NEI%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E4%BB%8B%E7%BB%8D.md\" rel=\"nofollow\">NEI 基本概念介绍</a></li>\n<li><a href=\"https://github.com/NEYouFan/nei-toolkit/blob/master/doc/%E4%BD%BF%E7%94%A8NEI%E8%BF%9B%E8%A1%8C%E5%89%8D%E5%90%8E%E7%AB%AF%E5%B9%B6%E8%A1%8C%E5%BC%80%E5%8F%91.md\" rel=\"nofollow\">使用 NEI 进行前后端并行开发</a></li>\n<li><a href=\"https://github.com/NEYouFan/nei-toolkit/blob/master/doc/%E8%80%81%E9%A1%B9%E7%9B%AE%E7%9A%84%E8%BF%81%E7%A7%BB%E8%AF%B4%E6%98%8E.md\" rel=\"nofollow\">老项目迁移到 NEI 上的说明</a></li>\n<li><a href=\"https://github.com/NEYouFan/nei-toolkit/blob/master/doc/%E5%B7%A5%E7%A8%8B%E8%A7%84%E8%8C%83%E4%BB%8B%E7%BB%8D.md\" rel=\"nofollow\">NEI 工程规范介绍</a></li>\n<li><a href=\"https://github.com/NEYouFan/nei-toolkit/blob/master/doc/%E4%B8%80%E6%AD%A5%E4%B8%80%E6%AD%A5%E6%95%99%E4%BD%A0%E5%A6%82%E4%BD%95%E6%84%89%E5%BF%AB%E5%9C%B0%E7%94%9F%E6%88%90JavaBean%E6%96%87%E4%BB%B6.md\" rel=\"nofollow\">一步一步教你如何愉快地生成 JavaBean 文件</a></li>\n</ul>\n<p>以上所有文章都放在 Github 仓库的 doc 目录下：<a href=\"https://github.com/NEYouFan/nei-toolkit\" rel=\"nofollow\">NEI 配套构建工具</a>。</p>\n<p>如果 NEI 能解决您遇到的一些麻烦事儿，那就赶紧去试试吧。</p>\n<p>最后，也欢迎大家在使用的过程中给我们提建议和意见：</p>\n<ul>\n<li>需求提议地址：<a href=\"https://github.com/NEYouFan/nei-toolkit\" rel=\"nofollow\">Issues · NEYouFan/nei-toolkit · GitHub</a></li>\n<li>NEI QQ 交流群号： 453281988</li>\n</ul>\n<p>目前 NEI 已经托管在<a href=\"http://www.163yun.com/\" rel=\"nofollow\">网易云</a>上，在此也非常感谢网易云提供的服务。</p>\n</div></div>"], "reply": "2", "tittle": "NEI 接口管理平台", "comment": ["赞一个。 我自己写了个简单的东西，和你们的思路很类似，但远远没有你们实现的那么完善。", " 以后可以多多交流哈"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>需求是具体是这样的，目前的后端是 Spring 渲染好 Freemarker 页面后直接返回 HTML 页面</p>\n<p>代码可能如下：</p>\n<pre><code> @RequestMapping(\"/index\")\n public String hello(@RequestParam(value=\"name\", required=false, defaultValue=\"World\") String name, Model model) {\n     model.addAttribute(\"name\", name);\n     return \"index\";\n }\n</code></pre>\n<p>我的理解就是， Model 先填充数据，然后再用 Model 填充 index.ftl ，然后再返回 index.html</p>\n<p><strong>但是</strong>，我有时候的需求是，如果我请求的 Content-Type 指定是 json 的话，那么直接把 Model 里的数据当作 JSON 返回即可，不要去渲染 ftl 了</p>\n<p>我看到网上大多数的解决方法是<a href=\"http://theblasfrompas.blogspot.com/2013/10/spring-mvc-rest-content-negotiation.html\" rel=\"nofollow\">这样</a>的：</p>\n<pre><code>@Controller\npublic class PersonController \n{\n\n private static List&lt;Person&gt; personList;\n\n static\n {\n  personList = \n    Arrays.asList(new Person[] \n      { new Person(1, \"Pas\", \"Apicella\"),\n           new Person(2, \"Lucia\", \"Apicella\"),\n           new Person(3, \"Lucas\", \"Apicella\"),\n           new Person(4, \"Siena\", \"Apicella\")\n         });   \n }\n\n    @RequestMapping(value=\"/people\", \n              method = RequestMethod.GET, \n              produces={\"application/xml\", \"application/json\"})\n    @ResponseStatus(HttpStatus.OK)\n    public @ResponseBody People listWithJSON() \n    {\n     return new People(personList);\n\n    }\n    \n    // View-based method\n    @RequestMapping(value = \"/people\", method = RequestMethod.GET)\n    public String listWithView(Model model, HttpServletResponse response, HttpServletRequest request) \n    {\n         \n     // Call RESTful method to avoid repeating code\n     model.addAttribute(\"peopleList\", listWithJSON().getPeople());\n\n     // Return the view to use for rendering the response\n     return \"people\";\n    }\n} \n</code></pre>\n<p>还有<a href=\"http://stackoverflow.com/questions/24195162/spring-mvc-using-same-path-on-endpoints-to-return-different-content\" rel=\"nofollow\">这样</a></p>\n<p>其实，都是一类解决方法</p>\n<p>这样做的问题很明显：</p>\n<ul>\n<li>破坏业务代码逻辑</li>\n<li>写太多重复代码</li>\n<li>在已经有很多页面的系统上追加额外方法太浪费时间</li>\n</ul>\n<p>从编程角度看，我觉得是否有种方法，在稍微底层逻辑上加个类似 Monkey Patch 或者 AOP 类似方法，可能就几行代码，也可能仅仅是配置，就可以实现这个需求呢？</p>\n<p>如果这个从技术上来看不可行，是否有代价非常小的做法呢？</p>\n<p>PS ：我本人不是 Java 程序员，表述有不合规的地方请指出</p>\n</div></div>"], "reply": "6", "tittle": "「求助」Spring 同一个接口根据 Content-Type 返回不同的数据", "comment": [" \r", " \r", "\r", "看到两位经常讨论 Java ，跪求解答", "调试下 就好了.. 记得,好像,在 resolver 上....", "不是程序员的话，把这样的事情交给程序员就好啦。要相信你的程序员", "如果是 JSON 的话直接打印出来就行了 不需要传值到页面上 再做相关处理 ,不知道我是不是理解对了", "关注中", "Spring MVC 内置 Content Negotiation 机制\r", "如果你的请求里面带有后缀的话 举个例子 index.json 就会认为请求的数据是 json 。后缀优先级高\r", "Accept header 优先级较低。\r", "所以前端我建议请求不带后缀 统一用 header 然后不带 header 的给设一个默认的 比如 freemarker\r", "思路是这样。搜一下 spring mvc content negotiation 吧"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>为什么？还有没有类似的变量</p>\n</div></div>"], "reply": "4", "tittle": "js 中 name 的属性是 string？", "comment": ["`window.name` 属于 BOM", " 是 BOM 还是 BOOM 啊？ 逃……", "属性都是字符串", " 如果是浏览器的话，顶级作用域 window 有个 name ，如果非局部变量的话， name 指向的就是 window.name 了。它属于 BOM （ Browser Object Model ）的范围，表明当前页面的名称。"]},
{"content": "", "reply": "71", "tittle": "火绒防护软件怎么样？", "comment": ["这是我用过最好的，是真正的安全软件", "不错，功能够用，不多余。", "火绒的扫描不行，搭配 EEK 用吧，绿色纯扫描器， BD 库", " \r", " \r", " 跟微点相比怎么样，以前用的微点，自从升级 win10 后就完全用不了了", " 我也想知道，但是防护应该够用了，默认规则全开", "原本想裸奔的,反正是老机子了\r", "但 win 上面的流氓软件比病毒还烦人,\r", "火绒基本功能都有了.很不错.", "火绒不错", "用了半年了，非常不错。", "很好用的良心软件", "国产不多的良心软件", "用了好几年了，比某些流氓卫士好用多了", "火绒相当良心。\r", "\r", "我都已经忘了我装过它了。", "火绒相当良心。 火绒不错", "之前重装的时候觉得不需要火绒就裸奔了，后来国产软件的“静默安装”真厉害，于是我又装回来了，起码，有时候会提醒后台安装", "装杀毒软件有什么意义吗？就为了下载来路不明的软件时有 50%机率发现带病毒？", "裸奔两年 没出任何问题 自己上网习惯注意就好了\r", "今年装了个 comodo 的防火墙 感觉基本够用了\r", "对于火绒 个人觉得真要装个杀毒软件让自己放心的话 我也会选择这个 而不是各种全家桶", " 是，就为了这时候，也是杀软存在的意义。等出事就来不及了。", "以前装系统后， pe 会附带把火绒一起装上，这个给我第一印象不好。但看大家的评价还是很不错的。", "卸载后有一个文件删不掉就不想用了，一般推荐 360 国际版", "卡巴斯基路过", " 那是 PE 作者为了推荐火绒，并不是火绒付费推广", " 火绒都要靠收捐款的，哪里有钱付费推广", "从 2 用到 4 整体体验是不错的，就是查杀能力不知道如何，电脑也没啥病毒让他杀，", "10 年的老机器现在就在单奔火绒，也不是天天测试病毒，也不像 360 那种傻 X 天天弹窗烦死你！很安静，推荐，家里的机器全部单奔火绒而且还能防止流氓软件，其实谁都知道， PC 最大的流氓软件就是 360 和百度，腾讯也算！但是还是良心的。", "平时习惯良好的话，就是够用了", "我用火绒已经用了好些年了，从 1.0 到现在的 4.0 都是很大的进步，毕竟现在互联网其实病毒没多少，多的都是诈骗和流氓推广。所以单奔火绒就够了。", " 查杀和专业反病毒的还是有差距，反正家里人就是上网购物，又不试毒。。。所以单奔很放心的说。", "有一种 叫还原软件\r", "难道 没人和道???", " 火绒现在没啥钱，哪里付费啊，现在都靠捐助和推广 hao123 首页，搜索引擎赚钱（可选，火绒在选项里就说的很明白了）。", " 360 你没发现的文件多了去了，主要 360 没事给你弹窗，完全恐吓用户安装，家里父母电脑， 1 年回家后发现全特么 360 的破逼玩意，我就日了....", " \r", "火绒的扫描不行，可能低于基准线（ Windows Defender ），自带规则全开，防护还可以\r", "搭配 Emsisoft Emergency Kit 用吧（绿色纯扫描器， BitDefender 的病毒库）\r", "\r", "----------\r", "（我用 Avast ，占用与火绒一样低）", " 360 国际版很良心，国内的软件都应该用国际版", " 我红伞没法更新了…太慢了", " 国际版不适合家里不懂电脑的老人，而且国际版更新速度太慢了。。。。", " 没用过 Avira ，红伞占用怎么样？ Avast 表示更新正常。\r", "\r", "AVG 的界面太丑，但是 IDP 不错，至少有行为主防，似乎 Avast 和 Avira 都是纯靠引擎的。\r", "以前 Avast 有主防， DeepScreen 就是，现在居然换成 CyberCapture 样本收集器了。", "不错 现在 win 系统全部装的火绒", " 而我觉得 360 国内版和火绒更不适合老人， 360 国内版流氓，\r", "\r", "火绒的规则弹窗会让小白一脸懵逼，不懂的，就会：\r", "\r", "A ：弹过窗么？\r", "B ：弹过。\r", "A ：然后呢？\r", "B ：我点一下就没了，也不知道是什么意思。\r", "\r", "而火绒就规则弹窗靠人脑判断，至少我是不信任火绒的病毒库的，才 15M 。。。\r", "如果没有默认规则全开还不如用 Windows Defender 。。。\r", "但是我需要的就是弹窗盾，禁止加驱什么的很方便。", "错了，应该是：\r", "\r", "而火绒就靠 规则弹窗 人脑判断，至少我是不信任火绒的病毒库的，才 15M 。。。", "和 sandboxie 不兼容很久了", "说的是国际版😂😂，你看错了", "单奔火绒了，感觉还不错。 360 其实也不差，之前做病毒测试时候查杀率相当高，唯一不爽的就是老阻止我翻墙，果断弃之", " \r", " \r", "二位，我没说付费推广", "我教我爸，所有弹窗都点拒绝，从此再也没有被装上全家桶", "火绒导致我的 win10 蓝屏好几次，卸载不了，进安全模式卸载的，仅作参考", "火绒的捐助页面，支持支付宝 ", " \r", "利益无关。", "用了几年 非常不错 国产最良心的软件", "习惯好，裸奔完全没有问题，现在中毒的机会没有那么多了吧？倒是中一个全家桶更可能", "挺不错的办公室 xp 老电脑不卡", "个人习惯裸奔。火绒没用过，不过任何公司不以盈利为目的，都是不现实的，不知道火绒主要靠什么维持公司的运转。\r", "\r", "今天我也刚下了它，用了下。\r", "好像还没有 64 位的\r", "总有 hrupdate.exe 占 cpu ，电脑灯闪的不行\r", "软件说实在的还行，就是用的我有点蛋疼。\r", "也许是我电脑的原因 win7 64", "我能说我现在自己使用的一切 WIN 系统都会安装火绒么？包括去网吧上网也得先下火绒然后扫一扫。火绒已知的盈利手段貌似就一个浏览器主页推广，网络防护里面是可以设置的，而且有提示语。", "装上之后死机了。。。", " 我家五台 win10 电脑都正常", "OS X 路过。", " \r", " 火绒不能跟其它防护软件混用，不然肯定死机蓝屏", "最新升级的 win10 不要用 \r", " 前面的 win10 系统没问题  最新版必挂 没有别的防护软件", " shadow defender+sandboxie 很好用...", "呃，用的系统自带的，感想是有一些游戏的破解补丁被杀了，话说就自带的杀毒和防火墙应该够用了？ windows 用得不多。。。清理系统用的 ccleaner 和自带的磁盘清理和碎片整理功能。", "看到这个帖子后装了，然后就蓝屏了。重启一直蓝屏。进安全模式卸载后无奈一生黑了。 系统： win10", "PC 一直裸奔，除了微软自带的防病毒软件，其他一概不装。\r", "不过我倒是给家里长辈的个人电脑安装了 360 ，亲自调了各项设置。", "家里电脑给爸妈装了个，很喜欢。现在每次回去基本不用维护那台 PC 。\r", "以前就 MSE 的时候，也找不到什么主动防御的软件，国产的都不想装。结果每次回去，那个混乱…每次都要重装…", " 谢谢，本来看到这个帖子正好想去捐助一下的，省了我 Google 的时间。", "孤陋寡闻了，从来没听说过这个软件", "win10 不自带杀毒软件吗，裸奔就行了", "单奔火绒从 1.0-4.0 的撸过！ 火绒人家名字定义的就是安全软件！一群人来讨论他的杀毒功能有多弱也是醉了！火绒主要的功能是防火墙！再就是带的火绒剑也不错！  其他的不要期望太高！\r", "\r", " 拿病毒库说事的也是……   火绒的病毒库基本都是靠用户提交   不像某些软件  有的没的乱提醒   有卵用   除了骚扰用户外", "  你是不是开了 win10 自带的虚拟机   火绒有说明   这个会和火绒冲突   说是微软的问题！提交了 bug 需要微软解决", "  hyperV 的确是开了，我关闭试试，多谢提醒", " 你没有看到我的回复。。。", "第一回听说，呵呵。", "谷歌搜了一圈，看到有说和 Sandboxie 冲突，两者在最新版有解决这个问题么？", " 不清楚，我没见到官网有这方面的说明"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>大约有 4000 ，可以做什么呢？</p>\n<p>注：</p>\n<ol>\n<li>DJ 是我在学校学习的地方，类似学习小组十多人有老师有固定场地</li>\n<li>为什么不拿，因为这个补贴是凭某个身份领的，但我并没有做什么</li>\n<li>我们是学网络的（类似 cisco 、 huawei 、 linux ）</li>\n</ol>\n</div></div>", "<div class=\"topic_content\">好像多了个人收藏了。。。\r<br>\r<br>好吧，汇报一下，考虑之后拿去捐阿里公益了\r<br>\r<br>顺带再解释（与 DJ 联系不想太多也不想太少 so ）</div>"], "reply": "12", "tittle": "学校发下一笔补贴，可是我并不想要，能怎么反馈 DJ 呢？", "comment": ["买 VPS 吗？ kvm 香港最多也就三个", "如果真的不想要，拿出 1000 来整个小组去聚个餐唱个 K ，剩下的作为小组经费，过段时间继续聚餐唱 K 。", "那就捐掉呗\r", "失学儿童之类的", "在学校里你不拿也会被某些人吞掉，实在不想要就拿了再拿去捐了，推荐信天助学买猪肉买砖", "捐助一个 VPS 搭个好梯子，方便 V 友", "拿着呗", "可以代表你们学习小组给捐掉。", "捐了吧\r", "ps  人和人的差距 果然好大", "如果有另一个人有你那个身份，但又需要这么一笔钱呢？你这样做，是陷他于不义。\r", "拿着吧。", "投资自己啊\r", "想出国的可以考个 TOEFL", "直接捐开源项目啊，我上次就捐了 3000 。。。", " 子贡赎人与子路受牛？ 223"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>有没有办法快速扒皮，就是看到别人做了个前端的动画效果之类的，想借鉴学习（抄袭）一下\n有经验的同学讲一讲啊</p>\n</div></div>"], "reply": "9", "tittle": "有没有办法快速扒皮", "comment": ["扒皮这事儿波顿家经验丰富", "F12", "离线浏览", "刚想说扒皮可以去天涯、知乎", " 蛤蛤，服", "SnappySnippet 可以代替部门工作", "Mac ： Sitesucker ", "\r", "Win ： httrack      ", " SnappySnippet 是个好东西啊", "微信网站怎么扒，好多只能扒到 api 的数据，但是网页资源竟然抓不到"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h1>问题描述</h1>\n<p>如何在短时间内快速找到字符串经过 sha1 算法的前 16 位的碰撞</p>\n<p>最近的一个作业，写了一个 linux shell 。</p>\n<pre><code>#!/bin/sh\nfor((i=0;i&lt;1000000000;i++));\ndo\necho -n $i | sha1sum - | cut -c1-15 &gt;&gt; d0\ndone\n</code></pre>\n<p>做运算，可是速度太慢，要跑 3 天 3 夜，于是寻找资料：</p>\n<h1>工具</h1>\n<ul>\n<li>sha1_nearcoll_attack.zip 编译 boost 要很久很久 查找相近 sha1 碰撞工具</li>\n</ul>\n<p><a href=\"https://marc-stevens.nl/p/hashclash/downloads.php\" rel=\"nofollow\">https://marc-stevens.nl/p/hashclash/downloads.php</a></p>\n<ul>\n<li>Malicious SHA-1 sha1 的文件碰撞生成工具</li>\n</ul>\n<p><a href=\"https://malicioussha1.github.io/\" rel=\"nofollow\">https://malicioussha1.github.io/</a></p>\n<ul>\n<li>hashclash 的 linux 64 编译后工具</li>\n</ul>\n<p><a href=\"https://github.com/ohadcn/hashclash/tree/master/hashclash\" rel=\"nofollow\">https://github.com/ohadcn/hashclash/tree/master/hashclash</a></p>\n<h1>文章</h1>\n<ul>\n<li>58 步逼近 sha1 算法</li>\n</ul>\n<p><a href=\"https://cryptome.org/sha1-attacks.htm\" rel=\"nofollow\">https://cryptome.org/sha1-attacks.htm</a></p>\n<p><a href=\"http://blog.rexdf.org/2014/07/hash%E6%91%98%E8%A6%81%E7%AE%97%E6%B3%95%E7%9A%84%E6%94%BB%E5%87%BB/\" rel=\"nofollow\">http://blog.rexdf.org/2014/07/hash%E6%91%98%E8%A6%81%E7%AE%97%E6%B3%95%E7%9A%84%E6%94%BB%E5%87%BB/</a></p>\n<p>大家有什么好想法吗</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "如何在短时间内快速找到字符串经过 sha1 算法的前 16 位的碰撞", "comment": []},
{"content": ["<div class=\"topic_content\">楼主遇到过的:\r<br>LRU\r<br>ThreeSum\r<br>binarySearch\r<br>。。。\r<br>\r<br>你呢？</div>"], "reply": "41", "tittle": "面试的时候，你遇到过哪些算法？", "comment": ["还没面", "LRu/binary search/reverse list....", "搞一个开源社区收集这些资源，配上答案，诸位觉得如何？不管有没有商业价值， star 想必是不少的。", " leetcode 足矣, 如果是为了攒 star, 那是用 1024 爬虫吧", " 我楼上没说清楚，这个开源社区收集的是面试遇到过的题目，配上答案，并且可以根据投递数排序，看看那些题目是最热门的最容易考的，用户量大了甚至可以付费看前几名的题目或者买答案。", " 不就是 LeetCode 么？ LeetCode 还能提交代码呢。", "冒泡排序", "\r", "这的确是一个需求\r", "\r", "leetcode 还没有 c2c(copy to china)呢", " 牛客网现在 it 面试这块规模应该算最大了的吧", " 早有了， LintCode ，牛客网什么的有的是。", "冒泡排序，大数乘法。", " ", "  free...", " Leetcode 付费就是可以看热门考过的", "快排", "通过解释 A*成功装逼……", "归并排序，要求空间复杂度 O(1); \r", "杨氏矩阵，就是算法导论里的那题...", "..当时面试官们手指了指白板风轻云淡的来一句：推 Fourier ，当时那一大群草泥马跑过去的心情。。。想摔门走了。。虽然到最后只是讲思路...", "1 、双头队列的一串数字\r", "2 、用户决定，他自己先抽或让系统先抽\r", "3 、用户跟系统轮流抽一个，每次都可以从任意一头抽取一个数字\r", "4 、最终比总和大小论输赢\r", "\r", "需要结果：用户稳稳得输掉....", " 哈，博弈类 DP", " 如果不算平局的话，这个有解？", " 我毫无思绪答不上来，两头拿貌似控制不了啊", " 哈哈哈厉害", "这么多算法，实际项目用到的比牛逼用到都少。", "判断大小端", " 好奇如果真能实现了的话让两个程序对着玩会怎么样", "没遇到过一道 ...", "4 种常用基本排序，树前中后序遍历，字符串倒置，斐波那契， 8 皇后，除了基本的排序，大部分已考察你的递归能力。", "threesome?", "对了还有 AStar ，我做 GEF 图形化的东西，每次必问", "不要说很难的吧，光是 reverse array 都已经很多人做不来了，面试了好几个都写不出来，现在用 libaray 的人很多，基本功好的真的不多", "有一次面试遇到一个逗逼 问了我一个猴子吃香蕉的算法", " python 和 js 这种不是可以直接调用 reverse 吗？这样不算吗？", " 用 library 谁都会啦，那你知道 reverse 用了多少 memory 吗？这个问题看似很简单，但背后一大堆理论在后面。就好像一个最好的厨子，一定要会炒青菜一样。基本功才是解决问题的根本因素之一，去 stackoverflow copy and paste 是高效，但我们做技术的，总会将来面对一些问题是前无古人的，解决最难的问题的人，基本功肯定是好的。\r", "\r", "我面试了几个人，连 reverse 都自己写不来。。。:'(", " \r", "def convertArray(arr):\r", "\tn = len(arr)/2\r", "\tlength = len(arr)\r", "\t\r", "\tfor i in range(n):\r", "\t\tarr[i], arr[length - i -1] = arr[length - i - 1], arr[i]\r", "\r", "\treturn arr\r", "\r", "if __name__ == '__main__':\r", "\ta = convertArray([1,2,3,4,5])\r", "\tprint a\r", "是类似于这样吗？不过一般来说自己实现的东西要比原生的慢好多，比如同样的操作比 arr[::-1]慢了简直不要太多啊。", "  挺有意思，是先生成数据，用户看到数据后，可以决定先抽后抽，还是用户先定先后，再生成数据？", "  arr[i], arr[length - i -1] = arr[length - i - 1], arr[i] <-- 这句语法我喜欢！但你有没有编译之后的机器码呢？有机会看看 :D\r", "\r", "现实是 reverse 没人会自己写的 :P 但面试问太难的算法的话，大家都背了答案，所以我这是返璞归真的问题 :P\r", "\r", "其实，我还可以问 String.split, regular expression, parseInt...etc 太多大家天天在用的 functions 啦，然后叫候选人写一下，看看基本功好不好 (我承认我变态 :P)", " 没有差别吧，因为用户可以从两头取", "面试是考察对方解决问题的能力，而不是难道别人。先问问自己平时遇到的都是些问题？", ", 不难道别人，怎样看他解决问题的能力呢？", " 想要难倒别人还不容易？？？", " 有技术的难倒别人太难了，我面试题就想我整整两天。。。我的合伙人看到都哭了，哈哈"]},
{"content": ["<div class=\"topic_content\">2016 年 10 月 23 日，由网易云和 pmcaff 共同举办的易创课堂在北京中关村创业大街成功举行，众多产品大咖齐聚一堂，探讨自己在从业期间踩过的坑与实践经验。其中，网易视频云资深产品经理钱栩磊也参加了本次易创课堂的分享，在此次分享中，钱栩磊将多年的产品经验分享给众多感兴趣的朋友们，与大家共同交流与分享，并赢得在场观众的高度认可。那么，作为一位专业的产品经理，如何才能在职场中保持竞争力，真正做出一款好产品呢？\r<br>　　据悉，来网易视频云团队之前，钱栩磊曾做过 3 年电商平台，那时候正是电商最热的时期，在杭州已经有一部分创业公司在做垂直领域的电商平台。 2009 年，电商平台逐渐出现寡头现象： 2008 年天猫成立，京东在 2009 年月销售额已经达到 2-3 亿。那时候，凡客还在，在 2009 年的时候，凡客已经占据了整个服饰类的 28%左右的市场份额。就是在那个时间段，视频大战正式开始起步，既有优酷、土豆、搜狐、酷六大老牌视频网站，还有腾讯视频、爱奇艺、乐视视频等视频平台逐步崛起。 2009 年，钱栩磊选择踏入视频产品之路， 7 年的视频产品从业期间，他陆续做过教育局录播项目型产品、云视频会议 SaaS 产品以及现在的网易视频云 PaaS 产品，涵盖了视频分析及算法、视频直播、视频点播及视频硬件相关产品经验。\r<br>　　下面，小编为大家分享一下网易视频云资深产品经理钱栩磊在易创课堂上的演讲分享。以下为钱栩磊分享实录：\r<br>　　本次易床课堂与大家分享的的主题是： 2B 产品经理的养成。那么，我想通过这几年的工作经历对 2B 产品经理做一些分享和交流，从 2C 、 2B 产品的区别、 2B 产品经理具备的一些素质、在工作中如何开展以及未来的职业发展等方面讲述下自己的观点与看法，希望能在职场中帮助感兴趣的同学们。\r<br>　　首先我们看下什么是 2C 产品，通俗地讲 C 端产品它的直接用户是个人，主要解决个人使用需求。比如，想了解网络新闻咨询可以使用网易新闻客户端，享受高音质的音乐使用网易云音乐，学习世界名校的公开课使用网易公开课，学习职场技能可以使用网易云课堂以及找翻译我使用有道词典等等。所以 2C 的产品很注重人性，强调刚需、痛点和高频及体验。\r<br>　　?\r<br>　　那何为“刚需”？因为目标群体是个人群体，用户量庞大且分散，缺乏组织性，需求也比较模糊性，所以需求需要去挖掘。\r<br>　　?\r<br>　　何为“痛点”？ 2C 产品的更换成本非常低，用户的决策时间非常短，所以能否在极短的时间内抓住用户痛点非常关键。比如就我个人而言，在玩游戏方面就有一个痛点，玩游戏的目的是为了打发碎片时间，不会把玩游戏这个事情占用正常工作时间，所以选择游戏的时候目的非常明确，耗时的游戏肯定不会看，哪怕游戏再好玩，那么这就是痛点。其实在现实生活中，很大的一个群体会有相同的痛点，比如享受高品质的音乐肯定是绝大多数喜欢听歌的人的痛点，再比如音乐是一种情感的东西，那么在抒发、交流情感的时候就需要一个交流社区，所以网易云音乐做了评论功能，一下子火了，成为国内最大的音乐社区 APP 。\r<br>　　?\r<br>　　何为“高频”？指的是用户的黏性，而付费率往往跟用户黏性、使用频率相关。如果“体验”很高，在满足刚需、痛点的前提下用户使用率自然会起正向作用。\r<br>　　?\r<br>　　说到 2C 产品经理，我们称作为“用户产品经理”，他的核心价值是“发现、挖掘用户需求，定义用户价值，并推动项目组达成这一目标，是一个从无到有的过程”，他经常要做的事情如跟用户扯情怀、扣细节、拉会员、事件营销吸睛、变现等等。除了提炼用户真实需求、数据分析反馈产品、乐于分享、拥有较高的交互设计和用户体验能力之外，还会一些运营的技能帮助产品快速成长。对于 2C 产品经理来说，他的考核指标一般都是 DAU 、 MAU 、 ARPU 、用户增长率、营收指标等,指标量化都非常明显。但是他们却很容易进入一个误区，比如在某些交流平台，产品经理在交互设计、用户体验上投入过多的精力，但却忽视了产品本身的方向和整体把控力。\r<br>　　?\r<br>　　说完 2C 产品经理，我们再来看 2B 产品经理究竟如何呢？\r<br>　　?\r<br>　　何为 2B 产品？通俗地讲 2B 产品背后用户是企业、组织等团体，比如说网易企业邮箱是为了解决企业内部沟通、汇报、通知等办公需求，有道云协作是为了解决企业或团队的资料管理和即时通讯等需求，提高了企业的协作效率，企业 OA 、 ERP 、 CRM 等系统本质都是为了改善企业业务流程以提高企业核心竞争力。所以 2B 产品更偏向业务，强调功能、流程和效率。\r<br>　　?\r<br>　　为何注重“功能”？一个功能多、大而全的产品往往代表很牛逼，例如网易企业邮箱除了通用的功能之外还有语音输入、邮箱触点、即时通等很多功能，属于业内顶尖的企业邮箱产品。而用户不会因为功能的增多导致学习成本提高，相反会觉得掌握了这些技能和知识实现了自身价值的增值。\r<br>　　?\r<br>　　为何注重“流程”？优秀的 2B 产品经理必须能够贴合组织用户的业务流程才能正常运行，而不同企业的流程又是不同的，所以对 2B 产品的流程设计是一个非常大的挑战，同时也是至关重要的。\r<br>　　为何注重“效率”？ 2B 产品经常会涉及海量数据，所以在 2B 产品中，效率要远远比用户体验重要。举个例子：用户想上传 1000 个视频文件，那么批量上传等高效率的功能体验远比优化上传界面的用户体验重要得多。另外，我们经常看到商场里面的收银系统，很多是基于 DOS 平台开发，这些系统非常老旧、而且体验比较差，但是由于使用时间长、效率非常高，依然保持着旺盛的生命力。\r<br>　　下面，我们再来看下通常的产品分类， 2C 、 2B 的产品其实都可以分为技术驱动型、业务驱动型及产品驱动型这几种。\r<br>　　?\r<br>　　技术驱动型，技术为产品的驱动因素，由技术推动业务发展，可以不经过市场调研、产品设计决策阶段等，直接面向创新者和早期采用者，快速的交付产品如广告系统、搜索算法系统等产品，比如淘宝直通车、钻石展位等广告算法系统。\r<br>　　?\r<br>　　业务驱动型，也叫市场驱动型，用户很明确知道他需要什么，以及市场基本已经出现很多类似厂商参与竞争。它注重短期、低需求风险，与竞争对手差异性不大，价格和服务是主要的市场竞争工具在国内非常普遍。\r<br>　　?\r<br>　　产品驱动型，需要根据公司战略整合技术和业务能力，并做好整体规划、完成需求系统化，然后再设计、包装并提供对外产品，配套运维及售后服务等，推动研发团队做好管理。这类产品对产品经理的考验最大，而前两类的产品经理相对来说容易很多。\r<br>　　 2B 产品经理，我们也叫“商业产品经理”、“行业经理”、“品牌经理”等，那对于产品驱动型的产品经理而言，需要哪些能力和素质及如何考核产品经理呢？\r<br>　　首先，核心能力就是产品规划、需求梳理、业务理解和整个以及项目推动能力。在考核指标方面，主要包括非量化指标，重在系统建设、效率提升、工作能力、营收指标等。他们与 2C 产品经理较大区别： 2B 产品经理目标比较难一致，需要对团队灌输和推动。同时， 2B 产品经理对业务的理解和行业的经历要求更高，需要更加缜密的逻辑思维能力甚至理性过头\r<br>　　?\r<br>　　那么，明确了能力目标后， 2B 产品经理应该如何开展实际工作呢？就产品整体规划来说，我暂且把它拆分为产品定位、目标愿景和路标规划。\r<br>　　?\r<br>　　什么是产品定位：产品定位是指企业对应什么样的产品去满足目标消费者或目标消费市场的需求，这是工作中非常重要的一环，直接关系到产品最终能否成功。举个例子：一家创业公司看到视频云很有前景， BAT 也都在做，于是老板决定开始做，然后就开始招兵买马干起来了，结果发现理想很丰满，现实是很骨感，由于各种原因，最终不得不放弃。因为他在工作的开始就错了，没有做对产品正确的定位，那如何做产品定位？首先我们需要做背景分析和现状调研，深刻了解公司或部门背景、现有资源、竞争层次；然后通过市场分析： SWOT 分析方法，分析业界标准，市场发展趋势，新技术的发展趋势和差异化等。最后还有环境分析： PEST 分析，从政治、经济、社会、技术宏观分析，识别关键机会和威胁。\r<br>　　记得曾经在做教育录播系统产品的时候，由于产品业内刚起步，教育部门没有对应的政策法规来制定行业标准，然后我们找了业内几家大的企业联合邀请相关部门发起了对该行业的标准规格书，之后的产品功能、设计基本都根据这个标准来实现，因为标准就是基于它而来。又比如，今年年初，国家工信部要求所有直播平台必须把直播打上水印，并把直播过程录制、存储下来，存储时间必须不小于 15 天。所以，在网易视频云的功能特性中，我们及时调整并上线了实时识别功能。\r<br>　　?\r<br>　　明确了产品定位，接下来需要树立目标愿景。\r<br>　　首先我们要明确产品核心价值，只有知道了最终想要的是什么，才能明白如何一步步走向这个愿景，最终的愿景，是所有产出的价值所在。其次是树立产品愿景，建立一个 3~5 年的中长期目标，通常可表述为：帮助了 [什么人群] 通过 [什么方式] 做成了 [什么事情] ，自己成为了 [什么] 。可能会有很多人觉得愿景都是虚的。但是我们发现，大部分成功的企业都会有很明确的目标愿景，比如阿里早期的愿景是“让天下没有难做的生意”，在过程中坚持不懈地围绕这个愿景一步步实现了价值。腾讯的愿景是“通过互联网服务提升人类生活品质”，百度的愿景“让人们最平等便捷地获取信息，找到所求”。当然，好的愿景不是一味的画饼，而是能够将“爆发的价值”与“可触及的执行”相融合。\r<br>　　?\r<br>　　在做完产品定位、树立愿景后，就需要对实际的工作目标做拆分，也就是定一些小目标。首先拆分产品路线：统筹考量研发&amp;技术资源和市场运营计划做阶段规划，定义阶段里程碑，产品研发必须敏捷开发、短周期迭代，应对变化和调整。然后进行财务规划：产品战略、商业模式、盈利模式分析和规划，以及资源投入计划也需要都需要定义里程碑。做好各个阶段的产品规划之后，我们就可以具体的执行起来了。\r<br>　　?\r<br>　　最后，我再分享下 2B 产品经理的职业发展问题。通过多年的从业经历，我发现做 2B 产品经理工作时间越久，行业标签也会越明显，但实际上 2B 产品经理的工作范围和职能非常广，感觉就像是个万事通，什么事情都需要懂，所以我也归纳了以下几个我认为 2B 产品经理可以参考的一些职业发展方向，比如需求分析师、业务架构师、系统咨询分析师，也可以选择做部门 leader 或者企业 CEO 。总体看来，产品经理的发展前景是非常广泛的，所以大家要对自己充满信心，成为一名优秀的产品经理。</div>"], "reply": "6", "tittle": "网易视频云干货分享： 2B 产品经理如何养成", "comment": ["问号间隔看得尴尬症犯了\r", "？", "这个视频估计时间长度不会超过 10 分钟", "转载不注明出处。。。", "搞一个 2B 产品的交流群把", "2B 产品。。。原谅我理解错了(捂脸", "同楼上。。。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>一、直播预告</p>\n<p>主题：构建一站式视频云点播加速平台实践</p>\n<p>时间： 2016 年 10 月 26 日 20 点</p>\n<p>二、讲师介绍</p>\n<p>陈志远：网易视频云资深开发工程师。来自网易杭州研究院视频云技术团队，主要负责视频云点播项目。加入网易之前从事过 CDN 研发工作。在 CDN 研发、 P2P 技术、视频点播和直播服务开发方面有丰富经验。</p>\n<p>三、直播摘要</p>\n<p>近两年视频云服务已经融入人们的生活，观众在流畅地观看着视频画面的同时，背后其实包含了大量的技术难题。视频点播作为视频云服务之一，其本身在提供视频存储、播放服务的基础上，也为直播服务的回放、反垃圾提供技术支撑。</p>\n<p>本次分享面向视频点播的开发者们，从视频上传开始，对于视频转码、视频分发、视频播放、视频安全可控整个点播服务过程中的技术难点和优化实施进行详细讲解，从而快速构建高可用的一站式视频云点播加速平台。</p>\n<p>[IMG]<a href=\"http://image18.poco.cn/mypoco/myphoto/20161026/15/56516772201610261516303567053599506_000.jpg\" rel=\"nofollow\">http://image18.poco.cn/mypoco/myphoto/20161026/15/56516772201610261516303567053599506_000.jpg</a>[/IMG]</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "[今晚八点云课堂直播分享] 构建一站式视频云点播加速平台实践", "comment": []},
{"content": ["<div class=\"topic_content\">一、直播预告\r<br>　　主题：构建一站式视频云点播加速平台实践\r<br>　　时间： 2016 年 10 月 26 日 20 点\r<br>　　二、讲师介绍\r<br>　　陈志远：网易视频云资深开发工程师。来自网易杭州研究院视频云技术团队，主要负责视频云点播项目。加入网易之前从事过 CDN 研发工作。在 CDN 研发、 P2P 技术、视频点播和直播服务开发方面有丰富经验。\r<br>　　三、直播摘要\r<br>　　近两年视频云服务已经融入人们的生活，观众在流畅地观看着视频画面的同时，背后其实包含了大量的技术难题。视频点播作为视频云服务之一，其本身在提供视频存储、播放服务的基础上，也为直播服务的回放、反垃圾提供技术支撑。\r<br>　　本次分享面向视频点播的开发者们，从视频上传开始，对于视频转码、视频分发、视频播放、视频安全可控整个点播服务过程中的技术难点和优化实施进行详细讲解，从而快速构建高可用的一站式视频云点播加速平台。\r<br>　　[img]<img src=\"http://ww1.sinaimg.cn/mw690/7c1f0b7fjw1f95qd8ne8fj20hq0vj401.jpg\" class=\"embedded_image\" border=\"0\"> [/img]</div>"], "reply": "目前尚无回", "tittle": "[今晚八点云课堂直播分享] 构建一站式视频云点播加速平台实践", "comment": []},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"http://invite.jeejoy.com/pc.html\" rel=\"nofollow\">http://invite.jeejoy.com/pc.html</a>\r<br>这个页面特别炫酷\r<br>我审查了下用的 canvas\r<br>能不能快速实现这样一个页面</div>"], "reply": "104", "tittle": "阿里双 11 这个宣传页做的简直炫酷", "comment": ["只有我看完一遍不小心再点的时候 才知道中间一晃而过的字其实可以点吗……\r", "\r", "感觉完全没有引导用户点的意思啊", " 确实是阿里外包的，原作者： ", " 我这个站没做过 SEO 啊，你们从哪点进来的。。。", " ", " 之前的一个帖子"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>在这个全民直播时代，用户对视觉信息表达越来越重视，也越来越强调提高视频主观质量的需求，今天，我们就带着这些用户问题，讨论下视频压缩编码这项技术</p>\n<p>1. 视频为什么要压缩？</p>\n<p>视频即连续的图像，数字化后的图像或视频信息是海量的，举一个具体的例子，摄像头拍摄的一幅静态图像空间像素点（画面大小，也即分辨率） 640*480 个，每个像素点由 RGB 三元素组成，每个元素由 8bit 二进制位表达，则一副数字图像的大小为：</p>\n<p>视频是由很多幅图像组成，人眼感知视频播放流畅一般为 24fps （ frame persecond ，简称 fps ），根据视觉暂留原理，要达到最基本的视频播放效果大约也需要 10fps 的速度，我们这里以 24fps 代表一般情况，电影胶卷都是以这个帧率在拍摄，也就是视频的 1 秒由 24 幅静态图像组成，则一秒产生的视频信号量为：</p>\n<p>原始视频的大小由此可见，一秒耗尽 172m ，如果我们是在 4g 下直播，不到 6 秒就消耗 1g 流量，那直播不超过几分钟，流量包就爆啦，</p>\n<p>2. 视频为什么能压缩？</p>\n<p>压缩编码的前提是信息存在冗余，去掉冗余的信息，达到压缩的目的。那么视频信息有冗余么？当然有，视频信息作为普通的计算机信息数据一种，首先就存在着统计冗余，譬如我们发送一个视频文件给对方，我们会先尝试将其像其它普通文本文件一样用 zip 或 rar 压缩一下，减小一下空间和传输带宽消耗。其次，视频作为图像，存在空间冗余，一副数字化的图像各个像素点的值是缓慢变化的，像素值与其周围几个像素点的值具有很大的相关性，譬如一副图像的背景是一大片的红色，这很多一样的像素值就是空间上的冗余。再次，视频作为运动着的图像，存在时间冗余，即用视频采集设备拍摄的一幅幅图像之间是缓慢变化的，连续两个或多个图像之间是存在相关性的。最后，视频作为人眼视觉感知，存在视觉冗余，人眼对视频的激烈变化的部分往往不敏感，就如人耳对 20-20000 分贝以外的声音不明感一样，正是这种人眼视觉冗余，提供了我们视频有损压缩的前提条件。</p>\n<p>3. 视频如何压缩？</p>\n<p>压缩方法从大的方面分为 有损压缩，无损压缩，譬如我们用 zip 给任意文件打包压缩，压缩包能够通过解 zip 恢复成原来的文件，毫发无伤，所有数据信息没有任何丢失，这种压缩方式就是无损压缩，无损压缩有其卓越的优点：保真性，在一些卫星传图，医学 X 光图像视频等领域显得尤为重要，然后，它也有缺点，那就是压缩率不高，大概在 2 到 5 倍率 之间。</p>\n<p>另一种是 有损压缩，譬如压缩图像或者视频时，会根据人眼视觉感知特性，对那些人眼不敏感的数据不传输，牺牲一部分不重要的信息，来提高压缩率，当然压缩包经过解压也无法恢复那部分数据了，信息就丢失了，压缩解压后的图和原始的图是有差异的，这也就解释了 \"主播看到自己的预览视频这么美，这么清晰，为什么观众看到的却有点模糊呢？\"</p>\n<p>视频信息的压缩混合了有损以及无损压缩编码方法，一般我们直播应用中的视频压缩都是采用有损压缩方式，来提高压缩率，降低存储以及传输带宽,一般标准视频编码的压缩率能达到几十倍甚至几百倍</p>\n<p>4. 视频压缩编码的主流技术 H264 编码介绍</p>\n<p>从 上世纪八十年代的推出第一代视频编码标准 H120 开始到现在的下一代视频编码 H265 ，视频编码技术的发展一直吸引着工业界以及学术界的共同关注。其中国际组织：联合视频组(JVT)不遗余力的致力于视频编码标准的发展，不断提高视频压缩效率。</p>\n<p>从目前市场运用上看，无论是互联网应用，还是硬件芯片集成，最主流的视频编码技术依然是 H264,下面结合压缩理论简单介绍下 H264 所采用的编码技术</p>\n<p>1) 去除数据统计冗余： H264 采用两种熵编码方式: CAVLC （ 基于上下文的可变字长编码）和 CABAC （基于上下文的二进制算数编码）， CAVLC 实现相对简单，编码效率高，但压缩率要比 CABAC 低 15%左右， CABAC 复杂度高，可以分场景采用不同的熵编码，让视频压缩后的平均码长接近信源熵值。</p>\n<p>2) 去除时间 shang 冗余： H264 采用帧间预测编码，当前像素块的编码参考之前已经编码重建帧的相应像素块，当前图像与前面的参考图像很相似（譬如视频画面相对静止）这时候帧间预测残差会很小，码率很低，相反，画面改变越大越快，帧间预测残差值就越大，压缩需要的 bit 数九越多，这也就解释了，当设定的最大允许码率一定的情况下“为什么主播的手机晃动起来，画面就有点模糊，不动就好清晰好清晰呢”。</p>\n<p>3) 去除空间冗余： H264 采用帧内预测编码方式，当前像素编码参考之前已经编码重建的像素值进行，如果像素变化缓慢，那么预测残差将会很小，甚至为 0 ，码率大大降低，这也就是为什么 我们传输黑色视频（手机摄像头被遮住），或者其他纯色视频，码率很低，设置的最大码率根本用不掉的原因。除此以外， H264 采用变换编码的方式，将残差从空间域利用 DCT(离散余弦变换)变换到频率域，结合差异量化编码方式，更进一步的去除空间冗余</p>\n<p>4) 去除人眼视觉冗余： H264 编码器的输入图像或视频的色彩空间采样格式一般为 YUV420,不同于 RGB 采样， YUV420 利用人眼视觉对像素亮度分量更敏感，而色度分量没那么敏感，进一步将图像或视频的色度分量做 2:1 的采样， 4 个亮度分量， 2 个色度分量，另外， H264 采用量化编码的有损编码方式，也正是利用了人眼视觉对高频细节部分不敏感的理论基础，将残差系数低频部分采用更细的量化参数，而高频部分则粗化量化，一般的视频压缩失真也正是这个阶段产生。</p>\n<p>当我们对视频压缩技术有个大概的了解之后，我们就可以回答：“如何提高观众端的视频清晰度呢？”，当给定的编码器压缩率达到极限时，我们唯一能做的就是提高视频编码码率了。</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "网易视频云：视频压缩编码浅谈", "comment": []},
{"content": ["<div class=\"topic_content\">在这个全民直播时代，用户对视觉信息表达越来越重视，也越来越强调提高视频主观质量的需求，今天，我们就带着这些用户问题，讨论下视频压缩编码这项技术\r<br>　　 1. 视频为什么要压缩？\r<br>　　视频即连续的图像，数字化后的图像或视频信息是海量的，举一个具体的例子，摄像头拍摄的一幅静态图像空间像素点（画面大小，也即分辨率） 640*480 个，每个像素点由 RGB 三元素组成，每个元素由 8bit 二进制位表达，则一副数字图像的大小为：\r<br>　　 640*480*3*8 = 7372800 bits\r<br>　　视频是由很多幅图像组成，人眼感知视频播放流畅一般为 24fps （ frame persecond ，简称 fps ），根据视觉暂留原理，要达到最基本的视频播放效果大约也需要 10fps 的速度，我们这里以 24fps 代表一般情况，电影胶卷都是以这个帧率在拍摄，也就是视频的 1 秒由 24 幅静态图像组成，则一秒产生的视频信号量为：\r<br>　　\r<br>　　 640*480*3*8*24 = ?172 mbps,\r<br>　　原始视频的大小由此可见，一秒耗尽 172m ，如果我们是在 4g 下直播，不到 6 秒就消耗 1g 流量，那直播不超过几分钟，流量包就爆啦，\r<br>　　 2. 视频为什么能压缩？\r<br>　　压缩编码的前提是信息存在冗余，去掉冗余的信息，达到压缩的目的。那么视频信息有冗余么？当然有，视频信息作为普通的计算机信息数据一种，首先就存在着统计冗余，譬如我们发送一个视频文件给对方，我们会先尝试将其像其它普通文本文件一样用 zip 或 rar 压缩一下，减小一下空间和传输带宽消耗。其次，视频作为图像，存在空间冗余，一副数字化的图像各个像素点的值是缓慢变化的，像素值与其周围几个像素点的值具有很大的相关性，譬如一副图像的背景是一大片的红色，这很多一样的像素值就是空间上的冗余。再次，视频作为运动着的图像，存在时间冗余，即用视频采集设备拍摄的一幅幅图像之间是缓慢变化的，连续两个或多个图像之间是存在相关性的。最后，视频作为人眼视觉感知，存在视觉冗余，人眼对视频的激烈变化的部分往往不敏感，就如人耳对 20-20000 分贝以外的声音不明感一样，正是这种人眼视觉冗余，提供了我们视频有损压缩的前提条件。\r<br>　　 3. 视频如何压缩？\r<br>　　压缩方法从大的方面分为 有损压缩，无损压缩，譬如我们用 zip 给任意文件打包压缩，压缩包能够通过解 zip 恢复成原来的文件，毫发无伤，所有数据信息没有任何丢失，这种压缩方式就是无损压缩，无损压缩有其卓越的优点：保真性，在一些卫星传图，医学 X 光图像视频等领域显得尤为重要，然后，它也有缺点，那就是压缩率不高，大概在 2 到 5 倍率 之间。\r<br>　　另一种是 有损压缩，譬如压缩图像或者视频时，会根据人眼视觉感知特性，对那些人眼不敏感的数据不传输，牺牲一部分不重要的信息，来提高压缩率，当然压缩包经过解压也无法恢复那部分数据了，信息就丢失了，压缩解压后的图和原始的图是有差异的，这也就解释了 \"主播看到自己的预览视频这么美，这么清晰，为什么观众看到的却有点模糊呢？\"?\r<br>　　视频信息的压缩混合了有损以及无损压缩编码方法，一般我们直播应用中的视频压缩都是采用有损压缩方式，来提高压缩率，降低存储以及传输带宽,一般标准视频编码的压缩率能达到几十倍甚至几百倍\r<br>　　 4. 视频压缩编码的主流技术 H264 编码介绍\r<br>　　从 上世纪八十年代的推出第一代视频编码标准 H120 开始到现在的下一代视频编码 H265 ，视频编码技术的发展一直吸引着工业界以及学术界的共同关注。其中国际组织：联合视频组(JVT)不遗余力的致力于视频编码标准的发展，不断提高视频压缩效率。\r<br>　　从目前市场运用上看，无论是互联网应用，还是硬件芯片集成，最主流的视频编码技术依然是 H264,下面结合压缩理论简单介绍下 H264 所采用的编码技术\r<br>　　 1) 去除数据统计冗余： H264 采用两种熵编码方式: CAVLC （ 基于上下文的可变字长编码）和 CABAC （基于上下文的二进制算数编码）， CAVLC 实现相对简单，编码效率高，但压缩率要比 CABAC 低 15%左右， CABAC 复杂度高，可以分场景采用不同的熵编码，让视频压缩后的平均码长接近信源熵值。\r<br>　　\r<br>　　 2) 去除时间 shang 冗余： H264 采用帧间预测编码，当前像素块的编码参考之前已经编码重建帧的相应像素块，当前图像与前面的参考图像很相似（譬如视频画面相对静止）这时候帧间预测残差会很小，码率很低，相反，画面改变越大越快，帧间预测残差值就越大，压缩需要的 bit 数九越多，这也就解释了，当设定的最大允许码率一定的情况下“为什么主播的手机晃动起来，画面就有点模糊，不动就好清晰好清晰呢”。\r<br>　　 3) 去除空间冗余： H264 采用帧内预测编码方式，当前像素编码参考之前已经编码重建的像素值进行，如果像素变化缓慢，那么预测残差将会很小，甚至为 0 ，码率大大降低，这也就是为什么 我们传输黑色视频（手机摄像头被遮住），或者其他纯色视频，码率很低，设置的最大码率根本用不掉的原因。除此以外， H264 采用变换编码的方式，将残差从空间域利用 DCT(离散余弦变换)变换到频率域，结合差异量化编码方式，更进一步的去除空间冗余\r<br>　　 4) 去除人眼视觉冗余： H264 编码器的输入图像或视频的色彩空间采样格式一般为 YUV420,不同于 RGB 采样， YUV420 利用人眼视觉对像素亮度分量更敏感，而色度分量没那么敏感，进一步将图像或视频的色度分量做 2:1 的采样， 4 个亮度分量， 2 个色度分量，另外， H264 采用量化编码的有损编码方式，也正是利用了人眼视觉对高频细节部分不敏感的理论基础，将残差系数低频部分采用更细的量化参数，而高频部分则粗化量化，一般的视频压缩失真也正是这个阶段产生。\r<br>　　当我们对视频压缩技术有个大概的了解之后，我们就可以回答：“如何提高观众端的视频清晰度呢？”，当给定的编码器压缩率达到极限时，我们唯一能做的就是提高视频编码码率了。</div>"], "reply": "1", "tittle": "网易视频云：视频压缩编码 浅谈", "comment": ["说得太浅，文章里说的 90%放到 H261 、 MPEG-2 里也是一样的。应该讲讲 H264 独特的方面，比如自适应分块大小、后过滤器那些"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>经常自言自语，调 bug 或者想算法的时候。工作外也这样，在宿舍经常就一些事进行思考然后自言自语。回忆一些以前的尴尬事，就会突然尴尬到在床上乱翻滚，啥毛病这是？要是我能开路人视角肯定会觉得自己是疯子</p>\n</div></div>"], "reply": "134", "tittle": "经常自言自语，这是什么毛病？", "comment": ["我在工作压力大，满爱了脑子都在思考情况，就会自言自语", "程序员天赋技能", "一样一样的.....我亲爱的基友.....", "w t... \r", "你确定说的不是我？ 😂", "有一种面向小黄鸭编程，就是边写代码向一只小黄鸭讲解现在在做的功能与自己的思路。\r", "\r", "对于我而言，自言自语只是有着一只透明的小黄鸭而已。", "太久没和人说话了。", "大脑演算中，需要说出来当草稿纸", "有这种行为的人可能是单身很久了（我就是）", "正常的人体自我调节功能，不吐不快，空气亦是良友。", "室友经常这样，表现为絮絮叨叨与自我无目的交谈，非常恼人，不堪其扰", "缓解压力吧。", "看回复终于觉得自己是正常人了…", "经常这样。。。", "卧槽，看得发现是我不正常了。。。\r", "\r", "这种现象貌似不频繁吧。。", " 这么一说突然想来宿舍的一个孩子，带着耳机听二次元歌声音放的超级大，不带耳机就能听见那种，他敲着代码，一会儿自言自语，一会儿跟着哼音乐。。\r", "根本无法忍受。。而他自己毫不知情。。。这种的话就太扰民了。。", "我也这样 因为没人和我说心里话", " 自从买了滑稽抱枕我就面向滑稽编程了", "正常呀，我觉得没什么问题。很多人都这样吧。", "很适合当主播啊，直播写代码很需要这种能力。", "哈哈，原来不止我一个人这样啊。。。我同事好多都把我当神经病，看来我还是正常人一个。", "注意别咬到舌头，卧槽，紧张的时候有时候是会自言自语，甚至咬牙切齿的。不过，好好休息吧。", "中枪。。", "写程序，调 bug,说话没问题的，，", "小黄鸭调试法", "小黄鸭调试法+1", "工作中的自言自语与工作外的自言自语性质是不同的。调试 bug 以及思考算法时有一些想法随语言流出是可以理解的。但是如果工作外会因为以前的尴尬事而不淡定，在行动、语言上有不自觉的流露的话，一般都是工作生活压力大导致的焦虑，还有就是一般就是单身没人倾诉，总而言之还是压力没有疏导。\r", "解决方法：\r", "1 、首先想办法把造成你压力的问题解决\r", "2 、多参加社交活动，这样使自己的情绪可以得到舒缓\r", "3 、多运动，运动也是比较好的解压方式\r", "\r", "其实仔细思考一下，你应该能够发现使你焦虑的问题所在，能解决的尽早解决，不能解决的要让自己放开，不要给自己太大压力。", "我一直以为，自言自语是少数人的事，现在突然找到家了", "一个人呆着的时候，我也这样！", "原来我不是一个人 \r", "开心😄", "这个叫 Think loud ，在一定条件下可以提升工作效率", "很正常  因为边上没几个可以说话的  就经常对自己说了", "我也是 压力太大", "别怕 \r", "比起自言自语的时候满嘴的 bullsh*t ,f**king stupid ,a**hole ,crap ,damn fool 这样的\r", "你   还不算严重", "我哥哥也有类似状况 他从事固定收益类产品的管理"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>记得前两天看阿里云还是 153 元，现在是 93 元</p>\n<p>默默降价了？</p>\n<p>配置选单里默认有 40G 存储，但是订单里存储一项是空：\"-\"，不知道是不是套路</p>\n<p>不过看见了一个 Aliyun Linux ，什么鬼，版本竟然是 15.1 ，版本号都快赶上 ubuntu 了 hhhhhh</p>\n<p>以前用过阿里云还蛮好的，记得那是 ECS 最低价还是 46 元，一年多工夫价格翻番了，当 ECS 卖 67 元的时候还考虑过买个平时玩玩，前两天看价格 153 去求吧</p>\n<p>还是买个 BCC 用吧，对 KVM 有莫名的好感</p>\n<p>无论我是否愿意重新回到阿里云，反正不稀罕他们提供无偿的服务支持，我尽力在 BCC 上完成系统架构高可用性优化。 以前使用阿里云的遗留问题，我想我会将妥善处理。</p>\n</div></div>"], "reply": "3", "tittle": "百度云 BCC+EIP 最低配比阿里云 ECS 便宜 25 元", "comment": ["百度 BCC 稳定性不错,但是性能没有和阿里云直接对比过.\r", "我主要使用 BAE+BOS", " 从 IT 之家事件来说，百度现在目前客户量少，资源够用，等客户量起来了，如果还不超售，是这个价格他肯定亏，一分钱一分货。没什么的。只要百度不保证超售缩水我就觉得他比阿里好。等着看了。", " it 之家公告说的是回归物理平台，应该买的是 专属服务器 DCC ，就是独立服务器"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这是一篇推广文章，但可能能为你带来一些收入，以及一些产品层面的启发。</p>\n<p>下个月 11 日-13 日，有可能学院将联合今日资本、极客公园、 V2EX 、小道消息、火速移动在举办一场有意思的小程序黑客马拉松，邀请你与身边的伙伴组队参与。</p>\n<p>这场编程马拉松的目的不是炫技，而是快速探讨新的商业模式和产品形态。</p>\n<h2>缘由</h2>\n<p>从微信小程序开始内测，就有朋友建议我，他说，「阿禅，你是业内第一个高呼『别开发 app 了』的人，作为最关注和最懂微信生态的人之一，有可能学院应该举办一系列小程序黑客马拉松」。</p>\n<p>我跟他说，我们必须先自己验证了小程序是可以快速开发的，才能去举办比赛，否则，那是媒体抢眼球的做法。</p>\n<p>于是，我们在十一国庆假期期间，在 V2EX 招募了 8 个开发工程师 ( <a href=\"https://www.v2ex.com/t/308005\" rel=\"nofollow\">https://www.v2ex.com/t/308005</a> )，花了 7 天时间，做了一个功能非常复杂的小程序。</p>\n<p>然后我又想，光做一个小程序出来，其实价值并不大，就好像你能在 App Store 里搜索到一大堆手电筒 app ，但你没听说过哪一个能拿到投资 — 当然，他们本身可能也没想拿投资。不限定领域、天马行空的黑客马拉松是纯技术的比拼，但技术如果不能与商业相结合，它的作用会被大大削弱。</p>\n<p>对我来说，我认为小程序是微信生态的有机补充，它完善了整个生态，这意味着，小程序会带来新的商业模式和产品形态，这些产品形态可能和原有的产品是不完全一样的，这既带来了挑战，也带来了大量机会。这也让我们相信，未来「微信开发将会是一个独立岗位」。</p>\n<p>但很多人并未认同这一点，就好像 App Store 在 8 年前刚推出时，没多少人觉得它会震撼全世界。可幸的是，有前瞻性的人总是不缺少的，所以，我们联合了：</p>\n<ul>\n<li>今日资本</li>\n<li>极客公园</li>\n<li>V2EX</li>\n<li>小道消息</li>\n<li>火速移动</li>\n</ul>\n<p>一起举办：<strong>蜥蜴马拉松，用 2 天开发一个具有商业价值的小程序。</strong></p>\n<h2>比赛流程</h2>\n<ul>\n<li>10 月 25 日：开放报名</li>\n<li>11 月 6 日：截止报名</li>\n<li>11 月 7 日：筛选、确认团队</li>\n<li>11 月 11 日晚上 - 11 月 13 日中午：开发</li>\n<li>11 月 13 日下午：评审、颁奖</li>\n<li>地点：北京市，有可能学院（高德地图可以搜索到，百度不能）</li>\n</ul>\n<h2>限定领域</h2>\n<p>为了与商业价值结合更加紧密，本次马拉松会有开发领域限定，所有参赛队伍必须在限定领域里选择其中一个确定产品方向进行开发。经过一段时间调研，我们确定了两个目前 VC 投资的热点方向。主办方会在报名截止后，通知入选团队，并告知参赛者详细信息。</p>\n<h2>奖励</h2>\n<p>参赛团队 13 日下午需要轮流进行 5-10 分钟路演，评委会进行提问，最终选出两名优胜团队，并给予奖励：</p>\n<ul>\n<li>第一名：人民币 3 万元</li>\n<li>第二名：人民币 1 万元</li>\n</ul>\n<p>所有参赛团队均会得到一份小礼包。</p>\n<p>优胜的团队将会得到极客公园等媒体曝光，也有机会与顶尖的投资机构今日资本商谈合作的可能性。</p>\n<h2>参赛方法</h2>\n<p>点击这个链接： <a href=\"http://form.mikecrm.com/bwdFZH\" rel=\"nofollow\">http://form.mikecrm.com/bwdFZH</a> ，即可进行报名，报名截至时间为 11 月 6 日，主办方会在报名截止后通知入选的参赛者，并告知参赛者需要提前做的准备工作。</p>\n<p>每个团队至少包含一名前端工程师和一名后端工程师，团队人数在 4 人以内。</p>\n</div></div>"], "reply": "12", "tittle": "2 天开发一个有商业价值的小程序可好？", "comment": ["奖品是什么", " 不好意思，刚才没编辑完就发出去了。", " 楼主已经编辑好了。", "手动支持下", "开始我还是挺支持你的，后面才发现你不过就是你自己所说的\"抢眼球的做法\"", " 嗯，也稍微有类似的感觉。\r", "\r", "不过楼主有个比其他人好很多的地方，能拿出真金白银来抢眼球，这个段位就很高了。如果评选的时候没有暗箱操作的话，还是赞一个。", "问题的关键在于怎么知道别人是用两天时间开发的？", "好呀。", "支持", "这些马拉松真的是马拉松吗？\r", "平时就设计好了，更有甚者写好了代码，又不检查机器\r", "正真的比赛者，可能只是白陪别人熬夜吧", "我是参加过广州爱范儿举办的两届微信小程序黑客马拉松的一枚开发者，我说几个问题，给举办方也给想参赛的人看看\r", "\r", " 如其他楼提到的，其实很多来参赛的都不是临时组队的，都是事先呼朋唤友，甚至还有创业公司团队直接过来参赛的，尤其是创业团队，可能 H5 已经做出来了，移植微信小程序不要太简单，而像我这种苦逼的一个人来参赛的，可能遇到坑比队友全程当 PM 不干活，后台又不需要因为展示大部分用的都是写死的数据，因此我负责了几乎全部的代码，可以说 24 个小时累的吐血，还比不上那些轻松移植下代码的团队的产品成熟，各种微信官方的兼容问题更是恶心死我。\r", "总之会有些不公平成分，现场组队的光讨论方向就可以花整个下午，然后作为前端特别苦逼调样式。\r", "\r", "总之其实我的体验不是很好，作为一枚学生对这种比赛留下了阴影，希望这个举办方不要有这些问题。\r", "\r", "顺便，我第二次参赛最终还是一个人 carry 成功获奖，不容易啊。", "不看好小程序。", "另外感觉张小龙被神话的过度了，赶超乔布斯。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>看到文章说利用百度地图 API 进行 IP 地址精确定位（ <a href=\"http://www.freebuf.com/sectool/117164.html\" rel=\"nofollow\">http://www.freebuf.com/sectool/117164.html</a> ）</p>\n<p>测试下的确可以，不过定位成功率在 65% 左右，存在一定的误差， API 接口也有些限制。</p>\n<p>集成到 alfred 倒挺好用。</p>\n<p><a href=\"https://github.com/masterzh01/precise-ip\" rel=\"nofollow\">https://github.com/masterzh01/precise-ip</a></p>\n</div></div>"], "reply": "16", "tittle": "IP 地址精确定位 alfredworkflow", "comment": ["表示关注", "\r", "这个估计也是用的类似原理", "原理是什么呢？为啥说这个比百度的精确？", "还没点回复按钮就被二楼抢了先", " 估计是收集的手机 LBS 信息", "16 进制定位在你的 3 米之内:doge", "alfredworkflow\r", "\r", "Apple for your AK ( ", ")\r", "\r", "·Apple· for you AK （黑人？？？）", " 敲错了", "应该是有机构同时收集“ IP ”和“ GPS 定位”，然后将该 IP 收集到的 GPS 信息经过拟合，产生精确的定位信息及误差信息。", " 你说的那个网站参考数据 6 明显采集了我的数据  ", " 有测试过一个空 IP 收看过某视频网站的广告后，出现精确度 1.5 公里的定位数据（未开启定位服务，估计是基站定位）", "  @", " 有很多数据源的 只是获取收集方式略有不同。", " 基站定位如果非偏辟地区精度 200-300m", " 测试地广州市天河区，未开启定位服务"]},
{"content": ["<div class=\"topic_content\">一程序员 2 年间在三家创业公司的经历，写了一篇总结的 blog ，供将要或者想要创业的同仁门参考。当然，如果你要问这是不是就是我那朋友自己亲身的经历，嘿嘿，我是不会告诉你滴。因为他自己也这么写了：如果你非得说是我的经历，我是打死也不会承认的，虽然这项技能我也是刚学会不久。\r<br>\r<br><a target=\"_blank\" href=\"http://raymondjiang.com/blog/2016/10/25/what-do-you-want/\" rel=\"nofollow\">http://raymondjiang.com/blog/2016/10/25/what-do-you-want/</a></div>"], "reply": "23", "tittle": "一程序员 2 年间的创业经历", "comment": ["珍爱生命，远离创业公司", "去创业公司，感觉就是赌博", "创业公司：怪我咯！！楼上 2 位的说法非常可笑。哪家大公司刚开业的时候不是创业公司？其实有些人吧，是自己经不住诱惑，同时又没有分辨是非的能力，上了贼船，还怪别人贼不道德。", "新人慎重考虑，老人量力而行、、", "差不多，最近两年的感受。珍爱生命，远离创业", "这个太看是否跟对人了 确实是赌博", "关键看人，不跟人品不好的老板混。", "其实楼主别费劲了，你低估了人性，其实人们永远喜欢喝鸡汤，这种带毒的浓汤，人们总会找出各种理由拒绝。也就是说，总会找出你各种失败的原因，然后觉得，这种事情绝对不会发生在自己身上。不是楼上已经有个哥们说了么，你怎么怪创业公司，你是经受不住诱惑，活该被骗。就像全世界的股民一样，当他们自己经历的时候，总会觉得：这次一定会有所不同！结果呢。。？", " 梦想还是要有的，万一实现了呢？", "这不是创业经历吧...这是在创业公司工作经历吧....\r", "听起来让我们这些校招错失 BAT 的人感觉前途灰暗...", "真是个悲剧", "真是万事俱备，就差写程序的了", " 不过老板都是承诺你以创始人和股东的身份", "好无聊的论调\r", "\r", "自己选择的高收益或者高收益的可能性,就要承担高风险\r", "\r", "有获得就要有与之匹配甚至远远超出的付出", "如果还处于有上顿没下顿状态，还真不要随便进入创业公司", " 哈哈，问题他付出了，也没有任何获得，真是笑死了。", "感觉没有什么内容实质，好像是编撰出来似的，为什么这么说，因为细节描写实在太少", "创业公司 != 创业\r", "创业公司就是那种你在假装创业高潮，又不用对公司生死存亡担负半点责任的地方。", "主要还是看自己的价值取向吧，如果只是想拿工资无所谓。如果想有朝一日成为上市公司的 cto ，那就要看清公司的方向和老板这个人。", "看楼主主要是写 ruby rails 的 果然是适合创业公司的技术栈", "如果你能看到未来，就不应该有错误的判断。", "陪 ceo 到白头，哈哈哈", "希望现在这个不是个坑。。"]},
{"content": ["<div class=\"topic_content\">不好意思，问了这么一个基础问题。主要是查半天没查到。</div>"], "reply": "4", "tittle": "OSI model 里的 layer 5， session，和 Web App 开发里说的 session 是一回事吗？", "comment": ["当然不一样， osi 是设计上的概念，现实里的 tcp/ip 并没有这层。网页里的 session 是 tcp 之上的应用层里网页服务端的一个概念。", "不是。", "其实用 OSI 模型套 TCP/IP 的话，一般只有 5 层\r", "你可以认为 HTTP 就是 session 层了（通常认为是应用层）\r", "JSON 可以看作是 presention 层\r", "Restful 是应用层\r", "都是套路 :doge:", " \r", " \r", " 谢谢各位！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>前端基本不会，主要是简单（上手快，有问题容易搜到）   如果能好看（简洁 扁平化）就更好了</p>\n<p>页面就是自己用的，掉后台 json 接口，然后表格展示、在弄几个控件什么的</p>\n<p>有推荐吗？</p>\n</div></div>"], "reply": "16", "tittle": "前端小白想做简单数据呈现，用什么前端框架\\UI ？", "comment": ["楼主的处境和这篇文章很像啊\r", "\r", "bootstrap", "d3", " 别搞我呀（哭着笑）\r", "\r", "\r", "我要这种水平的就行了   我有几年后端经验  主要是前端，，", "目前打算后端 python  不喜欢模板的方式，估计是全部 json 来对接。。", "UI 用 Bootstrap 就够了， Ajax 的话可以用 jquery 。", "echarts", "vuejs", "楼上说的都太复杂,直接用 datatable, 能排序能筛选", " 笑死了", "可视化数据用 echart\r", "如果只是列数据， datatable 之类的插件一大堆", "可以尝试下 grafana ，配置好后直接读取时序化的数据。", "echart.js\r", "highchart.js\r", "d3.js", "Bootstrap 的管理后台，网上大把大把的，比如 AdminLTE  ", "扁平化可以考虑国产的 Amaze UI ，这个响应式布局不错，如果是数据展现，涉及到需要增删改查和显示方面的过滤排序等等，可以试试看 vue.js 之类的框架", "自己用为什么不考虑 tableau ， rstudio ， python 的 spyder 这样现成的软件，也方便做数据分析"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>nodejs 有什么库是包含浏览器 window 对象的？或者包含浏览器 webrtc 流传输的库?</p>\n<p>或者其他什么库，能够实现浏览器 webrtc 到 nodejs 进程之间进行流数据传输？</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "nodejs 有什么库是包含浏览器 window 对象的？或者包含浏览器 webrtc 流传输的库?", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我是做软件开发的，最近工作太久了，坐太久了，坐骨神经有点痛，医生叫我多走动。但事情真的太多了，那怎办呢？</p>\n<p>我想了一会，为什么软件开发一定有坐着呢</p>\n<p>然后我就去淘宝买了个架子，放我那 mac 和 27 寸大屏。</p>\n<p>刚刚今天收到了架子，花了我 30 分钟安装，然后感觉特别好！桌子也整齐了！</p>\n<img src=\"http://ww1.sinaimg.cn/mw1024/006ByT3qgw1f94olm1hbrj30rs0ku7b5.jpg\">\n<p>我 1.83 高，架子的高度还可以。而且架子的高度还可以调整，有时候站着，有时候坐着。太爽了！</p>\n<img src=\"http://ww1.sinaimg.cn/mw1024/006ByT3qgw1f94oln2rvzj30zk0k0tbl.jpg\">\n</div></div>"], "reply": "90", "tittle": "分享一下站着办公", "comment": ["站着影响脑子运作，多喝水多上洗手间，搞定。", " 不会吧，站着怎么会影响脑子呢？", "我觉得升降架的站着办公应该是指你不要一直坐着而是站坐交替吧，这样可以放松身体，和我这种写代码时只要一思考就喜欢站起来踱步的人应该是一个效果", "不知道你看没看过一个国外的那种架子\r", "人有点斜靠在架子上哪个，图片太多不好翻", " 也许是个人原因（试过，效率真的不高），但是在办公室站着 code 真的有点「出众」。。", " 如果你有这方面的困扰，肯定是你站的少", "痔疮复发？", "你还是搞个纸箱子，外接个键盘。不然不晃么。。", "我习惯用鼠标就没办法了", " 嗯，都很对。一天坐着就 12 个小时了。(还不包括睡觉)", " 强烈要求发个图来看看！！", "方便发下链接吗？另外问下这个架子牢固吗？", " 这个提议很好，我应该把键盘用绳子挂在颈子上 :P", " 来我们公司吧，在招人，我送一个！ :D (淘宝很多，查慧至 OA-7X ，我买的是一边可以挂 27 寸屏，一边是放笔记本的)", "一直站着也不好吧，小腿血循环不好，容易挤压，时间久了，可能会得静脉曲张", " 对的，就是有时候站一下，有时候坐着，有时候走一下 :D", "站过半年 腰会和脖子会痛\r", "注意一下姿势吧\r", "\r", "最好多喝水，拿去上厕所当放松，还不容易得肾结石。", " 是不停写错代码，然后被老板罚站了吗？:P 坐了软件开发 10 年啦，我已经算是很注意姿势的了，我的朋友很多都有肩周炎很腰有问题，所以才觉得不有经常坐着。\r", "\r", "不过，我觉得最好还是做运动，把手和脚活动一下", "站久了容易静脉曲张哦，楼主要小心控制站着的时间", "霍金套装", "为什么要站着呢？不想坐着可以躺着啊。", "我觉得电脑和显示器反一下比较好", "我倒是喜欢出去走走，理理思绪", "我们公司的桌子是可升降的", "这样岂不是得一直低头了= =", "自从站着办公后\r", "再也不落枕了，曾经有过一次很严重的落枕，躺在床上起来的时候，脖子像断了的一样难以支撑脑袋\r", "肌肉也不酸痛了", "我是在一个柜子上放了一个床上那种电脑桌，然后加个笔记本支架，高度完美，处于平视状态，不用低头", " 10 年了？算同龄人哦~\r", "\r", "之前站着办公有一个月左右，效果并不太好。\r", "站着办公老实说并不等于走动的。而且，虽然腰椎有所缓解，但是颈椎会更惨的---看照片，你的大显示器位置也偏低了些。\r", "\r", "比较好的方式还是前面兄弟说的，多走动，多喝水。抽烟的话，尽量去楼上层的吸烟点。应该效果会更好。\r", "\r", "（拿本拍纸簿，边走边画，转几圈回去 coding 下，这样效果也不错）\r", "\r", "\r", "NND ，老了……", "我想到了这个...\r", " 好的，谢谢 :D\r", " 霍金套装在哪可以买到呢？\r", " 躺着挺好的，之后班都不用上了 :P\r", " 我也想啊，最近招人，头快爆了... =_=!\r", " 那个很贵呢，你老板真大方\r", " 就是微微的低头了，下次我把屏幕挂天花上\r", " 这个像枕头广告一样 :P", "站着总是被脚酸腿酸姿势等问题搞的无法完全投入，身体总是提醒你哪里哪里不对劲很烦。坐着工作躺着睡觉，万千物种的最佳姿势，看看 po 主能坚持多久 [奸笑]", " 同龄人啊！幸会幸会！\r", " 欢迎加入我们公司，来监督我，来鞭策我 :P", "记得之前 Linus 一个演讲他好像就说喜欢站着工作 XD", "得买垫子，站着办公有没有垫子是两个世界", "你这样肘部悬空其实也不健康的 不能为了站而站 不如正经地买个可升降的工作台 淘宝上可以买到不错的", "可以", "头也是低着的，颈椎还是累", "老低头，颈椎会有问题的", "旁边挂个沙袋，出现一个 Bug 就打几拳发泄。", " 这个主意太好了，我送每个员工一人一个沙袋，上面贴着我的相片，他们应该会特高兴！", "這個架子似乎沒法放鍵盤~", "杯子洗不干净了。啊哈", " 跑步机办公桌", "以前有条件的时候，早上坐着，下午午睡后站立着，效率很高，没有影响思考之说。", "你照片里这个姿势有点累脖子", "你这个不行，那个架子承受力太弱，不能把手和上身的重量全都压在架子上。。。推荐站立桌，或者淘宝搜索一种面积蛮大的站立桌， 500 多人民币。可承力，站坐切换也比较自如", "你这个观看角度不行，脖子受不了", "你这个架子跟我家里的一模一样，所以我觉得你把笔记本放在那上面工作是效率极低的：一打字笔记本就在晃！而且你要用鼠标的时候必须弯腰去摆弄桌上的鼠标！我是用另一头挂个显示屏人盘腿坐在床上使用的！盘腿坐了五年了，每次看到有人说站着办公怎么怎么健康我就要笑，最健康的是盘腿坐，只可惜一般人要适应盘腿坐不坚持半年都不可能觉得舒服", "看文献、 code review 等不需要频繁输入时，站起来压压腿蹦一蹦半蹲效果更佳。\r", "当然这只适用于非公共场合，比如在家上班。", "年轻人你脚不酸吗", "宜家升降桌啊，我们公司标配。一般一天也就站两三个小时，久了腿累。", "别装了，你这样还能工作？演给谁看？", "我觉得一把好的人体工学椅会更合适。", "我也想买一个放 iMac 27 的，不知道楼主的能不能承接 iMac 27 ？", "我就想知道像我这种要狠命敲 enter 的，用这个会不会晃啊。。", "站久了也累.正确的做法是站一会,坐一会.后还感觉还是太麻烦了,还是坐着了.搞个能久坐提醒的手环.break 时间走动一下.", "呵呵，居然还有说站着不好的，就那几个小时站着，对您的身体造成不好的影响，您还是继续堆肥肉吧。", "老师说站着工作的职业，也是静脉曲张高发职业。楼主想清楚。\r", "\r", "显示器应该要不低于眼睛，否则你的颈椎很快就会坏掉。", "走路办公", "架子太低，对颈椎也不好", "有外接键盘和鼠标的就没法了。", "我觉得尽量缩短坐着办公的时间，没事多去健身房，跑跑步什么的比较靠谱。", "架子很吊！之前见过别人是用书垒砌起来变架子站着办公。还有 lz 这样弓着背地图看频幕脖子不怕累么？站着干活屏幕最好可以平视。", "这里没有躺着 coding 的方案吗？", "坐久了腰疼屁股疼，站久了腿疼。为啥不能，结合起来呢？", "看图片\r", "你这个姿势\r", "脖子不会累嘛\r", "感觉应该还要再高一点", "看图片上的楼主，头是往下看的啊，小心颈椎...可以把屏幕调高一些。", "颈椎受不了", "我就想问 扭着头酸不酸", "有点掩耳盗铃的意思 楼主还是省点时间运动一下吧", "你这个肯定晃。。。。。", "我这个比较好，不会晃，桌子可以升降， 4 楼图。 ", "久站和久坐一样对身体不好", "有些极端了，按一楼说的，多喝水，勤上厕所就可以了，没必要这样吧。", "1. 你同事的显示器比你的大（滑稽）\r", "2. 请一周，或一个月后再来一篇感受", "站时间长了膝盖疼", "我一看到那种傻粗傻粗不好弯的 HDMI 线心里就极其难受，正如楼主这种的，赶紧 JD 上换根特细的吧，都挡着屏幕显示了……", "我试过站立办公一段时间，腿有些吃不消。反正身子骨矫情的很", "多运动吧，站久了小心毁了膝盖", "你个子高，心脏负担重，各项指标都比同龄身高比你矮的都要高。站立办公更不好。。。", "\r", "搞了个这个  能直视.你这个还得低头啊感觉 不够高\r", "站着对颈椎好.天天低头 颈椎要断了", "这样敲键盘 会不会抖哇", "屏幕会不会太低了？总是低着头不好吧", "最健康的应该是一会儿站，一会儿坐，一会儿站，一会儿坐……", "哈哈", "挖槽神器", "\r", "并不是所有人都适合站着办公，", "又来。", " 有品牌？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>参考这个文章 <a href=\"https://coligo.io/bookmarking-app-electron-vuejs-firebase/\" rel=\"nofollow\">https://coligo.io/bookmarking-app-electron-vuejs-firebase/</a> ，在学习 electron + vuejs,因为我不是直接用他的代码，版本不一样，本来他可能可以的代码，到我这边都不行了，一个不兼容一个不兼容的改过来，终于感觉入门了。</p>\n<p>firebase 我本机好像用不了，就搞了成 sqlite 了。</p>\n<p><a href=\"https://github.com/chaegumi/bookmarking-app-electron-vuejs-sqlite\" rel=\"nofollow\">https://github.com/chaegumi/bookmarking-app-electron-vuejs-sqlite</a></p>\n<p>输入验证还没实现， vue-validator 试了下，搞不通呀，好像也是版本问题。</p>\n<p><img alt=\"image\" src=\"https://github.com/chaegumi/bookmarking-app-electron-vuejs-sqlite/raw/master/screenshot/c20161028154839.jpg\"></p>\n</div></div>"], "reply": "2", "tittle": "调试版本还在变化中的代码真是受罪", "comment": ["就不能调试下么。。", " \r", "\r", "一直都是调试过来的，已经实现了那篇文章里边的所有功能了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>可持续部署\nHTTPS 加密链接（虽然对静态博客没什么卵用）\n静态文件加速\n评论功能\n站内搜索功能</p>\n<p><a href=\"https://zongren.me\" rel=\"nofollow\">https://zongren.me</a></p>\n</div></div>"], "reply": "8", "tittle": "使用 gitlab+hexo+let`s encrypt+algolia+staticman+cloudflare 搭建自己的博客", "comment": ["闲的难受+不怕折腾", "感兴趣 搜了下，几个问题\r", "1.cloudflare 的机制是什么？\r", "\r", "我的理解对吗？  就是他成为了你域名的 NS ，然后别人访问你的域名，解析到他的 IP 而不是你的服务器上，静态页面就会加速下载。 可是动态的请求怎么办？\r", "\r", "2.algolia 百度结果不多啊  是一个新的数据库吗？\r", "\r", "3. staticman 根本搜不到", " \r", "1 flat DNS record 。静态文件缓存\r", "2 就是提供站内搜索的东西，具体工作流程为 gitlab 把文章全部 push 到 aloglia 的数据库，然后使用 js 调用 api 显示搜索结果\r", "3 这是开源的，实现了静态网站（例如博客）添加评论系统的可能，请参考官方主页 ", " cloudflare 的加速效果有两个，一个就是文件缓存，包括 html ， js ， image 等等\r", "另外就是 DNS flattern 功能，详细介绍请谷歌，我水平太次说不清楚", "那你还有时间写博客吗？", " 有啊，你可以看一下，基本每个月都有几十篇，但是以笔记和解决问题为主", " 用 百毒 当然 搜不到了...", " 没错，我的电脑基本一直挂着威屁恩，搜索还得靠谷歌"]},
{"content": ["<div class=\"topic_content\">google 了好多 demo …没有可以用的…各种原因。\r<br>有木有 ionic 上传照片的可以使用的 demo</div>"], "reply": "5", "tittle": "ionic 上传照片", "comment": ["跨域的原因？", " 不是。。。应该是插件问题", "调试下。。", "cordova file transfer"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>因为我是用 jq ，所以我拿 jq 举例，现在的元素选择器都是从上到下获取元素，但是现在我需要从下往上找元素，比如包含 width:5 的 textbox 的 div 。这个要怎么找？</p>\n</div></div>"], "reply": "10", "tittle": "前端选择器有没有能实现这个需求的？", "comment": ["都 2016 年了，已经没人用 jQuery 了，都用 React 了！\r", "\r", "PS ：你的问题， parent(s) 方法", " 嗯，太羞耻了这个问题。让它沉吧", "没有父元素选择器，你上面说得那个例子，用 js 来遍历就可以了", "用 jq 可以的", "先$.find 到 textbox ，然后再 parent div", "$(\"div\").has(\"input.textbox[width='5']\")  这样？", "CSS4 有 :has() 选择器, 但现在还没有浏览器实现这个 ", "用 6 楼的方法应该可以， has()返回 bool ，所以还是要获取到 div 集合，然后遍历筛选", "注意看，楼主 width:5 是冒号，肯定是 CSS ，不是 width=5\r", "所以属性选择器不行\r", "$(this).closest('div.textbox').each 里面写判断吧，不是单独选择器能完成的", "扯什么鬼 css4 。"]},
{"content": ["<div class=\"topic_content\">纯属好奇，下面是经常听到的几种说法，欢迎补充。\r<br>a 敲代码\r<br>b 码代码\r<br>c 打代码\r<br>我是 a</div>"], "reply": "74", "tittle": "你们怎么用中文描述 coding？", "comment": ["搬砖。", "写代码", "掏粪", "写代码", "打码\r", "种码\r", "\r", "有时候还会有：\r", "埋坑", "干活", "把你的思维转换成电脑能够处理的东西", "我也是写代码", "码", "上工", "撸代码", "打孔，穿带机用过就知道了。", "写 bug 。。。", " 哈哈，笑尿，这个说法好", "改造新世界……", "写代码", "搞事", " 上钟  手动再见", "写 bug", "挖坑", "一本正经脸，编码", "那个掏粪的兄弟你 debug 的时候怎么用中文描述", "撸代码、打代码", "上班啊", "撸代码", "编码", "扛砖", "玩玩具", "搬砖", "I'm saving the world.", "普通: 写代码", "正经: 编程", " 搞事 233", "搬砖", "滚键盘\r", "写 BUG", " 逃出来然后 debug 的时候当然是尝一下咯", "码\r", "搬砖", "编程，写程序。", "抠腚", "搞码子", "一般都是叫抠腚", "写代码或者搬砖\r", "\r", "写 bug （自己负责的部分）\r", "\r", "吃屎（改别人的代码）", "\"和灵魂沟通\"", "撸码", "设计软件 ", " ", " 笑哭", "撸", "写 bug", "撸", "撸码\r", "搬砖", " 当然是拉屎啦（逃", "擦（别人的）屁股", "抠腚", "撸代码", "养家", "写 bug +1", "抠腚", "抠丁丁", "a c 均可。", "啪啪啪", "扣腚", "撸代码", "汉字是表义，英语是表音，汉字注定无法完美解释英语。", " 如果看 B 站的空耳你会打开眼界的", "开发", "差评， 居然没有   D.  撸代码", "码字", "撸", "抠腚", "抠腚", "改造世界", "啊， 我在写 bug 呢", "玩游戏", "软件开发", "寇德英", "对呀 不都是撸代码么！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近一直在招人，那肯定要找朋友的，有个朋友说要午睡时间，我说可以，他说要一个午睡枕头，我说我送给他，然后他发了连接过来。。。已经 15 分钟过去了，我沉思我这辈子有没有做什么坏事，是我不知道的。。。</p>\n<p>我是买给他，然后他加入呢？还是不让他加入呢？</p>\n<img src=\"https://gd3.alicdn.com/imgextra/i2/0/TB1gIW.KFXXXXbuXFXXXXXXXXXX_!!0-item_pic.jpg_400x400.jpg_.webp\">\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>更新一下：</p>\n<p>他又跟我说身为一个码农，最好配个靠背，然后又一连接。。。</p>\n<p>过会，我应该会打电话给他父亲和母亲问候一下。。。</p>\n<p>算了，我们公司没有买员工精神保险，他的精神状态已经不能做码农了，人寿保险对他应该更有用，我保证不砍死他。。。</p>\n<p>(想知道那是什么，请码农把小图连接的 50x50 改为 400x400 )</p>\n<img src=\"https://gd3.alicdn.com/imgextra/i1/183029580/TB2xR7dpVXXXXcoXXXXXXXXXXXX_!!183029580.jpg_50x50.jpg_.webp\">\n<img src=\"https://img.alicdn.com/imgextra/i3/183029580/TB2vBFOsFXXXXbdXpXXXXXXXXXX_!!183029580.jpg\">\n</div></div>"], "reply": "38", "tittle": "这样的午睡对码农好吗？", "comment": ["直接发链接给你.....嘛？  这做法....", "这是不是说明 没拿你当外人？\r", "这枕头辣眼睛。", "可以的，魔物娘的抱枕😂", "哈哈哈哈\r", "\r", "btw 楼主的图 Safari 打不开。", "可以的", "mobile safari 打不开", "打不开+1", "楼主求枕头链接→_→", "手机 Chrome 打不开", "我也午睡，但没想过要买枕头", "说不定他是卖枕头的，等你买了就离职了", "魔物娘…………", " 对的，他没拿我当外人，可是我公司有妹纸，如果我招了他进来，那妹纸说不定会走呢。。。\r", " 我没想那么多技术的东西，我在想我三十几年来做过的错事。。。\r", " 我还要在 V2EX 招人的，连接是不可能发的，自己淘宝吧，发挥码农解决问题的小宇宙吧！", "\r", "手机党接图🙈🙈", "这枕头看着瘆得慌", "手机 opera 可以打开", "没感觉这个有什么问题啊", "死宅很正常啊，当然我没那么凶残，只是在桌子上放个手办...", "刚买了文明 6...省略 600 字", "楼主求链接！", "我喜欢这个枕头", "快告诉他你是雷姆党……", "别说了，留下链接", "太死宅了 \r", "四斋蒸鹅心", "我用个动漫图做壁纸，在公共场合有时都感觉不好意思-_-||\r", "所以说，死宅是个神奇的群体。", "求链接", "艾米丽亚碳", "改了 400*400 之后。我身边的人，都鄙视我了", "淘宝居然有卖的。。。", "楼主啊，楼主，找不找 ios 的人啊， 我不午睡", "webp 的图， safari 不支持，请用 chrome 打开", "不是很懂你们这些二次元", "不是很懂你们这些二次元", "发个链接看看，很想知道买的人怎么评价的哈哈", "只有我觉得提主是来做广告的吗？这广告满分", "欧美的码农设定都是满脸络腮胡子几天不洗澡通宵喝功能饮料的胖子大叔。中国的码农怎么就被设定为弱不禁风喜欢二次元的非主流了？", " 都是我的错！:P\r", " 我们招的是 Javascript ，只要你回一点点，就把简历发我电邮吧，我的面试不是一般的面试，每个面试过的都大赞，不管将来有没有机会合作，总不能让每个人空手而回 :D\r", " 请把\"你们\"改成“他们”。。。\r", " 哈哈，这是招聘广告！这是招聘广告！这是招聘广告！假的事情说三遍就成真的了（我也想。。。）\r", " 这个设定太差劲了，技术团队里，我是最矮的，但我 183 高。。。", " 哈哈，我 javaScript 真的只会语法， html ， CSS 不了解估计是干不了你这活了，感谢邀请"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我觉得我除了不会编程以外,所有得爱好兴趣都和 Geek 没区别.早年大学毕业后学过 MCSE,然后就对电脑软硬件,服务器,外设,建站,互联网,等等事物有很大的兴趣,以前也曾尝试去弄个网站,论坛,博客等等,但都仅仅只是皮毛,一旦涉及到编程,语言等就完全不行了.而且周围朋友没有这一行的,所以根本没有圈子让我去学习.我还非常的羡慕做程序员工作....</p>\n<p>目前 34 了,销售行业,可以说 0 基础,虽然个人觉得自己学习能力还不错,但是年龄大了肯定不如以前悟性那么高..现在想用碎片时间来学习语言和编程,不知道可行吗?如果说每周花固定的几个小时静心的学习,花个 1-3 年不知道有没有什么效果?  或者说选择一个大的方向?比如 swift? php?等等?</p>\n<p>PS:学习语言编程仅仅个人爱好,并不参与到工作上去..</p>\n</div></div>", "<div class=\"topic_content\">首先感谢大家的建议和意见.\r<br>\r<br>目前已经参照 @<a target=\"_blank\" href=\"/member/frankmdong\">frankmdong</a> 推荐的 <a target=\"_blank\" href=\"http://freecodecamp.cn\" rel=\"nofollow\">http://freecodecamp.cn</a> 来入门了.\r<br>\r<br>用了 2 小时完成了初步的 HTML5 and CSS 的基础训练\r<br>还是多亏了多年前一点 Dreamweaver 的皮毛基础,让我上手还算快,比较有感觉.\r<br>\r<br>但是个人感受到年纪大了及身体健康,记忆力等客观问题,接受能力肯定不如以前,刚才的 2 小时训练记住了大部分,忘记了小部分.不过我会继续坚持把已经完成的训练在多做几次来巩固,实践才是最好的学习方式.\r<br>\r<br>看了下整个训练课程规划时间大致 2000 小时...我打算坚持完成这个训练,以及重复训练来复习.最终在来衡量我是否有能力继续学下去..\r<br>\r<br>再次感谢大家了,以后还会在这里像大家学习和咨询...</div>", "<div class=\"topic_content\">目前已完成\r<br>HTML5 and CSS\r<br>Responsive Design with Bootstrap\r<br>两个课程的训练,还算感觉良好...不过这两个貌似是前端的吧.</div>"], "reply": "121", "tittle": "一个大龄及完全零基础的人能否学语言和编程?需要多久?", "comment": [" 确实，这个东西从 office 2007 到现在 2016 通吃，从 xp 到 win 10 ，没改过代码继续能用，几乎免维护，也算神器。", " 做成 Web 形式是为了协同办公， Excel 虽然很牛逼，但是只能在自己电脑上操作，数据无法共享", " 其实 excel 得到的数据任何有 excel 知识的人都可以整理出来想要的结果，可以关联很多起来来源的数据做分析， web 想多一个报表必须 IT 介入，几个星期未必出来的就是业务部门需要的。各有优势吧。", " @", " 主题上明确说了兴趣..现在不可能转行做程序员了..", "html css javascript php 哈哈\r", "学做个网站慢慢就有兴趣和毅力了", "前端更新迭代太快，对于你个人整体，真心不建议！\r", "后端也是，进去就是奔着全栈，够你喝一壶的。。。\r", "分期学个 ios ，我个人认为是靠谱的", " 分期学 iOS? 啥意思?", "我想表达的是，编程在很多地方作用都很大，象我们生产线就有 PLC 编程，财务、销售有宏编程，都是独立于传统 IT 的。有机会学，几月就能见效益。深造也是可能的。", " 正在学习中...", " 那是老黄历了， Excel 早就可以异地共享协同编辑了。", " 所以说适合自己业务的技术才是最好的技术。 Business driven, money talks. 为了技术而技术，除了装逼，一无是处，反而容易耽误事儿。", " 哪个版本的 excel ？", " 从 2003 都有了，工具->共享工作区\r", "\r", "后面微软专门针对 Office 全家桶还有个大神器 SharePoint ，跟.Net 整合以后，不要太好用。哈哈", " v2 不支持 markdown 链接错了", " 你的情况和我一样，我不是计算机专业，毕业后这几年一直做医疗器械销售，平时闲的时间很多，自学编程，有机会可以聊聊学习过程。 可以加我 qq,279834419.\r", "我的 github : ", " 分期交学费 学习 iOS 开发", "\r", "\r", "我只能帮你到这了....", "说实在的，你需要一个老师，本人深有体会，自学弯路多，我也是和你一样年龄，前两年才开始自学到现在水平也不行，因为自己没有那么多钱找老师，坑很多，都是搜索搜索看别人的解决方法，感觉原理性的东西要练习和别人点拨一下，比自己研究半天好多了，如果你有条件，可以考虑去找个老师。真心建议", "楼主需要的是学习上的建议，而不是乱七八糟的东西。真的服了！", "用 Excel 的话别学哪些乱七八糟的东西，学个 VBA 多好，绝对生产力工具，马上就能用上", "不知道 LZ 进度如何了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>大家怎么看阿里旅行 app 今天更新，改名为飞猪。。\n马云这个大自然协会会长不是白当的啊</p>\n</div></div>"], "reply": "44", "tittle": "大家怎么看阿里旅行 app 今天更新，改名为飞猪。。", "comment": ["名字筛选用户", "logo 一点也不像猪，另外，买机票的人可不希望自己是会飞的猪", " 23333", "改的好", "至少能保证团客里没有『阿拉胡阿克巴』，出行更安全", "阿里周刊，好评。", "哈哈哈", "这 app 不清真，好评！", " 哈哈哈哈", "哈哈哈哈", "阿里药丸,太不清真了.", "刘姥姥 进动物园", "无所谓啊，就因为名字带猪就得受到关注？我对什么教没兴趣", "飞猪不是维尼的朋友吗？还有跳跳虎，还有那个尾巴是假的毛驴。", "天猫, 肥猪, 还有什么?", "不清真\r", "沙卡拉卡， boom", "看到这突然想起我是一只快乐的小猪的歌了，不知道歌名叫啥", " 闲鱼，千牛…", "说明 穆斯林不是飞猪的目标用户群体", "难道只有阿里旅行一家可以定票，那些说出行安全的，难道别人不会在别的地方订？", "没有穆斯林的旅行更安全", "当初阿里旅行改去啊的时候就有飞猪这个备选名\r", "\r", "然后被一波旅行平台刷 去啊 这个文案火了\r", "\r", "现在过去了就把名字改回来了", "天猫，飞猪，蚂蚁，虾米，菜鸟，闲鱼……马云", " V2EX 里就服你", " ", "改的好！以后，就成最安全的旅游方式。", "不知道怎么想起，雷老板的那句:站在台风口，猪都会飞。（逃", "不清真 desu", "不清真，但是没卵用，哪个 SB 拍脑袋想出来的", "好难听啊，这都怎么通过的", " 清真 dewanai", "是和 ‘天猫’ 对应的意思吗？", "绿绿有啥反应", "看那个切糕王子跳脚的样子，就知道马老板为全国人民的安全出行操碎了心", "意思是强行过滤提高安全性？", "为啥不改名叫溜猴？", " 千牛 哈哈\r", "\r", "越看天猫图标越丑😂", "飞猪流？", "我怎么想到肥猪了", "阿里是原罪，一个名字都能招来吐槽嘲讽", "新服务条款：\r", "亲爱的用户，我是你爹，你丫是猪 ", " ", "和 COCO 奶茶的 logo 太像", "喵喵喵？我怎么成猪了？我怎么又飞起来了？\r", "？？？？？？？？", "果然是互联网厂商把所有动物都不放过了？"]},
{"content": ["<div class=\"topic_content\">在我印象中是要加的，但是最新在学习 electron 和 vue.js 时，文档和例子中的代码，很多发现都没有加，很不习惯，我写 php 的时候也加了。\r<br>\r<br>我想知道标准的做法。</div>"], "reply": "80", "tittle": "javascript 一行结束要不要加分号？", "comment": ["还有学习 html 的时候  单标签结束，印象中都是 这样的，/>，现在看的很多前端文档，里边又不要这样了。", "PHP 是强制要加的吧， JavaScript 不是必须的\r", "\r", "不过本人封号党 ...", "单纯的 js 是要加上的，因为你用了构建工具，所以他会自动的帮你加上，", "如果你写 JS 代码不喜欢带分号，而又搞不清什么时候必须加分号，可以这么做：在以 \"(\"、\"[\" 、\"/\"、\"+\"、\"-\" 开头的语句前面都加上一个分号，如    \r", "```js\r", ";(a + b).toString()\r", "```", "你需要 linter", "js 语句结束应该加 `;`", " 这个总结 666", "要加，不加一般情况也不会报错。然而会为以后留下隐患，可以上个代码检测工具了，", "ES6 之后语法越来越像 python 了，箭头函数和一堆函数式风格语句加了分号越看越怪异。", "1. JS 本身的语法，对于有明确换行的语句，结束的分号是允许不写的。\r", "2. 过去的主流是写分号，一方面是符合类 C 语言的语法，另一方面，某些工具对于没有分号的处理存在问题。\r", "3. 现在的主流工具，处理对于不加分号的写法，都没有问题。\r", "4. 现在的主流写法是不加。\r", " JS 是需要分号的，至于 HTML 加不加 “/” 是由 DOCTYPE 确定的。", " 然而括号开头的话，那么就要加，这样不如全部都加", "大部分不写，有少部分是肌肉记忆写的，与我无关", "加毛分号", " 以前这么做主要是为了避免压缩出错。而现在的主流压缩工具，都不需要加分号了。", "你要的标准： ", " 是不加分号的。\r", "\r", "一般由 eslint 检查，同时还能避免或提前发现一些问题。\r", "\r", "其实，没什么标准规范，团队达成一致并遵守即可。", " \r", "1.分号 这个东西最好加上，因为 \r", "         一来，一部分的人的书写习惯，你不写他们看着不顺眼；\r", "         二来， js 本身当初设计就很简单不严谨，所有 小程序啊 以及个别的上古浏览器对于这些解析会有各种奇怪的问题，所以现在开始出现 tc 啊  strict 模式这些东西。\r", "\r", "当然，如果上面这俩问题你不用考虑那就不用管他，加不加都可以，但记得一个项目里要统一，别前面不加，中间突然开始加分号，最后又没了。\r", "\r", "2 ， 结束标记问题，  不需要加！\r", "    这是当初的 XHTML 标准推广的玩意，要求标签必须有结束元标记必须带“/”，而且除了这个还要求 标签必须小写，属性必须有值且值必须被双引号包围。\r", "然而这个标准已经死了，你现在写按照 html5 的标准或者 html4.1 的就行了。", " html4 和 html5 都不强制要求必须有结束标记，那个是 XHTML 的标准。", "可以参考下 Automatic Semicolon Insertion\r", "\r", "The source\r", "\r", "return\r", "a + b\r", "is transformed by automatic semicolon insertion into the following:\r", "\r", "return;\r", "a + b;\r", "\r", "The source\r", "\r", "a = b + c\r", "(d + e).print()\r", "\r", "is not transformed by automatic semicolon insertion, because the parenthesised expression that begins the second line can be interpreted as an argument list for a function call:\r", "\r", "a = b + c(d + e).print()", " 请参考 @", " 的例子，那是 ", " 里面提到的，那个根本就是有歧义，不加分号无法区别作者的真正意图", "如果都不加，下面的情况需要注意下\r", "```\r", "expression...\r", ";(function() {...})()\r", "\r", ";[1,3,4].forEach((x) => {...})\r", "\r", "```", "能不写就不写，主要原因是懒", "可以不加，但是建议加", "加或不加，各成一派，根据个人喜好选择即可。", "可以不写分号，前提是你知道是有不写分号导致的坑。你可以看 这本书 ", " 第六条。", "如果不写分号，代码压缩 /混淆等操作以后，很大几率会报错。", "老程序员看完\r", "\r", "\r", "这个，表示想辞职。", " \r", "\r", "我也是老程序员了，现在很热衷找标准做法，然后按标准做法做。", "加分号是一种习惯 不加分号才麻烦\r", "另外标准是人订的 大家只要都按一个写就行了", "我是不写不舒服斯基！\r", "好吧，我稍微有点强迫症，除了大括号外，我都加；\r", "否者看着不舒服，会感觉这段代码没有写完； if-else 语句，也会大括号；", "尤雨溪解释了不用分号的理由 ", "现在看来我觉得这个和“ C 语言要不要另起一行大括号”一样，为了代码风格统一考虑统一就好了。", "我不加", "加上感觉好看点", "没有所谓的标准，只有习惯的区别。我以前加，现在习惯不加。", "反正最好都要压缩的，无所谓加／不加。", "习惯不加，不加更简洁，没啥", "由于我学 JavaScript 前学过 VB 、 Pascal 、 Python 、 Ruby 等不写分号的语言和 C 、 C++、 Java 等写分号的语言，所以留下了带大括号（类 C 语法）的语言就要写分号的刻板印象，不写总感觉十分别扭。不知道大家有没有同感。", "习惯写，我同时写 C#.", "我就不说我写 python 还手动加分号， java 程序员 23333", "拿不准就全部加上，降低风险。", "不写分号能忍？", "遇到(function(){})()这种东西在下一行的时候，上一行不加还识别不出来😃会报错", "强迫症能忍？", "从 java 转过来..一直都加..而且看到 webstorm 的警告..我也很难受..一定要加上才行..", "总结：不加，只在(和[打行首的时候加前置分号， 即;(和;[", "重点不是插还不是插，插是因为防止程序二义性，自动插分号插错地方。不插是因为想通了为什么要插。\r", "\r", "无论插不插都是语言风格，你明白为什么意义更大，没有谁比较智障谁比较高级的说法。个人是写的。\r", "\r", "盲目的传教很讨人厌。", "不加，构建工具帮忙加", "写 java 转过来，已经习惯加上分号了。。。", "至少写 es6 的语法，不加分号之后代码要好看很多。", " \r", "为啥用单引号啊？感觉既然 json 字符串用双引号， js 里也用双引号比较统一。\r", "好像 js 单引号双引号没有转义上的区别来着？", " 因为 es6 有了...", "没有标准，这在 eslint 中是个可配置选项，团队保持一致即可", "不是必须要加，但是不加有时候会有问题，所以还是加上为好。", "\r", "\r", "个人建议是添加 这样可以减少出现莫名其妙的问题的概率，毕竟一直加和选择加来说，一直加用脑少，出错概率小。。。 当然了这玩意见仁见智", "强迫症，尤其是看着 IDE 里的缺少分号提示更是不能忍，通通加上", "不要", "一般不加", " 有些 IDE 把 lint 设置改一下，就会变成提示多余分号了 ;p", "加", "python 也可以写分号，但从来没看人写过", "必须加，不加不好看。我同时还写 Python ， c#， c++。", "这种问题需要问？", "vue 的作者是坚定的不加分号党，还是看社区提倡哪种了", "按项目来看加与不加，统一就好。个人喜欢加分号。非常讨厌前面加分号的。", "我的建议是加，原因有二。\r", "1 、如果不加分号，代码会有未知的隐患，即使有很完善的方案去避免隐患的发生，但是学习它也是需要成本的。\r", "2 、在团队开发中，肯定要去规范，加或是不加。不加的过渡到加，基本没有学习成本；加的过渡到不加，还要去学习，会对新人快速融入到团队产生一定的影响。", "不加", "webstorm 有警告，不加难受", "不清楚 vue\r", "\r", "写 React 时 SublimeText 会提示我哪里应该加分号，哪里不用加。尤其碰到自动换行\r", "感觉更了解到代码结构了\r", "也避免了某些 bug", " \r", "是说 ES6 引入的模板字符串吗？那个是 `` ，不是单 /双引号", "不加", "话说未压缩的 jQuery 还是用分号的。", "以前有加分号，现在都不加分号了，没什么原因，主要还是因为懒", "谁需要分号才能看清楚语句的开始和结束？", "有这么难决定吗？凡是表达式语句就加以免表达式结果跟你的预期不一样，是完整的代码块就不加。", "这是一个会引发圣战的问题……", "\r", "\r", "这个说的挺好的...", "习惯加", " ", "\r", "\r", "...", "分号党看了尤雨溪的 slide 之后就转非分号党了...\r"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><em>原文地址： <a href=\"https://github.com/hugojing/web-lessons/blob/master/lesson4/README.md\" rel=\"nofollow\">https://github.com/hugojing/web-lessons/blob/master/lesson4/README.md</a></em></p>\n<h2>目标</h2>\n<p>创建 lesson4 项目，引入 Modernizr CLI 。</p>\n<p>使用 Modernizr CLI 生成自己需要的 Modernizr 包。</p>\n<p>使用 Modernizr 进行功能特性检测，在浏览器不支持某一特性时应用相应样式和逻辑。</p>\n<p>当在浏览器中访问 http://localhost:8080 时，输出页面。</p>\n<h2>知识点</h2>\n<ol>\n<li>学习使用 <a href=\"https://yarnpkg.com/\" rel=\"nofollow\">Yarn</a>（新的 npm CLI client ）</li>\n<li>学习使用 html-webpack-plugin 自动生成 HTML 文件</li>\n<li>学习 Modernizr CLI 的用法</li>\n<li>学习使用 url-loader 与 file-loader 实现音频、图像、视频等模块的加载</li>\n<li>学习 Modernizr 的用法</li>\n</ol>\n<h2>课程内容</h2>\n<h3>为什么使用 Modernizr</h3>\n<p>在进行前端开发时，想用一些浏览器的新特性，却不确定用户的浏览器是否支持。</p>\n<p>这时便需要进行手工检测来判断，进而给出不同的处理。</p>\n<p>使用 Modernizr ，可以方便地进行特性检测。从这些手工检测中解放出来，腾出力气来做好优雅降级。</p>\n<p>而且 Modernizr 可订制化，列出一个 JSON 格式的特性清单，便可以打出一个你所需要的最小的包。</p>\n<h3>Modernizr 实战</h3>\n<h4>html-webpack-plugin</h4>\n<p>上节课有用到 Webpack 的插件： extract-text-webpack-plugin ，这次首先介绍一个新的小插件： html-webpack-plugin. 主要功能是自动生成 HTML 文件。</p>\n<p>使用 Yarn （新的 npm CLI client ）初始化项目：</p>\n<pre><code>$ yarn init  #替代原 npm init\n</code></pre>\n<p>沿用上一节课的项目结构，创建需要用到的文件目录。</p>\n<p>添加 html-webpack-plugin 到项目：</p>\n<pre><code>$ yarn add --dev html-webpack-plugin #替代原 npm i --save-dev html-webpack-plugin\n</code></pre>\n<p>添加 Webpack config 如下:</p>\n<pre><code>const HtmlWebpackPlugin = require('html-webpack-plugin')\n// ...\nplugins: [\n    // ...\n    new HtmlWebpackPlugin({\n        title: 'Modernizr 实战',\n        template: path.resolve(SRC_PATH, 'index.html')\n    }),\n    // ...\n]\n</code></pre>\n<p>这段配置是说以 src/index.html 为模板，创建一个 title 为 <code>Modernizr 实战</code> 的 html 文件，并输出到 output 输出目录。如果一同输出的有 JS 和 CSS 文件，它会自己写好 <code>script src</code> 和 <code>link</code> 到所输出的 html 文件中。</p>\n<p>新增 src/index.html 文件，编写如下：</p>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html class=\"no-audio\"&gt;\n&lt;head&gt;\n    &lt;title&gt;Modernizr 实战&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"music\"&gt;\n        &lt;p&gt;The End Of The World&lt;/p&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p>这样一来，打包时就会自动生成符合需要的 dist/index.html 文件。</p>\n<h4>Modernizr CLI</h4>\n<p>添加 Modernizr CLI 到项目中：</p>\n<pre><code>$ yarn add modernizr  #替代原 npm i modernizr --save\n</code></pre>\n<p>新增 modernizr CLI 的 generate 命令到 package.json ，可根据指定的 config json 文件生成自订制的 modernizr.js 文件。</p>\n<pre><code>\"scripts\": {\n    \"modernizr\": \"modernizr -c node_modules/modernizr/lib/config-all.json\"\n}\n</code></pre>\n<p>执行 modernizr CLI 的 generate 命令，生成 modernizr.js 文件：</p>\n<pre><code>$ yarn run modernizr #替代原 npm run modernizr\n# Modernizr build saved to xxxxx/lesson4/modernizr.js\n</code></pre>\n<p>为了代码中方便使用，可在 webpack.config.js 的 config.resolve.alias 中配置别名：</p>\n<pre><code>alias: {\n    'modernizr': path.resolve(ROOT_PATH, 'modernizr.js')\n}\n</code></pre>\n<h4>url-loader &amp;&amp; file-loader</h4>\n<p>在 src/main.js 文件中编写代码，引入需要加载的一些前端模块（ CSS 、 MP3 ）:</p>\n<pre><code>import 'normalize.css' // 不是合法的 ES2015 Modules 写法，由 babel 转为 `require('normalize.css')`，再由 Webpack 实现 CSS 加载\nimport './main.css' // 同上，会转为 `require('normalize.css')\nimport musicUrl from './The_End_Of_The_World.mp3' // 同上，会转为 `const musicUrl = require('./The_End_Of_The_World.mp3')`\n</code></pre>\n<p>代码中的 import(require) 都是 Webpack 接管的，所以 The_End_Of_The_World.mp3 这个音频文件得让 Webpack 来加载它。这就要用到两个新的 loader: <code>url-loader</code> 和 <code>file-loader</code> .</p>\n<p>添加到项目中：</p>\n<pre><code>$ yarn add --dev url-loader file-loader\n</code></pre>\n<p>然后添加 Webpack config:</p>\n<pre><code>module: {\n    loaders: [\n        // ...\n        {\n            test: /\\.mp3$/,\n            loader: 'url?limit=1024&amp;name=[hash].[ext]'\n        }\n    ]\n},\n</code></pre>\n<blockquote>\n<p><code>url?limit=1024&amp;name=[hash].[ext]</code> 意思是使用 url-loader 来加载，小于 1024k 的打成 Base64 ，大于的复制文件到 output 输出目录、并命名为 [hash].[ext] 的格式。</p>\n</blockquote>\n<p>这样， JS 中 import(require) 一些 mp3 文件的时候， Webpack 就可以按照配置策略进行加载，其返回值为 Base64 值或者 文件的 url.</p>\n<p>可以验证一下，<code>console.log(musicUrl)</code> 会得到类似 <code>/205cc6e697917a94362ed6ed99febe71.mp3</code> 的结果，即为加载成功。</p>\n<h4>Modernizr</h4>\n<p>继续编辑 src/main.js , 应该引入我们生成的自订制 modernizr 文件了。</p>\n<p>查看 modernizr.js 文件，可以发现这个模块既不是 AMD 、 CMD 、 CommonJS 模块，也不是 ES2015 模块，更不是 UMD 模块，而是传统的 globals 库，将 modernizr 挂载在 window 上。（了解不同的模块类别，推荐阅读：<a href=\"http://www.tuicool.com/articles/nueqi27\" rel=\"nofollow\">关于 AMD,CMD,CommonJS 及 UMD 规范</a>、<a href=\"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/declaration%20files/Library%20Structures.html\" rel=\"nofollow\">识别库的类型</a>）</p>\n<p>由于 modernizr.js 文件是传统的 globals 库，所以执行所加载的 modernizr.js 即可，写法如下：</p>\n<pre><code>import 'modernizr' // modernizr 即为 ./modernizr.js\n\n</code></pre>\n<blockquote>\n<p>注意，这虽是合法的 ES2015 Modules 写法，但实现上依然是由 babel 转为 <code>require('modernizr')</code>，再由 Webpack 实现 JS 加载的。</p>\n</blockquote>\n<p>这样， window.Modernizr 就可用了。</p>\n<p>打包一下：</p>\n<pre><code>$ yarn run build #替代原 npm run build\n</code></pre>\n<p>然后启动服务：</p>\n<pre><code>$ yarn run serve #替代原 npm run serve\n</code></pre>\n<p>打开浏览器查看开发者工具，查看 Elements ：</p>\n<p><img alt=\"screenshot1\" src=\"https://github.com/hugojing/web-lessons/blob/master/lesson4/screenshots/1.png?raw=true\"></p>\n<p>可见，直接加载执行 Modernizr ，它不仅挂载了 window.Modernizr, 还依照检测结果给 <code>&lt;html&gt;</code> 标签写入了对应的 CSS class 名，例如 <code>cookies cors crypto cssall no-backdropfilter audio</code> 等。这样，开发者就可以写两种 CSS 样式（比如 <code>.audio body</code> 与 <code>.no-audio body</code>），以应对两种可能的情况（某一功能的有或无）。</p>\n<p>于是，这样编写 src/main.css :</p>\n<pre><code>html, body {\n    width: 100%;\n    height: 100%;\n}\nbody {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-family: \"HelveticaNeue-Light\", \"Helvetica Neue Light\", \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif;\n}\n.no-audio body {\n    color: #fff;\n    background-color: #000;\n}\n.audio body {\n    color: #000;\n    background-color: whitesmoke;\n}\n.no-audio #music {\n    width: 600px;\n    text-align: left;\n}\n.audio #music {\n    width: 300px;\n    text-align: center;\n}\n</code></pre>\n<p>JS 中也可以获取检测结果，例如：</p>\n<pre><code>Modernizr.audio // turn or false\n</code></pre>\n<p>于是，这样编写 src/main.js :</p>\n<pre><code>//...\nconst container = document.getElementById('music')\n\nif (Modernizr.audio) {  // Modernizr 即是 window.Modernizr\n    const music = new Audio(musicUrl)\n    music.controls = 'controls'\n    container.appendChild(music)\n} else {\n    const musicIntro = document.createElement('p')\n    musicIntro.textContent = '史琪特·戴维丝 1963 年演唱的《 The End Of The World 》（世界末日）被评为当年最受欢迎的歌曲，被无数人翻唱过，但无人能及她原唱的魅力，这首歌也是她唯一的传世之作。'\n    container.appendChild(musicIntro)\n}\n</code></pre>\n<p>别忘了打包和启动服务。</p>\n<h4>最终效果</h4>\n<p>在支持 HTML5 Audio 的浏览器中：</p>\n<p><img alt=\"screenshot2\" src=\"https://github.com/hugojing/web-lessons/blob/master/lesson4/screenshots/2.png?raw=true\"></p>\n<p>在不支持 HTML5 Audio 的浏览器中：</p>\n<p><img alt=\"screenshot3\" src=\"https://github.com/hugojing/web-lessons/blob/master/lesson4/screenshots/3.png?raw=true\"></p>\n<p>感谢 Modernizr ，给了我们一个更优雅的检测浏览器新特性的方式。</p>\n</div></div>"], "reply": "2", "tittle": "《使用 Modernizr 对浏览器进行 HTML5 和 CSS3 功能检测》", "comment": ["不是我吹毛求疵。都多少年了，用 Modernizr 来进行特性检测以便编写兼容性更好的网页这不是前端开发的常识吗？我记得当 Chrome 刚出来那几年间，还得兼容 IE6,7,8 的时候，就已经推崇用 Modernizr 编写现代化的网页。", " 对呀"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h2>公司有个新项目，要用 PHP ，之前对 PHP 不太熟悉，请大家推荐一个小巧好用的 PHP 框架，要求基本功能都有的</h2>\n</div></div>"], "reply": "90", "tittle": "大家给推荐个小巧好用的 php 框架吧，不要太重的，谢谢了", "comment": ["Laravel", "ThinkPHP?", "slim", " 人才", "还是用重的好， 小的要啥没啥。\r", "比如 python 项目用了 flask ， 后来发现 还不如 django 呢。", " 你指的是哪方面不如？", "ci 3.0", "slim?感觉挺轻的。。", "1 楼 2 楼推荐的都不小巧吧", "Codeigniter 3.1.0", "symfony ?", "zend framework 3 ？", "kohana", "连界面都有的\r", "\r", "codeigniter + adminlte + sammyjs \r", "\r", " ", "codeigniter 3 ，小巧，好用，简单。\r", "\r", "1 楼真是人才， laravel 这么重的玩意…", "yaf", "laravel 太重, 就换 lumen 喽...", "什么叫不重？大小还是易学？ ThinkPHP 都符合轻量级框架的概念 基本功能都有 容易入门", "那句话怎么说的，轻量级的框架重量级的工作。。。", "凡是连 namespace 都不支持框架就别用了", "小巧的话，，我觉得还是粗暴的不用框架吧", "flightphp 啊，非常轻量，自己找个合适的 ORM 就可以了。", "lumen", "个人觉得只要有使用 orm 的需求的话就没必要用 slim 、 flight 之类的轻框架了，直接 yii 、 lumen", "CI3", "看来 CI 投票最高啊，谢谢大家", "你要是不熟悉，那就推荐 thinkphp ，文档齐全 还是原生中文文档", "CI", "flight 轻巧", "CI 或者 Yaf , 别的都不要多想", "slim", "不要框架，纯手写", "轻的要什么框架， mvc 加 orm 加 router 就行了", "lumen\r", "flight", "小巧还用，然后基本功能都有，这本来有点冲突，而且你会发现一旦你做起来这也需要那也需要，小的框架就根本不够用。\r", "推荐用 yii2 上手快，前端自动的带 bootstrap", "slim", "yaf 吧，简单，其它规则多", "xiunophp", "直接原生 php 写就行了 要什么框架", "哈哈哈我自己写的 421 行的仿 flask 渣渣框架 你们千万不要用！！\r", "\r", "人家要小巧的框架，一楼一上来就 Laravel ……\r", "小巧框架试试楼上说的 CI 吧。 Yii2 也行，虽然不算小巧的框架，但是性能还是不错的。", "裸 echo", "yaf", "ci", "Lumen 不会失望", "小巧的就用 slim 吧，而且支持 composer 加载，这个不错", "ci", "slim 小巧。不过，最后还不是会组出个 laravel 来吗？", "slim / ci", "slim 没有之一", "codeigniter", "slim 还是不要用了，功能不完善，写个 demo 还可以，实战不适合，会后悔的\r", "\r", " 就是用 slim 框架开发的，组装了 3 个 laravel 的组件上来，才勉强可以算是能用。\r", "\r", "lumen 可以试试", "你们都不问清楚楼主的“基本功能都有的”这句是什么意思...\r", "如果这句不明确的话， laravel 当然是最好的选择。不然的话就 lumen 咯。", "speedPHP ，国产的，感觉还行", "目前用 slim + eloquent + twig 做了几个小站，性能很不错，但各种功能都需要自己实现，有些烦了", "轻量的，推荐使用 smarty", "lumen 挺好的，正在用...", "lumen", "CodeIgniter 功能齐全，又很轻  \r", "Slim 啥都没有，需要自己组装  \r", "Lumen 和 ThinkPHP 也很重好不好  \r", "\r", "太冷门的框架不敢用，万一作者挑撂子", "好多年前写的 要不要试试。\r", "lumen", "小巧的话 CI 很小巧，源码清晰易懂，但是我还是推荐 yii2", "不知道 laravel 有什么不好， 貌似楼主网速不好", " lumen 一堆坑，这个产品就是从 laravel 脱胎出来对标 slim 的\r", " 对于初学者，建议从 codeigniter2 入手， ci3 没有用过不知道情况。如果愿意折腾，可以试试 slim ，这个框架极其简单，基本就是个 router + composer", "楼主真正需要的其实是: DEDECMS ，逃 2333 ）", "CI", "Smarty CI", "CI 不二之选", " Flight + medoo 做过好几个小应用哈", "推荐 laravel 的是咋想的？哈哈", "composer", "Yii2", "30 楼+1,但我更推荐 CI,最低可以直接部署到虚拟主机上", "与什么重不重的？你又不天天背着", "曾经用过的一个 Micro Framework\r", "Fat-Free （ f3 ）\r", "Link: ", "\r", "\r", "用它打造过某知名产品", " 哈哈，我也在用这个，还以为没多少人用", " 看你怎么定义\"重\"的概念了.\r", "\r", "框架占用内存? 这个无所谓了吧, laravel 每次加载多占用的 5-6MB 内存对当前的服务器环境来说,就不是个事, 如果加上 PHP 的编译缓存的话, 就更不是个事了.\r", "\r", "新建业务逻辑麻烦? laravel 又不是 Struts,不用写一大堆的 xml 定位文件,算得上轻便吧\r", "\r", "上手轻便不? laravel 的中文文档应该不少了.\r", "\r", "安装要用 composer 太麻烦? 现在的主流 PHP 框架都是用 composer 安装的吧?", "yaf", " 选择 f3 的时候还是个很古老的版本，只有 core orm 。", "SpeedPHP   500 行核心代码，全栈 MVC        YY 公司大牛，在内部已经广泛采用\r", "\r", "SpeedPHP 精致到我们可以定制相关的功能，非常灵活   ", "你需要了解 composer 到底是干什么的", " 是，如果从这个角度来讲，那怎么说都是！如果这样的话， yii2 也不失是一个好的选择。但 LZ 的所述是 对 PHP 不熟悉，想小巧 还得基本功能都有的。。。我估计，一个 composer 就整迷糊他。", "为啥要用小而巧的框架呢？安全可靠性能高，各种组件功能都有封装的 yii2 我个人觉得很不错哦！如果是因为学习成本问题，你可以看看​​ yii2 系列的实战教程​​，写的蛮不错哒 ", " 写得挺好", "phalcon 比较轻，不过设计有点傻。", "不要用 Yii 不要用 Yii 不要用 Yii 重要的事情说三遍", " 为什么不要用 yii ，那你推荐用什么。"]},
{"content": ["<div class=\"topic_content\"><img src=\"http://ww3.sinaimg.cn/large/0060lm7Tgw1f99l2wovzoj30en01wq2z.jpg\" class=\"embedded_image\" border=\"0\">   \r<br>\r<br>OGG 格式第三次请求才开始播放。  \r<br>\r<br><img src=\"http://ww1.sinaimg.cn/large/0060lm7Tgw1f99l2whrv5j30ef00nmx0.jpg\" class=\"embedded_image\" border=\"0\">   \r<br>\r<br>MP3 格式直接播放，只有一个 HTTP 请求。\r<br>\r<br>\r<br>这是啥原因？</div>"], "reply": "3", "tittle": "为什么 Chrome 使用 OGG 格式的音频会多两个 HTTP 请求？而 MP3 格式就正常", "comment": ["（不是 JS 和网络问题，只要是 OGG 格式就是 3 次请求）", "因为返回了 206", "跟 decoder 有关，先 header 后 stream"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我现在的情况是这样的，光猫 - 路由 - 其它设备</p>\n<p>光猫里的 WAN 信息是：</p>\n<p><img alt=\"\" src=\"http://ww2.sinaimg.cn/large/801b780agw1f994w06yaqj21680bwjug.jpg\"></p>\n<p>我用 ip138 查我的 IP 确实是 180.155.228.239 这个</p>\n<p>然后我的路由信息是：</p>\n<p><img alt=\"\" src=\"http://ww3.sinaimg.cn/large/801b780agw1f994wwtjakj20j207uaam.jpg\"></p>\n<p>我在光猫里配了 DMZ 给路由：</p>\n<p><img alt=\"\" src=\"http://ww1.sinaimg.cn/large/801b780agw1f994xblnxhj20y60cktab.jpg\"></p>\n<p>但是依然有几个问题：</p>\n<ol>\n<li>我通过 http://180.155.228.239 访问到的是光猫而不是路由</li>\n<li>据其他朋友反应 http://180.155.228.239 并不能访问（也就是说只有我在内网才能用？）</li>\n<li>路由依旧无法使用 DDNS</li>\n<li>既然路由没有 DDNS ，那基于路由配置的 WOL 等功能，以及 ssh 家里电脑等功能，通通不能用了</li>\n</ol>\n<p>求助要怎么才能正确使用让自己在外面的时候能访问家里的电脑进行操作？</p>\n</div></div>"], "reply": "34", "tittle": "求助关于路由 DDNS 和 WOL 之类的问题", "comment": ["路由器 wan 防火墙规则 80 开了吗？ 也就是是否允许原厂访问控制台是否开启？", "前提是你要有外网的 ip ，而不是通过运营商 nat 后上网的。", "在光猫里设置 wan 桥接模式 禁用 DHCP 用路由器拨号", " 完全找不到开的地方……", " 电信直接不给拔号功能，路由只有 DHCP 可以用……", " 从 IP 上来看光猫拿到的应该是公网 IP", "让路由器拨号不就完了。", " 连光猫都不是拔号的……", " 你光猫是第三列是路由模式。", "光猫本身的 80 端口有服务，那应该就不会被转发到路由器上了吧。\r", "\r", "你的光猫支持端口映射吗？", "80 端口别想了。\r", "还有你这是刷的话说华硕固件吧？", "443 是默认跳转到 AiDisk\r", "https 在华硕固件里默认是 8443 ，所以……那样访问就 OK 了。", "我刚好能回答这个问题，我的配置和楼主基本一致。\r", "首先，访问 80 端口不行，是因为国内民用运营商封了 80 端口（可能还有其它 25 之类的），但是 443 和 22 还有其它的端口都没有封。\r", "其次，访问 ip 到了路由页面是正常现象，我一开始配置的时候也是这样，后来不知道怎么着就不是了……\r", "首先你得测试你的 DMZ 是否成功。将 ip 指向一个可控设备，例如你的电脑，然后确定你电脑上的某个端口开着（例如 22 ），使用外网工具比如 ", " 测试端口是否开放了，若开放则 DMZ 没有问题。\r", "接着是 DDNS 的问题，对于这种配置无法使用路由自带 DDNS ，你只能用一个类服务器的玩意，比如你每次开电脑更新，或者有个树莓派之类的玩意，让他来获取外网 ip 并更新 DNS 记录，这样才可以。\r", "还有什么问题可以继续问。", " 我现在在光猫上 DMZ 设置给了路由，在路由上 DMZ 设置给了 NAS ， NAS 的端口 5000 能在内网访问，但是用光猫里拿到的 WAN IP 访问不了，看起来还是没成功？而且错误还是 503 而不是 404 啥的……", " 你确定你 5000 端口的 vhost 没设置错吗？", "你目前这种情况需要改光猫为桥接模式。\r", "这边有几个教程不知道对你有没有帮助\r", "\r", "光猫改成桥接、绑定一个 LAN （ 1~4 随意），路由器 WAN 接该端口并设置 PPPoE 拨号。然在才可以在路由器上做 DMZ 或者 Port Forward.", "另外光猫上的端口转发和 DMZ 大多是无效的，起码在我这的中兴 F460 上设置后无效。\r", "改成桥接模式后 光猫充当光电转换，不具备路由功能。\r", "相对于你的内网来说少一层 NAT", " 厄，我对网络通信一点不懂，甚至听不懂 vhost ……我就是开了 2 个 dmz 然后用 IP:5000 访问无效，也就不积善成德怎么办了……", " 我的猫不是拔号的，猫也是 DHCP 拿的 IP ，加上桥接以后路由拿到的还是内网 IP ……", " 你的 ppp0.3 不就是拨号吗", "\r", "修改成桥接 或者新建一个桥接（记下你的 VLAN ） 只留这个， 让路由器去拨号，在路由器上完成 port forward 。", " 那你别用网络访问，用特殊的 ssh 端口试试", "curl ip.cn 看下输出的 IP 和 wan 口播放的 ip 是否一致。请先确认是否外网 ip 。", "DDNS 大部分路由应该都带有的。例如低端 TPLINK 都有，只是内嵌的 DDNS 供应商可能不适合国情。\r", "1.注册路由器内嵌的 DDNS 供应商帐号\r", "2.刷梅林、 openWRT 之类的智能系统\r", "3.另外开一台机器搭建 Ngork 之类的穿透类应用映射 or 搭建 openVpn\r", "4.找一台有固定 IP 的服务器 or vps 开 SSH 隧道反向代理映射", "对了，友情提醒下， DMZ 映射主机建议还是不要这么玩。\r", "随时都有人在按网段批量自动扫描一些关键端口，一旦你 DMZ 的某端口有入侵可能，它会无限暴力破解（类 DDOS ）\r", "导致你家用网络带宽被跑满。", "破解猫，或者打 10000 号要管理密码，然后改桥接，由路由拨号", "按理说是存在宽带账号和密码的，但是看光猫又不像是拨号，如果是光猫自动获取配置，但是仍然存在宽带账号密码，这个就很简单了，找电信取消光猫的路由功能，理由就是我要外网访问我家里的监控之类的理由，取消路由之后用自己的路由拨号那问题就解决了。如果不能用这个方法解决，其实还是有办法的，电脑上装个 teamviewer 远程控制就行了， windows/linux/os x 都可以用。最后，不建议 dmz 。", " DMZ 是 DMZ 到路由不是 DMZ 到机器吧。", " 我有猫的管理员密码，但是因为猫不是拔号的，所以一直没成功改成桥接……", " 我用 curl ip.cn 拿到的 IP 能访问到我的光猫，但是路由及家里其它设备依旧没办法访问（哪怕开了 dmz ），看上去光猫的 dmz 并没有用？", "tr069 先删了,不然改什么都会远程给你改回来", " 不能删，删了固话可能会没用", " 打 10000 号，申请把拨号方式改为路由器拨号模式（桥接模式？反正就是改为路由器拨号上网，不走光猫拨号）。这样访问 curl ip.cn 返回的 ip 就直接到路由器了。"]},
{"content": ["<div class=\"topic_content\">我在 Mac 上解决的，其他系统不保证可以用\r<br>\r<br>1. 在 vimrc 中添加  Plugin 'ybian/smartim' 配置\r<br>并用:PluginInstall 命令安装\r<br>\r<br>2. 下载 vimim.vim  并放在 ~/.vim/plugin/ 中（不需要任何词库）\r<br>\r<br><a target=\"_blank\" href=\"http://www.vim.org/scripts/script.php?script_id=2506\" rel=\"nofollow\">http://www.vim.org/scripts/script.php?script_id=2506</a>\r<br>\r<br>3. 启动 vim ，按下 \"ctrl + shift + -\"，启动 INSERT (lang) 模式\r<br>\r<br>4. command + space 启动搜狗\r<br>\r<br>好了，你可以使用搜狗拼音了，并且按下 esc 键回到 normal 模式时，可以正常使用 vim 命令，无需切换输入法。\r<br>\r<br>当你进入 insert 模式时，自动启用搜狗拼音。\r<br>\r<br>本来我懒得发这个帖子的，但是一想我是个好人，就发了~</div>", "<div class=\"topic_content\">我后来在多个电脑上尝试，有些可以，有些不可以，可能和输入法的配置有关系，也可能和系统某项配置有关系，暂时没有发现原因</div>"], "reply": "14", "tittle": "解决了在 vim 写中文文档时，无需频繁切换输入法，同时使用搜狗拼音", "comment": ["搜狗不是按一下 shift 键就可以切换中英文么。。。", " 是的挺蛋疼的", " 每次的 shift 来回切换不麻烦吗？", "额， 看错了", "用鼠须管输入法配置一下完美解决。", "arch linux wiki 大法好\r", "\r", "按上面说的安装 vim-fcitx 包就行了", "搭车问一下， vim 中无法输入中文是怎么回事\r", "vim 8.0.46\r", "fcitx 4.2.9.1", " 在终端里运行 fcitx-diagnose 程序，检查输出。", " 好吧， fcitx-diagnose 没看出什么名堂，但是在论坛里搜到了解决方法了 ", " ", "不是有个 smartim.vim ？比你这个更省心", " 只用 smartim.vim 的话，在用 esc 退出 insert 模式时，需要等待大概 2 秒才能关闭输入法，我这边是这样子的。。。", "几行代码就搞定的事情，非要用插件，我也是醉了", " 求你的几行代码，我先感谢！", " 延迟问题通过 control+[ 解决\r", "（日后 mbp 也没了实体 esc 键）🌚"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>主路由刷了 tomato 固件,开启了 dnscrypt-proxy firewall 开启了 Respond to ICMP ping</p>\n<p>副路由是 r7000,官方原版固件 最近老是出现 DoS attack: Smurf 和 Self2WAN ICMP type b Detected!</p>\n<p>帖上部分日志</p>\n<p>[DoS attack: Smurf] attack packets in last 20 sec from ip [27.187.118.255],Saturday, Oct 22,2016 14:57:33</p>\n<p>[DoS attack: Smurf] attack packets in last 20 sec from ip [27.187.118.255],Saturday, Oct 22,2016 14:57:12</p>\n<p>[DoS attack: Smurf] attack packets in last 20 sec from ip [218.88.26.255], Saturday,Oct 22,2016 14:56:11</p>\n<p>[DoS attack: Smurf] attack packets in last 20 sec from ip [218.88.26.255], Saturday,Oct 22,2016 14:55:50</p>\n<p>[DoS attack: Smurf] attack packets in last 20 sec from ip [218.88.26.255], Saturday,Oct 22,2016 14:53:32</p>\n<p>[DoS attack: Smurf] attack packets in last 20 sec from ip [218.88.26.255], Saturday,Oct 22,2016 14:53:10</p>\n<p>[DoS attack: Smurf] attack packets in last 20 sec from ip [218.88.26.255], Saturday,Oct 22,2016 14:51:29</p>\n<p>[DoS attack: Smurf] attack packets in last 20 sec from ip [218.88.26.255], Saturday,Oct 22,2016 14:51:08</p>\n<p>Self2WAN ICMP type b Detected!] To prevent from revealing router's activity, this packet is drop Saturday, Oct 22,2016 14:16:56</p>\n<p>[DoS attack: Smurf] attack packets in last 20 sec from ip [61.167.151.255],Saturday, Oct 22,2016 13:55:03</p>\n<p>[DoS attack: Smurf] attack packets in last 20 sec from ip [61.167.151.255],Saturday, Oct 22,2016 13:54:42</p>\n</div></div>"], "reply": "4", "tittle": "这是什么攻击?", "comment": ["smurf 攻击\r", "\r", "应该是 r7000 的防火墙拒绝了", "我来献丑了，刚学的。这是 smurf 攻击，对你整个 network 进行 directed broadcast ，假设你的 IP 是 C 类 IP 地址， 218.88.26.X ，就对这个 IP ： 218.88.26.255 发送 broadcast ，然后整个 network 里所有主机都会收到这个广播了。因此路由器由于安全原因是默认 drop this type of broadcast traffic 。\r", "\r", "这是 DDoS 攻击的一种。\r", "\r", "刚在看 CCNA 的教程，如果有错，请指正！", "\r", "thanks a lot!原来是广播到整个网络了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>目前国内做线上技术培训的不在少数，知名的也有很多，但是基本都是大而全的，而且定位大都是初中级水平，半年前和几个做技术的朋友计划搞一个面向中高级水平的线上培训，因为我自己做 Ruby 有近 10 年了，因此我们的定位就是 Ruby, Rails 和 Web 开发方面的，模式就是采用类似于 railscast 的方式，定期推出视频课件，有付费和免费的，以后的内容会扩展到 mongodb ， erlang 和 react 。</p>\n<p>我们的项目最近上线了 <a href=\"http://eggman.tv\" rel=\"nofollow\">http://eggman.tv</a> 蛋人网，目前里面主推的有两个大课程，一个是 Ruby 高级开发，一个是 Rails 高级开发，都相对全面和深入的讲解了 Ruby 和 Rails ，以后每周会定期推出新的技术视频。</p>\n<p>程序员创业，希望大家能多多支持提意见，有想法的朋友也可以联系我 mytake6@gmail.com</p>\n</div></div>"], "reply": "21", "tittle": "关于 Ruby 的线上视频培训", "comment": ["不错", "挺好的，支持！！！\r", "不过几年前我也非常热爱 RoR （当 Ruby 很火的那个年代），不过逐渐的，特别是近 2-3 年， Ruby 淡下去了，快速开发用 PHP 或 Ptyhon Django 的更多， Java 也出现了很多类 RoR 的框架，快速应用开发效率也有很大提高，感觉 Ruby 优势不那么明显了呢。", " 这几年确实增长没有那么快了，不过使用的公司和团队还是比较多的，看看 ruby china 的招聘区就知道了", "这么小众的语言。。。感觉你们的客户培训完不好找工作啊。\r", "前几天某招聘 APP 搜帝都 Ruby 的工作，只有 78 个结果。\r", "至于为啥我搜这个东西，是因为我那傻逼舍友培训完至今没找到工作(他实力不行是主要原因，没有鄙视 Ruby)", " ruby 的话是我们目前主推的，以后会有其它方面的，比如 mongodb ， react, erlang", "做小众语言培训，需要支持", "其实创业公司小型团队真心觉得 RoR 的成本好低好低，好快好快。\r", "还有那啥。搞 RoR 如果英语稍好一点，很容易找到远程开发的职位，😄😄", "ruby 的确挺小众的", "我想问的是面向初中级的视频培训、付费培训网站有哪些呢？", "eggman 英文不错，和 egghead 异曲同工，但是中文蛋人就有点蛋疼了，蛋哥会不会稍微好点", " 呵呵，其实我们是先想的中文名字也后定的英文名字，当时想中文名字时定位就是想胡逼点，不要那么正式，以后我们会推出比如程序员采访此类的视频，走胡逼恶搞的风格，当然技术类的视频都是严谨装 B 的，都是搞程序的，何必整天那么学院派呢，这是我们理想的发展方向", " 目前我们里面 ruby( ", " rails( ", "已经用了三年 RoR,关于 ruby 培训确实很少，支持一下", "强烈支持，虽然我是做 python 和 java 的，但是心里却一直心水 ruby", " 支持 brogrammer", "有朋友问关于 Ruby 和 Rails 的课程，下面简单说几句，\r", "\r", "rails 和各种 gem 再深奥也是基于 ruby 的灵活的，这个大家可以看下 Ruby 课程中讲解 class 和 module 的相关的几节课，相信会对理解 rails 的源码有帮助；目前的课程中尤其是 rails 的大课程中我们并没有采用第三方的 gem 来完成演示项目的功能，除了分页的采用的是 will_paginate 之外，其它的都是 rails 默认依赖的 gem ，目的就是想原生的来给大家讲解怎么手工实现一些基础的功能，用 gem 的话几步就搞了，达不到培训的目的；当然以后我们肯定也会专门有课程给大家讲 gem 的使用，毕竟公司更在乎的是效率。\r", "\r", "基础方面的内容 ruby 估计以后不会再有基础方面的课件了， rails 的话应该还有，目前大家可以参考 ", " 和 ", " 这两个系列课程，都是从 ruby 和 rails 的基础开始说的，比较全面，我相信即使你有多年 ruby/rails 使用经验，也能有新的收获，不过还是需要你有其它编程语言的基础，我们总体课程以后的发展计划是基础的只会有 20%不到的比例。\r", "\r", "以后我们会有专门的系列课程来分析 rails 和各种设计比较好的 gem 的源码，敬请期待。\r", "\r", "另外给使用 rails 或者其它框架的同学一些建议，一定要静下心来把 ruby 系统的好好学习一遍，理解透，这样你在 rails 或者各种 gem 中就能得心应手。", "我们的微信公众号: eggmantv 或者在公众号中搜索“蛋人网”，会推送课件的更新消息，欢迎关注", "已经关注了，课程更新挺快的啊", " 嗯，现在起步阶段，更新的快", "我们 Rails 5 源码分析的课程也开坑了，欢迎大家提意见 ", "虽然我们定价本身就不高，但是还是有不少朋友发邮件问今天有没有优惠，于是我们就有了，今天视频课件订阅 9 折，多谢支持"]},
{"content": "", "reply": "15", "tittle": "腾讯/阿里这样拥有大量用户的站的用户数据是如何存储的呢 是 mysql 主从多备+均衡负载吗", "comment": ["不是这么简单的架构能解决的", " 如果了解的话。。能大致说一下嘛", " ", "这么大的并发量，用 MySQL 分分钟爆炸", "MySQL5.7 出了多线程强一致复制功能, 对于做集群很有用.还有说用 MySQL 做并发的会爆炸.网易的集群系统全都是 MySQL.用 MySQL 硬件配置一定要跟上, 比如 Oracel 通过阵列的构架, IOPS 可以到达很高, 那么用 MySQL 就必须得用 SSD 硬盘, 来让 IOPS 到达和 Oracel 一样, 而不是还用磁盘, 然后说瞧 MySQL 就是比 Oracel 慢, 垃圾.", "严格来讲，网易用的并不是原版 mysql 。我记得以前在书店看过一本 mysql 优化的书，网易 DBA 写的。这些大公司对数据库的优化研究深入到源码级别，尤其对 mysql 这种开源数据库来讲，使用的都是自己修改以后重新编译的版本。", "高性能机器+分库分表+mysql 内部优化\r", "这样支撑个百亿级的宽表都没啥问题", "微信的\r", "腾讯有分布式引擎 tspider", "微信有一套单机 KV+Paxos 的存储： ", "单就用户资料来说水平扩展还是很方便的， mysql 完全可以胜任，而且很多公司都会对源生 mysql 做改造，例如腾讯的 cdb ，单机性能比源生的就高很多。微信的那套东西是解决分布式环境下的强一致性问题，用户资料这块没有太多强一致性的问题~", " 用 AliSQL + x86 服务器", "分库分表 -> MySQL 集群 -> PetaData ，数据库中间层 -> 读写分离，冷热数据分离 -> MySQL + HBase -> OceanBase ，大数据 -> Hadoop -> ODPS(MaxCompute)", "只讨论有多少用户多少 qps, 不讨论用了多少台机器来抗的, 都是耍流氓", "腾讯内部有大量的基础组件，绝大多数业务并不会使用 mysql ，比如游戏业务基本上就不怎么会用 mysql 。少部分业务使用的，比如计费方案也比较复杂"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h2>大概几十万个一级域名，想要根据域名来给网站分类，如何做到啊？</h2>\n<p>举例， <a href=\"http://www.baidu.com\" rel=\"nofollow\">www.baidu.com</a> ，那就分为搜索网站， <a href=\"http://www.jd.com\" rel=\"nofollow\">www.jd.com</a> ，分为电商网站，以此类推。。。。。。</p>\n</div></div>"], "reply": "15", "tittle": "根据域名来给网站分类，如何办法", "comment": ["目测只能手动\r", "机器不大可能知道你的那个域名是什么网站\r", "而且不确定你的那几十万个域名是不是可以访问的", "这个没办法吧，除非有网址库", "这叫根据域名?难道这不叫根据内容?", "可不可以根据域名对应网站的 description 或者 keywords 来做分类", "只根据域名无解 还有多少个数字网站呢", "没有办法", "采集域名 alexa 数据， alexa 有分类", "3721 能做到吧...", "只能机器学习了？", "采集这些域名的主页，\r", "如果可以，采集主页上的链接页面的内容。\r", "然后 TF-IDF 算法简单算一下，分成几类之后，就可以看看每一类大概是什么内容了。数据挖掘自动化分类的范畴。", "比如万一碰到 ", "\r", "是放到搜索？ COSPLAY ？成*人？计量？还是社交类域名？\r", "如果代码会说话，一定会告诉你：“不要搞事情。”", " 事实上，还真有一个这样搞事的网站 baidu.wf", " 世界之大，无。。。。", " 此乃神人也", " 一天到晚搞事情"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h1>我来微软这半年</h1>\n<p>作者：<a href=\"https://github.com/xcatliu\" rel=\"nofollow\">xcatliu</a>。</p>\n<p>转眼间已经离开美团，来到微软半年了。</p>\n<h2>背景</h2>\n<p>在刚加入微软的时候，我打算过了一个月就写个月度总结。结果一个月后，发现啥都不懂。</p>\n<p>于是想再过一阵子来写个季度总结吧。结果一个季度后，感觉对业务还是一知半解。</p>\n<p>于是想再过一阵子来写个半年总结吧。现在半年过去了，总算有点话可以说了。</p>\n<h2>第一印象</h2>\n<p>慢——这也许就是我对微软的第一印象吧。</p>\n<p>加入微软之前，我已经有过心理准备，也听说过微软的节奏比较慢。但是不是亲身经历的话，是无法有这种体会的。</p>\n<p>在美团，我带的团队曾经一个多月就完成了包括 iOS 和 Android 的一个完整的 Hybrid 项目。</p>\n<p>在微软，这几乎是不可能的事情。</p>\n<p>做一个 Feature 之前，需要对各个方面进行审核：</p>\n<ul>\n<li>是否合规</li>\n<li>搜集了用户隐私吗</li>\n<li>需要对哪些用户开放</li>\n</ul>\n<p>开发的过程中，需要先进行 Dev design ，也需要考虑一些以前从没考虑过的问题：</p>\n<ul>\n<li>Accessibility ，对于残障人士友好，需要保证在高对比度下可用，对视力障碍的人可以直接听到等</li>\n<li>Globality ，有的国家是从右到左的阅读习惯，有的语言即使表达一个词语，也会有很长的字符</li>\n<li>各种各样的测试，测试的种类太多了，我会在将来再单独分享</li>\n<li>代码 Review 非常严格，给我 Review 代码的同事都看的非常认真</li>\n</ul>\n<p>为了保证一个 Feature 顺利上线，各种措施也不会少：</p>\n<ul>\n<li>配置化的开关，可以通过配置快速的控制一个 Feature 的开关</li>\n<li>灰度上线，保证不影响其他流程的数据</li>\n<li>数据分析，了解用户对于新 Feature 的接受程度</li>\n</ul>\n<p>每一项执行下来，几个月就过去了。</p>\n<p>慢只是表象，认真严谨和对用户负责才是实质。</p>\n<h2>工具化和自动化</h2>\n<p>在微软，工具随处可见：</p>\n<ul>\n<li>办公有 Office 全套</li>\n<li>写代码有 Visual Studio ，和专用的 Review 工具，合并工具，全局搜索工具</li>\n<li>知识积累有 Wiki ，问答</li>\n<li>其他的比如 IT 和 HR 等系统都非常专业</li>\n</ul>\n<p>自动化也很完备：自动测试，自动部署，报警电话和邮件等。</p>\n<p>虽然我已经来了半年了，但是感觉仍然只接触到了凤毛棱角。</p>\n<h2>技术</h2>\n<p>首先，下面这段只表示我在我所在的团队看到的技术，不代表其他团队也是这样。</p>\n<p>其次这是我在短短半年接触到的，不一定准确，也不代表将来不会有新的技术。</p>\n<p>最后，这只是我的个人看法，与其他所有个人和组织都无关。</p>\n<p>作为一个前端，我必须得说，这里并不适合追逐新技术的人才。</p>\n<p>下面就把「<a href=\"https://www.v2ex.com/t/310767\" rel=\"nofollow\">在 2016 年学 JavaScript 是一种什么样的体验？</a>」中的大部分技术都列举一遍吧：</p>\n<p>没有 jQuery ，没有 React ，没有 ES2016 ，没有 AMD ，没有 CommonJS ，没有 Browserify ，没有 npm ，没有 Bower ，没有 Angular ，没有 Grunt ，没有 Gulp ，没有 Webpack 。</p>\n<p>有 TypeScript ！</p>\n<p>没有 Ramnda ，没有 Fetch ，没有 Promise ，没有 await ，没有 async ，没有 Flux ，没有 Redux ，没有 KnockoutJS ，没有 Handlebars ，没有 Mustache ，没有 underscore ，没有 Lodash ，没有 Jade ，没有 EJS ，没有 Elm 。</p>\n<p>没错，大部分新技术这里都没有。只有一个自己写的基础库，实现了 DOM ， Ajax 等一些常见的操作。</p>\n<p>为什么不用一些新技术呢？我觉得是为了追求稳定性吧。</p>\n<p>为什么不用 jQuery 呢？因为自己的基础库比 jQuery 更高效。</p>\n<p>可以使用开源库吗？可以，但是需要报备它的开源协议。</p>\n<p>关于新技术的讨论已经很多了，这里我只列举我所看到的现象，如何评价请见仁见智吧。</p>\n<h2>福利和文化</h2>\n<p>外企的福利大家应该听说过了，这也是最值得炫耀的部分了：</p>\n<ul>\n<li>水果、点心、酸奶、牛奶、茶、咖啡等</li>\n<li>不打卡，年假 15+ 天</li>\n<li>健身房，按摩椅，各种健康讲座</li>\n<li>家庭日活动，相信带小孩去玩过一次的话，你想跳槽你的小孩也不同意了</li>\n</ul>\n<p>文化也是我比较关注的方面。</p>\n<p>首先，这里比较注重个人隐私，一般很少会突然出现一个人站在背后来找你。开会也会提前很久通知。</p>\n<p>其次，大家都倾向于能够书面交流就不口头交流，一方面是不打扰到对方一方面是可以留下凭据。</p>\n<p>因为大多数都是结婚有小孩的，所以更多的是陪自己的家人，而不是和同事一起玩。</p>\n<h2>英语</h2>\n<p>为什么英语要单独说呢，因为我的英语比各位都差（四级刚刚过，六级没过）。</p>\n<p>刚来的时候，邮件是英文的还好，可以慢慢读。然而开会和讨论项目都是英文，着实难受了好一阵子。</p>\n<p>其实听英语还好，说出口实在太难了。</p>\n<p>只好慢慢练习慢慢融入，现在基本可以交流了。</p>\n<p>要说诀窍，那就是敢说。外国人并不在乎你说的流不流畅，只要你能让他听懂你的意思就行了，所以可以用肢体语言辅助吧，说英语并不是那么难。</p>\n<h2>业余积累</h2>\n<p>来微软之前，我就对自己说，一定要利用好自己的业余时间，把之前的坑都慢慢填上。</p>\n<p>可是没想到坑却越来越多了，看来以后得加倍努力了！</p>\n<p>这是我来微软后业余做的一些事情：</p>\n<ul>\n<li>加入了 <a href=\"https://github.com/xcatliu\" rel=\"nofollow\">Microsoft organization</a></li>\n<li>持续的更新 <a href=\"https://github.com/xcatliu/jekyllcn\" rel=\"nofollow\">JekyllCN</a></li>\n<li>给 <a href=\"http://live.nodejs.org\" rel=\"nofollow\">live.nodejs.org</a> <a href=\"https://github.com/nodejs/live.nodejs.org/pull/43\" rel=\"nofollow\">加入了多语言支持</a></li>\n<li>持续的更新 <a href=\"https://github.com/xcatliu/react-ie8\" rel=\"nofollow\">React IE8</a></li>\n<li><a href=\"https://github.com/ruanyf/es6tutorial/pulls?utf8=%E2%9C%93&amp;q=is%3Apr%20author%3Axcatliu%20\" rel=\"nofollow\">给阮一峰的《 ECMAScript 6 入门》提了十多个 pull request</a></li>\n<li>开始写一本书<a href=\"https://github.com/xcatliu/from-javascript-to-typescript\" rel=\"nofollow\">《 From JavaScript to TypeScript 》</a></li>\n<li>写了<a href=\"https://www.v2ex.com/t/289667\" rel=\"nofollow\">几个 Hexo 的插件</a>和<a href=\"https://www.v2ex.com/t/288151\" rel=\"nofollow\">一个 Hexo 的主题</a></li>\n<li>开源了 <a href=\"https://github.com/xcatliu/mobi.css\" rel=\"nofollow\">Mobi.css</a>，一个轻量灵活的移动端 CSS 框架。并<a href=\"https://www.v2ex.com/t/304129\" rel=\"nofollow\">在 7 天内获得了 600 个 Stars</a></li>\n<li>组织<a href=\"https://github.com/xcatliu/yarnpkg-website\" rel=\"nofollow\">翻译 Yarn 文档</a></li>\n</ul>\n<p>欢迎一起来开源！</p>\n<p>对了，听说马上 MacBook Pro 要出新品了，等了大半年，终于可以剁手了！</p>\n<h2>FAQ</h2>\n<h3>1. 这是一个招聘贴吗？</h3>\n<p>显然不是，我还没到那么高的级别可以负责招聘。不过如果感兴趣可以给我发邮件，邮件地址自己去找吧。</p>\n<h3>2. 你当初为什么会离开美团加入微软？</h3>\n<p>主要原因是想去大外企看看，次要原因是晚餐可以去女朋友学校吃了，很方便卫生。</p>\n<h3>3. 面试内容是什么？难吗？</h3>\n<p>主要面算法，大概在 LeetCode 简单或中等难度，我面试前也刷了一百多道题，所以问题不大。</p>\n<p>这是当时刷的题： <a href=\"https://github.com/xcatliu/leetcode\" rel=\"nofollow\">https://github.com/xcatliu/leetcode</a></p>\n<hr>\n<p>如果有其他问题，也可以留言。</p>\n<p>更多关于我的介绍，可以看<a href=\"https://github.com/xcatliu\" rel=\"nofollow\">我的 GitHub</a>。</p>\n</div></div>"], "reply": "184", "tittle": "我来微软这半年", "comment": [" 中国的 IM 好像说是得留档 3 年", "可能类似微信的说法，“我想说明的是许多号称毫无兼容性问题的反射框架，在微信 Android 数亿用户面前往往都是经不起考验的。”", "凤毛麟角...", "有同学在西雅图总部，大公司福利很好，呆久了感觉没动力冲劲", "楼主名字让我不禁联想起一个开发了特殊用途协议的人。", "楼主的 blog 打开好慢！", "为啥这么严格的流程 windows 10 的 bug 还是那么多？\r", "那个锁屏后不能登陆的 bug 至今还在", " 对的", " 应该是因为没有测试团队的原因？", "写的不错，赞一个～～！", " \r", "Windows 的很多 Bug 都事因为现有的用户反馈机制不足以提供较为完善支撑。\r", "但是这个 Bug 在前几版应该已经修复了。\r", "\r", "我觉得类似问题源于对用户体验的考虑还不到位， Windows 作为 Microsoft 的主要产品更新迭代速度较快， MS 没有在用户体验优化等类似问题上投入足以与之匹配的精力。", " @", " @", " @", "\r", "> 为什么 windows 10 的 bug 这么多？\r", "\r", "这么多人都反馈了，看来 windows 10 的 bug 真的很多。还好我不是做 windows 10 的，不然要被喷死了。。。\r", "\r", "在 Start 里面搜索 Windows feedback 应该就有反馈入口，大家可以去反馈一下。", " \r", "> 你们都用什么手机啊\r", "\r", "据我观察，周围有一半以上都是 iPhone ，剩下的是 Android ，很少有 WinPhone", "我只想问，微软真的工作强度很小吗？我甚至听说一天真正干活的只有两三个小时", " @", " \r", "询问所在部门和女朋友学校的我就不公开回答啦，可以邮件私下交流", " @", " @", " @", " @", " @", " @", " @", " @", " @", " @", " @", " @", " \r", "\r", "谢谢支持！", "\r", "\r", "看了楼主对 `es6tutorial` 中的贡献, 19 个 pull request, 其中 13+ 是代码风格调整(空格, 缩进, 尾部加 ; 号).\r", "而且基本是改一个文件, 提交一个 pull reuqest, 这是在刷数量吗?", " 已 follow ， underscore 源码解读很棒！", " \r", "很负责的告诉你，我不是在刷数量。\r", "\r", "是因为我在写《 From JavaScript to TypeScript 》的时候参考了《 ECMAScript 6 入门》，他的每一章我都阅读了很多遍，顺手就帮改了代码风格和排版风格，基本上都是遵守他前面几篇的风格。\r", "\r", "为什么要每篇文章提交一个 pull request ，是因为我都是用碎片时间帮忙修改的，所以没有整体提交一个 pull request 。\r", "\r", "另外我提了第一个 pull request 之后，被阮一峰 merge 了并且感谢了，所以我才会继续帮忙修改。\r", "\r", "大多数 pull request 都被 merge 了，我相信应该是对他有帮助的。", "不错。", " \r", "> 招聘有什么硬性要求么\r", "\r", "招聘的硬性要求应该 LinkedIn 和微软官网上都有，你可以去找找。", " \r", "> 在微软上班可以用苹果电脑？\r", "\r", "据我观察，一些设计师是用苹果电脑。", " blog 还没有时间更新，应该会在我写完一个新主题之后更新~欢迎关注！", "厉害，能去微软\r", "羡慕，有女朋友", "哈哈哈，你确定这么写不算泄密？", "福利制度欧美企业都差不多，更新迭代慢很大程度上要保证全球所有开发基于统一标准和系统。", " \r", "> 我只想问，微软真的工作强度很小吗？我甚至听说一天真正干活的只有两三个小时\r", "\r", "这是一个好问题。我来之前也听说微软很闲。但是来了之后发现并不是相信中的那样。\r", "\r", "有的人来得早走得早，得去接孩子。\r", "有的人来的晚走得也晚，我就是这种，偶尔我晚上十点走了还有人在工作。\r", "\r", "虽然不打卡，但是每个人都很认真。\r", "\r", "至于每天到底有多长时间是在真正干活，那只有自己知道了。\r", "\r", "自己的时间，对自己负责。", " \r", "\r", "嘘。。。\r", "我写完后检查了几遍，应该没有很敏感的内容，只是在分享我自己的体验。", "看标题差点以为是垠神离职后的日常...\r", "\r", "看样子福利待遇不错,帮顶,挂机好地方.", " 羡慕当老师的，寒暑假，教师子女直接入学", "赞一个", "慢，其实就是微软把 wp 系统和手机做死的主要原因了，也是操作系统成功的原因，现在是该快手机的不快，该慢的系统又太急于求成", "赞", "欢迎同事，哪个 team ？", "给楼主赞一个", "赞啊，非常羡慕，话说能带 MacBook pro 码代码吗，哈哈", " 谢谢，好彩没脑抽更新", "貌似 win10 预览版的 wininet api 有问题了", " @", " @", " @", " \r", "感谢支持！", " 哈哈，你们误会了，女朋友还在上学呢", " 咱们可以私下交流哈，邮箱可以在我 GitHub 上看到 ", " \r", "> 话说能带 MacBook pro 码代码吗\r", "\r", "虽然没有明文禁止，但是感觉还是不要这样吧。。", "二十分钟前刚面完微软校招，自我感觉没戏，点开 V 站就看到楼主这么个主题", "微软的有些项目也用 JQuery 的", "楼主你们码代码都用啥笔记本\r", "都是苏菲?", "> 为什么不用一些新技术呢？\r", "\r", "因为微软不关注前端，在前端不是领先的公司，是不及 BAT 甚至二线互联网公司的，而不是稳定性等等 :P", "其他的不聊，就好奇 po 主是如何在工作之余勾搭到妹子的（逃。。。。", "楼主是不是武汉人啊？", "麻烦楼主改一下：凤毛棱角-》凤毛麟角，请原谅强迫症的任性。。。", "我想知道现在是不是没有测试了？", " \r", "不一定没戏，没戏了也可以有其他更好的机会，加油！", " 用台式机", "雾草好长的贴，先 mark", " 说得好！\r", "不过微软在前端领域近期也有一些发展，比如 TypeScript ， Node.js on Windows ， ChakraCore 等", " \r", "不好意思让你失望了。。。毕业之前就找到妹子啦", " 是武汉人，你怎么知道的？", " 感谢提醒！可惜 V2EX 不支持编辑。。我会把在其他网站发布的内容修改过来的。", " 基本上没有，主要靠自动化测试。", " 感谢支持！", "这才是互联网从业者呀", " 那基本上就是不招测试的了 T_T", " 我只知道我们团队的情况。其他团队不是很清楚，具体的你可以在 LinkedIn 和官网的招聘信息上找找看招不招测试。", " 微软在苹果平台的项目并不少，不用 mac 难道用 xarman 第三方 vs 插件？", "其实得看吧，我在的组，大家天天自觉加班，半夜三点还有北京的同事在线（逃……", "楼主上班地点也是在北京哈？还以为你去美国呢。", " 那就不用猜了，算是告诉答案了，哈哈哈", "跟我厂工作流程差不多。", "我想说，测试种类这么多，为什么还是导致我每次摸出那个华硕的平板电脑 5 分钟之后就想砸机器，反正每次拿出来都是因为需要用 windows 干点急事，然后每次都提示我系统需要升级，升级速度又慢得要死， 1 ， 2 个小时甚至几个小时过去了，我已经放弃用它解决问题了。当下一次我又要用它时，拿出来，还在继续升级......\r", "\r", "我买了一个一直在升级，从来不干活的玩具", "很诱惑", "对于一个会全球输出的企业来说，有很多工作要做，而并不是楼主所述的慢，你当别人的工作都是在瞎搞？你举例在美团里一个月做完的项目，对红绿色盲、残疾人支持的好吗？对多语言翻译带来的布局支持的好吗？是否会出现类似“爱上一个人”这样意思模糊的内容？界面的功能、配色、网络考虑到其它国家的法律、宗教么？以前端而言，你用了一个很新的技术，然后由于某个小问题导致用户投诉，比方说在线反馈，你考虑过给人家处理这些意见的人带来多大的工作量？代码不 review 出了安全问题，对面全球海量用户基数，就是大问题。这不是慢不慢的事情。\r", "\r", "对于英语部分的描述，赞楼主一个。", "顶 lz ，当年在 ms 实习过，现在在 Amazon ，感受跟 lz 一致，除了吃的方面不如 ms ，哈哈", "仰望高端玩家。", "给 JekyllCN 翻译过一张的顶一下，现在都 600 多 contributor 了。", "微软有专门的前端部门么？好奇。。", " 开发苹果的软件应该是用的 mac 吧", " 我在北京", " 没有专门的前端部门", " 感谢贡献~", " 几个月前用 win10 的感觉，真的好蒙圈，好担心微软不行了，我这些 C#的程序员没了着落。就是我发现一个 bug,打开 windows 反馈，填写的时候突然 windows 反馈的窗口也崩了，哎。。。现在稳定多了", "OP 你好，我刚去微软苏州 onsite 了五轮，请问一般要多久有 feedback ？", " 我的情况是面试的时候基本就能打听到 boss 对我的意向，按我的经验，正式的 feedback 应该在一周内吧", " 请教一下，如果想要打探 boss 的意向，一般使用什么样的话术？", " 我面试的经验是，不需要什么话术，直接就能感觉到他想不想要你。\r", "如果感觉不出来的话，就直接问一下，您觉得我表现如何？\r", "对方是搞技术的，应该不用绕什么弯子吧", " 了解了，感谢"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h1>基于 React-Native 的高仿「 ONE·一个」</h1>\n<blockquote>\n<p><a href=\"http://www.wandoujia.com/apps/one.hh.oneclient\" rel=\"nofollow\">「 ONE·一个」</a>是由韩寒监制，原《独唱团》主创成员共同制作的一款文艺生活 APP</p>\n</blockquote>\n<blockquote>\n<p>支持设备: Android 4.1+ and iOS 8.0+</p>\n</blockquote>\n<h2>声明</h2>\n<p>该 APP 所用到的 API 均由 <a href=\"http://wufazhuce.com/\" rel=\"nofollow\">「 ONE · 一个」</a>提供，<a href=\"https://github.com/lipeiwei-szu\" rel=\"nofollow\">本人</a>采取非正常手段获取。获取跟共享的行为或许有侵犯权益的嫌疑。请您了解相关情况，并保证不侵犯<a href=\"http://wufazhuce.com/\" rel=\"nofollow\">「 ONE · 一个」</a>的利益，并遵守开源协议</p>\n<h2>项目描述</h2>\n<ol>\n<li>基于 React-Native 框架开发，能同时运行在 Android 、 iOS 环境下，实现 80%的代码复用， GitHub 地址：<a href=\"https://github.com/lipeiwei-szu/ReactNativeOne\" rel=\"nofollow\">https://github.com/lipeiwei-szu/ReactNativeOne</a></li>\n<li>到目前为止，该项目均由本人独立完成，希望能有更多的小伙伴来一起完善这个项目。实现了「 ONE·一个」绝大部分的功能点，涵盖了图文、阅读、音乐、电影四大版块，以下是功能列表\n<ul>\n<li>使用 ViewPager 跟 ListView 展示图文列表、查看往期历史图文信息、点击查看大图</li>\n<li>三种系列（短篇、连载、问答）的文章阅读以及文章音频播放，查看往期文章列表</li>\n<li>音乐故事展示、音乐播放、查看历史音乐列表</li>\n<li>最近电影信息列表、查看电影详情页面、电影预告片播放、查看剧照列表</li>\n<li>查看文章、音乐、电影的评论列表，自定义扩展 ListView ，实现上拉加载更多数据</li>\n<li>微信好友分享、微信朋友圈分享</li>\n<li>缓存 api 接口数据，充分节省流量，增强用户体验</li>\n</ul>\n</li>\n</ol>\n<h2>接口文档</h2>\n<p>请到<a href=\"https://github.com/lipeiwei-szu/ONE-API\" rel=\"nofollow\">ONE-API</a>查看</p>\n<h2>Android App 下载</h2>\n<p><a href=\"http://fir.im/reactnativeone\" rel=\"nofollow\">ReactNativeOne-Android-V0.1 下载地址</a></p>\n<h2>iOS App 下载</h2>\n<p>无苹果开发者账号, 暂时无法打包 APP, 请亲自进行编译并在模拟器或手机上运行</p>\n<h2>APP 截图</h2>\n<p>请到 <a href=\"https://github.com/lipeiwei-szu/ReactNativeOne\" rel=\"nofollow\">https://github.com/lipeiwei-szu/ReactNativeOne</a> 查看具体信息</p>\n<h2>整体思路</h2>\n<ol>\n<li>分析「 ONE·一个」 App 的业务逻辑结构，将整体业务按重要程度进行划分，安排整体开发流程</li>\n<li>在 Mac 环境下使用 Charles 软件抓包，抓取「 ONE·一个」的网络接口数据，并整理接口文档，文档地址是<a href=\"https://github.com/lipeiwei-szu/ONE-API\" rel=\"nofollow\">https://github.com/lipeiwei-szu/ONE-API</a></li>\n<li>使用官方的 Navigator 管理全局路由，可自由配置 Scene 的出场动画，处理 Android 端的后退键事件</li>\n<li>使用 FlexBox 和 jsx 语法进行布局，并封装了一系列通用的组件，比如 GridView 、带上下拉功能的 ListView 、 ImageViewer 等，便于全局复用</li>\n<li>在 Android 原生端实现音频播放功能，并导出 Native Api 给 React Native 使用</li>\n<li>导入 Video Native Api ，自定义界面并实现电影预告片的加载播放</li>\n<li>导入 GitHub 第三方库 react-native-wechat 实现图文、阅读、音乐、电影的微信分享</li>\n<li>处理了 App 加载网络数据时的各种状态，比如加载中、加载成功、加载失败、点击屏幕重新进行加载等</li>\n<li>使用 InteractionManager ，保证每个页面都在转场动画结束时才进行耗时操作，使得切换页面时不卡顿，尽量减少 View 的层级，优化渲染性能</li>\n<li>在深刻理解的前提下引入 redux 相关功能，包括 redux/react-redux/redux-thunk/redux-logger ，设计与音频相关的全局 state 结构，使用 redux 管理与音频 state 相关的组件</li>\n</ol>\n<h2>build</h2>\n<ol>\n<li>git clone <a href=\"https://github.com/lipeiwei-szu/ReactNativeOne.git\" rel=\"nofollow\">https://github.com/lipeiwei-szu/ReactNativeOne.git</a></li>\n<li>npm install</li>\n<li>react-native run-android</li>\n<li>react-native run-ios</li>\n</ol>\n<h2>第三方库</h2>\n<ol>\n<li><a href=\"https://github.com/reactjs/redux\" rel=\"nofollow\">redux</a></li>\n<li><a href=\"https://github.com/reactjs/react-redux\" rel=\"nofollow\">react-redux</a></li>\n<li><a href=\"https://github.com/gaearon/redux-thunk\" rel=\"nofollow\">redux-thunk</a></li>\n<li><a href=\"https://github.com/evgenyrodionov/redux-logger\" rel=\"nofollow\">redux-logger</a></li>\n<li><a href=\"https://github.com/react-native-community/react-native-video\" rel=\"nofollow\">react-native-video</a></li>\n<li><a href=\"https://github.com/remobile/react-native-toast\" rel=\"nofollow\">react-native-toast</a></li>\n<li><a href=\"https://github.com/weflex/react-native-wechat\" rel=\"nofollow\">react-native-wechat</a></li>\n<li><a href=\"https://github.com/yamill/react-native-orientation\" rel=\"nofollow\">react-native-orientation</a></li>\n<li><a href=\"https://github.com/skv-headless/react-native-scrollable-tab-view\" rel=\"nofollow\">react-native-scrollable-tab-view</a></li>\n<li><a href=\"https://github.com/lipeiwei-szu/react-native-viewpager\" rel=\"nofollow\">lipeiwei-szu/react-native-viewpager</a>  which is fork <a href=\"https://github.com/race604/react-native-viewpager\" rel=\"nofollow\">race604/react-native-viewpager</a></li>\n<li><a href=\"https://github.com/search?utf8=%E2%9C%93&amp;q=react-native-simple-store\" rel=\"nofollow\">react-native-simple-store</a></li>\n</ol>\n<h2>欢迎 star 、 fork</h2>\n<p>​</p>\n</div></div>"], "reply": "1", "tittle": "基于 React-Native 的高仿「ONE·一个」开源项目", "comment": ["本项目使用 react-native 框架， 80%的代码用 javascript 编写，涉及到一些原生（ OC 、 Java ）的代码，但很少，是一个学习 react-native 的好例子"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>求分享</p>\n</div></div>", "<div class=\"topic_content\">看了回帖，京东领券可以 800 入 filco87 诶，继续观望</div>"], "reply": "31", "tittle": "双十一机械键盘和显示器都有啥特价么", "comment": ["我也一直在看，因为不知道你的需求和价位，所以就不贸然推荐了……", "先收藏了", "京东已经出来优惠了 不知道是底价不", "我在等 cherry 青轴 G80 3000 …不过貌似没有打折", "感觉双 11 虚价比较多", "虚价！", "黑东的双十一不是虚价，是实打实的打折，比淘宝最低还低的不要太少见，就是刘强东耍猴水平比雷布斯高 100 倍。有时间可以关注，没时间早买早享受。", "用什么值得买和惠惠购物助手吧，可以看历史价格，订阅优惠信息", "先领券吧，满 999-200 ，满 599-120 ，买 Filco 挺不错的。", "双 11 的优惠，都不怎么明显了", " 在哪领卷呀，话说 800 卖个 filco 还是不错的", " ", " 这款键盘做工很烂，松垮垮的，我正在用，建议不要入手。", " 请问有什么更好地推荐？", " G80-3000 每次京东搞活动期间都禁用东券，不过如果刚开始放券时他们没及时改过来的话，你或许有机会", "mark", " 诶？那有啥青轴推荐嘛？最好白色的…", "感觉电子产品没有太大的折扣啊，本来想入个 21-24 寸屏幕的", "cherry 旗舰店怒送 5 元优惠券？", "感觉这种东西不太会有大的优惠，早买早享受吧", " 23333 简直要被你笑哭了", "电子产品跟鞋帽衣服不一样。衣服同样的款式可以在双 11 做一批质量更差的贱卖，但电子产品几乎做不到。", "显示器最大优惠只看到了 144hz 游戏显示屏的", " 固态降低还可以，去年双十一关注了一下价格，发现降的幅度还是可以的。", "刚买了个机械键盘，我跟卖家说，双十一会不会降价啊、我买了会不会亏啊，卖家说如果双十一降价的话返给我差价。我立马就买了。现在想买也可以玩这种套路。", "去年双十一 G80-3000 降了 90 固态也是去年买的 优惠还是很明显的\r", "![]( ", " )", "年初的买的雷拓的 MXX 还不错的 有 cherry 轴的。", "这款键盘很好用，手感比 filco minila 还好，已经买了两把，一把给台式机一把 mbp ， 67 已经吃灰了", "  是哪款? 手上的 filco minila 服役三年,想换一把.", " 就是楼主说的 filco 87 ，个人觉得很好用，狗东上 800 ，自从不玩 war3 之后，不用 104 的键盘也习惯了，再配个赛睿的静音键盘晚上也吵不到人了", "再来一把 filco 吧。。那手感怎真的没谁了~用了爱不释手 QAQ 。。。。。"]},
{"content": ["<div class=\"topic_content\">自己熟悉 python\r<br>感觉 shell 可读性太差了一些~\r<br>有没有用 go 或者 python 代替 shell 脚本的？\r<br>\r<br>用 python 的可能会用到一些第三方库，而且 python 2 和 python 3 还有点小区别\r<br>\r<br>用 golang 直接生成二进制文件，扔上去就完了~</div>"], "reply": "54", "tittle": "有没有用 go 或者 python 代替 shell 脚本的？", "comment": ["有时候几行 shell 可以做的事情。你偏偏得装个环境编译一下。", "python 一般系统都带有，直接用吧", "代替是指？", "要是自动转换的话感觉不如用 python 再写一遍", "我都用 node 或者 ruby, 会啥用啥呗", "python 里面各种写 os.system(\"xxx\")", " 你得到了它", "php 可以 exec  system   shell_exec  passthrough   pcntl_exec  pcntl_exec  escapeshellcmd  popen 执行 shell ， php 又赢了", "好像有一个 python shell ，叫 xonsh ？", "三种都用。\r", "shell 写经常需要改，不太复杂的。简单省事。比如 cp mv rm 日志 之类的。\r", "python 写稍微复杂一点，需要比较复杂的数据结构的， shell 很难处理的。比如涉及到 json 。\r", "go 写更复杂的，一般用 python 需要额外安装第三方库，或者对并发有要求的。但是一般会写的通用一点，而不是单一功能。扔到服务器上再用 shell 传参调用。", " 我就是用的这个", "python 还行点。。。但是 golang 比较麻烦的是 bin 文件太大。。感觉还是做项目做比较好", "简单执行任务用 shell\r", "涉及到数据处理 python\r", "\r", "\r", "但是通常是 python shell 互相调。。。", " 混合了 shell 和 go 的语法，非 POSIX", "直接在终端输入的话我用 shell ，但是写到文件里必然用 python 。", " 你在 Linux 还是 macOS 上用的？有什么烦人的问题吗？", "一般是啥好实现用啥，管他 Python 还是 Shell", "好几种语言混在一起用，项目人一多特别明显", "什么顺手用什么，语言不重要。。。", " Linux 上的\r", "问题基本不大，以前烦人的问题在新版里基本都解决了， shell 语法和 python 语法也融合得蛮好。\r", "扩展语法需要一点时间学习和适应，特别是 python 模式和 subprocess 模式之间的转换，好在官网的教程还比较详细，不过有些细节的东西还需要自己琢磨。\r", "还有如果需要补全功能的话要安装 prompt-toolkit ，高亮要 pygments 。", "Java for Everything\r", "我目前担忧的是我几台内核还是 2.4 的能不能跑 golang...", "自从用了 CLI 总喜欢用 go 撸一些 Terminal 小工具。 跨平台真是太好了 机油也想用的话 直接编译一份二进制文件给他就好了🌚👍", "有啊有啊😋", " \r", "同感， golang 做跨平台太简单了，基本依赖库都支持的，就是二进制太大了， 1.7 改进了很多，但相对 C/C++仍然很巨大，特别对于空间较敏感的嵌入开发。", " 还有 golang 做嵌入式开发的吗？ 话说我的树莓派已经吃灰好久了 233 (cgo 估计接下来的版本支持还会越来越好～", "python 写起来会简单点 学习成本也没那么高 而且有很多现成的库 基本常见 shell 命令做得事情 python 都能找到对应的库", " \r", " \r", "go 用 strip 和 upx 处理一下其实也不大，我一个 10M 的程序可以压到 2.2M", "这种事情其实还是 Perl 最适合，可惜现在愿意学的人少了…", " 可读性差所以不适合吧。很常见的场景是需要改下之前的脚本加个小功能，然后读旧脚本 perl 需要的时间是 python 的两三倍吧？", "Shell 能解决的尽量会用 Shell 。强大的管道绝对屌。复杂点的用 Python 。", "在一些不复杂的情况下，用 shell 会合适的多。", "简单的命令用 shell ， 复杂的 py 搞定，至于简单与否看对 shell 的掌握程度", " +1 实用为主", "感觉正则学好了，用啥都行吧。。。 O(∩_∩)O", "很早就有过一本书，讲用 Python 做系统管理的。\r", "你练熟了就可以直接替代 shell 了。。。", "借宝地推销一下自己的命令行库~（兼容 Py2/3 ）\r", "\r", "～～简单的事情还是 shell 方便一个两个命令就 OK 了\r", "复杂一点就要求助脚本了，这东西都是互相结合使用。。", "目前在用 go 维护一个运维调度平台。\r", "平时用的啥的还是 bash 脚本吧\r", "PS ：是 bash 不是 shell", "我不是出来唱反讽的， 但是说实话， 如果是运维功能的东西， 我推荐还是用系统默认的 Shell ， 是本真的也是最稳定的。做得好了也会是最直接和高效的", " 你赢了", "shell debug 困难，不是很现代的语言。\r", "只能用来写一些简单的东西了。。。", " elvish 是用 go 实现的，不过语法上和 go 没有什么关系。", " 原来是作者，失敬失敬。。", " 客气了，多谢安利 elvish 大法 (*¯︶¯*)", "说到这个环境的问题，我宁可用古老的 awk 来写。", "awk or perl", " 想请教您一些编译原理相关的问题，不知道能留一下联系方式。。", " 在 v2 发帖问然后 @ 我？", " 那我直接在这里问吧。。在递归下降的解释器中如何实现 call/cc ？因为我不是 cs 出身，所以这个问题我想了蛮久的。。因为我自己也在做一些简单的解释器。好像必须要将解释器完全地转写成尾递归的形式才能做到？不然没办法 stop the world.", " 在一般的递归下降的解释器中，函数总是带有状态的，所以在遇到 call/cc 时候没法保存整个解释器的上下文，需要转写成尾递归的形式将状态一层层传递进来才行。不知道我的理解有没有问题。。", " 抱歉，我不懂递归下降的解释器……", " 所以 elvish 是传统的基于栈线性解释的吗？", " 这么说起来 elvish 解释器应该 递归下降的。。 call/cc 我也不知道怎么实现。编译解释技术我不太在行啦。", " 还有就是非常喜欢你的珠玑，打算在你的设计上自己做一个"]},
{"content": "", "reply": "23", "tittle": "求一款 windows 注册表清理软件", "comment": ["CCleaner", "360", "腾讯电脑管家，值得拥有", "果断选择 CCleaner", "Wise Care 365", "CCleaner", "清理容易出问题，我周年版更新就卡住了。自己下载手动安装才解决", "不建议，除非你像我这样能随便拿个硬盘就重装 windows 的人，几乎一季度装一次～", "CCleaner", "每隔一段时间就重装的人表示，注册表其实清不清没什么关系，不影响所谓的速度，除非你用的流氓软件，卸载后还残留各种后门开机自动后台运行，除非你知道你在做什么，否则请不要动注册表，我都是手动删注册表，因为我知道我在干什么。然而，单位的电脑还是 XP ，果断 360 一键清理，哈哈哈哈", "用了 ssd 后就再没优化过 windows 了…", "我就是用 autorun 找找用各种方式偷偷自启动的", "其他的不管。各类软件安装后在注册表留点垃圾，每次都大扫除太累了。", "每隔两三年系统重装下就好。楼上一个季度搞一次重装会不会太累？就算 ghost 我也嫌烦。", "每次 windows 大版本或 sp 或这种周年更新，重装一次我觉得就差不多了吧", "重置系统", "cccleaner", "ccleaner", "RegCleanPro", "Dll-Files Fixer 一直用这个", "CleanMyPC", "CCleaner", " +1 CleanMyMac 3", "有时间弄一个 PCI 借口的硬盘吧，这才是真正的解决方法。", "CCleaner\r", "卸载软件的时候用 Revo Uninstaller 清理残留注册表项"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>“做时代奋进者的高效充电站”，作为一个致力于用互联网推动实用技能教育的团队，网易云课堂的宏愿无疑是美好的。然而，在技术人才紧缺、网络环境迥异、终端设备复杂的背景下，如何在快速扩张的同时保障全网海量用户都能有最佳的学习体验，始终是网易云课堂无法回避的挑战。幸运的是，网易云课堂团队找到了属于他们的辅助利器——先进的视频云技术。</p>\n<p>借助网易视频云的专业技术，网易云课堂在视频上传、编解码、存储、播放、防下载、链路检测等核心功能的实现，都不再需要团队自己研发，既保证了服务质量以及新业务的上线速度，又节省了大量的开发人力和维护成本，让网易云课堂能够专注于业务的发展。</p>\n<p><img alt=\"1\" src=\"http://e.hiphotos.baidu.com/news/w%3D638/sign=cc0b49d925f5e0feee188a02646134e5/4034970a304e251fa9dea238af86c9177e3e53c0.jpg\"></p>\n<p>一、在线教育技术需求</p>\n<p>网易云课堂是网易旗下的在线实用技能学习平台，于 2012 年 12 月底正式上线，目前拥有 MOOC （慕课）、 K12 、企业云等产品线，积累的课程数量达到 1.3 万+，课时总数超 33 万，课程视频数量 100 万+，涵盖实用软件、 IT 与互联网、职场技能等 20 多个教学领域，服务覆盖 Web 端、 Android 端和 iOS 端，吸引了 3,300 万学习用户。</p>\n<p>网易云课堂极快的成长速度，在很大程度上得益于互联网业务全局扩张的特点，但网易云课堂团队的另一个感受是，搭建一个在线课堂的系统，同样需要在技术、人力、精力上有很大的投入，并且随着业务的扩张和规模的增长，在线服务质量保障的难度也是几何级地增加。从业务需求的角度，网易云课堂技术负责人方金德介绍了网易云课堂的核心技术诉求。</p>\n<p>视频转码</p>\n<p>视频编解码对于视频业务非常重要，要把大量讲师通过千差万别的设备录制上传的格式各异的视频转码、压缩，转换成几种通用格式，以便快速输出到用户的播放终端，如 MP4 、 FLV 和苹果上专用的 M3U8 ，这是一项技术含量很高的任务，需要专业的人才来研发出可行的方案，并构建视频编码集群来支持。</p>\n<p>视频上传和存储</p>\n<p>全国各地不同讲师的视频课程上传到网易云课堂服务器，首先网络通信方面要能够保证视频文件的上传速度，需要针对不同链路的优先队列的功能；其次视频文件通常都是大文件，并且讲师开课、上传视频的时间是不固定的，经常会有很多老师突然开课，这就突然需要很大的存储空间，然而临时采购和部署存储是很不方便的，所以需要提前做好容量规划，需要一整套的技术来保证视频文件的上传和存储。</p>\n<p>视频的全网播放</p>\n<p>网易云课堂的 3300 万用户分布在全国各地，其中包括很多海外的用户，这些用户的网络环境差异很大，需要大量的 CDN 节点来加速视频流的传输，保证用户可以流畅地播放视频课程。当然， CDN 服务也需要和存储平台进行很好的整合。</p>\n<p>视频监控和追踪诊断</p>\n<p>CDN 节点不是无限的，为了保证全网播放质量，还需要一套能够快速帮助用户解决问题的监控和诊断体系，一是整体状况的监控统计，包括各个地区不同的用户、不同的课程视频，其播放质量如何；二是追踪，当某个用户反馈存在播放问题时，希望有一个类似探针的服务，能够追踪整个链路，不需要让用户帮忙做很多的操作，就可以快速定位出问题的症结所在，从而能够及时给出解决办法。</p>\n<p>视频保护</p>\n<p>在版权意识模糊的中国环境下，网易云课堂还需要防止用户非法使用视频文件，包括 URL 防盗链、防下载等。</p>\n<p>最开始，网易云课堂研发团队曾经尝试搭建视频系统来支撑整个业务的，包括转码、存储、加密等环节， CDN 则是外采一家传统 CDN 服务。细说起来，这个过程也算是一部“血泪史”。</p>\n<p>针对视频转码，研发团队需要花大量的时间来为用户处理编解码过程中的各种奇怪的错误。例如，因为用户视频有非常多的格式，部分视频可能会存在音频流失的状况，这很容易导致转码失败。即便只是少量视频存在问题，团队要帮助用户从每一个视频中找到问题所在，并切换处理方式直至转码成功，也是非常耗时的工作。</p>\n<p>据方金德介绍，网易云课堂视频转码技术从无到有，大概花了 4 个人月——这对于当前互联网业务迭代速度而言，无疑是比较慢的。然而，因为网易云课堂缺少专业的视频人才（整个行业都呈现专业人才稀缺的状况），开发过程中还需要学习各种资料，不得不付出这样的代价。而有了编解码技术之后，团队在短期之内也没有能力再持续做协议的深度优化，只能做一些简单的视频分析，解决简单的问题，一旦出现真正复杂的问题，还是解决不了。</p>\n<p>在视频播放方面，有台湾地区、美国的讲师在网易云课堂上开课时，就反馈了视频上传、视频播放方面存在问题，然而云课堂采用的 CDN 在海外节点方面仍亟待完善，并没有办法根除这个问题。</p>\n<p>在监控方面，研发团队此前采用业内常用的技术，很难通过监控立即查明播放端出现问题的原因，更不用说帮助用户以最快的速度解决问题了。而且，原有技术也没法实现智能化的链路选择。对于讲师，采用的优先队列方式，是列出可能的节点，由用户来手动选择不同的上传通道，并不能实现最灵活的资源调配。</p>\n<p>对于所期待的细粒度监控，方金德透露，研发团队曾经深入讨论分析了自研的可行性，最终认为技术难度很高，要达到初步预期的功能，保守估计也需要好几个人月的投入。具体而言，这需要解决播放端和后台两方面的难题：播放端的信息传递需要开发很多的工具，后台还要做很多统计分析的工作。</p>\n<p>网易云课堂的视频保护，最开始是通过 CDN 防止下载，但是只能防一些小白用户，比如面对录屏的情况就只能徒呼奈何了。毕竟要做成加密 SDK ，需要了解底层的协议，技术难度很高。</p>\n<p>除了加密之外，播放端的技术需求主要是缓冲，这方面倒是相对轻松，因为有一些很好的开源工具可以利用来实现。</p>\n<p>二、网易视频云之美</p>\n<p>恰逢其时，网易杭州研究院（简称“杭研”）专门为网易互联网业务提供技术支撑的私有云改造已经轻车熟路，并且杭研已经准备着手解决网易云课堂、网易云音乐等各业务团队面临的视频技术挑战，让这些团队专注于业务本身的研发。于是，网易云课堂和杭研的合作顺理成章地开始了。毕竟网易云课堂业务线仍在不断扩张，还需要很多的研发人力。</p>\n<p>首先是底层基础的视频存储服务。杭研基于其研发的网易对象存储系统（ Netease Object Storage ， NOS ）来实现对视频数据的存储服务。 NOS 是一个分布式的 Key-Value 存储系统， Value 的容量上限为 1TB ，并提供多租户流量隔离，所以基于 NOS 的视频存储可以较为轻松地应对网易云课堂的存储容量和高可用的压力。同时， NOS 提供的大文件分块上传功能，对于视频上传而言可谓雪中送炭。此外，结合网易 CDN 服务，网易云课堂能够面向不同地区的用户实现一站式的视频上传、存储、分发服务。</p>\n<p>与 NOS 相结合，杭研视频团队还打造了一个分布式视频处理平台 NTS ，用以支撑网易云课堂的视频任务处理，支持包含录制、转码、视频合成、截图等常用的视频处理技术。 NTS 通过如图六大模块和子系统，对用户管理、任务调度、任务追踪、事件回调和文件存储等核心功能需求，同时实现了调度子系统的考可用和水平扩展。 NTS 视频处理输入输出基本来自 NOS （录制或截图任务的输入视频流除外），简化了 NTS 服务的使用。</p>\n<p><img alt=\"1\" src=\"http://b.hiphotos.baidu.com/news/w%3D638/sign=0604cac893504fc2a25fb306dddce7f0/0823dd54564e9258f823c02e9482d158cdbf4ede.jpg\"></p>\n<p>视频编解码方面，杭研对底层音视频算法进行了深度优化，相同画质节省 10%~30%流量带宽，并且针对互联网传输的特性进行码率平滑优化，避免突发的视频码率上升造成用户播放卡顿。</p>\n<p>视频保护方面，网易云课堂也采用了杭研提供的视频加密技术，是一个底层的跨平台 SDK 工具，加密方式是在播放文件中增加了一些用户信息的标记，用以防止用户录屏（用户录屏时会被发现），同时不影响服务的稳定性和流畅性。</p>\n<p>在解决 NOS 、 NTS 、加密等问题之后，网易云课堂也希望将这些功能服务化，用于解决内部产品的需求。事实上，网易云课堂此前也有过一些相关的尝试，不过，通用设计没有那么彻底，比如在数据隔离、账号分配等方面，因为业务快速扩张背景下研发人力紧缺的原因，并没有实现理想的精细化的效果。</p>\n<p>杭研视频团队在满足网易内部需求的同时，更加意识到了视频业务的需求，已经将视频转码、加密、容量伸缩、高可用、 CDN 等能力都集成在一起，形成了网易视频云公有云解决方案，提供全平台 SDK ，完全实现了 PC 、 iOS 、 Android 、 Web SDK 的无缝对接，具有接入方便，二次开发量小等特点，同时还提供配套的全天候专业技术服务。</p>\n<p>现在，有视频云之后，网易云课堂就可以从这些工作中解脱，专注于业务。而网易视频云来做这些事情，则可以做得更加专业。例如，公有云的 NTS 相比之下提供了更为细致的任务统计、资源监控功能用于容量规划，可以解决海量用户、资源超售的挑战。</p>\n<p>在网易云课堂看来，因为之前与杭研视频团队合作的历史背景，技术同源，在数据结构等方面已经做过很多的适配，完全迁移到新的网易视频云平台没有任何障碍。不过，出于在线访问数据的考虑，数据同步是一件值得注意的事情，虽然底层都是 NOS ，对象管理可能略有差异。</p>\n<p>而生来就完全在网易视频云上搭建的，是网易云课堂 2016 年 1 月上线的 K12 产品，因为这是一个新业务。方金德介绍， K12 系统的搭建，由前后端各一个工程师，用不到两天时间就初步完成，由于 NTS 、 NOS 、 CDN 、加密等服务，已经把最核心的痛点都解决了，只有接口的访问以及一些小的需求点，还需要视频云团队的支持，但这些不是本质上的需求。再经过双方一周时间的无死角联合调试、迭代， K12 运营人员使用起来已经很顺畅。相比之前的产品线需要研发团队花费大量的时间去踩坑， K12 产品线快速接入视频云并完成磨合，只花了很短的时间，大大缩短了新业务上线的时间。</p>\n<p>三、后续技术规划</p>\n<p>播放质量监控、定位问题的探针，这是网易云课堂更高级的追求。现在的监控，只是一个链路选择，把靠近用户可能的链路列出，人肉切换尝试寻找最优链路，还没法做成一个智能的方案让用户直接定位到最好的节点上。同时，网易云课堂也希望看到全国不同地区的视频播放质量，包括失败、延迟、卡顿等情况。方金德表示，这两个方面是网易云课堂与网易视频云下一步合作的方向。</p>\n<p>四、总结</p>\n<p>在教育资源不平衡的今天，基于视频技术创新的在线教育提供了填补差距的平台。网易云课堂的实践表明，在线教育虽然才刚刚开始，网易这样的公司积累的专业视频云解决方案，已经可以支撑基于网络视频开展的新业务，比如网易视频云还支持了青果、云音乐、 Bobo 、宝宝树、东家守艺人等业务。在视频云和视频业务团队的合作之下，针对不同的应用场景的视频云产品因为得到不断打磨而成熟、完善，必将反过来推动在线视频业务的增长。</p>\n</div></div>"], "reply": "1", "tittle": "网易云课堂：用视频云技术承载 3300 万用户的流畅学习体验", "comment": ["这是想说啥呢？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><blockquote>\n<p>先说下本人情况：</p>\n</blockquote>\n<blockquote>\n<p>从事 JAVA 后端开发，下个月就正好工作两年了，正好这段时间进入了一家真正意义上的互联网公司。同事中有一个工作了五六年的技术大牛建议我想要提高的话就要开始看一些源码了，不管是 spring 的还是 JDK 的。\n由于公司现在一直都在使用阿里的 DUBBO 框架，他建议我先从这个框架的源码看起走。</p>\n</blockquote>\n<p>在这里就想问下各位朋友有没有什么建议：</p>\n<ul>\n<li>看 DUBBO 框架的话从什么地方开始入手呢，现在源码是下下来了，但感觉是懵逼的，不知道从哪里入手。</li>\n<li>或者说刚开始不用看 DUBBO 的，那又有什么推荐嘛？</li>\n</ul>\n<p><em>谢谢</em></p>\n</div></div>"], "reply": "7", "tittle": "看源码有没有什么好的推荐呢？", "comment": ["提高必须要实践啊,照着文档做 demo,自己各种折腾,框架会用了,再看源码了解深层次的东西,用都不会用直接看源码当然无法下手. 可能这个五六年的大牛不懂如何带新人", "源码首选 spring,如果觉得自己 c/c++还可以,探究 jdk 也是一个上佳之选,最好还是带着问题去看源码,比如某个功能是怎么做的?所以,都是先用熟了再看源码", "溺水的人学不会游泳", " 用肯定是会用了，上面已经说道了 我也工作马上两年了，现在感觉就是重复的板砖写代码，所以才需要提升来着。", " 就大学时候接触过 C ，不过都是听天书过的。。。", "  我明白了，你缺的是好奇心，举个例子，当年小霸王上打魂斗罗，通关后会自己提升难度，比如不杀小兵通关， 100 颗子弹通关，各种折腾，要精通一个东西需要这种好奇心，不断给自己提更高的问题再尝试解决，这需要天赋，顶尖程序员的秘诀就在这", " 不如女仆,不如跳舞"]},
{"content": ["<div class=\"topic_content\">想给网站加一个客服代码，但是不想用第三方的，有没有支持在线聊天功能的源码啊？</div>"], "reply": "目前尚无回", "tittle": "有什么好用的在线客服源码没有？", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我于 10 月 16 日在 Apple 中国官网上购买了一个 iPhone 7 皮革保护壳， 10 月 18 日中午我拿到货并拆开包装的时候发现（并没有当着快递员的面验货），手机壳像是用了很久一样，上面布满了划痕，印痕。我忍了，想想大不了退货， Apple 毕竟是大公司。</p>\n<p>于是我打电话给客服，跟客服约定好了 10 月 22 日，也就是星期六让 EMS 快递员上门取件退货。结果 10 月 22 日那天，我在宿舍里等了一整天，一个快递员的电话都没有！第二天我再次打给客服，勉强忍着心中的怒火跟客服约定好下个周六，也就是今天（ 10 月 29 日）让 EMS 快递员来上门取件。我信了，但结果不出我所料，我又在宿舍里白等了一天！一个电话都没有！</p>\n<p>耍人吗？ Apple 官网上写着退货的时间是确认收货后的 2 周，也就是说周三（ 11 月 2 号）之前我不把货退了就永远没机会了？</p>\n<p>现在已经过了客服的服务时间了，只好等明天（ 10 月 30 日）继续打电话了。如果周三之前我还没能成功退货，或者周三之后客服不让退货了，那我就当这 348RMB 喂狗了吧！反正经历这些后， Apple 在我心中的印象大打折扣了。</p>\n<p>未完待续……</p>\n</div></div>", "<div class=\"topic_content\">11 月 5 日 又待在房间了白等了一天，没有一个电话</div>"], "reply": "14", "tittle": "维权之路", "comment": ["客服若没通知 EMS ，这是耍猴，必须喷；\r", "若通知了 EMS ，那主要责任在快递；\r", "如果最终真的因此无法退货，再喷不迟。", "退不了再喷，就晚了。", " 我也这么认为:(", "不懂帮顶。 348RMB 买一个不能用的手机壳。。摸摸头", " 外包装看起来没被拆过，完好无损的，但是手机壳的背部真的是。。。。无法形容，各种划痕\r", "\r", "从上海寄过来的", "感觉是 EMS 的锅。\r", "\r", "各地方的 EMS 水平都是最次的。\r", "\r", "你可以跟客服要求叫个顺丰来，他们也是有合作的", " 我尝试过，但他们说只有 EMS ，我说邮费我自己出也行啊，就是不给叫顺丰。。。", "12315", "已经耽误两天了，还“再喷不迟”", "所以还是京东亚马逊吧，不行天猫也比各家的官网靠得住，完全没人管啊", "上个图吧，大家赏析一下", " 什么图。。\r", " 下次还是到零售店现场买比较好。。", "這個肯定是 EMS 的鍋，不過蘋果居然只支持 EMS 也是差。話說 EMS 不能你去門店交給他的麼？", " 第三个周六，又白等了一天。我真想问候 EMS ！"]},
{"content": ["<div class=\"topic_content\">目前研究了一下若干可以使用 Linux 的命令行 求比较……或者推荐其他好用的 谢谢各位啦~\r<br>\r<br>1. Win10 自带的 Bash\r<br>\r<br>2. Power Shell\r<br>\r<br>3. Babun</div>"], "reply": "151", "tittle": "已经决定用 Windows 了……求靠谱好用 Shell", "comment": ["cmder += 1", "基础的 Win10 自带的 Bash  ,要深入还是必须 linux,虚拟机， vps 都行", "大神真多，用虚拟机挺好的。为何要原生？分分钟搞不懂……", " powershell 没有命令历史记录啊", " 原生的性能是虚拟机不能比的", " 在 cmder 里开 PowerShell", "ConEmu+msys2+pacman+ohmyzsh 的只有我一个？", "谁用 XShell 的可以解释一下怎么回事？登录到虚拟 linux 上进行使用？", "用了 vcxsrv ，开启 x 图像协议，然后命令行 开启 gnome-terminal 。几乎没有系统占用。", "有什么理由选择 windows ？ mac 不是挺好的么", "上面答 XShell 和 SecureCRT 的都是什么心态？题主问的是 Shell ，你们却都在推荐 Terminal 。\r", " \r", "V 站一大特色，不懂装懂，答非所问", "bash on windows + cmder, 挺好用的，以前个人用 git bash, 一般情景下也够用了", "凑个热闹 把 cgwin 的 bin 目录加到系统环境,再用 ConEmu", "对我来说还是 Linux 适合我，像 windows 或 Mac 还是不适合我", "babun, cmder", "conemu+bash in windows, 目前基本好用；开发环境是 linux 下的，跑起来基本没问题", "cmder", "mingw-w64", "ConEmu", "gitbash+vagrant 方案 觉得挺好使", "msys2 吧，最舒服的一点是把 user/bin 加到环境变量里，各种东西都有了，不会有分裂感。这个很重要。还有 pacam 包管理器，各种爽，目前 zsh+ohmyzsh+cmder 。", " 分裂感太强，受不了", "git bash 能够应付一般的情况了，更复杂的情况一般就直接开 Linux 虚拟机解决", "看到这么多不负责任的小白在回答 真是服了 可能 v2ex+还不适合讨论一些技术话题", "真没想到原来这么多人分不清 shell 和 terminal 的。", " 守望先锋，这个理由如何 23333333333333333", "cmder + vagrant 结束，另外别忘了装个 git", "sercuteCRT +cygwincygwin + openssh", "cmder +1", "明明要用 shell 为啥还选 windows..... 另外这里用的是 zsh", "1. Win10 自带的 Bash \r", "2. MobaXterm", "babun or cygwin\r", "没心思折腾想开箱即用就 babun", "cmder", "git bash 和 xshell 都在用", " 只装了 ConEmu ，跑 bash on Windows, msys2 重装了系统就没装了", " 请问怎么结合这几个一起用", "头像好萌", "Xshell + 8008208820", "按照楼上的试了下 cmder ，感觉还不错的说~~~", " 还没重装，用不了子系统。\r", " ConEmu 做界面， msys2 负责 pacman ， zsh 可以偶尔写个循环什么的。", "谢谢各位聚聚了~决定试试 cmder 去 比较一下 babun", "cygwin", "babun 和 cmder 都慢得要死，滚回 ConEmu 了", " +1", "虽然涉嫌歪楼，还是姑且问一下，何不用 Mac … 喵？", "cygwin + xshell", "consolez + git bash", "最终还是用回了 osx ，", " 因为写 C#", "PowerShell 不怎么用，一直用 git bash ，楼上这么多推荐 cmder ，看来可以一试", " 这个好用"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这是从一个安卓 app 反编译出来的 java 代码。执行解密的应该就这一段儿了（因为我不写 java ，并不是非常确定。）\n希望有通吃 Python ， java 的大神帮忙解答下。如果能指导一二，万谢。\n<img src=\"http://ww4.sinaimg.cn/large/0061ogrtgw1f9bsmumx3uj30p40lxdgd.jpg\"></p>\n</div></div>"], "reply": "5", "tittle": "一个 java 写的解密的类，请问可能转换为 Python 吗？", "comment": ["就算不会 java ，你对照着这个代码一行一行的搬到 python 不就行了，这么短，要花多少时间。", "还用转吗，不都明着告诉你是 AES 了吗？直接调用 AES 库就行了", "你搜下 AES PYTHON 加密解密就好了 注意转码格式", "任何一个通用型语言翻译到任何另一个通用型语言都是可以实现的。这么说大致不会有问题。", "已解决   谢谢楼上的各位 .thanks"]},
{"content": ["<div class=\"topic_content\">刚刚装了下小程序的开发工具，直接把之前装的微信公众号开发工具给覆盖了。。。两个图标和名字完全一样。。。而且只能开一个，不能共存。</div>"], "reply": "3", "tittle": "[吐槽] 为什么微信小程序的开发工具要和公众号开发工具起一样的名字。", "comment": ["确定不是同一个东西吗？", "同。很烦。如果同时安装的话，也不能同时开两个，要关一个再开一个。", "是很烦人 今天刚打算在这问这个问题 \r", "真不知道微信咋想的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我的帮人改代码经历中 ，发现外包项目大概有如下一些典型特征：没有设计模式，不用框架， web 目录下和配置文件下永远有无数的复件，代码永远有不明不白的注释或者干脆毫无注释，缩进没有任何规范，变量名几乎都是拼音和英文混合，或者 m123 ， a789 ， aa ， bb ， test1 这样的标识名，或者因为代码改了很多次，很多类文件的命名已经和类实际的功能不相符了，比如说本来最开始就一个 mysql.class.php ，结果因为功能一改再改，这个类文件名不仅仅是 sql 操作了，还多了好多其他的操作，但是因为没有用框架，最开始已经有很多地方 include 了这个 mysql.class.php ，因此只好直接在这个类文件里面加其他功能了。\n综上所述：外包公司大部分都是生产垃圾代码的地方，也是一个培养只追求功能凑合能用，不追求代码质量，不理会代码安全（我看的这个项目，居然是直接拼接 sql 字符串，不过还好他集成的环境是 php5.2 ， GPC 魔术引号是默认开启状态所以很多注入方法用不了，而且网上流传的 ['or 1=1 #] 这个万能密码我用不了不知道是怎么回事，不过据说在字符串为 GBK 宽字节编码的情况下仍然有绕过方案），也不会考虑以后要怎么改，功能要怎么加的程序员出来的地方。\n解决方案： IT 培训机构和高等教育学府中的相关专业注重代码质量，关注代码规范性，教科书以身作则不要图省事用 abc 这种变量名（没错我说的就是谭浩强老爷子系列的书），加强设计模式的教育，给从事相关行业的产品经理和项目经理科普一下设计模式的必要性（对客户来说，重构或者规范化编码不会给他们带来好处，但是会增加程序员的人力成本，所以客户不愿意为重构买单，但是相反对程序员就不一样了，因此加强科普不是我在开玩笑，这是真的需要）</p>\n</div></div>"], "reply": "77", "tittle": "外包项目里面十分普遍的一些特征", "comment": ["就楼主你这个排版，你好意思谈缩进规范代码质量？", " 哈哈", "一楼打脸啪啪啪😂", " 没用过 Markdown 的人还真不知道换行要两次回车", "哈哈哈，一楼不要这么直接。", " 真的 别笑 是个人都知道可视化编辑器多好用 也就 V2EX 这种 geek 论坛笑得出来\r", "或者像其他的网站 怕你搞点什么 直接把\\n 全去掉 也省着转了 毕竟\\n 和 br 互转也挺蛋疼是吧", "外包代码质量好了跟咸鱼有什么区别。", "都外包了，你还要怎样", " 已结贴 😂", "我们公司一个几十万的 php 项目外包，拿到源码开始部署直接傻眼，整个网站一共有十几二十个 mysql 配置文件，分别放置在各个目录，有时候甚至一个目录下有多个 mysql 配置文件。", " 事实上，翻看了一下楼主之前的帖子，部分是有换行的，大部分是没有的。 那说明了楼主是会用的。\r", "\r", "那么说，楼主写完帖子发布后，看到了这个排版并没有重新编辑。（个人推测）", "一楼打脸太快了， 23333...", "楼主在嘲讽啊，你们啊 ", " ", "一楼。。", " 这是英文格式，中文本来就不需要，应该搞一套中文 Markdown", " 标准的换行是在行尾加两个空格。", " 我就喜欢你这样的实在人", "一楼就说大实话，太实在了", "就是表达观点描述事情而已，又不是写教程，换行反而读不完整。 支持一下楼主的呼吁。", "一楼的回复加上楼主头像的表情，简直绝配", " markdown 没有统一的标准。", "你说的确实是问题，但我认为这是市场导致的必然，价格压得那么低，也不看看请的什么人？", "哈哈\r", ",竞争压力.时间压力.还有价格压力", "php 更容易写坏代码(不是黑 ...\r", "\r", "Java 系至少不可能出现这么蛋疼的事情 include", "还是一楼屌 233333", "有规范要求一开始就写好不就行了。。", "代码写得越烂越能绑住客户啊\r", "代码写得好，好读，随时找便宜的人代替了你，那感觉真是五味杂陈....", "一楼说得好", "所以在外包的项目上做二次开发我是非常反感的，特么炒鸡耗人力", "or 1=1 早就不能用了", "一楼输出好高 233", "一楼 27 个感谢，结帖", " 还要加上一楼的头像", "抵制楼主，人肉楼主。\r", "看到楼主这里唾沫横飞就 TMD 不爽，说的没一句是对的，估计也是现实中的屌丝", "楼主的内心几乎是崩溃的", "这个也要看人的吧...虽然也在外包公司工作过，但是该有的注释和文档我都是会写的，版本控制也是 Git 而不是 复件-复件(2) 这样...", "于是...自己的代码上线之后被别人改过根本不敢拿出来放到工作经历里面，因为不少直接把 script 加到 DOCTYPE 前面去了", " 666666", " 哈哈，说的有道理", "一楼最赞！", "得考虑时间和成本。\r", "\r", "你把代码想象成商品更好理解， 2000 块钱和 1w 块钱买到的东西有可能「看起来差不多」其实真不一样", "1 楼太坏了。话说国内外包的确容易产出垃圾，那种所谓“对企业提供的 IT 技术支持”的公司程序员职业素养普遍不高。", "一楼输出突破天际，我感觉是为了绑定客户吧，毕竟都搞这么清楚了，客户自己请个人继续开发成本低吧，写得只有自己看得懂，客户就得找你了", "php 的设计中，默认不安全的地方简直太多了。\r", "\r", "原生支持 web 开发的语言多得是，但是没有一个是把模板代码和路由掺和到一起还自我感觉良好的。", "另外 or 的那个绕过只能在 sql 中同时查询 un 和 pw 的情况下使用。一部分代码是先拿 un 获得用户，在代码中比较 pw ，这个就得用 union 来绕。", "你都注入不了，那你还管什么 SQL 是不是拼接。", "表示不服\r", "你找垃圾外包团队，不能说外包行业就是这样", "楼主说的是 PHP 外包项目吧？（我没有黑 PHP ）", "外包项目的合同款收入有限", "喜欢随便写，然后自动格式化。。。", "为一楼点赞。。。。", "价格决定服务质量, 中低价位的外包团队你代码习惯再好去干两星期也会这样的。\r", "\r", "一方面是时间紧， 基本五六千的单子一两天就要出来了, 不然工资都不够, 所以基本都是基于原先整理好的一堆模块二次开发.\r", "\r", "另一方面是选择中低价位外包的公司或者工厂在业务上很难清晰的表达，甚至有些为了压价还会特意隐瞒一部分需求在交项目前再提， 所以很多东西基本就是越改乱改.\r", "\r", "至于 PHP 版本那是没办法了， 上次帮个朋友改点东西， 发现他们一年四五千用的几百兆的 35 的虚拟主机还是 PHP5.2 的.", "对不起，要加钱", " 哈哈", "一份价钱一份货\r", "你花半毛钱,还想买一块钱的货??", "别的大学不清楚，反正我们学校根本没提过代码规范\r", "同学的代码根本不忍直视", "看到一楼我笑了 哈哈。。。", "一分钱一分货", "绝大部分客户根本不在乎代码 只要功能和外观", " 说的太直接了。。。", "最近做单被自己人坑了，一点钱一堆东西，最后各种说不对，才发设计稿给我。问为何之前不发，说，很多页面 如果发了我看后就不做了。\r", "妈了个蛋，我看了就不是这个价了，坑人。", "接手到这种项目，首先做好心理准备做几天无脑的整理代码工作，就是删除无用的代码，消除 Warning ，然后稍微用一些脑子改改变量名，正好熟悉项目，还能顺便刷刷 KPI （手动滑稽）", "一同事,估计入门教程看多了,类名变量名都喜欢叫 MyXXX ， myYYY", "V2EX, Never Change.", "一楼向来都是最直接的，顶一个。\r", "楼主估计是码完字没有回顾一下，不然自己都会觉得眼花。", "要知道微软， IBM 这个级别的公司也是做外包的。一分钱一分货，请不起好公司好团队就不要地图炮整个行业。", " 能用就行。有些还不能用。", "大哥 还是学习下 markdown 吧 跟上大家的步伐  至于外包让人诟病 毕竟写的再烂 也有人买单 原因大家都懂", "我觉得我们公司做得就挺好的啊。什么东西都有规范。", "改一个外包项目的半成品已经改了十多天了.", "换 python 试试 不缩进等死", " \r", "\r", "我来终结这个贴好了\r", "估计很多外包项目都比这个好", " \r", "头像和回复杀伤力 MAX", "我也做外包，但是不会有楼主那样的问题。虽然以前是做敏捷开发，但是木有测试， 23333.。。\r", "\r", "有一个问题就是：造成这样情况的可能性我觉得有这么几种：\r", "\r", "1.客户总是在改变需求\r", "\r", "2.产品经理没有理解好客户的需求\r", "\r", "3.编码着的代码洁癖不高。\r", "\r", "4.公司人员更换频繁。\r", "\r", "总的来说：这个锅，不单单是程序员背，客户和公司都存在一定的问题。\r", "\r", "我想知道我的排版有木有问题。", " 哈哈哈", " 你的排版挺好哒 XD", "从来没换过行\r", "来试试看\r", "...", "一楼这样真的好吗，哈哈"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>V2 上大家都是搞技术的，简历是个门面活。\n每个人发布一下自己做得最漂亮最高大上的简历。最好能带源代码的。</p>\n</div></div>"], "reply": "5", "tittle": "高大上个人简历模板大比拼！", "comment": ["qfdk.me about me", "怎么感觉你是想仿造一个或者直接拔来用的节奏啊？", "目前我觉得还是像超神这种简历好： ", "resume.lujq.me"]},
{"content": ["<div class=\"topic_content\">有没有开源的框架，比较好的，包括支付等后台系统是完备的</div>"], "reply": "5", "tittle": "想撸一个电商之类的网站，框架介绍", "comment": ["用有赞、微店之类的 API 进行开发", "opencart", " 想找个定制化可以更好的", "微擎 不要太好用哦！", "Magento"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"Alt text\" src=\"http://i.imgur.com/GRb6lqJ.png\"></p>\n<p>看图，有一台列表服务器，开了多个进程，放在 nginx 后面，多个进程从同一个 redis 里面共享数据。</p>\n<p>其它服务器上有服务 A ，服务 B ，向列表服务器注册，并且每 3 秒发一次心跳，表明自己在线，如果 10 秒内列表服务器都没有收到心跳就认定这个服务离线了。列表服务器把每次心跳的时间存在 redis 里面供多进程共享。</p>\n<p>用户向列表服务器请求的时候，返回可用的服务列表（实际上还包含一些其它的信息）。</p>\n<p>想说的问题是，要有多台列表服务器的情况下，心跳包怎么办？</p>\n<p>Plan A: 服务 A ，服务 B ，向每台列表服务器发心跳，但实际上第一次向列表服务器发心跳的时候，列表服务器会返回些内容，比如分配的一个 ID ，这时有多个列表服务器就不行了。虽然也可以向一台固定的列表服务器发第一个心跳，先拿到 ID 再向其它服务器发，但总觉得不好。</p>\n<p>Plan B: redis 使用 master slave 来同步，其它服务仍然只向一台列表服务器发心跳，不知道是否可行。如果第一台列表服务器挂了怎么办。</p>\n<p>各位怎么处理类似这样的例子的？</p>\n</div></div>"], "reply": "8", "tittle": "web server 不同服务器之间的通信问题", "comment": ["redis 不能共用一个吗?\r", "有多个 web 应用服务器多个 nginx,但只同时连同一个 redis 做缓存", " 我现在是直接以同步的方式操作 redis （因为 redis 够快，还没有卡在这个地方），如果共用一个 redis ，要跨机器，那就得改成异步的？", " redis 单独开一台或者多台机器不就行了？", " redis 放单独机器上需要异步去查询，反而觉得慢了。", "把 nginx 和 redis 拆出来，进程 1...进程 N 就能水平扩展了，也可以是机器 1...机器 N ，这种无状态是最方便的。\r", "\r", "跨机器不一定非要是异步的，同机房网络延迟 10ms 左右可以接受。\r", "\r", "大规模应用别说跨机器了，跨机房、跨地区调用都是有的。", "这不就是个服务注册器么，请把 redis 换成 zookeeper / etcd", " 我觉得应该可以不用异步的,你可以测试下同步做法下性能能不能接受", "zookeeper+1"]},
{"content": ["<div class=\"topic_content\">目前在入坑研究这个对话机器人的核心项目\r<br>\r<br>在搞各种语料作训练，有感兴趣的朋友一块入坑吗？\r<br>\r<br>q 群  488789678</div>"], "reply": "3", "tittle": "有对 chatterbot 开源对话机器人深度学习平台感兴趣的朋友吗", "comment": ["chatterbot 貌似没有上 deep learning 吧", "关键还是语料库", "我下载安装了一个还挺有意思，再进一步测试中"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>前一阵微信小程序很火热，引来各大绿林好汉争相研究，本人小菜一枚，刚刚接触 H5,本着学习的态度，尝试给丈母娘家的苹果制作了一个 H5 页面，请各位大牛给点优化的建议，谢谢大家！</p>\n<p>附上可访问的 demo 页面，请<a href=\"http://qmjie.sinaapp.com/apple/\" rel=\"nofollow\">点击这里</a></p>\n</div></div>"], "reply": "3", "tittle": "最近微信小程序很火热，而我还在学 H5，刚刚纯手工撸了一个码农的苹果铺子 H5 页面，新手一个，请大家多给点意见，谢谢大家！", "comment": ["少些套路，多谢真诚。建议发到推广节点。", " 多谢兄弟提醒", "少一些套路 多一些真诚"]},
{"content": ["<div class=\"topic_content\">闲着无聊去 Seafile 英文网站逛了逛，发现居然和中文的不一样。是为了防破解吗？把专业版藏这么深。专业版应该不开源。\r<br>第一步，注册账号\r<br><a target=\"_blank\" href=\"https://customer.seafile.com/accounts/register/\" rel=\"nofollow\">https://customer.seafile.com/accounts/register/</a>\r<br>第二步，验证邮件登陆\r<br>第三步，点击 Download\r<br>专业版的功能：\r<br>在线预览 PDF ， Office\r<br>支持亚马逊 S3 ， OpenStackSwift ， Ceph ，阿里云 OSS\r<br>全文搜索</div>"], "reply": "20", "tittle": "免费获取 Seafile 专业版（ 3 用户免费）", "comment": ["3 用户专业版很早就免费了\r", "\r", "一直看英文版，倒没在意过网页的区别。 Seafile 的用户好像是德语系和英语系的老外比较多，国内没什么人用，所以如果有区别倒也不奇怪。", "会不会倒闭啊？", " 这个是部署在自己的 VPS 上的。。。", "以前 seafile 还专门提供云服务，后来关闭了，难道就改成了自己搭建专业版免费 3 个用户？", "刚刚搭了一个 owncloud", "不懂为什么要把搜索功能放到专业版里面去", "seafile 简直渣。 owncloud 开源版功能完爆 seafile 专业版。谁用谁知道", "Pydio 路过", "难道黑群晖满足不了要求？", "seafile 就是偶尔服务端会崩而已，要说其他的比 owncloud 好用太多了", "不需要啊 直接下载好了 ， 我之前发邮件去咨询过价格，人家直接告诉我三人以下是免费的，服务启动的时候也会提示。\r", "\r", "owncloud 我没用过也不好评价，但针对 seafile 来说，基本所有平台都有客户端以及服务端(包括树莓派) 而且论坛还是挺有人气的，发的一些问题也会有人跟进处理，软件更新速度也很快 只是一些文档写的年限也比较长了，在依赖包名称以及一些配置上或有些小问题。\r", "我是以前用社区版跑在树莓派 3 上的， 443 映射到公网，跑过几个月没什么问题，现在使用专业版切到高配的台式机上，响应速度很给力，对于个人用户做网盘的替代方案来说，我觉得是可以关注一下的 \r", "提供客户端以及 web 方式的管理，还能够在 web 上查看图片,pdf ，音乐文件，提供限时以及加密分享外链的功能，真的不错。", "如果自己搭服务器还是 owncloud 好一些，文件在服务器上按目录自然储存，而 seafile 是分块加密储存，出点问题文件就不好恢复。", " 这个。。。不清楚，英文网站提示要注册", " 对的,但是我看了下好多人说 owncloud 文件一多就会抽风...", "Seafile 的前段实在药丸 服务端写的蛮好的 分块储存对很多人来说是优点", "那么问题来了，到底是 SF 好还是 OC 好。。昨天刚架了 SF ，用起来暂时没发现问题。\r", " @", " @", " 我架设的也是 seafile,ownCloud 没弄", " owncloud 主要是插件多，日历外挂存储（支持 google drive ）什么的 满足于 seafile 的功能又追求稳定的人选 seafile 好了 用 fuse 挂载来备份和 owncloud 没差别", "seafile 速度快，稳定。用 raspberry pi 这种小东西就能流畅使用。", " 如果上传多个同样的大文件（比如说几个 G ），分开存储的优势就体现出来了"]},
{"content": ["<div class=\"topic_content\">前端页面上有个记住密码的 checkbox 。\r<br>请问如何实现？\r<br>\r<br>下次打开 自动填充了账号和密码。（肯定不是直接把密码存 cookie 吧）</div>"], "reply": "17", "tittle": "记住密码功能如何实现？", "comment": ["交给浏览器就好", "选中记住密码的 checkbox 后, 这次登陆生成一个带过期时间的 cookie 活着 token 返回给客户端, 下次用户打开浏览器时判断 cookie 或 token 的有效期, 没过期的就直接认为用户已登录", " 不会被伪造么？", "网页上都是“保持登录”，哪有记住密码的", "朋友，你需要读读 HTTP cookies 详解", "这种功能不要去做，意义不大且很不安全", "同二楼, 不记住密码的话发个不带过期时间的 cookie 就行了 退出浏览器就被干掉", " 题主要的不是自动登录，是自动记住密码", "有记住密码吗？\r", "一般都是保持登录状态吧", "记住我，忘记密码", "网页保存登录后的 token 到 cookie 就好", " 我理错题意~", "这种功能我一般把账号存进 cookie\r", "\r", "下次进页面从 cookie 读账号填充账号文本框\r", "\r", "密码框由浏览器记忆填充", "自动填充用户名还行，自动填充密码完全没必要。做个保持登陆状态一段时间即可。", "最好别做记住密码，会被人打死的。保持登录就行了。", " 伪造可以通过 https, token 签名等方式规避, 但是要 100%安全是不可能的, 可以去看下 json web token\r", "\r", "千万不要去做什么帮用户记住密码然后填充, 这个让用户自己用浏览器活着第三方工具(1password 等)实现", "最好不要做，现在浏览器都带记住密码功能，这个安全的锅还是甩给用户好了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>是酱紫的，业余时间和微信、 YY 、酷狗等同学，在广州发起了一个 Android 开发的付费沙龙（ 100 元报名费），然后费了好多力气报名才到一半的报名人数，也就是 50 ，原计划 100 人，然后推两三天搞定的，现在目标只完成了一半。</p>\n<p>然后因为之前我也举办了一些列类似的沙龙，但是是免费的，为了成本考虑就会有一些嘉宾是来做“广告”的，甚至几乎都是做广告的，这个几乎是免费沙龙的潜规则了。但是这类免费沙龙推广还真是容易。</p>\n<p>我计算了下办一个干货沙龙的成本：</p>\n<p>1 、场地 5000 ；\n2 、讲师 4 人，每人包含准备啊，现场讲至少要花费一天到两天时间；如果按照 25K － 40K 的月薪的话，每个讲师付出均值在 3.5K ，四个人就是 14K ，然后现场维护的同学一个到两个，加起来人力算 15K 好了，已经是最低算法了。</p>\n<p>然后推广啊！宣传啊，如果算钱的话至少好几千啊，姑且算 5K 吧。</p>\n<p>所以一个干货沙龙办下来最低成本旧事 25K ，然后报名费用 7-8K 左右，有部分是学生票 50 元。</p>\n<p>从做生意角度看净亏损 17-18K 。</p>\n</div></div>", "<div class=\"topic_content\">13:40-14:50    全栈工程师李纪钢：《聊聊 Android 安全那点事》\r<br>14:50-15:40    欢聚时代 Android 开发工程师（ d_clock ）《 Android 应用程序内存管理优化》；\r<br>15:40-16:30    酷狗 Android 开发工程师黄铭志技术演讲《 Android 插件化框架》\r<br>16:30-17:20    微信 Android 开发工程师张绍文《微信热修复 Tinker 应用场景探讨＋微信性能优化思路＋ mars 开源计划》；\r<br>\r<br><a target=\"_blank\" href=\"http://www.huodongxing.com/event/9358794538800\" rel=\"nofollow\">http://www.huodongxing.com/event/9358794538800</a> \r<br>\r<br>值不值得大家自己看。</div>", "<div class=\"topic_content\">这个沙龙从策划就根本没想着挣钱啊，一丁点都没想过，只不过是希望通过沙龙费用对冲部分成本，让技术交流可以比较持续下去。\r<br>\r<br>然后也希望收费可以过滤一些会虫，发这个帖子啊，原因是跟自己之前的免费技术活动对比，发现收费 100 之后，报名推广居然比之前困难好几倍，这点是我意想不到的。当然你们可能也没想到，发这个帖子本身也是为了宣传，但是出乎我的意料，报名一个没有增长。\r<br>\r<br>最后 100 的报名我觉得还是非常轻松的哈，毕竟做 Android 开发的都知道，里面的技术分享嘉宾太值得 100 了！</div>", "<div class=\"topic_content\">回复里面有善意，有恶意的，也有好心的同学说，这么喷嘉宾看到是否会觉得寒心啥的，我自己没有这么玻璃心，愿意分享的同学应该也不会太在意。\r<br>\r<br>其实我敢发这个帖子，我自己有绝对自信说，这是一场值得参与的技术交流沙龙，而且如果没有特别大的意外，这个系列沙龙可能会持续的办下去。\r<br>\r<br>\r<br>然后感谢大家的“喷”才会让这个帖子火起来，更多人看到我策划、想法以及真正想组织好一个可持续的民间技术交流活动的初衷。</div>"], "reply": "147", "tittle": "想让程序猿花钱真的还挺难！！！", "comment": [" 应该没有这么玻璃心。其实我敢发这个帖子，我自己有绝对自信说，这是一场值得参与的技术交流沙龙，而且如果没有特别大的意外，这个系列沙龙可能会持续的办下去。", "说实话核心就是一个主讲人的技术水平和知名度。你拉四个没听说过的人来讲，我也不想浪费我的线下时间跑过去听，因为我得到的东西和我付出的成本是不匹配的。你要是把知乎温兆伦，覃超，等这种人拉来，分分钟票给你秒光。", "一般去 GDG 的活动（虽然并不是个 Android 开发者 233", "现在这个阶段，很多人觉得 android 真没什么好讲的了，回过头来看过去的十多年，移动开发技术沙龙只适合前中期\r", "09 年到 12 年北京那个氛围，各种人气爆棚", " 因为聊的是 Android 方面的技术，所以都是 Android 开源社区活跃的同学", " 现在 北京搞一个也应该非常多人参与", " 哈哈哈哈， GDG 我看很多城市负责人是前端大牛呢", "楼主说了那么多话，但就是完全没有站在用户角度考虑，换位思考下\r", "\r", "你会花 100 块钱去听一场之前不知道名字的人的演讲吗，反正我更倾向拿这钱买 2 本书看看。", " 所以有时候就是看 title 了", "国内演讲没啥意思", "其实我之前是挺喜欢去听这种沙龙 /讲座的，一是可以认识同行，增加人脉；二是的确有干货。\r", "\r", "现在不去了，原因有三：\r", "1. 掺水的太多，讲座的水平参差不齐，大多是标题党。\r", "2. 基本上每次完事都能收到一大堆的各种没用信息的名片。\r", "3. 很多讲座都沦为某些产品的免费宣传讲座。\r", "\r", "现在社交类 App 很多，想通过沙龙而 增加人脉的需求 被降低很多。\r", "\r", "PS ：不是吐槽 LZ ，仅仅是我现在不参加这些讲座的缘由，仅供参考。", " 不好意思，我们广州人比较务实，你这么说的话，去京城搞也许会好点", " Qcon 都是给公司赠票，公司再安排自己的人去", " 哪个城市的 GDG ？氛围如何呢？", " 嗯啊，对的，恰好，你说的这些我都规避了。\r", "\r", "\r", " 不要意思，别代表广州人", " 原来这种模式啊，我们公司也经常说有 qcon 的送的票", "建议每次 沙龙结束后 做个 回访 / 问答 什么的。。看看用户评价？？？\r", "只是个不成熟的建议", " en a ,这个是好建议！", "太自以为是了。。。", "讲课的质量不确定怎么样，很有可能白花钱，还有一点就是需要精力和时间，这些东西对参加的人来说也是成本，如果花了 100 元去听一个没多大意义的讲座，我感觉损失的是时间和精力。", "一副自以为是 错的不是我是这个世界 怎么可能起到宣传作用。主观就把程序员划成“你们”，还觉得有恶意评论，心理上设防，那“我们”为什么要支持你。如果我知道我参加的活动主持人是这么个态度我是不会去的。免费也不去。", "坦白地说 这些人业界的声望太低了。", "我不知道怎么说，李刚的书倒是看过，还可以吧", "说到底还不是 值不值的问题。", " 主持人是沙龙演讲的同学，我不会去。", " ", " 嗯啊，但是都是优秀的工程师，从侧面说明大家还是要多多在开源社区活跃哈", " 哇，这个搞的牛，像这个学习。不过是大型的技术大会，出席的也是技术社区顶级大 V 哈。", "策划也不是好做的啊……", " 嗯啊，还真是需要非常费心费力的。这个沙龙其实就是上周四群里有同学聊到说广州没有线下技术交流活动，然后就即时策划的", "想象一个北京或者上海的开发者，到广州，花好几天时间，两三千的交通、食宿费用，去参加这一个下午的沙龙，那得给你多大面子", " 额，同学，这是广州本地的小活动啦", "既然是搞营销，你就了解你的客户。你需要一个产品经理:)", "我更建议收个 500 、 1000 。 \r", "限定人数，小范围分享，讲完大家一起讨论，这钱就是 知识+社交。 \r", "纯粹的技术分享太多了，有心人网上一搜便有很多有干货的分享演讲。", "另，这帖子有点标题党了，真想找原因我觉得应该是诚恳的请教。\r", "少点套路，多点真诚吧。", " 额，不是搞营销的。这个是业余突发奇想发起的", "似乎有个逻辑错误：大家买东西，看的是值不值、对自己是否有用，而不是看卖家的成本。", " 这个估计需要花费更多时间和精力哈，不过是好建议。其实是想建立一种常态化的线下分享沙龙", "笨死了，根本不会营销，应该收 500/1000 送苹果原装 type-c hub/外设连接线套装", "说到底程序员群体还是比较的节俭，再说技术人员一般都不喜欢参加聚会活动吧，之前在 V 站中宣传卖苹果也都没什么效果，其实也就一包烟的钱，可以换一箱苹果，补补维生素啊，毕竟程序员健康更重要吧。", "说的好像你办沙龙程序员就必须花钱去听似的。我们有去与不去的自由好不。。。。\r", "\r", "程序员也花钱买软件，买电脑，买键盘，各种买买买。\r", "\r", "标题写“想让程序员花钱还真难”，就感觉是在说程序员抠。。。。", "你觉得程序员是太理智了呢？还是太不理智呢？ Ｏ(≧▽≦)Ｏ", " 哈哈哈，标题党了，不然没人点进来看嘛", "要是在南昌我一定去。江西这方面几乎没有，伤心。", " 之前西安 GDG 去了一两次，很多校友的样子，氛围很好啊，索然听起来不明觉厉的样子", "程序媛免费并送礼品，程序员收费。", "看楼上回复，让程序员花钱还真挺难，哈哈"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h4>组内其他的工程师都是老大哥了。</h4>\n<h4>而我是一个刚刚实习两个月左右的实习生。。</h4>\n<h4>要不我去讲一下刷 OJ 的思路？：(</h4>\n<h4>求一些好的分享主题，谢谢诸君</h4>\n</div></div>"], "reply": "44", "tittle": "公司每周分享会。下周就要轮到我这个实习生了，求好的分享主题。蟹蟹", "comment": ["实习两个月就是刷了 2 个月 oJ 么，雾 。 其他都是老司机的话，那么估计你分享的都是他们懂得东西，所以只要讲的东西你自己理解就行了。 （同实习生", "分享会讲究有趣或有用。\r", "\r", "有趣，不多解释。有用，介绍介绍你负责的模块，会的技能（这样大家在出了 BUG 之后好第一时间找你）。", "下周分享的话……分享双 11 什么值得买？会不会很应景很实用。", "老司机也不是什么都懂，毕竟编程涉及的范围非常广。\r", "\r", "比如他们都是前后端，你就可以搞点信息安全什么的，稍微深入一点", "讲讲怎么快速找到合适的女朋友.", "分享如何装作已经分享过很多次干货的样子", "分享你的人生经历 大学生活什么的 老司机最喜欢听这些了 还可以适当引起共鸣  如果讲技术未免太过乏味", "函数式编程／机械键盘选购／或者挑些有趣的算法题讲一下", "你是分享而不是培训，完全不用怕别人听不听得懂，讲自己熟悉的领域就可以了\r", "\r", "(甚至，大家听不懂更好…误", "《为什么“公司每周分享会”没用》。仅供参考", " 哈哈。我感觉这样会被打死", " 这个感觉可以", "扯点边缘的,双十一购物导购 /mac tips 分享 /如何选购 nas/如何选购硬盘 /如何识别奸商....", "我们这新人串讲 /分享都是让讲对自己的工作内容的理解", "可以找个论文读读讲一下. 既然是分享, 主要在于打开思路, 或者了解某个领域, 而不是教学", "我当时讲了爬虫", "我当时讲了下在学校破解网站啥的", " 我前几周也讲了爬虫", "实习讲的 web 安全.. 实验室分享讲过心理学科普 233.", " 《如何做好一个好的分享会》", "看下逻辑思维，今天晚上 8 点直播开会，学习学习把", "超大规模超高并发分布式平台下数据库的增删改查性能调优", "没必要讲技术的分享啊 生活或者历史知识或者哲学知识都可以的啊 选择自己擅长的知识面引起大家的共鸣！", "计算机是如何实现位运算的", "上次我这边有一个应届生的分享不错，金庸武侠小说里的武器排名与历史。可以参考", "结合自身实际，分享一下你在实现中华民族的伟大复兴之路上所做出的一点微小的贡献（手动滑稽）", "只需知道切勿在老司机面前装逼，会翻车的。", "我也觉得没必要讲什么具体技术，我听过的很多就是找个 XXXX 新手入门系列一讲就完事了，这还要你讲啥啊··我自己找个看看不更快···", "告诉你，老司机都不知道那些水果养颜，那些水果适合泡妞，那些水果是应季节的，", "新手 讲一下自己 的背景，做过的有意思的事情，并不一定要局限于公司的产品。", "讲一下大学时候如何成功 hack 掉教务处网站改了成绩然后加入本公司的，其他人绝对会对你刮目相看", "分享主题 : adc 对线套路", "公司怎么运行才会更好", "Rust 语言，逃……", "讲讲希拉里", "讲他们不了解，但是又有兴趣的\r", "比如最近的韩国政坛、美国政坛什么的，各种狗血剧情", " 只有我一个人觉得这种事情其实很 low 吗", "就我司的经验来看，一般是分享自己遇到的某个 BUG ，分析&解决思路。或者介绍一下自己新开的某个 project ，进展，看看有没有人想要加入。", "分享如何上 1024", "分享会切记分享一知半解的 切记分享个人生活历史 切记分享前辈都了解的 最好分享一下自己的熟知领域 在座的又不是特别了解或者新语言的学习以及见解 毕竟新语言大家都不了解 没资格鄙视你 还有很多冷门领域 而那个又是你的兴趣 那就再好不过了 最关键一点 还是要有趣 说得让人昏昏欲睡 不如不说", "分析下 SKT 和 SSG 的第三局比赛", "如何海淘\r", "\r", "xxx 从入门到放弃", " 老司机来分享下", "我们兄弟科室的领导在每月大会上, 分享如何在每周周会上利用机会练习表达的, 他还分享通过练习后自己的细微变化, 虽然他的分享和我的工作无关, 但我对我仍然有用, 输入影响输出, 所以要不断练习输入的能力, 和敲代码一样一样的, 熟能生巧."]},
{"content": ["<div class=\"topic_content\">下面是多说的通用代码，这三个变量\r<br>data-thread-key=\"请将此处替换成文章在你的站点中的 ID\" data-title=\"请替换成文章的标题\" data-url=\"请替换成文章的网址\"\r<br>实在没搞明白，请高人指教，谢谢。\r<br>\r<br>&lt;!-- 多说评论框 start --&gt;\r<br>\t&lt;div class=\"ds-thread\" data-thread-key=\"请将此处替换成文章在你的站点中的 ID\" data-title=\"请替换成文章的标题\" data-url=\"请替换成文章的网址\"&gt;&lt;/div&gt;\r<br>&lt;!-- 多说评论框 end --&gt;\r<br>&lt;!-- 多说公共 JS 代码 start (一个网页只需插入一次) --&gt;\r<br>&lt;script type=\"text/javascript\"&gt;\r<br>var duoshuoQuery = {short_name:\"medmin\"};\r<br>\t(function() {\r<br>\t\tvar ds = document.createElement('script');\r<br>\t\tds.type = 'text/javascript';ds.async = true;\r<br>\t\tds.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//static.duoshuo.com/embed.js';\r<br>\t\tds.charset = 'UTF-8';\r<br>\t\t(document.getElementsByTagName('head')[0] \r<br>\t\t || document.getElementsByTagName('body')[0]).appendChild(ds);\r<br>\t})();\r<br>\t&lt;/script&gt;\r<br>&lt;!-- 多说公共 JS 代码 end --&gt;</div>", "<div class=\"topic_content\">首先，感谢 @<a target=\"_blank\" href=\"/member/rhen\">rhen</a> ，搞定了\r<br>其次，为后来者做一个小小总结：\r<br>- octopress/source/_layouts ，这个文件夹是网站模板，里面有个 post.html ，是每篇日志的模板\r<br>- 把多说代码拷贝进去即可，注意，放在&lt;footer&gt;前面，否则很丑\r<br>\r<br>第三，各位推荐畅言的，我觉得畅言也不错，但刚才去注册了，要求必须填写 ICP 备案号，我一个个人博客，挂在 github 上，有个啥 ICP 备案号呢？所以。。。。。</div>"], "reply": "16", "tittle": "请教怎样在 Octopress 建的博客里加入多说的代码？", "comment": ["多说是个坑，既然还没上车建议还是不要上了", " 那有类似多说的工具吗？", "文字换成变量就行，不过 octopress 的文档好像没写变量，应该和 jekyll 差不多。\r", " 明白了，谢谢，我回去试试", "从多说换到畅言了", " 感谢！已经搞定！！就是按照你给的 jekyll 的 doc ，换成对应的变量就是了。非常感谢，铜币已发送！", " 恩，谢谢，畅言也 收藏了。如果多说遇到问题，就换了。谢谢！", "搞什么多说啊。。。", "确实不要用多说，我的博客已经从多说迁到 disqus 了", " \r", " 兄弟们，不要惜字如金嘛，多说几句，为啥多说不好嘛", "经常无缘无故的挂，这是最不能忍受的点", " 但是畅言吧，需要备案，我一个挂在 github 上的博客，没有备案号，就很纠结了。", "  不稳定，总挂，这条 够么 :)", " 畅言要备案号才行的啊亲，我就一个挂在 github 上的博客，还是个二级域名，怎么备案呢。。。。。", " 不是 我就纳闷了，你多少流量？你建个私人博客 对评论需求到底多大？这个博客优先级最高的是什么事？我说不要挂多说 更没说因此而去挂畅言。。。先把博客质量做好吧！竟纠结这些没用的", " 算了，不争了，伤和气"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>2012 年毕业的大专生， 软件专业 ，毕业后转行了。\n05 年 6 月回归 web 前端开发这个工作 经验不是很多 基本都是边干边学的 ，\n可以做出基本的网页 ，\nhtml css3 比较熟练 ，\n熟悉 bootstrap 和 ajax 数据交互，\n熟练 jquery 可以写轮播 弹出框 鼠标事件等 ，\nps 也会一些简单的 ，\n现在在北京 想找个工作 学习点更好的技术，\n初来乍到希望大神们能给我机会。<br>\n真心感谢！</p>\n</div></div>"], "reply": "7", "tittle": "不到一年经验菜鸟 web 前端 求工作", "comment": ["求工作？一份工作是相互认可，不是求来的，你来错地方了。", "IE 还没在中国失去占有率，在面试时还是会问起的，中国人的手机上还有 uc 浏览器，且 uc 最近的更新不是为兼容性。\r", "我前端学了很多， canvas, AMD 规范 CMD 规范， js 设计模式，面试时根本不问这些", "我是做后端三年之后转行到前端", " 心酸。。。", "12 年毕业 05 年六月回归 web 前端开发。。。。。\r", "厉害了 word 哥。。。。。", "心塞", "醉了 手抖了 是 15 年"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>一个好的互联网公司都离不开好的产品经理，对产品有着充分理解、有强大的分析判断和执行的能力、有良好的沟通和表达能力，对未来自市场、用户等各方面的需求进行收集，编写产品的需求文档；\n<code>产品</code>提出需求，<code>程序猿</code>根据需求设计开发方案，在项目的开发过程中程序猿和产品有很多的交集，不断的讨论碰撞，今天就让我们来好好的说一说程序猿和产品狗的恩恩怨怨吧。</p>\n<hr>\n<p><img alt=\"产品与猿\" src=\"http://demo.thankbabe.com/blog/images/cxy-cpg.jpg\"></p>\n<hr>\n<blockquote>\n<p><code>申明以下产品狗只是一个褒义的称呼，如：程序猿、攻城狮、射鸡师、产品狗</code></p>\n</blockquote>\n<hr>\n<h3>程序猿 VS 产品狗</h3>\n<hr>\n<ul>\n<li><code>产品狗</code>：(｡･∀･)ﾉﾞ嗨，这块业务你做了吗，我们需要调整下，因为之前逻辑有点问题..</li>\n<li><code>程序猿</code>：/(ㄒoㄒ)/~~，<code>又</code>改需求，确定的需求能不能不再改了，你总是能给我理由，受伤害的总是我！</li>\n<li><code>产品狗</code>：相信我这是最后一次修改。</li>\n<li><code>程序猿 OS</code>：这个本年度最不可信十大的谎言之一，我可以说脏话吗？ F**K 哔哔 ***</li>\n</ul>\n<p><img alt=\"改需求\" src=\"http://demo.thankbabe.com/blog/images/cxy-gxq.jpg\"></p>\n<blockquote>\n<p>不同的开发阶段修改需求代价不一样，越到后期代价越高，产品狗请三思，程序猿应该根据修改内容上报上级，不能默默的承受了，不惯着产品随意改需求。</p>\n</blockquote>\n<hr>\n<ul>\n<li><code>产品狗</code>：这个需求和之前项目的很像，你应该可以很快完成吧？</li>\n<li><code>产品狗 OS</code>：不就 copy and paste ，应该很快;</li>\n<li><code>程序猿</code>：之前不是设计成通用的服务或者模块，这次需要重新做；</li>\n<li><code>程序猿 OS</code>：你把我当成是代码的帮运工么</li>\n<li><code>产品狗</code>：。。。</li>\n</ul>\n<blockquote>\n<p>通用业务模块化，组件化，系统化，产品在设计的时候需要考虑，程序猿在需求会的时候也应该根据需求内容提出建议。</p>\n</blockquote>\n<hr>\n<ul>\n<li><code>产品狗</code>：这个上线出问题了，旧版本不兼容，导致....，先加个版本控制吧</li>\n<li><code>程序猿</code>：又加版本控制，下次需求能不能把这种问题考虑进去。</li>\n<li><code>产品狗</code>：。。。</li>\n</ul>\n<blockquote>\n<p>产品需求在做需求的时候需要考虑周全，需要考虑新旧版本交替问题,以及需求相关联的业务影响问题,等\n程序猿在需求会的时候根据自己对业务的了解提出问题</p>\n</blockquote>\n<hr>\n<ul>\n<li><code>产品狗</code>：本期需求内容是这样的，巴拉巴拉，功能模块*N.....；</li>\n<li><code>程序猿</code>：这期需求内容有点多，我们预估下开发时间有点长，我建议分期开发；</li>\n<li><code>产品狗</code>：本期需求内容都是很重要的，我们期望可以同时完成上线；</li>\n<li><code>程序猿</code>：意思是要加班完成喽。。。</li>\n<li><code>程序猿 OS</code>：我可不想加班到狗带；</li>\n</ul>\n<blockquote>\n<p>需求内容过多无法按照产品的期望时间上线，往往要通过加班来填补，这种燃烧生命在工作的方式不提倡，而且加班赶工人在疲劳的状态下写的代码一般都很难维护和拓展， bug 率也会变高。\n产品应该根据程序猿提出的评估进行需求上的调整分期开发。</p>\n</blockquote>\n<hr>\n<blockquote>\n<p><code>还有很多的情景，一时间没想起来，大家一起来补充</code>\n... ...</p>\n</blockquote>\n<hr>\n<h3>总结产品的几大宗罪</h3>\n<hr>\n<h4>动不动就修改需求</h4>\n<ul>\n<li><code>猿的供词</code>：</li>\n</ul>\n<blockquote>\n<p>无论开发到哪个阶段，<code>产品</code>总是有着突如其来的灵感，这个 UI 要调整下，那个业务逻辑修改下比较合理，有时候甚至是打掉原有方案重做，玩我么？</p>\n</blockquote>\n<ul>\n<li><code>联盟调解</code>：</li>\n</ul>\n<blockquote>\n<p>在开发的过程中需求的调整是不能完全避免的，但是理应在需求讨论的时候就把所有的内容确认清楚，竟可能的不在开发的过程中进行需求的调整，\n不同的开发阶段修改需求的代价不一样，越到后期代价越高，所以<code>产品狗</code>们请三思，非严重或者市场战略的业务逻辑问题就考虑下一期调整，\n程序猿需要 hold 住需求的修改要求，禀报上级，不能让产品养成随意修改需求的习惯。</p>\n</blockquote>\n<hr>\n<h4>需求内容不够详细</h4>\n<ul>\n<li><code>猿的供词</code>：</li>\n</ul>\n<blockquote>\n<p>需求惜字如金，缺少必要的描述，什么鬼，看需求文档完全不知道要做什么？</p>\n</blockquote>\n<ul>\n<li><code>联盟调解</code>:</li>\n</ul>\n<blockquote>\n<p>需求内容应当尽量的详细，复杂逻辑需要给出流程图，在不需要解释的情况下能让人看懂本期需求要做内容的文档才是好文档。</p>\n</blockquote>\n<hr>\n<h4>需求考虑不周全</h4>\n<ul>\n<li><code>猿的供词</code>：</li>\n</ul>\n<blockquote>\n<p>眼光紧现本期需求内容，往往没有去考虑细节问题，长远问题，需求连带业务问题，上线后发现问题手忙脚乱。</p>\n</blockquote>\n<ul>\n<li><code>联盟调解</code>:</li>\n</ul>\n<blockquote>\n<p>产品需要考虑新旧版本交替问题,以及需求相关联的业务影响问题,需求设计模块化，组件化，系统化思维，等。\n程序猿也应该根据自己的经验和对业务的了解提出建议。</p>\n</blockquote>\n<hr>\n<h4>需求缺少数据依据</h4>\n<ul>\n<li><code>猿的供词</code>：</li>\n</ul>\n<blockquote>\n<p>需求中都没有对本期需求提供数据的依据，感觉整天都是为了做需求而做需求，一点成就感都没有,没干劲..</p>\n</blockquote>\n<ul>\n<li><code>联盟调解</code>：</li>\n</ul>\n<blockquote>\n<p>产品的需求中应该有对本期需求的内容提供相关的数据依据，比如：上期的优化数据结果展示，本期优化预计会达到多少转化率、参与量，新业务预计要达到多少的用户量、转化率多少，等\n数据是最有说服力的，可以表现项目的价值，以及带给我们成就感，同时对开发的设计方案也有一定参考作用。</p>\n</blockquote>\n<hr>\n<h4>项目流程不熟悉</h4>\n<ul>\n<li><code>猿的供词</code>：</li>\n</ul>\n<blockquote>\n<p>需求还没确定清楚就开立项会，甚至还在立项会修改需求，我的眼睛，已瞎...</p>\n</blockquote>\n<ul>\n<li><code>联盟调解</code>：</li>\n</ul>\n<blockquote>\n<p>立项会是要对本期要做的内容进行成立项目，并且根据本期内容排人员以及开发周期包括：开发，测试，验收，上线，线上验收等，整个的时间周期；\n产品需要严格遵守项目开发流程，做一个有节操的<code>产品狗</code>;</p>\n</blockquote>\n<hr>\n<h4>需求内容没有创新，跟着竞品的脚步</h4>\n<ul>\n<li><code>猿的供词</code>：</li>\n</ul>\n<blockquote>\n<p>需求怎么老是跟着竞品的脚步走，喜欢一直在模仿从未被超越的感觉？</p>\n</blockquote>\n<ul>\n<li><code>联盟调解</code>：</li>\n</ul>\n<blockquote>\n<p>竞品之间相互的参考和模仿这个是必然存在的，这算是投机取巧的一种方式，毕竟一个好的需求要想出来不是一件容易的事情，不过还是建议可以参考，不要一味地模仿，\n虽然高仿也可以走出一片天，如互联网大亨 T*,运动品牌阿迪王，好矛盾的话题。</p>\n</blockquote>\n<hr>\n<h3>话题：</h3>\n<hr>\n<ul>\n<li><code>身为程序猿的你对身边的产品狗有哪些看法？躁起来吧</code></li>\n<li><code>产品狗也可以来吐槽下程序猿，别忍了，亮剑吧~</code></li>\n<li><code>留言讨论 GOGOGOGO</code></li>\n</ul>\n<hr>\n<p><img alt=\"team\" src=\"http://demo.thankbabe.com/blog/images/team.jpg\"></p>\n<blockquote>\n<p>感谢大家的支持，领取天猫 [<a href=\"http://s.click.taobao.com/uc1hdQx\" rel=\"nofollow\">双 11 红包</a>] ，获得推广费用来维持网站的运行，谢谢理解。</p>\n</blockquote>\n<blockquote>\n<p>大家有啥意见或者建议的到 <a href=\"http://blog.thankbabe.com/2016/06/26/cpgandcxy/?from=v2ex\" rel=\"nofollow\">原文地址</a> 给我留言吧，感谢支持~</p>\n</blockquote>\n</div></div>"], "reply": "2", "tittle": "大话程序猿 VS 产品狗", "comment": ["<img src=\"", " \" />", "程序：记的带把刀上班。分分钟砍死产品狗~"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>2016 年，网易杭州研究院（以下简称“杭研”）成立十周年之际，网易云推出“十年·杭研大咖说”系列访谈文章，针对亲历杭研核心技术体系变迁的数位技术大牛发问，揭秘网易云背后的技术脉络、技术人和研发故事。网易视频云 CTO 邱似峰接受了“十年·杭研大咖说”的采访。</p>\n<p>邱似峰介绍了他与杭研结缘的故事，以及他在杭研积累的技术、管理经验，着重解读了他目前负责的网易视频云的研发，并对视频云的未来技术方向进行了阐释。他认为，浓厚的技术导向氛围使得杭研成为技术人的福地，同时杭研的用户导向价值观保证了研发获得的认可度。</p>\n<p><img alt=\"1\" src=\"http://mmbiz.qpic.cn/mmbiz_jpg/xz85NnvGp3ZkuQhS6RJUKnNZ1crD7ibuUTX0CrBZH73b6agA7UkJD7KnfcicECB6u8dtQJevjHfzQ1W74D3iaArtQ/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1\"></p>\n<p>邱似峰， 2007 年加入网易，期间先后主持了分布式数据库、分布式文件系统、数据库云服务、对象存储云服务的研发工作。在大规模分布式系统和海量数据处理系统方面有丰富实战经验，拥有超过 10 项核心技术专利，是网易服务端技术专家。之后带领团队研发了视频云产品，目前担任网易视频云 CTO 职务，专注于音视频直播、点播、 CDN 相关技术研发工作。</p>\n<p>加盟杭研：为技术导向氛围吸引</p>\n<p>Q ：请先介绍您在杭研的工作经历，参与过哪些系统的研发，目前主要负责哪些技术、产品线？</p>\n<p>邱似峰：我 2007 年毕业后就加入杭研，最开始的四五年是做分布式数据库的研发（分布式数据库和分布式文件系统是杭研早期用来解决互联网海量数据处理和存储问题的两个系统）。我从底层开始，先做一些周边的工具，再慢慢地做一些核心的模块，然后负责整个分布式数据库产品。</p>\n<p>之后杭研成立了一个存储平台部门，我负责分布式数据库和分布式文件系统。这两个产品做了一年之后，杭研转向企业私有云的研发，我们团队做几个云化的产品，包括对象存储、数据库的云服务。去年，我又负责组建团队做网易视频云的研发。</p>\n<p><img alt=\"1\" src=\"http://mmbiz.qpic.cn/mmbiz_jpg/xz85NnvGp3ZkuQhS6RJUKnNZ1crD7ibuUOeVY3CWhYm9NIicwWaPCYE779NBHZhOgxsYcSpwDy4CPPXUOkpEFBeA/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1\"></p>\n<p>Q 、当初选择加入杭研，并在杭研工作这么长时间，最吸引您的因素是什么？</p>\n<p>邱似峰：如前面介绍，我在杭研的大部分时间是做技术研发，我喜欢这样的工作。杭研的研发氛围非常好，每一个研发人员、每一个团队都有足够的空间，能够决定自己的研发方向，在确定技术路线并和高层沟通好之后，就可以着手研发。也就是说，技术导向的氛围比较浓，技术人员发挥的空间比较大。</p>\n<p>Q 、技术导向的情况下，技术人如何确定研发的产品是否符合市场需求？</p>\n<p>邱似峰：这是一个关键的问题。做私有云的时候，一定要满足用户的预期需求，其实我们团队所有的小伙伴都会奉行的一个价值观，就是用户导向。一定要做某件事情的时候，要先和相关产品各类可能的用户都去沟通，了解如何才能给他们带来最大的帮助。在研发的过程中保证不走偏，不能只是关注研发。例如我们做存储服务（有 6-7 位研发，外加半个运维），需求会先经过市场人员，再传递到研发部门，研发会先碰到用户，因为私有云用户量不会特别大，我们平时多和这些用户在一起，知道用户是怎么想的，就能保证产品是用户所需要的。</p>\n<p>同样的道理，做公有云的研发，也是要先做好用户调研。</p>\n<p>见证技术变迁：从单个系统到公有云</p>\n<p>Q 、从您的角度，这十年来杭研技术体系有哪些的重要变迁，到目前为止解决了哪些难题？最新的核心技术有什么与众不同的地方？</p>\n<p>邱似峰：从最开始的分布式数据库系统，到做一些云化，解决问题的思维是不一样的。以前做分布式数据库、分布式文件系统时，可能专注于解决某互联网产品的某一个核心问题，如结构化数据处理查询、海量数据存储的问题；做私有云的时候，思维有了转变，从解决单个点的问题，变成解决一个面的问题，就是解决存储一类问题需要用哪种解决方案。解决点的问题，可能有一些地方思维不够发散。另外做云的时候，可以把通用的需求，和周边附带的数据之上的一些处理，也融入到这个云里面，如汪源院长在网易云发布会上说的，杭研能够在很短的时候孵化出很多的互联网产品，底层的云的支撑很重要，通过云服务模式，我们能够解决很多产品的通用需求。这就是从点到面的两代技术变迁。</p>\n<p><img alt=\"1\" src=\"http://mmbiz.qpic.cn/mmbiz_jpg/xz85NnvGp3ZkuQhS6RJUKnNZ1crD7ibuU7yyIiaQlNNo1lCCjb6nRyujU8GlbnfE52Jz99EflatebZheCeVO5FibQ/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1\"></p>\n<p>图：网易分布式 KV 存储系统架构</p>\n<p>现在公有云是第三阶段。公有云会专注打造一些场景化的服务，把解决网易互联网产品开发者遇到的问题的能力开放出来。杭研是比较特殊的一点，是既做产品，又做技术，并且这两块在同一个组织架构下融合得特别好，所以我们非常了解开发需求的痛点，这和其他的公有云团队相比是一个比较大的优势。</p>\n<p><img alt=\"1\" src=\"http://mmbiz.qpic.cn/mmbiz_jpg/xz85NnvGp3ZkuQhS6RJUKnNZ1crD7ibuUicQe3QBqTWqwibIicah6YicLw9ZtiaJpicwqQHf3RjVsMgaEgYqPAkkDG41w/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1\"></p>\n<p>图：网易公有云产品矩阵（ 2016 年）</p>\n<p>视频云研发：技术难题与团队协作</p>\n<p>Q 、在您现在负责的网易视频云产品方面，我们攻克了哪些难关？</p>\n<p>邱似峰：我们从开始做内部视频云到现在，已经有三年多。从海量视频数据的服务端处理和核心诉求开始，最早是音乐和教育这两个产品线提出的需求，要做一个分布式系统，处理海量视频数据，满足视频上传、存储、处理等功能的需求。各种视频文件有很多细微的差别，如何能够处理好，也有很多方面的技术在里面。</p>\n<p>我们首先做一个视频转码服务，以云的形式暴露给他们，让他们不用在乎技术上的难题。解决的几个难点，一是如何快速处理海量数据；二是编码、转码的效率和更高的质量。</p>\n<p>第二个产品是做跨平台的 SDK ，针对 Web 、 Android 、 iOS 端的播放器， SDK 会把通用的功能封装成统一的库，再根据不同的平台采用 Java 、 Object-C 、 C++进行 API 封装，解决异构环境对用户的开发影响；另外是推流，相当于从手机端把视频采集过来编码发送，这在网易 Bobo 等公司内部产品已经提供上线。</p>\n<p>之后从去年下半年开始，我们就开始做公有云服务，公有云的第一件事情，就是把上述功能，包括安全能力等等打包成一个整体，让用户看到的是一个通用的网易视频云解决方案。另外，我们现在很大一部分的精力放在解决视频数据在互联网上的传输问题，因为视频现在以直播为主，传输网络对用户体验非常重要，我们先从源头开始，从上行，把整个传输网络在全球搭建出来，保证用户就近获取视频数据。我们最近成功推出了互动直播，延时控制在 200ms 以内。</p>\n<p>Q 、分布式数据库、对象存储的经验对网易视频云研发有什么好处？</p>\n<p>邱似峰：这其中确实是有很大的差别，研发方向是完全不一样的。但是人都是要有一个学习的过程的。其实我之前在学生时代研究的方向也不是分布式数据库。所以软件开发者在职业生涯中不一定要局限于某一个领域，要看到以后的方向、趋势，跟着热门技术趋势去做研发，沉淀一些自己的东西。我以前的一些分布式、服务端的开发经验，也是现在的视频技术研发所需要的。比如网易视频云核心的转码服务，我们采用多节点分布式转码集群对音视频进行转码处理，并行支持 10000 路多码流多倍速转码，对并发能力和转码效率都是很重要的；通过支持容错和动态扩容机制，则可以保证转码集群 99.9%的高可用性。</p>\n<p>当然，因为方向完全不一样，我也不可能完全精通所有的技术，整体解决方案的研发，就要依赖团队的力量来做。但是很庆幸，网易在音视频研发方面有 15 年的技术积淀。</p>\n<p><img alt=\"1\" src=\"http://mmbiz.qpic.cn/mmbiz_jpg/xz85NnvGp3ZkuQhS6RJUKnNZ1crD7ibuUAhKxYCcj1PRyj0J2Dl8sjjDFVjzkdYq0J6UghffmaLqIrVGXC2QQ8Q/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1\"></p>\n<p>图：网易视频云分布式视频处理平台通过租约的方式实现元数据同步和高可用（如果 A 宕机， configserver 更新 B 的租约，将 A 负责的调度任务交由相邻节点 B 继续执行）</p>\n<p>Q 、谈到团队，您对于视频技术团队的背景、技能，以及解决问题的能力，有什么样的要求？</p>\n<p>邱似峰：技术团队最主要的是两点：</p>\n<p>一是专业性，视频是一个专业领域，研究生的方向就不是计算机基础，而是信号处理，整个技术栈和一般程序员掌握的计算机技术是不太一样的，所以视频研发肯定要保持专业性，团队成员最好能够有足够的工作积累。</p>\n<p>另外，刚才谈到的用户导向也很重要。有很多技术很好的程序员，单思维可能和互联网产品研发的要求有一些差距。我们觉得还是要统一用户导向的价值观来指导研发。</p>\n<p>Q 、除了这两个方面，做成网易视频云产品，还有那些关键因素？</p>\n<p>邱似峰：还有很多。包括产品团队、市场团队、运营团队、销售团队，对于通用能力来说，除了用户导向，整个团队的执行力也是一个关键点，认准一个目标，要在约定的时间把问题解决。</p>\n<p>Q 、网易视频云产品也实现了和网易易盾、网易云信的无缝集成，实现广告过滤、智能鉴黄等功能，能否介绍多个团队是如何协作的？</p>\n<p>邱似峰：这个协作是比较自然的，是用户决定的。比如娱乐行业的用户用了直播之后，会有做反垃圾的强烈需求，几个能力要一起采购，所以我们需要合作，一起做好解决方案，服务同一个用户。这对几个产品团队都是有好处的，因为目标一致，所以整个合作起来比较顺畅。</p>\n<p>Q 、当不同的团队有一些分歧的时候，我们是如何处理的？</p>\n<p>邱似峰：目标一致的时候，程序员和程序员之间的沟通，并不存在特别严重的问题。如果有问题，我们就是对事不对人。一个正常的项目组，不可能一点争论都没有，围绕事情争论是很合理的。</p>\n<p>Q 、作为网易产品研发云的一部分，目前网易视频云上的开发者主要来自哪些领域，他们最喜欢用视频云的 SDK 来做哪类应用？</p>\n<p>邱似峰：目前，网易视频云已成功接入了宝宝树、东家手艺人、猎聘网等知名用户。同时，网易新闻客户端、网易 Bobo 、网易云课堂等网易系产品也接入了网易视频云。从去年开始，爆发的是娱乐秀场，现在教育是一个比较大的需求。从今年开始，各行各业都会有一些视频方面的需求，比如电商（直播购物）、金融（股评讲座）、广电（电视节目上云）、企业协作软件（视频沟通），这些方面都有视频云的需求。</p>\n<p><img alt=\"1\" src=\"http://mmbiz.qpic.cn/mmbiz_png/xz85NnvGp3ZkuQhS6RJUKnNZ1crD7ibuUo7YRQDgNBONuPlZk88Cd2cPfmzK2L2BZ6bZse579jlgDpnaL1vtniag/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1\"></p>\n<p>图：网易视频云在线教育解决方案</p>\n<p>Q 、开发者采用网易视频云遇到最多的问题是什么，我们如何帮助他们解决这些问题的？</p>\n<p>邱似峰：开发者对网易视频云最大的需求就是快速接入视频的能力，由于开发者的水平不一样，在接入、调试、使用过程中，确实可能有一些问题，最好的解决办法，就是一对一的技术支持，比如开发者对开发文档、示例代码不理解，在 QQ 技术群里提问，技术支持工程师可以第一时间帮助他解决问题。</p>\n<p>另外一个典型的问题，直播有时候因为一些网络问题比较卡，用户体验会不好，这时候就需要我们和开发者一起定位问题，帮助用户找到原因。这对 APP 开发者是很大的好处的，他们会接到用户的投诉，但是不知道具体的原因到底是什么，我们需要帮助他们找出问题的原因，到底是传输网络的问题，还是用户网络的问题，如果是后者，可以协调用户，比如让主播到一个比较好的网络环境。</p>\n<p>Q 、从产品研发的角度，网易视频云下一个需要解决的问题是什么？</p>\n<p>邱似峰：是帮用户解决卡顿的问题，帮用户找到原因是很重要的一点，同时我们也希望通过技术手段把网络做得更好，在网络不太好的情况下，要让视频数据传输效率更高、视频质量更好，当用户网络真的出现不可避免的卡顿时（因为主播有可能拿着手机进行移动直播，很难保证网络质量），要能够让用户体验不要下降太多。另一方面，我们也会在全国和海外部署更多的 CDN 节点去加速网络传输。</p>\n<p>我们现在通过客户端独有的网络 QoS 流控算法、自研传输协议，在网络不好情况下，自动增加缓存，保障网络传输的流畅性和低带宽条件下更流畅的音视频体验。另外还有全链路优化，推拉流时把基于 DNS 调度，改为采用 IP 中心调度策略，选择最优的网络节点，拉流时采用自动 HTTP-302 策略。同时，我们结合自建源站，融合多家 CDN ，优化服务端网络传输。</p>\n<p>研发管理：技术、团队、产品都要懂</p>\n<p>Q 、对于如何带领一个研发团队，您有哪些经验可以分享？</p>\n<p>邱似峰：首先，内部沟通满足团队成员需求是很关键的，大家的想法需要一致，一方面要了解团队成员的期望和长处，把他对网易的认可与个人的发展相结合，团队的稳定性会更好。例如，一个员工做好一件事情之后，有机会向整个团队分享他的心得，他能收获更大的成就感。将这种分享机制贯彻下去，团队做事情就会比较顺畅。</p>\n<p>其次，对外还是要多关注业界的动态，预测哪些技术会爆发。如果是作为真正的 CTO ，还需要有一定的产品的意识，看自己的产品和竞品有什么差异化，能否满足市场需求。</p>\n<p>另外，哪一类 2C 产品会在接下来的一年爆发，这也是有价值的事情，因为这类产品往往会带来后端服务的很多新需求。</p>\n<p>所以，带领研发团队，团队内部、技术方向、产品洞察都是需要考虑的事情，虽然不能像产品经理一样有细致的了解，但也需要对产品趋势有一个基本的判断。</p>\n<p>Q 、您如何评价您自己近十年来在杭研的主要收获？</p>\n<p>邱似峰：我 2007 年进入杭研的时候是一个应届毕业生，最初的几年主要是掌握了接触到的各种技术知识，尤其是现在云计算时代非常重要的分布式架构的设计。后来随着工作的变化，我的个人能力获得了更全面的提升，包括管理能力，以及更开放的思维、更广阔的眼界，这些都可以帮助我个人更好地成长。</p>\n<p>Q 、您如何认识杭研未来的变化，以及面临的挑战？</p>\n<p>邱似峰：从私有云到公有云，杭研的变化是很明显的。支撑网易内部业务的时候，只要专注做事情，有足够的恒心、毅力，就能把事情做得很好。现在做公有云，固然需要先做好技术研发的事情，另一方面，也要找到和竞品有区别的发展方面，比如网易云现在要结合自己内部的互联网产品研发经验，做面向互联网+的场景化云服务。定好方向之后，就要加快研发，加快产品落地的速度。</p>\n<p>对于挑战，我认为还是要考虑好未来的定位，抓住期望的市场，打造符合市场预期的产品。我现在带领研发团队，会更从内部关注产品的打磨，包括用户体验、稳定性和性能等方面。</p>\n<p>写在最后</p>\n<p>从初级程序员到 CTO ，在杭研宽松的研发环境下，邱似峰似乎这九年来走得比较顺利。但正如邱似峰所说，从分布式数据库、存储到视频，从私有云到公有云，其研发目的从未偏离用户需求，相反，他和他的团队勇于不断挑战不同的技术方向，为网易解决了一个又一个问题。邱似峰的成长，正是杭研人十年不断“趟坑踩雷”的缩影。同样，杭研现在开放的网易云，也是杭研人不断解决网易互联网产品研发问题的经验结晶，是瓜熟蒂落的方法论。</p>\n</div></div>"], "reply": "2", "tittle": "十年•杭研大咖说 | 邱似峰：从应届生到网易视频云 CTO 的蜕变", "comment": ["可以，很强", "图一 QuryServer -> QueryServer"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我们最近办活动，有很多 qq 群，但是要统计大家的发言次数感觉非常耗时间，每次要把聊天记录导出，然后在用脚本统计。 qq 群比较多，然后这个问题就变得非常麻烦，特别是 mac 很不方便，每次都得通过 windows 版本导出群聊天记录。而且电脑端如果不登录，貌似就没有聊天记录了。\n不知道有没有人知道有什么比较好的方式可以处理这个问题。</p>\n</div></div>"], "reply": "8", "tittle": "有木有软件统计 qq 群里面的每个人发言次数？", "comment": ["各种 QQ 机器人+QQ 群管插件可以实现自动化！", " 我搜了搜，感觉都是非常烂的。 可以推荐一些比较靠谱的么？", "qq 不是自带每个月发言次数么", "自带就有", " 哪有？ 为啥我都没有看见？难道是 windows 上面才能够看见？", "自带🈶  不记得要不要管理员才能看到", "  我看了看，自带那个只能看到几个人，看不到每一个人，我想自动统计每一个人。", "顶一下"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我采集了 5000 部手机里面的 38 项各种软硬件信息，有字符型，有列表型数据，然后分别放入数据库，当我再一次采集 5000 部其中一部手机的信息时，由于用户操作原因，可能 38 项其中的两三项发生变化了，有没有比较好的算法可以通过关联 38 项数据进行匹配，最后分析出这是 5000 部中已经存在的一部手机？或者有多关键词的相似度匹配算法？</p>\n</div></div>"], "reply": "1", "tittle": "如何设计 Android 基于零权限软硬件信息采集的设备指纹算法？", "comment": ["求教各位大神啊"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>Socket 在英文中的含义为“（连接两个物品的）凹槽”，像<code>the eye socket</code>，意为“眼窝”，此外还有“插座”的意思。在计算机科学中， socket 通常是指一个连接的两个端点，这里的连接可以是同一机器上的，像<a href=\"https://en.wikipedia.org/wiki/Unix_domain_socket\" rel=\"nofollow\">unix domain socket</a>，也可以是不同机器上的，像<a href=\"https://en.wikipedia.org/wiki/Network_socket\" rel=\"nofollow\">network socket</a>。</p>\n<p>本文着重介绍现在用的最多的 network socket ，包括其在网络模型中的位置、 API 的编程范式、常见错误等方面，最后用 Python 语言中的 socket API 实现几个实际的例子。 Socket 中文一般翻译为“套接字”，不得不说这是个让人摸不着头脑的翻译，我也没想到啥“信达雅”的翻译，所以本文直接用其英文表述。本文中所有代码均可在 <a href=\"https://github.com/jiacai2050/socket.py\" rel=\"nofollow\">socket.py</a> 仓库中找到。</p>\n<hr>\n<p>全文可参考我的博客<a href=\"http://liujiacai.net/blog/2016/10/31/socket-programming/\" rel=\"nofollow\">《 Socket 编程实战》</a>。有什么疑问可以说出来一起探讨。</p>\n</div></div>"], "reply": "2", "tittle": "Socket 编程实践", "comment": ["图文并茂, 好文章! +1", "推荐一本书 《 Wireshark 网络分析就这么简单》"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"http://imgur.com/a/fDU6Y\" rel=\"nofollow\">http://imgur.com/a/fDU6Y</a></p>\n<p>我的姿势问题？</p>\n</div></div>", "<div class=\"topic_content\">问了下 leetcode 的管理员，终于解开了疑问。\r<br>Moreover, the distribution graph is more useful when to compare the solution to others which are of the same language.\r<br>\r<br>We treat languages differently when judge, perhaps your golang solution runs 100 times and python run only 10 times. That's possible.</div>"], "reply": "6", "tittle": "请教下， golang 写的 Fizz Buzz 怎么这么慢", "comment": ["My Submissions for Fizz Buzz\r", "\r", "Submit Time\tQuestion\tStatus\tRun Time\tLanguage\r", "\r", "2 weeks, 3 days ago\tFizz Buzz\tAccepted\t3 ms\tjava\r", "\r", "2 weeks, 6 days ago\tFizz Buzz\tAccepted\t4 ms\tjava\r", "\r", "姿势对不对，取决于你的代码是怎么写的。", "   不是啦 我的代码就是一般的写法，没什么问题。主要是想让大家看下平均水平，你看 python 的平均时间明显还要短于 golang ，跟我想的不大一样，觉得 golang 不是应该和 java c++一个量级么", "我的答案只加一个字母就能从击败 20%到击败 80%，很多还是优化问题。算法重要的还是思路，优化基本是经验问题。", "这只能说明这个测试不能反映出 go 的性能水平。", "pporf", "像是没有编译， go run 执行的 ~~~"]},
{"content": ["<div class=\"topic_content\">新闻链接：南京一小区换物业 业主持盾牌与物业对峙 <a target=\"_blank\" href=\"http://politics.caijing.com.cn/20161105/4195440.shtml\" rel=\"nofollow\">http://politics.caijing.com.cn/20161105/4195440.shtml</a>\r<br>\r<br>如何看待 南京一小区业主持盾牌与物业对峙？\r<br><a target=\"_blank\" href=\"https://www.zhihu.com/question/52319415/answer/129996867\" rel=\"nofollow\">https://www.zhihu.com/question/52319415/answer/129996867</a>\r<br>\r<br>“有的小区业主就是软包子，没骨气，有的小区业主就是能拿着盾牌上去和物业干。傻瓜都知道选哪个小区更靠谱。”\r<br>“中国法制的希望靠程序猿，据说这个小区 40%的业主是码农。”</div>"], "reply": "1", "tittle": "程序员厉害了，不怂，就是干！！", "comment": [" 托乐嘉号称是江宁最大的小区，有没有你家的程序员？这么露脸的事情~"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>现在狗东有活动可以-500 ，目前乞丐版就 6500 ，可以拿下。</p>\n<p>官方的 DeveloperEdition ，搭载的 Ubuntu 系统，是否有更多适配程序？非开发者版本，可以使用该定制系统么？</p>\n<p>学生一枚，从 9343 就开始关注了。目前手里用的老 VAIO Fit15e ，电池不行， 10 多分钟就会关机，触摸板也不好用。其他还行，打算购买以后出掉。所以希望买到一台满意的本子，毕竟对于我来说还是非常贵重的。</p>\n<p>希望大家给予我一些解答，不胜感激！</p>\n</div></div>"], "reply": "23", "tittle": "求教， dell xps 13 9360 还存在哪些做工问题？对 Linux 真的完美支持？", "comment": ["有人收到货后触摸板直接掉了，然后据说 9360 屏幕阉割了，楼主自行判断，当然 XPS 13 还是非常好用的，外形也逼格满满，一年 XPS 13 9350 用户", " 不是 9350 后期 1080P 有阉割么？触摸板这个我也看到过，这个可以换新，不算大问题。", "听说有电流音...", " 这个可以接受吧", "后面应该没有了吧", "developer edition 没记错的话，是把 broadcom 的无线网卡换成了 intel 的，其他都一样。\r", "\r", "利益相关： 9350 一年使用者，非 developer edition ，但一直使用 Linux", " 9360 都统一使用 Killer1535 网卡了。", "我当年 9350 碳纤维那面触摸板触摸板边缘那脆掉碎了", "9343win10 撸过。开机键盘没反映。重启才可以生效", " 有保修么？", " 电流音你绝对接受不了。嗯，我在用 9350 回复你。用 Windows 10 的话，电源管理很操蛋", "有电流声，而且风扇呜呜呜呜呜呜！！！！！", " 真的么？我主用 Linux 。", "Linux 支持看这里吧 ", "\r", "看起来比 9350 刚出来的时候好多了。", "正在用 9360 ，在用 Arch 。还可以，没啥问题。\r", "有滚屏时有电流音，不过挺小，不仔细听听不出来，不影响使用。", "买这货还不如 thinkpad 。 x 系列， t 系列， x1c", "额， 这个支持说法应该反过来的。。 Linux 去支持 xps", " 硬件问题，无解。这个毛病已经好几年了， Dell 就是不管。辣鸡\r", "能买 Thinkpad X1 就买 Thinkpad 顶配比 XPS 9350 便宜$200, 大陆应该有货，我在美国买不到 Thinkpad 才不得不买 XPS 的", " 表面保护层碎了，懒得去问，后来换 NMB 了", "9350+Arch(Gnome)+win10", " 只买的起乞丐版， x1c ，好贵。", "记得供起来，不然你会遇到电源充不进电(1 个月坏了，死机蓝屏，屏幕炸裂等一系列毛病。帮女朋友修了一年多的 xps 的围观群众如是说。", "电流声有个 workaround ，在 BIOS 里关掉 C3 步进就好⋯⋯"]},
{"content": ["<div class=\"topic_content\">1. 我的数学很差，只有初中水平，高中数学几乎没怎么学习。\r<br>2. 我的英语也很差，不太懂语法，目前只能基本看懂一些简单的语句和 stackoverflow 上一些基本只有代码的解答。\r<br>3. 经过一番学习，目标是能看懂如《算法导论》这一类书籍，英文水平能达到 CET 4, 能大概读懂 API 文档，能看懂一些英文博客。\r<br>\r<br>所以想问问各位菊苣有什么适合入门的数学和英语书籍推荐呢？</div>"], "reply": "34", "tittle": "求推荐计算机/数学/英语类相关书籍", "comment": ["能看懂算法导论...", " 是啊，有什么问题吗？", "看算法导论不需要什么数学的，直接看吧，需要什么再学就可以了。", " 那么能推荐下英语的。。？", "1.需要用到高数的地方，前人已经造好轮子了；\r", "\r", "2.推荐《赖世雄美语从头学》，跟着录音一句句地读课文，再加一本《赖氏经典语法》足矣。\r", "\r", "3.你学好英语和数学也不一定能看懂算法导论。就像扔给你一本物理书，你认识每一个字，但也看不懂内容。", " 那么能推荐下《算法导论》所需要的基础知识的书籍吗？谢谢。", "算导要求不高，高中数学。\r", "其实是对逻辑思维的培养", "你现在在读书吗，还是已经工作了？\r", "\r", "如果头脑没问题，算法导论是可以直接看的，当然最好要有编程的基本知识。\r", "《算法导论》难度较高，试试看从《算法（第 4 版）》入门吧，补充了不少基础。\r", "然后一定要实际动手做。\r", "\r", "英语和数学就先别管了，不是学会算法的特别必要的条件，而且每个都需要多年时间，不该和这个帖子写在一起（我假设你的主要目标是学一些算法，只不过以能看懂《算法导论》来衡量。当然，能看懂和掌握还差得远，光能看懂还远不够）。", " 没有读书了，就是高中数学要补一补。还有，谢谢解答 :）", "语法的话，我推荐《文法俱乐部》", "学英语建议英短浏览器(app)配合各种英文维基", "推荐一下 《程序员的数学思维修炼》，通俗易懂，讲的大部分是计算机相关的基础数学知识。", " \r", " \r", " 谢谢各位大佬~ ：）", "make", "讲真楼主挺厉害，能从只懂基本语句到 CET4 水平。。。", " 我也这么觉得的，蛤蛤......: )", "楼主牛掰，我也想学好英语，可是总是三天大于两天晒网，不管是英语的计算机书，小说，色情文学，我都没有完整的看完一本。我也想学好数学，但是毕业之后只读了一些通俗读物，兴趣更浓了，但是水平下降了，大学的高数，线代，概率，水平完全退化。我还想学习哲学，不过一直看不懂。。。。", " 又见到你了，“管理员经纪人”", "高中党前来回复：\r", "\r", "1.你需要 1 本   5 年高考 3 年模拟 B 版\r", "高中理数！\r", "2.百词斩 + 新东方基础班\r", "我小学初中就是这样过来的\r", "也没花多少钱\r", "\r", "目前可达到目标 3 中的'api doc+ en blog'\r", "\r", "加油！\r", "我的 blog ", "对了，建议去网易公开课或者 edx 看下 stanford/mit 的线性代数和算法导论。\r", "貌似网易公开课有中文字幕……", " 你是。。？", " 难道是微博来的？哈哈，真是 66666 啊~~~", " 不愧是菊苣。。。", " 我也是我也是。。努力一把就可以了。。", "> 高中数学几乎没怎么学习\r", "先学高中数学，能做五三理数的话就可以开始学大学数学了（高数，线代，概率统计）。\r", "英语的话建议用新概念学（真的很经典，别嫌老），赖世雄的书据说也很不错（《赖世雄美语从头学》什么的，粗略翻过，讲的的确很棒）。", " 谢谢大佬～", "说不需要学数学的，你们看算法导论的时候做了习题吗？", "说真的英语色情小说有啥推荐的我也想看一本。\r", "\r", "要想掌握感觉我觉得还是多看多写吧。\r", "\r", "要不你找一些入门书，关于比如 gui 编程，图形，游戏什么的具体方向的，跟着例子做，这样有方向感一些可以被带着写一点代码找点感觉", "说《算法导论》简单都做过习题了吗？一点都不简单", " 确实不简单。。", " 吹牛不用交税", " \r", " \r", "\r", "你们真的看了算法导论？\r", "第一数学归纳法，第二数学归纳法这些算法导论到处都在用的数学方法是什么时候学的？\r", "高中只对第一数学归纳法有要求，还是选学。", "lz 要真是没有数学基础，就不要看算法导论，看《算法》这本书吧", " 可能他们看的是恰好同名的书吧。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如果能输出依赖图就更好了</p>\n</div></div>", "<div class=\"topic_content\">动态类型的语言， Python PHP 等等\r<br>\r<br>这个工具挺不错的\r<br>\r<br><a target=\"_blank\" href=\"http://furius.ca/snakefood/\" rel=\"nofollow\">http://furius.ca/snakefood/</a></div>"], "reply": "22", "tittle": "有啥好用的工具可以梳理代码之间的调用的？", "comment": ["Understand\r", "Source Insight\r", "之类的?", "打点。。。。。。", "project 的调用关系可以手写关系，用 Graphviz 输出", "貌似 ida 有这样的功能，一个逆向软件用的工具。不过有点贵。不过有破解", "你需要 idea 全家桶", "电脑不卡的话 用起来真的是暴爽", "表示关注 很需要这个东西", "同关注", "opengrok", "语言？", "C/C++我都是用 Source Insight 和 VS 装 VA 插件，各有优缺点啊， Source Insight 符号分析牛逼， VS 跳转定义方便。", "如果是 C++,C#之类的语言， Visual studio 就有啊，挺好用的", "用 vim 配一个？", "同求，想梳理 java 包之间的依赖，整理成块状层叠图，不知道有没有方便的工具。", "🐎", "这种问题搜一下就一堆啊\r", "看看 facebook 家的 pfff ？", "不同的语言有不同的工具。楼主连前提都不说，不是个好的提问方式。", " mvn dependency:tree 试试 能否满足你的需求", "同问 java 版本的", "doxygen", " 基本上满足我的要求", "分析 Java 的方法调用关系 "]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>是不是 it 届才有的习惯，啥时候带起来的节奏？不是很明白原由。</p>\n</div></div>"], "reply": "55", "tittle": "什么时候把公司叫做厂的？", "comment": ["血汗工厂", "办公室还叫车间或流水线呢。", "巴伐利亚机械制造厂 又称宝马", "本来就是厂啊\r", "\r", "以前我在工厂车间的时候，我们也自称某某公司呐，不是一个道理么？\r", "\r", "除了 BOSS ，都是打工的", " 那什么时候叫做司呢？", "我以前在车间上班，也是自称我厂，很正常啊", "大家都是打工的，厂跟公司区别大？", " 无良公司", "没有幽默感啊……", "大概我表达错了，我的意思没有要强调公司这个词(大多数时候用前缀不加公司二字)，而是好奇为什么都要说厂。", "说某长逼格高一些", " \r", "你司，我厂", "什么时候把厂叫做司的\r", "\r", "现在的互联网行业，跟上一代人的纺织厂女工有一些些的相似之处", "以前不知道, 直到有次去大公司面试..", "也跟 1914 年俄国车床工人造轮子有些许相同之处", "大家都是纺织女工，在场里织代码（", "某些孵化基地、或者创意公司也叫某某工场什么的，大概从这儿来的？", "创新工厂  23333", "从 IT 开始变成劳动密集型产业开始的", "网易养猪搞得吧\r", "猪厂 鹅厂 猴厂 熊厂", "\r", "拷贝一段来:\r", "\"由于程序员喜欢自黑，经常称呼自己是「码农」，把自己的工作称为「搬砖」，而自己的公司就像是工厂一般，于是各家公司的员工就开始模仿阿里为自己公司取 名为「 X 厂」。一来比较方便匿名爆料，二来一开口就说出此类「黑话」能体现自己互联网从业人员的身份。一般认为，能够被「尊称」为「 X 厂」的公司，一定程 度上属于业内比较重要的、有相当名气的公司。\"", "都是打工的，在老板看来，操作电脑和操作缝纫机 /数控车床有啥区别？", "都是打工的 不是厂工是什么？", "古时候开始, 太监掌管的东厂, 西厂?", "都是一些业内比较出名的大公司才这么叫,小 p 公司没有这么叫的", " 大哥这神配图，我给你跪了", "我记得有个帖子，也是互联网圈子内的猎头媒体吧，有一次把网易叫猪厂，把京东叫狗厂，阿里叫猫厂，我才发现，这江湖黑话已经到这份上了。。。。\r", "\r", "最开始应该是腾讯大家称之为鹅厂，后来才这么多各种称呼了。。。。\r", "\r", "现在阿里改名叫饼厂了。", "你们都理解错了。\r", "\r", "这个问题出现在前些年时候，在北上广深上班，回老家过春节的时候。很多写代码的同学的家里人，乡里乡亲的亲戚朋友，问你在哪里工作啊？收入怎么样啊？之类的。\r", "\r", "你说我在 XX 公司，做 XX 工程师，巴拉巴拉了半天一大堆（比如说 PHP ，你是怎么念的？怎么发音？），结果人家一个词都没听懂，大家一脸的蒙蔽尴尬，觉得你不是个正经人，居然干这个挣钱。\r", "\r", "这是个大问题。后面就有同学比较机智了，说，我是在厂子里打工的，工作是搬砖，机械化搬砖，收入还可以。\r", "\r", "后来。。。。。。", "这就尴尬了，本来就是厂，也不知道什么时候叫公司的。我奶奶快九十了，过年回家就问我，你们厂子多少人？", "看来你们觉得\"厂\"比\"公司", "看来你们觉得\"厂\"比\"公司 low ?\r", "它们一样的吧，只是不同时期的名词。建国初期大多叫厂吧，钢铁厂 化工厂之类的 ，钢铁厂下面还有很多细分的厂，和现在的集团公司很像呀。制造业前身都叫厂吧。", " 改革开放", "看了以上评论，我以为流水线叫厂，办公室叫公司  \r", "我还是太年轻", " 办公室叫写字楼", "东厂西厂", " 一看就是阿里的", "砖厂，大家都是搬砖的。", "新时代的民工。\r", "名称只是一个名词，实质是不变的。", "每次我妈问我工作的事就会说：你们厂里最近怎么样吖？", "编号 19751 向你报道 我是一名光荣的搬砖工 厂里的大伙都叫我码农", " 是创新工“场”，不是工厂", "你的梦工厂.", "是每次过年回家都会被七大姑八大姨追问在哪个厂里上班", "爷爷老问“厂里食堂伙食怎么样?”", "现在又多了个饼厂，多好", " \r", "配图好厉害~~~~~~", "亲戚以前问过我，你们单位离家多远", "针对互联网相关公司来说，好像是从网易开始的吧，丁磊开始养猪后。就开始叫网易养猪厂了。后来就有了数字厂，鹅厂等", "药厂", " drler ？", " Yeah", "我一直以为是 `东厂`，`西厂` 的意思", " 厉害👍", " 看你头像好眼熟，哈哈。 i'm XuanYuan"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>在项目中使用 GreenSock 开发动画有段时间了，整理了一个入门的教程，分享下：</p>\n<p><a href=\"http://svgtrick.com/book/greensock/\" rel=\"nofollow\">http://svgtrick.com/book/greensock/</a></p>\n<p>经常需要做动画开发的可以关注下这个动画开发利器，一起交流交流。</p>\n</div></div>"], "reply": "5", "tittle": "动画开发利器，分享下 GreenSock 动画开发的一点经验", "comment": ["n 年以前用这个作 as 的动画。。现在。。。", " 现在出了 js 版本的，也很好用哦， flash 时代的一些东东还是蛮经典的， GreenSock 就是其中之一。在项目中也用了一段时间，开发动画非常舒服，性能也不错。", "而且效率很高，在手机端的表现", " 在移动端上，性能效率确实非常不错，值得使用", "性能上可以去官方网站这里看看，有详细的说明\r"]},
{"content": "", "reply": "4", "tittle": "想知道大家对于个人在公司的“发展”怎么理解？", "comment": ["先是学习，学到之后你能晋升到什么职位，拿多少钱", "把自己与公司的关系理解为合作关系，而不是雇佣关系，公司给你提供平台，你给公司输出价值，你既能能提升自己又能给公司带来价值，至于后面你是否能升职加薪，就看公司领导眼瞎不瞎了", " \r", " \r", "\r", "但我发现的现象是，过了试用期几乎都不约而同的该干嘛干嘛去了，晚上回家玩游戏、看电影。并不会考虑想办法提升自己的技术或能力，然后抱怨工资少\r", "\r", "----------------------------------\r", "我也是打工的，只是发现了这么个奇怪的现象", "要是白天好好工作了学到东西了，那样晚上休闲娱乐也无可厚非，工作本就是为了生活。\r", "\r", "之前发过个类似的帖子\r", "\r"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>给一个合法的 json 字符串：</p>\n<pre><code>String origin = \"{\\\"id\\\":123, \\\"name\\\": \\\"Bible\\\", \\\"writer\\\":{\\\"id\\\": 1234, \\\"name\\\": \\\"Tom\\\"}}\";\n</code></pre>\n<p>origin 其实是一个 nested json object 。希望经过变换，把它拍平成：</p>\n<pre><code>String expected = \"{\\\"id\\\":123, \\\"name\\\": \\\"Bible\\\", \\\"writer.id\\\":1234, \\\"writer.name\\\": \\\"Tom\\\"}\";\n</code></pre>\n<p>大婶们不要吝啬</p>\n</div></div>"], "reply": "7", "tittle": "[伸手党] 算法手残党求一段代码，关于 string 操作的", "comment": ["不需要自己手工 parse json 的话就很简单。\r", "\r", "递归查找而已。我收藏了一个把它拍平和还原的 Python 类。  然而你是需要 java 的", " 我找到了 js 的， python 的，可惜没有比较简洁 java 的，根据你的思路，我试试写一个 java 的", " 找到了一个 java 的，叫 json-flattener ，实现的比较完整", "...  之前有过一个需求和你是相反的... 是把它结构化的..  后来自己实现了 \r", "就是 request 的 parameterMap 变成结构化的数据接口 Map<String,String[]> -> Map<String,Object>", "用 Map 然后迭代 这个很简单的，算不上是算法吧", "本质就是把一个多层的树压缩成一个一层的？\r", "递归就符合需要吧。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>选了下， 1 核+1G+20G+1Mbps 的屌丝机， 3 年 1170 ，折合 32.5 一个月，阿里云那边类似的配置是 1600 左右。\n这价格已经是 docker 水平了，刚在蜂巢备了案难道就要换了么...</p>\n</div></div>"], "reply": "9", "tittle": "腾讯云也五折了", "comment": ["原来是 3 年这个价格..... 我就奇怪为何一个月没啥变化", "只有三年才五折 ... 估计是又到年底了得想办法卷点现钱吧 ...", "1M 带宽的机子总觉得不够用", " 让后你的服务器中途遭受大流量 DDOS 攻击，被永久封停，不退余款，请您谅解。逃~", "哦\r", "人家算好了三年后的价格比现在低得多", "lz 凤巢怎么样", " 蜂巢自带的镜像真是超精简&原始，其他还好，哦对了还有硬盘超小", "学生机路过", " 第一次封两个小时，别问我怎么知道。", "还有应该不会这样吧，是你经历过的吗还是抖下机灵而已。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>本人大二学生，有 html+css+js 的基础， js 略渣</p>\n<p>会一点 php 和 mysql 操作大一学了 C++</p>\n<p>假期的时候学了 AngularJS+ionic 。四个人做了个软件，但是都是用 v1 版本（学完 2 基本出来了- -）</p>\n<p>现在比较迷茫...该学 vue 还是 java 还是 RN...</p>\n<p>这个学期准备弄国创，不知道该用哪个技术，也没想好做什么，求交流</p>\n</div></div>"], "reply": "10", "tittle": "学生党比较迷茫", "comment": ["什么好玩就学什么，看自己", "继续用 v1 Angular 挺好的， v2 真心是换一个语言 TypeScript\r", "\r", "Vue 挺好学的，过度非常快。接近 0 学习成本。", "大学的时候还是把主要精力放在基础上，因为现在你们没有工作上的压力，可以不用很快上手某种语言或者框架。你们有时间，把基础打好后，以后你们遇到什么语言或者框架都能很快上手。如果想玩项目 选那些 c ， c++，或着 Java 的基础项目玩玩，那些考功底和完善你们的基础知识，以后碰到什么语言都会受益", "努力提高画饼忽悠扯皮扯淡的能力才重要！", " 答辩的时候感觉会扯蛋真的好重要😂", " 受教🙏", " 主要觉得 ionic1 的性能相对差一些", " 感觉可学的太多了😂有点选择不了", "大二吗，学好四大课吧，你说的这些工作前再学就好了，校招还是看基础", " 请问可以推荐一下关于 C 项目的网站吗？谢谢啦"]},
{"content": ["<div class=\"topic_content\">我最头疼的就是估算时间了。感觉完全没法估算时间。也许面试结果就死在这个问题的回答上了。</div>"], "reply": "70", "tittle": "今天下午去面试，谈到了工资要绩效制，大家怎么看？", "comment": ["怎么个绩效方法？", "意思是有加班费吗", "绩效制 和  估算时间 有啥关系  LZ 展开了说说啦~", " 例如一个工作分配下来，要你 3 天完成，超期扣绩效，然后你自己完全预估不出时间的话 ，就死定了。", " 额~  我外行啊   一个项目估算时间   也有很多前期条件的吧   面试的时候如果问到 把这些条条框框搬出来 解释 应该可以回答 HR 的这个问题吧~", " \r", "\r", "就是比如 10k 工资，拆开来， 7k 固定+3k 绩效，应该是要扣钱的。", "按什么绩效？代码行数？/滑稽脸", " \r", "\r", "比如安排 5 个工作量给你，看完成情况，质量，沟通情况。", " 软件这行很难评估量化吧", "软件开发…算代码行数感觉挺傻的", "绩效就是耍流氓", "一个单词 1 块钱这活可以干", "一般来说是想办法扣你钱的。\r", "但是也偶尔有好公司是多钱的，但是太少了。", "把需求弄细，加需求就延期，就这么简单", " 额 不知道你面试是啥职位， 我感觉工作量估算这个应该是项目 Leader 应该考虑的事情   如果单单看你工作量然后 按照绩效 打折 发工资啥的 每个公司的考评都不一样的 面试的时候也不好量化  不知道你栽在了 HR 的那个问题上了?", "怎么像 给国企做外包的  只管速度不管质量   出问题了 调试一天几百块", "  PHP 工程师，开发新功能，维护旧程序那种。听口气，还要写 html 。", "我也好奇，公司按绩效算要你估计啥时间...一般来说就是给你比例，多少算工资，多少算绩效，然后看你接受不接受，楼主估算个啥子时间？(懵逼脸）", " 绩效的工作量，不就跟时间估算有关，一定时间内，你要完成要求的工作量吧", "评论里有些人也蛮奇怪的 我特别好奇这些人有没有工作过？  写代码就不能估算工期了？ 冷嘲热讽 你们开心就好。\r", "\r", "你没办法估算时间 恰恰说明你处理任务需求能力不足（经验欠缺）。", "运营的绩效开发也要背。\r", "没地说去。\r", "只能呵呵", " 我是知道估算工期是好的，就是估算不了这个时间，很明显，真正去实现功能出来，实际花的时间比估算的时间要多得多。", "其实就是外包", "有些人连绩效是什么都没搞清楚就开始喷\r", "\r", "需求不明确就去明确需求\r", "\r", "需求变更就调整工作计划\r", "\r", "但是连自己在什么时间内能做多少活都不清楚，这是工作经验欠缺", "底薪肯定要～～绩效一般都算奖金的啦", "代码行数。。。 想起了一则漫画", "这种一般都是坑", "工资的构成不是基本工资+岗位工资+绩效工资吗？\r", "谈好的价钱就是基本工资+岗位工资，然后每个月评绩效等级算绩效工资呀？？难道只有我们这边这样算吗？？", "后期维护算绩效不?滑稽", "  \r", "\r", "明白你的意思了，公司就是急于找个人解决某个任务，绩效算是对方的一种保障手段，楼主没办法估价时间，对方没录取楼主也是正常情况。简单来说，就是不想外包所以打算招个程序员来干。楼主找了份公司实际和接了份私活没大区别，不去也没啥损失。", "老板准备拿 10w 来架一个系统，你两个月做完，月薪就 5w ；你三个月做完，月薪就 3.3w 。是这个意思？", "如果是需求改变导致的工期延长咋办\r", "要是依赖上游未能如期交付导致延期咋办\r", "除非从头到尾做的都是一模一样搬砖的活 要精确估计到天还是比较难的", "这是给公司耍流氓的空间", "就是耍流氓呗..", "常规工资+考核工资，有啥好奇怪的，不愿意不干就是了。", "据说有的公司算 Bug 数，一个￥ 50 /滑稽", "软件行业确实不太容易量化，但是给客户报价也是量化的。所以我觉得绩效是正常。", " 真是呵呵这种公司", "你把绩效工资当 0 看待就行了。这样容易估算自己实际收入。最终绩效工资一般不会是 0 ，但也很难是全额。你可以把它全部算成额外的。", "看情况，如果是一万，八千基本工资，两千绩效还可以理解，就怕有些传销公司，两千基本工资，八千绩效，那就没法去了", "根据我做外包这么久的经验。我可以把时间估算到半天的误差。就这种情况，也是需要一些条件。最重要的，供需双方充分沟通了需求。其次，相关代码，环境，全部准备妥当。再次，开发过程中，供需双方能随时保持沟通。再就是开发人员对可能存在的技术难点，要预估好。不然突然碰到问题卡壳就炸了。", " 但是当你对整个项目情况，自己对自身的技术水平，有一个充分的认识以后，的确是可以预估的。", "特别坑，别问我为什么知道", "搞绩效的都是耍流氓", " CMMI 里面有一个专门的过程域叫做度量，专门用来干这个的。外企之所以 NB ，就是因为对工作量的估算特别准确，即使出现偏差，也有各种方案备选。 1w 的工资， 2000 基本工资+8000 绩效才合理，有能力多干活的人多拿，这样激励整个团队提高效率，增强知识储备，提高整个团队的执行力和战斗力。", " 还跟你需要解决的问题的难度有关，有的业务给新手做，新手复制粘贴花了三天干完，后期出来的代码维护成本高；有经验的程序员先花两天设计一个较好的模式，然后花一天实现了整个方案，两者工作时间相等，后期成本有明显差异，这种也要考虑。总之，绩效计算还是比较复杂的，要考虑多方面的因素。", "软件搞绩效，怎么量化工作量？除非谁能把问题分级。。。", " 没错，估不出时间要么是经验不足要么就是对能力不足对需求理解不透彻", "现在绩效很正常啊，你要以公司的角度去看就没什么奇怪了，没绩效的话，公司是防止那种天天不做事的人，但是你又得不给他全部的钱，主要看比例，还要就是看考核标准\r", "\r", "如果像你说的，只是预估个时间的话还好，你可以在原有的预估时间上增加几天，公司主要看的是你做不做事，这个应该只是一个模式而已，给人力资源装装样子吧？", " 这种都是流氓公司. 你看看带薪的条件, 病假的条件, 辞退的补贴是按照什么基准发的\r", "\r", "工资就是工资, 工资+绩效= 睡前收入\r", "非要把工资 = 基本 + 岗位 + 绩效的公司, 就是耍流氓", "这种时间预估都没有标准，执行很困难，后期都会有纠纷。\r", "直接按人天，你自己预估个宽松的人天，上头（领导、客户）不一定认可，会给你打折，你按人天做又做不出来，会扣绩效，哭都哭不出来。\r", "预估人天也需要经验，没经验的，你怎么知道需要多少时间？有什么坑？\r", "但是，从成本控制角度，用人天做绩效又是甲方（客户）、管理层不得不要求的一个指标。\r", "没有标准答案，自己先做一段时间，积累经验。\r", "\r", "我的感觉，只有外包公司才严格考核人天。一般的开发公司会有上线时间要求，但是超期如果不是认为的，问题也不大。", "我第一家公司也是绩效制，主要是老板是比较靠谱，我那个时候技术很差，时间一般都是估不准的，经常延期，但是老板最后审核的时候会重新评估，然后我大多数的时间，返回比基准的工资要高一些。\r", "当然也跟公司人少有关，老板有时间培养。", "绩效工资， 这种部分的设置本来就存在很大的争议性。\r", "\r", "对于应聘者而言，处理方式很简单，就是直接忽视绩效工资，只看所谓基本工资就可以了。如果基本工资你觉得满意就行。\r", "\r", "绩效工资的衡量很难处理，往往就是公司 /部门本身的业绩 或者 你的老板对你的印象来决定， 而这个有很多因素你是无法掌握的； 公司 /部门本身的业绩不好， 你个人再努力也没有用； 你老板对你印象不好，你觉得你自己做得完美也没有卵用。\r", "\r", "我了解到的很多绩效工资在创立之初其实就只是为了规避其他的不好讲出来的因素， 所以不要太当真。", "应该就差不多了吧", "我只知道校级好加钱的...", "绩效这玩意，其实平时没事的时候没什么\r", "公司要找事，耍赖了，就会拿绩效工资说事。\r", "比如，之前遇到的，女员工休产假的时候只发基础工资（一般很低，两三千或者是一千多....）\r", "再比如，公司想赶谁走了，就说你绩效没达到，不发绩效工资(给你安排工作量非常大，让你做不完，或者根本不给你分配工作或者不记录你工时，最后说你一个月没做事。)等等........\r", "绩效工资就是公司耍手段的东西。相安无事的时候就是一摆设。", "不靠谱，勿去。\r", "\r", "碰上个不靠谱的直接上级，不如辞职了。\r", "\r", "想真正绩效，这家公司将它的 IT 直接外包好了。", "这种徒增内耗，特别是当工作不好量化的时候。一个项目出了问题，到时候互相推责任。", "PM 需求把控好，同事能力和自身能力认识正确，大概估算应该是可以的（乘个 1.5 倍啊）。\r", "\r", "but 你是新加入成员的话……", "绩效 NMB", "我们公司就是绩效制度，而且是绩效是占大头的。公司内部有个等级制度，根据你的等级有个岗位工资和基本绩效，每个月的绩效需要达到你岗位对应的基本绩效，达不到扣钱，超分就加钱，不封顶。任务主要由项目经理分配，项目经理在分配任务时会根据任务难度预估工作量，给予绩效分和规定完成时间，提前完成不加分，超期扣分，但是给的时间一般都很充裕，基本上不会超期。而且如果在开发过程中发现和项目经理预估的工作量有较大差异，还可以申请延期并增加绩效分。我觉得这种还是挺靠谱的，防止有些人浑水摸鱼，绩效做的多钱还给的多。", "绩效、大小周，压榨员工两大法宝，除非对公司很信任，不然要慎重", "绩效对于计算搬砖很有效，所以管理水平也差不太多吧？", "有些公司绩效是所有人平均绩效为工资 100%，有些是高绩效为工资 100%，前者可去，后者果断别去。", "先立个 flag ，如果遇到猪队友的话。。。。。", "绩效一般是给公司耍流氓的。。。。。有人好绩效。。那么肯定就有人坏绩效扣钱。。。。。而且一般都是很大一部分人因为绩效扣钱。。。。。。", "没有显式的绩效也会有隐式的绩效的, 开公司又不是办善堂, 不可能养着没有产出的人, 有没有是一回事, 合不合理是一回事. 个人更加倾向于试用期更加严格一点, 觉得不合适就尽量在试用期淘汰掉跟不上队伍的员工, 一旦通过试用期成为正式员工就该放权的放权, 这样子对大家都好", " 如果是你说的你一万的工资，拆成 7K ，另外 2K 绩效，那算了，别入，都是坑。", "就是以后看你不顺眼扣钱", "我们这也有绩效。\r", "不过这个是在工资外边计算的，这种还阔以。\r", "每季度绩效基本标准是 1/4 月薪，正常能全额拿到，优秀的还能一定比例超拿。"]},
{"content": ["<div class=\"topic_content\">先说明，不是我，是我认识的一朋友，容颜俏丽长腿妹。\r<br>\r<br>她那里有个私活，主要是想做一个网站后台，具体的功能需求我也不清楚，感兴趣的可以自己沟通下，包括价格什么的也都可以商量下，在南京。\r<br>\r<br>可以先加我 wechat 沟通下，可以的话你们就自己沟通\r<br>\r<br>我的 wechat\r<br>\r<br>jiahengwang</div>"], "reply": "127", "tittle": "妹子分享个私活， web 后端，有没有感兴趣的", "comment": ["本来想联系，看了图我还是留给楼上吧....", "约吗", "233 我好像发现了什么", "我只看到了 “妹子” “私活” “ WeChat ”", "我有个『私活』，『妹子』接吗，具体的功能需求我也不清楚，感兴趣的可以自己沟通下，包括价格什么的也都可以商量下，下面是我『微信』\r", "\r", "。。。。。。", "难道我审美有问题？我觉得也还可以啊，主要是太会卖萌了(⊙o⊙)哦！", "这帖已经被玩坏了，楼主还好吗", "给楼主铜币压压惊", " lz 都把照片全删了", "给楼主点根蜡烛", "没看到图， 不爽，这活不接了 (￣▽￣)", "改变了我心目中的容颜俏丽长腿的定义", "心疼楼主", " 我觉得楼主肯定也会删\r", "可是被发到 v2 上的截图可就没法自己删了 永久留痕啊 贴图的童鞋感觉都没想想这样对人加造成的影响", "心疼楼主。。。 v 友口味高也就算了，这么搞一发吓得楼主清空了豆列，我们这些后来者看什么？", "看来我来晚了，错过了最佳时机，啥都被删了。楼主被你们这群人玩得 恨不得找到地缝钻进去啊。", "哈哈哈哈，被玩坏了", "牛逼呀  整个相册", "你们这些人把 LZ 都玩坏了", "你们把楼主豆瓣都清空了 哈哈哈", " 最后这几张照片，里边的女生怎么好像在哪见过图片", "哈哈哈，可怕的 v2er 。\r", "以后不要随意发东西啊", "对楼主造成的伤害表示抱歉，我想办法删除微博图床的照片", "我还以为又是 HR 假扮的呢。。", "上面这些 v2xer 真可怕 2333", "接过几个妹子的私活，其中一个两年没上线。不过款到是结清了。国外的妹子。。", "色情贴 已举报"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>看往年的毕设好像都是《[XX 特性]的[XXX 系统]的设计与实现》。不过好像都是偏向于后台服务器端，前端有适合的点吗？</p>\n</div></div>"], "reply": "19", "tittle": "前端技术体系中有哪些模块或者技术点适合做研究生毕业设计？", "comment": ["WebGL?", "网页游戏？", "强力围观，哈哈哈哈～～～", "你可以前后端一起整，后端可以联系我，我转行自学 Java ，目前待业在家，\r", "框架基本上算是入门了， Java 也算半熟练了，简单的增删查改问题不大，前端技术栈，仅限 Jquery 以及 vue 其它的框架真的没接触过", "可视化", "研究生毕业设计要求创新点吧，所以一个系统的设计与实现貌似应该不行哦。", "D3.js 可视化", "不适合，只适合打辅助，当时毕业的时候非常想做，但导师非常不推荐，告诉我不容易过，他说可以作为辅助做一些东西，但作为主要的研究方向非常不好过，学术型的也不好做，最好做应用型的。（我们是软件工程）\r", "最好跟你们导师商量。导师的意见非常重要。", "mvvm 引擎？", " 你觉得那些导师们能看懂？ 还是随便撸个 XX 系统完事", " \r", " \r", "之前用 three.js 库搞过一个 vr 游戏，感觉工作量有点儿少。", " 我 java 可能比你熟练，谢谢了", "大学老师总是觉得前端没啥技术含量，其实前端现在的要求都好高。。。", " 前端要求高 是因为前端轮子少，轮子变化快，后端的 Java 程序员 都是躺在跑车上写代码，\r", "前端呢？构建工具 代码调试 哪样跟得上后端？早些年前的 alert 打断调试 简直不能太酸爽", "编译器啊", "研究生毕业设计浏览满篇的原理设计、公式推理，前后端技术确实不适合做毕业设计，除非上大数据、机器学习，比如说 web 数据挖掘，个性化推荐系统", "最近我也在做毕设，不过是本科，不准备读研究生了，准备回家等死。 =。=\r", "\r", "我选了个`基于 nodejs 的视频学习网站`，技术含量其实不高， thinkjs+leancloud+jquery ，没做前后端分离。一天写 30 分钟代码， 2 个月基本上就搞定了，现在已经搞定了。\r", "\r", "朋友选了一个`树莓派 xxxxx 微信平台`，简单的说就是买个树莓派，在上面搭建个 py 服务器，用 ngrock 做个内网穿透。树莓派我跟他一起买的，等他用完，我拿来做游戏机。\r", "\r", "其他普通一点的同学，大都选的`java SSH`，学前端的呢，基本上都是写一些静态站点（商城，卖手机，卖电脑）之类的。\r", "\r", "研究生的话我帮过一个学姐的毕设，学的是网络安全，大概就是一个钓鱼 wifi ，不是特别难，挟持 dns ，在内网里面搭建一个工行的站点，用简单的 php 脚本收集数据，存到数据库。\r", "\r", "前端的话，毕业设计，还是研究生的，我觉得难度不能太低吧，当然对于自己来说也不能太难，导致做不了。\r", "主要还是要看你的技术栈，我在某群里面遇见的都是一群研究生，我不知道是不是我太老，讲道理我是班上最小的才对，他们说的一些二次元的话，我真表示不太理解，而且还谈论一些 linux 底层的东西，经常谈论 github 开个新坑，搞个异步库什么之类的。\r", "\r", "所以，我觉得，能力行的话， github 上面搞一个开源项目，写一个库就好了。可以是 css 框架， js 框架。这样你就可以在毕业论文上面大谈其谈实现原理了，以及创新点，跟其他同类比较，最好再来个小 demo 。\r", "\r", "其他的呢，就是产品类的，也就是《基于 xxx 技术栈实现 xxxx 产品》。\r", "\r", "当然你还可以搞理论啦，就是纯研究，假如你会 c/c++， webkit 、 v8 之类的你可以深究一下，把 webkit 的原理自己用代码实现一下，阉割版的那种，毕竟没有一点代码，真不好过答辩。了解这些非常有好处对于前端。\r", "\r", "当然你也可以把 vue 、 angular 。。这样的框架彻底吃透，搞一本书出来也行。\r", "\r", "同样你也可以参考一下花仲马 phodal 的毕业设计，他就直接写出了一个教程，你 github 上面搜一下应该就有，我看了一下，大概是用 laravel+树莓派实现的一个最小物联网系统。\r", "\r", "还有就是底层， OSI7 层与前端的一些关系，从输入网址到出现内容，经过了什么，以后我准备录个视频讲解一下，从 wireshark 抓包开始。这些稍微底层一点的东西是属于高级前端工程师的范畴啦，还是那句话看你的技术栈。", "个人感觉学术上老师们对前端的认可度不是很大，所以可能就偏后端了\r", "\r", "ps 我们老师对前端的看法是：不就是几个页面吗？", "- D3 + svg\r", "- webgl + Three.js\r", "- 模板引擎, yacc+lex, Bison + Jison, 手写 parser+lexer, Parser Combinator + 这个 ", "\r", "- 移植 react / vue 框架到其他 UI 层, 例如 WPF, MFC, QT 等"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>事情是这样的，在公司内部，两个项目小组都用 Maven ，我在其中，但是另一个小组（不在前面两个小组之内）的同事反对使用 Maven ，他建议使用原始的方式，将第三方 jar 包直接放到工程代码里，代码和 jar 包一起放到 git 里做版本管理。</p>\n<p>这样有必要吗？</p>\n<p>注意，并不是问是否有必要抛弃 Maven 而转向其他工具例如 gradle 等，而是问是否有必要抛弃这一类项目构建工具。</p>\n<p>个人认为， Maven 并没有降低生产力，只是稍微有点学习成本，这点学习成本其实也非常低，此外它能很方便地管理第三方包依赖，简化代码库，显著提高生产效率。</p>\n<p>希望大家说说自己的看法。</p>\n</div></div>"], "reply": "72", "tittle": "是否有必要抛弃 Maven 之类的项目构建工具？", "comment": ["转 Gradle 。而且 Gradle 导入本地的 jar 比 Maven 方便 500 倍。\r", "放 jar 来版本管理是 15 年前的做法……", "gradle 底层还是 maven 那堆东西，坐标，插件。用 gradle 更增加团队学习成本，你要是用回 ant 那种最原始，好多新手估计搭建一个项目去找 jar 包，估计就得花很久，还不一定能搭起来那就 233 了，另外 maven 这种工具长处在构建，等你们用上持续构建你就知道还是得用 maven 。", "他是从 15 年前穿越过来的吧？", "在我看来 jar 包是二进制文件（实际上应该不全是），用 git 等源码管理工具来管理二进制数据本来就是作死\r", "\r", "PS ：最反感的就是你说的这种同事， maven 起码算是目前的最佳实践之一，他就没想过为什么吗？觉得就自己牛\r", "其他无数的开发者都是傻 X ？ 连这么点新鲜事物都不能接受 这是作为开发者最基本素质的缺失", "嗯很强...\r", "我们项目 jar 不算多也不算少，大概有 500M 左右的了，算上图片啥的差不多快 1G 。\r", "往 git 仓库里塞将近 1G 数据，嗯很强... 新检出一个项目爽到爆。\r", "另外手动解决依赖也爽到爆。", "说白了要么蠢不会 maven 或者要么懒 懒得用，真不知道直接放 jar 有什么好处", "刚开始看还以为要用 gradle\r", "后来看直接拷贝 jar 包就呵呵了", "maven 长处在构建。放弃 maven 工作效率会降低不少", "如果直接导 jar 真的那么好，为什么 Maven 和 Gradle 会出现？另外， git 是做代码的版本管理的，不是用来存 jar 包的。", "问题不是说用什么方法构建项目 而是沟通", "不是蠢就是懒", "直接拷贝太麻烦了，还经常容易出错，或者版本问题\r", "Maven Gradle 都可以直接解决，就是看网络了", "提用 jar 的那位是组长吗?\r", "不是的话,就当他放了个屁...", "这个开发是谁招进来的？", "不能放弃", "1. 沟通\r", "2. 至少要搭个 nexus mirror 解决 gfw 的问题，或者直接用国内现成的 mirror", "在你同事看来，项目的依赖包一旦确定就不会改了，但实际上不是这样，特别是公司自己开发的包，经常会有更新。如果几个项目都用的话，统一发布一起更新是最便捷的。", "不管怎样，先说一声 Gradle 大法好！", "不知道你们那什么情况，不过包管理器还是很顺手的。\r", "\r", "感觉如果不是写业务代码而是写一些基础设施，还是可以抛弃包管理器的，哈哈", "这么多 java 开发者啊", "SBT 还是比较简单的", " 死变态？舒伯特？苏炳添？\r", "开个玩笑。\r", "能查到 SBT 是什么", "当然 maven 大法好了 .\r", "android 用 Gradle\r", "其他 maven", "你们居然选择放弃先进生产力，回到刀耕火种的时代，佩服", "哈哈哈哈，快点同意他的意见让他们组把 jar 包全部上传上 git 啊，这样生产力得到了极大的保障！！！", "jar 依赖问题搞死他。。。", "这个公司的技术 leader 应该好好学习下！", "用 maven 有什么不好， 哪个顺手用哪个， 你们居然没有能拍板的人把这些事情定下来。", "这人是个智障", "安卓用 gradle ，其它用 maven ，恩，没错！", "可以自己公司内部建一个 maven repository ，这样也可以把公司自己开发的 jar 放在里面，就没必要在项目内部保留 jar 包了", "你要面试的时候这么说估计...", "你只需要简单的告诉他，请帮我在 spring 的官网上，下载一个 spring 的 jar 包，他就傻眼了", "1. 很多小公司仍然采用传统 Jar 管理模式。好处是项目 clone 之后，马上即可编译运行。缺点是要人工解决 Library 包依赖问题，明明 Maven ， Gradle 都可以自动解决的。如果需要自动编译支持，一般采用 Ant 脚本方式。十分古老的版本管理方式。不过，小公司的项目经常是不断重复，经常是将旧项目拷贝，再翻一版， Lib 包永不升级，这么干于它而言更方便。\r", "\r", "2. 使用 Maven 、 Gradle ，甚至在公司自建私有 Repository 。相对现代且自动化得多。大多数 Github 上的 Java 项目使用此种方式来管理包依赖。优点：主流，自动化解决依赖，对于 CI 等开发工具支持最好。缺点：自从 Maven 的 OSC 镜像关闭以来，你最好能有个代理。", "难以置信... 这是在开倒车", "问问他为什么啊，贴出来大家学习学习", "要么远离这种同事，要么成为他们的上司", "可能你那个同事比较恶心 Maven 的依赖传递吧", "其实我也比较讨厌签完代码后还要等半天下依赖库的", "等他什么时候导出 baidu/google 到 jar 下载到工程中，结果弄到一个被恶意改动的文件，最后搞出大新闻，他就会吸取教训了\r", "而且手动复制 jar ，用不了几个月没人能说明白 lib 下面一堆文件分别是干嘛的了，亲身体验", "之前我司一个老项目就是用 Ant 这么搞的，我花了三个月时间把上万行的 Ant 脚本转成了 Maven 编译，之后才有了一系列的技术改进和升级，单用 Ant 根本没法搞，也许加上 Ivy 可以。", "小孩子才分对错，成年人只看利弊。\r", "\r", "我反正是很反感一些人上来就先贴个标签，带个帽子然后把别人批判一番——这跟以前的红卫兵小毛孩有什么区别？\r", "\r", "技术选型、推进说白还是博弈，每个人的利益点不同。当然，有些人就根本不是理性经济人，这种人你就不要和他一般见识就好了。\r", "\r", "如果当前项目管理方式没有问题，或者问题还不大——大不了加加班，也能解决。作为管理层，如果新技术不能带来“利益”自然是没什么动力推进的，再说了，很多混到管理的“大龄前码农”，下班了还得去抱老婆带孩子。学习成本再低那也是成本，而且风险再低那也是风险不是？\r", "\r", "作为下面的码农，这些依赖管理工具， CI 理念又不能直接加工资，毕竟大多数公司招人最重要的还是靓丽的履历表，那些高大上的技术关键字才符合 HR 的基本价值观。\r", "\r", "道不同不相为谋。楼主稍微推一下就行了，公司项目代码管理什么的就别掺和了。该继续加强自己就继续，没什么加强的就准备换换环境——就算没法改变世界，改变一下自己还是可以的。", "你的同事..还活在 20 年前的世界...", "如果没有内部的仓库 懂的人不多， 的确直接 jar 包更好。这是基础建设，长期的收益大很多！", "OMG …", "建议辞职~~", "不知而不知其不知者，愚者也——避之！", " 所以你喜欢签半天代码吗？ ¯\\_(ツ)_/¯", "远离这类同事，没有必要解释", "Gradle 底下也是 maven 那一套。\r", "\r", "\"Maven 并没有降低生产力\"， maven 是在提高生产力好么？当然也要看项目的具体情况。假如引用的外部 jar 包长期不需要更新且稳定，也不妨放个 jar 包进去。但是有长期不需要更新且稳定的东西么，还是说你们这个项目一个月做完，然后交付收工，今后再无瓜葛？\r", "\r", "楼上说的对，远离这类同事。", "这就是不会用吧，啥也不想学，拷贝 jar 估计 cp 命令也不会用，只会 Windows 资源管理器里 Ctrl-c 的那种", "竟然会用 git ，真不信！", "我以为是要转 gradle 或者 sbt 。。。", "maven 跟 gradle 在 dependency 管理上都差不多，但是 gradle 比 maven 强在 build script 是可编程的，而 maven 是 xml ，灵活性不够。以前经常是 maven xml+各种插件+自己写的一些脚本，用 gradle 直接可以把脚本写在 build script 了，方便很多。\r", "至于 jar 是不是在 local ，其实 google/fb 的 build system(buck/blaze)都是保存在 local 的，主要是为了 performance 考虑。", "我们公司之前的也是不用 maven ，后面教他们用了之后，刚开始都是各种抵触。然后后对公司项目进行整体升级改进的时候，都体会到了好处。", "建议开倒车的同事一定非蠢即坏。", "我其实想问一下大家都用 maven 的什么 mirror ？现在的好慢", "在大家看来，写 MakeFile 的可能都是顽固不化的老怪物了。。。", "  \r", "用 uk 和阿里云\r", "\r", "如果实在太慢就 -DsocksProxyHost=127.0.0.1 -DsocksProxyPort=1080 走代理，", "远离这种同事+1", " 阿里云", "单说一点，人工管理 jar 包，想看源码怎么办", "智障同事", "方向盘都扔了，一脚油门到底，直道没啥问题，遇到弯道 GG", " \r", "```\r", " <repository>\r", "            <id>mvnrepository</id>\r", "            <name>mvnrepository</name>\r", "            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>\r", "            <layout>default</layout>\r", "            <releases>\r", "                <enabled>true</enabled>\r", "            </releases>\r", "            <snapshots>\r", "                <enabled>false</enabled>\r", "            </snapshots>\r", "        </repository>\r", "```", " 手动下载源码包,再关联", "都行吧\r", "      如果版本不复杂\r", "           如果项目不多\r", "                如果。。。。他们高兴呗\r", "都可以，哈哈哈", "少挖点坑吧，除非自己有兴趣和能力可以写个比 Maven 、 Gradle 更好的构建工具", "生命周期短，复杂度低的项目哪个顺手用那个就好了。\r", "但如果条件允许，优先使用 Gradle 其次 Maven ，网速慢就搭一个私服或者用国内的 Mirror ，好处肯定比坏处多的。", "-.- sbt 都出来了，这不是 scala 的玩意么。", "请远离这种同事+1", "sbt = sloooooooow/stupid build tool"]},
{"content": ["<div class=\"topic_content\">系统开发平台包括 linux 和 windows ，目前看了一下子好像都推荐 jenkins ，大家有使用其他的吗？</div>"], "reply": "12", "tittle": "针对 C/C++项目的持续集成 CI 工具有哪些推荐？", "comment": ["可以试试 travis-ci...", "jenkins 足够好", "我们公司用的是 微软的 Visual Studio Online  不过免费的好像支持 5 个用户而已。", "buildbot", "既然都用上 CI 了  为嘛不上 分布式编译", "Go", "看了一下子 travis-ci ， 还是选择 jenkins 吧", "gitlab ci ？", "Jenkins 基本能满足所有需求(不分语言) :)", "如果用 Gitlab 就用 Gitlab CI 吧， 8 开始集成在一起了", "Jenkins 挺好的，一直在用", " \r", " \r", "谢谢，我看看 Gitlab CI ，因为目前用的就是 Gitlab"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>想通过推送记录查询到 notificationId 的消息具体都发给了 installationId 或 deviceToken 为什么的用户，有人实现了吗？</p>\n</div></div>"], "reply": "1", "tittle": "[问问题] leancloud push 记录查询问题", "comment": ["你好，目前暂时不提供具体的细节，来显示在推送消息里，具体所发到用户的 installationId 或 deviceToken 都是什么。\r", "\r", "但你可以在控制台的「消息」->「推送」->「推送记录」里，点击 ID ，来查看这条推送消息的查询条件。\r", "\r", "是否可以再仔细说下，您的需求是出于什么考虑？\r", "\r", "另外，请去用户社区里（ "]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>楼主认为，加班无非两原因，一说项目管理问题，一说是个人能力问题。但以楼主在我厂经历所见，归根结底都是管理问题。\n举个栗子， lz 最近接手一个项目，细节不说，大致是时下比较火热的消费金融类产品。我厂立志在此领域从无到有闯出一片天地。首先，和相关消费金融公司的商业洽谈，技术对接一月有余，但产品的研发不仅仅只是一个通道对接。内部的业务系统的产品设计 prd 等至今未定版，在领导的关怀项目负责人的督促下， leader 依照前期的产品方案做了个技术初期规划和排期，自身涉及三个系统（对外 web ，核心，运营），以及配套一堆外围支付相关（清结算等）的交互，就以核心系统的排期而言，两高级开发三周有余，且不论其他测试时的缺陷 bug 修复时间。我等日夜星辰 coding 。。高潮是，今天大 boss 一拍脑袋，我们应该赶双 11 商用啊，于是压力层层下达，项目负责人问技术负责人能不能借人赶工，争取博领导欢心。\n作为一届码农，预感前方又有一轮加班洪流滚滚而来。本来其实大家按技术负责人制定的排期计划，按部就班的做，双 12 上应该是勉勉强强，但 boss 这半路杀出的决定，真有种屁股决定脑袋瞎指挥的感觉。别说技术了，我们产品都还没过评审（被驳回了），方案一改再改，按流程都没到技术设计这块，现在就剩下 7 个自然日，就说商用，简直玩笑。项目负责人说借人借资源，但这是人多就能快速办成的事儿吗，那加五十个人是不是一小时就能搞定了？我们 leader 也是怂啊，虽然没有正式回复，感觉他也会被迫执行，反正最后都落到 coder 身上。\n综上，我厂命苦的码农啊，任何加班，归根结底，都是管理（层）问题。</p>\n</div></div>"], "reply": "18", "tittle": "大家都是因为什么原因被加班的？", "comment": ["弱弱的问下 楼主啥厂\r", "赞同楼主说的，很多时候真的是屁股决定脑袋，虽说上层领导有上层领导的考虑，可是需求总是一改再改~~~\r", "真的是受不了啊，虽然说现在也提倡敏捷开发，希望快速迭代，但是即使再块迭代，也还是有其自然规律的，正如楼主所说，不是 50 个人一小时就能完成的事，只是希望上层领导在做决定的时候能考虑下底层的员工吧", "管饭。。", "今天要加班到明天五点了。", " 。。。身体还吃的消么", " 已经连续两天到凌晨十二点半了，然后今天直接干到凌晨五点。\r", "想不到开源社区竟然这么玩……\r", "之前连续两周每天晚上到十点，周六周日不休息……\r", "没加班费。", "还是那句话，战术上的勤奋弥补战略上的懒惰", "没有加班费……应该是我效率不行", " 管饭不管车你就怂了？不如换来我厂加班吧", "借人借资源，真·人月神话（ X", " 太，伤，身，体", "因为工作使我快乐。", "想想以下三种基层码农：努力还房贷的，努力攒首付的，房车都有的。\r", "\r", "哪种更怕被辞退？哪种更好被管制？资本家精着呢，你不肯用身体健康换加班当廉价劳动力？抬走换下一个。这才是核心问题，项目管理不善永远是表象。", "主管太工作狂 … 然后 我就 待业两个月了…", "还有一种情况,  老板希望看到大家加班", "楼主认为，加班无非两原因，一说项目管理问题，一说是个人能力问题。\r", "\r", "也不尽然吧，\r", "\r", "客户在合理范围内要求提前工期，老板让程序员短期加班完成，许诺给奖金并且说话算话，程序员感觉合适也愿意干。大家都各取所需， winwin ，这个不能算什么问题吧。只是这种情况国内非常少。", "在老板眼里，别人都是猴子。。", "管饭!吃完饭!正好错过国贸大堵车!\r", "\r", "吃完擦擦嘴!   回家!", "企业和员工双赢的叫加班。。。你赢了吗？没赢就叫剥削压榨。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近缺钱花，想搞点私单，赚点外快，有志同道合的朋友，可以搭个伙啊。大家一般通过什么途径接私单？</p>\n</div></div>"], "reply": "5", "tittle": "Java 服务端开发有哪些途径接私活？", "comment": ["开源中国众包\r", "\r", "不要限定自己的技能领域，没事开发个 APP 玩玩也是不错的选择", "老实的上班吧。 还不如跳槽来的实在～   \r", "\r", "不会前端 接私活太难了。。", "码市", " 可以留个电子邮箱么？一定要用户名正确且经常会打开收邮件的邮箱，谢谢了！另声明，我不是广告狗！", "  ququ ：叁 7 五 酒贰七二  泗幺"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>Apizza 是国内领先的在线 API saas 管理平台，支持在线的 API 调试，接口管理，快速生成文档，项目管理以及分享。</p>\n<p>Apizza ( <a href=\"http://apizza.cc?f=v2ex)\" rel=\"nofollow\">http://apizza.cc?f=v2ex)</a> 平台分为开发模式和浏览模板，开发模式只有用户自己可以打开，浏览模式是供其他人查看，测试使用。</p>\n<img src=\"http://ocrlqrwod.bkt.clouddn.com/195239_mw7H_2405364.png\">\n<p>平台支持标准的 http 协议请求，支持添加 header ，支持标准 json,xml,html,text 四种返回格式，\n自动格式化展示。平台做了许多体验优化，比如参数列表和 url 自动转换，\n请求文档字段一键生成。响应文档的字段可以从 api 返回自动生成。请求自动存为历史记录，\n支持定义的环境变量，可以方便切换线下，下上环境,文档导出等等。</p>\n<p>下面就简单介绍下怎么使用 Apizza 进行接口测试。</p>\n<p>第一步：准备接口</p>\n<pre><code>&lt;?php\n   namespace Home\\Controller;\n   use Think\\Controller;\n   class ApiController extends Controller {\n     public function index(){\n       $result = array(\n             'status'=&gt;1,\n             'data'=&gt;array(\n               'name'=&gt;'My name',\n               'tel'=&gt;'12345678',\n             )\n         );\n       header(\"Content-Type: application/json\");\n      echo json_encode($result);\n   }\n}\n</code></pre>\n<p>第二步：测试接口</p>\n<p>登陆 Apizza ，创建一个新项目，进入控制台，填写接口地址，并点击发送，效果如图</p>\n<img src=\"http://ocrlqrwod.bkt.clouddn.com/203152_qSPL_2405364.png\">\n<img src=\"http://ocrlqrwod.bkt.clouddn.com/203257_CuiR_2405364.jpg\">\n<p>可以看出，效果不错！</p>\n<p>接下来测试一下传递参数的情况</p>\n<pre><code>&lt;?php\nnamespace Home\\Controller;\nuse Think\\Controller;\nclass ApiController extends Controller {\n    public function index(){\n    $requests = I();\n    $result = array(\n        'status'=&gt;1,\n        'data'=&gt;$requests\n    );\n    header(\"Content-Type: application/json\");\n    echo json_encode($result);\n    }\n}\n</code></pre>\n<p>测试效果图如下</p>\n<img src=\"http://ocrlqrwod.bkt.clouddn.com/203849_gyNI_2405364.png\">\n<p>测试效果和展示效果都还不错，而且直观，简洁。</p>\n<p>第三步：写文档</p>\n<p>Apizza 可以方便的写文档，只要一个按钮就可以把模拟的字段自动生成文档字段。\n这个功能还是很方便的。</p>\n<img src=\"http://ocrlqrwod.bkt.clouddn.com/204035_uZb1_2405364.png\">\n<p>点击那个 U 的按钮，可以自动生成红色框里面的字段，你只要把说明补充上就行了。最后点击保存。</p>\n<p>第四步：导出文档</p>\n<p>这个功能不错，导出的文档格式也很漂亮。如下图</p>\n<img src=\"http://ocrlqrwod.bkt.clouddn.com/204151_heNS_2405364.png\">\n<img src=\"http://ocrlqrwod.bkt.clouddn.com/204219_0m1Z_2405364.png\">\n<p>好了，基本介绍了 Apizza 的使用流程，他还有许多其他的功能，这里没有做介绍，可以自己\n去体会一下，最后补充一下，要使用 apizza ，需要按照他的 chrome 插件，这个主要是做跨域的，\n不然不能使用哦^_^</p>\n</div></div>"], "reply": "22", "tittle": "API 开发者福利--API 在线管理，模拟请求测试，生成文档工具之 Apizza", "comment": ["整个风格，抄的 postman= =", "基本一毛一样啊", "风格同意楼上\r", "之前我自己也想搭建一个项目,不过后来流产了\r", "因为为了一些接口私密性 更多人愿意自己搭建内部的类似平台 而不是放到你们的平台上", " 我们只是觉得 postman 的体验比较好，也没有抄袭他原始代码啊。而且也是减少学习成本，要是在整一套新的逻辑，意义又有 多大。我们也是尽量优化他不好的地方， postman 确实很好。我也同意^_^", "还有一点，你有什么需求给我们提，我们可以加上和修改， postman 中不行了嘛，是不(嘿嘿）", "ThinkPHP+XAMPP", "还是习惯用 insomnia", "我用着感觉没啥特别的。。", "导出文档不错。", "赞一个", "最近准备考虑用 swagger 生成 API 文档", "支持一下", "有 mock server 功能吗", " 目前还没有，这块我们有考虑^_^", "我们用 apidoc", "而且感觉这个东西没有解决什么痛点。", " 问一下啊，我现在也用 swagger ，不过是在 swagger-ui.html 页面使用，你是自己写个程序生成 api 文档吗？还是 swagger 就支持这个？谢谢", "mark", "写个脚本读取 php doc ，我现在就这样干的", "=。=啊 不能自己用代码处理返回或者发送的内容么", " 自己处理？你是说自己写脚本处理？", " 类似吧 手上有几个 API 的数据是 HTTPS 发送之前把 body 区域的 json 用自定义算法加密发出去，收回来的数据也要先解密出来 json 才行 用这种 API 工具好像就不行了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>2016 年被称之为网络直播的元年，除了腾讯、乐视、优酷土豆等视频网站，花椒、斗鱼、熊猫等为代表移动直播平台开始引发现象级的关注。在这场直播大戏中，提供直播和点播服务的视频云成为技术领域的实际推动者，也成为 11 月 3 号举办的首届视频云峰会上讨论的焦点。\n　　作为国内视频云领域的行业领跑者之一，网易视频云音视频技术专家郭再荣受邀出席首届视频云峰会，并向外界传递出打造一体化、全开放、多场景的视频云平台的信号。而这位在音视频领域拥有十余年研发经验的技术专家，又是如何看待视频云服务及其商业前景的？</p>\n<p><img alt=\"1\" src=\"http://mmbiz.qpic.cn/mmbiz_png/xz85NnvGp3bjCfa7ZLKVtopz6PaUqmpeWTUNhdSQMicftibTDgP4sibnAP5IRhFnpwFO2TD8dCh0d6tQLdiaxk4gvg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1\"></p>\n<p>视频云行业崛起，打破了直播的最后一道门槛</p>\n<p>在郭再荣看来，网络直播的爆发绝不是偶然的，更确切的说与整个行业的成熟不无关系。一方面，随着 4G 技术的大范围应用，网络带宽的不断提速，同时网络资费相应地降低，视频上行和下行所需的带宽和流量已经达到直播的要求；另一方面，手机、平板等智能硬件设备的迅速普及，设备性能越来越强劲，让移动端的视频应用井喷爆发，真正变得唾手可得。与之同时，视频门户、娱乐直播、游戏直播、在线教育、远程医疗、远程监控、企业协作、社交应用等各行业也对移动直播产生了强需求。“视频云服务的出现打破了直播爆发的最后一道门槛。”郭再荣如是说。</p>\n<p>以网易视频云为例，在网易 15 年音视频技术的积累下，将直播管理、系统转码、流媒体分发等以云服务的提供给开发者，并提供了覆盖 iOS 、 Android 、 Web 端的推流端和播放端 SDK ，开发者只需要接入 SDK 就能拥有实时、稳定、流畅的视频直播功能。除此之外，网易视频云还提供了数据分析、美颜滤镜、视觉特效、实时水印、版权保护等个性化功能来满足不同的场景需要。</p>\n<p>郭再荣介绍说，视频云服务解放了开发者，但为了更好的提供服务，还需要解决三个技术挑战，即实时性、流畅度和清晰度。以直播过程中的卡顿现象为例，网易视频云自研了 Dawn 协议，相比于标准协议，在网络拥堵的条件下的表现要更加流畅。</p>\n<p><img alt=\"1\" src=\"http://mmbiz.qpic.cn/mmbiz_png/xz85NnvGp3bjCfa7ZLKVtopz6PaUqmpedjheanb1vtws8yosz5gjHORF8kg85CuSwFmD60jnfUibvHsXYpM9Q4w/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1\"></p>\n<p>视频云的未来趋势：一体化、全开放、多场景</p>\n<p>截止到目前，网易视频云已经推出了点播、直播和互动直播功能，并根据市场发展状况为视频需求用户提供一体化、全开放、多场景的视频云服务。</p>\n<p>据郭再荣介绍，网易视频云已经实现了一体化的解决方案和服务的全面开放。“以网易视频云的流媒体分发系统为例，我们提出了智能接流源站的概念，通过 dawn 私有流媒体传输协议，加上自建节点，智能调度中心，实现智能接流源站。整个端到端的传输链路实时监控网络状况，控制主播端编码参数，自动调整直播流码率，确保直播更加流畅。”</p>\n<p>为了适应直播向垂直领域发展的趋势，网易视频云将深耕视频云服务的场景化应用，并在社交应用、在线教育、视频门户、娱乐直播、企业协作、新闻媒体、安防监控、远程医疗等领域积累了丰富的实战经验。</p>\n<p>郭再荣重点介绍了网易视频云在教育场景的解决方案，在多路互动、智能源站接流网络、直播、点播等技术的基础上，网易视频云针对教育场景打造了媒体处理平台，实现了文档转换、白板互动、屏幕分享、互动问答、版权保护、直播录制等个性化功能，能够完全满足教育直播在实际应用中的需要。同时，网易视频云无缝对接了网易云信的即时通信服务，以促进师生、家校的零距离实时沟通。</p>\n<p><img alt=\"1\" src=\"http://mmbiz.qpic.cn/mmbiz_png/xz85NnvGp3bjCfa7ZLKVtopz6PaUqmpeSkgtut9g5U7vGIEhU2ciaDUvFibqibhTiaB4RXoKTtTg1xPQIK1D7icPfQQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1\"></p>\n<p>事实上，从整个视频云峰会上不同专家的言论来看，在技术和服务上正在呈现出一体化、全开放的形态，而场景化应用很可能是视频云服务商们的分水岭，谁能满足用户对特定场景的需求，谁就能占领更大的市场。而在这一方面，有巨头背景的网易视频云再次走在了行业前列。</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "网易视频云郭再荣：打造一体化多场景视频云平台", "comment": []},
{"content": ["<div class=\"topic_content\">这几天在想买个超薄的本子装 linux, 做移动开发用,想想有个 ssd, 不错的 cpu,最好是金属的,选来选去,不是动不动就 7000 以上(zenbook),不就是带个独立显卡,总感觉带独立显卡是那么有点无用.\r<br>\r<br>但是,好吧,帖子的重点:\r<br><a target=\"_blank\" href=\"http://www.nvidia.com/download/driverResults.aspx/108586/en-us\" rel=\"nofollow\">http://www.nvidia.com/download/driverResults.aspx/108586/en-us</a>\r<br>\r<br>nivdia 的 linxu x64 驱动支持到 10X0 系列了,喜大普奔!\r<br>\r<br>好,现在选本子,只要超薄和 ssd 就 OK 了</div>"], "reply": "24", "tittle": "linux 笔记本选择", "comment": ["昨天晚上给台式机 折腾了 Arch ，本来担心 Pascal 显卡不支持，去 NVIDIA 一看已经支持 GTX10X0 了。\r", "然后安装很顺利，哈哈。", "我 13 年 买的 U430P  超薄   双硬盘   装的都可以......  现在 应该更多了吧", "话说这个话题，昨天就有人讨论过了，可以移步看看\r", "超薄+ssd 这么简单，多了去了，我同学买了一个清华同方的，超薄+ssd+i7+8g 内存，你猜多少钱，不到四千！", " 问题 linux 下的独显驱动是一个痛啊😯", "只做开发的话不要买带独显的", "感觉可以考虑 chromebook   现在中亚可以免运费啊", "安装 linux 然后安装 KVM,装一个 win,\r", "在 KVM 里面设定 PCIE 穿透,将独立显卡直接让给 KVM 内的虚拟机接管,\r", "你就可以在 linux 用几乎全速跟完整效能跑 win,还能跑 3D\r", "linux 就完全用内显.虚拟机虽然接管独显,但他输出会面还是由 KVM 投影到内显内.\r", "完美.", " chromebook 的 32g 硬盘太小了", "装 linux 最好还是不要双显卡,有强迫症的更加不要,你会蛋疼死的", "话说得看你 linux 的版本。 centos 尽量不要装老黄的官方驱动， ubuntu 还行。", "你们不忌讳闭源驱动的，有啥好纠结的哇～逃", "dell xps\r", "hp envy13 、 envy15 、 Folio G1 、 Spectre 13\r", "lenovo thinkpad x1c\r", "......", "如果周围网络好的话上 chromebook\r", "储存用在线或者插卡嘛\r", "或者价钱上 MBA", "买 new MacBook （逃", "千万不要买带独立 N 卡的,显卡驱动支持很不好.\r", "Nvidia 自己的驱动不支持高分辨率,如果要外接 2K 屏或 4K 屏,你会很崩溃的.\r", "家里的台式机我是把 N 卡扔掉,用集成显卡,高分辨率支持良好.", " 那个版本呢?所有版本都有这个问题吗?", " 可以, 一会去折腾下!", " @", " 过来抓人", " @ 错人了, @", " 过来抓人", "你需要 Thinkpad new S2", "目前 Chromebook 插 SD 卡，用着不错。", " 别逗\r", "放过去集显在主板上呢\r", "就算是集显也是有 GPU 的\r", "只不过和 CPU 包一起了而已\r", "早期 intel 的 i5i7,揭开盖子底下是两块硅片\r", "\r", "集显影响整机性能是因为集显没有独立显存,所以占用内存,这也要算到内存带宽里的\r", "但这和 CPU 的计算力并没有什么关系\r", "\r", "而且就算有独显的机器,日常使用独显根本是不用的,只有玩游戏调用到才使用", "“高性能 + 薄”可以看看 msi gs63 。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>上回抽奖中的门票，原链接： <a href=\"https://www.v2ex.com/t/315118\" rel=\"nofollow\">https://www.v2ex.com/t/315118</a>\n周末加班不能去了\n不知道怎么送合适，要谁第一个回复并证明自己在做 IOS 开发的就送？\n只是兑换码，需要在 11 月 5 号前也就是今天兑换</p>\n</div></div>"], "reply": "31", "tittle": "加班去不了 免费转送开发者大会门票", "comment": ["楼主好人，可惜不做 iOS ，顶了", "没有认识的同行朋友么", "这么巧，我也是得陪妹子出去玩也浪费了", "唉，好像去看看鸟哥呀。", "居然没人", "好可惜... 坐标不符", "iOS 一枚， 坐标杭城", "感兴趣，可惜只是一枚帝都本科学生😂", "swift 2 升级到 swift3 ，突然觉得 Object-C 还是很可爱的", "LZ 好人, 我是 iOS 开发者", "不知道为啥就想到了 KVC KVO ， UI ， NF 一堆。", "LZ 送出去了嘛,帝都 iOS 开发一枚,求送.(至于咋证明..测试环境的模拟器截图算不算)", "RubyMotion 算么…… 毕竟也是 iOS 平台了 [摊手", "说得好。怎么证明自己是 iOS 开发\r", "\r", "来一发 unrecognized selector sent to instance ？", " 你这是怀念还是想要", " 你这话不确定要不要 回复算早的 如果需要就给你？", " 需求明确 前面两人 13:30 前没回复就送你", " 要不就算排队？时间同上 谢谢回复", " 嗯嗯 排个队吧 谢谢！", "  我是看的 证明自己在做 IOS 开发 这句话，突然想起血泪史，就怀念一下，这个票我已经有啦，谢谢", "感谢 LZ, 确定想参与这次的分享", " 小睡一会,不知道错过了没", " 不客气\r", " 那就给你吧 留个联系方式 我发你兑换码\r", " @", "  前排先回复的 不好意思", "现在 13:55 我这显示 25 分钟前 Mayu 回复的 所以就给 Mayu 吧", " 恩恩,没事儿,先来后到", "天啊   我咨询了一下同事   竟然发现他那边已经有票了  所以还是请楼主转给楼下需要的小伙伴吧  不好意思  浪费了大家的时间", " 你联系方式？", " ", "  感谢", " 已发邮件", " 收到,灰常感谢"]},
{"content": "", "reply": "247", "tittle": "双 11 大家都准备入手哪些真正降价的装备？？", "comment": ["买点牛奶补充一下营养", " 呃，我是直接淘宝买的成品", "营养跟不上, 买点营养快线?", " 我也想买啊，就是不降价，话说用的怎么样？", " 前些天问了下京东上的 Filco ，说是应该在双 11 之前上。只要不比天猫贵我就买了。", "不管图书啊 装备啊 零食啊 很多都是先涨价的 最近天冷了 不管是单身喵还是有女票的还是程序媛 推荐这个黑糖姜茶 配料只有黑糖和姜 嫌麻烦的不用自己熬了 也不用在妹子喊疼的时候只会说一句‘多喝热水’了 现在 jd 满 99-50 5 盒 50 支 49 块 拿走不谢", "喔 忘发链接了 寿全斋 黑糖姜茶 10 支装 速溶姜茶 120g ", "看中一个 toto 马桶，低于 5500 就入！", " 是说 ac68u 刷梅林不行吗", "一直想买个 1T 的移动硬盘，到目前还未看到有活动的", " ac68u 没刷梅林，用的官方", " 亲 你的 google driver 是怎么这么快的？用的那家翻墙利器？ 或者 vps ？", " 我还打算买个 ac68u 刷梅林挂 ss 连 ps4 联机", " 是鹅绒还是鸭绒，什么时候买合适？", " 你是说双模 87 吗 然而红轴 1299 -200 的券后和淘宝一个价格", " 我用的 ipv6 直连 google drive ，无墙", " 可以，不过 ipv6 有问题， ipv4 的 LAN 能跑 600 多 M", " 白鸭绒。同等级的鹅绒鸭绒没区别，鹅绒比鸭绒好纯属胡说。这个被从去年双十一好评如潮后关注一年了，各种活动基本都没怎么降价，这次只要 400 元（已断货）。", "唉，固态涨价，估计是回不来了", " 多少啊...不可能降价吧", "硬盘", "耳机吧，但是现在感觉没有便宜的", " 天猫上普遍都是 1099\r", "\r", "那我也等等", " 现在上货了吗？没找到啊", "几个月前买了几块 ssd ，刚刚看了一眼，涨了近 50%\r", "海外电子产品价格估计是降不下来了", " 现在还有优惠券吗？", " 我还有个问题，如果 68u 是拿来做中继同样挂 ss ，这样 ps4 联机，会有效吗", " 我买青轴， 999", " 现在已经上架了，我刚下单黑色青轴，到手价 999,比淘宝便宜些，其实这人比较倾向于在京东买东西，只要京东不比淘宝贵", " 键鼠的么，还有很多， 599-120 和 999-200 的各自有一张可以赠送出去的。", "女生买衣服，男生买衣服给女生，单身狗自费", " 能给我吗？想入个好点的鼠标 先谢谢了", "单身狗买了剃须刀，吉列锋隐致护，还有洗面奶芙丽芳丝，终于降价了😄另外还买了一箱康师傅方便面凑单 300-20", " 我没 ps4 不知道……不过你要挂 ss …肯定辐射出的 WI-Fi 就是带 ss 的，和是不是中继无关…", " 请加我微信： mortalha", "佳能 70D 便宜了 400", " 我知道是有，就是效果跟做主路由的差距有多大", " 不清楚，我不用无线", "ps4 预售版是 11 月，希望能赶在双 11 活动", "  asics 入门级的跑鞋吗？还是什么型号的，平时就在公路上跑跑， 1 个小时左右时长 ， 另外 佳明的表，有木有推荐的型号，淘宝会不会整到假的，主要 测下速率和心跳，谢谢\r", "  和佳能比，性价比怎么样，有没有推荐的型号，谢谢", "入手阿里云服务器   双十一降价  续费还五折！坐等双十一看看", " 能送我一张吗？", " 请加我微信： mortalha", " 华米手表就一款啊，运动手表，京东双十一降到 699", " 我也下单了明天送到，同款同价：）", "  狗东惩戒者红轴红光 699-120 ，刚下单", "4k 显示器。。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>微信小程序在昨天(11-03)晚上正式开始公测了</p>\n<p>本来好多人还说要再经历几轮内测,年底才会公测呢.</p>\n<p>没想到讨论来讨论去,昨天就公测了,真是喜出望外</p>\n<p>大家怎么看,可以加入企鹅 2k 群一起讨论吧 139122611</p>\n<p>公测申请地址 <a href=\"https://mp.weixin.qq.com/cgi-bin/wx\" rel=\"nofollow\">https://mp.weixin.qq.com/cgi-bin/wx</a></p>\n<p><img alt=\"Alt text\" src=\"http://cms-bucket.nosdn.127.net/catchpic/9/94/94585ee4204fd017659c7cd26d40dcad.jpg?imageView&amp;thumbnail=550x0\"></p>\n</div></div>"], "reply": "26", "tittle": "怎么评析微信小程序这次公测![乱入知乎体]", "comment": ["没有公司营业执照 rbn", "我感觉 微信后期会开放的吧", "楼主赶快细软吧，我就提醒这么多", "抓住先机啊,内测就一直在关注了 哈哈,不过看公测情况对个人目前来说门槛高些", "没有开放个人申请，真是差到家了", "我估计上有政策 下有对策,再不行看以后的情况吧", " 企业里面的个体工商户", " 个体工商户都没有，居然不对个人开发者", "那以后是不是很多\r", "\r", "这类微信小程序导航网站出现：\r", "\r", " ", "\r", "\r", "看文档吧，企业(个体工商户)", "买买电影票，充冲话费还是可以的", "  低频 非刚需的产品都有可能喽", "  不知道以后啥政策", " 苹果都积极拥抱开发者，腾讯不至于把开发者往外推吧", "对啊 所以说后期应该会开放的我感觉 @", "问个问题，微信认证 300 ，小程序认证 300 ，然后微信那个开放平台（就是把微信和小程序连在一起那个）认证 300 ，一共 900 吗", " 那个好像不是针对开发者的……也得输什么工商局信息之类的……", " 是的，现在可以随便填，只要不发布就行。如果后期不开放这个，估计就是门槛了。不想小程序太泛滥吧", " 这个域名不错", "不说 300 坑不坑，老是认证太繁琐了，开放平台,公众平台，小程序，支付另外审核（这个没说的）", "谢邀！", " 域名注册的有头脑", "   那也没招谁让人家牛呢", "注册到最后一步：为保障微信公众平台的信息安全，你将不能继续进行注册。。。。。。。。请问是什么问题", " 腾讯可以分分钟就仲裁拿回去。", "兴致冲冲特意跑过去注册，结果个人不允许注册  麻蛋"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>1.RT</p>\n</div></div>"], "reply": "94", "tittle": "除了 php，还需要学一门什么语言，才不会失业？", "comment": ["首先当好一个程序员，然后再当好一个 php 程序员，\r", "从职业生涯来看，技术方向肯定是要跟着市场走的，光靠一个平台或者语言吃饭，也不是事", " 有道理", "学了世界上最好的语言还会失业？", "至少还要 JavaScript ... 或者另一个方向学 Shell 或者 Python ...", "你要有学习的能力，才能应付每天都涌现出的新语言，新框架。\r", "所以建议你把 C 语言学透，然后你会发现，你学啥都不存在问题", "ECMAScript,Linux(shell 必须的)， JAVA ，最好掌握一门强类型语言(C ， C++，或 golang)。\r", "啊，对了。还有数据库(2 种以上为好)", "除了 php ，你还要学习： mysql js html css linux 《颈椎病康复指南》", "英语", " 时代发展这么快，指不定那天就不行了呢。\r", " 会 JacaScript 基础的\r", " 记得当年学 C 的时候只考了及格...", " 要学的好多。。。\r", " 说道点上了\r", " 重点是最后一个吗", "个人觉得如果一门语言做到很深入，也不会缺饭吃吧。", "c,java,python,js,golang 至少要会两种吧", " 道破天机 :D", "当然是 java", " 这是真的吗？", "英语和德语", "学好英语。。。\r", "\r", "其实我知道你说的是编程语言，我推荐 Java 。", "英语比任何一门编程语言，都要重要。", "程序员好像很爱假设自己哪天失业。", "人类的语言你还没学全", "一门语言不够。 \r", "\r", "主做 PHP ，起码也得会点儿 Javascript 吧。除 PHP 外，有可能还要求会一门二进制语言来写 nginx 或 PHP 扩展吧。", "学一门语言不如写一门语言，真到那个层次也不用担心失业这种事了。\r", "比如某人简历只需要一句话： “ I wrote Python ”", "英语", "英语。。。。。", "C++", "JS", "英语、德语、法语、日语、粤语\r", "小语种：葡萄牙语、瑞典语\r", "都可以", "Java 啊，然后研究一下操作系统网络什么的。", " 确实\r", " 大神膜拜\r", " java 大法。。。\r", " 英语小白\r", " 别闹\r", " 0.0\r", " 这是事实。。。\r", " 汉语都没学好...\r", " 扩展是不是得学 C 了啊？\r", " 是在下输了\r", " eng...\r", " C++好玩吗？\r", " 懂一点\r", " 这脑子能放的下吗？\r", " QAQ", " 官方的英文文档都看不懂，就说一门语言学好了，我也真是服气，哈哈。", "你把 php 学好了 还担心失业？", "英语", " 0.0", " 潜力无限", "除了不写系统底层驱动，其他的都应该要会一点吧", "学一门烙煎饼果子或者炸串的技巧吧", "我公司的首席程序员只会 PHP\r", "而我除了 PHP 还要写 JS / jQuery / React / Shell / Ruby / SQL ，还要管理公司内部网络和电脑维修，各产品服务器架构和自动化部署。\r", "LinkedIn 上找我的人开价在税前年薪 6~8 万欧之间，他的是 15 万欧+。\r", "\r", "所以， PHP 只是工具而已，能不能找到好工作还是看你业务熟练度。", "脚踩 php 身披 Python 手持 mysql 智取 linux", " 涉及多的多，会不会影响精力？", " 厉害了我的哥", " 我的多而杂，适应了某一岗位的需求而已，离精通还有很长的路走\r", "我的笨办法就是加时间， 8 小时工作+6 小时业余研究，睡眠最多 5 小时，入行以来已坚持了 6 年。\r", "过 30 以后明显感觉越来越吃力，能走多远不知道", "汉子的话，学花言巧语", "很多公司对 php 水平要求低，于是我转前端，发现真正需要 javascript 程序员的很少", " 少撸就行", " 额，好有含义啊", "JavaScript 吧，如果是 WEB 开发，肯定要写 JS 吧 ..", "java 还是算了吧，现在 java 都是招高级工程师", "作为一个 PHPer 正在学 swift & android", "其实学会朝鲜的朝鲜语在去朝鲜，是绝对不会失业的。", "多学几样都是皮毛失业的更快，把 PHP 钻进去，看几个框架，熟悉这些框架的思想和实现，然后奔着架构师去。目光不要放平行了。 在技术上一样精比样样都知道点更吃香", " 正解", " C 明明就是弱类型", "中文", "要真这样说学 java 才是最保险的，企业级软件，各种管理系统 crm ，大互联网公司后端，往前还有安卓，机器学习，云计算，深度学习？", "java 是最广泛的， js 是最火的", " 当好一个程序员，请问具体何为。", "纠结学一门语言的说明你还没到一个境界。\r", "到了一定境界以后，是企业需要用什么语言你就花几天时间学会然后开工。\r", "就算是在同一家公司里，也会因为新技术的出现而切换技术栈。\r", "推特从 Ruby 换到了 Scala ，你怎么办？", " 你列的这么多全是业务，只会 java 的语法去写那些业务与别的语言转过去的相比，几乎没什么优势", " 我当然知道所谓的高级程序员是不 care 语言这种正确的废话，但是与之相比，更熟悉生态不能不说是个优势，只要是个合格的程序员，语言层面的切换只是时间问题，但是总归要花时间，再说啦你就算用或者不用 java 写业务你也不会是在搞些一般人学不会的黑科技，你要真有这种壁垒，那这类话题也没啥讨论的必要。。", "学了世界上最好的语言还会失业?", "学习 github 上使用最多的语言 markdown", "跟我摆地摊吧", "当然是学一门前端语言了，，比如 iOS 双保险", "Java node.js", "感觉题主 最好是学好英语", "PHP 从业 3 年，前端 2 年，目前 26 岁，担任小公司产品经理一年\r", "我个人是这样认为的：\r", "技术只是手段，在项目上使你很好地完成任务，在事业上是你的跳板。\r", "\r", "技术永远在发展，但人是衰老的，拿有限的精力去学无限的东西是不科学的。\r", "\r", "所以除了 PHP ，你可以再去学任何你想学的语言。\r", "但是\r", "也可以去学如何更好地晋升角色，因为后辈会永无止境地上来，你仍旧做程序员，必然被淘汰，不同的年龄适合不同的角色，人也应该像技术一样不断的跳跃发展，才永远不会被淘汰。", " 然后开始面向 markdown 编程？", "程序员居然还纠结语言？这个地球上当目前为止，不管吹的再天花烂坠的语言，它都一定是“面向过程”运行的语言。搞清楚这点，语言没啥区别", "多沟通，多接触人", " \r", "\r", "“面向过程” ……\r", "\r", "声明式语言和逻辑式语言看着你装逼不说话，说说你会几门语言？", " 為什麼德語？", "还是先学精一门语言 然后再学其他的。先纵向发展 再横向发展", "握爪，同为 phper\r", "首先，我觉得上面很多回复都挺扯的，学习这东西应该是分方向的，应该先确定自己的兴趣再来选择发展方向。\r", "如果你只是想混口饭吃，过上悠闲的生活，那你只需要把 php 学好就行了， js 之类的能会自然是好了\r", "如果你想变得很牛逼，那赶快把离散数学、数据结构与算法、设计模式、操作系统原理、汇编、 c 之类的学好吧， php 想深入发展，前面说的这些都是基石\r", "我选择了后面的路", "你需要学习如何快速学习的方法, 这样一辈子都不会失业", "《颈椎病康复指南》《腰椎康复指南》《活着》", " 全才。。\r", " 好想法， 50 岁后是回家卖煎饼果子吗。\r", " 膜拜\r", " 文采不错\r", " 人长的丑，学了有用吗？\r", " 发现那个学好了都是大神\r", " 专注 web 开发\r", " 看到 java 都头疼\r", " 6666\r", " 厉害了\r", " 这个可以有", " 20 多年了依然没学好。\r", " 太广泛了把\r", " php 是最好的吗\r", " 好的把\r", " 哈哈\r", " 这个会\r", " 老司机求带\r", " ios 不是早都已经饱和了\r", " 0.0\r", " 受教了\r", " 好像是的伐\r", " 难道要当一个会演讲的程序员吗？公司分享会真的有用？\r", " 是的呢\r", " 架构师路线？老司机求带\r", " 真理\r", " 0.0", " 你在地球上找一门语言，计算机执行起它来不是一行行的读进去然后执行的？本人才疏学浅到现在为止还没找到过。你以为我说的“面向过程”是啥意思？语言这东西有啥可怕的，再天花烂坠的语言还不是机器一行行的执行的，从这点上说机器比人好理解多了，机器可不会玩魔术。只要机器执行语言的模式还是现在这种“一行行的过程”。就没什么可怕的，什么时候机器学会人类的跳跃思维的时候，那就复杂了", " 我根本没有想说『高级程序员是不 care 语言』，我只是想表达你举的例子不成立。假如你原来是拿 java 写 web 的，现在转去做机器学习，和一个以前拿 c++做机器学习的人现在转去拿 java 做，谁上手速度更快？熟悉语言在这个场景下的优势几乎为零。你说熟悉生态，生态也是和你做的业务强相关的啊，做 web ，你熟悉 ssh 、熟悉 myibats ，然后你转去做安卓，你之前会的那些那些生态有什么用？", " 别扯其他的，就说说你会几门编程语言，覆盖几个编程语言范式。别说什么 一行行的过程 真是把你的浅显和无知暴露无遗啊。那你告诉我你跟翔有啥差别啊，不都是由基本粒子组成的吗？你给找出你身上有哪个基本粒子翔里面没有的？", " \r", "不见得是一行行读进去执行的啊，首先说一行行读，起码 php 就不是，你可以动态的延后声明。再说一行行执行也不对，不说多核多处理的，单单是古老的指令流水都是数条同时执行的，再有编译器优化，执行可能是乱序的。\r", "倒不是抬杠，不同语言除了应用场景不一样，本身创造出来的思考方式也不一样，学习不同语言本身就是对原本问题的思维方式的一种变换，哪单单只是“面向过程”这么简单的问题。打个比方，使用 erlang 解决并发问题的时候，这就是语言本身带来概念上的转变。虽然说起来其他语言可以做到同样的事情。学语言首先是思路的开阔，还是有学的必要的。", "同 phper 首先 PHP 是世界上最好的语言 恩 没毛病 然后  我也是个菜鸟 我不知道你是不是把 php 玩熟练了 要我说你还是老老实实把 php 玩熟练吧 未来的事交给未来的你把 急也没用", " 你说的是充分条件", " 你 PHP 有没有那个首席强啊？你和首席薪水差异多少啊？难道就因为他熟悉业务，所以你两薪水有这么大差异？", "跟语言没关系，你太烂了，什么语言都救不了你。", " 我不是老司机啊  我是菜鸟啊", " 他薪水大概是我的 1.8 倍左右。\r", "如果说直观比较，写 PHP 代码他的速度快我一倍有多，而且代码架构更简洁、效率更高。", "任何一门外语，你都不会失业了", " 此“面向过程”，非彼“面向过程”\r", "我说这话的意思，就是不要把编程看做是趋向魔术的一种方式，很多人畏惧去尝试别的语言，本质上就是因为计算机在他们眼里跟魔术一样。", " Tiobe 排行榜语言前 20 名我除了汇编没认真写过东西，其他的语言我都玩过了。你是不是打算继续去哪里拿个题来考我，然后考不出来就说我在装逼？我不是全知全能，很多语言也仅仅是玩玩而已。但是在我眼里，语言真是趋同，没有魔法，没有银弹，大家都是一行行执行的东西，有啥不同呢？编程语言范式？无非就是面过程，对象，函数式，你还能玩出什么花来？我说搞计算机的纠结这些有意义吗？我说的过程不是你理解的过程！懂？不懂我在说什么就别回了，都这个时代了还纠结语言真是很无聊的事情。我想告诉楼主的其实就是一句话，永远记住你看到的再花里胡哨的东西，机器都只能逐行执行。为啥要畏惧或者去挑选语言，都玩玩呗。啥都接触一下，你会发现大家的想法其实都差不多，殊途同归", " \r", "\r", "覆盖几个编程语言范式？这个都回答不出来别装逼。你都没资格谈论编程语言懂不？", " \r", "\r", "搞计算机的纠结这些没意义？别侮辱人家搞计算机的了，你就一个搬砖码农还有资格说自己搞计算机的？那是不是工地上建筑工人也是搞建筑的呀？\r", "\r", "真是的，计算机那么多领域，不是自己领域的东西别瞎扯。先去 google 一下 PLT ，然后看看 PLT 要学多少东西，看看你自己懂多少。编程语言是大坑，你这种估计连编译原理那种最浅显的门面都啃不下来就别自以为多了不起了。", " 首先，机器不是逐行执行的。", "学会了最好得语言还会失业！天呐 世界要毁灭了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近刚申请成功了教育版 G Suite ，打算用无限量的 Google Drive 存点东西，请问安全吗？谷歌允许吗？</p>\n</div></div>"], "reply": "54", "tittle": "请问 Google Drive 可以存放一些“你懂得”资源吗？", "comment": ["注意 dmca ，以及看他的 tos 。", "儿童色情杀无赦。。其他应该没事", "儿童色情绝对不行", "侵权内容别分享就是没事 别存 child porn", "谢谢各位的解答，明白了", "教育版的 office365 岂不是更好，能分享，没被墙，下载速度也很快。", "求问怎么申请的？？", "美帝和日本关于儿童色情的判定似乎不同，尽可能不要传日本擦边球。", "其实我很好奇，老子凭本事传上去的文件谷歌有什么资格去看是什么内容。。。", "存你懂的文件可以用 mega.nz ，端到端加密，密钥只有你掌握，只要不分享绝对不会翻车", " 自然不能传违法美国法律的东西，所以肯定是有监管啊", " 所以还是自建最安全，搞个 vps ，搞好存储和传输加密就行了", " 要是用美国的 vps,照样查你水表", "要是用 AES 加密文件，那还能查的出来？", "加密压缩应该没问题", "传 FBI Warning 应该没问题（逃", " VPS 你也不能存储违法当地法律的东西啊。。", "死", "管他什么内容，全部加密压缩包，并且绝对不分享给别人。", "“凭本事传上去的文件”\r", "2333333", "\r", "放心传吧，除了儿童，根本不用加密，请记得分享给我！", "同问怎么申请到的 g suite", "为什么最近三天已经看到两个无限容量的 Google Drive 用户了= =好羡慕。。。\r", "\r", "有 edu 邮箱然而好像没卵用的路过。。。", "自己备个 NAS 岂不快哉?", "office 365 edu 的 Onedrive for Business 巨慢无比，比免费版 Onedrive 还慢。", " 不一定『看』，可能用 md5 之类的比对，如果和已知的 child porn 相同，就有可能判定违法", " 这个看学校吧\r", "我的学校邮箱也是无限容量的\r", "毕业后也没改变", " \r", " \r", "请问有教育版的邮箱怎么申请的？", "为啥不能存本地呢，存 googledriver 又没法在线看", "美帝版八秒云，这种东西建议 BTSYNC", "视频 zip 加密一下没人管。但就不能在线看了", "照样查水表，一个 DMCA ，一个爱国者法案，吃的你死死的", "上面没有一个人看过 G Suite 的 Privacy Policy 么？\r", "\r", "我贴过好多次了：\r", "If your Google Account is managed for you by a domain administrator (for example, for Google Apps users) then your domain administrator and resellers who provide user support to your organization will have access to your Google Account information (including your email and other data).\r", "\r", "没有那个身份就不要滥用资源行不行？也没见着谁上公交车刷个老年卡呢？", " 这是，不让无限扔东西？？", " 前几天 V2EX 有个网友发了不少教育版的账号，但是很好奇，不是 edu 结尾的，是 com 结尾，登录到谷歌邮箱，显示澳大利亚大学邮件系统", "还是存自己硬盘里吧，放心一点", " 哪个帖子？", " 只有美帝用 edu 。这种好域名后缀都是美帝专用的。", " 你看下你的服务器在哪？比如，微软就给我放到了欧洲，但是我用 Aria2c,64 线程下载，速度 32M/s 。还是不错的。        \r", "话说，扔到 MS 家网盘，会被查吗？", "无语，又来天朝占坑不拉屎垃圾用户，祝帐号秒封。", "不用于传播,非幼兽,问题不大.", "好像是根据视频的 DNA （ SHA5 之类的，反正就是这样）匹配，发现则封杀。", "儿童 QS 这种肯定会被封杀的啊，想都不要想", "一直不明白为啥要把这类资源存上面，本地不行？", " 英國人叫 kiddy porn", " 照样查", " ", " 那个帖子好像被删了", " ACG 一类的呢？", " ", "   #行为准则           \r", "加密上传应该问题不大", "为什么上传？上传肯定为了分享。目的已经知道。", "首先，你不是学生教师用 edu 版本已经不合法了...", "Child porn 不會有事\r", " 求转存 233333"]},
{"content": ["<div class=\"topic_content\">macOS  Version 54.0.2840.71 (64-bit)\r<br>平均每 10 秒打开一个新标签页 超级烦人、、求破。。。</div>"], "reply": "11", "tittle": "chrome 最近正在不停地不停地自动打开新标签页、如何阻止", "comment": ["装了啥插件。。。", "求头像高清", "没碰到这个问题。。", "有毒?", "是不是你的键盘坏了。。。触发快捷键了", "检查下安装的插件", "看你这头像， 应该是上了什么网站， 然后中毒了的感觉。。。。。。。。", "r#7 @", " 我也觉得，换个头像应该就好了", " 感觉是微度 新标签惹得祸。。。排除法。。", " 不不。。头像自己拍的。。我最摄影的。", " @", " \r"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如图 试着用 <a href=\"https://laravist.com/series/deploy-laravel-app-on-vps\" rel=\"nofollow\">https://laravist.com/series/deploy-laravel-app-on-vps</a> 上的视频教程加 <a href=\"https://lufficc.com/blog/step-by-step-teach-you-to-deploy-your-laravel-application-to-server\" rel=\"nofollow\">https://lufficc.com/blog/step-by-step-teach-you-to-deploy-your-laravel-application-to-server</a> 博客的教程部署在 VPS 结果却是如图所示\nfpm 已经修改了 nginx 在 location / try_files 改为 try_files $uri $uri/ /index.php?$query_string;博客所在目录给予 nginx 的 www-data 用户组与用户名权限： sudo chmod -R 775 storage/\nsudo chown -R www-data:www-data /var/www/Xblog\n重启 nginx 和 fpm ： sudo service nginx restart\nsudo service php7.1-fpm restart\n<img alt=\"\" src=\"http://ww1.sinaimg.cn/large/b594477bgw1f9gj5gvvwjj212a0cgwga.jpg\">\n各位菊苣给点意见吧 有的说是没安装 unzip 和 zip 我试着重新安装一遍还是不行 //<a href=\"https://laravist.com/discuss/laravel/laravel-project-from-scratch-deployment-752\" rel=\"nofollow\">https://laravist.com/discuss/laravel/laravel-project-from-scratch-deployment-752</a></p>\n</div></div>"], "reply": "9", "tittle": "laravel 博客搭建 500 错误 如何找到错误所在", "comment": ["查 log\r", "\r", "/var/log/nginx/...\r", "或者 /var/www/Xblog/storage/logs/laravel.log", "Laravel 日志直接就定位了", "storage 目录给权限了没", "我记得 bootstrap/cache 目录的权限也要 775", "给 storage 权限", "开 debug 模式看错误", "我之前权限不对直接 500 ，没有其他提示", "stoarge 不可以写", "ls 都不看 lz 确实 chmod -R 775 storage 了么-。-\r", "\r", "lz 看 log 啊啊，什么都没有只有 500 谁也不明白的，@dxwwym  storage 不可写的情况下 log 是会被报 view 之类的错的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>题主就是这样的，这酸爽，有时候简直哭笑不得。</p>\n</div></div>"], "reply": "38", "tittle": "V2 有没有在北京干了几年回去考了公务员（事业单位啥的也算）的？这是种什么样的感受？", "comment": ["有在国企（中国移动）做了两年来北京当程序员的", "之前在北京，现在在广州，目前已辞职，就是这个打算的，这周回老家，试试国考这波。", "前几天北京同事(非本地)发了一个朋友圈是这样的。\r", "\r", "买车,买房,上学,看病,高考,啥时候交税也需要北京户口?", "楼主分享一下感受呗", "楼主现在从事什么类型的工作，还是 IT 吗", "去了银行干柜员啊囧。无奈啊，一边是爱的工作，一边是爱的人。\r", "\r", "最大的感受就是等死。你会看着你身边的人都在进步，你却只能原地踏步。", "撞头像 ", " ", "公务员还是算了吧，按发展的眼光看，人口越来越少，上缴给国家用来养官老爷的钱也会越来越少，以后公务员会有失业的危险的，到时候 40 ， 50 岁，买断工龄，又没有别的技能，上有老下有小，也没时间和精力学习新的技能了，真是生不如死。\r", "\r", "不要觉得公务员是铁饭碗，想想 60 ， 70 年代的商店售货员吧。", " 那其他行业就更生不如死了。 D 国为了稳定肯定要先稳住官老爷。所以只要不变天，你懂的", "做公务员还不如做 freelancer", " 我觉得现在去产能都敢干了，应该不管小官小吏稳不稳了吧。", "所以公务员是什么时候火起来的？还是像房地产一样从诞生开始就火到现在了。", " 现在在单位科技上，但是 IT 也算不上了，不用写代码啥的，实际就是网管了。", " 时间充裕了好多，并且天天没事干，闲着，最大的缺点就是挣钱太少了，工资 4 ， 5k 吧", " 不太清楚，也是感觉零几年的时候不怎么听说公务员这事情，但是这几年竞争是越来越激烈。。", " 那也得是跟核心比较近的官老爷，比如枪杆子，笔杆子，钱袋子之类的，如果不在这三个里面将来也挺尴尬的。", " 那是因为这几年经济走下坡路，就业更加困难了。", "帝都三年回家国企上班，讲道理胖了不少", "考公务员回报最大的是 08 年左右进入公务人员系统的人。现在在风口上的恰恰是互联网，现在中层的适合养老，基层公务员累死人", "身边有同学毕业在帝都两年然后就回去考了事业编制,买房,结婚,就等着生子了...算不算走上人生正轨", " 也算也不算，舒服是比原来舒服了，可能日子无聊，意志也慢慢没有了。就那样吧。", "然而一线一套首付够回家全款房+车，不想当房奴而已", "基层公务员累成狗，加班不比程序员少，还经常被人捅刀子。", " 多少线城市？", " 5 线吧，地级市", " 那四五千不错咯", " 你说的基层公务员是干啥的，还有加班的。", "据我所知，地方政府五分之四的公务员上班就是喝喝茶聊聊天看看手机玩玩电脑。最多最多偶尔接个电话", " 当然剩下五分之一的累成狗", "上面五分之四里面还有四分之一是从来不来上班只是挂名领工资的", "想想咱们一个月累死累活賺的钱，然后通过纳税，就送给这些人了，真够无语的", "有国企出来读研现在还没找到工作的…囧", " 那是你太无知。建议你好好了解一下再评价，不要无脑黑。\r", " 加班常事，还木有加班费。", " 想法太幼稚", "在北京呆了 5 年后回老家考了事业单位。局里按身份可分为公务员，事业编和临时工。公务员基本为领导，事业编是从下面部门借调的，临时工要么是大学生志愿者，要么是从下属企业抓来干活。工作分工，局长和一众副局长负责签字，科长负责签字+安排任务给科员，具体工作由科员落实，包揽从参加低级别会议到起草文件再到发放的种种工作，有时还要替领导刷在线课程，记学习笔记，参加各种需要数人头的无聊活动。工作量很少，一周平均下来大概也就 5 个小时？待遇嘛，公务员有 工资 + 保险 + 公积金 + 绩效 + 车补，事业编去掉绩效和车补，临时工只有工资可拿。至于感受，每天的生活波澜不惊，像白开水一样平淡。没有工作和生活的压力，但人生的热情与日俱减，这样下去早晚会像炉灰一样冷透吧 😢", "再谈谈一些比较无语的事情。去年局里开始编制十三五规划，领导一门心思想要大项目。找了省里的某设计院，没经过任何招投标流程。花了几十万折腾一年多。最后做出来的规划基本上就是把我们提供的材料拼凑在了一起，最重要的“实地调研”只有两天，形式是陪同设计院的两个人到各县区转了一圈。最后规划稿的质量可想而知，不过一样通过评审，比毕设答辩还水。。。领导总是对大项目有莫名的追求，过去十年家乡的常住人口持续减少，然而在此期间又建成了好几个新城区，以至于推高了菜价。统计数字造假也遇见了不止一次。下属部门上报的运量和周转量连续几个月保持相同数字的完美增长，然后在分析材料中解释这两个数字为什么双双下降，让人哭笑不得。然而最让人无语，或最绝望的是你对这些不合理无法做出丝毫修正。领导的决策并不需要征求意见，下级部门申报的虚假数字体现也无法更正，只能按原样报告给更上一级 😔", " 呵呵 屁股决定脑袋，别以为自己忙成狗政府里所有人都兢兢业业，八成人都是米虫", " 真的是这样，我也是感觉没有了热情，甚至都想不见在北京两年的日子是怎么坚持下来的，现在习惯了这种生活，去了北京很难想象怎么适应那样的生活……直到现在上班时候还写写代码什么的，我也是常给领导刷在线课程，于是发现的可以直接 post ，写了个秒杀课程的工具，领导让刷，我直接搞定，并且还装逼说天天听啊听……，有时候只有写写代码能打发些时间了。但是现在也就留下兴趣了，没有任务驱动，没有金钱驱动。我不知道自己能坚持到什么时候。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h2>1.</h2>\n<p>先说个 PHP5.3+ 的语法糖，通常我们这样写：</p>\n<pre><code>&lt;?php\n    $a = 0;\n    $b = $a ? $a : 1;\n</code></pre>\n<p>语法糖可以这样写：</p>\n<pre><code>&lt;?php\n    $a = 0;\n    $b = $a ?: 1;\n</code></pre>\n<p>执行结果$b = 1 ，后面写法更简洁，但通常不太建议用太多语法糖，特别是容易理解混淆的，比如 PHP 7 新增加??如下：</p>\n<pre><code>&lt;?php\n    $b = $a ?? 1;\n</code></pre>\n<p>相当于：</p>\n<pre><code>&lt;?php\n    $b = isset($a) ? $a : 1;\n</code></pre>\n<p>?: 和 ?? 你是不是容易搞混，如果这样，我建议宁可不用，代码可读性强，易维护更重要。</p>\n<p>语法糖不是本文的重点，我们的目的是从语法糖入手聊聊 Zend VM 的解析原理。</p>\n<h2>2.</h2>\n<p>分析的 PHP 源码分支 =&gt; remotes/origin/PHP-5.6.14 ，关于如何通过 vld 查看 opcode ，请看我之前写的这篇文章：<br>\n<a href=\"http://www.yinqisen.cn/blog-680.html\" rel=\"nofollow\">http://www.yinqisen.cn/blog-680.html</a></p>\n<pre><code>&lt;?php\n    $a = 0;\n    $b = $a ?: 1;\n</code></pre>\n<p>对应的 opcdoe 如下：</p>\n<pre><code>number of ops:  5\ncompiled vars:  !0 = $a, !1 = $b\nline     #* E I O op                           fetch          ext  return  operands\n-------------------------------------------------------------------------------------\n   2     0  E &gt;   ASSIGN                                                   !0, 0\n   3     1        JMP_SET_VAR                                      $1      !0\n         2        QM_ASSIGN_VAR                                    $1      1\n         3        ASSIGN                                                   !1, $1\n   4     4      &gt; RETURN                                                   1\n\nbranch: #  0; line:     2-    4; sop:     0; eop:     4; out1:  -2\npath #1: 0,\n</code></pre>\n<p>vim Zend/zend_language_parser.y +834</p>\n<pre><code>834 ›   |›  expr '?' ':' { zend_do_jmp_set(&amp;$1, &amp;$2, &amp;$3 TSRMLS_CC); }\n835 ›   ›   expr     { zend_do_jmp_set_else(&amp;$$, &amp;$5, &amp;$2, &amp;$3 TSRMLS_CC); }\n</code></pre>\n<p>如果你喜欢，可以自己动手，重新定义 ?: 的语法糖。遵循 BNF 文法规则，使用 bison 解析，有兴趣可以自行 Google 相关知识，继续深入了解。</p>\n<p>从 vld 的 opcode 可以知道，执行了 zend_do_jmp_set_else ，代码在 Zend/zend_compile.c 中：</p>\n<pre><code>void zend_do_jmp_set_else(znode *result, const znode *false_value, const znode *jmp_token, const znode *colon_token TSRMLS_DC)\n{\n›   zend_op *opline = get_next_op(CG(active_op_array) TSRMLS_CC);\n\n›   SET_NODE(opline-&gt;result, colon_token);\n›   if (colon_token-&gt;op_type == IS_TMP_VAR) {\n›   ›   if (false_value-&gt;op_type == IS_VAR || false_value-&gt;op_type == IS_CV) {\n›   ›   ›   CG(active_op_array)-&gt;opcodes[jmp_token-&gt;u.op.opline_num].opcode = ZEND_JMP_SET_VAR;\n›   ›   ›   CG(active_op_array)-&gt;opcodes[jmp_token-&gt;u.op.opline_num].result_type = IS_VAR;\n›   ›   ›   opline-&gt;opcode = ZEND_QM_ASSIGN_VAR;\n›   ›   ›   opline-&gt;result_type = IS_VAR;\n›   ›   } else {\n›   ›   ›   opline-&gt;opcode = ZEND_QM_ASSIGN;\n›   ›   }\n›   } else {\n›   ›   opline-&gt;opcode = ZEND_QM_ASSIGN_VAR;\n›   }\n›   opline-&gt;extended_value = 0;\n›   SET_NODE(opline-&gt;op1, false_value);\n›   SET_UNUSED(opline-&gt;op2);\n\n›   GET_NODE(result, opline-&gt;result);\n\n›   CG(active_op_array)-&gt;opcodes[jmp_token-&gt;u.op.opline_num].op2.opline_num = get_next_op_number(CG(active_op_array));\n\n›   DEC_BPC(CG(active_op_array));\n}\n</code></pre>\n<h2>3.</h2>\n<p>重点两个 opcode ， ZEND_JMP_SET_VAR 和 ZEND_QM_ASSIGN_VAR ，怎么接着读代码呢？下面说下 PHP 的 opcode 。</p>\n<p>PHP5.6 有 167 个 opcode ，意味着可以执行 167 种不同的计算操作，官方文档看这里<a href=\"http://php.net/manual/en/internals2.opcodes.list.php\" rel=\"nofollow\">http://php.net/manual/en/internals2.opcodes.list.php</a></p>\n<p>PHP 内部使用_zend_op 这个结构体来表示 opcode, vim Zend/zend_compile.h +111</p>\n<pre><code>111 struct _zend_op {\n112 ›   opcode_handler_t handler;\n113 ›   znode_op op1;\n114 ›   znode_op op2;\n115 ›   znode_op result;\n116 ›   ulong extended_value;\n117 ›   uint lineno;\n118 ›   zend_uchar opcode;\n119 ›   zend_uchar op1_type;\n120 ›   zend_uchar op2_type;\n121 ›   zend_uchar result_type;\n122 }\n</code></pre>\n<p>PHP 7.0 略有不同，主要区别在针对 64 位系统 uint 换成 uint32_t ，明确指定字节数。</p>\n<p>你把 opcode 当成一个计算器，只接受两个操作数(op1, op2)，执行一个操作(handler, 比如加减乘除)，然后它返回一个结果(result)给你，再稍加处理算术溢出的情况(extended_value)。</p>\n<p>Zend 的 VM 对每个 opcode 的工作方式完全相同，都有一个 handler （函数指针），指向处理函数的地址。这是一个 C 函数，包含了执行 opcode 对应的代码，使用 op1 ， op2 做为参数，执行完成后，会返回一个结果（ result ），有时也会附加一段信息（ extended_value)。</p>\n<p>用我们例子中的操作数 ZEND_JMP_SET_VAR 说明， vim Zend/zend_vm_def.h +4995</p>\n<pre><code>4942 ZEND_VM_HANDLER(158, ZEND_JMP_SET_VAR, CONST|TMP|VAR|CV, ANY)\n4943 {\n4944 ›   USE_OPLINE\n4945 ›   zend_free_op free_op1;\n4946 ›   zval *value, *ret;\n4947\n4948 ›   SAVE_OPLINE();\n4949 ›   value = GET_OP1_ZVAL_PTR(BP_VAR_R);\n4950\n4951 ›   if (i_zend_is_true(value)) {\n4952 ›   ›   if (OP1_TYPE == IS_VAR || OP1_TYPE == IS_CV) {\n4953 ›   ›   ›   Z_ADDREF_P(value);\n4954 ›   ›   ›   EX_T(opline-&gt;result.var).var.ptr = value;\n4955 ›   ›   ›   EX_T(opline-&gt;result.var).var.ptr_ptr = &amp;EX_T(opline-&gt;result.var).var.ptr;\n4956 ›   ›   } else {\n4957 ›   ›   ›   ALLOC_ZVAL(ret);\n4958 ›   ›   ›   INIT_PZVAL_COPY(ret, value);\n4959 ›   ›   ›   EX_T(opline-&gt;result.var).var.ptr = ret;\n4960 ›   ›   ›   EX_T(opline-&gt;result.var).var.ptr_ptr = &amp;EX_T(opline-&gt;result.var).var.ptr;\n4961 ›   ›   ›   if (!IS_OP1_TMP_FREE()) {\n4962 ›   ›   ›   ›   zval_copy_ctor(EX_T(opline-&gt;result.var).var.ptr);\n4963 ›   ›   ›   }\n4964 ›   ›   }\n4965 ›   ›   FREE_OP1_IF_VAR();\n4966 #if DEBUG_ZEND&gt;=2\n4967 ›   ›   printf(\"Conditional jmp to %d\\n\", opline-&gt;op2.opline_num);\n4968 #endif\n4969 ›   ›   ZEND_VM_JMP(opline-&gt;op2.jmp_addr);\n4970 ›   }\n4971\n4972 ›   FREE_OP1();\n4973 ›   CHECK_EXCEPTION();\n4974 ›   ZEND_VM_NEXT_OPCODE();\n4975 }\n</code></pre>\n<p>i_zend_is_true 来判断操作数是否为 true ，所以 ZEND_JMP_SET_VAR 是一种条件赋值，相信大家都能看明白，下面讲重点。</p>\n<p>注意<code>zend_vm_def.h</code>这并不是一个可以直接编译的 C 的头文件，只能说是一个模板，具体可编译的头为<code>zend_vm_execute.h</code>（这个文件可有 45000 多行哦），它并非手动生成，而是由<code>zend_vm_gen.php</code>这个 PHP 脚本解析<code>zend_vm_def.h</code>后生成（有意思吧，先有鸡还是先有蛋，没有 PHP 哪来的这个脚本？），猜测这个是后期产物，早期 php 版本应该不会用这个。</p>\n<p>上面 ZEND_JMP_SET_VAR 的代码，根据不同参数 <code>CONST|TMP|VAR|CV</code> 最终会生成不同类型的，但功能一致的 handler 函数：</p>\n<pre><code>static int ZEND_FASTCALL  ZEND_JMP_SET_VAR_SPEC_CONST_HANDLER(ZEND_OPCODE_HANDLER_ARGS)\nstatic int ZEND_FASTCALL  ZEND_JMP_SET_VAR_SPEC_TMP_HANDLER(ZEND_OPCODE_HANDLER_ARGS)\nstatic int ZEND_FASTCALL  ZEND_JMP_SET_VAR_SPEC_VAR_HANDLER(ZEND_OPCODE_HANDLER_ARGS)\nstatic int ZEND_FASTCALL  ZEND_JMP_SET_VAR_SPEC_CV_HANDLER(ZEND_OPCODE_HANDLER_ARGS)\n</code></pre>\n<p>这么做的目的是为了在编译期确定 handler ，提升运行期的性能。不这么做，在运行期根据参数类型选择，也可以做到，但性能不好。当然这么做有时也会生成一些垃圾代码（看似无用），不用担心， C 的编译器会进一步优化处理。</p>\n<p>zend_vm_gen.php 也可以接受一些参数，细节在 PHP 源码中的 README 文件 <code>Zend/README.ZEND_VM</code> 有详细说明。</p>\n<h2>4.</h2>\n<p>讲到这里，我们知道 opcode 怎么和 handler 对应了。但是在整体上还有一个过程，就是语法解析，解析后所有的 opcode 是怎么串联起来的呢？</p>\n<p>语法解析的细节就不说了，解析过后，会有个包含所有 opcode 的大数组（说链表可能更准确），从上面代码我们可以看到，每个 handler 执行完后，都会调用 ZEND_VM_NEXT_OPCODE()，取出下一个 opcode ，继续执行，直到最后退出，循环的代码 vim Zend/zend_vm_execute.h +337 ：</p>\n<pre><code>ZEND_API void execute_ex(zend_execute_data *execute_data TSRMLS_DC)\n{\n›   DCL_OPLINE\n›   zend_bool original_in_execution;\n\n\n\n›   original_in_execution = EG(in_execution);\n›   EG(in_execution) = 1;\n\n›   if (0) {\nzend_vm_enter:\n›   ›   execute_data = i_create_execute_data_from_op_array(EG(active_op_array), 1 TSRMLS_CC);\n›   }\n\n›   LOAD_REGS();\n›   LOAD_OPLINE();\n\n›   while (1) {\n    ›   int ret;\n#ifdef ZEND_WIN32\n›   ›   if (EG(timed_out)) {\n›   ›   ›   zend_timeout(0);\n›   ›   }\n#endif\n\n›   ›   if ((ret = OPLINE-&gt;handler(execute_data TSRMLS_CC)) &gt; 0) {\n›   ›   ›   switch (ret) {\n›   ›   ›   ›   case 1:\n›   ›   ›   ›   ›   EG(in_execution) = original_in_execution;\n›   ›   ›   ›   ›   return;\n›   ›   ›   ›   case 2:\n›   ›   ›   ›   ›   goto zend_vm_enter;\n›   ›   ›   ›   ›   break;\n›   ›   ›   ›   case 3:\n›   ›   ›   ›   ›   execute_data = EG(current_execute_data);\n›   ›   ›   ›   ›   break;\n›   ›   ›   ›   default:\n›   ›   ›   ›   ›   break;\n›   ›   ›   }\n›   ›   }\n\n›   }\n›   zend_error_noreturn(E_ERROR, \"Arrived at end of main loop which shouldn't happen\");\n}\n</code></pre>\n<p>宏定义, vim Zend/zend_execute.c +1772</p>\n<pre><code>1772 #define ZEND_VM_NEXT_OPCODE() \\\n1773 ›   CHECK_SYMBOL_TABLES() \\\n1774 ›   ZEND_VM_INC_OPCODE(); \\\n1775 ›   ZEND_VM_CONTINUE()\n\n329 #define ZEND_VM_CONTINUE()         return 0\n330 #define ZEND_VM_RETURN()           return 1\n331 #define ZEND_VM_ENTER()            return 2\n332 #define ZEND_VM_LEAVE()            return 3\n</code></pre>\n<p>while 是一个死循环，执行一个 handler 函数，除个别情况，多数 handler 函数末尾都调用 ZEND_VM_NEXT_OPCODE() -&gt; ZEND_VM_CONTINUE()， return 0 ，继续循环。</p>\n<blockquote>\n<p>注：比如 yield 协程是个例外，它会返回 1 ，直接 return 出循环。以后有机会我们再单独对 yield 做分析。</p>\n</blockquote>\n<p>希望你看完上面内容，对 PHP Zend 引擎的解析过程有个详细的了解，下面我们基于原理的分析，再简单聊聊 PHP 的优化。</p>\n<h2>5. PHP 优化注意事项</h2>\n<h3>5.1 echo 输出</h3>\n<pre><code>&lt;?php\n    $foo = 'foo';\n    $bar = 'bar';\n    echo $foo . $bar;\n</code></pre>\n<p>vld 查看 opcode ：</p>\n<pre><code>number of ops:  5\ncompiled vars:  !0 = $foo, !1 = $bar\nline     #* E I O op                           fetch          ext  return  operands\n-------------------------------------------------------------------------------------\n   2     0  E &gt;   ASSIGN                                                   !0, 'foo'\n   3     1        ASSIGN                                                   !1, 'bar'\n   4     2        CONCAT                                           ~2      !0, !1\n         3        ECHO                                                     ~2\n   5     4      &gt; RETURN                                                   1\n\nbranch: #  0; line:     2-    5; sop:     0; eop:     4; out1:  -2\npath #1: 0,\n</code></pre>\n<p>ZEND_CONCAT 连接 $a 和$b 的值，保存到临时变量~2 中，然后 echo 出来。这个过程中涉及要分配一块内存，用于临时变量，用完后还要释放，还需要调用拼接函数，执行拼接过程。</p>\n<p>如果换成这样写：</p>\n<pre><code>&lt;?php\n    $foo = 'foo';\n    $bar = 'bar';\n    echo $foo, $bar;\n</code></pre>\n<p>对应的 opcode ：</p>\n<pre><code>number of ops:  5\ncompiled vars:  !0 = $foo, !1 = $bar\nline     #* E I O op                           fetch          ext  return  operands\n-------------------------------------------------------------------------------------\n   2     0  E &gt;   ASSIGN                                                   !0, 'foo'\n   3     1        ASSIGN                                                   !1, 'bar'\n   4     2        ECHO                                                     !0\n         3        ECHO                                                     !1\n   5     4      &gt; RETURN                                                   1\n\nbranch: #  0; line:     2-    5; sop:     0; eop:     4; out1:  -2\npath #1: 0,\n</code></pre>\n<p>不需要分配内存，也不需要执行拼接函数，是不是效率更好呢！想了解拼接过程，可以根据本文讲的内容，自行查找 ZEND_CONCAT 这个 opcode 对应的 handler ，做了好多事情哦。</p>\n<h3>5.2 define()和 const</h3>\n<p>const 关键字是从 5.3 开始引入的，和 define 有很大差别，和 C 语言的<code>#define</code>倒是含义差不多。</p>\n<ul>\n<li>define() 是函数调用，有函数调用开销。</li>\n<li>const 是关键字，直接生成 opcode ，属于编译期能确定的，不需要动态在执行期分配。</li>\n</ul>\n<p>const 的值是死的，运行时不可以改变，所以说类似 C 语言的 #define ，属于编译期间就确定的内容，而且对数值类型有限制。</p>\n<p>直接看代码，对比 opcode ：</p>\n<p>define 例子：</p>\n<pre><code>&lt;?php\n    define('FOO', 'foo');\n    echo FOO;\n</code></pre>\n<p>define opcode:</p>\n<pre><code>number of ops:  6\ncompiled vars:  none\nline     #* E I O op                           fetch          ext  return  operands\n-------------------------------------------------------------------------------------\n   2     0  E &gt;   SEND_VAL                                                 'FOO'\n         1        SEND_VAL                                                 'foo'\n         2        DO_FCALL                                      2          'define'\n   3     3        FETCH_CONSTANT                                   ~1      'FOO'\n         4        ECHO                                                     ~1\n   4     5      &gt; RETURN                                                   1\n</code></pre>\n<p>const 例子:</p>\n<pre><code>&lt;?php\n    const FOO = 'foo';\n    echo FOO;\n</code></pre>\n<p>const opcode:</p>\n<pre><code>number of ops:  4\ncompiled vars:  none\nline     #* E I O op                           fetch          ext  return  operands\n-------------------------------------------------------------------------------------\n   2     0  E &gt;   DECLARE_CONST                                            'FOO', 'foo'\n   3     1        FETCH_CONSTANT                                   ~0      'FOO'\n         2        ECHO                                                     ~0\n   4     3      &gt; RETURN                                                   1\n</code></pre>\n<h3>5.3 动态函数的代价</h3>\n<pre><code>&lt;?php\n    function foo() { }\n    foo();\n</code></pre>\n<p>对应 opcode ：</p>\n<pre><code>number of ops:  3\ncompiled vars:  none\nline     #* E I O op                           fetch          ext  return  operands\n-------------------------------------------------------------------------------------\n   2     0  E &gt;   NOP\n   3     1        DO_FCALL                                      0          'foo'\n   4     2      &gt; RETURN                                                   1\n</code></pre>\n<p>动态调用的代码：</p>\n<pre><code>&lt;?php\n    function foo() { }\n    $a = 'foo';\n    $a();\n</code></pre>\n<p>opcode:</p>\n<pre><code>number of ops:  5\ncompiled vars:  !0 = $a\nline     #* E I O op                           fetch          ext  return  operands\n-------------------------------------------------------------------------------------\n   2     0  E &gt;   NOP\n   3     1        ASSIGN                                                   !0, 'foo'\n   4     2        INIT_FCALL_BY_NAME                                       !0\n         3        DO_FCALL_BY_NAME                              0\n   5     4      &gt; RETURN                                                   1\n</code></pre>\n<p>可以 vim Zend/zend_vm_def.h +2630 ，看看 INIT_FCALL_BY_NAME 做的事情，代码太长，这里不列出来了。动态特性虽然方便，但一定会牺牲性能，所以使用前要平衡利弊。</p>\n<h3>5.4 类的延迟声明的代价</h3>\n<p>还是先看代码：</p>\n<pre><code>&lt;?php\n    class Bar { }\n    class Foo extends Bar { }\n</code></pre>\n<p>对应 opcode ：</p>\n<pre><code>number of ops:  4\ncompiled vars:  none\nline     #* E I O op                           fetch          ext  return  operands\n-------------------------------------------------------------------------------------\n   2     0  E &gt;   NOP\n   3     1        NOP\n         2        NOP\n   4     3      &gt; RETURN                                                   1\n</code></pre>\n<p>调换声明顺序：</p>\n<pre><code>&lt;?php\n    class Foo extends Bar { }\n    class Bar { }\n</code></pre>\n<p>对应 opcode ：</p>\n<pre><code>number of ops:  4\ncompiled vars:  none\nline     #* E I O op                           fetch          ext  return  operands\n-------------------------------------------------------------------------------------\n   2     0  E &gt;   FETCH_CLASS                                   0  :0      'Bar'\n         1        DECLARE_INHERITED_CLASS                                  '%00foo%2FUsers%2Fqisen%2Ftmp%2Fvld.php0x103d58020', 'foo'\n   3     2        NOP\n   4     3      &gt; RETURN                                                   1\n</code></pre>\n<p>如果在强语言中，后面的写法会产生编译错误，但 PHP 这种动态语言，会把类的声明推迟到运行时，如果你不注意，就很可能踩到这个雷。</p>\n<p>所以在我们了解 Zend VM 原理后，就更应该注意少用动态特性，可有可无的时候，就一定不要用。</p>\n<p>转自： <a href=\"http://www.yinqisen.cn/blog-723.html\" rel=\"nofollow\">http://www.yinqisen.cn/blog-723.html</a></p>\n</div></div>"], "reply": "8", "tittle": "从 PHP 语法糖剖析 Zend VM 引擎", "comment": ["感谢分享", "吊吊吊", "感谢分享", "666", "正好是我要看的!  先马", "战略性 mark", "mark", "厉害了我的哥"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>根据 微信小程序平台运营规范</p>\n<p>一.</p>\n<blockquote>\n<p>1.3 你所提交的微信小程序，不得关联至你不具有完整合法权益或不具备完整授权的网站、应用程序、产品或服务等。</p>\n</blockquote>\n<p>这一条基本上封死了使用接口做一个豆瓣， v2ex, 知乎的小客户端的可能性，审核通过不了。</p>\n<p>二.</p>\n<blockquote>\n<p>3.4 微信小程序的服务范围需与实际填写的类目和标签一致，也需和自身所提供的服务一致，且不应超出小程序平台&gt;的类目库范围。如游戏、直播、虚拟物品购买功能等均尚未开放。\n3.8 微信小程序功能的使用，不应依赖于其他微信小程序，即不得以添加关注或使用其他微信小程序为条件；未经允许或未经腾讯公司授权的情况下，也不得展示或者推荐其他微信小程序。</p>\n</blockquote>\n<p>封死了不知道多少盈利点</p>\n<p>三.</p>\n<blockquote>\n<p>10.2 数据使用\n10.2.1 不允许向微信小程序其他用户或任何第三方显示用户微信号、名称、 QQ 、手机号、电子邮箱地址和出生日期等信息。</p>\n</blockquote>\n<blockquote>\n<p>10.2.2 不允许将用户微信号、名称、 QQ 、手机号、电子邮箱地址和出生日期等信息用于任何未经用户及微信平台授权的用途。</p>\n</blockquote>\n<blockquote>\n<p>10.2.3 不允许进行反射查找、跟踪、关联、挖掘、获取或利用用户微信号、名称、 QQ 、手机号、电子邮箱地址和出生日期等信息从事与微信小程序所公示身份无关的行为。</p>\n</blockquote>\n<p>别想在微信里再搞一个小内部群了</p>\n</div></div>", "<div class=\"topic_content\">很好奇 V 站上有没有微信负责小程序的 PM, 给大家来点干货</div>"], "reply": "22", "tittle": "小程序公测啦，有这么几点需要注意", "comment": ["你的分析不错，能转一下吧\r", "\r", "限制的比苹果还严格", "再加上只支持企业,政府,媒体,暂不支持个人注册，封死了大部分程序员", " 随便转。。。", " 是的，我还是用的已经倒闭的企业信息注册的。。哈哈哈", " 🐂。\r", "\r", "希望阿里能发布一个类似平台，让天下没有难发布的小程序。", "个人好像还不能注册小程序啊", " 腾讯云啊，腾讯云早就出了怎么把小程序部署到腾讯云", " 没法注册，而且之前注册过 服务号 和 订阅号的邮箱也不能注册", "多谢梳理总结, 这样确实限制了好多散户入场, 不过前期可能也会为腾讯节省很多人工审核的工作量 :)", "这个限制很好\r", "张小龙在微信这块还是很良心的\r", "没过多的想钱(相比 QQ)，还是比较重用户的", "它想做一个方便对接线下的服务性平台，如果开了那些权限，基本就成本一个导流平台或者娱乐平台了。", " 宁缺勿烂的做事风格", " 不用手机 QQ 好多年", " 是的，小游戏也给限制了，不让上线。", " 我怎么感觉现在的东西是真的应该用小程序的(不能盈利 公益服务) 说明这定位非常清晰啊", "游戏不让做，直播不让做，原因是什么呢？", " \r", "\r", "个人觉得有这么几个可能性：\r", "\r", "首先来讲，小程序定位问题，定位是一些功能型的服务程序，更大一部分上是释放服务号的能力。 游戏和直播就跑偏了。\r", "\r", "其次， 游戏和直播或多或少都会将微信用户聚集成一个小团体，根据第三条，这是微信不愿意看到的。\r", "\r", "最后，猜想哈，苹果还能让微信在 app store 上线，两家大公司肯定进行过协商，限定了 app 的类型。", "那小程序的入口是什么？？\r", "\r", "\r", "\r", "这类微信小程序导航网站出现： \r", "\r", " 入口现在还不清楚", "受楼上鼓励，我也大言不惭宣传一下：讨论小程序技术可到这里： ", "所以在企业没有绝对控制权的情况下，你们谁都别想整什么幺蛾子", " \r", "\r", "在订阅号里看到的，现在的入口有三个， 一个是朋友发过来的， 第二个是扫码，第三个是小程序搜索。\r", "\r", "小程序是不允许发布到朋友圈的！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>想从 Ubuntu 回到 Windows 。今天 Ubuntu 升级后， mysql 无缘无故跑不起来，花了两个多小时解决，都耽误正常干活了。不想再花时间去折腾了。</p>\n<p>如果大学时候的我，一定会花时间解决，但现在参加工作了，越来越觉得时间有限，不应该浪费在处理这些事情上。</p>\n<p>大概有三年没用过 Windows 了， Win10 在 2016 年 8 月 3 日凌晨发布新版本都不知道。。。汗。。</p>\n<p>总觉得 Win 的安全性没 Ubuntu 好，也许是 sudo 用习惯吧，哈哈。。</p>\n<p>现在 Win 下还有哪些靠谱的安全软件呢？</p>\n</div></div>", "<div class=\"topic_content\">感谢各位 V 友。系统自带的 Defender 和火绒，还有 comodo 都各试用了一下。\r<br>\r<br>最后选择了 Defender 。\r<br>\r<br>试用情况如下：\r<br>\r<br>comodo 防护能力是最强的，但规则配置起来麻烦。我也没有那么变态的安全需求。\r<br>\r<br>火绒给我的印象也很不错，没有加速球那些东西，也不会有开机速度打败了百分之好多用户的弹窗，也不会没事弹个窗口耍存在感。感觉很良心，感觉是真正在用心做安全软件，而不是绑架用户。相比 windows defender ，多了捆绑软件和后台自安装检测，可以防止全家桶。\r<br>\r<br>后来结合了下自己的情况，选择了最轻量级的 Windows defender 。搭配系统自带的防火墙，再加上虚拟机应该够了。</div>"], "reply": "104", "tittle": "现在 Win 下还有哪些靠谱的安全软件？", "comment": ["自己的组合： onedns+诺顿\r", "前者基本能把国内大部分虚假下载链接和乱七八糟的牛皮藓广告滤掉。后者稳定性极佳，极流畅，拥有全球最多的病毒传感器。", " 不算優越感，至少算跑題吧", " {{93L}}: WOT 是指 Web of Trust 麼？ Chrome 插件好像下架了，現在只有安卓了？", " 我刚发完贴就出了问题： ", " ，找下其他的替代吧，杀毒软件做的那些应该也还凑合。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>作者：<a href=\"https://github.com/hanzichi\" rel=\"nofollow\">韩子迟</a></p>\n<h1>What?</h1>\n<p>不知不觉间，「 Underscore 源码解读系列」进入了真正的尾声，也请允许我最后一次 po 下项目的原始地址 <a href=\"https://github.com/hanzichi/underscore-analysis\" rel=\"nofollow\">https://github.com/hanzichi/underscore-analysis</a></p>\n<p>这半年以来，花费了大量的业余时间，共计写了 25 篇随笔（包括此文），也给 <a href=\"https://github.com/hanzichi/underscore-analysis/blob/master/underscore-1.8.3.js/src/underscore-1.8.3.js\" rel=\"nofollow\">underscore-1.8.3</a>  的源码加了差不多 1500 行 <a href=\"https://github.com/hanzichi/underscore-analysis/blob/master/underscore-1.8.3.js/underscore-1.8.3-analysis.js\" rel=\"nofollow\">注释</a>，对于当初说的要做「史上最详细的 underscore 源码剖析」，至此我也觉得问心无愧。</p>\n<p>本文不想说我在这个过程中学到了什么，学到的东西，能写的都在前面 24 篇随笔中了，只能意会的我也说不出来（感触最深的是闭包的强大）。本文是一篇「水文」，不谈技术，抛开代码，听楼主扯扯淡。</p>\n<h1>Why Underscore?</h1>\n<p>早期的几篇随笔都有「 Why Underscore 」这一节：</p>\n<blockquote>\n<p>阅读一些著名框架类库的源码，就好像和一个个大师对话，你会学到很多。为什么是 Underscore ？最主要的原因是 Underscore 简短精悍（约 1.5k 行），封装了 100 多个有用的方法，耦合度低，非常适合逐个方法阅读，适合楼主这样的 JavaScript 初学者。从中，你不仅可以学到用 void 0 代替 undefined 避免 undefined 被重写等一些小技巧 ，也可以学到变量类型判断、函数节流&amp;函数去抖等常用的方法，还可以学到很多浏览器兼容的 hack ，更可以学到作者的整体设计思路以及 API 设计的原理。</p>\n</blockquote>\n<p>其实这并不是直接原因，「导火索」是当时（三月末）学习函数节流和函数去抖的时候，发现很多文章混淆了这两个概念，了解到 Underscore 封装了这两个函数，但是一用却发现了它的 BUG ！（详见  <a href=\"http://www.cnblogs.com/zichi/p/5331426.html\" rel=\"nofollow\">一次发现 underscore 源码 bug 的经历以及对学术界『拿来主义』的思考</a> 一文）</p>\n<p>Underscore 早些年就接触过，对其的了解也仅限于「一个轻巧的工具库」，会不会还有其他的 BUG ？同时源码这么短（之前想过看 jQuery ，被接近 1w 行吓回来了），耦合度低（可以一个个方法分开看），也进一步激发了通篇解读的兴趣，想着这一路下来肯定能学到不少东西。好东西要与大家分享，同时确定了写系列文章的 idea 。</p>\n<h1>Where to write?</h1>\n<p>哪里写？想都没想就确定了主战场 GitHub 。之前我是不玩 GitHub 的，现在已经离不开了，每天不刷个几十次都手痒。为什么确定在 GitHub ？理由很简单， GitHub 有逼格啊（毕竟是全球最大的同性交友社区）。</p>\n<p>当然，酒香也怕巷子深，写完了没人看无疑是对自信心的极大打击，同时也需要大家来提出宝贵的意见。为此，几乎每一篇完成后，都会在以下渠道分享：</p>\n<ul>\n<li><a href=\"https://toutiao.io/u/220194\" rel=\"nofollow\">开发者头条</a></li>\n<li><a href=\"http://gold.xitu.io/\" rel=\"nofollow\">掘金</a></li>\n<li><a href=\"https://segmentfault.com/news\" rel=\"nofollow\">segmentfault 头条</a></li>\n<li>~~<a href=\"http://geek.csdn.net/\" rel=\"nofollow\">极客头条</a>~~</li>\n<li>~~<a href=\"http://gank.io/\" rel=\"nofollow\">干货集中营</a>~~</li>\n</ul>\n<p>其实主要就是前三个，后面两个用了一段时间感觉不大好就不用了。极客头条个人感觉分类有点乱，同时因为是 CSDN 旗下的，个人对 CSDN 没太多好感；干货集中营的话，维护者是「 daimajia 」大大，感觉移动开发者关注的会比较多。</p>\n<p>分享的话，如果脸皮厚的话，也可以在微博艾特一些圈内大大们（楼主脸皮比较薄 ...）。</p>\n<p>当然，我不仅在 GitHub 的 issue 里写，还在以下一些渠道写：</p>\n<ul>\n<li><a href=\"http://www.cnblogs.com/zichi/\" rel=\"nofollow\">博客园</a></li>\n<li><a href=\"https://segmentfault.com/blog/hanzichi\" rel=\"nofollow\">segmentfault</a></li>\n<li><a href=\"http://www.jobbole.com/\" rel=\"nofollow\">伯乐在线</a></li>\n<li>~~<a href=\"http://www.jianshu.com/users/1c3f724c5fc8/latest_articles\" rel=\"nofollow\">简书</a>~~</li>\n</ul>\n<p>简书的话，后面断断续续不更了，个人喜欢专门的 IT 类博客，而且觉得简书的 Markdown 渲染有问题，为什么都说它的 Markdown 体验好 ... sf 和 伯乐在线 的话，阅读量还是可以的，只是它们不是专门做博客系统的，基础的分类归档功能都没有（或许是我没找到？），以后应该还是会以博客园为主要战场。</p>\n<h1>Then?</h1>\n<p>underscore.js 的源码解读画上了句号，接下去干嘛？其实楼主对以下几个库也挺感兴趣的。</p>\n<ul>\n<li><a href=\"https://github.com/lodash/lodash\" rel=\"nofollow\">lodash</a>（ Underscore 的完美替代品，据说效率比 Underscore 高好多）</li>\n<li><a href=\"http://epeli.github.io/underscore.string/\" rel=\"nofollow\">underscore.string</a>（ Underscore.js 没有为 String 扩展方法）</li>\n<li><a href=\"https://github.com/documentcloud/underscore-contrib\" rel=\"nofollow\">underscore-contrib</a>（ Underscore-contrib 是一个 Underscore 的代码贡献库）</li>\n<li><a href=\"https://github.com/brianhaveri/Underscore.php\" rel=\"nofollow\">Underscore.php</a> / <a href=\"http://brianhaveri.github.io/Underscore.php/\" rel=\"nofollow\">API</a></li>\n<li><a href=\"https://github.com/bdelespierre/underscore.php\" rel=\"nofollow\">underscore.php</a>（<a href=\"http://underscorejs.org/\" rel=\"nofollow\">Underscore.js 官网</a> 推荐）</li>\n</ul>\n<h1>End</h1>\n<p>那就这样吧，<strong>749 Star / 140 Watch / 153 Fork</strong> 算是对我的肯定和鼓励吧 ^_^</p>\n<p>也许我韩子迟还会回来的！</p>\n</div></div>"], "reply": "27", "tittle": "源码解读这半年", "comment": ["V 站的 markdown 不支持删除线啊 ..", "为你的坚持和努力点个赞", "大学毕业， 工作的第一家公司培训内容之一就是一周把 underscore 源码读完， 读完后， 然并卵， 再也没用过 js", " 一周 .. 厉害，我花了整整半年 ..", " 当然不如你理解的深刻哈", "当年最喜欢的头像。。。楼主加油", " 谢谢~", "感谢，给了我灵感。也去找个源码来写一写好了", "表示正在看 guava, 真的只是看而已...", "赞！向楼主学习", "读书时，坚持看了一年多 linux 内核，翻译了好多文档.....工作后却没那个激情了", "赞，正好最近有了解 js 的冲动", "感谢楼主分享，能坚持这么久真是太不易了。相楼主学习", " 有激情也很少有时间了，琐事一堆 ..", " 向大神学习！离大神还很远", "同解读 underscore 源码半个月，学到不少东西", "为 lz 的细致和坚持点赞", "(=ﾟωﾟ)=b", "已 star ， 楼主干了件了不起的事情", "给我了一些启发\r", "\r", "我也要读读源码,写个系列文章了", " 加油！", " 过奖了~", "以前 star 了，赞个", " 感谢支持~", "膝盖献给大神。", " 过奖了，惭愧 ..", " 我 follow 了您，感觉对我很有帮助。做 leetcode 的时候有看您的解法。菜鸟入门中。 QAQ"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>很久以前在 GitHub 上见到过一个工具：</p>\n<blockquote>\n<p>国人用 node.js 写的，从 URL 读取网页，并将其导出为 PDF</p>\n</blockquote>\n<p>当初觉得自己记性好，也没 star ，结果现在只剩零星记忆，名字怎么都想不到了。</p>\n<p>V 友们请放出神通，帮我这妖怪一把吧。它的特点是这样的：</p>\n<ul>\n<li>命令行工具，形式如： <code>SHELL&gt; command url</code></li>\n<li>呃…… 什么都记不得了。</li>\n</ul>\n<p>（事后可分一半 V 站资产，认真脸）</p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://github.com/fraserxu/electron-pdf\" rel=\"nofollow\">electron-pdf</a>  （看帖的就不用再翻回复了）</p>\n</div></div>"], "reply": "10", "tittle": "求助：寻找一个国人用 node.js 写的工具 —— 将网页导出为 PDF", "comment": ["这个？\r", "Html to pdf converter in nodejs. \r", "\r", "One more: ", "headlessbrowser   ,phantomjs  有 nodejs 的绑定  单独命令行调用也行", "其实最好用的应该是 wkhtmltopdf ，这个并不是 node 写的，但是 node 可以调用： ", " 恰巧前段时间做过这个。。。\r", "\r", "有一个坑是，转换机的字体里必须包含至少一个各国语言基础字体，不然转换某些字会变成矩形框，所以字体装的越多越好。。。", "wkhtmltopdf 的核心是 WebKit 浏览器，所以网页上包含的字体你机器的有才能正常输出", " mkhtmltopdf 有个坑点（不过主要是对于发行版打包者来说的）：迟迟不迁移到 QWebEngine ，内置的老版本 QWebView (WebKit) 还带魔改…", "是 @", " 说的这个，谢谢。\r", "\r", "另外，再感谢 @", " @", " @", " @", " ，感谢币已发出。", " 千万不要用 wkhtmltopdf ！！这货坑出 shi 来了，内存泄露横跨所有版本，不限制内存的话经常系统直接被这个拖挂\r", "\r", "有个东西叫 phantomjs ，有个东西叫`reaterize.js`\r", "\r", "代码见 ", " thanks"]},
{"content": ["<div class=\"topic_content\">Tower 项目建立好，之后再邀请的人（比如老罗）加入团队后\r<br>\r<br>创建讨论的时候无法在通知列表里勾选老罗这个人，下方列表里没有这个人名\r<br>\r<br>我唯一想到的解决办法是：删掉项目，重新创建项目，然后再在新项目里创建讨论，这显然是不可能的。\r<br>\r<br>麻烦问下这个问题怎么解决？ Tower 的同学在的话可以解答下啊。。。。</div>"], "reply": "8", "tittle": "有没有 Tower 的同学在，反馈个 bug", "comment": ["帮你 @", " @", " @", " 呃他们好多都是发个招聘就不见了", "@全球工单系统", "  谢了啊，这个问题存在有一段时间了", "你把人拉进项目了吗？", "  在人员管理里可以看到已经给这个人开放了所有的项目", "更新：目前看到的情况是拉人进入团队后，默认权限开放所有项目，在具体的项目里移除这个人然后再添加，刚才可以在通知列表里看到这个人了，注意是：隔了很久，不是即时的。因为我刚用同样的办法测试了另一个人，目前还是不能勾选的状态。\r", "\r", "所以，这个 BUG 还希望尽快修复，非常影响使用体验", "估计是缓存的问题，一会检查下。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>楼主在找工作，虽然技术不是很强，但还是要继续堆代码，比如先写个 BLOG 看看？</p>\n</div></div>"], "reply": "2", "tittle": "用 Django 和 Vue 写一个博客需要准备哪些？", "comment": ["只需要在 Github 搜一个完成度高，注释清晰的😂\r", "讲道理，不是特别熟练的框架，最好不要一个人苦干，一折腾就是好几周，急着找工作不划算。", "hao"]},
{"content": "", "reply": "26", "tittle": "本科生毕业前有哪几个领域的项目/科研/论文，对留学申请比较有帮助？", "comment": ["GPA 才是最重要的", "最好发的 AI 领域的吧，不过也是要投入时间的。", "GPA\r", "导师推荐信，最好在是跟你想要申请导师认识的\r", "科研就做你感兴趣的吧，都考虑科研和论文了，应该是申请博士了，博士的研究方向不感兴趣会很痛苦", "硕：本科学校档次、 GPA 、 G 、 T", " \r", "AI 领域最好发，你在开玩笑？\r", "\r", "AI 也不是个正经领域\r", "AI 在论文里面的正经领域：\r", "图像\r", "计算语言学\r", "..\r", "\r", "哪个好发？\r", "\r", "好发的还是体系结构最好发", " \r", "体系结构好发， are you kidding me ？\r", "\r", "AI 领域：\r", "CVPR '15, 602/2123, 28% acceptence\r", "ICCV '15, 525/1698, 31% acceptence\r", "NIPS '15, 403/1838, 22% acceptence\r", "\r", "体系结构：\r", "ASPLOS'15, 48/287, 17% accpetance\r", "MICRO46, 39/239, 16% accpetance\r", "ISCA 2012, 47/262, 18% acceptance\r", "\r", "你告诉我哪个好发？", "没懂你的意思，你有 AI 的 paper ，如果你申请 system 方向的 PhD ，不是毛用没有么……\r", "你要是想申请 System 方向，自然是 system 方向的会议 paper 最有用……", "本科生写啥论文，托福 GPA 和 GRE 全满分才是王道", "GPA GRE 托福", "我们实验室有个本科生发了 siggraph ，去了 MIT 。。。", "你在 V 站问留学申请也是逗啊", "另外不说清楚硕士还是博士更逗啊...", "硕士： 0.5 * GPA + 0.25 * GRE + 0.25 * TOFEL\r", "博士： 0.8 * 推荐信 + 0.1 * paper + 0.1 * 以上的\r", "\r", "大概是这么个意思", "硕士还是博士你倒是说清楚啊， 这和问问题不贴 code 不是一个样子啊，我们怎么知道你到底在说啥啊", " 你自己看看 AI 多少水会，体系结构 ISCA MICRO 哪个是好发的？", " AI 领域水会多了野了，算上那些更加水..", " AI 水会多可是人家认么\r", "体系结构只有 CS 的人发\r", "AI 的会议有数学的统计的茫茫多其他专业的跟你争，理论根本争不过人家好么。", "现在 CV 也都算 AI 里了？ CVPR ， ECCV ， ICCV 这不是 CV 的三大会嘛", " 现在 AI 下辖 ML, CV, NLP, Robotics 一堆领域。", " 第一，你看看体系结构传统的四大顶会 ASPLOS MICRO ISCA HPCA 加起来一年收多少文章？你在看看 AI 里面的顶会 AAAI 或者 IJCAI 单个一年收多少文章？  第二，你去了解一下体系结构顶会里面一篇文章的工作量    然后再来说说体系结构 /AI 哪个好灌水？  或者更直观的，你直接看看体系结构和 AI 的顶会每年国内的高校 /研究所能中几篇？", "不要跑偏了去讨论哪个领域好发文章，问题是你好发，大家都好发，你的竞争对手也好发，没有乱用，不是么？", "LS 说的对，没有捷径，顶会很难发，经常录取率不到 10%，水会对申请估计帮助不大...", " 我们只是在说*发论文* 这件事，你非要说什么 CVPR best paper 和 ISCA best paper 那个好发那我显然没话说。", " 非要觉得 AI 好发你就这么想吧，同实验室同学 AI 的 paper 也是 reject 无数， AI 的审稿人很多学数学的，看你 paper 没有那么详实的数学功底就来气。\r", "\r", "还是那句话，别拿 AI 当纯计算机领域，这个领域刷 paper ，数学，统计都比计算机厉害很多。你不能拿 paper 数量来看。体系结构除了 CS 里研究体系结构的人还谁发？", "找美帝 top4 里面 ai/ml 方向的 phd 和 architecture 方向的 phd 和教授发的论文数量对比一下不就知道哪个容易发了。就算在中国，像中山大学和华科这个层次的学校都有组发过 sigkdd 和 cvpr 之类会议的论文，而体系结构的除了清华和上交好像没其他学校有能力发顶会的吧？", " 那你自己辩上面的统计去吧"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>有办法查出来怎么回事吗</p>\n</div></div>"], "reply": "5", "tittle": "服务器开了个 polipo 代理，进程莫名消失", "comment": ["嗯，的确是莫名其妙。\r", "呃，我说的是提问……", " 就是服务器起了个 polipo 代理，然后运行一到两天，那个进程就不见了，没人手动 kill\r", "\r", "现在就是想知道哪里有日志能看到是什么情况   或者可能的原因有哪些", "内存是否很小？看看 dmesg", "polipo 挺不稳定的，换 provixy 试试", " 感谢  dmesg 上面显示 segfault"]},
{"content": "", "reply": "1", "tittle": "求推荐几个开源的轻量级的日志系统 QAQ", "comment": ["goaccess"]},
{"content": ["<div class=\"topic_content\">用 <a target=\"_blank\" href=\"http://vb.net\" rel=\"nofollow\">vb.net</a> 写了几个事件，另外写了一个发送请求的过程。如何实现用户在打卡机上验证完成后，先触发事件，再调用发送请求的过程，将用户信息发送到 java 的 controller 中的一个方法上去？求大神解答，多谢！！！</div>"], "reply": "目前尚无回", "tittle": "考勤机二次开发 ", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>之前在使用 Visual Studio 2015 community ，发现速度太慢了。</p>\n<p>现在想用 Visual Studio Code ，搜索了很多，看到配置 C/C++环境都要去安装 MinGW/Cygwin 。</p>\n<p>我在想能不能直接调用 Visual Studio 2015 的编译调试环境，具体该怎么配置，求解！</p>\n</div></div>"], "reply": "8", "tittle": "请问如何配置 Visual Studio Code 编辑器 C/C++开发环境", "comment": ["官方有个插件，能调试，不过自动提示不太好。\r", " 这些都明白，我现在用 Visual Studio Code 都是写好了，然后用 VS2015 开发人员命令提示→cd 到 xxxx.c 的目录→cl xxxx.c ，我就是想明白怎么才能直接调用，毕竟已经安装了 VS2015 了，不想装 GCC 。不行就暂时手动 cl 把。\r", "还是感谢您！", " 已经安装，就是不知道怎么配置 launch.json 才能调用 Visual Studio 2015 的环境.", " vc 编译器的东西的调试 gdb 不支持, 命令行的话只支持 cdb. 但是这个那个扩展没支持..\r", "\r", "不过你还是不要折腾了.. 浪费时间, 自己电脑有最好的 ide vs2015..", " VS2015 确实是最好的，就是每次做编程练习题的时候，需要一次次创建项目 然后添加源文件，有点慢。 总之，非常感谢", "配置 launch.json ， ", "\r", "我没实施过。", " 之前看过一次，最后我放弃了，还是用 VS2015 了。\r", "感谢!"]},
{"content": ["<div class=\"topic_content\">旅游公司，拿了投资，不差钱。。。南欧线下业务第一，现在想做一个好点的旅游网站，公司目前开发力量不够，想找个靠谱的外包， Google/Baidu 了一些，联系了下感觉不怎么靠谱的。 \r<br>\r<br>在上海的老司机有没有推荐几个，靠谱的送一年 EXPRESS VP./N HHKB</div>"], "reply": "4", "tittle": "求大家推荐个上海杭州周边的开发", "comment": ["加我私聊", " 额 有微信 QQ 邮箱 Skype 么 V2EX 好像没有私信", " 34648384 qq", "微信 walterwan1990 私聊"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>前几天 MP4ba 和迅播都打不开了，差不多应该是被和谐了！这是继快播、蓝影网、 bt 天堂等之后，又被叫停的视频站。</p>\n<p>现在还有心做资源站的需要好好思考下了。</p>\n<p>bt 被严打，可想而知那些 bt 种子站的未来是什么样子，还有些百度网盘站，寄生于百度。只能看百度的态度。</p>\n<p>如今网盘界已经是一枝独秀了，百度网盘关掉的几率不大但必定会采取措施（加大打击力度），那大家觉得百度会怎么做呢？？？</p>\n</div></div>"], "reply": "11", "tittle": "现在 IT 界风起云涌，论盗版对互联网的冲击到底有多大？？", "comment": ["别说了 我想静静", "本人从来不用那些东东，用网盘用习惯了...\r", "\r", "去转盘网:http://www.quzhuanpan.com/\r", "\r", "西林街： ", "\r", "\r", "找文件： ", "\r", "\r", "EV 搜索： ", "\r", "\r", "胖次： ", "\r", "\r", "呆木瓜： ", "\r", "\r", "爱挖盘： ", "\r", "\r", "盘搜 ", "\r", "\r", "壹搜 ", "\r", "\r", "盘易搜 ", "\r", "\r", "网盘搜 ", "\r", "\r", "盘搜 cc ", "\r", "\r", "盘搜易 ", "\r", "\r", "吸盘搜 ", "\r", "\r", "网盘屋 ", "\r", "\r", "bd 盘搜索 ", "我猜猜，可能知名度会小很多了。", " 在加几个,够了。。。\r", "去转盘 [", " ", ")\r", "\r", "百度云搜索 [", " ", ")\r", "\r", "百度盘搜索 ", "\r", "\r", "数据村搜索 ", "\r", "\r", "57 搜 ", "\r", "\r", "56 盘 ", "\r", "\r", "5p44 网盘搜 ", "\r", "\r", "搜百度网盘 ", "\r", "\r", "百度云搜索 ", "\r", "\r", "电影盘 ", "\r", "\r", "章鱼搜索 ", "\r", "\r", "网盘搜搜 ", "是否用盗版的根本原因是收入水平，跟是否有某些软件 /网站没关系", " 收入水平 /闲钱占净收入的比例，也只是一个方面...合法资源的获取难易程度也是很大一方面。\r", "\r", "毕竟有不少资源，有钱在国内正规渠道也难买。", "最近 LOL 也上不去了", "迅雷和迅雷会员使得 BT 在中国变成了一种链接而不是分享方式，现在一旦百度网盘和迅雷倒下，可以想见以后资源分享将变得多么困难。记得常用自己的服务器给字幕组们免费分流，一个非常有趣的现象， BIG5 也就是繁体的种子往往留种的非常的多，而 GB 也就是简体的种子往往很快就断种，大陆这边除了教育网可以说 P2P 分享已死。", "盗版资源存在的原因可能有多个\r", "一个就是经济问题\r", "二个就是性价比问题\r", "三个可能就是想尝试一下或者试用一下", " 你说的这个，只有在所有的人都承认，买正版理所应当，用盗版天理难容的基础上，才成立。\r", "但很明显，对于我国的绝大多数人来说，这个认知前提根本不存在。他们根本不认为用盗版有哪怕一丁点恶，甚至有的人还怀揣着劫富济贫的正义感。对于这些人来说，他们收入再多，也不会因此为正版掏一分钱。只有当真的盗版的入手难度或者体验比正版要差出太多的时候，他们才会出于功利主义，而购买正版。", "钓鱼贴，目测之前上面的网站很快就上不了了 ： doge ："]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>1.面向过程（结构化程序设计）</p>\n<p>采用自顶向下、分而治之的方法，将整个程序按功能划分为几个可独立编程的子过程模块，每一子模块完成指定的子任务，主过程通过调用各子过程完来成全部处理工作 。</p>\n<p>2.面向对象的程序设计（ Object-Oriented Programming ）</p>\n<p>面向对象的程序设计方法强调直接以现实世界中的物体为中心来思考和认识问题，并按照这些事物的本质特征把它们抽象为类。采用数据抽象和数据隐藏，类之间互相交互，共同构成大型的面向对象基础。</p>\n<p>3.面向对象的相关概念</p>\n<p>1 ）类（ Class ）：具有相似属性和行为的一组对象，就称为类。可见，有了类的概念以后，就可以对具有共同特征的事物进行统一描述；</p>\n<p>2 ）对象（ Object ）：类的实例，每个对象都具有属性和方法这两方面的特征。对象的属性描述了对象的状态和特征，对象的方法说明了对象的行为和功能，并且对象的属性值只应由这个对象的方法来读取和修改，两者结合在一起就构成了对象的完整描述。；</p>\n<p>3 ）封装（ Encapsulation ）：封装把对象的属性和方法看成了一个密不可分的整体，从而使对象能够完整地描述并对应于一个具体事物 ；</p>\n<p>4 ）继承（ Inheritance ）：在面向对象的程序设计中，允许在已有类的基础上通过增加新特征而派生出新的类，这称为继承。其原有的类称为基类（ base class ），而新建立的类称为派生类(derived class)；</p>\n<p>5 ）消息（ Message ）：当一个对象需要另外一个对象提供服务时，它向对方发出一个服务请求，而收到请求的对象会响应这个请求并完成指定的服务。这种向对象发出的服务请求就称为消息。所谓消息就是调用一个对象所提供的方法；</p>\n<p>6 ）多态性（ Polymorphism ）：多态性是面向对象的一个重要特征。多态有两种，静态的和动态的。在通过继承而派生出的一系列类中，可能存在一些名称相同，但实现过程和功能不同的方法（ Method ）。 当程序中的其他部分发出同样的消息时，按照接收消息对象的不同能够自动执行类中相应的方法。其好处是，用户不必知道某个对象所属的类就可以执行多态行为，从而为程序设计带来更大方便。</p>\n<p>4.面向对象编程的特点</p>\n<p>1 ） OOP 以“对象”或“数据”为中心。由于对象自然地反映了应用领域的模块性，因此具有相对稳定性，可以被用作一个组件去构成更复杂的应用，又由于对象一般封装的是某一实际需求的各种成分，因此，某一对象的改变对整个系统几乎没有影响；</p>\n<p>2 ）引入了“类”（ class ）的概念。类与类以层次结构组织，属于某个类的对象除具有该类所描述的特性外，还具有层次结构中该类上层所有类描述的全部性质， OOP 中称这种机制为继承；</p>\n<p>3 ） OOP 方法的模块性与继承性，保证了新的应用程序设计可在原有对象的数据类型和功能的基础上通过重用、扩展和细化来进行，而不必从头做起或复制原有代码，这样，大大减少了重新编写新代码的工作量，同时降低了程序设计过程中出错的可能性，达到了事半功倍的效果。</p>\n<p>5.设计了良好的 OOP 系统具有的特性</p>\n<p>1 ）可维护性：软件在投入使用的过程中，随着运行时间的延长，后期可能就不符合客户的需求了，我们就需要对软件进行修改。后期维护的人员初期可能没有参与到软件的开发中，对软件的结构是不熟悉的。那 OOP 系统就能保证后期的维护比较方便，比较简单；</p>\n<p>2 ）可扩展性：在软件运行后期我们需要对软件新增一些功能的时候，不需要对软件的架构进行大的更改就能非常方便的增加一些功能；</p>\n<p>3 ）可复用性：我们在这一个项目中使用的一些代码和类，模块可以很容易的拿到另外一个项目中去使用；</p>\n<p>4 ）健壮性：软件要比较稳定，出错的几率比较小。</p>\n<p>6.二者比较</p>\n<p>1 ）传统的结构化程序设计方法以过程为中心构造应用程序，数据和处理数据的过程代码是分离的、相互独立的实体，设计出的程序可重用代码少，且当代码量增加时维护数据和代码的一致性困难；</p>\n<p>2 ）面向对象程序设计方法中，对象所具有的封装性和继承性使得代码重用成为可能，并大大减少了程序出错的可能性；</p>\n<p>3 ）面向对象方法吸收了结构化程序设计方法的优点，同时引入了新概念、新机制并建立了比传统方法更高层次的抽象。面向对象内部也包含了面向过程，比如我们在设计类中的一个方法时，我们就会采用面向过程的一些原则，一些思想等等…….</p>\n<p>7.一些误区</p>\n<p>1 ）面向对象优于面向过程：面向对象与面向过程没有绝对的优劣之分，只有是否适用之别；</p>\n<p>2 ） C++ = C + 类， C++的编程思想被很大的改变，如果仅仅只是适用类将 C 封装起来，那不是 C++的面向对象的原则；</p>\n<p>3 ）使用面向对象技术一定能构造出更优秀的软件：有人认为面向对象做出来的软件一定是非常优秀的，但是面向对象不慎误用，或者是面向对象编程的思想没有掌握好的话，这样的软件只会比面向过程写出的软件更糟糕而已；</p>\n<p>4 ）学会了 C++就学会了面向对象技术，这个我们前面也已经说过，学习 C++只是学习面向对象的第一步，后面还需要学习面向对象的一些原理，原则和方法。更是需要自己去实践，对面向对象不断加深理解。</p>\n<p></p>\n<p>原文链接： <a href=\"http://www.maiziedu.com/wiki/cplus/overview/\" rel=\"nofollow\">http://www.maiziedu.com/wiki/cplus/overview/</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "面向过程和面向对象的区别是什么？", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>请问下现在还有比较权威的跳转网站吗？\n比如\np.qq 。 com\nmsh.baidu 。 com\nfx1.uc 。 cn\ns.c.qq 。 com\n类似这样权威网站的跳转，有的可以有偿学习。</p>\n</div></div>"], "reply": "4", "tittle": "最近有什么新的跳转链接嘛？", "comment": ["啥意思？是类似短链接的么？  ", "他是要大网站的 302 重定向漏洞", " 要漏洞来有什么用？搞攻击？", "qq 白名单"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"http://www.tbi.univie.ac.at/%7Epkerp/forgi/index.html\" rel=\"nofollow\">forgi</a>这个库可以从点括号中可以得到内环，茎区，发夹环，多分支环的数目，但是始终没有得到凸环的数目。有什么库或是软件可以得到包括凸环的所有结构的数目吗？</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "从点括号中统计各种结构的数目，有什么好的办法吗？（生物信息）", "comment": []},
{"content": "", "reply": "82", "tittle": "求大家推荐 rss 阅读 app", "comment": ["rss 不是被淘汰了么", "深蓝阅读", "inoreader", "mac 上推荐 reeder3 ios 也有", "iOS 就 Reeder 最佳。", " 这么好用的东西为什么要淘汰？", "Feedly", "Reeder", "Feedly+1", "建议 Inoreader ，如果 Windows 平台，建议浏览器上自定义 CSS 将字体从宋体换成微软雅黑", "用 QQ 邮箱订阅啊", "reeder 上绑定 inoreader 账号。\r", "\r", "除了 reeder 其他都是渣，不要浪费时间", "iOS \r", "\r", "Unread\r", "\r", "我觉得比 Feedly 要好看", "我也是用的 feedly 。 方便", "我是 windows 桌面上用 QuiteRSS 还不错，之前用 FeedDemon 有很多 rss 莫名的报错", "一览阅读", "reeder", "Feedly + Newsfold\r", "\r", "不过楼主好歹说一下什么平台上的\r", "主题 \"用 Android 发布\", 楼上各位还在推荐 Reeder.....", "别浪费时间在这上面了  死的差不多了。", " 死的差不多了么 好奇您阅读的都是些什么网站", "inoreader ＋ 1\r", "rss 批量阅读 wordpress 之类的博客还是不错的。。。同问楼主还能看什么。。(真的只是好奇)", "深蓝阅读+1", "feedly 整合， gReader Pro 阅读，然而这货好多年没更新了，好在还能用...", "现在不都是微信公众号么", "我用 feedly+press", "Palabre 的 App 拉 Feedly 的订阅蛮有爱的。", "深蓝阅读还不错~~~", "Feedly 体验比 Inoreader 体验好一点\r", "\r", "不过依赖 rss 不如看书。。。", "feedly ， gReader ，还有 chrome 插件 RSS Feed Reader", "Newsify  挺好用的", "Inoreader + FeedMe", "inoreader", "我火星了我用 Digg", "reeder3", "没人推荐网易云阅读吗？", "reeder3  +1", "一直是 inoreader", "reeder3 本地账户", "不值得折腾了，现在是内容付费时代，真有价值的好文章挂微博收费都一堆人买。国内大部分都往微信发布，图名或者图利；国外的要么自己做 app 收费订阅，要么只给看个摘要，烧全文各种麻烦", "酷壳，挺不错的，自带 rss 功能，并且可以自动更新被墙的 rss 源。", "aol reader\r", "\r", "这也是月经帖啊", "digg", "同事能当收藏夹用的只有 inoreader, 收藏非源内的文章也行", " NewsFold 我用起来感觉同步源特别的慢，即使是在挂代理的情况下，不知道你有这个问题吗？或许是我订阅的源太多的问题？", "Palabre + 1 用起来很舒服 ", " ", "feedly +1 简单好用 :)", "reabble", "自己搭建一个 goread, google appengine  的 free quota 足够了 \r", "\r", "  可以拉取个人博客的 feed ，缺点是貌似不能缓存。", "Reeder  iOS 已经 MacOS 平台体验非常好", "一览阅读", "Reeder + Feedly", "Reeder + Feedly", "国外 inoreader \r", "国内 一览阅读 ( 自带一些 rss 源 )\r", "\r", "微信号的 rss 订阅可用“微广场”", "没人提 tiny tiny rss 么。。。 pc 和 android 用都不错， ios 没啥好客户端。", "试用过很多款，最终还是选了 feedly 。 feed 不需要多少花俏功能，清爽舒适阅读最重要。", "inoreader", "feedly", "回答了这么多，老实话我真的挺反感这样不说需求和平台甚至连内容都不写，只一个标题就想要寻求解答的伸手党", "feedlyReader", "lz 连个什么平台都不说…… 服务的话 推荐 inoreader / the old reader / Feedly / aol reader", "app iOS 就", "Reeder", "Fiery Feeds", "Slow Feeds", "Unread", "My Paper", "Good News", "Newsify", "Feedly", "Ziner", "Browse(use its own account)", "Newsrific", "Mr. Reader (iPad Only)", "lire", "Digg", "RssBook", "Fiery Feeds", "IMPR", "RSS_Reader", "Reeder 了（支持的服务最多）", "Mac 就 Reeder 和 Leaf", "安卓不了解啊", "一开始用 inoreader ，不过真心慢…… 现在自己写了一个订阅器自己用……", "不是 APP 但屌打各种 APP\r", "\r", "用手机看也超顺.无广告.\r", "唯一小缺点.无法汇出文章.但有 API 可以写程式汇出", "Feedly 配 Nextgen Reader ， Windows 上挺好的。", "Reader + inoreader", "安卓 gReader", " 试了下 Palabre ，好像离线功能不给力呢。。。", "Feedly +1", "win 下一只用 foxmail 带的，感觉够用了", "目前在用一览", " 设置里有个启动离线模式的，你是不是没有打开呢，一般有新的推送会自动缓存的", "Inoreader,Palabre 都用过，听说不错，实际也还行，我只有一个不满意的地方：离线功能太渣……我喜欢离线查看的。每次点进去还要重新加载，明明列表上面已经下载好图片了，点进去文章页它还是会重新下载。除了离线太渣之外，其他还好。", " 打开了的，然后刷新了一下，未见长时间的数据下行。。。然后把网断了，再看文章，文字是有，但是不是全文，而且没有图。。。。是姿势不对么(ﾟДﾟ*)ﾉ", " 我试了下  图片离线好像的确有点问题 ", "   这就很尴尬了", "reeder", "reeder3", "reeder", " 谢谢解惑_(:з」∠)_\r", "还是继续 gReader 吧...", "the old reader", "andriod: feedme\r", "ipad: impr", "ios:reeder ", "求 rss 订阅源"]},
{"content": "", "reply": "3", "tittle": "大家用过什么好用的邮件发送服务?要求支持附件发送。", "comment": ["自己写接口的路过。。我放在新浪 sae 上了，用随机的 Key 来校验", "国内 mailgun 发送接收不是很好， sendcloud 比较舒服，但是邮件测试评分的话 mailgun 的分数比较高（但是并没有什么卵用），这是我之前看到的一篇文章\r", "\r", "Sendgrid"]},
{"content": ["<div class=\"topic_content\"><img src=\"http://ww1.sinaimg.cn/mw1024/68f4ec25gw1f9kkoxykf5j21kw11xgsf.jpg\" class=\"embedded_image\" border=\"0\"> \r<br><img src=\"http://ww1.sinaimg.cn/mw1024/68f4ec25gw1f9kko2om93j21kw11xwrt.jpg\" class=\"embedded_image\" border=\"0\"> \r<br>\r<br>北京 GDG 一年一度的开发者大会 DevFest 2016 现已开放报名！今年是北京 GDG 第五次举办 DevFest 大会。 DevFest 是完全由社区组织者、志愿者独立筹备的活动，是国内少数高质量、无广告、免费的开发者大会。\r<br>\r<br>本次大会分两个会场主要面向 Android 和 Web 开发者，由国内资深工程师给大家带来分享。此外，还有 TensorFlow 的介绍内容。\r<br>\r<br>大会信息\r<br>活动时间： 2016 年 11 月 19 日（周六）， 9:00-18:00 \r<br>活动地点：北航新主楼，第一 /第二报告厅\r<br>大会网站： <a target=\"_blank\" href=\"http://chinagdg.org/2016-devfest-beijing/\" rel=\"nofollow\">http://chinagdg.org/2016-devfest-beijing/</a>\r<br>报名方法：访问网站，点击报名按钮\r<br>\r<br>活动内容\r<br>Android 会场：\r<br>・Android 低功耗蓝牙实践 - 吴晶\r<br>・Memory Leaks In Android - 段建华\r<br>・Android 开发中为人所忽视的异步编程模式 - 张铁蕾\r<br>・你上线的 App 安全吗？ - 黄帅\r<br>・微信 Mars 中的高性能客户端日志模块 xlog - 闫国跃\r<br>\r<br>Web 会场：\r<br>・TensorFlow 与 Kubernetes 深度学习平台实践 - 陈迪豪\r<br>・Service Worker 101 – Instant Loading and Working Offline - 黄玄\r<br>・移动时代的 Web3D 工程实践 - 潘征\r<br>・Googel AMP Gotcha - 李高禄\r<br>・Web 构建漫谈 - 冯天然\r<br>・从 HTTP 到 QUIC - 孙宁\r<br>・Progressive Web Apps - 韩国恺\r<br>\r<br>以上主题演讲内容和讲师介绍详见大会网站，我们微信公众号稍后也会做详细介绍。更多主题正在确认中。\r<br>\r<br>5 分钟闪电演讲报名\r<br>面对上百人做 40 分钟主题演讲有压力？没关系，技术爱好者还可以报名我们的闪电演讲环节。由于时间短，不需要做太多准备。闪电演讲内容可以是某个技术点、某个技术的个人实践或自己的开源项目分享，但要求和本次活动主题相关（ Android 、 Web 方面或其它 Google 相关技术）。报名方式：在报名表的“闪电演讲”中留下您的联系方式、个人简介和分享内容。\r<br>\r<br>活动现场还有免费小礼物🎁</div>"], "reply": "目前尚无回", "tittle": "11 月 19 日·北京 DevFest 2016 开发者大会（面向 Android 和 Web 开发者）", "comment": []},
{"content": ["<div class=\"topic_content\">问题一,后端如何将数据传输到前端页面？目前我有两种方案：\r<br>\r<br>第一种，在 SpringMVC controller 中直接 return “ somepage ”。\r<br>这样，当浏览器打开这个页面时，并没有数据，前端页面向后端发送一个 Ajax 请求来异步地获取数据进行渲染。这样做的好处是能够设计出 REST API ，缺点是需要向后端发起二次请求，用户不能马上看到数据，可能会有一点延迟。\r<br>\r<br>第二种，先往 Map 中放入一个 Json 格式的字符串，然后在 jsp 页面中从 request 域取出这个字符串并绑定到 window 对象中，比如\r<br><div><a target=\"_blank\" href=\"https://gist.github.com/zeal7s/f1a265a437c3e9f58d37f9cfc3e51186\">https://gist.github.com/zeal7s/f1a265a437c3e9f58d37f9cfc3e51186</a> <button onclick=\"lazyGist(this)\"> 显示 Gist 代码 </button></div>\r<br>\r<br>这样，就能在 Redux 中来访问 window.json 来获取后端传来的初始化数据。\r<br>请问，现在主流的做法是哪一种，或者还有更好的方式吗？\r<br>\r<br>问题二,关于前端代码热加载的问题：\r<br>\r<br>执行命令 webpack-dev-server --progress --colors 后，当我更改了前端代码，命令行中确实看到了变化，但是实际上 webpack 的 output 路径下的文件内容并没有发生变化。我必须重新执行 webpack 命令并且重新部署 war 包才能在浏览器中看到变化。\r<br>以下是我的文件夹目录结构，不晓得对于我遇到的问题有没有什么影响\r<br>src\r<br>├── main\r<br>│   ├── java\r<br>│   ├── resources\r<br>│   └── webapp\r<br>│       ├── WEB-INF\r<br>│       │   └── views\r<br>│       │       └── home.jsp\r<br>│       └── resources\r<br>│           ├── built（Webpack输出文件夹）\r<br>│           │   ├── app.js\r<br>│           │   └── app.js.map\r<br>│           ├── images\r<br>│           ├── scripts\r<br>│           │   └── app.js\r<br>│           └── styles\r<br>│                └── style.css\r<br>└── test\r<br>    ├── java\r<br>    └── resources\r<br>我应该如何修改才能使前端代码热加载生效呢？\r<br>多谢！</div>"], "reply": "18", "tittle": "SpringMVC+React+Redux＋ Webpack 开发时遇到的几个问题", "comment": ["没有主流做法，能解决问题的做法是最好\r", "个人建议第 2 种，因为网站加载是有延迟的，除非你遍地 CDN\r", "否则你的用户肯定有几率会看到{{}}之类的玩意（手动 DOGE ） \r", "话说浏览器走到今天 真是赶鸭子上架，不仅折腾人 还折腾业务逻辑", "我自学完 SpringMVC Mybatis vuejs 之后 做的一个项目就是个小论坛，采用的第一种加载方案，\r", "由于 Ajax http 请求的延时，用户会看到{{}}之类的玩意", "这个架构把 redux 去了估计上手会更快一些", "用 React 了，前后分离啊，那么后端是不是 SpringMVC 、是不是 JAVA 并不重要啊", "接手的几个项目都是二次加载（首页白屏）的方式，然后 index 就交给 cdn 或者 nginx 好了。", "倾向于第一种\r", "1. 既然 前端页面向后端发送一个 Ajax 请求来异步地获取数据进行渲染, 那么我觉得这个页面的数据应该是用户不需要立马就需要看见的, 可能需要点击一个展开或者点击一个下拉框之类的再去 ajax 加载数据 , 如果是需要一进入就需要展示的数据也就没必要再 ajax 去异步请求一次了....\r", "\r", "2.还需要在 js 写``request.getAttribute(xxxxx)``这样的代码实在是麻烦, 而且还要手动放 request 里面扔数据, 觉得实在是没必要...\r", "\r", "关于 1L 说的出现`{{}}`问题, 用 velocity 模版引擎不会出现这样的问题", " 其实不是浏览器的问题，浏览器现在越来越按照标准来了，有问题的是前端社区的发展，太浮躁了。", "有加载延迟，做个加载动画提示就行了，等数据加载完，再进行渲染", " {{}}这种东西现在都会用 ng-cloak/v-cloak 来做默认隐藏处理吧", " 好吧 我用的 vuejs 菜鸟没找到解决方案吧", "最后那个 装个 spring dev tools 可破~", " 解决方案: jrebel", "{{}}   这种东西，前端处理一下就好了，加动画，加默认值。很多种方式解决，这个锅不应该有 ajax 来背。而且 既然前后端分离的话，就不要再用 jsp 页面了。全部静态页面搞起来。", "都 React+Redux ＋ Webpack  了，已经可以前后端分离了，可以直接通过接口返数据", " spring dev tools 似乎是 spring boot 专用吧？", "  好像是~ 你既然用最原始的 webapp 方式开发就说明你不需要它 ~ 逃：~", " BTW ，现在 spring boot 使用地很广泛吗？", " 这个不是很清楚 至少在我司已经没有用传统的 webapp 项目了~"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题，现在有这么个需求，对另一个数据库的订单数据抓取到本地数据库，每半小时抓取一次。采取的是增量抓取的方式，就是抓取这半个小时的数据。现在的问题是，如何保证数据的一致性，比如抓取过程中，产生了订单，这样就可能会漏掉了该订单</p>\n</div></div>"], "reply": "4", "tittle": "关于对另一个数据库的数据抓取，如何保持数据一致性", "comment": ["自己抓取开始的时候，记住抓取动作开始的时间，因此抓取的记录就是开始时间往前推半小时产生的记录，数据库系统有自己的时间戳，这个不难的吧。落库的时候再做主键比对，避免重复抓取", "订单 id 不是自增的？", "代码可以参考一下不，一种是在源数据表加同步字段，更新，另一种我感觉可以时间排序，然后取最后时间为下次同步时候的开始时间，设置和更新频率不能太快，另外 oracle 和 mssql 都有表快速复制语句，如果不是两个不同数据库，那个最快", "解析 binlog"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h3>前言</h3>\n<p>高并发经常会发生在有大活跃用户量，用户高聚集的业务场景中，如：秒杀活动，定时领取红包等。<br>\n为了让业务可以流畅的运行并且给用户一个好的交互体验，我们需要根据业务场景预估达到的并发量等因素，来设计适合自己业务场景的高并发处理方案。</p>\n<p>在电商相关产品开发的这些年，我有幸的遇到了并发下的各种坑，这一路摸爬滚打过来有着不少的血泪史，这里进行的总结，作为自己的归档记录，同时分享给大家。</p>\n<hr>\n<h3>服务器架构</h3>\n<p>业务从发展的初期到逐渐成熟，服务器架构也是从相对单一到集群，再到分布式服务。<br>\n一个可以支持高并发的服务少不了好的服务器架构，需要有均衡负载，数据库需要主从集群， nosql 缓存需要主从集群，静态文件需要上传 cdn ，这些都是能让业务程序流畅运行的强大后盾。</p>\n<p>服务器这块多是需要运维人员来配合搭建，具体我就不多说了，点到为止。<br>\n大致需要用到的服务器架构如下：</p>\n<ul>\n<li>服务器\n<ul>\n<li>均衡负载(如： nginx ，阿里云 SLB)</li>\n<li>资源监控</li>\n<li>分布式</li>\n</ul>\n</li>\n<li>数据库\n<ul>\n<li>主从分离，集群</li>\n<li>DBA 表优化，索引优化，等</li>\n<li>分布式</li>\n</ul>\n</li>\n<li>nosql\n<ul>\n<li>redis\n<ul>\n<li>主从分离，集群</li>\n</ul>\n</li>\n<li>mongodb\n<ul>\n<li>主从分离，集群</li>\n</ul>\n</li>\n<li>memcache\n<ul>\n<li>主从分离，集群</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>cdn\n<ul>\n<li>html</li>\n<li>css</li>\n<li>js</li>\n<li>image</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3>并发测试</h3>\n<p>高并发相关的业务，需要进行并发的测试，通过大量的数据分析评估出整个架构可以支撑的并发量。</p>\n<p>测试高并发可以使用第三方服务器或者自己测试服务器，利用测试工具进行并发请求测试，分析测试数据得到可以支撑并发数量的评估，这个可以作为一个预警参考，俗话说知己自彼百战不殆。</p>\n<p>第三方服务:</p>\n<ul>\n<li>阿里云性能测试</li>\n</ul>\n<p>并发测试工具：</p>\n<ul>\n<li>Apache JMeter</li>\n<li>Visual Studio 性能负载测试</li>\n<li>Microsoft Web Application Stress Tool</li>\n</ul>\n<hr>\n<h3>实战方案</h3>\n<h4>通用方案</h4>\n<blockquote>\n<p>日用户流量大，但是比较分散，偶尔会有用户高聚的情况；</p>\n</blockquote>\n<p>场景： 用户签到，用户中心，用户订单，等<br>\n服务器架构图：\n<img alt=\"通用\" src=\"http://demo.thankbabe.com/blog/images/gbf-common2.png\"></p>\n<p>说明：</p>\n<p>场景中的这些业务基本是用户进入 APP 后会操作到的，除了活动日(618,双 11 ，等)，这些业务的用户量都不会高聚集，同时这些业务相关的表都是大数据表，业务多是查询操作，所以我们需要减少用户直接命中 DB 的查询；优先查询缓存，如果缓存不存在，再进行 DB 查询，将查询结果缓存起来。</p>\n<p>更新用户相关缓存需要分布式存储，比如使用用户 ID 进行 hash 分组，把用户分布到不同的缓存中，这样一个缓存集合的总量不会很大，不会影响查询效率。</p>\n<p>方案如：</p>\n<ul>\n<li>\n<p>用户签到获取积分</p>\n<ul>\n<li>计算出用户分布的 key,redis hash 中查找用户今日签到信息</li>\n<li>如果查询到签到信息，返回签到信息</li>\n<li>如果没有查询到， DB 查询今日是否签到过，如果有签到过，就把签到信息同步 redis 缓存。</li>\n<li>如果 DB 中也没有查询到今日的签到记录，就进行签到逻辑，操作 DB 添加今日签到记录，添加签到积分(这整个 DB 操作是一个事务)</li>\n<li>缓存签到信息到 redis ，返回签到信息</li>\n<li><code>注意</code>这里会有并发情况下的逻辑问题，如：一天签到多次，发放多次积分给用户。</li>\n<li>我的博文[<a href=\"http://blog.thankbabe.com/2016/04/01/high-concurrency/\" rel=\"nofollow\">大话程序猿眼里的高并发</a>]有相关的处理方案。</li>\n</ul>\n</li>\n<li>\n<p>用户订单</p>\n<ul>\n<li>这里我们只缓存用户第一页的订单信息，一页 40 条数据，用户一般也只会看第一页的订单数据</li>\n<li>用户访问订单列表，如果是第一页读缓存，如果不是读 DB</li>\n<li>计算出用户分布的 key,redis hash 中查找用户订单信息</li>\n<li>如果查询到用户订单信息，返回订单信息</li>\n<li>如果不存在就进行 DB 查询第一页的订单数据，然后缓存 redis ，返回订单信息</li>\n</ul>\n</li>\n<li>\n<p>用户中心</p>\n<ul>\n<li>计算出用户分布的 key,redis hash 中查找用户订单信息</li>\n<li>如果查询到用户信息，返回用户信息</li>\n<li>如果不存在进行用户 DB 查询，然后缓存 redis ，返回用户信息</li>\n</ul>\n</li>\n<li>\n<p>其他业务</p>\n<ul>\n<li>上面例子多是针对用户存储缓存，如果是公用的缓存数据需要注意一些问题，如下</li>\n<li><code>注意</code>公用的缓存数据需要考虑并发下的可能会导致大量命中 DB 查询，可以使用管理后台更新缓存，或者 DB 查询的锁住操作。</li>\n<li>我的博文[<a href=\"http://blog.thankbabe.com/2016/08/05/redis-up/\" rel=\"nofollow\">大话 Redis 进阶</a>]对更新缓存问题和推荐方案的分享。</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>以上例子是一个相对简单的高并发架构，并发量不是很高的情况可以很好的支撑，但是随着业务的壮大，用户并发量增加，我们的架构也会进行不断的优化和演变，比如对业务进行服务化，每个服务有自己的并发架构，自己的均衡服务器，分布式数据库， nosql 主从集群，如：用户服务、订单服务；</p>\n</blockquote>\n<hr>\n<h4>消息队列</h4>\n<blockquote>\n<p>秒杀、秒抢等活动业务，用户在瞬间涌入产生高并发请求</p>\n</blockquote>\n<p>场景：定时领取红包，等<br>\n服务器架构图：\n<img alt=\"消息队列\" src=\"http://demo.thankbabe.com/blog/images/gbf-list.png\"></p>\n<p>说明：</p>\n<p>场景中的定时领取是一个高并发的业务，像秒杀活动用户会在到点的时间涌入， DB 瞬间就接受到一记暴击， hold 不住就会宕机，然后影响整个业务；</p>\n<p>像这种不是只有查询的操作并且会有高并发的插入或者更新数据的业务，前面提到的通用方案就无法支撑，并发的时候都是直接命中 DB ；</p>\n<p>设计这块业务的时候就会使用消息队列的，可以将参与用户的信息添加到消息队列中，然后再写个多线程程序去消耗队列，给队列中的用户发放红包；</p>\n<p>方案如：</p>\n<ul>\n<li>定时领取红包\n<ul>\n<li>一般习惯使用 redis 的 list</li>\n<li>当用户参与活动，将用户参与信息 push 到队列中</li>\n<li>然后写个多线程程序去 pop 数据，进行发放红包的业务</li>\n<li>这样可以支持高并发下的用户可以正常的参与活动，并且避免数据库服务器宕机的危险</li>\n</ul>\n</li>\n</ul>\n<p>附加：<br>\n通过消息队列可以做很多的服务。<br>\n如：定时短信发送服务，使用 sset(sorted set)，发送时间戳作为排序依据，短信数据队列根据时间升序，然后写个程序定时循环去读取 sset 队列中的第一条，当前时间是否超过发送时间，如果超过就进行短信发送。</p>\n<hr>\n<h4>一级缓存</h4>\n<p>高并发请求连接缓存服务器超出服务器能够接收的请求连接量，部分用户出现建立连接超时无法读取到数据的问题；</p>\n<p>因此需要有个方案当高并发时候时候可以减少命中缓存服务器；</p>\n<p>这时候就出现了一级缓存的方案，一级缓存就是使用站点服务器缓存去存储数据，注意只存储部分请求量大的数据，并且缓存的数据量要控制，不能过分的使用站点服务器的内存而影响了站点应用程序的正常运行，一级缓存需要设置秒单位的过期时间，具体时间根据业务场景设定，目的是当有高并发请求的时候可以让数据的获取命中到一级缓存，而不用连接缓存 nosql 数据服务器，减少 nosql 数据服务器的压力</p>\n<p>比如 APP 首屏商品数据接口，这些数据是公共的不会针对用户自定义，而且这些数据不会频繁的更新，像这种接口的请求量比较大就可以加入一级缓存；</p>\n<p>服务器架构图：\n<img alt=\"通用\" src=\"http://demo.thankbabe.com/blog/images/cache.png\"></p>\n<p>合理的规范和使用 nosql 缓存数据库，根据业务拆分缓存数据库的集群，这样基本可以很好支持业务，一级缓存毕竟是使用站点服务器缓存所以还是要善用。</p>\n<hr>\n<h4>静态化数据</h4>\n<p>高并发请求数据不变化的情况下如果可以不请求自己的服务器获取数据那就可以减少服务器的资源压力。</p>\n<p>对于更新频繁度不高，并且数据允许短时间内的延迟，可以通过数据静态化成 JSON ， XML,HTML 等数据文件上传 CDN ，在拉取数据的时候优先到 CDN 拉取，如果没有获取到数据再从缓存，数据库中获取，当管理人员操作后台编辑数据再重新生成静态文件上传同步到 CDN ，这样在高并发的时候可以使数据的获取命中在 CDN 服务器上。</p>\n<p>CDN 节点同步有一定的延迟性，所以找一个靠谱的 CDN 服务器商也很重要</p>\n<hr>\n<h4>其他方案</h4>\n<ul>\n<li>对于更新频繁度不高的数据， APP,PC 浏览器，可以缓存数据到本地，然后每次请求接口的时候上传当前缓存数据的版本号，服务端接收到版本号判断版本号与最新数据版本号是否一致，如果不一样就进行最新数据的查询并返回最新数据和最新版本号，如果一样就返回状态码告知数据已经是最新。<code>减少服务器压力：资源、带宽</code></li>\n</ul>\n<blockquote>\n<p>未完待续...<br>\n有补充的留言给我哦</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>感谢大家的支持，领取天猫 [<a href=\"http://s.click.taobao.com/uc1hdQx\" rel=\"nofollow\">双 11 红包</a>] ，获得推广费用来维持网站的运行，谢谢理解。</p>\n</blockquote>\n<blockquote>\n<p>大家有啥意见或者建议的到 <a href=\"http://blog.thankbabe.com/2016/09/14/high-concurrency-scheme/?from=v2ex\" rel=\"nofollow\">原文地址</a> 给我留言吧，感谢支持~</p>\n</blockquote>\n</div></div>"], "reply": "5", "tittle": "大话程序猿眼里的高并发架构", "comment": ["这个图是拿什么画的，赶紧挺好看的", "可以可以，挺多干货", " 免费的在线作图网站： ", " 感谢支持！", "有问题欢迎到原文地址里留言，我会及时回复，感谢大家的分享。\r", "原文地址： "]},
{"content": ["<div class=\"topic_content\">真够溜的 审核周期还 3-5 天 \r<br>OMG 备案已经够烦的了 还来个这个玩意儿</div>", "<div class=\"topic_content\">和客户说今天上线。。。。。。。 结果解析后就傻眼了 GOOD JOB</div>", "<div class=\"topic_content\">说转出的朋友我们大家都很天真 阿里云的域名不实名认证转出功能不可用 我 Q**D</div>"], "reply": "46", "tittle": "阿里云 COM 域名必须实名认证 不然用不了", "comment": ["还好上个月把域名转走了", "> 2016 年 7 月 18 日 8 点起，.com/.net 域名注册成功后必须进行域名实名认证，否则域名会处于锁定状态（ Serverhold ），无法正常使用：.com/.net 域名一旦注册成功，将自动提交命名审核，命名审核通过后（审核时间 1-2 天），域名状态将短暂解除锁定（即显示 OK 状态）。注册成功 5 天内，若没有提交实名认证资料并通过审核，域名将继续被注册局锁定；\r", "2016 年 7 月 18 日 8 点之前注册成功的.com/.net 域名暂不强制要求实名，待注册局通知后另行告知；\r", "2016 年 7 月 18 日 8 点之后进行续费、过户等操作的.com/.net 域名，也必须进行域名实名认证。\r", "因未完成实名认证处于 Serverhold 状态的域名，需要等注册局实名认证审核通过后才能恢复，恢复时间 1-2 个工作日，还请耐心等待。\r", "\r", "\r", "还好是 2016 年 7 月 18 日 8 点之前注册成功的，开来也要转走了。", "这个是 cnnic 的`高校`规定，各国内注册商都按着作了，我一起在这看到通知之后，实行之前转了一批出去了-。-", "可能以后取消备案了，实名是准备阶段，如果真这样，那应该算是进步。", "都 2016 年了还有人在用阿里云  赶紧转走吧", "域名到期前慢慢转，之前发了 2 个帖子没人理我。", " 不太可能, 就现在提供的信息， 应该是 ICANN 要求的， 不是 gov.\r", "\r", "ICANN 本来就要求实名注册, 只是允许通过域名保护隐藏.\r", "\r", "一般这种情况， 小注册商随机发邮件验证一下敷衍敷衍， 大注册商倒是一贯被盯得很紧\r", "\r", "\r", "\r", "\"We are notified or have reason to believe that a shopper's contact info is invalid.\"\r", "\r", "虚假资料注册被 godaddy 随机抽检拿不出相符的身份证明被罚款、锁死甚至砍掉的域名不少的.", " ICANN 的规定， CNNIC 管不到.com", "这么说吧，想不实名的，赶紧速度把服务器都移到国外去，国内实名化是绝对的大趋势，历史车轮，你挡不住的", "一两个小时内就能搞定", "这也不是阿里云的错啊", "联系过了，仅限国内。", "国外买的 com 域名，已经代备过的怎么算？", " ICANN 是每年要求核对资料，但没有要求过证件实名，国内的 cnnic 就这么拽 不是组织 是有关部门", "基本上当天都能审核，最近上线了客户不少项目，都是当天审核的。", " 我当时问的是 VeriSign ，对方表示在中国大陆的 Sponsoring Registrar 注册 com/net/cc/tv 等由 VeriSign 运营的后缀必须实名，实名认证成功后由注册商通知 VeriSign 将域名解锁", "这个都要实名认证吧，可以催一下客服，我记得有一次就是自己直接操作实名的，秒解封。", " 该说你天真还是那啥呢。想想手机实名制吧。", "早转早轻松", "请问中国互联 163ns 的域名怎么转到 godaddy 呢？", "说的好像 Godaddy 不要求实名是一样，被我锁住了一个域名了。", " 应该是有点脑容量不够用，不过真期望把备案制换成域名实名制，备案已经成为服务商绑定客户的一大利器了。如果域名实名了就可以自由选择服务商，相信对广大最终用户来说是好事情。", " 控制服务商比控制个人容易", "主要域名这东西，就像股市价格越炒越高，而且国际交易畅通，不实名的话跟比特币有异曲同工之妙。还是管管好，炒就罢了，至少知道谁在炒。", "审核没过之前， 可以把 dns 服务器设置成其他家的啊， 比如 dnspod ， 可以直接用的", "继续安利一波 namesilo ，比狗爹好啊", "转到 namesilo 了。。。反正 国内 你让我干啥 我就偏不干啥", " 都 serverhold 了，怎么用？", " 换 DNS 没用，域名直接 serverHold 状态锁死你用着试试？", " 哥们你确定？阿里都直接说了 3-5 天", "正确的方法:\r", "国内注册域名后,把 NS 改成国外免费域名服务商的\r", "这样就可以避规域名备案,又可以用国内支付方式支付管理费", " 换 DNS 没用，域名直接 serverHold 状态锁死你用着试试？", " 估计也看心情吧，我最近买的审核很快", "  serverHold 之后 NS 就不管用了吧，否则还 hold 毛线啊。(手残点了感谢。。", "最好转到国外 godaddy 欢迎你", "我在新网注册域名 续费时候遇到了困难，上传身份证说我身份证不知道出什么问题了，还让我上传户口本，户口本这玩意也不是随身带的东西，后来我着急用，就去 ICANN 投诉去了，说新网侵犯隐私，后来新网就没问我要户口本，直接邮箱确认是我就行了。所以我推荐转到国外，权利有保障。", " 请看清楚 ns,不是 dns", " 这个可以叫域名商解的，就直接跟他们说，你要换 ns 服务商，有的域名商，秒懂！", "正确的方式：\r", "国内注册，需要注册商的管理器里可以更换 ns 服务器\r", "注册后， ns 改成国外免费域名管理商的（网上一大把）\r", "这样的好处就是，可以用国内支付方式支付，方便快捷，而管理用的国外的 ns ，不需备案\r", "服务商的好处：收了你的钱，又不要给你服务，又不要备案的事麻烦，躺着数钱，开心不已\r", "\r", "剩下的问题就是：如何在家用 adsl 上建立不要备案的网站，可供完全服务！这个就不能告诉你们了，这是秘密", "没人用新网的域名吗？  我感觉要火", " 进入新网的域名，要想转出比登天还难", " \r", "你先去查一下什麼叫 serverHold 和 clienHold 吧。\r", "以及 DNS 的說法說 NS 是沒有問題的。而且 NS 和備案是無關的。", " 我的哥！ 我错了，我认错", " 有空多跑跑图书馆吧，有空多学点真知识吧", " \r", "那麻煩您去問問 ICANN serverHold 的域名是否可以讓修改的 NS 生效？我做域名代理挺多年第一次聽說您這樣的說法，有趣。\r", "來看看 ICANN 怎麼說的？\r", " \r", "\r", "DNS = Domain Name Server \r", "NS = Name Server\r", "修改一個域名的 NS 記錄值說成更換 DNS 有何不妥嗎？\r", "哦對了，那您給我推薦本書？", " 你的理解有问题，不好意思，我不喜欢与智商低的人讨论问题"]},
{"content": ["<div class=\"topic_content\">搞后台和安卓，如何快速上手微信小程序开发？</div>"], "reply": "12", "tittle": "Java 系程序员如何快速上手小程序？", "comment": ["我也是后端程序员，但是感觉如果你会 js ， html ， css 的话，小程序很简单的", "那就别想快速 2 个字了。", "老司机,搭下车,企鹅 2k 小程序群: 139122611 进来交流下吧", "换个姿势。。。", "看文档", "昨天看了两个小时的文档就基本上能上手了，遇到不会的再去查就行了", "感觉太封闭了，不是标准，要全部重写了。", "首先你得能注册一个小程序。。。。", "先学 ECMAScript,再学 vue.js\r", "ECMAScript:   ", "\r", "\r", "vue.js:  ", " 已经注册开通了", " 我艹。。。。什么公司这么 66666", "会 vue 手到擒来", " 那就是“变种” VUE 啊"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>1.函数重载</p>\n<p>在使用函数之前，我们应该声明它。函数的声明被称为函数的原型，表示函数的调用约定，包括调用参数的个数和类型，返回值，以及由谁去堆栈等等….</p>\n<p>关于函数，我们首先介绍一下函数重载。函数重载时 C++引入的一个新的特性。多个函数具有相同的函数名，这些函数中只是参数个数和类型不同，它们就构成了重载。</p>\n<p>我们来定义一个函数，返回两个数之间的最大值。</p>\n<p>int max(int a, int b);</p>\n<p>double max(double a, double b);</p>\n<p>如果我们通过 max(20,40);来调用的话，它会根据参数的个数和类型来调用第一个函数。我们也可以看通过 max(20.1,40.0);来调用第二个函数。</p>\n<p>2.内联函数</p>\n<p>函数调用，尤其是频繁的函数调用是有一定代价的，因为它伴随着参数的传递，代码的入栈，堆栈平衡等等….为了避免这种代价，我们可以将函数声明为内联函数。在声明为内联函数之后，编译器会将调用内联函数的地方展开，将内联函数的代码嵌入到调用内联函数的地方。</p>\n<p>内联函数的使用方法，在函数声明的前面加上 inline 。如：</p>\n<p>inline void func(){</p>\n<p>int i=0; i++;</p>\n<p>}</p>\n<p>如果我们在下面这样调用它：</p>\n<p>func()；</p>\n<p>编译器就会将代码嵌入到这个地方，成了这样的形式，这样就没有了函数的调用。</p>\n<p>int i=0; i++;</p>\n<p>注意：使用内联函数可以节省运行时间，但是它有一个缺点，它会使你的应用程序体积增大。一般只是将代码段比较短（三到五行），调用比较频繁的函数声明为内联函数。即使你将一些复杂的函数声明为内联函数，具体是否嵌入代码这个是由编译器来决定的。编译器会根据一定的办法来判断它。</p>\n<p>3.函数调用</p>\n<p>C++的内存分为两部分，堆和栈。关于局部变量，函数参数的都是从栈中分配的。栈的特性是先入后出。大家学习过 C ，对函数的调用原理也比较清楚，函数的调用是通过栈来实现的。</p>\n<p>下面我们来回顾一下栈：</p>\n<p>比如 a 调用了 B 函数，首先 a 会讲 B 函数需要的参数入栈，接着会压入 A 中的返回地址，然后在栈中分配局部变量给函数使用。在函数执行完毕之后，在栈中会弹出函数返回地址到 a 中，此时分配给 B 函数的栈空间被回收。局部变量，函数参数占用的栈空间被释放。</p>\n<p>下面我们来回顾一下堆：</p>\n<p>内存是有操作系统管理的，应用程序可以向操作系统申请。但是应用程序向操作系统申请的代价是很大的，需要考虑到多线程的一些东西。这个时候就引入了堆。我们可以把堆比喻成向操作系统批发内存的零售商，它一次性从操作系统批发了一大片的内存，然后零售给我们的应用程序使用。因为没有多次从操作系统申请，所以操作代价比较小。堆一般随着应用程序的启动而分配，随着应用程序的退出而销毁。所以堆在整个运行期间都是可以使用的。</p>\n<p>在 C 中，我们通过 malloc 来分配空间，用 free 来释放空间。</p>\n<p>下面来举一个例子。</p>\n<p>int *p=(int *)malloc(sizeof(int)*100); //申请一片可以存储一百个 int 变量的值的内存</p>\n<p>if(!p){ //判断空间分配是否成功，分配失败就退出</p>\n<p>return 0;</p>\n<p>}</p>\n<p>free (p); //释放内存</p>\n<p>p=NULL; //当释放完这一片内存之后， p 就已经不应该再指向这一片内存了。</p>\n<p>为了防止误用，我们就把 p 指向 NULL 。如果不指向 NULL ， p 就被称为野指针，野指针会导致一些问题。</p>\n<p>在 C++中，我们使用 new 来分配空间，用 delete 来释放空间。</p>\n<p>int *p=new int[100]; //new 会自动计算需要的长度，分配一连片的内存</p>\n<p>if(!p){ //判断空间分配是否成功，分配失败就退出</p>\n<p>return 0;</p>\n<p>}</p>\n<p>delete []p; //上面是数组的分配空间，所以释放的时候需要在变量名前加[]</p>\n<p>p=NULL;</p>\n<p>如果只是普通的变量申请和释放，只需要如此：</p>\n<p>int *p=new int;</p>\n<p>delete p; //不需要[],对应的申请内存的方式一定要匹配。</p>\n<p>注意：使用 new 申请的内存在必须使用 delete 才可以释放，而释放的形式也必须匹配。</p>\n<p>原文链接： <a href=\"http://www.maiziedu.com/wiki/cplus/start/\" rel=\"nofollow\">http://www.maiziedu.com/wiki/cplus/start/</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "C++入门学习之函数", "comment": []},
{"content": ["<div class=\"topic_content\"><img src=\"http://ww3.sinaimg.cn/mw690/006iZdgkgw1f9nxyik67gj30js0d8mzj.jpg\" class=\"embedded_image\" border=\"0\"> \r<br>红圈里面的节点全部是很长的字符串（ html 代码，各种字符串的东西），我需要得到这些字符串\r<br>\r<br>可能有人会说为什么不用正则表达式直接去得到啦，因为这些节点是没有固定格式的，所以不能，只能先转化成 JSON\r<br>\r<br>所有有什么好的办法啦？谢谢各位了</div>"], "reply": "目前尚无回", "tittle": "C# 字符串可以转化 JSON 但是 JSON 节点要怎样转化成字符串啦？", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"\" src=\"http://ww3.sinaimg.cn/large/67016dd8gw1f9cm3s6fybj208e01hjr9.jpg\"><br>\n<img alt=\"\" src=\"http://ww2.sinaimg.cn/large/67016dd8gw1f9cm4f1va3j205p01l746.jpg\"><br>\n<img alt=\"\" src=\"http://ww2.sinaimg.cn/large/67016dd8gw1f9cm4lnpy7j206l01tglj.jpg\"><br>\n<img alt=\"\" src=\"http://ww1.sinaimg.cn/large/67016dd8gw1f9cm4rjosbj206s01na9y.jpg\"></p>\n<h2>这是百度 idlocr 识别验证码的结果，不是太令人满意</h2>\n<p>也有可能是噪点太多的原因。。</p>\n</div></div>"], "reply": "39", "tittle": "现在验证码/文字识别有没有成熟方案？", "comment": ["之前我司用 tesseract-ocr ，想着自己做训练。哪想识别效果太差，买了别人的服务。一问，对方就是采取众包把图片发给后台人员人工识别了。。。。 sigh", " 哈哈哈，尴尬", " 人肉识别其实也算是成熟方案了，有很多平台提供人肉识别服务以及 API ，当然都是收费的", "试试先 decay 去掉噪点", "对对对，我最近也好奇这个，人工识别。那成本呢？\r", " 怎么盈利", " 你指的是验证码平台盈利吗？ 例如出售给你每识别一个码收 2 分钱，然后招人的时候每人肉打一个码付 1 分钱，那平台就赚 1 分钱了", " ....找人一个一分钱？？？录入时间？还是有一种很厉害的录入工具，识别脑电波啥的？", " 不是说笑的，真的有人肉打码的平台，打码的工钱按验证码的难度区分，好像是几分钱吧。\r", "全国各地很多学生、家庭嘱咐、无业游民等守在电脑前抢着打码呢。", " 其实有个想法，假设我自己有个网站，然后当我用到验证码的时候，就随机给一个在线的网友强制打开验证码，让其输入之后才能继续浏览。。\r", "当然，用户体验会变差 23333", " 看来我是有点何不食肉糜的感觉了", " 手打码很成熟了 这个你真做不过专业的打手\r", "某些网站的验证码我自己看 4 个能认出来一个就不错了。。你还想用软件识别", " 据说 google 的验证码和你这个想法有点相似，话说 google 进行某个项目的 ocr 识别的时候有些图片用机器识别不清楚，所以就把这些图片作为邮箱登录等验证码让用户去识别……以上纯属听说。", " 网吧会有一堆年轻人 /老太太一边看电视剧一边输入验证码\r", "\r", "对了，手头还有一个平台 ", " 的 400 块钱的题分，便宜转卖。。", " 我之前用过一家，按他们的介绍所说，雇佣的打码员很多是不方便从事其它工作的残疾人士，还有网上兼职的学生，另外是和免费软件的开发者合作，提供 SDK 植入到免费软件中，用户每次使用软件需要输入验证码，其实就是在帮忙打码。", " 验证码识别 p2p 。。。。这个可以的。", " 打吗平台有 API, 通过 API 发送至打吗平台的客服那里,客服输入,然后 API 回调获取打吗结果.\r", "\r", "目前国内人工居多, 不用啥 NB 的算法,就靠人眼", "去噪，投影切图，丢 svm 可解", " 谷歌会把机器生成的验证码和自己的系统识别不了的图像（如谷歌街景之类的拍到的东西）拼接在一起让用户去输入，由于有前面一段机器生成的验证码做验证，后面一段图像的识别率就有了保证。相当于用户免费帮忙识别验证码了", "打码兔，听说年营收千万\r", "撸羊毛的人很多用", "人工打码速度还行,价格也不贵\r", "写一个神经网络的方轮子真不如找这种平台", "网赚项目里边，最稳定和基础的项目就是打码，其次是页游。\r", "如果楼主需要一定的正确率和性价比，还是外包给打码平台吧。机器自学习也好，各种技术运用也罢。对于打码平台的肉眼熟练工来说，人肉打码都是最佳的。\r", "就好像富士康用机器人代替人力一样，很多熟练工在低价的时候，就是优势。", " \r", " reCAPTCHA ？", "那应该做个人肉打码的平台呀...  \r", "分分钟走向人生巅峰", "打码兔太坑\r", "打码兔识别率并不高\r", "从其机制来看，举例，如果是 4 位的码\r", "其应先机器认别，如果出来的结果是 4 位的，不管对错，他都会扣钱，他认为，他是对的，如果你纠正，会扣你的双倍钱，其纠错上面有说明\r", "如果不是 4 位的，这时想是人工识别，正确率就很高。\r", "\r", "如果是 ts 可以认别，并有很高的识别率，还是直接 ts 识别，打码兔会坑的很", " 有反馈接口的,你可以反馈错误,然后这一条就不扣钱了", " 你别说，曾经有个网游的自动刷怪挂机脚本还就是你这思路，把无人操作时遇到的验证码转发给在线的其他人。", "这个图简单啊，先 opencv 把噪点去掉，然后二值化并切分成单个字母，用 tesseract 逐个识别就行", "用过次世代验证码识别，其实最高效的还是用打码平台", "很早很早以前，互联网上流行一个软件，输一个验证码出一个不可描述的图片。。。", "  \r", "\r", "我就順路問問去年更新的這個 reCAPTCHA 黑科技是不是依然無解？", "楼主图里的验证码，可以完美识别。但不是什么 ocr 算法，而是专门针对此的验证码破解算法。这种简单的验证码，编写针对性的算法，准确率超过 90%，教程网上就有。\r", "也有专业的软件用来生成算法。只要你会用，图里那种低级验证码都能搞定。\r", " \r", "\r", "至于你想要的通用识别算法。。就是随便一个网站的验证码，不经任何处理，丢进去，然后就出精准的文字。。。这也是大家梦寐以求的。\r", "等哪一天，这算法真的出现，而且开源免费发布，个人 PC 就跑得动。。。。\r", "\r", "那时候网上也就看不到验证码了。", " 同用的这个软件. 一般验证码基本都能过了.", " 求分享软件名", "这.. 楼上都没玩过网游吗. 网游里面为了防挂机, 防刷作的验证的. 都有专门的外挂 配合识别软件.\r", "\r", "大概按照识别难度和题量来收费的\r", "比如四位汉字就比纯数字贵几倍\r", "\r", "具体参考 火眼答题, 好爱答题... 全是人工的.", " ［对方就是采取众包把图片发给后台人员人工识别了］人力突厥，国内都是这样干的吧...\r", "\r", "最近被小米推起来的 讯飞 不知是这么搞的，机器学习？或者是更高级的众包平台？", "记得亚马逊很早也推出过人力 API ，后段都是一群人来做事，就是针对当前机器解决不了的问题， API 使用价格也不是太贵。", "题主如果想花点功夫的话办法倒是挺多。第一种前面也讲到了，降噪切割，上 svm 或者 netual network 。你这个验证码没有粘连也没有干扰线什么的还是比较好切的。第二种基于端对端的 ocr 识别，前面的楼层也讲到了找出生成这个验证码的算法，但是如果你可以找到生成验证码的算法还是推荐直接上 deep learing ，自动生成样本跑出 10W 的样本如果运气好一些收敛了还是能跑出模型的，识别率基本在 95%以上，见 ", " 。其实验证码复杂到一定程度再花时间和精力就得不偿失了，也许你花一个星期日了验证码，别人再花了两个星期改了验证码......这时候如果不是基于学习的目的的话，还是上打码平台算了，不然两方的程序员都会搞到吐血哈哈。", "R9 @", " \r", "你的想法, reCAPTCHA 很早就在做了吧, 利用大数据概率来判断用户输入是否正确. 最后的大数据又来帮助真正的识别车牌, 识别图书."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>尊敬的用户：</p>\n<p>您好！网易视频云互动直播公测正式启动，有需求的用户可直接在官网申请互动直播公测。小编温馨提醒：大家也可以在网易视频云官方微信进行快速注册，并在电脑端申请开通，我们真诚期待您的参与。</p>\n<pre><code>                                                                   网易视频云\n                                                                   \n                                                                   2016 年 11 月 9 日\n</code></pre>\n<p>在 9 月份的网易云战略发布会上，网易视频云 CTO 邱似峰首次对外表示将上线“互动直播”功能。一时间引发了行业内对“单一直播模式”的局限性的讨论，业内专家直言互动直播将开启直播行业的新时代。</p>\n<p>目前，网易视频云的官网上也已上线了互动直播的公测，行业期待已久的互动直播正式开放给具有互动直播需求的用户。</p>\n<p>一、网易视频云互动直播的优势在哪里？</p>\n<p>目前，我们已经对外公开了互动直播的部分优势功能，诸如端到端延时低于 200ms 、卡顿率低于 5%、抗 800ms 网络抖动力等等。就目前市场上大多数直播云服务来说，单一直播的延时在 1-3 秒的范围内，而网易视频云互动直播的延时低至 200ms ，又是如何做到的呢？</p>\n<p>网易云技术专家吴桐介绍到，传统的互动直播在主播端将主播的声音和观众的声音做混音，并将主播与观众的画面做视频合成，最后将混合的声音和画面推流到 CDN 流媒体服务器。这一解决方案的优点在于互动实时性高，且实现起来比较简单。但带来的直接问题就是主播端带宽压力增大，尤其是连麦互动时主播端的带宽是正常直播的两倍，根本吃不消。</p>\n<p>而网易视频云采用了更适合移动端互动直播的架构，主播端不再直接推流到 CDN 流媒体服务器，而是基于实时音视频通话系统，由实时音视频的中转服务器转发给互动直播服务器，再由互动直播服务器处理后推流到 CDN 流媒体服务器。这样既实现了多人互动直播，又继承了单向直播同样的推流能力。</p>\n<p>值得一提的是，网易视频云还针对互动直播混流输出等功能，即多路音视频云端自动混音，替代终端处理，从而降低带宽成本，减轻终端负载。而针对直播网络中常见的网络拥塞问题，网易视频云则通过自研的 Dawn 协议很好的进行了解决。</p>\n<p>二、我们的互动直播适用于哪些场景？</p>\n<p>目前，网易视频云的互动直播对在线课堂、电商采购、娱乐社交和专家咨询等四大场景都有完整的解决方案。</p>\n<p>1 、在线课堂。网易视频云推出互动直播后，将教育直播从传统的远程教育带入到一对一、一对多、多对多的实时互动直播模式。再加上网易云课堂、中国大学 MOOC 等产品积累的行业经验，网易视频云针对 K12 、外语教学、技能培训、公司培训等提出了适用于在线直播课堂互动的解决方案。</p>\n<p>2 、电商采购。受单一直播模式的限制，以往电商直播的形式缺少与观众有效的互动，在销售转化率、用户活跃度等方面并不乐观。网易视频云针对产品展示、电商导购、跨境采购等场景推出了互动直播解决方案，更加有利于电商直播的升级。</p>\n<p>3 、娱乐社交。移动互联网的发展、智能终端的普及和资本的热推，使得娱乐社交成为直播行业的红海。但单向直播在很大程度上限制了主播和观众的互动，网易视频云解决了互动直播对带宽和终端处理能力的严格限制，适用于娱乐互动，如秀场互动、社交互动、明星粉丝互动等。</p>\n<p>4 、专家咨询。相比于泛娱乐直播，医疗、理财、证券等被视为直播的蓝海，而这些垂直领域对直播的稳定性、互动方式、画面质量等有着更苛刻的需求。网易视频云的互动直播广泛适用于咨询类直播，如在线医疗、证券理财、留学移民、升学就业指导、培训答疑等。</p>\n<p>目前，网易视频云互动直播公测通道已经开启，有互动直播需求的开发者、产品经理、创业大咖都可以在网易视频云官网上申请公测，申请通过的用户可以免费试用 30 天。在这个视频直播趋势日渐火爆的时代，互动直播不只是对视频云服务的完善，更有可能开启直播的新时代。</p>\n</div></div>"], "reply": "1", "tittle": "重磅消息：网易视频云互动直播公测通道正式启动", "comment": ["以前脑洞过互动直播网站有什么应用，不过我是渣渣一枚，没有技术，做不出来。"]},
{"content": ["<div class=\"topic_content\">LNMP 环境, PHP Form 下创建一个 input 和 button.\r<br>\r<br>在 input 中键入指定字符串  ( 新生儿系列 )\r<br>点击按钮就会出现长时间的加载,然后报错 502.\r<br>\r<br>如果给这个字符串添加一些符号,比如_#$%^&amp; 就是正常的.\r<br>或者改变文字的排序,例如 系列新生儿等 也是正常的.\r<br>\r<br>请问我该怎么排查这个奇葩的问题?</div>"], "reply": "16", "tittle": "如何排查指定字符串提交出现 502 的情况?", "comment": ["502 是不是你的 PHP 崩了。。看看日志嘛", " ....紧张我都忘记有日志这个东西了,多谢.......", "日志没有什么可以用的信息看到.............", "断点调试不会？", "502 ，如果 PHP 能执行不是代码错误的话，我一般是在 PHP 中每一行输出一个数字，最后根据数字排查哪一行后出错。", " 来试试断点调试？", "指定字符是什么", "这么严重了", " …一共就 5 行代码， form 占用 2 行 input 一行 button 一行 phpecho 一行", " 服务器怎么断点调试", " 发代码就好了", "我建议先好好阅读一下 PHP 的文档", "线上调试？你的开发环境不能断点调试吗？", "不会断点你不能直接\r", "var_dump();\r", "die();\r", "这样么", "nginx 错误日志看下", " 只有 5 行代码,你觉得我放哪里合适."]},
{"content": ["<div class=\"topic_content\">主要考虑到连接的可靠性 /安全性\r<br>\r<br>其次是安装 /部署的方便程度\r<br>\r<br>应用场景：访问内网 NAS ， Web Server 之类的\r<br>\r<br>群晖的 QuickConnect 只中继了群晖自己的 web 服务，并不能转发局域网内其他机器／端口</div>"], "reply": "37", "tittle": "在没有公网 IP 的情况下，最佳的访问内网服务器的方式是什么", "comment": ["ngork 花生壳内网版 实际都是第三方服务器做转发。", "可以考虑一下用 ssh 的隧道咯", "n2n vpn", "ssh", "网络通,10 映射,一年 59 元,不限流量", "ngrok 官方服务可靠性很不错，我连接了 N 天从未断过，只是速度慢了点，毕竟墙里没布点。", "广告  ", "  \r", "\r", "如果是 Windows 的 Web Server ，可以考虑使用敝司的产品： ", " ，基于 STUN （ ", " ）的内网穿透，对于绝大多数 NAT 类型，双方都是点对点加密直接传输，不通过中转，适用于封闭情况下的内网访问。\r", "\r", "缺点：只支持 Windows 平台，双方都必须安装软件。", "这个问题我都见过几次了，难道 V2EX 的搜索功能挂了？\r", "\r", " 不中转怎么连的？", " 啥， V2EX 的搜索页面能打开？#滑稽", "ngrok.cc", "DDNS", " 应该是 udp 打洞吧", "github 搜 frpc", " 目标没有公网是连不上的，不管怎么打洞，除非用中转", "frp 的特权模式，然后写个脚本保证运行", " 赞同，如果防火墙是最严格的类型 Symmetric NAT ，只允许内部主动发起连接并且回程数据必须是同一外部主机的同一端口的话，即使用 UDP 打洞，也得是一方有固定公网 IP ，如果双方都在 nat 后，并且外部是 Port Restricted Cone NAT 就没办法实现，就算借助第三方也不行，只能走隧道穿透。\r", "然而出于安全考虑 Port Restricted Cone 类型比较常见，即使能打洞也很繁琐.\r", "而我测试了一下自己是在 Symmetric NAT 之后，如果不手动做 nat 映射，几乎很难让外部直接连接。", "买了个花生棒还没玩...摆那儿一个月了", "弄公网 IP", " 专家[握手]", "ngrok 配置比 frp 复杂。建议用 frp", "  Symmetric NAT 也有相关打洞技术的，关键就是猜对方映射端口，双方互相猜。如果网关映射端口有一定规则，猜测成功率会增加不少。", " 没有公网 IP 不是问题吧。\r", "还是你说的是没有公网连接？？", " 你说的“绝大多数 NAT 类型”应该不包括移动宽带吧。。。 我这里的移到宽带就没有公网 IP ，也没法通过 NAT 打洞，不知你公司的产品能否应对打洞的两端都是移动宽带的情况？", " 移動用 SSTP 或 OpenConnect 可打洞.", "\r", "为你的计算机生成公网 ip, 用 ifconfig/ipconfig 可以看到", " 阿里云节点。", " 移动宽带的确有问题，尤其是前段时间部分地区的移动宽带出现随机丢弃 UDP 数据包的情况， STUN 探测都无法完成。。。", " 查了下， Symmetric NAT 要求成功建立连接，并且内部外部 2 元组都不能变才能成功。你确定两边都是 Symmetric NAT 可以盲穿？我记得是不可以。剩下的 Port Restricted Cone 也是要求成功连接过一次，感觉也是不可以。剩下的所有类型 nat 均有打洞技术。", " udp 没有“成功连接一次”这个概念。  恩，这个不保证成功率，但是现实中是有相关技术而且有所应用的，基础就是相关网关产品打开的端口不是毫无规律的。", " 你错了，我指的成功连接过一次是指，内部发起头个连接，防火墙以相关的 2 元组参数，建立 nat 转发为基础。无论如何，一个外部连接在非内部发起的情况下，不可能完成对内的连接。", "SSH 隧道\r", "安利一个 natapp ，自己调试微信公众号使用过，感觉还可以", "  其实有个中心服务器用于获取双方 ip ，然后双方互相猜端口发 udp ，刚好碰到对方防火墙映射端口与发送端口一致就算成功了，现在的问题就是怎么提高猜测准确度，而有些网关设备打开端口有一定规律（比如递增）等，所以有一定成功率。", " 我不是专门研究防火墙的，也许可行，只是这种碰撞发生的几率目前还无定论吧？而且这已经和贴主的要求相悖了，可靠 /安装部署方便。我在 1 楼提到的方案都是成品。隧道中转技术现在是很成熟可靠的。", "去工信部的网站投诉，搞个公网的 ip ，哈。", " 和题主说的无关，只是探讨下。"]},
{"content": ["<div class=\"topic_content\">新改版的 PC 端首页我怎么看都觉得是前端直接写出来的</div>"], "reply": "42", "tittle": "你们觉得京东有设计师吗？", "comment": ["还好吧 感觉比之前的清新了一点点...", "新首页是深圳凹凸实验室设计开发的，我觉得比之前的好", "京东肯定有设计师，我倒是感觉淘宝没设计师，乱糟糟一片", "比之前的好和比淘宝的好", "打开淘宝一看，好像确实更喜欢现在京东的多一些，四四方方，规规矩矩的感觉", "我倒是觉得亚马逊没设计师……", " 淘宝应该是特地保持目前的布局设计，现在淘宝也就是个导流的工具罢了。", " +1111 ，哈哈，我也是这么认为的", "京东比淘宝好看多了吧……", "淘宝怎么看怎么像钓鱼网站", "看楼主第一句话没理解，后来一想，对啊，设计师和前段 er 应该是分开的。。。捂脸~", "京东金融肯定有", " 禁用 JavaScript 打开亚马逊试试，哈哈", "京东新版首页看起来挺舒服的，比淘宝的好", "只有我在看京东的新首页时受到了惊吓吗 ... 没有了熟悉的红色 ... 导航的字体也变小了 ...\r", "\r", "有那么一瞬间还以为自己手滑跑到什么山寨网站去了 ...", "亚马逊设计的妙处在于：即使你不会法语，不会德语，不会西班牙语，一样可以去这些国家买东西。", "现在的京东样式蛮好的啊\r", "\r", "我一直不明白的是，为什么京东桌面版主页不做自动聚焦搜索框？每次都要我手动点击。", "京东的页面对色彩把握的很好,给人清爽的感觉\r", "淘宝则是花花绿绿的,看的很烦", "淘宝的不光乱，打开的还慢。", ".....\r", "\r", "站在一个修图工的角度上看，京东的设计确实很业余，只能叫图文排版，不能叫设计。我都怀疑京东有没有完善的设计标准。\r", "\r", "淘宝的设计带坏了整个国内 web 的设计风格， 95% 以上的站点 banner 都是淘宝风，不信你去搜搜看。\r", "大家都是修图工。。。大鸭梨之下没有人会花一个礼拜的时间做一个 icon , 而且你的一张 banner 几小时以后就要换下。\r", "\r", "当年新闻网站因为资讯匮乏，拼命的往“丰富”做，让人看起来这网站“大”的恶习遗传给了现在的电商网站。你一个首页不做个 2000 像素高都不好意思。。 \r", "\r", "在这样的一个时代，电商就是在商言商，和艺术没啥关系，变现永远是第一位的。", "缺少了满屏的大姨妈色让我有些无所适从。。", "新的京东页面很好看啊", "有没有设计师我不知道，一定没有运维或者架构师，到现在连全站 https 都没做好，即使手动访问 https ，部分域名访问还是有问题，作为一个天天被长宽劫持的用户，我就想问问京东，你们对于劫持都无所谓吗？自动加个推广小尾巴，你们不是要给钱的吗？", " 我好想黑进运营商的交换机，然后把他们的尾巴换成我的小尾巴，我觉得已经有人在这么干了吧！", " 淘宝首页打开一次貌似要 n 个接口，这已经是很快了…好像还有文章介绍呢", "  你好，你是從哪裏知道的呢？", " \r", "同感觉。淘宝一开手机网页端，无数弹窗，然后手机卡住，", "我觉得百度没有。", " 不是没做好，只是没有强制使用 HTTPS 。", " 因为我和凹凸对接过", " haha 转达给金融这边的社稷师。。", "我就是来看看回复是否消耗积分", "京东金融的设计还是不错的", " firefox 下面有插件 强制全站 https ，我也是长城宽带，装了这个没有被劫持过了", "你问这种问题，证明你不是个资深设计师。", " 这话说得，楼主都不一定是设计师", " 谢谢,关注了它们.刚好今天推送了一条消息.", "港真 这次 jd 突然这么一弄我有点看不懂的感觉。 有没有设计师现身说法.. 说说这次 jd 为什么这么改？", " @", "  我试过使用类似的插件强制 https 访问，遇到过部分子域名不正常，具体哪个我已经忘了，反正就是有些小问题，最后就放弃了。感觉全站 https 这东西现在应该是主流了，特别对于购物网站来说更应该是，只是京东没想过去做而已。", " 我用的是 HTTPS EVERYWHERE ，京东完全没有啊。", "呵呵，看到楼上吐槽亚马逊，其实亚马逊的体验比京东淘宝都好，深的软件开发精髓", "新版比原版好啊"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近感觉生活需要一些变革，目前已经写了 10 年代码，也许是想休息下，或者是想试试别人的生活，特别想要一个 GapYear 。\n有个蛮有意思的想法，用 1 年时间去体验 12 种职业，包括：农民、幼儿园老师、餐厅服务员、工厂流水线工人、社会工作、街头艺人等等，想想就很有趣。</p>\n</div></div>"], "reply": "10", "tittle": "想要个 Gap Year", "comment": ["暴露年龄（其实 10 年好像也没多久", "感觉半年就够了", "我 gap 了两年，现在上班一年了，天天极度厌班", "啥东西？卖衣服？远程上班？", "窝也想以后这样", " 远程上班就不叫 Gap Year 了", " Gap 是好，可是担心 Gap 一年，之前积累的代码手艺就全丢了，而且状态也全丢了。到时候哭爹喊娘，也回不去互联网时代了", " 想回去，就别走开", "我也想 gap ，不过先存钱 100 万给家里人用", " 那是什么"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>11 月 7 号，国务院发布了一篇名为《关于实行以增加知识价值为导向分配政策的若干意见》的政策文件。从政策上鼓励在职科研人员兼职兼薪，我给大家画画重点：</p>\n<ol>\n<li>允许科研人员依法依规适度兼职兼薪<strong>（允许兼职）</strong></li>\n<li>兼职行为不得泄露本单位技术秘密<strong>（兼职不可以做违法的事情）</strong></li>\n<li>意见的出台旨在加快实施创新驱动发展战略，激发科研人员创新创业积极性。<strong>（鼓励兼职是为了鼓励创新创业）</strong></li>\n<li>该意见适用于国家科研机构、高校和国有独资企业（公司）。其他单位结合各自实际，制定具体收入分配办法。<strong>（不仅是国企，其他企业私企等等也鼓励兼职兼薪）</strong></li>\n<li>高校教师经所在单位批准，可开展多点教学并获得报酬。鼓励利用网络平台等多种媒介，推动精品教材和课程等优质教学资源的社会共享。鼓励高校教师利用网络平台等媒介，推动教学资源的社会共享。<strong>（鼓励使用兼职平台进行。）</strong></li>\n</ol>\n<hr>\n<p>实现网作为一个专业的互联网人才的兼职平台在得到这样政策鼓励消息时，我们非常开心。</p>\n<p>一方面，兼职这件事情在各行各业，软件、财会、物流各个行业已经普遍存在。</p>\n<p>另一方面，兼职把社会闲置资源用起来了，不但满足需求方企业的需要，也让供给方的生产效率提升，总体是增加了社会生产力。</p>\n<p>总之，兼职只要不违法，都是被鼓励的。</p>\n<p>最后来个广告，实现网（ <a href=\"http://shixian.com\" rel=\"nofollow\">shixian.com</a> ）程序员、设计师、产品经理等互联网人才专业的兼职平台，让兼职更安心。欢迎来实现网兼职挣钱。</p>\n<p><a href=\"shixian.com?f=v2ex\" rel=\"nofollow\">访问实现网</a></p>\n<hr>\n<p>新华社报道原文：</p>\n<p>新华社北京 11 月 7 日电  近日，中共中央办公厅、国务院办公厅印发的《关于实行以增加知识价值为导向分配政策的若干意见》（以下简称意见）指出，允许科研人员和教师依法依规适度兼职兼薪，包括允许科研人员从事兼职工作获得合法收入和允许高校教师从事多点教学获得合法收入。</p>\n<p>意见明确，科研人员在履行好岗位职责、完成本职工作的前提下，经所在单位同意，可以到企业和其他科研机构、高校、社会组织等兼职并取得合法报酬。鼓励科研人员公益性兼职，积极参与决策咨询、扶贫济困、科学普及、法律援助和学术组织等活动。</p>\n<p>意见强调，科研机构、高校应当规定或与科研人员约定兼职的权利和义务，实行科研人员兼职公示制度，兼职行为不得泄露本单位技术秘密，损害或侵占本单位合法权益，违反承担的社会责任。兼职取得的报酬原则上归个人，建立兼职获得股权及红利等收入的报告制度。</p>\n<p>意见指出，高校教师经所在单位批准，可开展多点教学并获得报酬。鼓励利用网络平台等多种媒介，推动精品教材和课程等优质教学资源的社会共享，授课教师按照市场机制取得报酬。</p>\n<p>意见的出台旨在加快实施创新驱动发展战略，激发科研人员创新创业积极性，在全社会营造尊重劳动、尊重知识、尊重人才、尊重创造的氛围。</p>\n<hr>\n</div></div>"], "reply": "13", "tittle": "政策性鼓励兼职：国务院最近《意见》允许科研人员兼职", "comment": ["请结合 ", " 阅读。", "鼠标一放上去就导致字体变大变小的效果很糟糕，至少是在我这里这样 :P", "厉害的人都被抢，平庸的才上兼职平台", " 哪里的页面？", " 只要没有使用公司资源，没占用工作时间是不被劳动合同约束的。", " 厉害的人不缺钱，关键是，不是所有人都那么有钱，所以需要做兼职。", " 首页点击“浏览人才”，鼠标放到一个人上面有一个放大的效果。我用 Chrome 54 下面的效果很糟糕， IE 下效果尚可接受， Windows 8.1 。", "厉害的岂止是简直都自己开公司了", " 适配问题，我这边 mac 是正常的变色效果。我反馈一下，谢啦，有产品经理潜质的小伙伴。", " 分人，我们这有些 10 多年经验技术也比较牛的在做兼职，比较喜欢稳定的。创业毕竟是少数人。", "估摸着以后国内研究生就更不是研究生了", "提高工资吧", "还不就是计划经济管理那一套"]},
{"content": ["<div class=\"topic_content\">我买了几本书了，除了一本介绍 PHP 新构思的书看的比较起劲，其他的书，买回来看几眼就扔一边了！\r<br>\r<br>虽然知道从头读到尾会对自己有很大帮助，但是没耐心啊！\r<br>\r<br>越来越感觉自己是一个根基不断被啃食的漂亮大楼！</div>"], "reply": "1", "tittle": "大家买书以后，有多少是扔一边几乎不看的！", "comment": ["合适的阅读环境很重要。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我碰到过的，访问一个链接之后，某些浏览器厂商会过去看看，如果页面用了统计工具，相关爬虫也会过去看看。</p>\n<p>路由器厂商不知道有没有这个闲心。</p>\n<p>今天又碰到一些奇怪的，上海的一些 ip 去访问一下。</p>\n<p>URL 是动态生成的，所以不存在其他地方的点击，只能是我在访问的时候，被监视了。</p>\n<p>主机商那边应该也可以随意监控，这次怀疑是他们，但是他们说不是。。</p>\n<pre><code>180.153.81.203\n180.153.211.172\n180.153.214.188\n180.163.2.119\n140.207.124.105\n101.226.33.216\n101.226.33.203\n101.226.33.205\n101.226.51.227\n101.226.125.16\n112.65.193.15\n112.65.193.13\n</code></pre>\n</div></div>"], "reply": "8", "tittle": "我们访问一个链接，有哪些地方可能泄露信息（被监控）？", "comment": ["lz 用的什么主机访问，有杀毒程序么？有设代理么？ 有些浏览器不会是中转连接么？（他们访问你要访问的地址，而你连的实际上是浏览器的服务器--即代理）", "打开一个网页这个网页有跨域的 cookies 访问，那么那些相关的网站就能知道你从哪个网页来，去过哪里，比如 baidu ，比如那些广告网站；跟你客户机或者跟网页主机同一局域网的主机都可以得到你的访问信息；浏览器会将你访问的网址报告给某些地方； 360 之类的也会记录", "还有伟大的在无时无刻的工作着", "从输入链接的域名（或类似行为）开始，到关闭电脑，所有环节，每个点击，每次输入都可能泄漏信息。", " 普通 Win10 电脑，没有单独安装杀毒软件。 ss 没有开全局模式。谷歌浏览器，装了一些插件，不过应该也不是这个问题。\r", "\r", "这些 ip 很明显是有组织有预谋的，所以挺奇怪的", "我怀疑搜狗和迅雷，因为我生成了一个特殊的文件地址在浏览器打开和别人下载。然后我的日志就出现了这里面的一些 ip", "如果不用 Https ，那么整个 request 理论上就是开放的，中间人可以直接截获分析，安全性做得不好的网站，中间人获得你的 session ，可以 replay 你的行为。\r", "\r", "另一方面，你访问的每一个地址最终都会指向具体的网页，网页里有内容，这是你的隐私，中间人得到大量用户访问数据，就可以分析出来你的喜好。", " 是的，楼主这似乎是被中间人得到链接然后重新访问？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>php 变量通过名只能我们就知道首先变量，是在程序执行期间，可以变化的量。</p>\n<p>1.那变量是干嘛的呢，用变量就可以来保存我们值，这就是变量，那么我们接着来看，知道了变量是什么，以及它能干什么，我们再来看一下我们如何来声明一个变量，及如何使用变量。</p>\n<p>2.首先看变量的声明，那声明一个变量，在 php 中是以$符加上变量名称，这样就声明了一个变量，但是在这有几点需要注意的，跟名称有关的首先第一点，变量的名称以字母或者下划线开始，后面呢可以跟上数字、字母、下划线，这样的形式。第二点需要注意的，我们的名称不要包含特殊字符，什么较特殊字符呢？空格啊、叹号、*号啊、问号啊这样的都是我们的特殊字符。</p>\n<p>3.第三个我们尽量遵循变量名称含义明确，什么意思呢？通过这个名称我就可以看到变量保存的是一个什么值，这样的形式，就举个简单的例子；我给大家做一个自我介绍，大家好我叫 key 我今年这个年龄 12 了，我的工资是 3458 块 9 毛 6 ，我没有结婚，那接着我想保存我的名字的时候你可以起一个变量名叫 username ，来保存我这个 king ，那接着我想保存我们的年龄的时候，你可以起一个变量名叫 age 来保存这个年龄。</p>\n<p>4.那在接后呢我们还可以来保存我们的工资， 3458 块 9 毛 6 这样的形式，那通过这个名字呢我就知道呢，我就知道你存的是一个什么值。当然你是这些名字我用 A,B,C,D 可以吗？肯定可以，但是最好啊我们一个好的代码习惯，变量名称含义明确，接着再往下我们再起这些名称的时候，最好遵循着一个，驼峰标记法，或者是下划线法，都可以。</p>\n<p>5.那首先看第一个，什么叫驼峰标记法，我们的驼峰标记法也分为小骆驼和大骆驼，那首先什么叫小骆驼呢？我们举个例子，像国人一般都有第一个名字 firstName ，你看到当多个单词合在一起的时候，第一个单词的首字母小写，第二个单词的第一个字母大写，这个就叫做小骆驼。像 lastName 、 zendControllerFront 第一个小写，以后的都用大写。</p>\n<p>6.然而大驼峰呢每一个单词的首字母都大写， FirstName 、 LastName 、 ZendControllerFront ，这是驼峰标记法，你可以选择你喜欢的，接着你也可以用下划线法。</p>\n<p>7.你可以通过 first_name 、 last_name 、 zend_controller_front 都可以你任选一种你喜欢的，你愿意写的一种形式，来写就好，但是在同一脚本中，不能一会用这种小的，一会用大的，这也不合适自己了看着也不舒服。</p>\n<p>8.再往下还需要知道首先我们的变量名称，严格区分大小写，什么意思呢，$a 和$As 这是两个变量，严格区分大小写这一点需要注意，再往下还需要知道，当变量名称重复的时候相当于这个几个变量重新赋值。</p>\n<p>9.当变量名称重复的时候，相当于变量重新赋值了，后面的会覆盖之前的值，这样的形式，那最后呢还需要知道，我们这个 php 是弱类型语言，不像我们 java 、 c 啊，那现在你生命一个变量，一定要告诉它什么类型的保存什么类型的值。</p>\n<p>10.一定是声明完之后，才能使用而我们的 php 呢，弱类型语言比较松散，变量可以不用声明直接使用，这样的形式。我们接着来看说到了怎么生命变量，我们来看几个例子声明一下。</p>\n<p>原文链接： <a href=\"http://www.maiziedu.com/wiki/php/var/\" rel=\"nofollow\">http://www.maiziedu.com/wiki/php/var/</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "PHP 学习之变量", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>求助</p>\n</div></div>"], "reply": "3", "tittle": "如何远程访问家庭中一台服务器的数据库（有公网 IP 地址）", "comment": ["配个端口映射？", "如果是 mysql 的话，创建一个可以远程登录的账号就可以了吧。别的应该也可以。", "家里路由器开服务器的 DMZ ，就可以直接公网 IP 访问\r", "不想开 DMZ 就端口映射。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"\" src=\"http://ww1.sinaimg.cn/large/67016dd8gw1f9n531x3prj20cu06sq4j.jpg\"></p>\n<p>从语气来看，好像运气挺大的。。尤其是最后一句</p>\n<blockquote>\n<p>如果你不同意，也可以取消关注本公众号。</p>\n</blockquote>\n</div></div>", "<div class=\"topic_content\">~~~我看错了~大家双 11 快乐</div>", "<div class=\"topic_content\">责任？如果我有那么大的能耐，发个帖，微软的产品就真的停运了，我还应该觉得自豪。就别 BB 了</div>"], "reply": "20", "tittle": "微信 [小冰] 停运了", "comment": ["只是换个账号“小冰”改成了“微软小冰”", "如楼上所说，只是换个账号。别弄得像个大新闻，还停运！\r", "如同一个公司重组，更换办公地点，通知你前往新址，如果你不想去，就取消业务往来。原来的旧址对你来说将毫无意义。", "天天想搞个大新闻 年轻人你这样迟早要-1s", "不要想搞个大新闻+1\r", "\r", "好奇这种自动帮你关注是怎么做到的……和 tx 交易过了？", "老想着整个大新闻", "老想着整个大新闻,换了个帐号而已", "-1s", "运气挺大，这什么语法", " 应该只是更换了账号主体和名称，所以就自动关注新帐号了", "改名嘛，微软日常", "将来报道上有偏差 你要负责的", "运气很大是啥意思。。", " 写错了", "啥，大清亡了？", "6", " 怨气？", "民国了？", "没听说过啊?无中生有的事情,你再重复一遍,等于你也有责任吧", " 看来楼主并不明白长者的梗", "如果报道出了偏差，你们可是要负责的:V"]},
{"content": ["<div class=\"topic_content\">想支持下作者，无奈计算机外文书籍动不动就上 500+， 600+，有木有双 11 打折的地方？</div>"], "reply": "46", "tittle": "从哪买正版外文书？", "comment": ["…… 本来国外的书就很贵的~", "国内引进的叫影印版 也是正版授权 只不过量超级大所以就便宜", "必须亚马逊哇", "这转了不知道多少手，也不知道作者能收到多少\r", "不如直接找博客有没有捐款地址，或者他参与或者支持的开源项目", "amazon\r", "没办法，书就是贵。\r", "医学的，计算机领域的，看定价就能哭。", " 在线阅读", "外文图书基本都要经过中图进口才能在大陆地区合法销售，楼主可以试试港台地区。", "正版外文书？京东直接买英文版就好。虽然是引入的", "書的話 amazon 買不到的我才會考慮去別的地方買，不過很少遇到", "外文书真的好贵，一小本的时间简史都 80 元", "是 ", " ，美亚吗？买过能不能说下，怎么付款，可以直邮中国吗？", "lz 的意思是 像京东 中亚 当当那样常年打折 还带优惠劵促销的那种平台。肯定是没有， hardcover 随便就上千，卖不出不就等着吃土。也就动物园常折扣，然而好书并不多，而且高清 D 获取太容易。", " 使用 VISA 信用卡,勾选 Free shipping", " 香港哪有卖？过两天去看看", " 国内银行的 visa 可以吧？", "kindle 中亚有很多啊。", " 京东外文也不打折啊", " 是啊，无奈 Amazon 不打折啊", " 我看中了几本，每本都 600 左右。都买有点承受不起", " 移动端体验怎么样？", " 建议您先在网上搜集一些资料，书店好找，打不打折就不好说了。", "如果不涉及到版权的话，应该可以找到原版内容 打印出来", "技术类的上 SafariBooksOnline 订阅，觉得贵可以找几个好友共享。更新速度快，还有视频教程。\r", " 需要支持美元的 VISA", " 需要支持美元的 VISA (老眼昏花 @了自己)", "貌似某些转运公司的香港线路都禁运出版物...", "英文原版技术书就是很贵啊 很多小伙伴都是从国内抗动物书出去  国外的很贵 技术书在哪儿买不清楚 如果是英文原刊小说的话 可以在外文书店买 电商平台也有卖的 ebay 啊 什么的 前段时间种草了一本全球限量一万册的福尔摩斯 只在 ebay 上看到了 二手的 还要 500+ 😔", "国外正版书，怎么打都很贵", "原版外文书基本不打折的，对应的影印版倒可以找找，看有没有国内的出版社购买了版权。影印版没有的话，就只能割肉了。", "昨天刚好买了一本，不过是电子书，电子书不至于到几百 RMB 的样子\r", "\r", "之前在线看过一遍，差不多也是为了支持作者才买的。\r", "你也可以上这个网站 ", " 看看，这网站像国外的淘宝，外国人可能会将自己写的东西放上去卖。\r", "不过要辨别一下是否是真的作者卖的。", "\r", "这网站外文书都很便宜的，不知道有没有你想买的书。\r", "全球包邮哦", "我们的教材都是$100 起的，有的可以用电子版，但是有的考试必须用纸质硬皮(hardcover)", "告诉楼主一个省钱省事的办法, 我近三个月看了不下三四本出版书和官方文档, 你参考一下\r", "1 去到资源网站下载 pdf 电子版, 这些网站提供的都是正版 pdf, 带目录, 带封面, 将他们下载 \r", "2.然后上万能淘宝, 搜\"打印书\", 找一家离你近的店, 要求卖方选书面纸(非白纸, 偏黄色, 比 A4 纸薄), A5 大小(地铁上方便拿, 大小很舒适), 彩色封面, 侧身打印书名\r", "\r", "资源站:\r", "1.http://gen.lib.rus.ec/(我用得次数最多, 资源全和新)\r", "2.http://www.salttiger.com/(中文网站, 国内网盘下载速度块)\r", "3.http://scanlibs.com/ (前两个够用了, 这个作为补充)\r", "\r", "我下了不少机器学习和数据处理的书, 按这个方法陆续打印了六七本, 平均每本 25 块(一本 300 页以内, 书面纸比普通白纸贵 3 分 /页). 效果就是, 在地铁上刷刷的把书看得很快, 长期积累下去对自己的帮助还是很大的.主要是因为所看的书时效性非常块, 都是和工作联系非常紧密的内容, 所以一边应用一边刷理解的快, 学的好.\r", "\r", "希望对你有所帮助.", "- Kindle 软件 + ", " ，你并不需要 Kindle 设备也能在 ", " 上买书，然后同步到 Kindle 桌面程序\r", "- ", " 直接购买纸质书，批量买，运费一般划算一点，下单之前看看有没有 used ，也就是二手书，价格优惠不少\r", "- 找人给你从美国代购也行，省点运费\r", "- 国内网上书店里搜“影印版”，能找到不少好东西，但过时的也不少，要注意分辨", " 你会被 Kill 掉的   这网站的人 痛恨盗版 支持 假正版", "亚马逊", "想省钱就影印版。想支持作者直接去给作者打钱。", "美亚买 Kindle 电子书，比纸质的稍微便宜一点点。", "常年混迹美亚计算机和数学教材版块 实话说 即使有折扣也很不给力 是很不给力\r", "建议卤煮尽量买电子书 便宜不少 实在不行可以自己打出来\r", "另外买纸质的话 可以看看二手的 基本上也是半价", "买电子版，推荐 Kindle 版，手机 Pad 也可以看得。", "在亚马逊买影印版", " 我用了 safaribooksonline 快 2 年了, 平时网页, 路上手机, 家里平板, 还是挺不错的,基本上想看的多数技术资料都能找到. 今年新出了很多视频的资源, 内容也更丰富了.", "这种定价明显是坑人的教材，我都是果断盗版没商量……", "计算机外文书籍推荐 ", " \r", "在这个网站搜索就可以了", " 谢谢，我好好看看", " 这位兄弟理解的正版有问题啊"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>线路好像还可以  到很多地方都挺快的</p>\n<p>打算买个 1U1G 的 供着。。。</p>\n</div></div>", "<div class=\"topic_content\">我没有回复次数了\r<br>海外是符合条件的节点，不限配置，流量如果是包月的话最多 5M 。\r<br><a target=\"_blank\" href=\"https://promotion.aliyun.com/ntms/act/overseas20161111.html?spm=5176.8231863.550037.1.pzyhVo\" rel=\"nofollow\">https://promotion.aliyun.com/ntms/act/overseas20161111.html?spm=5176.8231863.550037.1.pzyhVo</a></div>"], "reply": "22", "tittle": "阿里云双 11 海外五折，香港节点有点长草", "comment": ["感觉离玩坏不远了？", " 是呀，但是还是需要一个全局代理嘛 ， HK 节点弄个微屁恩还是可以凑合的，不能干什么都走 proxifier 或者 stunnel 什么的  ，今天装了个最新版 chrome 费尽周折，最后下的离线安装包", " 话说 ss 全局代理 不就解决了？ 平时智能模式 重要程序走 proxifier ， 话说 pro 真的很好用", "香港续费 85 折, 难道买新的才 5 折?", " 原来是指定配置的才 5 折, 好吧, 双 11 又不用花钱了", "乞丐版主机多少钱 至少买几个月 5 折呢？", "是永久五折还是就首次购买呢？", "楼主你有 1000 万吗？（斜眼笑", " 首次购买吧", " 只要是那几个节点，什么配置都是五折，不过最少得包年", "香港的节点毫无性价比可言，如果要低价，就一定牺牲网络，想都不用想。一个网站的速度又不是仅仅取决于 ping ，东京和新加坡的节点一样能满足绝大部分网站的需要啊。 Vultr （ ", " ） DO （ ", " ）性价比都要高得多，除非你的网站一定要架设在国内。", " 实测 vultr 东京和新加坡还不如搬瓦工，移动网络。", "2 核 4G ， 1761.6/年这个价钱也不算贵，不过估计没算带宽", " 搬瓦工太便宜了，不放心。", "CN2 的线路", "因为是 HK 节点用户，所以稍微看了下，这个海外节点的活动，大概是本月二号才上的，估计是临时增加的促销方案，否则估计十月份就开始说了。\r", "\r", "这个不限容量的，带宽按照带宽计费的话，优惠的上限是 5M ，按流量的话，不存在优惠。\r", "\r", "整体价格，还是很不错的。\r", "\r", "活动是新购五折，续费八折。现在五折接下来的一年后到期，价格和现在购买价格没什么关系。\r", "\r", "如果真的确定，好像还有充值返 10% 的代金券，不过充值有几个问题，一个是用充值款买的东西不能退，另一个是充值款不能退。\r", "\r", "我觉得真的 HK 节点比较有价值的是那个高防 IP ，对于用得起的人来说，还是很实惠的。不过一般人就不要看了，好像最高优惠 62 折（不过我觉得还是有点虚高，当然，防 DDoS 似乎没有性价比这回事），作为没使用过高防 IP 的表示，购买的页面提示网页服务需要备案（我其实是有点不太理解有备案的网站为什么还在阿里云 HK 节点用高防 IP 的，当然也有可能是网页懒得注明香港节点不需要，但是因为就算不需要备案也没钱买，所以我也就没问）。\r", "\r", "关于 HK 节点的购买者稍微给个建议，有那么一些 IP 也不知道什么原因是被运营商封锁的，因此发现被封了提交工单改 IP 吧。\r", "\r", "关于阿里云稍微吐槽下，阿里云新增了“独享型”主机（ HK 节点没有这种类型的），其实可以认为所有的其他类型都是“非独享型”的。\r", "\r", "访问速度上，很快，我的是 CN2 的线路， ping 大概全国平均 60ms+，用作网站，以流量计费的时候，网络速度很难成为瓶颈。主要的问题是钱和被别人攻击。\r", "\r", "钱不说，被别人攻击这个吐槽下，因为选 HK 节点是因为没备案，所以防 DDoS 服务可选的公司，大陆目前看只有知道创宇有这个服务，不过用上这个服务， ping 就变成 200-300 ms 了，而且只有付费用户才能用最多 5G 峰值（ 700 元 /月）的防护，然后就回源。（想要不回源每个月对应的套餐就飙到五位数人民币了，当然防护峰值也上去了）然而实际上打出 5G 峰值的 DDoS ，有些时候都并不需要三位数，所以防护这种事情嘛……这里不是说知道创宇不好，只能说 DDoS 的原理，导致守方代价太大了，尤其是没备案的网站，真的想好要守嘛。\r", "\r", "对于某案制度和相关制度，我特别想说：", " 曾经测试过他的最高配置 4 核 8G ，性能是真的牛，磁盘速度能跑到 1.5G...Unixbench 记不清了", " 主要是 SSD", " 现在的 CMS 都多少用一点文件缓存， SSD 很重要。", " 请问一下我看您主要说被攻击这个事情，我想请问下什么样的会被攻击啊？该不会只要在香港建网站都被 ddos 吧", " 这倒是和在哪里建没什么关系。\r", "\r", "招到攻击的网站虽然多是竞争者所为，在私服博彩之类的网站很常见（这种也不太可能架在阿里云上吧），但是非盈利网站比如个人网站之类的被攻击也是常有的事情。", " 非常感谢"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>第三届 CSS 大会由 W3C 中国、 w3ctech 、前端圈联合举办，大会将于 2016 年 12 月 17 日在广州天虹宾馆举办。</p>\n<p>大会迎来了第一位女嘉宾，她是 CSS ICON &amp;&amp; underline.js 作者 Wenting ，她目前任职于 Adobe Typekit ，她对字体也非常有研究。</p>\n<p><img alt=\"Wenting\" src=\"https://img.w3ctech.com/wenting.jpg\"></p>\n<p>她本次将给我们带来“ CSS animation ” 或者 “ CSS: The secret drawing tool ”的演讲主题。</p>\n<p>可以访问大会网站了解详情： <a href=\"https://css.w3ctech.com\" rel=\"nofollow\">https://css.w3ctech.com</a></p>\n<p>敬请期待！</p>\n<p>本次大会由“阿里巴巴移动事业群”冠名赞助。图灵教育、博文视点提供赞助， W3cplus 、前端 De 早读课提供社区支持。</p>\n</div></div>"], "reply": "13", "tittle": "CSS ICON && underline.js 作者 Wenting 确认出席第三届 CSS 大会", "comment": ["图好像裂了 - -", "前排支持", "想去瞧瞧，最后看到 Alibaba 赞助。算了 不去。", "原来是个女生啊，我一直以为是男的……", "看赞助脑子有坑吧？", " 哈哈，要不你来赞助点？", " 哈哈，不是吧", " 你看不到图？", "赞一个👍", "我听过她参加过的播客....", "图片有防岛链", " 是吗，哪一档？", " 已经加白了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如果我想用 aiohttp 爬取一些 url 的内容存入 mongo ，那是不是 mongo 也要是非阻塞的</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "使用 aiohttp 的一个疑问", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>小弟最近想去杭州工作，硕士 2 年经验，一直做 c++ 后台开发。目前在一家谷歌系的大数据广告公司基础架构组，做的东西涉及并发存储以及算法。在拉钩和内推网上搜了下相关岗位，发现可以投的公司实在太少了。</p>\n<p>想去什么样的组：同事水平较高，公司技术氛围好，薪资 25K+</p>\n</div></div>", "<div class=\"topic_content\">结贴：\r<br>面了若干公司，给最多的是 T, 大约 35 的 package\r<br>最终去了某不加班的公司\r<br>\r<br>\r<br>杭州这边用 c++的项目组还是偏少，建议各位 cpper 多掌握几门语言，这样换工作也方便一点。</div>"], "reply": "39", "tittle": "杭州有哪些不错的公司/项目组在使用 c++?", "comment": ["硕士两年 25k+，阿里和网易么？不确定阿里能不能给到这么高。", " 这两家项目组太多，外人不太了解啊。我是担心如果投了不想去的组，简历被锁了就不能继续面了吧", "还是 c++工资高", "要不起...", "有没有兴趣做区块链开发", " 看人的吧，近期两个换工作的同学拿的 offer 都挺高，一个用 python ，另外一个用 java", " 求细节啊", " 看了下你的招聘帖，用 c++ 写业务逻辑挺浪费的啊", "阿里可以给到，还是看个人能力决定的。面试可以内部流转的，不过过去的历史记录都是可以看到的，比如你哪一方面有欠缺之类的都可以参考。\r", "offer 语言都不同，就不要拿过来用了吧...\r", "可惜我们现在不用 C++，在考虑 rust ，嗯", " 用 rust 去哪里招人啊？", "mark 下", " 所以还没用 XD", "25K 是指平均 12 个月的吗，还是像阿里那样要 25x16", "谷歌系是啥", " 大概差不多就行啊，你们要招人不", " 谷歌中国或总部出来的人创立的公司", " 我不招人，不过我跟你一样的情况，刚跳槽，面试下来，前者基本可以达到，后者几乎很难", " 看了你在论坛里之前的发言，似乎才毕业一年啊。", " 马上要 2 年了，这个不是重点...", " 如果去创业公司应该给多一点，其实本来想问 35 左右的 package", "请问现在待的是什么公司？招应届么？", " 上海某司，上海数据交易中心正在校招，可以去看看", "不知道楼主具体的水平，不过来阿里的话一般两年硕士单论月薪不考虑年薪等福利和楼主的期望有显著差距。", "*年终", " 卧槽，你在上海数据交易中心吗，传说中背景很牛逼的国企", " 就这个情况而言，阿里的月薪大概有多少呢", " 这种情况一般会评级评到 P6, 所以请参考下网上公开的 p6 级别的薪酬范围基本差不多.", " 不在，不过略有渊源", " 感谢回复，本来想问能否给到 35 左右的 package", " 还是看楼主具体的能力哈，我说的只是一般情况供参考 :)", " 感谢！", " 恒生电子研发中心招区块链开发攻城尸，职责是设计开发金融区块链的平台和基础框架，实现各种链逻辑和协议。要求精通 linux ，熟练使用 C++或 Java ，并有 python/go/js 开发经验，熟悉各种安全协议和加密算法，熟悉比特币 /以太坊的运作原理，有相关项目经验加分，熟悉 docker 加分。团队小而精，是由研发中心 boss 直接带，感兴趣的话，薪水你可以在面试的时候根据你的要求谈～", " 感谢回复，没有比特币相关经验也可以试试吧", " 有兴趣的话可以试试，比特币和区块链基本原理并不复杂～愿意投简历吗？", " 简历写好再联系你，要等半个月左右", " Rust 来问我们要人啊~~~rust-china 社区欢迎你……", " 看了下上海数据交易中心，好像是今年刚成立的公司。十一月底才来开宣讲，这个值得好好准备一下吗？", " hi,我回来了。你们那边还招人不？", " 去看看吧，多拿一个 offer 又没什么坏处"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>个推有官方的 cordova 插件<br>\n地址： <a href=\"https://github.com/GetuiLaboratory/cordova-plugin-getuisdk\" rel=\"nofollow\">https://github.com/GetuiLaboratory/cordova-plugin-getuisdk</a></p>\n<p>按照上面的文档安装了插件<br>\n<code>plugman install --platform android --project android 平台目录 --plugin <a href=\"https://github.com/GetuiLaboratory/cordova-plugin-getuisdk\" rel=\"nofollow\">https://github.com/GetuiLaboratory/cordova-plugin-getuisdk</a> --plugins_dir 你的插件目录 --variable PUSH_APPID=你的 appid --variable PUSH_APPKEY=你的 appkey --variable PUSH_APPSECRET=你的 appsecret</code></p>\n<p>然而下一步该怎么做？<br>\n如何在 js 文件里导入 <code>GeTuiSdkPlugin</code> 来使用呢？<br>\n具体的 <code>import</code> 路径是什么？<br>\n求助</p>\n</div></div>"], "reply": "3", "tittle": "ionic2 集成个推", "comment": ["cordova 插件一般都是全局变量，直接用就行了", "自己解决了，\r", "解决思路是 typescript\r", "\r", "`declare var GeTuiSdkPlugin`", "话说 cordova 上面个推就是个坑\r", "看见这个帖子的赶紧换 jpush 吧"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>题主今天看师姐 shell 代码的时候，试着运行了一句命令，代码如下:\nawk '{if(ARGIND==1) {val[$1]} else{if($1 in val)  print $2}}'     $file index_fix.dat &gt;${file%.dat}_fix.dat\n结果 shell 终端上波澜不惊，仿佛什么都没有发生。\nawk '{if(NR==FNR) {val[$1]} else{if($1 in val)  print $2}}'     $file index_fix.dat &gt;${file%.dat}_fix.dat\n正常对比了两个文件$file 和 index_fix.dat ，输出了两个文件都有的行(应该没错吧...)。\n但是这两句指令在 awk 里不该是等价的么？为什么上面那个就挂掉了...</p>\n</div></div>"], "reply": "2", "tittle": "awk 中 ARGIND 变量毫无任何作用，好奇发生了什么会有这种现象？", "comment": ["This variable ARGIND is a gawk extension.", "真有用 awk 的啊^_^"]},
{"content": ["<div class=\"topic_content\">毕业后很怀念学校的 ipv6 网站，主要有一下几个问题\r<br>1 ）资源丰富，特别是学习类软件和资料，还有各种高清电影电视剧。上学那会，没事就看看有啥好的资料没，有的话就下载，一些学术类软件都是直接破解好的，而且基本都保证管用。\r<br>2 ）毕业后买了迅雷年会员，下载速度虽然快，但是资源都是要自己去找，找的资源好坏需要自己去判断去尝试，上班后越来越感觉时间重要，不想花费时间去自己查找和验证软件\r<br>3 ）刚开始都是让学弟学妹帮忙看看，但是他们下载好后，无法传给我，上传网盘这些都需要做流量的，这就很蛋疼了\r<br>\r<br>网上查的访问 ipv6 方法也没成功，想问问 v2 有没有大神知道方法。\r<br>mac 和 win 都行，只求各位大神讲讲方法，谢谢</div>"], "reply": "12", "tittle": "[求助] 毕业后怎么访问学校的 ipv6 网站", "comment": ["自己顶顶", "\r", "教育网运营商赛尔网络的产品。", " 谢谢  我去看看", "ISATAP(科大，清华), 前提是你有公网 IPV4 地址", "4to6 技术呢?", "支持 ipv6 的 vps", "我用 linode 挂过几天北邮人。", "随便一个支持 ipv6 的 SS 呗", "搬瓦工！~", "如果是 六维的话基本无解了", "如果有一台双网卡的机器做代理就好了。\r", "\r", "一个网卡使用 v4 ，另一个网卡使用 v6 。", " 看起来不错啊，不知道有没有人试过"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>“自由工作”是人们给自由职业者贴的标签之一，但是从调查结果来看，尽管自由职业者工作时间长短不一，长时间工作难以避免。另外，在软件开发行业，月薪过万的收入并不高，从这个角度而言，软件行业的自由职业者很难界定为“高收入人群”。</p>\n<p>虽然大部分群体看好自由职业的前景，但在巨大的生活压力面前，很多人对是否坚持自由职业持不确定态度。</p>\n<p>相对的自由与生活压力并存，是自由职业者的真实写照。</p>\n<p>原文链接来自 v2mm 自由职业者社区</p>\n<p>https://v2mm.tech/topic/81/2016年中国it行业自由职业者调查不完全报告</p>\n</div></div>"], "reply": "1", "tittle": "2016 年中国 it 行业自由职业者调查不完全报告", "comment": ["也可以在一早一晚看到这篇报告 "]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://github.com/iamsup/ImportSort\" rel=\"nofollow\">https://github.com/iamsup/ImportSort</a></p>\n<p>代码这样排版看起来会舒服一些，未来会增加 property 排序及 import 去重。</p>\n</div></div>"], "reply": "8", "tittle": "iOS import 文件名根据长短排序工具", "comment": ["如果用的是非等宽字体\r", "#import \"wwww.h\"\r", "#import \"iiiiiiii.h\"\r", "\r", "请问咋办？", " 请问你写代码使用非等宽姿态？", " 请问你写代码使用非等宽字体？", "大神吖... 666... 嘎嘎 ～", "双十一不购物... 就知道写代码...", " 昨儿我们放假休息", " 我只是用了类似 NSString length 的 api 取的长度，你说的这种情况没考虑。"]},
{"content": "", "reply": "16", "tittle": "明天双 11，下周五黑色星期五，还能入手什么 IT 装备？", "comment": ["同问", "Amazon Echo", "应该是下下周吧....黑色星期五是 11 月的第四个星期五....", "椅子\r", "机械键盘\r", "屏幕（一个不够\r", "显卡\r", "飞机杯\r", "充气娃娃\r", "女装", " 0.0\r", " echo\r", " :d)\r", " 充气娃娃 、女装，这俩什么关系", "已入 hhkb ，手已剁，无力双 11", "hhkb ，用 emacs 很方便，买个静音版。", "颈椎治疗仪。", " 显示器有推荐的吗，戴尔 u2415 怎么样？", " 我入了 2717d", "看群晖是不是能再便宜点.", " U2415 前几天狗东特价 等黑五看看", " 我个人用的 u2414 感觉屏幕和 rmbp 差不大！！ 显示效果特别好。", " \r", " \r", " \r", "\r", "今天入了 u2415 ，看看 16:10 怎么样，主要就看网页，写点代码", " 看个人吧 看惯 16:10 就接受不了 16:9 了", " u2415 你值得拥有，早买早享受"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>R.T.</p>\n</div></div>", "<div class=\"topic_content\">看了大家的意见，大部分都是全站静态化。\r<br>有的一台服务器搞定的，你来给我搞吧\r<br>\r<br>-------------------------------------------------------------------------------------------------------------------------------\r<br>\r<br>日活 30W, 按照小说站来说， pv 至少上 300W 以上了。小说站一般都有自己的用户体系，支付体系再加评论回复，点赞等等一般的 web 网站所具备的功能都有，这不都是常识吗？竟然还有人跟我说直接放阿里 oss 的？你说实话阿里 si 不 si 你家开的？\r<br>\r<br>现在已经确定， 30W uv 是最少的了，按 2W 本书算，我们在论论架构的事呗</div>"], "reply": "73", "tittle": "做一个小说网站， 预计后期日活（ UV） 30W， V 友来讨论下如何架构比较好？", "comment": ["20 分钟之前发布的，怎么列表页显示 4 小时 20 分钟前了。。", "等到了日活（ UV ） 30W 再说吧 - -", "直接 lnmp 吧", "不过 uv     30w 这么好做？", "我预测 v 友的焦点会集中在 日活 30w ，而不是架构上", " 初期用户量不比这个少多少， 30W 是至少", "小说？\r", "日活 30w ？\r", "做盗版还是正版？\r", "堆广告？", "版权问题怎么解决？", "有钱，版权问题不要担心，讨论主题重点。。。\r", "\r", " \r", "生成静态 html 文件，往 redis 里一放，全端加个 cdn ， 30w uv 算个毛", "代码写好，查询优化好，做好缓存就行了。 4 核 8G 轻松飞起。不放心再加个 CDN 。", "你倒是先说你打算咋架构啊\r", "想起今天同事说的，他朋友公司的 nginx 配置了强制不缓存，然后问他为嘛服务器负载那么高，咋都不走 cdn 呢…😂", "有钱就找 SA 啊", "插句话，快 2017 年了做小说站都还能有这么大的量？厉害啊", "这点日活还没有到需要研究架构的地步", "千万级左右的 PV 还不至于要特别设计架构，普通的 lnmp 就可以了。何况你这还是浏览型网站，功能简单。\r", "另外既然内容版权不差钱，那服务器数量、 CDN 什么的应该也不是问题。\r", "再加上现在云服务这么多，分这么细～更没问题\r", "建议你多把精力放在业务逻辑的实现和交互、视觉的设计上。", "都是文字，消耗很大？ redis 加 cdn 还不能解决?", "过早优化并不值得提倡", "真心建议先把网站跑起来再说 。", "都没有业务的网站，都是浏览，怕啥", "突然发现 linux+nginx+mysql+python 也是 lnmp", " 印象中这个 P 本来就能指代 PHP 、 Python 和 Perl", "纯静态页。。。 30w 算什么。。。。", "30 万随便弄弄就行了", "30w 单机就行了。", "想做一个追书 APP ，类似追书神器那样的\r", "目前完成了服务端，正在做测试。放在了腾讯云上， 1 核 1G 。\r", "数据演示： ", " \r", "前端渣，后台和用户等功能界面沿用了 ", " 的开源版本\r", "本职 N 线小城镇从事其它行业，收入微薄\r", "所以服务端做成了一个完善的追书系统，希望能有些额外的收入\r", "当然，这里非站长聚集地，就不吹嘘功能了\r", "\r", "正在考虑要不要先做个微信小程序版本\r", "有同好的欢迎交流，微信： donkey", "lnmpa+redis CDN 轻松上 100w uv", " 自己做的吗？什么语言写的", " 是的， golang", "全站静态化，加 CDN\r", "其他动态内容（点击数、收藏、关注、书架 etc ），全部用 JS+API ，后端 Redis+MySQL 即可", "楼主对流量这么有信心。不如跟俺合作， 30w unique view ，我保证每天给你 10000RMB\r", "我需要流量，转化率刚刚的。 ", " 目测是赚佣金的 每天 30w uv 至少你能赚 30w 吧 你才给楼主 1w ？", " 你想多了", "我是来搭车卖云 国内国外都有 欢迎咨询 QQ ：（ MjY3OTA1MTU=）", "你这个问题提上来能指望有什么回复? 我觉得你应该自己先弄一套初稿出来,然后大家一起讨论慢慢改进,上来就让别人给你一个架构,你工资分我多少?", "上这个配置可以扛住压力\r", " ", "30w 很大吗?", "用户没有大量写操作，乞丐版 vps 都能玩转。。 ", " ", "打听一下，３０Ｗ UV,CDN 　每个月大概费用多少钱？预算一下。", "用 golang 写，不用静态，并发都能做到快 1000 ， 30w 真的是太简单了。", "单机 lnmp + cdn 。搞定", "都跑题了，练习楼主重新发个帖子「网站目前日活 30 万，访问太卡，体验不好，请问应该怎么架构一下？可以推翻重来。」", "小说站都是静态的，跑个普通服务器+CDN 就够了，后期扩展也非常的简单简单，所以这个问题你不用考虑的太多。", "根本无需架构，小说网站都是静态页面，随便搞个 CDN 足以", "30w uv 每天赚 1 万？\r", "\r", "我能想到的就是做草榴 2 了。", "不妨放出网址，让大家看看", " 好像有 bug 。比如打开 ", "  里面什么内容都没有~ 难道要先注册？", "  换源就好了。", "是我直接丢静态 CDN 了 ， 配置个缓存规则就行了", "静态化,别无他法", " 应该是正文提取算法的问题，其它源可以，晚上我看下是算法问题还是被屏蔽了", "倒不是鄙视日活 30w 太少 因为我的博客日活只有个位数 但是一秒钟十个请求的量级讨论什么架构。。。\r", "It's like trying to find the greatest ever solution to a problem that doesn't exist.", " 估计是没采集到 或者采集任务还没完成", " 追书神器新版本屏蔽了盗版源  好不容易退回老版本😂   体验下你的这个.", " ", "  设计不错呀，是 bootstrap 吧", "纯静态 30w 甚至都不用服务器 直接存阿里云 oss 上", " \r", " \r", " \r", "现在厉害的小说网站 UV 都能达到 50 来万\r", "譬如：\r", "笔趣阁 ", "\r", "23wx ", "\r", "每天广告费都好几千", " 我这只是演示一下数据，不一定长久哈。正准备做 APP", " 是 bootstrap ，美工渣，哪来的设计啊，准备做的追书 APP ，也在为设计头疼", "爬虫网站吧，哪来的原创和版权", "我觉得系统的瓶颈在于搜索引 和 更新浏览量\r", "\r", "如果你需要统计最近 24 小时浏览量什么的 可以用 influxdb \r", "\r", "考虑横向扩展可以采用 jwt 的授权方式\r", "\r", "其他的还真想不到什么瓶颈", "突然发现在大种花家同样是敲键盘的，码字的和码字母的人收入差距真的是很大吖。\r", "果然还是学好 English 搞海外媒社才是码字反超码字母的正确方式吖。", "先 mark~~~", "建议做好跑路准备 ：）\r", "版权越来越严格\r", "搞电影的进去了好多人吧\r", "做小说的也快了", "充分结合 CDN ，静态 /半静态，一组服务器可以搞定。\r", "而且我用的 LNMP+memcached ……那时候 redis 还没现在这么热", " 目前我们想法一致", " \r", "我当年那个项目比你预期的日活和 PV 都要高\r", "当时架构可以给你参考一下 当时是放在自己机房\r", "\r", "LNMP 中 受限于 TCP 连接数、 TCP 连接开销，前面是四台 AMD 入门 PC 跑 nginx 反代后面的真实 webserver ，实际上直接用 webserver 顶在前面是没问题的，主要是总遇到采集器啥的，产生大量 time_wait 等 tcp 状态堵塞，所以前面我直接二手东组装了 4 台最便宜的 AMD CPU 的机器用来跑 nginx\r", "\r", "真实 webserver 两台双路 X5650 ，并不是单机不够跑，本质是想要一主一备防止服务器故障，既然开着同时有程序部署，就变成两个都在用了\r", "数据库服务器 32G 内存的 X5650 一台，分配 2GB RAM 给 memcached ，剩余充分优化的跑 MYSQL 。另有大量单位淘汰的七八年+机龄的破 PC 包含赛扬 1.7G 啥的统统丢到一个池子里跑全文搜索集群\r", "\r", "全站没生成静态（个人习惯特别不喜欢手动处理 html 文件），前面顶了带缓存的全站 cdn ，书内容页和目录页采用一个 url 只用一次不可编辑的模式，一旦出现编辑就作废原页面，这样全站内容类的压力都打在 CDN 上。我玩这个的时候， CDN 还比较落后，还没有现在满地跑的阿里云啥的，那些传统 CDN 服务商都不给太大缓存空间，隔三差五是要回源的，一个采集器扫过来瞬间爆豆的回源连接，这也是为啥前面顶着 CDN 我还用四个入口机分流的原因\r", "\r", "全站平时跑起来一天近千万 PV （包含被采集）都没啥压力，最大的压力还是在用户系统评论系统上，这些高实时的东西我都是不经过 CDN 直接去刷服务器的\r", "\r", "其实最大的好处，还是当时并没有泛滥的 DDOS 攻击，自己好好的维护站，只要能匹配设计容量就足够了", "楼主哪来的自信？", "厉害.....国内的正版网文..应该被起点和纵横垄断了吧...还能有新人进场?\r", "\r", "佩服", "> 小说站一般都有自己的用户体系，支付体系再加评论回复，点赞\r", "\r", "很多小说站都没有你说的这些", " 「现在已经确定， 30W uv 是最少的了，按 2W 本书算」一开始就预计 2W 本，你觉得能是原创么？不是盗版就是授权，真的有原创网站愿意授权转载吗？", "一看这界面风格就知道是 bootstrap 。。。检查一看果然如此。个人感觉这个界面比较适合后台管理。", "做这样的网站 是不是就是用爬虫 把别人的书 爬过来，整理好 放上去？ 这个不怕别人一把爬掉吗？ 这样的网站看的人多吗？ 30w uv ？ 那至少几万 ip 访问了"]},
{"content": ["<div class=\"topic_content\">我这两年参加了大大小小的技术活动有十几场（非我们公司举办），感概行业办的技术活动越来越多，质量也开始变得参差不齐。\r<br>\r<br>我们自己也办活动好几年了，一直保持小规模，平时大多是和现场的用户沟通反馈，在 V2 上很少直接做调研，上来基本都是发放福利 23333 ，这次不发福利了，今年在北京和杭州搞了两个大的活动，第一次做心里还是有些怯，所以就想问问大家对技术活动的态度，看看参加过的都有什么体验，哪家的什么活动好，感受是什么？\r<br>\r<br>大家可以多说一说，对我们也可以批评哈，毕竟我们一直在做，还想做得更好呢~</div>"], "reply": "36", "tittle": "2016 年参加技术活动是一种什么样的体验？", "comment": ["第一条：好好说话，一味套用知乎体是一种懒惰，更是一种表达能力上的欠缺。", " 上纲上线", "今年主要参加了 sf 的北京黑客松和 iDev iOS 开发会，总体感觉来说，技术上分享太浅，在短短的半个小时左右可讲的东西真是太少了，话题到是不少，但是都没有一个话题特别深入的从头讲到尾的感觉。。", " 你是 iOS 几年了？如果有几个讲的深、有几个讲的新 /宽泛，这样调节会更好？我个人的感受是，如果半天的活动，一直讲的比较浅，总会有受众，讲得深的话题太多，有部分人就听不下去了，这可能与我观察的有关。", "别搞什么大会了，我觉得能组织 20 人以内的小范围讨论会就好了。那种大会为了照顾大多数人，讲的太浅了，大部分都属于入门介绍型的。", " 嗯，确实， 20 人的小讨论我们尝试过，然后发现很多人都比较 shy ……一个话题结束就开始冷场……这样的话，偶尔组织一场倒还好。\r", "另外还存在一个问题是，这个 20 来人的小圈子，是定期组织呢（主题范围基本固定，人是流动的），还是不定期不定方向。这其实对组织者来说比较麻烦，所以国内的很多小组织如 GDG 之类的，慢慢效果就一般了。\r", "你有参加过小范围讨论没，说说呗~", "  大搜车 node.js 分享会感觉不错诶", " 嗯，这个是不错，不过性质不一样", " 我感觉这种分享，还是有一个侧重点比较好啊，比如我半天或者一天就重点讲 2 个东西，要是能够达到一种从入门到精通或者基本使用这个知识点无障碍的程度就可以了，我是这么觉得， ps ： iOS 4 年程序猿", "技术活动 ✕\r", "广告大会 ✓", "同楼上", " 广告，招聘太多。。。", "不以盈利为目的的技术大会都不会差到哪里去", "杭州开发者大会不错噢，有人组队去嘛", " 从可操作性上，再可以扩展为每个议题讲的（总）时间延长、减少议题，这样确实应该可以再小活动上试一试", " 比如哪些？\r", "cc @", " 你这是来给我们打广告的嘛", "好烦“什么体验“这种提问方式", "pingcap 的每周 meetup 还不错，都是非常 hardcore 的分享", "我觉得你们可以找百合网，什么世纪佳缘合作一下啊。参会送个什么会员的，或者免费介绍几个相亲对象。。。。", " 去看了看，确实好像还不错，不过这种性质还是不一样，对外举办技术活动很多要么是为了增加自己的线下用户渗透，增加影响力，要么是为了收入，两者至少有一样是主办活动方想侧重的。我们是前者，所以很大程度要考虑公司的收获有什么。\r", " ……（认真脸", "参加了四月份的 sf 杭州站，抽奖抽到去领奖的时候，摔了一跤 (摔！！！", " 是啊，等你们的广告费哦（", " 哦 我记得你", "我觉得 怀着宽广胸怀来分享技术的话 第一 别收钱 第二 尽可能的找到一些大牛来 要有干货 别瞎扯 参加过携程的 ued 分享 、今年的 iweb 上海和北京，有很多线下 收钱的同时感觉水水哒 除了短期的利益得不到之外 还会让我们开始讨厌组织方（可能圈内很有名）或者说 没那么喜欢了 嗯 刚报名参加了一个收费的线下  下个礼拜去 纯粹是去看人的 。。。上次微软北京见 cto 都没收钱 还干货满满  相形见绌", " 很多地方同感哈哈，那欢迎来试试我们的杭州活动 ", "看到你们这个活动了，好奇你们请了这么多嘉宾，一天时间够分享完毕？", "赞一下 SF(每次参加线下 meetup 都有你们的广告呢 233)    不过讲真  杭州开发者大会是真想去。。。(看嘉宾阵容 目测干货挺多的。)", "友情支持一下。\r", "\r", "我也是 SF 这次北京活动的讲师之一，很用心的准备了内容，方向是 NGINX + Lua 在网络安全方面的应用，有兴趣的确实可以去听一下。", " 好的线下技术活动我们是各种刷脸哈哈，杭州这次的开发者大会确实阵容很强大。话说你现在买票是优惠啊，还有五星酒店的自助餐，很有吸引力的（我们这亏本做的生意 T_T", " 活捉讲师一枚！（激动 ~>o<~\r", "\r", "来给大家介绍一下：\r", "\r", "AlexaZhou 是这次北京 Security 大会的讲师之一， VeryNginx 的作者，项目： ", "\r", "\r", "这次讲的议题是《 Nginx+Lua 技术在网络安全方面的应用》，来看看皂片： ", " 一个嘉宾分享 40-50 分钟，在议题的大方向上分了会场呀，这样可以尽量照顾到多一些的参会的人", " 好像我们办 meetup 不是为了你说的这两个。。。只是纯粹的想分享技术。。。这个 meetup 是严禁广告的", " 所以我说很多 meetup 类的活动和商业性质的不一样嘛，这种一般很多都是技术团队、一群开发者或者个人有能力自发启动的", " 手哥这句话是很中肯", " 这次带着朋友也来参加啊！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>func (c *Client) Do(req *Request) (resp *Response, err error)</p>\n<p>（ c *Client ）加在这里是什么意思啊 // net/http 包中的方法\n初学 Go ，望各位指导</p>\n</div></div>", "<div class=\"topic_content\">- - \r<br>go 中一个文件想要引用另一个文件中的函数怎么写</div>"], "reply": "18", "tittle": "Golang 语法问题", "comment": ["函数定义类型, 即这个函数是定义在某个类型上的。如你举的这个例子，可以使用如下代码调用这个函数:\r", "var c *Client\r", ".......\r", "c.Do(req, resp)", "Do 是 *Client 实例的方法。\r", "```golang\r", "c := new(Client) \r", "//or\r", "c := &Client{}\r", "\r", "c.Do(...)\r", "```", "这就是 golang 的 receiver 啊，为类型定义方法，或者说绑定方法  ", " \r", " \r", "奥懂了谢谢", "我觉得写成这样你就明白了： \r", "\r", "```golang\r", "func Do(c *Client, req *Request) (resp *Response, err error)\r", "```", " 这个解释满分", " 像 C++的 this 指针么。。", "golang 的语法好新奇呀", " 看着有点别扭", " 从 c++角度看，本质就是 this 指针，可以自定义名。", "  恩恩 尤其是从 javascript  java  python 这些语言的角度看 真的很别扭", " golamg 没有类", "这写法～～怎么感觉比 C 还难", "初学 golang 也感觉这语言好怪异", "这是 method 扩展可以加入 Interface\r", "这部分虽然有点绕... 但是很有用啊", "\r", "过 tour 的时候记的笔记\r", "同在学习中，共勉", "up."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"http://www.comparevps.com/\" rel=\"nofollow\">http://www.comparevps.com/</a></p>\n<p><a href=\"https://lowendstock.com/\" rel=\"nofollow\">https://lowendstock.com/</a></p>\n<p><a href=\"http://vps-list.cryto.net/index.php?action=list\" rel=\"nofollow\">http://vps-list.cryto.net/index.php?action=list</a></p>\n<p>基本的硬盘、内存这些可以直接从各个 vps 的官网上爬取到，这些格式都是固定的，好好调试下爬虫还是有可能爬到的。</p>\n<p>但是像年付 /半年付，或者 location 这些，格式是不固定的，很难提取。</p>\n<p>而且（有一部分） location 一般是要登录进去，选择具体的 plan 才会出现。难道这个站长还开发了自动登录并提取 location 的爬虫？</p>\n<p>百思不得其解，求 V 友们头脑风暴一下。</p>\n</div></div>", "<div class=\"topic_content\">我为什么认为是爬来的呢，因为有个作者说他做这个网站用了 2 天，做出来的时候就已经是有几百条信息了。</div>"], "reply": "12", "tittle": "[最便宜 vps 列表] 类网站是如何实现的？", "comment": ["所以你的理解里面这些聚合型的网站都是爬虫来的？", "r#1 @", " 呃，如果不是爬来的话，成百上千个网站……难道是手工的？我真是不敢想象了……", "r#1 @", " 主要是有个作者说他做这个网站用了 2 天，做出来的时候就已经是有几百条信息了。", "如果平时都关注这类信息，做站加进去，两天还加不了几百条数据？", "一个好的网站，是需要时间+人力+物力+坚持。\r", "\r", "当然是手动过来的啦！", "有些聚合网站站长，手里都有 no.1 或者序号一位数的 aff 的。", "网站不错，收下", "我感觉做这种单纯比较并没有太大必要，选择 VPS 或者公有云厂商，放在第一的应该是可用性，其次才是性能和价格，要么， OneAPM 不断告警，整天忙着处理服务器的故障问题，还要不要做其他工作了....", "登陆根本不是问题啊，只要在各网站注册一个账号，完全可以用 webdriver 这样的工具实现自动登陆。", " 对于学生党挺合适的 能用就行 又不太要求太高的可用性", " 不重要的东西还好，但是不建议把太便宜的云服务用在生产环境或者重要的开发环境中", " 对的，那样可能多出来的运维成本是所节省服务器费用的很多倍"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>作为后端程序猿自己写的<code>接口</code>就像自己的<code>孩子</code>一样，尽然制造出来了，那就要对他以后的人生负责到底；<br>\n随着业务的壮大，需要支撑业务接口也越来越多，使用的用户量变大，虎视眈眈的黑客们视机而动，总是在业务中寻找着可以窃取他人利益的入口，所以我们应该多考虑安全性问题，防范于未然。</p>\n<p><img alt=\"安全\" src=\"http://demo.thankbabe.com/blog/images/anquan1.jpg\"></p>\n<hr>\n<h2>场景</h2>\n<p>服务端程序猿根据需求开发出业务相关的接口，用来满足需求中用户和服务器交互的功能，提供给前端或者客户端（ PC 端软件， APP 端应用）使用，\n大部分程序猿在开发接口的时候就仅仅去考虑如何实现业务上的逻辑功能，而往往很少会去考虑接口的安全性问题，\n一般服务端提供的接口都是 http/https 协议的，通过 Fiddler ， Wireshark ， Charles 等抓包工具，可以抓取到请求，然后进行分析，模拟请求，进行并发请求，或者修改信息的攻击。</p>\n<hr>\n<h2>例子：</h2>\n<h4>问题 1. 接口暴露用户隐私信息就相当于在光天化日下裸奔，被看光了</h4>\n<blockquote>\n<p>描述：程序猿在做业务接口的时候往往没有保护用户隐私的意识，把用户的隐私信息暴露在外面，一旦被人利用起来会给用户带来麻烦，同时被发现会降低平台的信任度；</p>\n</blockquote>\n<h4>防：</h4>\n<ol>\n<li>用户隐私数据加密，加*号，如用户的相关数据的 JSON 中有用户手机号，用户邮箱，支付账号，邮寄地址等隐私数据；</li>\n<li>用户请求接口时需要对其隐私参数加密：如用户登陆请求登陆接口，需要将用户密码进行可逆加密，以免接口被恶意代理捕捉请求后获取明文密码；</li>\n<li>分享出去的地址中不要用明文的用户 ID ，或者用户登录的 token</li>\n</ol>\n<hr>\n<h4>问题 2. 接口暴露敏感信息，就像把钥匙插在钥匙口没拔掉一样，只要你会开门就能进去</h4>\n<blockquote>\n<p>用户参与活动的数据 JSON 集合中不要有活动相关业务逻辑的决定性的数据,如：竞拍出价活动，出价唯一最低者拿奖品，结果获取出价的接口暴露了所有出价的价格统计结果。</p>\n</blockquote>\n<h4>防：</h4>\n<ol>\n<li>数据中需要将敏感字段,或者对业务有着决定性作用的字段中的部分字符串加*;</li>\n</ol>\n<hr>\n<h4>问题 3.数据被人顺手带走(主业务接口相关 JSON 数据 如：首页商品列表数据)</h4>\n<blockquote>\n<p>描述：接口中的 JSON 数据会被其他人拿去做自己的相关的功能；这样就造成了服务器的额外支出</p>\n</blockquote>\n<h4>防：</h4>\n<ol>\n<li>IP 请求量限制，时间范围内请求量限制，等各种限制 IP 请求的规则，<br>\n如：统计记录(可以记录到 mongdb 中)，定时监控记录发现请求量大于限制的数量就进行 IP 封杀;</li>\n<li>请求头的校验，如： User-Agent 校验请求头是不是 APP 客服端发起， Referer 是不是有来源，来源域名是不是自己的域名地址等(这种方式只能是多一个门槛)；</li>\n</ol>\n<hr>\n<h4>问题 4.移花接木，恶意修改请求信息(修改参数， COOKIE ，请求头信息)</h4>\n<blockquote>\n<p>描述：通过修改请求中的参数来发起的请求，如：登陆接口修改用户名和用户密码，进行密码库碰撞等。</p>\n</blockquote>\n<blockquote>\n<p>温馨提示：<br>\n修改请求参数可能会导致很多安全性问题，如： SQL 注入， XSS 跨站脚本攻击等，传送门我的 [<a href=\"http://blog.thankbabe.com/2016/04/03/Safe/\" rel=\"nofollow\">大话程序猿眼里的 WEB 安全</a>] 有相关的介绍和解决方案<br>\n以下方案都针对客户端，如 PC 软件和 APP ， WEB 端 JS 去做加密的话不是很推荐， JS 代码是暴露出来的，所以如果用 JS 做加密一定要混淆 JS 代码</p>\n</blockquote>\n<h4>防：</h4>\n<ol>\n<li>\n<p>增加一个签名参数，将参数名进行逻辑的排序组合拼接+秘钥 MD5 ，然后服务端接受到请求的时候也用同样的逻辑得到签名与签名参数进行对比是否相同，这样可以使参数无法被修改，修改了就提示非法请求。\n如：\n接口 <a href=\"http://www.test.com/go/?actid=1&amp;userid=123\" rel=\"nofollow\">http://www.test.com/go/?actid=1&amp;userid=123</a> 我们可以加一个 sign 参数= MD5(actid=1&amp;userid=123&amp; [ secret ] ) [ secret ] =秘钥，自己定义。\n服务端用一样的逻辑得到密文和 sign 签名进行对比是否一样，不一样就提示非法请求。</p>\n</li>\n<li>\n<p>整个参数内容进行可逆的加密</p>\n</li>\n<li>\n<p>限制参数范围，如：支持分页接口，很多人会为了方便使用，加了参数就是 pagesize(一页的数据量)，当没有去限制页码最大值得时候，如果表数据量很大，然后攻击者修改 pagesize 参数为 N 万，然后数据库就奔溃了,相关业务就挂了。</p>\n</li>\n</ol>\n<hr>\n<h4>问题 5.影分身术，模拟请求，发起并发请求</h4>\n<blockquote>\n<p>描述：通过抓包工具抓到请求后模拟请求，如：模拟每日签到请求，或者直接发起每日签到的并发请求。<br>\n温馨提示：当请求并发后如何保证数据的完整性，一致性问题，这也是平时开发很需要注意的问题，传送门我的 [<a href=\"http://blog.thankbabe.com/2016/04/01/high-concurrency/\" rel=\"nofollow\">大话程序员眼里的高并发</a>] 有相关的介绍和解决方案。</p>\n</blockquote>\n<h4>防:</h4>\n<ol>\n<li>模拟并发请求， IP 限制同上问题 2 的解决方案。</li>\n<li>请求信息带上时间(可逆加密的时间)，服务端获取时间，超过限定时间的返回请求超时(目的使抓取到的请求不是一直有效的)。</li>\n<li>用户 token,等标识用户重要的信息数据，保存 COOKIE 需要设置过期时间，或者加密的明文里要有创建的时间，服务端做对应的时间失效的限制，这样即使 COOKIE 被别人盗取，模拟请求也会随着时间而失效;</li>\n</ol>\n<hr>\n<h2>总结</h2>\n<p>我们需要提高自己的安全意识，防范于未然，要多站在攻击者的角度来看自己的接口;(让自己有一种被害妄想症的感觉，你就离精神病近了一步，&lt;(￣︶￣)↗ )\n不要做开发需求的机器人，我们是有思想有创造力的开发者;</p>\n<hr>\n<h4>附加个人开发流程</h4>\n<blockquote>\n<p>在评审需求的时候要把业务逻辑问题提出来，并给予解决方案的选择;<br>\n确定需求后将整个业务逻辑的梳理清楚，复杂的可以画出流程图;<br>\n根据需求设计实现方案，需要考虑性能问题[数据库压力，服务器压力]，安全问题，用文档的形式记录下自己的设计方案。（可以深入到代码层面如何去实现）;<br>\n列出需求中功能点，评估出自己的时间，得到总工时;<br>\n开始开发，开干;</p>\n</blockquote>\n<hr>\n<p><img alt=\"哈哈\" src=\"http://demo.thankbabe.com/blog/images/ms.jpg\"></p>\n<blockquote>\n<p>感谢大家的支持，领取天猫 [<a href=\"http://s.click.taobao.com/uc1hdQx\" rel=\"nofollow\">双 11 红包</a>] ，获得推广费用来维持网站的运行，谢谢理解。</p>\n</blockquote>\n<blockquote>\n<p>大家有啥意见或者建议的到 <a href=\"http://blog.thankbabe.com/?from=v2ex\" rel=\"nofollow\">原文地址</a> 给我留言吧，感谢支持~</p>\n</blockquote>\n</div></div>"], "reply": "2", "tittle": "大话接口隐私与安全", "comment": ["有没有好的接口样例", " 看 uber 的 github 的， 算不算-。-"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>RT 。使用 create-react-app 开发的项目突然直接就不能 hotReload 了。修改代码后，也没有 Recompile 的提示。</p>\n<p>昨天都还好好的呢，我新建了一个新的项目，也是不行。今天我除了折腾ss梯子，其他啥事儿都没干啊。</p>\n<p>相关版本信息如下：</p>\n<ul>\n<li>react-scripts@0.7.0</li>\n<li>node@4.4.4</li>\n<li>npm@3.9.2</li>\n</ul>\n</div></div>"], "reply": "7", "tittle": "create-react-app 的 hot reload 不工作了，有遇到类似的不？", "comment": ["create-react-app 本来就不支持 hot reload ，只支持 live reload 。", " 可能是我表达错了，应该是 live reload\r", "\r", "反正效果就是 代码修改后，项目会自动重新编译，浏览器自动刷新页面。", "重启机器吧", " 重启，重装 create-react-app 都不行\r", "\r", "更尼玛坑的是， finder 好像也出问题了，在 terminal 中删除文件后，在 finder 中还能看到。。。", "调试， 有问题就调试。。。", "我想问问 lz ，你的 create-react-app 能把依赖都装上？我的不是链接有问题就是超时", " 我的正常。 你检测下 npm 的设置，一般国内都用要设置代理的。"]},
{"content": ["<div class=\"topic_content\">搞过云桌面都知道\r<br>现在的云桌面，是在一台高性能服务器上开 N 个虚拟机，再用 x86 或 arm 架构的瘦终端通过网络连接到虚拟机上，体验上比 PC 略差，外设兼容性和 3D 方面也有点问题，综合成本可能比 PC 还要高，但优点是易于管理\r<br>\r<br>无意中发现一个创业公司的产品\r<br>\r<br><a target=\"_blank\" href=\"https://bingte.kf5.com/posts/view/19964/\" rel=\"nofollow\">https://bingte.kf5.com/posts/view/19964/</a>\r<br>\r<br>看起来很 low ，直接在一台高性能桌面 PC 上装四个显卡，再用一个终端连接外设，终端上无 VGA 接口，估计也没有 arm 芯片，综合成本能做到传统 PC 的 60-70%，有人知道是什么原理吗？是不是什么黑科技？</div>"], "reply": "25", "tittle": "这是什么黑科技？多路 PC", "comment": ["twins?", "这个显然也是虚拟机\r", "\r", "外设通过盒子连接 PC （本质上就是个 USB ）\r", "四个显卡虚拟化 VT-D 直通\r", "\r", "（搞得还挺玄乎的~）", "楼上正解 适合酒店前台或者电信营业厅一类的场景", " 官网是 ", "额  无盘技术已经非常成熟了， 10 年前就用在网吧上面了。", "还不如双路或四路来的实际", "\r", " 这不是无盘", "上次 B 站看到 12 人一机..", "这就是虚拟化\r", "那个小盒子就是一个运行在 linux 下连到虚拟机内部的 hub 用于接外设\r", "这所谓的新技术就是小盒子的 usbhub 转 lan 转 pci 直通到某个虚拟机\r", "再节约成本就是 amd firepro 虚拟化多块显卡然后 vnc 到小盒子\r", "vga 做不上去是， vnc 回去有延时，同时宿主机还必须直接 vnc", "这种技术出现很久了...但记不起是什么名\r", "鼠标键盘显示器都是连接宿主机，桌子上只有鼠标键盘显示器。好像比网吧无盘还早，记不是很清楚了。", "年轻人都不知道，上个世纪有段时间央视经常放一个广告叫做一拖二电脑的，品牌已经忘了。那个时候电脑还很贵。", "最后一张图已经告诉你了，\r", "Host is ready to run VMs\r", "虚拟机，然后把显卡 passthrough 到虚拟机里。", " 主机是跑了虚拟机，显卡直接通过 VGA 与显示器连接，但那个终端是怎么和虚拟机通信呢？", " linus 莱纳斯好像是", " 一看头像 就知道很有时代的印记", "虚拟化直通吧？硬件直接连接到 VM 内。没啥好奇怪的", " 那家拥有价值 17w 刀 UPS 的土豪公司", " 桌面虚拟化（ Desktop Virtualization ）", "只是 Windows 多账号登录而已", " 终端和主机是用网线连接的，我觉的终端里是个 ARM 的板子，走网络通讯，鼠标和键盘再通过 USB Over IP 这类东西连到主机里再 passthrough 到虚拟机里。", " 是虚拟机，每个用户都可以装自己的系统", "反正不可能玩游戏，不如连显卡都不要\r", "想想那么多 KVM VPS ，还不是有远程桌面？", "量大以后的维护成本都高于前期的采购成本了", "  请搜索 unRAID OS,至于效果如何,可以参阅 linus 的视频\r", "&t=545s"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>使用 Redis 过程中，总是会遇到各种各样问题，这里进行问题的总结，作为 Redis 进阶的经验分享。</p>\n<hr>\n<p><img alt=\"源码\" src=\"http://demo.thankbabe.com/blog/images/r_bz.jpg\"></p>\n<hr>\n<h2>更新缓存的问题</h2>\n<hr>\n<blockquote>\n<p><code>[主动]</code>需要操作人员去操作，或者定时调度<br>\n<code>[被动]</code>由用户触发更新<br>\n<code>[预加载]</code>提前加载好数据</p>\n</blockquote>\n<hr>\n<ul>\n<li>方案 1\n<ul>\n<li><code>[主动]</code>后台点击更新缓存按钮，从 DB 查找最新数据集合，删除原缓存数据，存储新数据到缓存；</li>\n<li>问题：更新过程中删除掉缓存后刚好有业务在查询，那么这个时候返回的数据会是空，会影响用户体验</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>方案 2\n<ul>\n<li><code>[被动]</code>前台获取数据时发现没有缓存数据就会去数据库同步数据到缓存</li>\n<li>问题：当并发请求获取缓存数据不存在的时候，就会产生并发的查询数据的操作。</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>方案 3\n<ul>\n<li><code>[主动]</code>后台点击更新缓存按钮，从 DB 查找最新数据集合，这里不删除缓存，通过遍历数据覆盖和删除掉无效的数据</li>\n<li>问题：逻辑相对麻烦，而且更新机制无法通用；</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h4>推荐</h4>\n<hr>\n<blockquote>\n<p>以上的几种更新方案我都遇到过，因为产生了各种问题，所以我想到了一个相对好的方案，类似预加载功能，先把数据加载到缓存中，缓存成功后再切换显示最新的数据，将旧数据设置过期；</p>\n</blockquote>\n<ul>\n<li>方案 4<br>\n<code>[主动][预加载]</code>前台获取缓存的时候需要先得到缓存数据对应的 Redis Key （简称：[ShowingKey]），然后根据[ShowingKey]去读取缓存数据（简称：[缓存];\n<ul>\n<li>需要两块数据：\n<ul>\n<li>[ShowingKey]（可以是最近一次更新缓存的时间戳或者根据自己规则自定义）</li>\n<li>[缓存]（需要缓存的数据，如： DB 数据等）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>\n<p>举个栗子：<br>\n我们现在有个业务需要缓存今日上新商品数据，缓存到 Hash 中</p>\n<ul>\n<li>[缓存]对应 Redis Key 规则\n<ul>\n<li>Hash Key=Goods:Todays:{0}  {0}=时间戳</li>\n</ul>\n</li>\n<li>[ShowingKey]对应的 Redis Key\n<ul>\n<li>Key string key=Goods:Todays:ing  内容=最近一次的更新时间戳</li>\n</ul>\n</li>\n</ul>\n<p>更新逻辑：</p>\n<p>后台编辑人员操作完数据的时候点击更新按钮，获取服务器当前时间=1469938351000=[更新时间戳]，然后获取 DB 数据，缓存到 Goods:Todays:1469938351000 中，添加缓存数据成功后，获取 Goods:Todays:ing 中的时间戳 1449538371020=[上一次更新时间戳]，更新 Goods:Todays:ing 值=[更新时间戳]=1469938351000 ，更新成功后可以把[上一次更新时间戳]对应的缓存设置过期时间，我一般是设置 5 秒后过期。(注意旧数据一定要设置过期时间，不能直接删除，因为在切换[ShowingKey]的过程中可能还有业务在使用)</p>\n</li>\n</ul>\n<hr>\n<h4>更新总结</h4>\n<hr>\n<ul>\n<li>第 1 种更新方案影响用户体验一般不推荐使用</li>\n<li>第 2 种更新方案可以通过程序锁，锁住更新操作只能有一个进入 DB 查询，可以避免问题</li>\n<li>第 3 种更新方案不会有第 1 ， 2 的问题，但是更新逻辑写起来比较麻烦，而且更新方案不能抽象通用</li>\n<li>第 4 种更新方案使用提前加载到缓存，然后在切换需要显示的缓存数据，可以完美解决 1,2,3 中的问题</li>\n</ul>\n<hr>\n<h2>redis 内存不足，滥用</h2>\n<hr>\n<ul>\n<li>问题\n<ol>\n<li>数据不断累加，无效数据未清理，缓存未设置过期时间</li>\n<li>存储数据中包含未使用到字段，整个对象序列化到 redis 中</li>\n<li>冷数据，或者根本不会再去使用的无效数据没有清理</li>\n</ol>\n</li>\n<li>解决\n<ol>\n<li>数据区分无效时间，设置过期时间，使无效数据过期；（如：通过日期后缀命名 Key ）</li>\n<li>区分冷数据，清理掉冷数据；</li>\n<li>缓存数据从简， redis key 命名从简，数据字段命名从简，无效字段不添加在缓存中；</li>\n</ol>\n</li>\n</ul>\n<hr>\n<h2>键命名规范</h2>\n<hr>\n<ul>\n<li>内存数据库，键名长度影响有限内存空间，所以命名应该控制长度，简短易懂；</li>\n<li>大小写规范</li>\n<li>根据业务命名，相同业务统一的 Key 前缀</li>\n</ul>\n<hr>\n<h2>其他经验</h2>\n<hr>\n<ul>\n<li>\n<p>数值累加， get ， set+1 并发导致累加不准确</p>\n<ul>\n<li>使用 redis increment  自增数值的机制不会有累加不准确的问题</li>\n</ul>\n</li>\n<li>\n<p>.net 类库 ServiceStack 3.9.71.0 的一个问题</p>\n<blockquote>\n<p>SetEntryInHash 返回 bool ，只有第一次新增的时候返回的是 true ，后面修改成功了也都是返回 false</p>\n</blockquote>\n<p>源码： SetEntryInHash 方法，读取 hset 的结果 判断是否等于 1 ，返回 bool\n<img alt=\"源码\" src=\"http://demo.thankbabe.com/blog/images/r2.png\"></p>\n<p>我们通过命令：\nhset 第一次 sflyq  key 不存在，添加成功返回的执行结果是： 1\nhset 第一次 sflyq  key 已经存在，修改成功购返回结果： 0\n<img alt=\"源码\" src=\"http://demo.thankbabe.com/blog/images/r1.png\"></p>\n<p>所以结果很明显，通过 SetEntryInHash  判断 hash 是否 key value 是否设置成功是有问题的，只有第一次设置会返回 ture</p>\n</li>\n</ul>\n<hr>\n<blockquote>\n<p>未完待续...<br>\n有补充的留言给我哦</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>感谢大家的支持，领取天猫 [<a href=\"http://s.click.taobao.com/uc1hdQx\" rel=\"nofollow\">双 11 红包</a>] ，获得推广费用来维持网站的运行，谢谢理解。<br>\n大家有啥意见或者建议的到 <a href=\"http://blog.thankbabe.com/2016/08/05/redis-up/?from=v2ex\" rel=\"nofollow\">原文地址</a> 给我留言吧，感谢支持~</p>\n</blockquote>\n</div></div>"], "reply": "目前尚无回", "tittle": "大话 Redis 进阶", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>之前对数据库只做过增删改查，最近自己在写一个 iOS 版的 RSS 阅读软件。设计时考虑不周碰到很多问题：</p>\n<ol>\n<li>需要维护所有订阅的文章</li>\n<li>需要管理所有文章中的未读、收藏文章</li>\n<li>需要分组管理所有文章 eg. \"技术\",\"新闻\"</li>\n<li>需要维护各个分组中的未读、收藏文章</li>\n</ol>\n<p>同样的，当用户已阅或者标记未读一篇文章时，在所有文章页面未读数量+/-1 ，而该文章所在的分组也需要未读数量+/-1 ，并且把该文章从未读数据数组中移除 /添加。收藏同理。</p>\n<p>我想知道的是，对于每次数据更改（未读或者收藏情况变化）时，所有数据都再从数据库取一遍还是我只维护一份所有文章数据，其他分组、未读、收藏的数据都只从所维护所有数据中去取好？</p>\n<p>是不是没讲明白。。？</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "请教一些关于数据操作的问题", "comment": []},
{"content": ["<div class=\"topic_content\">新浪的编辑们并不知道的技术细节：他们的程序员有开发了 google sitemap 推送功能……\r<br>\r<br><img src=\"http://ww3.sinaimg.cn/large/6c2ea0fbjw1f9lv8k44zhj218q0uvn22.jpg\" class=\"embedded_image\" border=\"0\"> \r<br>\r<br><img src=\"http://ww4.sinaimg.cn/large/6c2ea0fbjw1f9lv8p1yhfj20nt0guq4j.jpg\" class=\"embedded_image\" border=\"0\"> </div>"], "reply": "65", "tittle": "这次是新浪搞了个大新闻……", "comment": ["百度的已经删掉了， 360 貌似没快照， google 他公关不了啊", "360 搜狗都有快照  还没删", "你们说要是 2023 年小编把国家主席的名字搞错了会怎么样个下场。", "将来报道出了偏差，你们可是要负责的。", "估计发错稿件了 哈哈", "大新闻 大新闻！", "2333333333 真是会玩", "这群傻逼，全世界一有什么热点发的比谁都快， sometimes naive", " \r", "这个难道不是 50 年之内都不会搞错吗 :doge:", " 这个肯定不会，毕竟可以提前 10 年就做好新闻嘛。", " 这个貌似真是钦点", "一般是提前写好两篇稿子，估计小编是发早了~", "恐怕 trump 真的要赢了，剩下的 54 票（ 40 票领先、 14 票落后）里拿到 4 票就赢了。", "搞事情，话说为什么直接 google ： 2016 美国大选，结果延迟？", " \r", "233333\r", "不是这么看的，根本不太用看总票数，就看摇摆州的关键票就行了……\r", "已经赢了", " \r", "在新华网混过\r", "都是提前就发好稿子的，可以发的时候上线，推到首页引流就行了，还能有效的防止排版问题网页错位啥的，都可以提前看到\r", "结果新浪编辑并不知道他们的程序会主动通知搜索引擎收录……", "新浪微博不知搞什么幺蛾子，信息流不是按时间排序。\r", "以前没注意，这次关注大选时才发现，这么搞问题很大。", " \r", "非智能的智能排序可以有效的增加 PV ，有助于提升广告量\r", "这是我在一个大厂学到的……", " 涨知识了，话说非智能的智能排序是？", "新浪又不是第一次搞大新闻，还记得不久前新浪国际版搞的大新闻", "没什么奇怪的啊，这种大事一般通稿都会准备两份的，你以为这些文章都是知道结果之后写的吗？！都是两种情况都有的，看情况换上哪个选举人的稿子。", "难道新浪活在了 \"平行世界\"", "主动通知搜索引擎收录是啥意思 @", " \r", "瞎搞，学学隔壁老毛子啊", "这种情况是可以通知 Google 删除的，估计 Google 中国没人管了。", " 人工不按顺序排序", "犹记得曼德拉逝世纪念页面不小心泄露的新闻，那时候曼德拉还活得好好的。", "通稿而已，各大媒体都会准备的，只是小编操作失误放出来了而已。", "智能时代，大多数有确切时间节点的新闻都是提前把稿子写好的，为什么会被搜索引擎找到才是问题，", "这种新闻早已经正反报道都写好，就等着补充和发布，很多名人的讣告都发生过误发的乌龙。", "666", "是不是让人有钦定的感觉？", "这也说明了新浪牛逼呀， PR 值够高，爬虫很喜欢他们", "这种无中生有的事情,你再说一遍，这等于你也有责任吧", "我读了一下这则新闻，居然还觉得他们分析得头头是道，然并卵", " 不知道从什么时候开始就变成了 根据热度排序 。", " 那为啥傻逼新浪会员都不免广告，会员那多特权除了更精准的推送广告还有哪个能用的？", "这个页面快照进去第一行末： 这是该网页在 2016 年 11 月 9 日 02:28:00 GMT 的快照。", "所有可以预见的大事，为了抢新闻都会提前准备新闻稿，比如某人诺贝尔，比如某人葬礼，比如大选，大选肯定是两套 D 一套 H 一套。川普这事儿确实是让全世界都出乎意料，因为不管是华尔街，还是明星，还是科技巨头，还是科学家，都反对川普当选，甚至全球两家最大的博彩公司的赔率都倾向于 H 。然而，川普赢了。精英和金钱都无法撼动的事情，自然在新浪小编这里没有意外，直接按照 A 方案默认发 H 就是了。话说回来，这次大选的选情前无古人，后无来者。一般情况说，北京时间 10 点之前就应该出结果， H 顺利当选，也可能是微弱优势，但肯定是 H 。我从早上起床一直看到川普演讲结束，新浪小编大意了，他们肯定认为最后的结果会反转，即使大选风向标俄亥俄州丢了，他们也没有想过可能是要出现小概率事件的。毕竟年轻", "渣浪：说好的〇定呢？", "贴一个链接再跑\r", " 话说我看网页快照底下就是川普赢大选靠的是这 blablabla", "江来的报导要是出了偏差 新浪是要负泽任的 民白吗", " 从来没有要钦点他当特首\r", "\r", " 你的头像一颗赛艇\r", "\r", " 太暴力了，我要报警了", " 我要报警了", "哈哈 确实是自掘坟墓，这是 SEO 的锅啊", "这个。。。。有个段子：一个连分页都做不好的网站，去他们公司干嘛~", "新浪钱给少了。导致希拉里败选，只能出这么个新闻 ，忽悠一下", "这次大选应该是俄罗斯挺川普 中国挺希拉里 看似正常的选举其实背地里是大国之间的政治角力 你看俄罗斯多卖力 连阿桑奇这块王牌都亮出来了", " \r", "就是说 用非常方便的办法让你享受不方便，让你多点一下……\r", "这样原来广告的一次 view 就变成两次了……\r", "按显示量协议价的广告收入立刻提升一档", " 本来听懂了现在==、", " 等一下，今天才看的独立报还是哪个媒体（记不清了）社评这次大选 trump 海外支持国寥寥无几，只有中俄。还提到中国国家媒体评论认为民主就该选 trump", "这是备稿还是提前发出来的？", "因缺思厅", "这个备稿备的太扯了", " 你这个结论和我获得的数据不太相符...算了不能多说了。", "评论真是醉了", "平行宇宙，太屌了", " 应该会彻底屏蔽谷歌，发文规定谷歌快照为非法网站？", "手抖发的太快了", "最逗的是还有无脑转发的的网站： ", "  现在仍然可以访问", "新浪总想搞个大新闻", "肯定是 2 个稿子，但是出了偏差也是要负责任的。", "另一个时空发来的新闻"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>访问博客阅读:\n<a href=\"https://minghe.me/%E6%80%9D%E8%80%83/2016/11/11/%E5%81%9A%E4%B8%80%E4%B8%AA%E5%85%A8%E5%B9%B3%E5%8F%B0%E7%9A%84%E4%BA%A7%E5%93%81/\" rel=\"nofollow\">https://minghe.me/%E6%80%9D%E8%80%83/2016/11/11/%E5%81%9A%E4%B8%80%E4%B8%AA%E5%85%A8%E5%B9%B3%E5%8F%B0%E7%9A%84%E4%BA%A7%E5%93%81/</a></p>\n<pre><code>  来自一个真实的失败案例\n</code></pre>\n<p>刚毕业出来工作的时候，觉得写底层老牛逼了，要不就去写写 C/C++ 吧，和指针，内存整体玩一块好像好高端的样子，可以写写 PHP, JavaScript ，什么，那是不懂编程的人才用的玩具啊。 我可是 EE 出来的呀，不去写汇编，做板子已经很 low 了，不要讽刺我好不好。</p>\n<p>写着写着发现， C/C++真 TM 无聊，庞大的陈旧的代码库，修改一个小小的模块，编译的时间可以去喝杯咖啡了，加上跑 Regression Tests 的时间都可以去吃午饭了，而且时不时还来个 <code><em>Segmentation Fault</em> </code>. 我的青春怎么这么被浪费掉呢？</p>\n<p>听说真正的黑客都用 Perl(也不知道从那个傻逼哪里听说的，噢好像不是傻逼，是 Steve Yegge)，要不就去做作基础设施开发， build 一个棒棒的开发平台，控制着整个公司产品的开发，测试，发布，感觉好牛逼的样子呀。说干就干吧。用着写完了自己都看不懂的语言造了无数的内部轮子之后，兴高采烈发布了，发现压根没有人用，而且在传统 IT 公司做着基础设施开发好尴尬，产品研发团队， QA 所有人都看你不爽，出门都不敢和别人说我是写 Perl ，更不敢和同事说，哎，那个那个平台是我开发的，那个那个工具是我维护的，就是因为你们基础设施团队瞎搞，流程搞来搞去的，工具换来换去，你们还要不要人干活了，而且还用着那么难看的 Perl, 想自己改改代码都要看大半天，真想一把火把你烧死。</p>\n<p>后来你想，到底用什么语言可以既有 hacker 范儿，又简洁美观，既简单又复杂呢。那必须是 Ruby 啊，那高贵的红宝石才能配得上你的逼格啊。所以大步的跨入了 Ruby 的世界，刚刚被 Martz 魔怔一般的安利，一个不小心，又被 DHH 的洗脑营销，你按耐不住了，开始 Ruby on Rails 的旅程，觉得还是 Ruby on Rails 炫呀，那么优美简洁的语法，魔法一般的元编程，让人欲摆不能的不要不要的。搞了不一会，竟然弄出了一个像模像样的网站，突然间以为自己可以改变世界了，把网站往论坛一丢，漫天遍野的骂声一下子把自己的热情打到了哈尔滨的零下三十度。</p>\n<p>没一会儿， Ruby on Rails 就 not cool anymore 了，而 Node 火的不不要的，而且 Google 的 Angular 真是令人叹为观止的神作呢。要不是还是把 Rails 换了吧， MEAN( Mongo + Express + Angular) 才 cool 嘛，说换就咬立即换呀。然后项目还没有写完，就刮来了一道 <a href=\"https://github.com/expressjs/express/issues/2844\" rel=\"nofollow\">is express dying?</a> 的飓风，大家都开始转向 Koa 了，自己怎么能落后呢，不行不行，必须得转向 Koa 啊。哇，还真不错呢， Koa 的简洁一点都不比 Sinatra 差嘛，写着真是愉快呢。刷刷两三下，一个整洁的 API Server 就构造好了，开始愉快的 Angular 前端开发喽。</p>\n<p>Boom, 快报快报， Facebook 出了 React 啦，大家快用啊，特别简单的语法， virtual dom 很先进，在也不用理 Angular 那么复杂的 directive 了，配合着 Flux 用，爽的不要不要的呀。</p>\n<pre><code>UI = f(State)\n</code></pre>\n<p>你看着公式，多么简单深刻的哲学呀，而且单向的数据流那么好控制，换换换，必须得换。发发 actions, 加几段 jsx 代码，一个棒棒的页面就出来了，好棒呀，你漏出了满意的浅笑。</p>\n<p>什么，你还在用 Flux, 好落伍呀， Redux 都已经主流了那么久了，你是博物馆馆长嘛，你的小伙伴和你说，作为一个风一样的男子，跟风是你的属性啊，你怎么能忍受这般羞辱呢，刚回到，你就打开 Vim ，打开 package.json ，完美的把 redux 圆满的放进去了，调整了一晚上的代码， git push 了之后，不知不觉，天亮了，你安静的睡了两个小时。</p>\n<p>来到公司，同事不小心瞄了一眼的屏幕。大声的说，什么，你还在用 redux-thunk 来管理异步 action ，真实土鳖啊。同事的声音很大，所有的目光都刷刷的聚集到你的身上，你感觉无比屈辱啊，你忍住泪水，轻描淡写的说，我是在确认 redux-thunk 的一个 bug ，打算给他们发 PR 呢。在同事离开了之后，你马不停蹄的开始代码迁移，终于你的项目技术栈变成这样了:</p>\n<pre><code>后端: Koa, Mongo\n前端: React(Redux/Redux-Saga)\n移动端: Objective C\n</code></pre>\n<p>似乎你可以喘一口气了。</p>\n<p>万万没有想到， Facebook 又投了一个重磅炸弹， React Native 横空出世了，而且相继支持 iOS 和 Android ，你已经错过了成为了 Swift 的第一批尝鲜者，这个时候，你再也按耐不住了，立即开始投入了 React Native 的怀抱，终于在也不用看到 Objective C 那丑陋的语法了，而且你严格遵循着社区的最佳实践，<a href=\"https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0\" rel=\"nofollow\">Presentational  and Container Components</a> 完美分开， web 前端和移动端代码复用特别爽，你暗暗的自豪了起来。</p>\n<p>然后又朋友听说你在做一款产品，准备同时做 Android 和 iOS 版，为什么不也把桌面版也做了呢， Github 的 electron 那么赞，有了 web 前端，几乎不要改什么代码就可以完成一个很棒的桌面应用呀，必须要上啊。最终你的技术栈变成了</p>\n<pre><code>后端: Koa, Mongo\n前端: React(Redux/Redux-Saga)\nAndroid/iOS: React Native\n桌面: Electron\n</code></pre>\n<p>你终于开始安心的写代码做产品了。然有而突然有人告诉你，其实现在 Vue 比 React 还要轻量级优雅，你开始惆怅了，心里泛起了一点点涟漪: 要不要试试看呢。</p>\n<p>然后你的产品 <a href=\"https://github.com/metrue/Laivei\" rel=\"nofollow\">laivei</a> 在 Github 躺了好久了, 却，依然没有完成。</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "如何失败的做一个全平台产品", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>团队现状：\n一共两人，一个负责 marketing/product ，一个（我）负责开发（全栈）。非前后端分离应用。\n个人对两个框架的熟悉程度：Rails 过去用的稍多，Django 少一些但是比较熟悉。</p>\n<p>web 框架选择考虑如下几个方面（含个人简介，求评价）：</p>\n<ol>\n<li>ORM ：肯定 ActiveRecord 最方便，但是 Django ORM 也很好用了</li>\n<li>爬虫需求： Rails 里打算 <code>mechanize + nokogiri + sidekiq + whenever</code> ，感觉这样性能不高。 Django 里面打算通过 <code>celery</code> 调用 <code>scrapy</code> 。总体 Python 里写爬虫方便。爬虫有重度需求（约为后端总代码量 30%）。</li>\n<li>后台： Rails 目前考虑 <code>rails_admin</code> ，但是感觉 Django admin 更好一些</li>\n<li>asset pipeline ： Rails 的感觉挺好用， Django 不了解。即使不行也不用担心，大不了用 webpack 自己打包。</li>\n<li>微信相关库：感觉都差不多。</li>\n</ol>\n<p>纠结的点主要在 rails 和 ruby 上，这两者感觉更新都不活跃了， TIOBE 最近的排名 Ruby 掉得也很快。生态上还是 Python 稍胜一筹。</p>\n</div></div>"], "reply": "71", "tittle": "Web 全栈框架， Rails or Django? （有部分爬虫需求）", "comment": ["我有两个更好的推荐：\r", "\r", "１.首推 nodejs+express+mongodb   \r", "\r", " 2. 次推 php+laravel+postgrelsql \r", "\r", " 这两种方案，做Ｗ eb 网站还有后台 Api 都可兼吃，关键是快快快．好用．", "你熟悉哪个用哪个，差不多的", "Rails 构建 API 太容易了", " rails  开发速度比你的两个方案快。 性能比 nodes 慢点，但和 larval 差不多吧？", "Python 的排名比较前 应该不是由于 其 web 开发(除了爬虫)范围做的贡献吧？ 爬虫，还是用 Python 吧", "爬虫？异步？\r", "那果断 Tornado 啊", "一直在做 rails ，只能说相对来说 rails 的 gem 多，至于后台管理，不要用 rails_admin ，坑多，还不如自己 scaffold 来的快", " Tornado +1", " 我 node 写过很多， express mongoose 完全不够，很多轮子需要自己找，对于选择困难症来说很浪费时间。\r", "laravel 写爬虫很不舒服，并且不喜欢 PHP ，个人体验是 php 部署反而比 ruby/python 麻烦。\r", "\r", " 两个都比较熟悉， rails 略熟悉，只是担心未来。\r", "\r", " Djangorestframework 也很容易，都差不多的。并且没太多 API 需求。\r", "\r", " @", " web 理解，爬虫为什么想用 tornado ？另外不是全栈框架一个人写好累", "选什么语言看排名纯粹是自寻烦恼。如果只有一个人， Rails 是最佳选择。爬虫什么的，可以混搭使用。", " 混搭 python 吗？", "web 框架部分哪个顺手用哪个 爬虫可以用 tornado 或者加个 gevent 之类", "PySpider 结果集导进 rails", "我们有个类似项目， web 用 Rails ，爬虫用 Python ，中间用 RESTful API 通信。", "django 吧，爬虫+web->django+celery+scrapy 很好的搭配， api 就用 django_restframework ，后台就用 djangoadmin 。完全不用折腾", " 有啥未来好担心？", "什么熟悉用什么，项目能不能存活都是个大问题，未来没人能知道，尽量先做出来再想生态优化这些问题", "其实我还是推荐瓶子或者龙卷风\r", "啊 你们有重度的爬虫需求 为什么不找个专业的呢 \r", "↑指", "哪个快用哪个，哪个熟悉用哪个，别担心未来。\r", "\r", "未来如果很美好，挣到钱了大可推翻重来，类似 twitter 。\r", "\r", "未来如果很悲剧，哪怕你是用 Go 写的，也不会有心情维护升级它。", "肯定 rails 。用 Django 你绝对后悔。爬虫部分的业务可以拆分出来用 scrapy 。", "5 年前我会用 RAILS 2 年前用 mean stack 现在的话我会选择 Amazon lambda service", " + React", "给人推荐 node 不是挖个坑让楼主跳么", "django, 因为楼上面说的所有问题，为啥我觉得 django 都很好的解决了", "用 rails 写网站， python 写爬虫，有什么问题么？", " node 为什么这么凶残？", "爬虫用 python", "对高并发没特殊要求的话就用 Django 挺好的，开发效率高啊，关键就你一个人开发。", "感觉楼主心里已经有答案了，我也有类似的需求场景，目前用的是 Rails + scrapyd + scrapy 的组合，通过 Job 的方式，保证爬虫通信。", "要不试试 Elixir+Phoenix+React+Redux ，你们搞 Ruby 的 可以试试哦， elixir 也是可以重写 scrapy, 也有 xpath xml 相关库哦。。", "ruby + python 呗 各取所长", "rails ，因为我感觉,rails 好用", "Rails 大框架， Python 处理细活。选哪门语言，主要是选它的生态。", "没有人推荐 meteor ，神器啊", " Rails 有 twitter 、 github ， Django 有 Instagram ， meteor 好像没很成功的公司", "用你最快能上线的那个，其他技术有空再尝试。", "说 node 的是在搞笑吗?\r", "node 快? 一堆低质量 package 你敢用?", " meteor 是一个新兴框架，也许是下一代框架中的牛逼者，自己玩玩可以", "哪个最熟悉用哪个；爬虫部分可以用 python", " 了解， fullstack web framework 排名第一的，主要是不想用 web socket 。", " \r", " \r", "\r", "Rails 里调用 scrapy 有什么比较优雅的方法吗？\r", "\r", "\r", " Elixir 没干爹，看过语言基础，但是不太想用。 Phoenix 有个疑问就是如何做 cache ？\r", "\r", "\r", " Amazon lambda service 是不是过分押注 AWS 不太好呢？ React 是很喜欢但是做这种 quick prototype 开发效率还是不够高，所以暂时不想前后端分离。\r", "\r", "另外十分感谢楼上诸位！", "没必要两种需求都用一种语言实现啊，肯定是混搭使用适合用啥就用啥，不就是图个快， node 系列的技术栈不建议使用，坑多，难踩…", "我个人感觉 django 的设计思路甩 rails 和仿 rails 框架几条街。当然框架本身是否优秀是一回事，你自己熟悉哪个又是另一回事。", " phoenix 做 cache 太简单了 因为 elixir 的底层是 erlang 所以可以使用 erlang 的 ETS 做缓存 连 redis 都不用装. 另外已有 cache 库了, 就在 GitHub 上，这个就是基于 ETS 。 ", " 虽然 Elixir 没有牛逼的干爹，但作者曾是 rails 的核心开发人员，并且此语言作者也参与 phoenix 的开发。我认为做 rails 的那批人才是真正做框架的。吸收无数高手多年的开发精华、最佳实践，融为 Elixir on Phoenix 。", "在我的印象里。。选 ssh 我都不会选 django 。。当然，不是在黑", "1, php 推荐 phalcon ，哈哈。", "看样子像是在小型创业阶段？\r", "在这种时候做选择题的话，只有一个标准答案：快！\r", "这个快是只落地快，而不是什么机器运行速度。\r", "当前最急迫的事情是以最快的速度验证你们的 idea 是否有人愿意埋单。\r", "但楼主还有时间纠结框架、语言选择，不免让我一个旁观者对你们项目的前景表示一点点不看好。", "我的合伙人就有那种典型的技术人员的追求完美的毛病。唉，我忍不住想在这多说两句。\r", "「 You're not paid to write code, you're not paid to think about problems, you're paid to deliver a working solution, and nothing else matters.」\r", "在赚到钱之前，不要总想着把代码写得多漂亮，把实现写得多优雅。\r", "当然这并不意外着代码可以随便写，而是在投入和产出之间要找到一个平衡：代码能工作，可维护。", "web 开发速度， rails 业界最快，没有之一", " django 一点都不比 Rails 慢", "不要用 node\r", "不要用 node\r", "不要用 node", "web 开发速度， rails 业界最快，没有之一", "we b 开发速度， rails 业界 最快，没 有之一", "推荐 elixir/phoenix ， 在 productive 和 perf 之间做平衡", " 事实上比 rails 还快。很多习惯 rails 风格的程序员都有些井底之蛙的感觉", " 对于不会用 django 的人来说，你还是一边用 ssh 一边黑 django 吧", " django 经历了 10 之久，已经完全是一个体系和生态了。\r", "传统 web 开发，论速度，工程质量，可维护性，我想知道还有谁？！！", " 仿佛别人什么都不会的样子 0.0", " 仿佛 rails 没它老？", " 确实 django 在传统 request response 的 app 开发上已经远远领先其竞争对手了。只可惜当初因为 rails 比较火，导致 rails 本身有些盲目膨胀的自信，而其它框架也盲目仿造 rails ，以至于 rails 和其模仿者都没有意识到 django 在 1.4 以后已经在设计理念上远远把它们甩开了距离。", " 没说你什么都不会，但你肯定不会 django 。不要以为看了 djangobook 之类的入门教材就叫会 django 了。你其实连 django 的门槛都还没进入，因为真正的 django 代码都不是这种入门教材里那么写的", " 您好前辈，有没有办法接触到您说的这种理念？", " 请大概讲一下有哪些设计理念甩开了 rails ？", " 真正设计理念都是在代码中的，阅读了 Django 的源代码，发现它各个版本的更新迭代非常靠谱\r", "这个版本没有满足和设计不合理的地方，下个版本就做出了更改，重点是这种修改不是把问题和代码复杂化，而是更加简单。\r", "我从 1.4 跟到了 2.0 ，经历了没有 migrate ，只有 south 插件的痛苦时期，现在可以 migrate 了，感觉 xx 都通畅了\r", "\r", "Python 中很多项目都在向 Django 致敬，比如 Scrapy ，就是模仿的 Django 的内部结构\r", "\r", "入门教材来说， Django 的文档和教材一级棒， but ，用多了需要自己阅读源代码来补充\r", "很多人说 Django 太大了，我觉得是很多人无知而无畏， web 的很多问题和轮子这些朋友完全不考虑的，目测其中一大半人连 csrf 都不知道是什么吧。（用 Java ， Spring 之类朋友应该超过九成不知道这个是什么，对，黑的就是你）\r", "\r", "点名批评下 laravel ， 不要仿造 rails ,(敲黑板!\r", "再黑一把， PHP 的很多 Framework ，说白了就是 toolkit\r", "对 ruby 的爱，只有 msf", " Django 和 Scrapy 是无缝对接的啊， 加 3 行代码就行了，直接用 Django 的 ORM 存数据（别和我说你的数据量很大，这个就不推荐了", " 哈哈，我就笑笑", "既然都 rails 了 还用 django.. 爬虫服务可以用 node 撒", " \r", " \r", "django 最鲜明的理念就是 DRY 。所以它设计得让程序员可以写几乎没有冗余的代码。用 rails 的人可能说，我的代码也没冗余呀。其实冗余就在那里，但是习惯 rails 的行惯性思维让他们看不到存在的冗余。 rails 最大的问题就是它最初吸引人的特点，即脚手架，说穿了就是一个代码生成器。脚手架生成的代码本身就是一种冗余。为什么？因为生成的 crud 代码都有一样的 pattern ，比如 detail view 都是根据一个主键去获得某个数据； edit view 都是先根据主键获得设据，然后把数据注入一个 form ；等等等等。脚手架不过是反复生成这样的 pattern 。而 django 从 1.4 开始提供 class based view ，这些 view 本身就包含了 crud 的 pattern ，你只要像写配置文件一样配置就可以了，而且这种类似配置的代码不存在任何魔法，只是使用了最基本的 oop 的概念而已，一看就明白。\r", "\r", "再举个例子， django 的 form 也设计得非常好。很多框架的 form 的每个字段依然是基本数据类型，如 string ， int ， list 等。你要显示它们还要在 view 里使用特殊的 tag 来显示（ java 程序员们，这听起来是不是很熟悉？）。而 django form 的每个字段是一个包装得非常好的 field ，每个 field 包含了显示的控件， validation 的逻辑等，所以显示 form 的时候代码可以反复重用。\r", "\r", "另外 django 一个非常重要的理念就是 model 是整个项目中唯一的真理， form 是由 model 决定基本行为的， view 是由 model 决定基本行为的， migration 也是根据 model 来产生的。所以 django 程序员从头至尾都是在思考着业务对应的 model ，而不会被其它东西分心，因为他们知道只要理解了业务，就能定义正确的 model ，而 form ， view 都是 model 驱动的（在代码的表现上就是 form 和 view 都是像写配置文件一样，只要指定 model ，一个 app 的基本形态也完成了）。\r", "\r", "所有这些先进的理念都体现出 django 设计者对 oop 有真正深入的理解，实际运用到设计中，而不是只是当作一种教条在那里宣传。当然这也和 python 本身的特点有关，即 python 完美解决了多重继承的问题，使得多重继承没有那么可怕，相反让程序员如虎添翼。", " 非常好 请你坚定不移的走 Django 路线 加油", " 写得不错。 Rails 和 Django 都用过，总的感觉还是 Too much magic in Rails; Django is much cleaner and clearer."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>又不太忍心找去广告版的，正在考虑卸载了</p>\n</div></div>"], "reply": "21", "tittle": "clover 今天广告叉不掉了", "comment": ["每天都提示我升级，然而每次都是那个版本", "有没有什么好的替代品啊", "有去广告版本 ", "链接： ", " 密码： 396j", "用火绒阻止他联网  暂时这么用着还好", "之前一直都挺好的，绝对算是老用户。\r", "最近偏要弄个广告，不知道是不是脑子进水了，产品就是这么做死的。", "防火墙设置 clover 禁止联网，可完美解决。", "我以前还捐赠过", "已经卸载，卸载之后发现并无不方便之处", "咦，竟然更新了？不是早 die 了么？", "你们不觉得 clover 鼠标点的时候反应比资源管理器慢好多么。", "很好奇现在的稳定性怎么样 好久没用了", "两年没更新还以为没人维护了呢\r", "然而 3.0.406.0 在 win10 上用着还行，几乎没 crash 过", "  \r", "原作者发的", "擦，原来卖掉了", " 原来如此，果断换回老版本去", "居然更新了…我以为早死了…", "居然更新了，前年用 win10 预览版的时候，一堆问题，就卸载了。。。。", "直接卸载吧，以前的版本 tab 标签可以拖出来变成一个新的资源管理器，但是升级后就不行了，然后 ESS 还报问题，直接删了感觉一切正常并无不习惯之处。", "换用 Total Commander ，清爽快捷了很多。", "我还以为是黑苹果的 clover ，原来是这个插件……"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>tsung 是一个 web 压测工具，使用 xml 作为其配置文件，已经阅读了其英文文档了，测试 HTTP 已经成功，但是测试 HTTPS 死活无法成功，感觉好像是没有正确获取 HTTPS 链接的内容；</p>\n<p>这里是我的配置： <a href=\"https://nopaste.me/view/411b1764\" rel=\"nofollow\">https://nopaste.me/view/411b1764</a> ，请大神们指点下，搞了一下午，都快崩溃了。</p>\n<p>主要的地方：\nservers 中的 type 已经选择了 ssl ；\nrequest 里面就是 ‘/html/index.html ’；</p>\n<p>Google 了全部的关键字： tsung, ssl ,https ，都没有发现相关文档，好无奈！</p>\n</div></div>"], "reply": "2", "tittle": "有用过 tsung 测试 HTTPS 链接的同学吗？配置了一下午，都没弄好。", "comment": ["换 jmeter 吧\r", "Tsung 我也折腾好久，不成功"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>前期多做功课，摆对正确姿势去使用 redis 可以加快请求数据的响应时间，然而噬无忌惮的使用会让你为内存问题而烦恼，从长远的角度看这个不仅仅是只要加几条内存就能解决的问题</p>\n<h1>redis ：</h1>\n<ul>\n<li>redis 是 Key Value nosql 数据库，数据存储在内存中，单进程，自己实现了一套异步事件处理，虽然单进程但是数据库处理很快，异步持久化；</li>\n<li>持久化方式： RDB(数据快照)， AOF(日志追加的方式)进行异步持久化</li>\n<li>支持集群</li>\n</ul>\n<hr>\n<h2>radis 有五种的数据类型：</h2>\n<ul>\n<li>string 字符串类型\n<ul>\n<li>字符串类型是 redis 中的最基本的数据类型，也是其他 4 种数据类型的基础，它能存储任何形式的字符串，包括二进制数据</li>\n</ul>\n</li>\n<li>hash 哈希表类型\n<ul>\n<li>哈希类型是一个字符串类型的字段和字段值的映射表。哈希类型适合存储对象。相较于将对象每一个字段存成当个字符串类型，将一个对象存成在 hash 类型会占用更少的内存，并且可以更方便的存取整个对象</li>\n</ul>\n</li>\n<li>list 链表类型\n<ul>\n<li>链表类型可以存储一个有序的字符串列表，内部是使用双向链表实现的。所以我们通常用链表类型的 LPUSH 和 LPOP 或者 RPUSH 和 RPOP 实现栈的功能，用 LPUSH 和 RPOP 或者 RPUSH 和 LPOP 实现队列的功能</li>\n</ul>\n</li>\n<li>set 无序集合类型\n<ul>\n<li>集合类型和数学中集合概念相似，比如集合中的元素是唯一的，无序的，集合与集合之间可以进行交并差等操作</li>\n</ul>\n</li>\n<li>zset 有序集合类型\n<ul>\n<li>有序集合类型和集合类型一样，只不过多了一个“有序”，有序集合中每一个元素都关联了一个分数，虽然集合中每一个元素都不同的，但是他们的分数却可以相同</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2>注意：</h2>\n<ul>\n<li>redis 的数据都是存储在内存里的；</li>\n<li>2.0 以上好像是可以开启 VM 虚拟内存(把磁盘分配部分作为虚拟内存)的功能，通过内部机制把冷数据放到虚拟内存里，常用的数据还是在内存中；</li>\n<li>redis 只能是作为热数据(经常被并发查询的)的缓存，不能把 redis 当成数据库去使用</li>\n</ul>\n<hr>\n<h2>内存控制与优化：</h2>\n<ul>\n<li>存储的数据的控制：\n<ul>\n<li>控制数据字段(序列化对象的时候不用的字段不要读到 redis ，减少存储数据量)</li>\n<li>设置过期时间</li>\n<li>热数据存储(冷数据过滤移除，或者不存)</li>\n<li>不存储长期累加增长的数据，尤其是可能成为大数据的，(可以考虑使用 mongodb)</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2>redis 其他辅助：</h2>\n<ol>\n<li>查看配置： config get *\n<blockquote>\n<p><a href=\"http://blog.csdn.net/lengzijian/article/details/8593656\" rel=\"nofollow\">http://blog.csdn.net/lengzijian/article/details/8593656</a></p>\n</blockquote>\n</li>\n<li>查看信息： info\n<blockquote>\n<p><a href=\"http://www.runoob.com/redis/server-info.html\" rel=\"nofollow\">http://www.runoob.com/redis/server-info.html</a></p>\n</blockquote>\n</li>\n<li>其他命令：\n<blockquote>\n<p><a href=\"http://www.runoob.com/redis/redis-commands.html\" rel=\"nofollow\">http://www.runoob.com/redis/redis-commands.html</a></p>\n</blockquote>\n</li>\n</ol>\n<hr>\n<h2>.NET 类库：</h2>\n<ol>\n<li>正在使用版本： ServiceStack.Redis 3.9.71.0 ，&gt;=4.0 版本有限制连接池的数量，需要收费</li>\n<li>StackExchange.Redis\n<blockquote>\n<p>下载： <a href=\"http://download.csdn.net/detail/shi1984/8916095#comment\" rel=\"nofollow\">http://download.csdn.net/detail/shi1984/8916095#comment</a><br>\n博客： <a href=\"http://www.cnblogs.com/bnbqian/p/4962855.html\" rel=\"nofollow\">http://www.cnblogs.com/bnbqian/p/4962855.html</a><br>\ngithub ： <a href=\"https://github.com/StackExchange/StackExchange.Redis\" rel=\"nofollow\">https://github.com/StackExchange/StackExchange.Redis</a></p>\n</blockquote>\n</li>\n</ol>\n<hr>\n<h2>当前我们的应用场景：</h2>\n<ol>\n<li>STRING\n<blockquote>\n<p>存储信息对象序列化 JSON 格式</p>\n</blockquote>\n</li>\n<li>HASH ：\n<blockquote>\n<p>经常被并发请求的小数据查询，如：最近五日的超高返商品数据，存储在 Hash 中， field=商品 ID ， value=商品信息(对象序列化 JSON 格式)</p>\n</blockquote>\n</li>\n<li>LIST ：\n<blockquote>\n<p>作为信息队列使用，不断的 Lpush 数据到 List 中， rpop 数据出来入库，或者处理。</p>\n</blockquote>\n</li>\n<li>ZSET ：\n<blockquote>\n<p>排序列表，如搜索关键字排名</p>\n</blockquote>\n</li>\n<li>SET 相对比较少去使用</li>\n</ol>\n<hr>\n<h2>总结：</h2>\n<ul>\n<li>前期多做功课，摆对正确姿势去使用 redis 可以加快请求数据的响应时间，然而噬无忌惮的使用会让你为内存问题而烦恼，从长远的角度看这个不仅仅是只要加几条内存就能解决的问题</li>\n</ul>\n<hr>\n<blockquote>\n<p>感谢大家的支持，领取天猫 [<a href=\"http://s.click.taobao.com/uc1hdQx\" rel=\"nofollow\">双 11 红包</a>] ，获得推广费用来维持网站的运行，谢谢理解。</p>\n</blockquote>\n<blockquote>\n<p>大家有啥意见或者建议的到 <a href=\"http://blog.thankbabe.com/2016/04/01/redis/?from=v2ex\" rel=\"nofollow\">原文地址</a> 给我留言吧，感谢支持~</p>\n</blockquote>\n</div></div>"], "reply": "3", "tittle": "大话 Redis 基础", "comment": ["Quote: redis 只能是作为热数据(经常被并发查询的)的缓存，不能把 redis 当成数据库去使用\r", "其实合理的配置 aof 和持久化后，还是可以做一些非关系数据的数据库的", "redis 可以用来保存用户的 token", "我想知道 lz 双十一推广佣金赚多少了？ ^_^"]},
{"content": ["<div class=\"topic_content\"><img src=\"http://ww3.sinaimg.cn/mw690/006iZdgkgw1f9nxyik67gj30js0d8mzj.jpg\" class=\"embedded_image\" border=\"0\"> \r<br>红圈里面的节点全部是很长的字符串（ html 代码，各种字符串的东西）\r<br>如果可以把节点直接转换成字符串 就非常方便，但是我试了很多办法都不成功，难道这个是不可逆的？</div>"], "reply": "4", "tittle": "C# JSON 节点要怎样转化成字符串 有什么特殊技巧吗", "comment": ["在 nuget 包管理器里找找 newtonsoft 这个组件，专门用于处理 JSON 相关的，里面就有把对象转换成 JSON 字符串的", "我现在主要是想把 JSON 节点抓化成字符串", " 我现在主要是想把 JSON 节点抓化成字符串", " 没懂你的意思？将一个对象转换成字符串和把节点转换成字符串的冲突点在哪?"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>自学大半年了， J2SE 基本熟练， web 框架入门装配工基本的 CRUD 没问题，目前仿 V2 写了个小论坛，功能尚未完善，</p>\n<p>有没有朋友推荐一个网站，最好有页面可以仿--因为我前端很水-，</p>\n<p>这样在找工作之前 弄个稍微能上简历的玩意</p>\n</div></div>"], "reply": "30", "tittle": "求推荐一个小的网站写写练手", "comment": ["就先写个百度吧", " 先赚它 100 个亿", " 访问不了", " 500 出错", "再顶一波", "  最近学习 Django 写的", " 之前写的一个小玩意儿", "1024 吧", " 这个不错，不过 java 不管是 ssm 还是 ssh 框架 都确实太重了，用来写 blog 有点大材小用，不过我还是打算写一个小博客的，对了 你方便的话，能否给下前端模板", " ", " 前端用 Bootstrap 组装个，然后再写详细样式\r", "另外 @", " 的博客是开源的，在他 GitHub", " 看了你的 博客更新 ， BootCDN 或 StaticfileCDN 可以加速 Bootstrap 等公共库。也可以使用七牛加速静态文件。\r", "\r", "------\r", "强行外链 ", " 哈哈，好的。你的外链音乐感觉真不错...", "如果你了解生产销售型企业运作流程，你可以写一个模拟从销售发货->商品出库->司机出厂，司机到货，客户签收，这样一个流程，结合微信公众号做。", "强行外链 ", "主题照搬 anotherhome ，只做前端搬运工\r", "\r", "源码:\r", " 不熟悉业务", " 对了 写 C++是不是 总得自己加  gcc -l 包名 之类的 ，有没有便捷的办法", " 博客底下腾讯云超链是阿里云 2333.", " 手机端访问好卡～", "写个 Twitter 吧", "强行一波外链啊，哈哈。\r", " \r", "突然看到你的博客的 html 有些问题。。多个文档声明，多个 html 标签和 head 标签，两份 head 头。。。建议看 MDN 。。。\r", "\r", "Firefox 开发者版右键查看源代码，红色的都是有问题的代码", " 好的，非常感谢。不太熟悉前端这块。", " 你说的是指定动态链接库路径吧，可以把自己编译好的库路径 echo 到 /etc/ld.so.conf 然后 ldconfig ，类似于追加环境变量", "  写个视频网站也可以呀，顺便带上磁力\r", " 外链好合我胃口！", "\r", "\r", "这么多挂外链的😄", " 没有，就是习惯了 visual studio 不习惯 linux 随便引用个库或者啥的 都要百度去搜索 编译的时候是不是要加一个 -lxxx lib 之类的", "\r", "\r", "不过这个是 Python 的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近遇到一个问题。我们的业务分为很多个小服务，消息中间件用的是 kafka 。也就是说，我们的 producer 和 consumer 数量比较大， topic 也很多。</p>\n<p>现在重点来了， kafka 的回包比较大。。也就是说  如果有效数据是 10 字节，这个包有 10KB （夸张用法）。这样子一来，服务器的带宽占用非常高。跨机房的话，这笔流量费用是巨大的。</p>\n<p>各位大大，，你们有遇到过么？有什么解决方案么？</p>\n</div></div>"], "reply": "5", "tittle": "kafka 流量大", "comment": ["使用二进制协议？让数据包更小？", "可以考虑用压缩， Kafka 支持端到端压缩的，建议采用非 zip 压缩", "可以部署个 kafka 集群，根据 topic 进行 partitioning 尽量减少跨机房的流量", "不是专家, 公司用 snappy 压缩, lz 可以试试, 另外不知道怎么读的 有效数据占这么点? 可以适当增加一次读入的 size 吧", "尽量多用 batching, 一次网络沟通多发几个信息，这样你的 network 效率比较高，硬盘性能也会好很多\r", "\r", "基本思路：\r", "1. producer type 用 async\r", "2. batch.size 尽量调大\r", "3. linger.ms 适当调大"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>按照 java 的哲学,一切皆对象, 所有成员应该都会有一个对象作为挂载点,但是<code>static</code>修饰的成员是否违背这一哲学或者原则?</p>\n</div></div>"], "reply": "25", "tittle": "请问 java 中的`static` 方法是否违背了 java 一切皆对象的说法?", "comment": ["Class 也是对象", "一切对象也可以共享某个类别里面的固定资源啊，好比现实世界的各个领域，范围的公共资源。", "1 楼说得对， class 本身就是对象，你可以理解成 static 属性其实是 Class 的成员， Class 由 java 负责生成单例", "类对象", "static 是面向过程专用，比如一些 Utils ，违背了面向对象，但是不违背一切皆对象吧？", "char int byte 就不是对象", "Java 中（几乎）一切都是对象。《 Thinging In Java 》", "靠， thinking 拼错了", "有 primitive 类型的\r", "\r", "为了提高性能\r", "\r", "只是现在 autoboxing 让这种差别在写的时候小了起来", "楼主可以试着写一段代码通过反射去调用一个 static 方法。\r", "当你调用 Method.invoke(target, args)时，要把该 static 方法所属的 Class 对象作为 target 传入的。\r", "Which means, static method 是以 Class 对象作为你所说的挂载点的。", "哲学，你太较真了。", "怎么好用怎么来，何必追求理论上的完美，现实中总是这样妥协，又那样妥协。", "不违背一切皆对象（但是有违背的）", "有基本类型就已经违背了", " 静态方法 Method.invoke(target, args) 中的 target 传入 null 即可。", "java 本来就不是一切皆对象，原始类型，如 int ， long 等", "每个 “一切皆对象” 的语言的 “一切” 的定义都不同……", "Ruby 应该符合", "static 因为没有多态性所以说违背面向对象是可以说的，但确实没有违背一切皆对象，毕竟 class/method/field 都可以是对象\r", "\r", "但我其实不认为 java 里 class 是对象，不然不应该有 this.getClass()这种东西了，你应该可以直接把 MyClass 当作参数传给某方法，或者作为某个类的某个字段", "从大的来说一切都对象。\r", "细究起来确实是“不常规”。", "首先 java 并非一切皆对象。所以这个题目本身就是建立在错误前提下的假命题。", " \r", "lambda {|x| puts x} 是对象 \r", "但是 &(lambda {|x| puts x})  不是对象", " 这是 Python 吧", " ruby 里的 block 都不是对象", " 绝对的纯粹应该没有吧， Ruby 应该可以算比较纯粹的了，至少对 Python 来说"]},
{"content": ["<div class=\"topic_content\">RT,感觉就 w3h 上的教程有点太教科书.\r<br>谢谢</div>"], "reply": "9", "tittle": "请问有没有什么从新手到高手一路记录的前端博客?", "comment": ["我猜是没有的。高手的经历是不可复制的。", "可以根据自己的需求搜哇", "   从最后往前翻，不用谢", "说真的，我觉得高手发表博客吧，估计都不是太频繁，平时都忙死了\r", "如果已经是高手了，就不太喜欢搞一些什么心路历程了\r", "当然， XX 辉除外", "真正的教科书\r", "想找一个材料跟着学就能成为高手，这希望太渺茫。每个人的成长历程都不一样，人家看一眼就明白的东西，你可能卡几个月。入这行一个重要的能力就是从杂乱的信息中把适合自己的东西挑出来，手艺活自己必须动手动脑，一点懒都偷不得。\r", "\r", "PHP 这个圈子里我见过的高手只会在 Blog 里写自己的产品推广软文，至于技术成长历程还没见谁写过细节的。前端我想也差不多。", "去 github 翻翻 awesome-frontend 看看有没有看得上的", "菜鸟 -> 高级菜鸟 "]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>高并发是指在同一个时间点，有很多用户同时的访问 URL 地址，比如：淘宝的双 11 ，双 12 ，就会产生高并发,如贴吧的爆吧，就是恶意的高并发请求，也就是 DDOS 攻击，再屌丝点的说法就像玩撸啊撸被 ADC 暴击了一样,那伤害你懂得(如果你看懂了，这个说法说明是正在奔向人生巅峰的屌丝。</p>\n<h1>高并发会来带的后果</h1>\n<ul>\n<li>服务端：\n<ul>\n<li>导致站点服务器 /DB 服务器资源被占满崩溃，数据的存储和更新结果和理想的设计是不一样的，比如：出现重复的数据记录，多次添加了用户积分等。</li>\n</ul>\n</li>\n<li>用户角度：\n<ul>\n<li>尼玛，这么卡，老子来参加活动的，刷新了还是这样，垃圾网站，再也不来了。</li>\n</ul>\n</li>\n<li>我的经历：<br>\n在做公司产品网站的过程中，经常会有这样的需求，比如什么搞个活动专题，抽奖，签到，搞个积分竞拍等等，如果没有考虑到高并发下的数据处理，那就 Game Over 了，很容易导致抽奖被多抽走，签到会发现一个用户有多条记录，签到一次获得了获得了多积分，等等，各种超出正常逻辑的现象，这就是做产品网站必须考虑的问题，因为这些都是面向大量用户的，而不是像做 ERP 管理系统， OA 系统那样，只是面向员工。</li>\n</ul>\n<blockquote>\n<p>下面我进行实例分析，简单粗暴，动态分析，纯属本人个人经验分享，如有说错，或者有更好的建议或者意见的请留言，大家一起成长。</p>\n</blockquote>\n<h1>并发下的数据处理：</h1>\n<p>通过表设计,如：记录表添加唯一约束，数据处理逻辑使用事物防止并发下的数据错乱问题<br>\n通过服务端锁进程防止包并发下的数据错乱问题</p>\n<blockquote>\n<p>这里主要讲述的是在并发请求下的数据逻辑处理的接口,如何保证数据的一致性和完整性，这里的并发可能是大量用户发起的，也可能攻击者通过并发工具发起的并发请求</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>如例子：通过表设计防止并发导致数据错乱</p>\n</blockquote>\n<ul>\n<li>需求点<br>\n[签到功能]<br>\n一天一个用户只能签到一次，<br>\n签到成功后用户获取到一个积分</li>\n<li>已知表<br>\n用户表，包含积分字段<br>\n高并发意淫分析(属于开发前的猜测)：<br>\n在高并发的情况下，会导致，一个用户签到记录会有多条，或者用户签到后不止加一积分。</li>\n<li>我的设计<br>\n首先根据需求我会添加一张签到记录表，重点来了，这张表需要把用户唯一标识字段(ID,Token)和签到日期字段添加为唯一约束，或者唯一索引，这样就可以防止并发的时候插入重复用户的签到记录。然后再程序代码逻辑里，先执行签到数据的添加(这里可以防止并发，添加成功后再进行积分的添加，这样就可以防止重复的添加积分了。最后我还是建议所有的数据操作都写在一个 sql 事务里面，  这样在添加失败，或者编辑用户积分失败的时候可以回滚数据。</li>\n</ul>\n<hr>\n<blockquote>\n<p>如例子 2 （事务+通过更新锁 防止并发导致数据错乱 或者事物+Update 的锁表机制）</p>\n</blockquote>\n<ul>\n<li>需求点：<br>\n[抽奖功能]\n抽奖一次消耗一个积分\n抽奖中奖后编辑剩余奖品总数\n剩余奖品总数为 0 ，或者用户积分为 0 的时候无法进行抽奖</li>\n<li>已知表:<br>\n用户表，包含积分字段\n奖品表，包含奖品剩余数量字段</li>\n<li>高并发意淫分析(属于开发前的猜测):<br>\n在高并发的情况下，会导致用户参与抽奖的时候积分被扣除，而奖品实际上已经被抽完了</li>\n<li>我的设计:<br>\n在事物里，通过 WITH (UPDLOCK) 锁住商品表，或者 Update 表的奖品剩余数量和最后编辑时间字段，来把数据行锁住，然后进行用户积分的消耗，都完成后提交事物，失败就回滚。\n这样就可以保证，只有可能存在一个操作在操作这件商品的数量，只有等到这个操作事物提交后，其他的操作这个商品行的事物才会继续执行。</li>\n</ul>\n<hr>\n<blockquote>\n<p>如例子 3 （通过程序代码防止包并发下的数据错乱问题）</p>\n</blockquote>\n<ul>\n<li>需求点：<br>\n[缓存数据到 cache 里] ，\n当缓存不存在的时候，从数据库中获取并保存在 cache 里，如果存在从 cache 里获取，每天 10 点必须更新一次，其他时间点缓存两个小时更新一次\n到 10 点的时候，凡是打开页面的用户会自动刷新页面</li>\n<li>问题点：<br>\n这里有个逻辑用户触发缓存的更新，用户刷新页面，当缓存存在的时候，会取到最后一次缓存更新时间，如果当前时间大于十点，并且最后缓存时间是 10 点前，则会从数据库中重新获取数据保存到 cache 中。\n还有客户端页面会在 10 点时候用 js 发起页面的刷新，就是因为有这样的逻辑，导致 10 点的时候有很多并发请求同时过来，然后就会导致很多的 sql 查询操作，理想的逻辑是，只有一个请求会去数据库获取，其他都是从缓存中获取数据。(因为这个 sql 查询很耗服务器性能，所以导致在 10 点的时候，突然间数据库服务器压力暴增)</li>\n<li>解决问题：<br>\nC#通过 （锁） lock ，在从数据读取到缓存的那段代码前面加上锁，这样在并发的情况下只会有一个请求是从数据库里获取数据，其他都是从缓存中获取。</li>\n</ul>\n<hr>\n<h1>访问量大的数据统计接口</h1>\n<ul>\n<li>需求：\n用户行为数据统计接口，用来记录商品展示次数，用户通过点击图片，或者链接，或者其他方式进入到商品详情的行为次数</li>\n<li>问题点：<br>\n这接口是给前端 ajax 使用，访问量会很大，一页面展示的时候就会有几十件商品的展示，滚动条滚到到页面显示商品的时候就会请求接口进行展示数据的统计，每次翻页又会加载几十件</li>\n<li>意淫分析：<br>\n设想如果同时有 1W 个用户同时在线访问页面，一个次拉动滚动条屏幕页面展示 10 件商品，这样就会有 10W 个请求过来，服务端需要把请求数据入库。在实际线上环境可能还会超过这个请求量，如果不经过进行高并发设计处理，服务器分分钟给跪了。</li>\n<li>解决问题：<br>\n我们通过 nodejs 写了一个数据处理接口，把统计数据先存到 redis 的 list 里。(使用 nodejs 写接口的好处是， nodejs 使用单线程异步事件机制，高并发处理能力强，不会因为数据逻辑处理问题导致服务器资源被占用而导致服务器宕机)\n然后再使用 nodejs 写了一个脚本，脚本功能就是从 redis 里出列数据保存到 mysql 数据库中。这个脚本会一直运行，当 redis 没有数据需要同步到数据库中的时候， sleep ，让在进行数据同步操作</li>\n</ul>\n<hr>\n<h1>高并发的下的服务器压力均衡，合理站点架设， DB 部署</h1>\n<blockquote>\n<p>以下我所知道的：</p>\n</blockquote>\n<ol>\n<li>服务器代理 nginx ，做服务器的均衡负载，把压力均衡到多台服务器</li>\n<li>部署集群 mysql 数据库， redis 服务器，或者 mongodb 服务器，把一些常用的查询数据，并且不会经常的变化的数据保存到其他 nosql    DB 服务器中，来减少数据库服务器的压力，加快数据的响应速度。</li>\n<li>数据缓存， Cache</li>\n<li>在高并发接口的设计中可以使用具有高并发能力的编程语言去开发，如： nodejs 做 web 接口</li>\n<li>服务器部署，图片服务器分离，静态文件走 CDN</li>\n<li>DBA 数据库的优化查询条件，索引优化</li>\n<li>消息存储机制，将数据添加到信息队列中(redis list)，然后再写工具去入库</li>\n<li>脚本合理控制请求，如，防止用户重复点击导致的 ajax 多余的请求，等等。</li>\n</ol>\n<h1>并发测试神器推荐</h1>\n<ol>\n<li>Apache JMeter</li>\n<li>Microsoft Web Application Stress Tool</li>\n<li>Visual Studio 性能负载</li>\n</ol>\n<blockquote>\n<p>感谢大家的支持，领取天猫 [<a href=\"http://s.click.taobao.com/uc1hdQx\" rel=\"nofollow\">双 11 红包</a>] ，获得推广费用来维持网站的运行，谢谢理解。</p>\n</blockquote>\n<blockquote>\n<p>大家有啥意见或者建议的到 <a href=\"http://blog.thankbabe.com/?from=v2ex\" rel=\"nofollow\">原文地址</a> 给我留言吧，感谢支持~</p>\n</blockquote>\n</div></div>"], "reply": "17", "tittle": "大话 WEB 高并发解决方案", "comment": ["爱说大话的程序员不值得信任", "nodejs 单线程连接数据库在数据处理的时候会卡住么？高并发小这样没问题么", "不打脸，不嘲讽，纯粹是好奇，现在的程序员难道不是以数据的一致性为最高准则？高并发的情况下，为什么会产生多条记录签到记录、奖品被多抽走？\r", "有压力也要丢给 web 服务器吧，来不及处理不能让数据库乱套啊，处理不了就让 web 返回失败，不要去给数据库增压。", "队列搞定 - -", " +1 ，高并发解决的问题是建立在一致性的基础上的，如果一致性得不到保障能抗再多的并发也白搭；后端是一定要具备流控能力的，要根据不同的中间服务的频率峰值来合理设计、控制。", "开启事务->琐行->执行操作->关闭事务 搞定", "我的问题是：高并发的时候直接去写关系数据库好么？尤其是很多约束条件的数据库？", "签到表 3 个字段的组合唯一约束，不卡吗，而且再加上事务（这里是分布式事务？）", " 能否具体讲讲？", "这里主要讲的是并发下保证数据一致性和完整性，具体博文的原文留言里有相关解释\r", "\r", "原文地址： ", " \r", "\r", "对于支撑高并发下架构看这篇文章： ", "不要把压力落到 db 上，仅凭这一点，你举的前两个例子就有很大问题", "水平堆机器", "靠数据库保证 unique 和一致性的基本和高并发 88 了", "控制好 db 就行", " 是吗，不先看下事物隔离级别？", "主要依靠数据库的约束和事务回滚来保证一致性固然是可以的，可是这样数据库的效率急剧下降，不停地上锁，冲突，事务回滚，解锁。这就不谈高并发了", "小学生作文水平"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>各位大神，因目前海外业务需要，需要购买大量的 IP\nIP 要固定的\n量级以千做单位。</p>\n<p>麻烦各位大神， 如果知道的话，告知小弟，十分感谢</p>\n</div></div>"], "reply": "35", "tittle": "哪里可以购买到 IP", "comment": ["APNIC.", "刷单??", "淘宝上有，几元一个", "企业宽带一般送 3-5 个固定 IP ，花钱应该可以更多", "用代理？", "RIPE \r", "APNIC", " @", " \r", "谢谢两位大神， ", " 我找到这一家，但是是同个网段的，有无不连续的网段的介绍。哭了。", " 不是拉，做海外业务了。 @", " 代理关键无法稳定长久的 IP 。", "可以在一些私人手里单独买 c 段。", "加入会员会送 /22", "我有认识的人手下屯有海外 ip ，你是要多少？", "找 ISP 。。。", "   /20 什么价位", " 这有点多啊，估计够呛，搞 C 段麽，还是够的", " 4 万多刀吧\r", "\r", "可以找我们 我们就是 LIR 还有个 /22 没用", "这个简单啊,AWS 国际版 EC2 上都是固定海外 IP", "代办 APNIC CNNIC RIPE ARIN AFRIC 等地区的 IP ，费用详情联系 ", "\r", "\r", "楼上那个也是我办的", "   是不是帮申请?", " 是的 帮申请 代缴费 或者就帮申请", "  需要提供什么资料?", " 如果是 2000 个的话，一个月要多少钱？要求不连续的 IP ，各个国家都可以有的那种。", " 私人？有介绍？", "RIPE 官网就有。我还有一段闲置的 c 段，要不要租下", " 哦。价格如何？主要是连续性的不敢要。怕出问题。", " 用来做什么呢，可以加 qq 谈··六吧起久吧三", "我这边有 可以随时联系", " arin 还有个毛线 IP ripe 和 afrinic 帮我代办下 扣扣找你哦", "找互联网管理局申请？", " 这是正统的方法，但是早已经分配完了，排队等估计少则半年，多则不知道。所以贩子很多。", " ARIN 等着即可， RIPE 要公司 并且不能大量", " 公司（中国的即可）域名 一个网站，说明用途 其他的就是钱", " Arin 我已经等了一年半了 Ripe 我资料都有 你帮我代办下 扣扣找你", "什么业务？", " ARIN 都排队一年多了，还不知道猴年马月才给。", "专业提供 ipv4 租用 \r", "或者可在我们机房购买多 ip 服务器\r", "可大量提供  @", "  可以按万计算\r", " 这就不清楚了，不同地区的价格不一样，而且 IPv4 是在涨价，这是真的"]},
{"content": ["<div class=\"topic_content\">给加拿大的公司发了链接，对方说访问不了： <a target=\"_blank\" href=\"http://aventlabs.com/meetcode\" rel=\"nofollow\">http://aventlabs.com/meetcode</a></div>"], "reply": "104", "tittle": "麻烦在北美的兄弟测试下网站能不能访问，多谢", "comment": ["天宫二号可以！", "佛罗里达可以！", "新奥尔良可以", "广州表示不知道可不可以。。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>准备用 Django+Vue 做一个博客，简单点的那种，功能不需要太复杂，就是不知道 SPA 的应用对 SEO 是否有太大的影响？如果要解决 Vue 是否提供这种插件？</p>\n</div></div>"], "reply": "7", "tittle": "Vue 这种 SPA 的前端框架是否适合用来做个人博客？", "comment": ["Vue 支持服务端渲染，另外写博客不用太在意 SEO 吧。。", "先做出来，真遇到实际问题再想解决之道，总会有办法的。", " 为什么不在意 SEO🌚", " 我也不是很在意，因为我觉得博客是自己知识的积累和沉淀。", "除了百度其他知名搜索引擎你都不需担心 seo 的问题，请戳： ", "\r", "\r", "vue 支持服务端渲染的", " vue 做的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>本人 Java 野生程序猿，目前对 Spring ， Java 虚拟机， tomcat ，设计模式比较熟悉。在上线项目中用过 MINA,Redis,ActiveMQ 。想要提升一下自己的水平，求大神们推荐一下，从什么方面入手，以及有没有比较好的书籍，或者开源项目可以学习，研究一下。</p>\n</div></div>"], "reply": "12", "tittle": "本人 Java 野生程序猿，想提高一下自己的水平，求大神们推荐一下好的书籍和开源项目", "comment": ["`Spring Boot`源码?", "你提到的比较熟悉的里面 随便找一个看就行....", " 额。有没有推荐的一些书籍之类的？", "直接让你看巨型开源项目源码的都是耍流氓。。可以搜一下江南白衣推荐的 Java 后端开发书单", "重构，人件，反模式", "shiro ...", "熟悉是什么程度呢？", " 基本上平时开发中遇到的问题都可以解决。", "把你觉得好的解决思路写一下，或者某个东西的看法，并发怎么处理？多线程怎么处理？解耦怎么解？设计模式的核心思想是什么？怎么测试响应？怎么提高响应？", "Thinking in Java\r", "《 Java 编程思想》[:doge:]", "个人觉得还是扎实基础比较重要，学习总是一个循环向上的过程嘛。《 Java 编程思想》第四版只支持到 JDK5 （因为缺失 JDK7 、 8 的新特性，所以挺多内容在现在看来是有误的，得靠读者去分辨），而且翻译很差......不过基础方面还是可以巩固的。然后就是必须人手一本的《 Java 并发编程实战》啦", "什么是野生程序员，还有圈养的程序员？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>————————————————说明①：昨天发错节点了，结果一堆 v2er 点了收藏但是就一位朋友给了看法 <a href=\"https://www.v2ex.com/t/319607#reply4\" rel=\"nofollow\">https://www.v2ex.com/t/319607#reply4</a>\n这让我们有点蛋疼，我们的本意是来求建议以便于改进的， 2333 。来试试看程序员节点有没有朋友能给一些好的建议我们回去改进。\n————————————————说明②： github 的 star 已经顺利突破 300 ，说明多少对大家还是有些用处的，我们挺开心的，在 Github 和 gitosc 上的各个开源项目 star 总数已经上千了，昨天刚刚和开源中国红薯他们确定下来，明年我们会和开源中国、南京江宁政府一起在南京办一场大的源创会，讲道理的话，开源是得人人一起干才好玩啊。</p>\n<p>昨天的帖子：\n有需要的朋友欢迎下载使用，也欢迎大家去 github 给我们一个 star 并且留下宝贵的建议，我们会认真考虑您的建议。</p>\n<p>lyicon 是一套图标众多、风格清新、更适合国人使用的开源字体图标库， 100%兼容 fontawesome 的图标，细化图标，把实心图标都改成空心，更加方便 APP 及现代化网页使用。已发布至 v0.02 版。基于 apache2 协议开源。</p>\n<p>特性：</p>\n<p>1 、实心图标空心化</p>\n<p>2 、增加 fa 缺少的一些常用图标比如 wallet redbag 等</p>\n<p>3 、优化一些图标更适合 APP 使用</p>\n<p>4 、 100%兼容 fa ，旧项目完美切换。</p>\n<p>更新日志：</p>\n<p>1 、所有图标加粗至 40px</p>\n<p>2 、补充在上一版本遗漏的图标</p>\n<p>3 、增加 doc docx xls xlsx ppt pptx zip mp4 等二十多个用来表示文件类型图标</p>\n<p>4 、增加 ie7 支持</p>\n<p>下载地址：</p>\n<p>github ： <a href=\"https://github.com/ijry/lyicon\" rel=\"nofollow\">https://github.com/ijry/lyicon</a></p>\n<p>码云： <a href=\"http://git.oschina.net/jry/lyicon\" rel=\"nofollow\">http://git.oschina.net/jry/lyicon</a></p>\n<p>零云： <a href=\"http://git.lingyun.net/admin/lyicon.git\" rel=\"nofollow\">http://git.lingyun.net/admin/lyicon.git</a></p>\n<p>Created by 零云 <a href=\"http://www.lingyun.net/\" rel=\"nofollow\">http://www.lingyun.net/</a></p>\n</div></div>", "<div class=\"topic_content\">看到一楼二楼的对话，似乎确实是忘了放官网了 <a target=\"_blank\" href=\"http://lyicon.lyunweb.com/%E3%80%82%E6%88%91%E7%9A%84%E9%94%85%E3%80%82\" rel=\"nofollow\">http://lyicon.lyunweb.com/。我的锅。</a>\r<br>再有就是使用过程就是正常字体图标库的使用过程，没啥特别的，直接在官网下载引入自己的项目即可使用。\r<br>如果说创作的过程的话，倒是有个分享可以给大家 <a target=\"_blank\" href=\"http://www.lingyun.net/cms/index/detail/id/32.html\" rel=\"nofollow\">http://www.lingyun.net/cms/index/detail/id/32.html</a></div>", "<div class=\"topic_content\">官网： <a target=\"_blank\" href=\"http://lyicon.lyunweb.com/\" rel=\"nofollow\">http://lyicon.lyunweb.com/</a></div>"], "reply": "49", "tittle": "话说，我们开源了一套字体图标库 lyicon， Github 上很快突破了 300 个 star ，求建议以便改进", "comment": ["没有文档，甚至没有 Demo ，要别人怎么给意见嘛。", " ", "  ", "   强迫症表示，这个图标应该还可以好看一点", "chrome 动画图标,翻转图标貌似不正常?", " 感谢反馈，已在文末添加补充内容。我的锅", " 已点感谢，您是怎么发现官网的", " 额，这真是属于强迫症早期症状", " 具体是指？", "   \r", "图标看起来好虚 是我电脑的问题还是? \r", "fontawesome 又没问题", " orz ，“虚”要怎么理解？", "图标风格有些诡异", " “诡异”，额，感觉跟楼上朋友回复的“虚”有异曲同工之处，所以， any good ideas ？", "不错， star 一个!", " 只能说风格比较适合特定类型的网站，不像 FA 那么通用。", "  ", "   对比一下 你们是把 fontawesome 的加黑部分都去掉了....", " 这个看法也有一定道理，比如 APP 上，现在这套看起来会更好看", "github 上 fontawesome 的 license files 都去哪了...", " 我们的基础就是来源于 fa 的思路,但其实都是自己一个个做出来的，增加 fa 缺少的一些常用图标比如 wallet redbag 等，就是在用 fa 的时候经常在各种情况下觉得不好看，比如 APP 上所谓的加黑部分经常不好看，然后就索性自己做一套了。要说感谢 fa 我觉得也不为过，回头我们也在官网感谢一下或许更好。", " 事实上我们没有 fork 它，全是自己一个个做出来的，也新增了不少没出现过的，其实和他们没有什么直接联系。或许有一些抱大腿的行为？我们回头在官网给 fa 一个感谢我觉得是有必要的。", "哥们 到内页的时候 你把网站 title 改下呗。还是 Font Awesome", "初步总结可以改善的地方：\r", "1 、给与 fa 一个感谢，但也声明这套全是我们自己一个个手工做出来的，没有 fork ，有新增很多常用的，主要考虑的是适用于各种 fa 用起来不好看的场景。\r", "2 、图标和下面的说明可以调整一下布局，让图标更大一些看起来更清楚。\r", "3 、 Payment Icons 里可以考虑加进支付宝微信支付等等。", " 恩，因为都是开源的，有些懒得改了，看来还是注意一下为好。同时给与他们一个感谢。", " 在 cnBeta 看到过一次 那时候收藏了~", " 原来如此。恩 cnbeta 上最先放出来。今天发帖收货了一些好建议。 cool 。", "好好的开源项目，非要和开源中国扯上关系，感觉一下子说不出的难受。", "线条发虚有可能渲染导致的，如下图：\r", "\r", "\r", "\r", "另外，空心图标也确实会比实心图标百搭。\r", "\r", "意见的话，个人角度来说觉得有一些图标可能需要重新调整一下，有一部分图标看起来很诡异，例如 hand-paper 中指太粗、 hand-peace & hand-scissors 很难脑补出真实动作、 deafness 需要想一想才能明白等等。\r", "\r", "一点个人意见，供您这边参考。", "贴个原始图吧，比较能分辨有没有“发虚”，平台是 mini2\r", "\r", "虽然首页的样式太像 ", "\r", "为你的图表内容点赞", "其实就是 fontawesome 去掉填充色吧？", "江宁的源创会是怎么回事？我本人就在江宁，所以比较好奇", " 可参考 18 楼、 21 楼、 26 楼", " “有一部分图标看起来很诡异，例如 hand-paper 中指太粗、 hand-peace & hand-scissors 很难脑补出真实动作、 deafness 需要想一想才能明白等等”这一段已反馈，并已点感谢。", " 这个明年可以单独开贴另说了，我们会和 osc 联合举办一个活动，地点应该在软件谷里。可能会喊上 36kr 和创业黑马一起玩。你在江宁哪家公司工作吗？", " 说实话我还是很佩服开源中国的，不可否认的是它对国内开源事业的发展起到的是促进作用，国内开源大环境在慢慢改善，我们要给自己一些新兴不是：）\r", "有您自己看法的话也欢迎回帖交流。", " 是 321 人才大厦的 36kr 吗", " 楚翘城", " 我之前也呆过，可惜现在不在那边了~~", "海外打开官网太慢，官网不能放 github 吗？或者 Readme 来个列表也可以啊。", "  \r", "\r", "细节还是要注意下啊  首页的这个旗子 icon 就有两个问题了\r", "圆形不是圆的 旗子和杆的连接处也有问题", "   再如 fa-mars", " 已收到建议，多谢", " 已点感谢，看的非常仔细啊。反馈已收到。", "习惯性打开控制台，发现好多报错。。。", " 开源分享，该感谢下的，但是将主页搞得跟 FA 那么像，图标也是，咱中国人，是不是目前按只会山寨了？", "喜闻乐见，大家觉得显示效果不佳，作为非专业人士，我认为主要原因是字形不够规范，次要原因是字体尺寸和 fa 不同， font-size 得跟着改。", "如果真的全部都是手工制作，那么首页上的旗子我觉得不会是你们应该犯的错误。", "说实在的，进来的时候看帖子我都不忍心往下翻，排版实在太糟糕了。不过进了 github 和官网，发现这个套图标我很喜欢，不过字体细节可以再打磨。有时间写点 demo 体验一下(*ﾟ▽ﾟ)ﾉ", " 2333 ，帖子的排版估计我没太用心，我的锅。恩细节肯定很多地方需要继续打磨的，大家反馈的很多好建议我们都已经由设计跟进了。", " \r", " \r", " \r", "统一回复一下，当时官网临时随便搭的，为防止侵权 fa ，我们把网站原来的样式代码全都删除了，正在重新设计开发全新官网，图标的正常使用不受影响。非常感谢大家的各种好的提议和建议。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>NodeBB 是一个很现代化的开源论坛程序，响应式、单页面、模块化、社区活跃，现在的功能已经很丰富了，可以分组，聊天，关注，实时消息通知， markdown, emoji 都支持，自定义很方便，主题，插件， widget 都有，感觉可以做很多事，博客， cms 应该都行， 这里有人用过吗？</p>\n<p>这是我搭的论坛:  <a href=\"http://v2mm.tech\" rel=\"nofollow\">v2mm</a></p>\n<p><a href=\"http://v2mm.tech\" rel=\"nofollow\">v2mm</a> 是一个自由职业者社区，提供给追求自由的 Geek 们一个自由讨论，互相学习与分享的地方。</p>\n<p><a href=\"http://v2mm.tech\" rel=\"nofollow\"><img alt=\"screenshot\" src=\"https://github.com/revir/nodebb-theme-v2mm/raw/master/screenshot.png\"></a></p>\n</div></div>"], "reply": "15", "tittle": "用 NodeBB 创建了一个论坛，有人玩过吗？", "comment": ["\r", "已经是我小弟玩剩下的了", "搭建 nodeBB 有什么要注意的吗？", " 搭车", "当时玩的时候 中文支持不是太好 不知道现在怎么样了~", "已经是玩剩下的了 ", " ", " \r", " \r", " \r", "你们都好厉害！ \r", "交换友链不  :D\r", "\r", " \r", "其实搭建 nodeBB 很简单， node 环境加 redis 或 mongodb ， 安装依赖一行 npm install 就搞定了。\r", "然后就玩插件去吧， 大概因为新出的事物，插件还很少，不过够用。 nodebb 用到的新技术很多，比如 websocket, async, 自己写插件也很简单，很适合学习，可玩性也高。\r", "\r", " \r", "国际化现在做得很好，官方支持中文。", " 可以呀，来友链哈哈哈", " examfocus.cn", "  OK, 我已加你网站为友链啦， 直接加在全局的 footer 上 :)", "  我打开 502", " 正在搭锐速和 tor 。。稍等。。 ", " ", " 锐速和 tor 是用来做什么的呢", " 你懂的 ", " ", " 已加友链，回头有空再补一下别的:)", " 哥们你好 问句哈，锐速对 websocket 有加速作用没"]},
{"content": ["<div class=\"topic_content\">最近在给 aventlabs 丰富内容的时候，一直在想这个事情，觉得有必要写一本全栈方面的书。\r<br>\r<br>大概思路是：围绕一个完整的项目，随着功能的开发，把涉及到的各个端用到的知识一一展开，项目要包含 Web 前端、后端、数据库、 iOS 和 Android App 。\r<br>\r<br>内容不会写的太深入，旨在让初学者能对整个项目用到的技术有个初步的了解，达到入门的目的。看完之后就能立刻上手写项目，并尽量保证都是用的最佳实践。\r<br>\r<br>想听听你的看法，谢谢！名字都想好啦，叫做《全栈开发者的自我修养》：）</div>", "<div class=\"topic_content\">为了督促自己把这件事做成，做了一个预订页面，希望各位多多支持，您的支持就是我的动力。\r<br><a target=\"_blank\" href=\"http://aventlabs.com/fullstack\" rel=\"nofollow\">http://aventlabs.com/fullstack</a></div>"], "reply": "77", "tittle": "想写一本全栈开发的书，问问大家的意见", "comment": ["不如叫《全栈开发者从入门到重新入门》 or 《全栈开发者从入门到删数据库跑路》\r", "\r", "23333 开个玩笑，上架后算我一本。", "全栈开发从入门到入院", "你这是要断培训机构的后路啊！！", " 谢谢支持，有动力了\r", "\r", " 入院。。。\r", "\r", " 恩，留给他们的时间不多了：)", "我就问一句 有生之年看得到么", "《从全栈开发者到客栈打工仔》。\r", "\r", "你这书肯定要比《代码大全》要厚。", "《从全栈工程师到全干工程师》", "全栈开发从入门到放弃", "写好了，通知我。收藏了", " 另外我的域名 ", " 你要不要，适合做官网", "从全栈开发到颈椎病康复指南", "写好而请通知我，很期待啊", "<全栈工程师的的全干修养>\r", "写完算我一本~", "写好了请通知我", "什么语言", "必须支持啊", "这个真心不错， mark 。。。", "小白表示等着上架的那天…", "<<全干工程师是一种什么样的体验>>", "入门的书最大的问题就是跟不上变化，比如我最近学 android 看了几本几年前的书都是用 eclipse 的，和 Android Studio 完全对不上。", "《全栈开发者从入门到放弃》", "《全栈开发者从入门到全干到全站(Stand)》", "mark 一下。期待大作出版~", "这本书估计得有四五千页？", "现在就在看一本书，叫《 Web 全栈工程师的自我修养》", "@阮一峰。。。。", " 我觉得还是有可能的\r", "\r", " @", "  具体会多少页，还没考虑过。反正是电子版，要经常更新，就不用浪费纸了\r", "\r", " 每一端用的语言是不一样的\r", "\r", " 谢谢豆\r", "\r", " 技术和工具都发展太快了\r", "\r", " \r", " \r", " \r", " \r", " \r", " \r", " \r", "谢谢支持，写起来会给大家汇报进度的", "很期待 :)", " \r", "今天获取 700 个星，牛逼", "好宏伟的计划，需要很大的毅力啊。\r", "不过还是祝楼主写书顺利了。", " 都是加星之后就不看的，我觉得阮应该收费，看看真正想学的有多少", "《从前列腺保护到颈椎康复》(●'◡'●)。\r", "这么多知识点，感觉要花好多时间去写书。支持一下\r", "大概多久能出版。", "。。。", "楼主是打算写黄页吗？满篇都是链接二维码", "全栈是一种境界,哪能考看书来达到,你无非就是几本教程合并在一起了,没有任何意义", "无非就是一些网上一搜一大把的资料的合集\r", "\r", "没有太大的价值", "🌚坐等", "期待", "列个大概的目录瞧瞧", "期待+1", "全栈开发者需要看的书目都可以写成一本书了吧", "想法是好的，但是市场是少的", "楼主不如写本自传吧", "坐等", "楼主呀，光 iOS 这一个不说深入，就说全面一点的就够写一本书的了。。。。\r", "你这本书打算写多厚。。。", "请问打算分几套出版。。。", "既然是电子版，可以考虑在 gitbook 上写。用 markdown 。", "楼主你好，关于全栈开发话题我写过一本书，楼上有人提到了，叫《 Web 全栈工程师的自我修养》。\r", "\r", "书的主要定位是轻松的技术杂文集。因为技术不断发展，所以要持续学习新技术，但是比起马不停蹄追赶新的技术，我认为更重要的是学习“面向未来的开发技术”。这本书表达了我在“全栈学习”上的想法。\r", "\r", "在我创作这本书的时候（ 2014-2015 ）， React-Native 还没有这么成熟， Hybrid app 也一直性能不佳，所以我舍弃了 APP 端的内容，着重在“ Web 全栈”这一领域。 Web 全栈领域的技术也不少，包括服务器、数据库、 Web 前端，甚至设计等。\r", "\r", "现在技术趋于成熟，抽象程度更高，所以我觉得楼主通过一个项目来鸟瞰整个全栈产品的目标虽然很艰巨，是可能达成的，加油！\r", "\r", "不过书的名字呢，希望可以尽量规避一下，就不要叫《全栈 xxx 的自我修养》了，你觉得呢？", "\r", "\r", "看到楼上有人提到过了，贴个某宝链接。这本书据说是推荐书目，如果楼主不能写的质量高很多建议避讳一下书名~~", " 没问题，名字还没定，这个好说。", "真正的全栈不会看这种书，想成为全栈的可能基础又不够，尴尬", " 这本书的定位就是给初学者的，已经是全栈就没必要看了", "个人建议 lz 可以写写： 为什么要做全栈，岁月易逝，不要一开始就让新人去搞全栈，几年之后样样通，样样松。\r", "\r", "雨果已经写过《全栈的自我修养》了，你的书名不如改为《全栈工程师的小康之路》或《全栈工程师的中产之梦》\r", "\r", "你可能觉得我太利益化，但这是每个人不得不面对的问题。年轻的时候可以折腾技术栈，有了家庭，你还能随便折腾吗？", " 你说的没错，搞全栈并不是纯粹为了兴趣。你可以搞 site project ，做一些 remote work ，这些都是可以创富的。如果只局限在自己熟悉的技术，会发现面比较窄。有了全栈经验，视野就不同了。海阔凭鱼跃，天高任鸟飞。 至于具体如何赚钱，要自己开动脑筋了。", "先定个小目标, 写几篇博文吧", "看了你的 homepage ，看了你的 github ，看了你 V2EX 上的主题，真觉得。。。现在出本书的门槛真低。\r", "\r", "正是因为如此，现在市场上充斥着大批号称自己是全栈的人，甚至连 bit 和 byte 都搞不明白。\r", "\r", "我就是来批判的，无他。", " 谢谢你的直言不讳，批判的成本也很低，不过这更坚定了我的决心。", "这年头期货已经不好卖了，期货无法按时交付甚至没有交付的例子太多了。建议想写还是先自己写出来，而不是预售求鞭策。这样有了钱反而容易降低质量。", "最终有价值的话自然会有人买单。", "另外价格太贵了，电子书 150 我是没见过第二本。", "从 C++到颈椎病康复指南", "Traceback (most recent call last): File \"/usr/lib64/python2.6/site-packages/tornado/web.py\", line 1413, in _execute result = method(*self.path_args, **self.path_kwargs) File \"main.py\", line 830, in get self.render(path) File \"/usr/lib64/python2.6/site-packages/tornado/web.py\", line 704, in render html = self.render_string(template_name, **kwargs) File \"/usr/lib64/python2.6/site-packages/tornado/web.py\", line 808, in render_string t = loader.load(template_name) File \"/usr/lib64/python2.6/site-packages/tornado/template.py\", line 343, in load self.templates[name] = self._create_template(name) File \"/usr/lib64/python2.6/site-packages/tornado/template.py\", line 370, in _create_template with open(path, \"rb\") as f: IOError: [Errno 2] No such file or directory: '/var/www/aventlabs-web/tpl/mobile/fullstackpay.html'", "您是哪位？", " 已修复", "好贵啊", "全栈的有生之年", "做过多年全栈，现在只能对全栈，呵呵。", "打开楼主的链接，我以为进入了 V2 的分站。", "我倒是觉得应该在前面多写写怎么搭建一个比较快速好用强大的开发环境，怎么形成一个好的工具链", " OK ，这个建议很好", "这是熟练掌握 100 种语言的 hello world 节奏么", "全栈开发从入门到放弃", "《全干工程师从入门到出门左拐卖烧饼》", "全栈想学好恐怕需要看的书能放一个书架，每个类别都会有经典的书籍，那么“全栈”的介绍我更倾向于有条理的知识思维导图以及推荐书目。说实话，不太看好楼主的做法", "全栈最大的篇幅应该都在前端，而如今前端乱得一塌糊涂，新人在没有任何前端的基础上（比如只知道 HTML 的一些基本和简单的 JS 、 jQuery ），非常难以上手，混乱的场面给人无法下手的感觉。\r", "书中可以重点教一些工作流程和方法，给新人一种前端怎么玩的指导，让新人可以快速切入。\r", "另外可以不用拘泥于解释，先给一些 step ，让人跟着做，然后做完了之后再解释为什么。这样反而会让人在用的时候思考。\r", "全栈有几个人能达到？整天全栈全栈真的有意义？", " 想想比较头大吧，好在我的目的就是入门，深入的不讲，这样可以控制篇幅。\r", "\r", " 想法不错，前端确实是越来越复杂了，我得好好斟酌讲解的步骤了。", "看了一下楼主的信息\r", "\r", "觉得这本书如果有人买,那么这个人一定是在做慈善或者在交智商税"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>刚到京，有了工作，只是上下班时间比较久，目前还没打算搬，转了五次地铁，一次公交，试问这中间我能干些什么？</p>\n</div></div>", "<div class=\"topic_content\">表示来这边房租合同签了一年，押金一个月，十月底交了三个月的房租，到期之后考虑搬走，期间我会在公司附近找个地方，实在有点穷。</div>"], "reply": "103", "tittle": "每天上下班四个小时，这中间我能做些什么？", "comment": ["看电影可行，看书的话因为频繁换乘车程路线注意力很难集中，", " 乐视吗？", "看沿途的风景和车流"]},
{"content": ["<div class=\"topic_content\">Kindle 电子书特价： O'reilly 经典动物书套装(超值 10 册套装,含:像计算机科学家一样思考 Python) Kindle 电子书  10 本总价 29.99 ，有需要的朋友入吧。\r<br>包括如下单册：\r<br>jQuery Cookbook 中文版\r<br>jQuery UI 开发指南\r<br>编写可维护的 JavaScript\r<br>HBase 权威指南(“十二五”国家重点图书出版规划项目)\r<br>像计算机科学家一样思考 Python\r<br>Hadoop 技术详解(“十二五”国家重点图书出版规划项目)\r<br>JavaScript 函数式编程\r<br>响应式 Web 设计性能优化\r<br>数据整理实践指南\r<br>Python 和 HDF 5 大数据应用\r<br>地址：\r<br><a target=\"_blank\" href=\"https://www.amazon.cn/O-reilly%E7%BB%8F%E5%85%B8%E5%8A%A8%E7%89%A9%E4%B9%A6%E5%A5%97%E8%A3%85-%E7%BE%8E-jQuery%E7%A4%BE%E5%8C%BA%E4%B8%93%E5%AE%B6%E7%BB%84-%E7%AD%89/dp/B01N3P60X4/ref=sr_1_38?s=digital-text&amp;ie=UTF8&amp;qid=1479092377&amp;sr=1-38\" rel=\"nofollow\">https://www.amazon.cn/O-reilly%E7%BB%8F%E5%85%B8%E5%8A%A8%E7%89%A9%E4%B9%A6%E5%A5%97%E8%A3%85-%E7%BE%8E-jQuery%E7%A4%BE%E5%8C%BA%E4%B8%93%E5%AE%B6%E7%BB%84-%E7%AD%89/dp/B01N3P60X4/ref=sr_1_38?s=digital-text&amp;ie=UTF8&amp;qid=1479092377&amp;sr=1-38</a></div>"], "reply": "15", "tittle": "Kindle 电子书特价： O'reilly 经典动物书套装(超值 10 册套装,含:像计算机科学家一样思考 Python) Kindle 电子书 10 本总价 29.99", "comment": ["刚发完怎么会显示 2 天前的呢？", "不知道排版怎样", " 反正钱也不多，买来看看就知道了。。", "多看 好像也有", "真便宜，已收", "已收", "谢谢 收了", "谢谢 已收", "有点坑啊， 10 本书在一个文档里。。。", "挺好，支持一下，不过我不买- -", "看起来很诱人的样子，曾经买过 kindle 并积灰的路过", "谢谢，已买，排版不错（经 iPad mini 2 测试）", "已买。。。", "为什么不 10 本分开做打折", "已买。。。。。。"]},
{"content": ["<div class=\"topic_content\">题主目前是成都附近的大三狗一枚，想从事 IT 行业，已经上课学了 C++/JAVA/JAVA WEB 然而并没有什么 ruan 用\r<br>经历：\r<br>1.从大一开始自学做网页，学校教的编程语言基础就只会 JAVA 的，面向对象也理解了。\r<br>2.大二的时候自学 TP 框架，对原生 php 了解不是很多，会基本的操作 mysql 。\r<br>3.已经用 TP 做了几个网站小项目（局域网用的那种），来源于老师申报了学校科研项目，给我们千把元钱做出来。\r<br>资源：\r<br>1.因为在学校的创新创业基地，配备了 4 台 hp 的服务器，就我一个人在玩，平时基本不想碰，偶尔装 Linux 玩。\r<br>2.老师在阿里云买了个 1k 左右的服务器，给我管理，也没去碰。\r<br>\r<br>本来想自己学下安卓，用 TP 写服务端的接口，但跟着网上各种视频教程学的很无力，感觉几天就忘完了。\r<br>看趋势，感觉 golang 又很有发展前途，又不敢全力去研究。\r<br>学校的话什么都教 C++/java/jsp/c#都是只教一些基础，然后大四让你去某个培训机构培训三个月。\r<br>但是实在不想去，所以明年暑假想在成都找个公司实习，但感觉往那个方向投简历都没底气！\r<br>求 V2 大神指点！</div>", "<div class=\"topic_content\">没想到这个帖子能得到这么多 V2 大神的指点，感谢各位提出宝贵的意见 \r<br>总结下回复： \r<br>1.不要浮躁，静下来学好基本知识，操作系统，网络，数据库，算法，数据结构等 \r<br>2.不要拘泥于语言，深入学习好一门就不怕找不到工作， JAVA 是比较适合的语言 \r<br>3.好好利用手上的资源， 4 台服务器 \r<br>4.项目经验很重要 \r<br>5.投简历的时候别去拉勾 \r<br>6.英语很重要 \r<br>7.珍惜时间，好好学习（我爱学习，学习爱我） \r<br>8.精通一门语言，再学习感兴趣的语言 \r<br>关于问题： \r<br>1.我不是电？，只是一个普通的二本民航大学，每届都是一半多的人去了空管，航空工程等专业（毕竟那些专业在我们学校可以说包就业） \r<br>2.大一的时候做了不少的 ACM 基础题 \r<br>3.学习做网站后，上课有点飘飘然了，并没有好好学习数据结构等基础课，该反思 \r<br>4.我确实想进入 IT 行业，专业环境比较差，愿意写代码的不超过 5 个 \r<br>5.前面一直都是在看着网上的视频教程在学，并没有认真的看完过一本编程语言的书，很惭愧 \r<br>6.英语四级一次就过了，六级考了一次差 4 分后就没去看题了 \r<br>7.平时看了比较多的视频教程，但很难记住</div>"], "reply": "102", "tittle": "现在究竟学什么语言？", "comment": [" 哈哈，拉勾上看过你们公司", " 也看过《七周七语言》吗？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>分享一个代理服务器 <a href=\"http://881free.com\" rel=\"nofollow\">881free.com</a> 国内外免费的代理 ip</p>\n</div></div>"], "reply": "4", "tittle": "分享 稳定的代理服务器", "comment": ["很好用哦", "已加入收藏夹", "浏览器 proxy 试了几个不太好用，姿势不对？", "不错，收藏了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>现在确实是速度太慢了，而以前很多能用的油猴脚本和 Chrome 扩展，现在都不能用了。。。</p>\n</div></div>"], "reply": "61", "tittle": "现在用百度网盘下东西，有什么好的姿势没？", "comment": ["淘宝买一个不限速的客户端，或者 ", " 这个站在用，但是有时候下载链接会被防盗链保护，还有现在好像限速了， aria2 也就 300k/s", "能讲讲你们用的这些的原理么？？很好奇。", "不限速的客户端搜一下不就有了吗。。。", " 防盗链保护？我也用这个，这样的情况没遇到过咦", " 试过很多个了，很多都没啥效果", "百度干净云，或者网盘助手", "百度云管家 破解版", "\r", "这个脚本可以。", " 试试", " \r", " 这个我现在也被限速了，顶多 1m ，这是不是要加 header 了？", "Aria2", " 不限速的客户端是什么原理？", " 好像是…體驗時間無限", "直接会员，一年 200 多，省心。再有，不都鄙视破解嘛（尤其 mac 下），百度云个人不信任，但百度云盘一直用了很久了，很稳定。", "IDM+脚本", "某度云直链", "下了个别人改的“百度干净云”绿色版，每次可以直接下载的时候“召唤大神”就能使用 高速通道功能", "用过楼上说过的某破解版（体验时间无限那种），用过 ADM 多线程下载，也充过超级会员。\r", "下载最快的方式就是充会员", "干嘛不充会员， V2 禁止讨论破解", "请看:https://www.xiaoz.me/archives/7419 文章中的脚本目前可用。", "试用时间倒着走的百度云管家（ pc ）\r", "\r", "安卓: adm+ua 欺骗，满速", " 并没有限速， aria2 10M 网络下 1.3mb/s 20M 网络下 2.2mb/s", " 然而我是 100m 的网……原来基本 5m/s(2.4g 无线的锅)", "现在不是限速，是账号限速好不。。换什么都没用。交钱吧。", "idm", "amp 或者 adm", "所有好多不限速客户端，刚开始能满速，后来就没用了，速度越来越慢。估计是因为限流量了。就那么几个 G 的流量可以慢速下载。现在的下载姿势是用 ", " 下载。不过速度也开始限制到 10M 了。", " 用了半年的客户端，一直可以满速下，不过也就下大文件用一下，其他时候浏览器下载就搞定了……", "没人用百度干净云么，我这能跑满 100M 光钎。下载速度 10m/s  不过也要看资源热门程度。。", "迅雷加直链，速度非常快了", "开会员加 aria2 路过\r", "目标是按 0.8 元 1g 把会员价下回来", " 干净云？这玩意儿有官网么", " 现在还能会员获取直连吗", "企业端满速的", "如果不想充值会员又想保存节操与保障电脑安全，去淘宝买个日租账号呗。一两块钱用一天。你不会天天有大文件下载吧_(:зゝ∠)_", " 不是说 30 块钱一个月么…", "百度干净云，今天刚用上，还比较满意，就是得把别人分享的保存到自己的网盘再下载", "好久之前收藏了一个大神改的，现在还是用的很爽，在学校有时候最高可以九兆每秒，稳定在四五兆", "百度网盘助手加 aria2 凑合用了，不可能一直满速的", " 求淘宝链接。。完全找不到。", "都去百度买破解软件了还不掏钱买会员？\r", "\r", "这三观歪到屁股了？\r", "\r", "百度云我觉得这已经是百度不多的良心佳作了，实在不想让它走 360 的路。", "偶尔用用 bypy ...\r", "\r", "同时开两个线程，共 1MB/s 。可能是我自己宽带不给力。", " 要用一些微妙地关键字呀……比如什么“百度 svip ”“ baidusvip ”之类的转换下_(:зゝ∠)_", "十几块钱充一个月会员，用百度网盘官方版就是了，一个月足够把度盘的东西搬回家了。\r", "\r", "之后还是慢慢转去海外吧。", "我用小米路由器，在路由器上插个 U 盘，让它自己下。速度大概 800k/s", " 群晖的云同步套件速度也还可以， 5M/s\r", "左右", " 求共享一发", "chrome 开 developer tools-》模拟移动设备-》开始下载-》抠出下载地址-》开迅雷下", "买百度会员的我佩服，主动吸毒", "ua 改为 ipad 可以无视大小直链下载...", "我发现有好多文件连百度自己的客户端都是下一部分就失败下不了的，不知道是不是我没充 vip", " 冲了会员百度照样删你文件禁你分享。\r", "一个充钱还得不到回报的服务，实在没有充值的动力呢。", "一直使用树莓派 + 第三方客户端 下载度盘电影。速度慢不怕，就挂着自动慢慢下载。反正一觉睡醒，就下完了。附上第三方客户端： ", "脚本+IDM", " ,谢谢 但是这网站会不引发账号安全问题", "迅雷现在也要限速了", " 不会吧，是授权不是登陆。不清楚。", " 这个网站挂了？", " 多谢，原来博主在这里，完美解决了多线程下载，但是速度还是只有 100k 左右。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>又到了双 11 购物狂欢的时候，突然想知道自己每月在订阅服务上花费了多少？</p>\n<p><strong>哪些真的是物有所用，哪些是纯粹是给开发者贡钱。😂</strong></p>\n<p>下面是我的每月订阅：</p>\n<p><img alt=\"\" src=\"http://ww2.sinaimg.cn/large/006y8mN6jw1f9n47u4ihyj30e00f10u7.jpg\"></p>\n<h2>给开发者贡钱了</h2>\n<ul>\n<li>\n<p>Office 我有两个 Mac 和一个 PC ，经常碰到要取消另外一台激活才能编辑。然而我一周还不打开一次， PC 上可以使用 WPS ， Mac 上有 iWork ，今天晚上的 99 元 就不参加了。</p>\n</li>\n<li>\n<p>Aodbe PS 订阅，虽然让我终于入正了，然而我一个月也不打开一次。。。</p>\n</li>\n<li>\n<p>Xbox 金会员和 EA 会员，嗯，买了之后和 Xbox 一起吃灰了。</p>\n</li>\n<li>\n<p>PD 。。自从组装了一台 PC 之后，就给卸载了。。。虚拟机太占用 Macbook Pro 的宝贵空间了。</p>\n</li>\n</ul>\n<h2>物有所用</h2>\n<p>虽然 VPS 比重最大，但是确实每天都在用，只要上网都离不开，衡量下，其实还是用到物有所用的。<br>\n（另外求推荐香港 VPS ）</p>\n<p>Apple Music ， dropbox ， GitHub ，网易云音乐，优酷，这些每天都会接触，都会使用，也算是物有所用</p>\n<h2>总结：</h2>\n<p>订阅消费，可以估算一下自己的使用频率和不可替代性，来理性消费。</p>\n<p><strong>另外大家可以罗列一下自己的订阅，供他人参考</strong></p>\n</div></div>"], "reply": "118", "tittle": "你清楚自己每个月的订阅费用吗？", "comment": ["ss \r", "迅雷\r", "office365 几乎都是年付\r", "\r", "还有就是百度搜索 greenvpn 第一家竟然是假冒的，哎，百度真是没救了。", " 这是什么软件？", " EverNote", "\r", "\r", "一年 6884 元。天，这么算算开销还真大。\r", "优酷爱奇艺什么的老婆看电视剧用，大钱都在阿里云和联通那里，还没算进宽带费，哎……\r", "日子好难过。", "1.迅雷会员，现在已经离不开了， pc 用极速版，特别是 bt 下载的时候，基本能占满带宽，用电信积分换的年会员， 2 张半年兑换券\r", "2.腾讯云，有学生优惠，月付，就 1 块钱，每月 65-64 抵用券，域名免费 1 年\r", "3.office 365 家庭版，年付的， 500 吧好像，共享给了 2 个朋友\r", "4.网易云的联通用户在线听免流量， 12 块， 16G 乞丐版，平时用流量听听还不错\r", "5.apple music ，免费用 3 个月后自动扣费的， osx 上的网易云还不是很完善，歌曲评论翻页时还卡顿掉帧，原生 itunes 这方面就好很多，听的偏欧美点，曲库听全的， spotify 因为账号注册地不在国内，开了 ss 有时还会报错，用的比较少\r", "6.大象笔记，因为多台终端需要就买了，现在在找替代品，新出的 Bear 还不错，对 markdown 支持的也还不错，笔记功能还在尝试\r", "7.爱奇艺，爸妈经常看电影，月付挺划算的\r", "8.私人 vps ，买的别人搭的 vps ，因为是第一年试用，所以一年才 50 ，香港线速度很快延迟也低，看 1080p 的油管也就比国内看优酷的加载速度稍微慢一点点，完全满足需求\r", "9.psn 会员，之前冲着每月免费游戏去的，因为宝石机上的游戏对胃口的太少了，宅向游戏又不玩，只能等月免一些全平台的作品，现在 ps4 也吃灰了， 2 个月前就没再续订\r", "\r", "autodesk 的 cad 是用的学生教育政策试用版， mac 上只有 16 版，可以免费 3 年好像，反正挺久的，学生党没什么钱，看上去很多其实大部分都很便宜，就 office 365 最贵，一些小软件都是买断制的，现在也尽量在找免费使用的替代产品，临近毕业才知道赚钱不易", "感觉云音乐会员没什么用啊，，，不充会员也可以体验到基本必须的功能就够了。。。", "穷孩子路过~\r", "\r", "SS  ￥ 60/三个月\r", "Dropbox 1TB  ￥ 68/月\r", "iTunes Giftcard  ￥ 90/月", " 刚才去看了下 确定是 HK$62 年,Google Play 直接订阅的 续费应该同价", " 请问是香港区的特殊定价,还是只是针对你的?", "房贷 17000/m ，其它各种订阅加起来应该不到 1000/m 不想仔细算了，每年 21 万不到点", "不算不知道一算吓一跳 每月在 dedi/vps 就要花 200 美刀+ orz", "楼主用的什么软件统计的？", " OmniOutliner ，其实用 Excel 计算会更方便一些。", "Aliyun 60/M\r", "HKVPS 50/M\r", "HKWeb 20/M\r", "Domain 50/M (12 domains)\r", "----------------------------------\r", "Total: 180RMB/Month", "linode 的 vps ，每个月 10 刀\r", "eset 杀毒软件， 3 年 150 老毛左右\r", "115 买了一年 300 老毛\r", "域名若干，准备留的只有一个", "哇，你的 GreenVPN 怎么这么便宜？可以在移动平台用嘛", " 可以，我是一口气买了 2 年， so...", " 这个我真的不知道.因为当时无聊闲逛 看到这个价格我就订阅了. 如果 v2 上也有用港币结算的童鞋可以去看看现在是什么价格...."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>首先表达一个态度就是我认为数据结构和算法很重要，但是有一个前提。</p>\n<p>最近一直和朋友探讨这个问题，也咨询一些其他程序员，如果排除装 X 因素，你自己有没有为项目特地的研究一下数据结构和算法。</p>\n<p>而设计模式中，除了工厂和单例真的很少用到其他的。</p>\n<p>我知道 V 站都是大牛，但是到底什么程度的项目会用涉及到数据结构和算法，或者说不懂数据结构和算法的人，怎么样的一个项目就是他的技术极限。</p>\n<p>V 站也好，知乎也好，感觉数据结构和算法放佛神话一般，可是我知道很多根本不懂数据结构和算法。</p>\n<p>而本人大学学习的数据库原理，网络协议，操作系统，计算机原理，到先在我不知道给我带来多少的帮助，也许我还没有涉及到更高层次的编程体验，感觉自己一直在增删改差，处理一些数据，然后输出渲染就好。</p>\n<p>总结的一个问题就是，如果不懂不学习一些计算机的基础知识，他的技术极限是什么？</p>\n</div></div>", "<div class=\"topic_content\">各位的回答都很好，但有一些跑题，并没有完全回到本人的疑问！\r<br>\r<br>但是也稍微总结一下。\r<br>\r<br>算法和数据结构很重要，在一些功能实现的时候，会算法和数据结构的可以找到更加优化的方式去解决，但是不会的人一样可以用较笨的办法解决。\r<br>\r<br>看个人的目标，你是打算成为一个建筑设计师还是建筑师，如该想成为一个优秀的建筑设计师，那么需要很系统的去学习计算机底层的知识，数据结构和算法，操作系统，网络协议等等。然而你只想成为一个建筑师的话，那么熟练的解决业务代码中各种需求，熟练的使用各种工具和开源软件，以及开源程序，熟悉框架的使用等等，那么一样可以成为一个相对优秀的程序员。\r<br>\r<br>不知道总结的是否正确。</div>"], "reply": "57", "tittle": "对于任何编程语言，数据结构和算法对于一个程序员重要到什么程度？", "comment": ["“如果不懂不学习一些计算机的基础知识”，极限是写了超过 500 行代码以后，自己便无法维护。", "楼主起码大学已经学习了，所问的这种人是大学是其他专业，也许因为考证会点 C 语言，背过一些题目，例如工商管理专业的学生，或者工作很久的会计转行程序员，去一个培训班或自己看语言文档摸索学习，貌似除了语言本身其他都不知晓太多，如果还不学习，能走到什么程序。\r", "\r", "这样的人写得了业务代码，不懂的地方自己搜索资料也可以搞定，可以看语言文档和框架文档，但是之外的一些知识掌握起来很费力！", " 我写过一个开源项目，用了一次位预算，然后分享给朋友，他问我这个代码什么意思，我说是异或，然后开始漫长的问答环节！", "功利一点讲的话，面试会挂", "刷完一遍题以后，就像打开一个新世界。它为我面对未来可能遇见的一些问题提供完全不同的新思路。 这种新思路，是没有学习过算法，数据结构的人在 99%的情况下都无法靠他自己的脑力想出来的。有的算法真的是精妙到，就算把解法摆在你面前，都得花上一两天的时间才能理解进去。", "有的公司在招人的时候，喜欢问数据结构和算法的问题。往往目的不在于数据结构和算法本身，而是想筛选智商高的程序员。", " 我比较擅长把问题抽象成一个数学题，然后用公式去解决，再用语言把公司实现，虽然我不知道这算个什么。", " 有的公司明明只是需要一个步枪，结果非要招一个榴弹炮，我感觉可以用就行，如果个人跟不上公司的发展淘汰即可，毕竟公司跟不上个人的发展，人家还会跳槽呢！", "不会数据结构，写个超市存物箱都只会用数组遍历，你觉得呢？\r", "离开了数据库就不会对大量数据进行增删改查了", " \r", " \r", "其实算法考量的不是智商，反而是基础。因为确实很多算法都是前人科学家或者做学术的人花很长时间研究出来的，常人确实不可能短时间内想的出来。 我们能做的，只能是去理解熟悉并且应用它。", "1. 面试笔试会考。计算机基础知识牢固会让你拿到好公司的 offer 。这可是真金白银。\r", "2. 你技术方向的职业生涯的高度取决于你对计算机基础知识理解的深度。我现在工作用的技术是大学里完全没有学过的，但我不认为我大学白上了。", "说实话，码了几年，算法还是比较菜的。但是常见数据结构还要多了解，程序写得好不好还是要靠它！", "我一直认为数据结构和算法不决定一个程序员有没有工作，决定的是工资上限。", "我认为关键在于知道与不知道的区别，如果解决某个问题，他知道有合适的数据组织方式和算法解决问题，就算他不精通这种数据结构和算法，只要用心，他也能解决得很好；但如果他根本就不知道，那就得上 v2/zh 发帖了，如果遇到合适的人指点一下，他也能解决问题；区别在于，一个需要指点，一个独立解决问题。", "算法还是有必要学习一下的，当然，先从日常问题入手。高级别的算法，数学要求很高，无底神坑，时间精力产出比有点划不来。", "我举个我工作中的实际例子吧：一堆整数，大约几万到几十万个，去掉重复的。这个整数是一些 key ，要发给远端的一个 Key-value store 做查询，为了节省带宽，所以先去掉重复的，再发送。\r", "不懂数据结构与算法，也能解决这个问题，但是如果你懂，可以做的更好。\r", "\r", "再比如搜索引擎中一个很常见的问题： phrase search 。假如已经有每个词的倒排表，想要查询某个词组是否在文档中出现，该如何？\r", "\r", "这些问题都没有 best-answer ，正是如此，才需要解决问题的人精通数据结构与算法，以随机应变。", "程序的本质还是数据吧，保存数据操作数据依赖数据结构。。 linus 就一直强调设计数据结构的重要性。", "数据结构和算法不是编程的最根本的东西么?这个都要质疑的话, 可见 2 点\r", "1. 现在的程序员对自我修养的要求有多低\r", "2. 现在大多数公司的产品技术水准能有多低\r", "\r", "说个亲验的例子, 之前招人面试的时候最后放了一道实际要写点代码的题, 炒鸡简单, 写个能跑的冒泡即可, 来面试的人实际能写对的不足 30%, 附加题是在这个基础上升级一下改成可以自定义排序条件的排序, 然后剩下 30%中的 2/3 又挂掉了.\r", "\r", "所以我觉得现在市面上程序员不好招是有原因的, 写代码维生的人不少, 但是市面上合格的程序员其实并不多, 根据面试多年的体验来说, 成都 市面上 2/3 的\"程序员\"最好改行, 其中 1/3 甚至带毒, 我不知道那样的公司敢用, 另外 1/3 或许还有救, 然后市面上还缺 1/3 那么多的人来干活.........", "题主这个问题很有讨论价值。", "我很早以前自学 php 的时候也一直在想这个问题，明明 php 给我封装好了那么多的 api ，为什么我还要去学数据结构，算法？或者各种网络原理？", "直到我现在上了一所辣鸡专科学校，学软件开发(java)之后，才深有感悟。", "首先就说数据库里面的密码存储吧，如果你没有学过计算机网络，没有讲到过 hash 算法的原理，你怎么也弄不懂为什么别人的代码里面都要求你注册用户的时候要把密码 md5 一下。", "或者说最近在用 redis 的时候，到底应该是用列表还是有序集合还是什么，如果你不知道他们底层用的数据结构是链表还是什么，你根本就不知道该如何选择。相应的， mysql 为什么要建索引，数据库为什么要有范式，为什么 for 循环里面写++i 比 i++速度快，这些都是因为你多多少少有了解过计算机基础，各种编译原理，数据结构算法，你才能更加方便快速的通过原因来记住这些要点，而不是死记硬背。", "这就是我自学这么久以来的一些感悟。", "   太极生两仪，两仪生四象，四象生八卦。学过数据结构就知道这活脱脱就是二进制的二叉树....😂😂😂😂", "我现在连链表都不敢多问了", " 非常同意你说的。不过有的题目，别人的代码我看一天都看不明白，但自己仔细想想代码能写出来，真是奇怪 T_T", " 说出了真理， RMDBS 可以是对算法的依赖变成了对 DB 的依赖，当然， DB 本身已经是一个集算法大成的系统", "编程一大误区: 算法能力=解决问题的能力", "可以把科班生和非科班生，或者说培训班量产出来的和真正热爱这方面的人区分开来", "野生半个程序员出来说一下吧。\r", "\r", "很多情况下，确实用不到算法。这个跟工作内容有关系，毕竟现在分工这么细致了。算法能锦上添花，但是不会算法，也是能解决问题的，虽然会有一些“效率”的问题——但很多情况下“效率”不是问题。\r", "\r", "打比方说的话，扫地这个工作谁都能做，但是合理规划能提高效率，问题是上面验收的人只要你一天内完成，至于你是 3 个小时，还是 1 个小时，不好意思——工资是一样的。\r", "\r", "同样解决一个问题，写一堆 if else 和一个函数式，水平差距还是有的——最简单的位运算，我这家公司开了 3 个小时会跟前后端开发讲，还有人弄不太明白，而且还有人说，用字符串判断也是一样，更容易做一些。\r", "\r", "总的来说，如果你处于底层，那么算法对你的收益确实很低，远没有你学个框架，熟悉一下各种 API 来得高。但是，请看清楚一点，现在各种开源库，框架，工具，文档中文化，让进入这个行业的门槛越来越低，当你上升到一个阶段时，你会发现——各种问题都要算法来解决。\r", "\r", "总的来说，机会永远是留给有准备的人。", "做前端的\r", "很简单的一个需求\r", "若干个 n x m 的方块 排布在 w x h 的空间内，忽略方块的间隙(也就是紧贴着排放)\r", "请想出一个尽可能美观的排版方式 \r", "这个代码找别人现成的可能 10 行就搞定了 js\r", "你自己写写的出来么\r", "我连思路都没有 所以我把这算法存起来了 每次直接复制", "我们本科老师说过 现在的本科意义不在于你记住什么 是你有朝一日用到的时候曾想起有个东西可以帮你解决 你去查资料 知道查什么 这门课就没白学\r", "可惜很多码农连用什么算法解决问题都不知道吧\r", "现在的库别说是简单的数据结构了 各种高级算法你想要都有库而且都不差 就怕想都想不出来", "不懂不学习一些计算机的基础知识，他的技术极限是正无穷。\r", "\r", "就像 Srinivasa Ramanujan 一样大量重复前人的工作，反倒有了过人的洞察力，从而有能力作出开拓时代的发现。\r", "\r", "然而对大多数人而言，把前人的成果摆在眼前尚且不能立即掌握，要让他从零开始独自一人重复千万人的工作恐怕更是天方夜谭。\r", "\r", "这样的结果恐怕只是，在技术上，独自一人被全世界丢在身后，奋起直追，然并卵。\r", "\r", "然而现实是，这样被丢在后面的人很多。。。孩子你不孤独，就算没有能力理解和掌握一种算法，你也可以把它当作黑盒调用前人写好调好的程序；虽然你可能始终无法理解 i++ 和 ++i 在速度上的差别，没关系，现代的编译器始终为你优化，你无需再在意该使用哪一种；看到开源代码中出现 (i << 3) + (i << 1) 你或许一脸蒙逼，但其实就算老老实实写成 i * 10 ，开高优化，二者生成的代码也都相当于 ((i + i) * 4 + i + i) ……\r", "\r", "相反，冒泡排序背到滚瓜烂熟，真到应用时始终不如语言标准库实现的快排；熟悉动态规划、递归递推之间的转化，你能写出时间复杂度只有 O(mn)、空间复杂度只有 O(m + n) 的 Levenshtein 距离的实现，却不如隔壁老王从维基百科、 Stackoverflow 上复制粘贴；熟悉 IEEE 754 的你借助位运算近似得到 1/sqrt(x) 的值再用牛顿法迭代造就传世平方根倒数速算法，然而机器性能的增长使得这一运算不再成为瓶颈，同时借助 GPU 和开源工具任何人都能写出更快更好的程序……\r", "\r", "好了我写不下去了，神来之笔在计算机科学界比比皆是，没有坚实的跨领域基础在背后支撑，你玩不到光影绚烂的 3D 游戏，搜不到 Chris Lomont 发表的研究平方根速算法的论文，用不上带有多点触摸 Touchbar 的 nbmp ，甚至想写程序还要在卡片上打孔，不，计算机压根就不存在，算盘也不存在，数学也不存在，人类还在茹毛饮血……\r", "\r", "话说回来，如果没有坚实的计算机科学基础，你也能灵活运用别人写好的算法、程序让周围的人、老板对你刮目相看；但是懂得原理终究是不一样的，只会调用别人写的 Levenshtein 距离而不懂得原理，如果想实现 Sublime Text 那样先筛选子序列再按编辑距离排序，你永远也想不到要怎样修改……", "简而言之，不懂计算机科学，你也可以成为自己小圈子中的佼佼者，胜任遇到的大多数任务；但是不学习计算机科学，你便永远也无法超越自己的小圈子，仅此而已。", " 哈哈，工程师和艺术家是两种职业。\r", "\r", "建筑设计师总归是少数，砌墙工人的收入也比低级设计师高得多——说不定当个包工头比设计院那些加班的那帮苦逼们要滋润多了。\r", "\r", "只是为了赚钱，自然有着每个人的最优解，但是，最优不代表最有趣。给我来说如果做程序员却要放弃创造力这种可能，还不如回老家卖猪肉呢。:doge:", "算法上面都说了，对于设计模式这方面，当你阅读框架源码的时候你会发现大量的设计模式在其中处于非常重要的地方。当然如果你觉得程序员写一辈子业务代码就行了的话，当我没说= =", "如果想要做得更好更快更爽，引入设计模式是非常必要的！不管是业务代码还是框架代码！\r", "但如果没有那个追求，也能凑合着过。。。", "我觉得会搜寻的比会算法的更重要.\r", "不会搜寻.整个自己搞.最高水平就是自身状况了.\r", "会搜寻.你会得到这个世界前 10 优解.", "日经贴，有意思吗？爱会会不会拉到", "软件工程 VS 计算机科学，同感软件工程专业貌似更强调解决工程问题，不够重视算法和数据结构，只有部分搞 ACM 的算法较强，同样为面试刷题。", " 我也是这样认为，看人，两种，一是他的行动（基础知识体现），二是智商（算法，聊天，思考）", "凡事无绝对，还有人记得 homebrew 作者吗", " python 狗表示不懂算法，只懂轮子，如果轮子都没有，说明目前能解决的是极少数，所以我也解决不了.....", "FLAG 的面试基本都是算法题\r", "所以题主你看。。。", "我觉得很多人都有个错觉：虽然我算法跟数据结构不熟，不擅长做题，但是我还是可以拿到好 offer 从事有前途的开发工作。", "面试会挂 2333", "仁者见仁，智者见智。 有人开车只是代步，有人开车超越极限。仅仅写个刷票的脚本，还是在写 Linux 内核呢。算法自然是很有用的，但是分人，工作几年了不会用 Linux 也是大有人在。", " homebrew 作者的态度问题，知道 google 会面试算法，连二叉树都不复习下，压根不重视这次面试机会。", "非常重要，可能一开始你没有意识到。", "错别字实在太多了 ", " ", " 游戏打的特别好, 能参加国内顶尖赛事 算智商高?", "设计模式本来就是从实际的代码结构当中提炼出来的。\r", "就算你没有刻意去用设计模式，但是如果你写的代码维护性足够好，你会发现代码里或多或少会用到那些你甚至都没听说过名字的设计模式。", "为什么现在的程序员越来越觉得算法的意义和用处不大，是因为现在的框架大部分时候已经将很多算法进行了封装，你直接调用就行了，而不需要关注底层的实现，但是你程序中的每一次排序、每一个查找背后都隐藏着算法的精华。\r", "因此，当你享用前人算法成果的时候，不要摆出一副算法无用的态度，嘲笑哪些辛苦研究算法的人。\r", "几年前有个话题，是讨论为什么国内甚少出现大牛级的人物，就是认为国内技术人员缺乏对底层技术的深入研究，由于框架使用过多，所以导致国内技术圈出现一种思潮：底层技术（包括算法与数据结构、组成原理、编译原理甚至数学）无用论。然而，如果纵观国外技术大牛的技术发展史并打开各类框架的源码，才会发现其中所包含的大量所谓的『无用技术』的使用。\r", "所以，如果你只是甘于当一位『技术使用者』，你可以无视算法这类日常看似无用的技术，但如果你对自己的技术有所追求，请拿起书好好学习。", "不是神话，重要程度因人而异。\r", "如果想要精进，学好总是没有错的。\r", "但精进并不总是好的。", "个人认为程序员的出路大概分三个方向\r", "算法之类的专业基础不好的话\r", "技术方向基本走不下去。\r", "行业方向走不到前边去。\r", "管理方向并不会有太大影响。\r", "上边的回答基本都是从技术方向考虑的。\r", "当然大部分程序员确实没有管理能力，如果能在一个行业坚持下去，自己不擅长就去用擅长的人做好的，那样工作也不会有太大问题。最可怕的就是专业基础不好还各个行业乱换的人。", "把程序员比作传统工匠的话，比如木匠？那么编程语言、各种库就是你刨子、凿子，工具掌握的好，可以保证做出东西，掌握得多可以做出更多的东西。但要有美感的东西、甚至艺术品，则要求必要的审美、造型的原理，数据结构之类的知识就是编程的审美、原理。工具决定能力的下线，而审美决定上线。\r", "CS 的学校教育像学院派的，教的是审美，附带的教一些工具，而就业市场更多的职位是要求会工具。所以专业出身的人就很困惑，有点像美院油画系毕业去画插画的感觉。而我们这种野路子出身的，则是先熟练了工具，再努力提高艺术修养。", "你从事的工作涉及到算法 /数据结构, 就有用. 涉及不到, 就没有.", " 而谁能走的更远则取决于谁能更好的有工具把自己的审美表达出来。至于只研究审美的那是 XX 家的事，而不是工匠的事。我一直觉得，所谓程序员不过就是信息时代的工匠而已。", " 这个比喻好", "初中级还行   毕竟在自己水平不行的情况下  为什么不用用简单无脑的第三方库   \r", "等第三方库满足不了你的需求了    算法什么的重要性就体现出来了。。。", "我觉得数据结构， 算法 ， 程序抽象逻辑这三个是互帮互助综合的一体的东西， 单拿出来比较难分析。因为短板不一定是数据，可能是程序也可能是你的算法。\r", "如果单拿数据结构出来说\r", "这个分三种\r", "1 对数据结构完全不熟悉或者入门\r", "   结论就是 你的程序就是个屎， 别人看不懂， 自己也不可能维护。 因为你自己都不知道怎么回事， 找不到你需要的数据。程序的重点并不是能跑而是能跑易维护方便开发， 而数据结构正是 结构化程序的一个核心， 还有块是抽象逻辑。\r", "2 对数据结构有一定的经验\r", "    结论就是， 你的程序能跑也能维护的不错，所有的东西都能正常进行， 相信程序代码也是在这个层次。 然而阻挡不了需求和客户的增长。 简单说 我拿个 mysql 就写写 select 也能做个淘宝出来。但是一天 50 万人买东西， 才真正体现出优秀的分库分表， b 树，各种查询优化模块以及负载性能的重要性\r", "3 大神。\r", "    适应日益增长的需求，鲜见性的开发优秀的可复用搞维护性的结构，不管是升级分布式，并行计算，各种奇怪模块部署都能有条不紊，稳定，且保证支持高性能算法和抽象程序的结合"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>软件开发是现时很火的职业。很多人年轻人会选择编程作为自己职业生涯的起点。如何规划好程序员这个职业？一起来分享 JavaScript 之父 Brendan Eich ， Clojure 创建者 Rich Hickey ， Python 创建者 Van Rossum 等编程大牛对年轻程序员的职业建议。 <a href=\"http://blog.livecoding.tv/%E5%98%BF%EF%BC%81%E7%A8%8B%E5%BA%8F%E5%91%98%E4%BB%AC%EF%BC%8C%E4%B8%8D%E8%A6%81%E5%85%89%E9%A1%BE%E7%9D%80%E5%86%99%E7%A0%81%E3%80%82/\" rel=\"nofollow\">http://blog.livecoding.tv/嘿！程序员们，不要光顾着写码。/</a></p>\n</div></div>"], "reply": "2", "tittle": "JS 之父以及其他編程大牛们给年轻程序员的职业建议", "comment": ["初学者要从 py3 开始学习。学习 py 的朋友应该不用再纠结 学 py2 还是 py3 了把。哈哈", "不过按照现在的形式说，国内搞 py 的一般都是转过来的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>Hi ， Caicloud 宣布开源其 CI/CD 平台 Cyclone,专注解决微服务架构下面向容器的 CI/CD 和版本管理问题。 Cyclone 项目是基于 K8S 的第一个 CI/CD 工具，完善了 K8S 生态圈。 Cyclone 在 Github 上的地址： <a href=\"https://github.com/caicloud/cyclone\" rel=\"nofollow\">https://github.com/caicloud/cyclone</a> ，欢迎试用！</p>\n<p><strong>关于 CI/CD 背景知识</strong></p>\n<p>持续集成（ CI ）是一种软件开发实践，即团队成员经常集成他们的工作，每次集成都需要通过自动化的构建，包括编译、发布、自动化测试来验证，从而尽早的发现集成错误。持续交付（ CD ）是指频繁地将软件新版本交付给质量团队（或者用户）以供评审。如果评审通过，那么就发布到生产环境。每当代码库里有一个变化，如果能自动且随时触发以上过程，那就达成了持续发布（ CD ）。</p>\n<p>Docker 是一款基于 LXC 的容器引擎，自 2013 年开源以来，因为其易用性、高可移植性在开源社区非常火热。 Docker 将软件与其依赖环境打包起来，以镜像方式交付，让软件运行在“标准环境”中，这非常符合云计算的要求。各大 IT 巨头纷纷跟进，基于 Docker 容器技术创业公司也如雨后春笋， Docker 创造了一个崭新的容器云行业。 Docker 技术应用广泛。如，利用其隔离特性，为开发、测试提供一个轻量级独立沙盒环境进行集成测试。加速本地开发和构建流程，使其更加高效轻量化，开发人员可以构建、运行并分享容器，轻松提交到测试环境中，并最终进入生产环境。</p>\n<p><strong>Caicloud 的容器云 CI /CD 实践</strong></p>\n<p>Caicloud 作为国内领先的容器集群服务解决方案供应商，向用户提供企业级的 Claas 、 Containerizor 、 Cyclone 、 Cargo 、 Cubernetes 、 Clever 六大闭环服务。</p>\n<p><img alt=\"\" src=\"http://p1.bqimg.com/567571/7b6cfb933c9d9bfe.jpg\"></p>\n<p>Cyclone 作为其中重要一环，是基于 Docker 容器沙盒隔离特性实现的持续集成，将软件与其依赖环境打包起来，以镜像方式交付，让软件运行在“标准环境”中，原生支持多种容器云平台持续交付的工具。具有以下特性：</p>\n<p>所有编译、构建、测试、发布过程均以容器为载体，消除环境差异性。通过版本控制工具触发流水线持续集成；</p>\n<p>生成容器镜像并输出安全报告，确保构建的镜像安全可靠。全过程可视化，契合团队协作，提高研发效率；</p>\n<p>管理组件支持微服务多组件联合发布，使用图形化界面展示组件的依赖关系及联合发布的过程和状态，应用拓扑关系图形化；</p>\n<p>基于发布策略和角色控制功能，提供灵活的持续部署方式。基于容器和镜像的版本控制，提供多种升级回滚策略。</p>\n<p><strong>Cyclone 实现原理</strong></p>\n<p>CI/CD 工作流</p>\n<p><img alt=\"\" src=\"http://p1.bqimg.com/567571/0e5f50e15e7d4892.jpg\"></p>\n<p>Cyclone 提供了丰富的 API 供 web 应用调用，通过 API 建立版本控制系统中代码库与 Cyclone 服务关联关系后，版本控制系统的提交、发布等动作会通过 webhook 通知到 Cyclone-Server ，启动一个基于 Docker in Docker 技术的 Cyclone-Worker 容器，在该容器中从代码库中拉取源码，按照源码中 caicloud.yml 配置文件，依次执行：</p>\n<p>PreBuild ：在指定编译环境中编译可执行文件；</p>\n<p>Build ：将可执行文件拷到运行环境容器中，打成镜像发布到镜像仓库中；</p>\n<p>Integretion ：使用 Build 阶段构建的镜像启动一个容器，启动持续集成所依赖的微服务容器进行集成测试；\nPostBuild ：启动一个容器执行一些脚本命令，实现镜像发布后的一些关联操作；</p>\n<p>Deploy ：使用发布的镜像部署应用到 Kubernetes 等容器集群 PaaS 平台。</p>\n<p>构建过程日志可以通过 Websocket 从 Cyclone-Server 拉取；构建结束后 Cyclone-Server 将构建结果和完整构建日志通过邮件通知用户。</p>\n<p><strong>软件架构</strong></p>\n<p>Cyclone 软件架构如下图所示。每个立方体代表一个容器。</p>\n<p>Cyclone-Server 中 Api-Server 组件提供 Restful API 服务，被调用后需要较长时间处理的任务生成一个待处理事件写入 etcd ；</p>\n<p>EventManager 加载 etcd 中未完成事件，监视事件变化，发送新增待处理事件到 WorkerManager 中；\nWorkerManager 调用 Docker API 启一个 Cyclone － Worker 容器，通过环境变量传入需要处理的事件 ID 等信息；</p>\n<p>Cyclone-Worker 使用事件 ID 作为 token （有效期 2 小时）调用 API ，拉取事件信息依次启容器执行 integration 、 prebuild 、 build 、 post build ，完成后反馈事件执行结果，构建过程日志推送到 Log-Server ，转存到 Kafka ；</p>\n<p>Log-Server 组件从 Kafka 拉取日志推送给用户；需要持久化的数据存入 Mongo 。</p>\n<p><img alt=\"\" src=\"http://p1.bqimg.com/567571/883d1fffb4d39478.png\"></p>\n<p>Cyclone 也可以多节点分布式部署，部署图如下所示。每一个立方体代表一个节点，使用 Haproxy 反向代理实现负载均衡和 SSL 数据加密，分发 API 请求到各 Cyclone 节点中。</p>\n<p><img alt=\"\" src=\"http://p1.bqimg.com/567571/5b117cf0f17f837b.jpg\"></p>\n<p><strong>Roadmap</strong></p>\n<p>Cyclone  由 Caicloud 工程师自主研发，并贡献给社区（地址： <a href=\"https://github.com/caicloud/cyclone\" rel=\"nofollow\">https://github.com/caicloud/cyclone</a> ）。 Cyclone 现已实现基本功能发布早期版本 V0.1 。我们计划在 2016 年 12 月底发布 V0.2 Kubernetes 版 Cyclone ； 2017 年第一季度发布 V0.3 提供 web 操作界面，后续还会开发用户权限管理，用户插件支持等功能。</p>\n<p>扫描二维码进入到 Cyclone 社区</p>\n<p><img alt=\"\" src=\"http://p1.bqimg.com/567571/86bbb77f67233c9b.png\"></p>\n</div></div>"], "reply": "9", "tittle": "欢迎来试用我们的开源项目 Cyclone！", "comment": ["支持", " 感谢支持 比心", "我还以为是 Altera 的 cyclone 芯片……", " 就是……好像 FPGA 来着", "去瞅瞅~友情帮顶", " 隔了好几个好几个行业 -。-", " thanks", "支持一个", " 哈哈哈 暴露了 -3-"]},
{"content": ["<div class=\"topic_content\">网上看了一下子，可以采用源码安装，或者 rpm/deb 包安装，还可以采用 <a target=\"_blank\" href=\"https://bitnami.com/stack/gitlab/installer\" rel=\"nofollow\">https://bitnami.com/stack/gitlab/installer</a> 上的傻瓜包安装\r<br>\r<br>由于源码安装依赖太多安装麻烦，而且对 PostgreSQL, Ruby 等都不熟，这条路就不去折腾了。\r<br>\r<br>我想知道 deb 包安装和傻瓜包安装的在稳定性、数据备份与迁移等方面有什么差异，大家一般有哪种方式安装的，不想去逐个尝试比较了，希望有经验的 V 友提供点建议意见</div>"], "reply": "34", "tittle": "大家 GitLab 是采用那种方式安装的啊", "comment": ["源码安装", "docker-compose   感觉最方便了，还不用在系统上装乱七八糟的环境 \r", "小组内部用 bitnami 傻瓜包安装的", "docker 对于这种依赖多的还是直接 docker 省事。\r", "docker-compose 配置写好直接备份当前目录就完事，迁移直接拷贝目录。", "分别安装。没用 gitlab 自带的 ngx 和 pg 。", "完全自己搭环境用了两年，更新比较麻烦\r", "最近一次换服务器，折腾了几天官网的 docker ，最后选择了 ", "用的 docker 社区版镜像，升级备份简直不要太方便~", "我用的是 omnibus 版的，省时省力， nginx PostgreSQL 都内置独立版本。早些年没出这个版本的时候是源码安装，那个折腾啊。。。", "docker 安装", "docker 简直完美。\r", "\r", "但熟悉 Docker 需要一段时间。", "docker  +1", "docker +1 \r", "然后进 shell 里改配置", "docker 最简单，这种对内服务我都是用 docker 部署的。", "docker 比较好些， gitlab 的依赖太多，不想和已有环境冲突的话，还是用 docker", "讲道理 GitLab 和 GOGS 使用的语言国内不常用，导致系统集成很麻烦，各种蛋疼之后，我们索性自己开发了一套， PHP 为主，不过暂时还没开源出来，也是有计划搞出开源社区版。 ", "轻量级用 gitbucket 吧...", "docker 安装比较好", "docker", "只使用过 gitlab omnibus deb 安装。还是比较方便的。更新也方便。\r", "备份和恢复略坑，因为恢复时只能恢复到做备份时的版本。所以如果使用 deb 安装，建议在保存备份文件的地方也保存该 deb 包。\r", "\r", "涉及到数据存储或者有 debug 需求的不喜欢用 docker 。", "docker", "gogs 你会回来点赞的", "Docker +1", "docker...", "docker", "只有我一个人是源码安装吗？", "docker ，简单易用", "docker 完事，干嘛要自己折腾", "谢谢大家，看来还是采用 docker 最省事", "虚拟机开一个 debian 然后 apt get", "apt-get install gitlab\r", "这个最简单了，再改改配置文件就好", "使用 docker 一定要记得备份!\t\r", "从官方`Run only one process per container`的建议来说，并不推荐使用 docker 安装 gitlab(gitlab 由于几个组件组成 nginx,mysql...，如果我没理解错的话)", " 下载就是采用 sudo apt install gitlab-ce 方式安装的，也能正常使用，就是比较慢", " 我没有安装 ce 版，直接就是 gitlab"]},
{"content": ["<div class=\"topic_content\">现在在手机上发帖的。电脑上最新的 chrome 和 Firefox 都上不了了，你们的证书显示提供商是 Symantec, 更新时间是 9 月 14 日， 根据 Google certificate transparency 的政策， Symantec 的 9 月 1 日后的证书必须通过验证才行， 不知道是不是这个原因我访问不了了。\r<br>@<a target=\"_blank\" href=\"/member/Livid\">Livid</a></div>"], "reply": "5", "tittle": "V2EX SSL 证书有问题？ certificate transparency 错误", "comment": [" LinuxMint 18, Chromium 53.*, 昨天开始证书报错，同系统下 firefox 没问题", "更新，应该是 6 月 1 日后 Symantec 的证书都需要", "Symantec 从 6 约 1 日期都需要强制提交三个 CT 服务器，在这个日期之前的证书会自动由 Symantec 同步给 Google 作为白名单的方式来处理，但这其中仍然会有很多漏掉的，就需要联系购买证书的服务商，请他们重新颁发一次，重签的时候就会将 CT 日志写入到新的证书中，就可以解决问题。", "奇怪，我的浏览器也出现了，更新到新版就好了 0 0.几个意思？", "to all:\r", "看来是 chrome 的 bug ，更新至 54 版好了。\r", "此帖也有讨论： "]},
{"content": ["<div class=\"topic_content\">今晚用微信扫描天猫某个店铺二维码时，偶然发现熟悉的 500 错误页面， tomcat 的错误提示风格，当时没有截图，也没有细看，接着重新扫了好几次都复现不了了。有点好奇，有没有人知道呢？</div>", "<div class=\"topic_content\">我想问的是：天猫用的是什么 WEB 服务器软件~</div>"], "reply": "58", "tittle": "天猫用的是什么服务器？", "comment": ["天猫 web 层不是用的 node.js 吗？怎么会有 tomcat 呢？", "你确定是 Tomcat 不是 TianCat", " node.js ？为啥我看到的错误是 tomcat 风格的呢？", " 😏SkyCat", "java 在阿里中占比很大的，业务后端估计是基于 java 的，前端是基于 nginx", "阿里后段基本是 java ，前段是自己改的 nginx", "淘宝用的是基于 nginx 二次开发的 Tengine ，这个是开源的，有需要可以下了用", "我最初以为是问几核几 G ，点进来发现是用的什么软件，看了回复在想是什么语言，那么到底问啥？", "我猜 cpu 应该是 intel 没错了吧", "之前前端是 php ，后来好像改成 node 了吧……", "应该是问架构", "用的是 Alibaba Tomcat 以及 Tengine", "都是自己在开源的基础上修改的吧", "确实是 Tomcat ，我也遇到了，仔细看了一下，没截图", "之前在盛大注册游戏的时候也看到过", "线上并不全是 tengine ，也有部分 nginx", "tomcat 一般用的 ali-tomcat", "肯用用的不是阿里云卖的服务器", "Alicat TaobaoEngine", " 这个还真用了。", "不记得什么时候（零几年？）听说阿里用的是 1500 台 JBOSS ，即使现在也不会激进的把所有平台都改了吧", " 问 web 服务器软件。。。", " 确实，看到有些节点的 http server 头是 tengine ，有些是 nginx.", " 坚决不用这种东西，光挖坑不填有什么意思？", " 有 Alibaba Tomcat 这东西？\r", " 才知道有 ali-tomcat 这东西，但是除了名字貌似和阿里没半毛钱关系吧？\r", " Alicat?_?", " \r", "alicat 就是阿里自己修改优化的 tomcat \r", "taobaoengine 就是淘宝团队自己修改的 nginx\r", "都是戏称", "  核心生产系统， 3 年基本上都会进行一次大的重构， jboss 早就进回收站了。", " 有关系。 ali tomcat 深度定制了很多功能， 有些已经回馈到 tomcat 社区。", " 这个上面的报告。。", " 噢， php...", " \r", " \r", "THS ，明白了", " 实力打脸， 666", " 讽刺的好！", " Alibaba Tomcat 是阿里基于 Tomcat 修改的版本。", "我猜一定有用主板吧，应该也带有 USB 和网卡接口", " 还有 cpu 呢", "👻\r", "\r", "![]( ", ")", "这是什么服务器\r", " ", " \r", "淘宝也一样的\r", " 淘宝家的修改版 nginx", " 原来 php", "小霸王", "接入层主要用的 Tengine, 也就是我上面没几楼那个 503 报错页面的 Powered by, 在 github 上有开源版本\r", "有小部分是原生 nginx", "早就不是单一语言系统了……", " 我看到的不是这个样子，图上是 Tengine", "楼主感觉，啊，原来阿里这么屌的公司也用 tomcat ，很菜嘛。\r", "\r", "然而事实阿里的技术已经令业内许多公司都望其项背了，只有仰望的份", "应该是 ali-tomcat", "tengine ，他们自己改的", " \r", " \r", "是阿里云，但是应该不是阿里云拿出来卖的那部分", " 没有哎... 好奇大公司用的什么而已...", "不是改 node 了吗？前端还是 PHP ？", "啊，明白了。只是后缀叫 php 而已，架构早改了。", " 最好的语言 ", " \r", " 每次看到这种 XX 是最好的语言， java 程序员都笑了", "接入层： Tengine\r", "java ： ali-tomcat"]},
{"content": ["<div class=\"topic_content\">滴滴的人出来讲讲故事啊</div>"], "reply": "1", "tittle": "滴滴开始裁员是真的假的？", "comment": ["好像上海 原快滴一年前就陆陆续续了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>需求，有两对象，一个是程序(program)，一个是程序的运行实例（ instance)。现在要提供以下接口：\n1.重启实例 2.启动新实例 3.停止实例 4.软重启实例 4.软启动 5.软停止</p>\n<p>软 xx 一般就是先把总线的路由策略切换到其他实例，使请求不会被路由到正在操作的实例。</p>\n<p>重启和停止接口还要支持批量操作。</p>\n<p>这 URL 该怎么设计？</p>\n<p>只能想到一个比较贴切的\n停止实例 DELETE /instances/</p>\n</div></div>"], "reply": "9", "tittle": "这种情况怎么设计 restful url 该？", "comment": ["post  instance/state", "这是 restful 不明确的地方，不要硬套 restful ， restful 也有缺陷。\r", "建议，全部 POST: \r", "/program/restart\r", "/program/start\r", "/program/soft_restart\r", "...\r", "批量操作的参数全部用实例 ID 列表", "首先你要设计一个状态机……\r", "\r", " 你直接说“抛弃 REST ”好了，用不着写这么长……", "这设计要什么 rest 这是典型的面向装逼 /面向简历编程\r", "传统方式 program?act=reset/new/stop/soft_restart/soft_start/soft_stop\r", "完美解决", "建议可以参考 Tesla 的 API 设计\r", "没必要硬套 rest 的啦。", "rest 多对多就是这么蛋疼", "将对象视作命令比看成资源在这个场景下会更合理一些。\r", "\r", "非要看作资源也不是不能硬套：\r", "启动新实例 和 停止可看成增删，其余的视作状态修改。", "Rest 最重要的在于状态转移或无状态，你这个只是 URL 规则生搬硬套而已。传统通过 token 之类的来转移状态，最多只能称为 RESTless 。"]},
{"content": ["<div class=\"topic_content\">据说发布应用有奖励</div>"], "reply": "19", "tittle": "有想入坑 Tizen 开发的吗", "comment": ["没设备，也不想自己买设备", "想的，准备入", "买了三星电视，是 tizen 系统，很不爽", "每月前一百 1W 美金", "想知道用什么语言和 IDE", "我也看到了 无奈北美买不到 可能回国 taobao 买", "想知道用什么语言和 IDE", "想知道用什么语言和 IDE+1", " C/C++或者 html5\r", " 淘宝上没有", "用三星手榴弹调试程序, 骚年, 你是提着脑袋在编程啊", "没设备怎么搞╮（╯＿╰）╭", "去年三星还没正式发布手表，我就已经用工程样机开发了，基本上都是 h5+js 搞定， android 知识少许就够了，不过，个人感觉这个手表火不起来。。。", "tizen 有自己的开发 IDE ，看样子是 eclipse 或者 idea 定制的。 native 用的 c/c++、 web application 用的 h5 js css 。\r", "没是被怎么搞。。", "以为早死了其实还活着的技术系列……", "考虑一下，年轻的时候，曾经移动开发也拿过好几次奖，哈哈\r", "两三年前也开发过 native app ，自从三星入驻之后，从它那原来废弃的 bada 系统里挪过来一大坨代码，看着很别扭", "正打算买 gear s3 呢", " 啊那怎么买", "更愿意入坑 UWP ，毕竟国内还有一点点小需求。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>请教大家一个关于权限系统设计的问题，我们系统以后将会有直营店，加盟店，会员，供应商，员工 这么多的角色，这样的系统该如何设计呢？请高人指点一二，谢谢了</p>\n</div></div>"], "reply": "9", "tittle": "请教一个权限系统设计的问题？", "comment": ["直营店，加盟店，会员，供应商，员工 单独做后台管理。\r", "然后使用前后端分离。 统一请求一个后台后台，在后端再依据请求的账号去判断 对应的权限。这样可以减少很多重复的业务逻辑。当然，有时候适当的重复比在单一业务逻辑 添加各种 权限判断会更好。\r", "写完才发现你说的是以后才有。那就是依据功能进行权限设计就行了。", "Table:\r", "-organizations\r", "-permissions\r", "-roles\r", "-users\r", "\r", "然后你把直营店／加盟店／供应商分别作为 organization 的不同 type\r", "然后 under each organization, 设立不同的 role ，比如说 admin/manager/user/customer/...\r", "然后 map each role with different permissions ，可以用 wildercard 作为 permission check ，比如 VIEW${服务的名字}$ALL, VIEW${服务的名字}$SELF\r", "然后给每个 actual 的 user assign role 就好了，我觉得这样比较 scalable....\r", "\r", "关系的话\r", "organizations >--organizations_roles--< roles\r", "roles >--roles_users---< users\r", "permission  >---roles_permissions--< roles\r", "\r", "How so?", "都是哪些人会用这些权限？区分清楚人了，才好说权限", "\r", "\r", "跟我们现在做的系统差不多，每个子系统权限都是独立的，用户访问 api 通过 jwt 中的信息去判断是否有权限", " RESTFul 有一个问题想请教， RESTFul 风格的 API 通常要设计成无状态的，那么 JWT 是否需要持久化在服务器中（比如 Redis ）。\r", "既然是无状态的，那么 Server 端就不应该将 Token 保存到 Session 或数据库中，那么如何能保证一个用户在一段时间只能有一个 Token 是可用的？", "搜索 RBAC", "通常就是 RBAC 模型进行拓展 ,不要脸做个广告 ,哈哈 , 看看我刚推送上去的代码? 里面有 powerdesigner 模型文件,完整的权限实现 .代码略渣凑合看看 \r", "\r", " 把某些信息加密（比如 RSA ）后发给客户端当令牌，比如每次登录都有个登录时间之类的，判断是否有效就是判断令牌里保存的时间戳是不是晚于最近登录时间。另外无状态应该指的是会话状态由客户端负责维护而不是不保存状态。"]},
{"content": ["<div class=\"topic_content\">监控上网行为，代理不能用， github ， google 也上不了了，还能活吗？</div>", "<div class=\"topic_content\">公司是 H3C ，用的是 H3C iNode 客户端，看这个软件特点，😂\r<br>\r<br><a target=\"_blank\" href=\"http://www.h3c.com.cn/Service/Software_Download/IP_Management/iNode/iNode_PC/201305/784466_30005_0.htm\" rel=\"nofollow\">http://www.h3c.com.cn/Service/Software_Download/IP_Management/iNode/iNode_PC/201305/784466_30005_0.htm</a></div>", "<div class=\"topic_content\">去了才发现，这个监控软件其实很挫，一不小心无意义中发现的…，不过现在搞得我上 github ， stackoverflow 都偷偷摸摸的\r<br>\r<br>想上这些网站，有麻烦的正规途径，可以申请远程到其他机器，不过公用，经常被挤下来😂</div>"], "reply": "68", "tittle": "好苦啊， IT 公司上网限制", "comment": ["不爽就走人呗", "github google 上不了，怎么干活", "这种公司趁早走人", "沒網路我很難解 bug 的, 頂多禁上一些娛樂網站就可以了", "😂😂😂😂，感觉坐牢一样，好憋屈。", "就问一句话，有钱吗", "remote 到一台 windows 上", " 钱没上一份工作多", "能走多快走多快", " 薪资挺一般的", "听说腾讯，自己的电脑带到公司，首先要装上监控软件", "AnyDesk to Home . U KNOW. MY BR.", "没 google, github 怎么写代码...\r", "楼主的应该是传统公司吧", "远程到一台 Windows 机器上，想干嘛干嘛", "大公司肯定有监控的 千万公司截图还有隐形水印呢", "ss 代理也不行么？\r", "\r", "一般的方式协议特征明显，例如 socks5 ， pptp 等。但 ss 就是普通的加密 tcp 数据流。\r", "\r", "还有大家说的白名单协议也可以，例如 rtp ， SSH 隧道等。", "离职", " 大公司自带电脑都需要安装监控软件，监控你有没有装盗版", " 据说检测到网卡收发相同数据，就会被认为是代理。 ss 客户端收到数据，转发到另一个端口，可能就检测到了，还不确定，刚入职，之后去试试", "换工作...", "有了这次经验，下次换工作面试的时候就问清楚吧，即使公司不提供 ss 之类的 但员工也有使用的自由吧", "恨不得让公司提供上 Google 的工具，虽然我自己有😀", " 哦，还有加密解密过程。不过监控装在本机，能看到 ss 客户端开了 socks 代理吧😂", "用不了 github ，用不了 google ，这公司是 it 领域的？", "你需要 ssr ，伪造成正常的上网请求，根本无法限制", "限制一些视频网站，游戏站点就差不多了，限制 google, github ，提提意见，不行走人。", "伪 IT 公司吧，哈哈", "换工作", "IT 公司？这是什么屁公司", "禁 google 跟断网有什么区别？ github 不翻墙也能上吧？没事  这不还没禁 stackoverflow 嘛 (逃", " 大公司都有监控软件，然而一般只是防止你插 u 盘拷东西而已。内网 google 都是可以直接上的，而且也不会不让你自己用梯子。", "没有 google github 怎么写代码？？？", "肯定不是互联网公司咯, 搞军工?", "安装 NOVNC 网页访问桌面 需要高网速和 中间设备不屏蔽 websocket\r", "shellinabox  基于 json 的 web  linux shell\r", "反向代理", "禁外网的表示你这算啥，我一直流量卡", "什么叫禁代理? 这话说的 太没边距", "以前的对日外包公司有些是完全断网的，不过目的不是为了怕你上娱乐网站，而是有些员工把客户的代码资料放到博客论坛上，被客户发现并投诉了，公司就实行断网，放一台公共的能上网的电脑用来查资料。\r", "所有技术文档全部下载下来离线查看。\r", "如果不是为了安全原因，而是为了监控员工而实施网络限制，那真是连对日外包都不如。", "这种还好意思叫 it 公司", " 就是本机一个上网客户端，检测到开启了代理，就断网，防止通过代理访问违规网站", "stunnel 能用吗，开个 tls 隧道", "github google 都上不了怎么干活？\r", "扭头就走。", "自己架个代理， 80 端口，看他怎么封。", "开一个虚拟机看看能不能行 或者直接远程到自己的电脑玩耍", "赶紧走，真你喵的累", "IT 公司又不是互联网公司，我所知道的别说上网有限制了，不给上网的也大有公司在。\r", "\r", "当然我自己不会选择这样的公司工作，面试的时候最好多了解一下办公环境，介意的话还是找干活舒服点的比较好", "SS 可以搞定、", "iNode 应该只是做 802.1x 认证的，可能还会限制多网卡等。。\r", "\r", "不会限制你上的网站", "做交换机的？ ct 公司本来就这样，工作的问题一般也不会涉及到自己搜索。。。", "淘汰面向 google 的程序员", "不用这个客户端如何？", "没法干，因为我们都是代码搬运工，网通不通，没法搬。 :DDDDD", "在之前的时候 github 是可以上的，后来貌似是出了苏宁那档子事之后不久， github 也封了。但是你会发现 ", " ， osc 的码云等等是可以上的。在华三如果做些前端的事情， npm ？ gulp ？ webpack....？就每天想死。\r", "\r", "网络监控对那种性质的公司有一定的道理，但是干起活来太恶心，并且完全没有人会理你。\r", "\r", "其实 h3c 最恶心的不是网络，里面人的思维方式非常奇特。那是混子和养老族扎堆的地方，恶心的很。\r", "\r", "早点走吧，外面幸福多了。\r", "\r", "利益相关：在那被恶心了一年。", " 这个客户端是没法卸载的。", "我们公司也禁止了。 \r", "\r", "不过跟上级汇报下，就给开通了。\r", "\r", "毕竟，限制是死的，人是活的。\r", "\r", "干活要用到就直接和上级申请吧。", " 😂😂😂😂😂", " 里面也有做软件的部门", "有网络限制的公司趁早离开吧", "IT 公司居然还有网络限制，还不能翻墙，这。。。", "感觉华三，华为，大华，海康，都一路。。", "华为，海康就喜欢搞这样的。动不动你无权访问该网站，请联系管理员。", "就提示一个\r", "njit8021xclient", "黑名单还是白名单 如果是黑名单可以理解 白名单就过分了\r", "\r", "stackoverflow 能上吗？\r", " 能上还好点 再不能上就拜拜吧", " 如果强制在本机安装监控客户端，那就没办法了。", " 能检测到网卡收发相同数据，这个功能绝对是客户端才能实现。客户端会检测你电脑开放的端口，发现有两个端口转发相同的数据才会触发。你试试把代理挂到虚拟机里面，这样流量就直接从虚拟机的进程出去了，不会在本机开一个本地端口，这样就不存在端口间的数据转发了。这个方法从理论上说得通，可以试试。话说，本地客户端好可怕，不亚于间谍软件啊。", "我们全网自带爬墙……", " 之前公司也是，相比不自由有多痛苦", "全公司网络翻墙的 IT 公司路过，连着公司的网络连 QQ 消息都收不了， Twitter 比 Weibo 要快，上 bilibili 不如上 YouTube...."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>其实是 oj ＋ vj ，只不过 vj 目前只支持 poj 所以就没放几道题－－\n(Node.js 测试添加中，现在 GCC/G++/Java 没什么大问题了)\n给学弟学妹联系 acm 用的啦－－\n发上来给大家娱乐下－－\n呐呐， Github 给点赞的年终奖都大大的，明年都发财－－</p>\n<p>呃，大牛就别吐槽了，楼主还没毕业呢－－</p>\n<p>传送门： http://acm.dosk.win/</p>\n<p>Github: <a href=\"https://github.com/springhack/alxw_judge_system_v1\" rel=\"nofollow\">https://github.com/springhack/alxw_judge_system_v1</a></p>\n</div></div>", "<div class=\"topic_content\">好吧怪我，虽然楼下有解释我还是补一下吧…\r<br>\r<br>oj 就是 online judge ，简单来说就是算法题目，你提交代码我运行并评测效率\r<br>\r<br>vj 用起来和 oj 一样，只不过题目不在我的服务器上…</div>"], "reply": "27", "tittle": "个人写的一个 oj 项目，娱乐向－－", "comment": ["25 分钟没人理惨案…", "8 个小时过去了…… 其是大家都看不懂你的缩写是在缩写啥", " oj 只要是科班的基本都知道是什么吧。 \r", "只是没时间去看而已。毕竟发帖的时间那么尴尬", " OJ 正常应该能反应来， Vj 就比较懵了。", "可以截个图啊。。。。。。现在的人哪有那么多耐心真的有事没事搞搞看这是啥啊。", "oj: online judge\r", "vj: Virtual Judge\r", "──────────\r", "用 hustoj 那种拦截系统调用的办法，加 nodejs 加 java 搞白名单各种蛋疼，经常收到反馈误杀。。。", "赞一下，之前和小伙伴想过写但是一直拖着", "科班表示没听说过 online judge 和 virtual judge..", " 非科班的我表示和计科的小伙伴聊天的时候听到他们提过，我当时还傻傻的问是 objective-c 么。。", "谢谢楼上科普 VJ(科班表示没听过😂", "校友你好 XD\r", "没想到 V2 上还能见到校友", " 沈航么…", " java 现在一般都不用 ptrace 白名单了，用 policy 实现； node.js 有 vm 模块 0.0", "离我们挺近的啊，沈师的_(:з」∠)_", " 2333 是挺近", "第一反应 objective-c...", "  ＝＝这这这，", " \r", "ptrace 跟坨屎一样。。损耗高的要死\r", "policy 没仔细研究过，能防御 fork bomb 吗？\r", "我自己之前用 seccomp ,\r", "直到嫌弃他建白名单各种麻烦，和 java 的各种稀奇古怪的系统函数调用", "惨像已使我目不忍视...", "   seccomp 持续观望青 qduoj ，前天还交流了的说。 ptrace 损耗高并没办法，毕竟大部分 oj 都是酱紫实现的，用 seccomp 方案出来的结果会差异很大－－", " ????", "为什么字体是 Comic Sans...", "   因为好玩...", " \r", " \r", "oj 知道，虽然并没有做过多少", "我知道这个是啥，也经常去艹，校队也想搞一个玩……但 TMD 网络中心以这东西各种不安全拒绝了\r", "伤心 ing", " 25 分钟没人理惨案…(回复你这句。。）", " 😂😂😂😂"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我是长沙一所普通一本的大四应届生，之前因为准备考研所以错过了秋招，但是现在自己已经觉得希望不大了，所以准备参加明年的春招，这几个月呢就想找一个实习，同时自己夯实一下自己的 c 和数据结构基础。</p>\n<p>觉得自己学习能力还不错，最近压力还挺大所以态度肯定是认真的不能再认真，但是很迷茫我该怎么去找一个实习，所以想请教一下 v 友。</p>\n<p>工资基本没要求，只希望稳定能够让自己学到看到一点点东西就好，同时让自己对工作有一个心理准备</p>\n</div></div>"], "reply": "8", "tittle": "长沙地区想找一个实习该怎么办呢", "comment": ["不要急，面包会有的，好好夯实下自己的基础，个人建议毕业后直接来深圳，我当初也是这么过来的。", "你学什么专业的啊,大四了还需要夯实基础,这不是大一大二要做的吗,实习估计没人会给时间弄这些.", "同长沙普通一本学生，求交流", " 电子信息工程，就是想再看看书，看看招聘的题，看看能不能做点小东西展示一下自己", " 谢谢，希望会好起来，日子有点煎熬", " 该怎么私聊联系方式，求交流", " 微信给我吧", "去长沙亚信碰碰运气"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>为了能够更好的服务开发者， Amaze UI 最近上线了一个新的频道“插件库”，顾名思义，里面提供了很多基于 Amaze UI 的插件，可以让使用 Amaze UI 的开发者直接使用，保证了良好的开发体验。</p>\n<p>目前插件库刚上线，还有很多不足，也请各位随意吐槽，鞭策我们继续改进！！</p>\n<img alt=\"\" src=\"http://ask.amazeui.org/uploads/answer/20161115/f6dea00ea16a95b112bc00c2c594c35c.png\">\n<p>体验地址： <a href=\"http://plugins.amazeui.org/\" rel=\"nofollow\">http://plugins.amazeui.org/</a></p>\n<p>另外，我们也在招聘前端工程师，有意的可以移步这里： <a href=\"https://www.v2ex.com/t/318720\" rel=\"nofollow\">https://www.v2ex.com/t/318720</a></p>\n</div></div>"], "reply": "13", "tittle": "因为这个玩意，可以让使用 Amaze UI 的开发者更 Happy！！", "comment": ["难道需要自己挽尊！！！", "资词", "棒！", "wow", "\r", "\r", "你们把 Amaze UI 加到 jsDelivr 里吧，目前 jsDelivr 最好用了", " 我来研究研究。", "下次就用一下", " 好嘞~", "多贡献几套通用魔板", " 目前我们有一个模版中心，里面都是开源免费的。 ", "大家早点休息，晚安！", "之前有用过 Amaze ui ，玩玩看~", " 好滴。"]},
{"content": ["<div class=\"topic_content\">之前一直认为将 1 升水随机分成3份应该这样操作：\r<br>\r<br>第 1 份，从 1 升水中取出 X 升， X 是[0, 1]之间的随机数\r<br>\r<br>第 2 份，从剩下的水中取出 Y 升， Y 是[0, 1 - X]之间的随机数\r<br>\r<br>第 3 份，剩余的水为 1 - X - Y\r<br>\r<br>但实际上这样并不等同于“随机分成3份”\r<br>\r<br>（惊讶脸）\r<br>\r<br>正确的做法貌似是这样的：\r<br>\r<br>第 1 份，从 1 升水中取出 X 升， X 是[0, 1]之间的随机数\r<br>\r<br>第 2 份，从 1 升水中取出 Y 升， Y 是[0, 1]之间的随机数，若X + Y &gt; 1，则从第1步重新开始\r<br>\r<br>第 3 份，剩余的水为 1 - X - Y</div>", "<div class=\"topic_content\">如果将题面换成：\r<br>\r<br>在长度为一米的木棒上任取两点将木棒分成三段\r<br>\r<br>“任取两点”的定义是否明确？</div>", "<div class=\"topic_content\">第一种分配方法 3 份水的期望是： 1/2 ， 1/4 ， 1/4\r<br>\r<br>第二种分配方法 3 份水的期望是： 1/3 ， 1/3 ， 1/3</div>", "<div class=\"topic_content\">受小伙伴回答的启发，新增了这个贴子： <a target=\"_blank\" href=\"https://www.v2ex.com/t/320661\" rel=\"nofollow\">https://www.v2ex.com/t/320661</a></div>"], "reply": "57", "tittle": "怎样正确地将 1 升水随机分成 3 份", "comment": ["所以什么叫做“随机分成 3 份”。\r", "这里“随机”的定义是什么？", "正确的做法是：\r", "先给出「随机分成 3 份」的操作性定义，再执行这个操作。\r", "\r", "概率论民科的一大原罪就是越过定义讨论问题。\r", "参考「贝特朗悖论」。", "恩，照一般逻辑理解：\r", "\r", "随机生成三个[0,1]之间的随机数， A,B,C\r", "\r", "SUM = A + B + C\r", "\r", "第一份水 = A/SUM （升）\r", "第二份水 = B/SUM （升）\r", "第三份水 = C/SUM （升）", "不是很喜欢“从第 1 步重新开始”这种做法，因为总有倒霉蛋会重复好多次，次数的方差比较大。\r", "\r", "抛开水这个比方，其实就是随机三分线段。更好得做法应该是，若 X+Y<=1 ，则三份水为{X,Y,1-X-Y};否则{1-X,1-Y,X+Y-1}。", "闭着眼睛扬出去两瓢就完了", "拿 3 个大盆放地上，站三楼，把水浇下去", " 感谢，学到了一种新方法！", " @", " 新增了一条附言：\r", "\r", "如果将题面换成： \r", "\r", "在长度为一米的木棒上任取两点将木棒分成三段 \r", "\r", "“任取两点”的定义是否明确？", "取 3 个 [0-] 随机数 X ， Y ， Z ， SUM = X + Y + Z\r", "\r", "结果就是 X / SUM, Y / SUM, Z / SUM", "发现和 #3 一样。。。", "结果是 X / SUM, Y / SUM, Z / SUM 的需要优化一下\r", "浮点数都是有误差的\r", "所以应该是 X / SUM, Y / SUM ， SUM - X / SUM - Y / SUM\r", "否则加起来不是 SUM", " 与其优化你的浮点数不如找点无残留的理想容器", "你们光说不行啊，要给出形式化的证明啊，证明期望符合每桶各 1/3 的水\r", " \r", " \r", " 你这题面自始至终就没提到过 1/3 这个问题 而且按自然的说法大量的事件统计起来应该印象中是泊松分布？\r", "\r", "没人告诉你期望是 1/3 如果要 1/3 的随机数题面要给明的", "简化问题不过是线段内任取两点即可。\r", "直接取两个[0-1]随机数， A1 、 A2\r", "则 0-1 之间的距离自然就会被 A1 、 A2 分成三段，并且 A1 、 A2 满足题目要求的随机性。\r", "\r", "剩下的就是， A1 、 A2 排个序，假设 A2 是大数，然后第二份的数量是|A2-A1|， 第三份的数量是 1-A2", "简化成图片大致就是这个样子。\r", "A1 、 A2 为线段上面的两个随机数，且 A2>A1 。\r", "最终计算出来的三份线段长度就可以满足题目要求的随机性： A1 、 A2-A1 、 1-A2\r", "\r", "0-----------A1-------------------A2------------------1\r", "|<--A1--->|<---(A2-A1)--->|<---(1-A2)---->|", " 如果换成木棒的说法，那这个题目的回答应该是这样：\r", "第一步：取 0 < x ,y < 1\r", "第二步：第一份水为 x' = min(x,y) 第二份为 y'= abs(x-y) 第三份为 1-x'-y'\r", "目前我还没有想到如何证明这种取法和原本的取法是等效的。", "好吧，喷了半天我才明白楼主要的点是什么\r", "（ 1 ）作为理工科，严谨性是第一的，在自然界均匀分布并不是那么好找的，反倒是什么泊松分布了，高斯分布了比较好找，如果是真人倒水的话，第一下绝大多数我认为会选择 1/2 以下，因为倒太多了第二次倒什么啊，理想容器这些情况也不能少，高中都知道的东西怎么在网上提问就忘了呢？\r", "（ 2 ）你可以去翻翻概率论的书，这个题实际上是给定 x 的分布求 f(x)的分布（特么我也不确定了），所以说如果你不给定你“随机”的方式，没人保证最后的期望是 1/3 ，所以说高等数学有用啊，大学无用论这不就看出来么，按照你的要求，我认为 A/(A+B+C)，其中 A 、 B 、 C 都是均匀分布反倒是最靠谱的答案，虽然这个也需要数学证明", " \r", "“在线段上随机取一点”一般不会有歧义，通常默认为连续均匀分布的概率。\r", "“在线段上任取两点”通常默认为取两点是相互独立的。\r", "\r", "但请注意以上只是习惯上默认，严格来说你应该用数学语言限定“随机”这个概念，否则就像 2 楼提到的「贝特朗悖论」那样，“在圆上随机取弦”就会导致歧义。", " 去问折棒太郎 ", " ", " 第二种分配方法的期望的确是 1/3 ， 1/3 ， 1/3", "蒙提霍尔悖论？", " \r", "一种比较直观的证明见：\r", " \r", "「任意」和「随机」的含义是不同的。\r", "在概率论中，「随机取样」和「随机样本」惯例上蕴含「等概率」条件，但「任意」这个词没有任何关于随机变量的分布函数的信息。\r", "\r", "总之，问题在于应当先给出操作性定义或者分布函数，然后再计算。\r", "但是「怎样正确地将 1 升水随机分成 3 份」这个问题的表述，其实是在问「什么样的分布 /操作才算是将 1 升水随机分成 3 份？」，这是在要求为一个未定义的操作给出定义。\r", "如果还有后续问题，在某种定义基础上可以得出确定性答案的问题，比如问「将 1 升水随机分成 3 份，那么每一份的容积服从什么分布？」那么可以通过补充定义来修正这个问题。\r", "如果没有后续问题，即这句话已经是问题的本身 /全部，那这就是个死胡同，是个语言陷阱。", "楼上正解。", "同 3 楼 9 楼\r", "\r", "直接生成 3 个[0,1]随机数, 然后除以三.\r", "\r", "提需求的人如果说不行, 再根据需求变更方案.", "不应该是拿三个盆子，两根管子，然后用连通器原理吸上个两口就可以搞定了么？？？？？", "随机分成 N 份的意思可以理解为 0 和 1 之间出现随机不重复的 N-1 个数字。", "我考虑过 这个其实就是微信红包问题", "生成两个 0-1 的随机数 a 和 b,   第一份 = a, 第二份=b ,第三份 = 1-a-b", "把水搅拌下，然后三等分。水分子随机进入三份中", "额为嘛不是   1 先从 一升水的杯子里面 倒出 X  得到   第一个杯子  1-x  第二个杯子 x\r", "                   2 再分别从 第一个杯子和第二个杯子 倒出 一些 给第三个 杯子呢 然后  就有了\r", "                   第一个杯子  1-x -Y1    第二个杯子 里面 x -Y2  第三个杯子 Y1+ Y2", " 这方法额  学习了 不过好像杯子的容积 不好控制  但是比较容易操作 谢谢学习了", " \r", "这样做的话，凭直觉判断，第一第二个杯子的期望是 0.25 升，第三个杯子的期望是 0.5 升", "你这期望居然是给定的...\r", "\r", "r1 = SUM/3 + random\r", "r2 = SUM/3 + random\r", "r3 = SUM - r1 - r2 \r", "\r", "把 random 定小一点？", "如果随机的含义是，期望应该为 1/3 ，那么仍然有无数种分配方式。", "不是应该吗?如果要求都不为 0,就如下(所谓随机,只能是 1 跟 2 是随机,3 是被逼的...............)\r", "1.x=rand(1,8);\r", "2.10-x=y;rand(1,y-1);\r", "3.10-x-y", " random 期望是 0 就可以了", "给一个尺度，强行普朗克常数好了，然后 combination 一下就能算出概率", " 额 我感觉这保证了 随机性", "X >= 0; Y >= 0; X + Y <= 1;\r", "\r", "给出此区域上的一个分布，不就完了吗。这样的分布很多的，所以三杯水的期望不确定。", "生成一个[0,1]的随机数 X ，再生成一个[0,1]的随机数 Y'，这样三份水就是： X ， Y=Y'*(1-X)， Z=1-X-Y", " 不对，这样似乎也是 1/2 ， 1/4 ， 1/4 。还是三楼的解法比较好，楼主的解法有需要重复的可能，感觉有点蛋疼。", "零到一取两个随机数， a ＜ b ，三份水就是， a ， b-a ， 1-a-b 。这样似乎就没问题了吧？", "抽签问题呢？ 按顺序抽 每个人概率不是一样么。。。。", " 不一样，这是连续模型，概率空间都不一样", " 随机的定义是要等可能的，要服从均匀分布，不要钦定一个大自然常见的分布", " 不要钦定均匀分布哈 random 这个词从来就没有均匀的定义", "随机的定义是要等可能的。。。高斯分布都偏到姥姥家了…不过话说回来，要是大自然绝大部分服从均匀分布…太惨烈了…被淘汰掉的哗哗的…", " 如果随机的定义是等可能，就不会有随机过程这本书了\r", "不要拿一般去拼理论好么。。概率这是个严谨的东西，论坛上最容易撕的就是概率和物理，而且物理比这简单的多，一个浮力就能撕出几百楼来\r", "概率你还得上条件概率", "问题等于：怎样将一份红包随机分为(发放个数)份？……", " \r", "居然有人认为 1 升水能浮起 2 公斤木头，容我做个 doge 的表情 ", " ", " 我是🐟", " 这个思路最简单", "1/2*1/3+1/4*2/3=1/3", "随机生成三个随机数 x1,x2,x3,然后取 x1/（ x1+x2+x3 ）、 x2/（ x1+x2+x3 ）、 x3/（ x1+x2+x3 ）不可以么？", " 你说的对…我是说楼上的大哥 对随机理解有问题"]},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"https://msdn.microsoft.com/magazine/mt790182\" rel=\"nofollow\">https://msdn.microsoft.com/magazine/mt790182</a>\r<br>\r<br>该来的还是来了</div>"], "reply": "106", "tittle": "Visual Studio for Mac", "comment": ["这个地址挂了？\r", "搜出来的\r", "\r", "也点进去 301-》 404", " 首先 VS for Mac 得达到 VS for Win 的水准", "微软这是彻底抛弃卖软件赚钱的思路了么？哈哈。。。。拭目以待，看看能不能搞过 webstorm", "这贴看起来都要开战了，竟然没进水生火热。", " 要说用 java 写安卓的话， AS 还是首选", "十分期待 Mac 再一次的软件革命……"]},
{"content": "", "reply": "7", "tittle": "现在还有哪个代码编辑器是支持 Windows XP 的？", "comment": ["notepad.exe", "virtualbox.msi", "记事本", "sublime ?", "vim", "Notepad++\r", "Sublime Text", "很多吧！ vs2010 ， codeblocks ， webstorm ， aptana ， ue 等等"]},
{"content": ["<div class=\"topic_content\">最近基于 openvpn 弄了个工具\r<br>发现单纯的openvpn协议已经被封死\r<br>通过在套一层加密可以正常使用\r<br><a target=\"_blank\" href=\"https://www.sdjiasu.com/\" rel=\"nofollow\">https://www.sdjiasu.com/</a></div>"], "reply": "5", "tittle": "网络加速器", "comment": ["软件界面挺好看的哈", "界面用 sciter ，支持 html+css+tis 挺好用", "这填写订单号的用户体验差爆炸了。这么长，我选择放弃", "那个可以复制的。\r", "毕竟是个人收款，没有接口。\r", "自动化还是通过 webbrowser 实现。。", "搭车分享一个 SS ， "]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>一、直播预告</p>\n<p>主题：直播中视频编码实践经验总结</p>\n<p>时间： 2016 年 11 月 23 日 20 点</p>\n<p>地址：\n　　 <a href=\"http://study.163.com/course/introduction.htm?courseId=1003413003#/courseDetail\" rel=\"nofollow\">http://study.163.com/course/introduction.htm?courseId=1003413003#/courseDetail</a></p>\n<p><img alt=\"1\" src=\"http://img.mp.itc.cn/upload/20161116/fb506660c90e46ed89fc38220e29c72d_th.jpg\"></p>\n<p>二、演讲者：</p>\n<p>朱玲：网易视频云高级研发工程师，音视频专家。中科大硕士毕业，进入思科 Webex ，参与的主要项目包括：视频会议编解码器研发、视频传输控制研发、开源项目 openh264 的开发维护等。 15 年加入网易，主要参与视频直播及互动直播开发，主要负责推流客户端、 SDK 的开发维护以及互动视频直播方案的开发。</p>\n<p>三、直播摘要</p>\n<p>直播应用的大热，让我们看到这背后一系列技术选型及解决方案的重要性。如何保证直播的流畅度？如何应对直播的实时挑战？如何确保直播内容的安全保密性？其中不乏存在技术难题困扰着业务增长。</p>\n<p>网易视频云从基础知识体系出发，专注技术本身，输出有价值的音视频技术实践经验。希望能够与你一起，深度探讨音视频技术背后逻辑。</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "网易云课堂直播预告：直播中视频编码实践经验总结", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>写代码老容易分心，效率不是很高\n老是写完一段代码或者一个小功能点，或者头脑里对一个难点有解决方案了，就想停下来休息一下刷刷 v2 zhihu 啥的，不能一鼓作气搞定，有点拖延，到了下班然后象征性加加班搞搞，虽然也能搞定，但总觉得要是专注一点效率高一点能更好更快搞好吧。</p>\n<p>不能沉迷写代码啊，讲道理，可能是自己没有对代码爱的深沉吧，总之不够专注，你们有什么好的治疗方案么？可以讨论一下。</p>\n</div></div>"], "reply": "90", "tittle": "写代码老容易分心，不够专注怎么治？", "comment": ["跑步，早起，控制饮食。其实就两个字，自律", "别啊，程序员的效率不就是来自对浪费时间的愧疚感吗？", "试试古典音乐", "有活干的时候不会，没活干的时候嘛，跟楼主没两样。", "嗯，断网编程。\r", "\r", "不过我是面向谷歌编程，要是断网，嗯，嗯，嗯。", "分心的时候做点有意思的事情即可，这是人的本性，谁都无法一直保持专注，除非做的事情有非常非常大的吸引力。不过那种情况下应当防止精力透支伤害身体。\r", "\r", "付出越多，内心渴望的回报也就越大。如果不能有大的回报来说服内心，那也别指望自己时刻专注投入。", " 感觉还是要说服自己内心为什么要自律，能改善现状多少，毕竟自律付出的代价也是比较大的。如果只会让现在的自己更累，压力更大，收入却没怎么变，那就会很难坚持。", "懒癌晚期，同病相怜", "这是正常的\r", "楼主应该跟我一样是 ADHD 患者\r", "很多人都是", "推荐楼主一本书《分心也有好人生》", "突然想起来一句话:拔其网线,断其 wifi,哈哈哈", " 然后看这本书的时候也是分心的", " ADHD 是什么?", "专注不一定代表质量或者效率高吧，我都是高兴的时候才写代码，不高兴的时候找产品测试运维撕逼的，提高效率就是选择合适的时间做合适的事情。白天有各种会有 bug 有问题要查，代码“下班”后再写是正常的吧", "割以永治", "买个降噪耳机吧，带上去之后世界就安静了", "说明现在写的代码没什么意思，多深入思考一下怎么把代码写的更好，写着写着就有感觉了", "目标驱动型的，当目标（太大或太小而）不明确的时候就会无法集中注意力。解决办法是弄个番茄时钟，把任务分散到足够容易足够小，定成一个个小目标，时间一定不要太长，比如 20 分钟。然后按部就班。", " 注意缺陷多动障碍（英语： Attention deficit hyperactivity disorder ，缩写 ADHD ）\r", "\r", "ADHD 的主要症状包括：\r", "1. 容易忘记事情\r", "2. 容易分心\r", "3. 啰唆，多话，常打断别人，且爱辩驳\r", "4. 喜欢到处走动，静不下来\r", "5. 读写困难，包括写错字（常多一画或少一画、拼字错误等）、阅读时会跳行或无法理解文意等\r", "6. 做事易拖拖拉拉，常拖至最后\r", "7. 工作普遍都做不久，三心两意，会一直换工作\r", "8. 缺乏组织能力，无法把自己想说的话、想做的事具体地表达或规划出来\r", "9. 总是被不了解 ADHD 的老师（儿童）或上司（成人）视为不够努力或懒惰\r", "10. 逃避需要持续性动脑的工作（例如：家庭作业或学校作业）\r", "\r", "以上症状随患者年龄而有不同表现，有 ADHD 的小朋友，其表现通常有上课不专心、无法抑制自己的冲动以及坐立不安的情况；在大人，主要问题则常在于 ADHD 患者无法计划好他们的生活与每日简单的工作。\r", "\r", "但 ADHD 也有些较为正向的特质：\r", "1. 具高度创造力，常有特别的新点子（但因组织能力差，常无法将之化为具体行动）\r", "2. 特立独行、思考不随俗\r", "3. 对理想保持惊人的坚持度和毅力，甚至可说是顽固\r", "4. 直觉非常强，能单凭直觉深入问题核心，进而发现问题所在（但他通常无法说明如何得知）", " 10 条中了 6 条。。", "之前逛 Quora 时看到的一些小建议\r", "Put your phone on do not disturb and don ’ t let notifications distract your attention. Check it at whatever interval makes sense for you (some jobs need more phone access than others)\r", "\r", "Declare your desk a No-Clutter Zone. Amazing what this does for productivity and deep work.\r", "\r", "Use something like RescueTime to track your internet usage. “ What gets measured, gets managed ” - also just crazy to me to see how much time I spent on social media （ PS ：我使用的是 aTimeLogger2 ）\r", "\r", "End your work day with something incomplete. Even if you complete a project, just do the first step of the next project. It will remind you where to pick up the next day. Ernest Hemingway would stop writing mid-sentence for this very reason.（这个可能有点离题？）\r", "\r", "具体地址： ", " 卧槽。。难道我 ADHD 晚期了？", " 缺点倒不是问题，要看下面的正向特质，要把自己的潜质发挥出来。很多名人都是 ADHD 患者，我知道的就有小威廉姆斯，斯特拉的老板埃隆·马斯克，老罗，其他的应该还有好多。", " 很多人都是，不要怀疑自己。哈哈哈哈哈~", "adhd 诊断很复杂的，不是看看这几条就能诊断的。", "听歌 coding 的习惯", " 可以去看下医生，开点盐酸哌甲酯，很有效。处方药。", "127.0.0.1 ", "\r", "127.0.0.1 ", "屏幕下面放你存款截图", "写起代码来..连水都想不起来喝....", "戒撸", "就是因为懒癌晚期才当程序员啊。。。因为懒才会提高效率去做自己想做的事", "楼里说因为懒才当程序员的，真是无语。。不是所有软件都是为了自动化好吧，做游戏的，微信， web 这些是为了自动化么？\r", "程序更重要的是拓展生活的边界，而不只是把慢的事情变快", "LZ ：所以我现在都不写代码了啊，哈哈~~~", "可以看下番茄工作法，堵不如疏。", "拆分工作，关手机关 qq ，旁边放过小记事本，一有其他想法先记下来，当前工作做完再去完成。\r", "道理大家都懂，但就是不好做。", " 断网没用，还想玩手机", "same problem", "你需要鼓励师!", " 全中 第一次听说 ADHD - -", "推荐读《禅与摩托车修理艺术》", "割了就好了", " @", "  两位大哥 割啥...", "这是人性，不是病，要你妹的治疗方案。\r", "谁要能解决这个问题，早就成大财主或者大贤者了，上你妹的 v 站。", "看到楼主这样说我就放心了。", "bug 不够多", "大部分都中，真 ADHD 。。。", " 中了好多条", "RescueTime", "有条件试试“聪明药”", " 10/10 ， 2/4...", "拖延症是造物主的伟大发明！根本就无药可治、根本就无法克服。\r", "在学习资源唾手可得的互联网时代，完美的限制了成功人士的数量。维护了人类文明中精英和平民的比例。", " 每次都看到你", "可以试下 ", " 这个插件，每天限定浏览指定网站的时间", "我从未见过哪个农民沉迷种地无法自拔……不要沉迷带写代码，代码只是解决方法，结果导向，要看到效果才算完成。另外，白噪声是个好东西。", "头悬梁，锥刺股。", "推荐《分心也可以创造自己的人生》", "v 站什么时候出现老中医了", " 很多人都不知道 ADHD ，我也是前些年才发现自己有这些特征的，也算是更加了解了自己吧。", " 我基本上也是全中。。。", "deadline", "说白了还是任务量不饱和，闲得慌", "这样混日子不是挺好的吗？", "写代码只是一个执行的过程。\r", "思考、小设想甚至幻想都是有助于你从其他角度去思考代码的意义、应用场景、新奇玩法的。\r", "至于楼主一些浪费时间的行为习惯，给人一种本来就很松散的感觉。可能只是时间安排任务布置的不够好吧。", "先进入贤者模式", "ADHD 患者", "可能是平时撸多了，戒几个月就专注了。", " 这你都知道，看来是撸友啊...", " 哎 面向互联网编程 断不了网...", " 看来是资深 lu 友啊，贤者模式我会写代码，开玩笑...", " 表示已经过了怀疑这个阶段了...", " 恩 这个可以有", " 这不提醒我买买买么", "想想银行卡的余额", "戒撸 运动 冥想", "撸过再写，绝对专注", "可能最近不缺钱.", "host \r", "127.0.0.1 ", "这不一定是坏事，假如智商较高，可能会更有创造力。", " 恩？难道不是想睡觉", " 看到 V 友这么说 我也不孤单了", "犯困的时候写", " 你需要利他林", " 利他林", "我擦我以为程序员应该都是像楼主描述的这样的, 难道还有可以专注好几个小时的异类? 除了碰到紧急 bug", "ADHD 晚期患者路过...", "只不过是懒癌或者拖延症，上升到 ADHD 简直太严重，仅靠病症来简单诊断就是太草率了吧，和百度个什么病自动对号入座有何区别。", " 额 没有吧 应该专注的多一点吧", "不专心的原因很多，有可能你有一个漂亮的女朋友，也有可能你正在找一个漂亮的女朋友", "来一发，进入贤者模式"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"我是图\" src=\"https://img.alicdn.com/imgextra/i4/843421904/TB2x6hfamOI.eBjy1zkXXadxFXa_%21%21843421904.jpg\">\n上面说是连续签到 90 天，我估计应该也没有特别的验证，不知道能不能抓包下来用脚本去刷</p>\n</div></div>"], "reply": "30", "tittle": "双十一签到送机顶盒不知道还能不能用脚本去刷", "comment": ["这玩意去年就有了，签了不兑现。不信你搜搜", "你好，你的账号已经被记录，将排除本次活动。", "啥牌子的机顶盒？", "这机顶盒大概也就值 2 百元吧，花这么多时间和精力不值。当然如果你没工作很闲那就另说了。", "我去年玩过，我还只要 15 天，你就会碰到，签到服务器每天只开放半小时，或者随机开放，或者不开放，当然官方是会告诉你，你看我们的服务器是好的， 每天都有人签到的，不信可以给阿里验证，后来 15 天后还要求必须签字拍照才能退款。很多坑在后面等着呢。", "英菲客难说,顶多值 50.", "小敏你好", " 脚本每隔 15 分钟签到一次直到成功？", "连续签到 90 天简直是吃饱撑着了，这 90 天就是用来筛选那些神经病没事做的用户。", " 我这 V2EX 最高纪录是 441 天，不过 V2 是啥时候都能签不玩猫腻", " 这些猫腻用户没有人站出来维权么", " 感觉有时候缺个一两天还是算连续的", "按照楼上们说的搜了下，签到活动出问题的是开博尔\r", "\r", "这个连续 90 天估计是赌过年那几天会有相当一部分人因为走访亲友，不在家而签不了吧", "LZ 你价值观有问题啊，开除淘宝天猫使用权。", "这种签到活动直接忽略了，坑多着呢，商家是以赚钱为目的，而不是慈善家。", "感觉这些还不如花钱买一个", "既然是敏姐。。", "你女朋友真好看", "直接买吧，没必要花精力搞这个", "开博尔那个我弄了一个, 运气很好的签满了, 钱也返了. 不过那个才 15 天, 这个 90 天就有点开玩笑了.\r", "btw, 那家开博尔店搞完这个活动就没了.", "时间成本也是钱。。。", "可以抓包用 360 百度 腾讯之类的云试一试  都是免费的", "楼主你与淘宝天猫价值观不符啊，小心被。。。 (doge", "要是不成，这个机顶盒就得自己买下来了。然而并不值这点钱", " 那是我啦", " 需要买男朋友吗？", "  这张是他素颜的照片 ", "  ,不过我还是喜欢她这张有点花痴的感觉,很可爱.", " 让我想起一梗～\r", "\r", "小姑娘，有没有男朋友啊？如果没有的话，介不介意有一个啊！有的话，换一个怎么样啊，如果你不想换，那多一个怎么样啊，考虑考虑吧", " （手动滑稽）", "noname.space 这页面连探针都开着啊"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><ul>\n<li>现在主要是在 redmine 上写团队内部的技术文档、规范、说明、 wiki 等，但是有个比较大的问题，感觉 redmine 比较适合做需求管理、测试管理、问题反馈等流程性的东西，对于文档，由于是基于项目的，经常是写了好多，最后找的时候发现项目繁多，也不知道跑哪里去了，文档不支持标签，也不好搜索。</li>\n<li>也考虑过用 teambition ，不过 tb 用没有很清晰的目录结构，最重要的是除创建者，其他人又不能修改文档，也不是很好的选择。</li>\n<li>所以来这里看看大家都用什么做团队的 wiki 管理</li>\n</ul>\n</div></div>"], "reply": "27", "tittle": "求一个好的团队 wiki 管理工具", "comment": ["sphinx", "主要协作文档 试试有道笔记", "confluence", "confluence+1 ，我们就是用这个。", "confluence ，但是不便宜\r", "\r", "其实用 gitlab 里面的 wiki ，我觉得也挺不错的", "我用 Worktile 做笔记。当然，也可以团队用的。", " 破解的，没有给钱，小公司。", "我也挺烦这个东西，自己搭，速度慢，\r", "\r", "买服务，有便宜又好用吗？", "就没有自己用 mediawiki 搭的么，要什么管理，人治+iptables 就好了，人离职下权限，都是自己人要那么严格的权限管理干毛。。\r", "confluence 好东西，问题这个要$的啊", "小团队，推荐 notion.so", "confluence\r", "或者开个 git 库大家一起写 markdown", "GitBook", "团队人多+可付费，推荐使用 Confluence ，基本无学习成本，你能想到 /遇到的各类需求基本都可以满足。\r", "\r", "团队可控性强+想自己搞，推荐 Sphinx ，加扩展，你描述需求的完全可以满足。然而就和其他众多 wiki 一样，以文档功能为主，还只是基本款。", "我们用 xwiki", "Quip", "石墨， worktile ， gitlab\r", "还有 V2EX worksace 哈哈", "Workspace", "gitit 底层是 pandoc ， gitit 也出自 pandoc 的作者之手， 支持几乎所有的文档语法，包括 md ， mediawiki 等等。", "对于团队文档需求来说，看云（ ", " ）也是一种选择 MD+Git+多人协作，尤其适合技术文档", "hackpad", " MediaWiki 没有模板功能直接就没有灵魂了差不多…… GitHub 那个 好像是 Ruby 写的 wiki 系统也是支持那么多，也是各种只有层皮。\r", "\r", "MDN 那个 Kuma 相比之下没有语法兼容却有类似功能（ KumaScript ）。\r", "\r", "（说回来这么强调用模板大概也是在 MediaWiki 下被折腾多了出来的……）", "Redmine 有个知识库插件，与项目无关", "自己搭建 ", " 这货还能破解？", " 能呀，但不要在 v2 上讲这个话题。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>背景:</p>\n<p>本人普通 IT 民工一名 ,有个朋友经营一家服装代工厂 ,有经验有资源 ,他计划面向国外资本家上线一个项目 ,是关于在线定制服装 ,让我帮忙找团队或者技术上的建议.</p>\n<p>需求如下 ,这里先说一下重点 ,后面再补充大概的脑图:</p>\n<p>前端方面</p>\n<p>前台客户可以选择现有的服装款式 ,再自行选择该服装款式中可以自定义的区域 ,进行颜色和图案方面的自定义 ,整件服装是分层自定义的 ,并且会按前后左右给出自定义步骤 ,最终给出各方向展示效果或者全局 3D 效果(如果可行) ,生成满意效果后 ,验证账户提交订单并支付订金</p>\n<p>后台业务员审核订单确认转发工厂外 ,还有一个可以上传指定格式文件的地方 ,自动生成新的服装款式展示到定制区域</p>\n<p>后端方面</p>\n<p>处理指定格式文件 ,根据参数自动分层 ,生成自定义格式 ;生成客户提交文件 ,转换为符合工厂格式的文件转发工厂</p>\n<p>请教这样的需求应该用什么样的前后端框架合适 ,并且对应的成本是怎么样的 ,有没有团队 /公司有兴趣参与呢</p>\n</div></div>"], "reply": "4", "tittle": "咨询一个富前端交互操作的 web 网站项目框架问题 , 并求团队/公司 , 深圳最好", "comment": ["  微信 in13262601836 可以探索下实现，之前与一个工厂合作过。    不一定要合作哈", " 已添加\r", "\r", "框架方面有没有大牛们可以指导一下呢", "微信号 wuxingquesui ，我们是深圳的团队，可以聊一下。", " 已添加\r", "\r", "框架方面有没有大牛们可以指导一下呢 , 感谢返金币, 不用担心你们的金币 !!!"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>博客也上线几天了，放了些整理的内容，有视频有入门文章，大家来围观一下，提提意见。</p>\n<p><a href=\"http://blog.hubwiz.com\" rel=\"nofollow\">blog.hubwiz.com</a></p>\n</div></div>", "<div class=\"topic_content\">难道大家只关注形式不关注内容吗？</div>"], "reply": "161", "tittle": "hexo 搞了个博客，大家提提意见。", "comment": ["我来翻页吧", "哈哈  赶上了 ", "日常贴博客: [kisnows.com](www)", " （不要问我为什么直接用 CDN ……因为我是七牛员工……）", " 跟风发 IP", " 七牛镇 nb ..打不开。。。", "既然来了，那我也来贴一波 ", "\r", "好久没更新了", "我的 ", "贴一下 蹭流量... ", "日常贴博客。。。", "居然把上面的博客一个一个点开看了个遍。。\r", "\r", "顺便贴下我的： ", "跟风,来拼速度\r", "\r", "  跟风发一下", " 贵司买不起域名？", "也贴一个自己的，主要是运维的东西\r", "嗯 我也贴个我的博客吧 \r", "[随趣 IT]( ", ")", "那么多贴博客的，我发现基本上都打不开", " 那是玩笑话。我不是七牛员工。==", "看看我的 NFC 之家 ", "日常博客贴,\r", "又到了日常放博客的时候： ", "我的直接打也打不开， ", " ，服务器不在国内", "我算是发现了， NEXT 的主题有多么的受欢迎，虽然我的博客也是这个主题。。。", "我的博客一直在更新中 ", "跟新 ", "第一次在回复中放博客，好紧张 ", "跟楼   ", "楼主是汇智网站长?", "跟楼 ", "蹭一下，不是博客 ", "\r", "感谢 V2EX 和楼主", "第一次用 react 做的博客  ", "nicksxs.me", " 自豪地使用 think.js 自己搭的", " 其中的一个。", " @", " 可以看看我写的这篇[使用 Travis CI 自动部署 Github/Coding Pages 博客]( ", " push 上去就会自动部署啦，再也不需要自己手动`hexo d -g`了。", "额，上面贴的链接怎么会有问题...[使用 Travis CI 自动部署 Github/Coding Pages 博客]( ", ")", " 有空去试试。", "<a href=\"http://blog.1v2d.com\">http://blog.1v2d.com</a>", "跟帖 ", "跟风\r", "1024", "\r", " =.=", "每周更新优质的原创技术文章 欢迎大家多提提意见 ", "\r", "在微信上运行的博客系统", "看来我得用 Github Pages + Jekyll 给你们打一波强心剂    ", "日常贴博客\r", "\r", "又可以贴一波：\r", "\r", "既然来了，那我也来贴一波\r", "跟帖: DevOps blog\r", "\r", "\r", "\r", "好多 https 啊，赞", " 请问 7 牛能不能部署 hexo 啊？我能不能把文章放到 7 牛去？可以绑定自己的域名吗？", "忍不住放一个\r", "秒开！怎么做到的", " 你这个装修的很不错哦。", "tkl 主题，个人觉得很漂亮 ", " 有啥意思？……", " 或言之有物，或直抒胸臆。文笔流畅，比上面大多数干巴巴的“技术博客”都有意思得多。", " 不约。"]},
{"content": ["<div class=\"topic_content\">楼主老师用的教材是张海藩的软件工程导论，第六版。按照书上固定的软件设计模板来讲课，没意思啊。大家来分享一下自己当时怎么学习软件工程的经验，方便后人参考啦。</div>"], "reply": "39", "tittle": "大家读书时候软件工程怎么上的？", "comment": ["这个不是有没有意思的问题，虽然书上的很多开发模型你看上去很老，其实现在很多传统的公司依旧还是在用，改变的成本太大了， UML 的那一套还是适用大部分公司的。个人比较喜欢敏捷开发 XD ，效率不可同日而语。而且其实，软件工程出去后感觉还是在职业后期会比较有帮助，前期哪个公司会让你去干这个=  - =   ，以上纯个人理解~", "像罗永浩就是没学过软件工程，所以锤子早期经常跳票延期，楼主要吸取教训。", "就记得什么螺旋模型 UML 之类的了，也是为了应付考试...  还是看看人月神话这类书吧", "软件工程课程 + 为期两周的小学期\r", "\r", "课程主讲没什么卵用的软件工程和比较新的敏捷开发。\r", "小学期两周，命题作文，\r", "固定组队 7 个人，按敏捷开发配置 project manager ， product manager ， 组长等，自绘 storyboard ，自绘心情板等等\r", "自己进行技术选型和 server 配置。\r", "\r", "每天 9 点-5 点，所有人到达场地进行开发。\r", "\r", "非常有用，会编程的会成为好的 leader ，对软工也有更深刻的印象，\r", "不会编程的会强行学会编程。\r", "\r", "非常好的体验。\r", "我们那一届是一个问卷调查网站，我们下一届是一个邮件系统。", "我会告诉你我大一还在学 html 、 ps 、 ppt 么？软工专业。。", " 针对软件工程这门课。", " 非常好的参考模式，我们没有小学期，不过个人倒是可以模仿这个模式。", " 日常锤黑 2333", " 有哪些流程？敏捷开发的流程都具备了？", " \r", "scrum 包含的全都具备了，包括站立会议，真要求站着\r", "包括人员配备，\r", "包括 story board ，老师会发便利贴来写 user story\r", "包括心情板，每天“员工”要在板上更新当天心情\r", "还有燃尽图等等\r", "\r", "版本迭代包括两次，一周一次，每一次有老师来验收版本。", "当时自己专业没有，旁听了下。主要还是自学人月神话和在公司里直接感受……", "自己学了 program analysis 和 program verification 还有 formal check 相关的一些论文-。-", "我们上软件工程就是老教授讲故事，后悔当时没有好好听。", "确实，我当时上课的时候觉得软工是最没意思的课程之一，因为整套系统理论你学习下来的感觉就是：\r", "这玩意需要花这么长时间学习么。。。。\r", "\r", "进入公司以后，你就发现了，如果你的效率是 1 ，其他人的效率是 0.8,0.5,1.2 这种的。\r", "综合下来，效率不会超过 0.5 的。\r", "你实际遇见的情况就是：各种各样的问题，会阻碍项目进展，甚至比你在书本遇见的情况还要糟糕，还要软件工程方法还要落后。\r", "\r", "\r", " 说的敏捷开发，在整个流程上可以节省不少时间，但是敏捷开发对于每一个参与项目的人员，个人技术水平和职业素质有着更高的要求，压力更大，不像过去传统的 UML 开发，各种人员都能进来，导致整个项目进度缓慢。。。\r", "\r", "\r", "如果要说经验的话，按照一个公司的流程走就可以了（小公司你可以改进一下，大公司你就按照人家流程走没有错的）。", "看《构建之法》", "上完第一节课 老师给了最终的大作业。。分组写一套完整的项目的所包含的所有的文档，分组答辩。。", " 我们也是如此，后面几乎没上完一堂课都要写文档，我倒是认为先把一个项目的 demo 先构建起来之后再搞。\r", "\r", " 邹欣老师的书很棒！值得再读。\r", "\r", " 小公司包括哪些流程？\r", "\r", " 可以细讲一下吗？\r", " 我们老师是一位三十多岁的 MISS\r", "  哈哈\r", " 有测试人员吗？你们怎么测试的？", "睡过的。。。", "我是 cs 专业的 我表示貌似没上过这门课 即使上过也是个选修 太不重要以至于我都不记得我上过了", "我只记得老师特别强调需求一定要明确，所以导致我现在在公司里会把产品问的烦死，一定要问清楚产品到底要做什么鬼功能，未来会怎么样，用户使用场景等等。。。当时上的时候老师就不停地举他以前做外包时候和甲方沟通的经历，还是挺有意思哒~一学期的课需要完成一个网站，然后老师会扮演甲方，我们来和他要需求，写各种文档，画各种图，各种测试报告，最后有个答辩演示，是小组之间 PK 的，现在回想起来感觉老师还是挺用心的。还有几节课是其他老师来教设计模式，由于有老师的铺垫，以后看设计模式的书的时候，还是挺省力的。", "问题定义>可行性研究>需求分析>概要设计>详细设计>编码>测试 我没记错吧...", " 2333 ，求产品经理心理阴影面积。最近一直在写文档，导致热情都被扑灭了。", " 哈哈，这也好啊，防止为以后挖坑了", "挺有意思，特别是答辩的时候组长提前一小时说赶紧来， prd 有重大变更的时候。\r", "\r", "另外我们课设和主课是分开的，主课考试，有道题 42 分，根本来不及写完", " 写出优雅的文档可是码农的基本的素养哦~", "我们也是这本教材 🙈 基本水课了吧", " 真羡慕有邹欣那样的老师啊", " TAT 只翻过编程之美", "  scrum 没有规定是怎么测试的，我们每个人自己单测，有些同学比较跟不上，就手动测试一些勉强代替。", "我很肯定我当时是睡着上的。", "工作之后发现公司里各种野路子，连我这种软件工程勉强及格的都看不下去了", "翘课。。。", "讲真的，我在软件学院学习的卡耐基梅隆大学的 SSD 课程，实用是挺实用，从 UI/UX 到数据结构到 DB 和工程模型等全方位都涉及到了，但是大家讲的软件工程应该是说工程项目管理模型。\r", "\r", "这方面就我这么多年工作来看，真的是过时了，看完《人月神话》你就知道，就算大项目也不能用传统工程的搞法来搞软件。\r", "\r", "必须速度拆成小项目，小项目拆成小 story, 小 story 拆成 task ，敏捷迭代走起来。。。这才是王道，嗯。", "这课全翘了，我去图书馆看编译原理去了..", " 我还挺愿意了解一下的，虽说很大可能用不到。", "我好像一直在睡觉 233", "课堂里的软件工程基本都是过时的，还是找点时间多看看 YouTube 上的 tech talk 吧。", "特扯淡一个混子老师上的\r", "我至今清晰记得她讲瀑布模型那页 PPT 时，只说了一句话，「看这图多像瀑布」，然后就翻页了", "Cs 专业，我们是选修课，给我们上课的老师上来就是扯哲学，然后就没听了 恩，明天考试，挑灯复习"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近从 github 上 clone 代码从来没成功过，上海电信，丢包率居然能达到 90.5%，是大局域网已经成功了吗？</p>\n<p><a href=\"http://ww4.sinaimg.cn/large/8064e6fejw1f9t416wuj5j210w17yqkk.jpg\" rel=\"nofollow\">http://ww4.sinaimg.cn/large/8064e6fejw1f9t416wuj5j210w17yqkk.jpg</a></p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>晚上可以clone了，虽说十分慢，但还是可以clone成功的</p>\n</div></div>"], "reply": "32", "tittle": "上海电信 git clone 失败", "comment": ["都习惯了= =", "上海电信差不多这时候也是这样，国际线路丢包率超高。今年又开始了。", "TPE 光缆断裂，影响上海出口，三大运营商链路均受到影响", "习惯就好", "也许是路由器老化了，先换个设备在试试。", "同上海电信，最近连 github 都经常打不开。", "能打开 github,就是 git clone 不了", "proxychains...想来也是忧伤，想要从事正常的生产活动居然如此曲折", "+1,最近老是这样", "广东电信正常\r", "\r", "上海丢包这么厉害也不切换过来广州 /东莞的出口。", "```\r", "git config --global http.proxy XXX://XXX\r", "git config --global https.proxy XXX://XXX\r", "```\r", "很早以前就是默认配置了。。。不然用不了", "  哪里看到的消息啊，有具体恢复时间吗", " \r", "\r", "TPE 海缆，目前断点比较多，预计 11 月 13 日到 11 月 20 日会分别修复不同段落，但遇到海上环境恶劣的话修理工作会推迟。（ ", " ）\r", "UNITY 海缆， 11 月 4 日发公告说 11 月 14 日修复完成，目前延迟至 11 月 18 日。（ ", " ）\r", "其他还有一堆小型区域海缆。\r", "\r", "不知道发生了什么。。。", "腾讯云上海服务器 git clone 都感觉很慢_(:з」∠)_", "上海电信一直这样 习惯了 =_=", "电缆断裂那个事情好像是 12 号开始的  确实有影响、\r", "\r", "\r", "不过我不知道你是不是精品网， 很多地方电信都是 10K 最高，也基本等于无法 clone  ，一般都是代理或者 proxychains 、\r", "\r", "希望对你有所帮助", "proxychain4+sslocal", "我还以为是我网速的关系啊啊啊啊", "妈呀,我还以为楼上是我回的帖,为什么这么奇怪的头像都会有人用.....", " 哈哈哈哈白天也有个帖子连着两层楼头像一样但是账号不同，太巧了", " 很清楚的讲解，谢谢", " 对，就是 10k ，这速度一定是故意限速的。", "```\r", "git push\r", "while [ ! $? -eq 0 ] ; \r", "do \r", "        git push\r", "done\r", "```\r", "\r", "我这样搞的, 下班时用一下. 好像效果还不错.", " 我看了下具体是 台湾 HINET 出口到 北美，还有 上海联通 到北美的线路在维修；那上海电信到北美的线路是否会受到影响呢？\r", "因为我前几天晚上苏州电信（上海出口）到北美 CN2 几乎 0 丢包的，这几天开始晚上某些段路由过去出现丢包，并且延迟大规模上升 30-50", " 具体修复情况不清楚，只是根据不同地区人的反馈推测的，分段分时间各地表现都不一样，前两天有些地方已经能正常使用了。\r", "上海电信我这边其他在用的人说一样有影响，不过本来就很烂，我上海移动也受到牵连了，延迟没变，带宽跟挤牙膏似的。其他地区从上海出口的宽带跟上海本地的电信宽带是两回事，总感觉本地有限制加成。", "弄个代理爽飞天", "不用代理基本上 10K ，每天 17 点-24 点基本上没有速度", " 难道那些代理走的是卫星信号……", "我这里的上海电信还有右下角的广告植入了...", " +1 访问京东各种劫持…", "我们家和公司已经全部安装 shadowsocks 路由器了，因此从来不担心这个。"]},
{"content": ["<div class=\"topic_content\">嗯 因为如果按现在续费的话 刚好是不到半年差一个月\r<br>\r<br>我刚转了年费 免费的半年也续上了 \r<br>\r<br>补的钱是 7 个月的年费全价+5 个月的年费 8 折(要凑够满 1 年才有 8 折)+免费的 6 个月 大概能用到 2017 年 5 月末，这个你switch to 年费的时候，会有三行详情，一定看到有半年free的促销再续(而不是像有些人说的，经常用的话，年费更划算)\r<br>\r<br><img src=\"http://ww4.sinaimg.cn/mw1024/551f7697gw1f9tzm7r0afj20r307z408.jpg\" class=\"embedded_image\" border=\"0\"> \r<br>\r<br>另外有个小伙伴续满半年了，再转年费，免费的半年，没了\r<br>\r<br>看来那个促销系统还是不完善啊</div>"], "reply": "1", "tittle": "还记得半年前的 jetbrains 全家桶促销么？想转年费的可以动手了", "comment": ["好复杂……让小伙伴找客服呗。有 bug ，客服补。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>公司要做个项目，需要加个图片管理器，要和阿里 OSS 或者截图的图片管理器的这种形式，求解决方案</p>\n<p><a href=\"http://img.1000.com/qm-a-img/prod/1456726/553ff38496090cb89f5bf02d0578e51e.jpg\" rel=\"nofollow\">http://img.1000.com/qm-a-img/prod/1456726/553ff38496090cb89f5bf02d0578e51e.jpg</a>\n<a href=\"http://img.1000.com/qm-a-img/prod/1456726/5a69b5146a05739415561921a5b2eafd.jpg\" rel=\"nofollow\">http://img.1000.com/qm-a-img/prod/1456726/5a69b5146a05739415561921a5b2eafd.jpg</a>\n上面这两种都可以 具体怎么实现的？</p>\n</div></div>"], "reply": "4", "tittle": "求网页图片管理器解决方案", "comment": ["什么意思", "  我做了一个好类似的自用.. 自用图床", " \r", "\r", "Demo:  "]},
{"content": ["<div class=\"topic_content\">为什么会出现 undefined ，不应该是 function func(){}吗？\r<br>var obj = {a:function func(){},name:\"lisi\"};\r<br>console.log(obj.a());//为什么是 undefined\r<br>console.log(obj.name)//lisi</div>"], "reply": "5", "tittle": "js 简单问题", "comment": ["你执行了函数，函数没有 return 返回值，就是 undefined 啊", "<pre>\r", "// 会出现你说的函数， obj.a()相当于调用了函数，打印出的是函数返回的结果\r", "console.log(obj.a);\r", "</pre>", "没有显式 return 的函数都 return undefined", "我知道的 powershell 和 R 都是用 函数退出前的最后一个表达式做为 return 值的。其它都得加 return", "首先\r", "\r", "```\r", "obj.a === function(){}  \r", "obj.a() === ( function(){} )() \r", "```\r", "\r", "所以， obj.a() 取得的是匿名函数的返回值，如楼上所说 没有显式 return 的， return 都是 undefined 。如果你打印的是 obj.a 就是匿名函数本身了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>要做微信开发，但是要求管理端和微信端做独立，可以把微信端当成是 app ， 2 者之间通过接口沟通，主要是微信端调接口拉取管理端的数据做显示，或者是提交数据给管理端，但是发微信模版消息要从微信端发送，但是管理端做发送命令，命令微信端。</p>\n<p>我想是微信端也做一套接口，供管理端调用，不知道这样合理不？如何保证安全不被别人利用，利用接口乱发。</p>\n<p>求指教！</p>\n</div></div>"], "reply": "3", "tittle": "[讨论实现方案] 主系统控制子系统发微信模版消息", "comment": ["不是很清楚你要做什么。\r", "模板消息应该是交给服务器去发，但是模板里面可变的内容，你可以通过微信端的页面发给服务器端，然后服务器端再把完整的模板消息发出去。", " 现在其实是有 2 个服务器，微信端和管理端都自己有自己的服务器，相当于主系统和子系统的关系。", "把跟微信相关的操作抽出来（可以代码级复用，或者提供服务), 然后管理端跟 app 端（或者叫你说的微信端）都去用这个服务或者代码跟微信服务器通信"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我最近在开发一个 App ，一部分功能就是信息发布发布一些教育资料啊视频什么的，另一部分是一个仿真经营模拟的游戏，有内购设计，请问对于上架有什么需要注意的吗？如果不分类成游戏需要光腚总局备案吗？</p>\n</div></div>"], "reply": "2", "tittle": "小白在这里问问大家， app 里面含有游戏内容上架有什么问题需要注意吗？", "comment": ["这也是我一直好奇的\r", "如果我的 app 主体不是游戏。游戏是附加的功能，算是游戏 app 吗？\r", "还有就是：怎么去定义某个功能是不是游戏？", "只要分类不是游戏，应该都不用备案的，现阶段这个政策执行主要是靠苹果自己。\r", "苹果那边只是发现如果你分类是游戏的话，必须提供备案信息。\r", "实在不行先关闭游戏功能上线 ，然后再打开，现在很多绕审核的功能都是这么干"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近接触的项目都是文件特别多且杂的，经常要在多个文件中频繁的切换，无奈实在不习惯 vim 的目录插件（比如 NERDTree ）。所以打算换一个支持 vim 模式的编辑器，目前有考虑： sublime ， vscode 。</p>\n<p>所以想问下有没有类似经历的前辈，想听听你们的想法。</p>\n<p>谢谢阅读。</p>\n</div></div>"], "reply": "78", "tittle": "有从 vim 转向其他编辑器/IDE 的前辈么？", "comment": ["转了，然后渐渐喜欢别的 IDE 的快捷键，然后彻底把 Vim 模式关掉了。。。。。。。\r", "\r", "\r", "Vim 模式还是要 Vim 才带感", "转到 emacs 的 evil", "编辑器和 IDE 其实是两种东西\r", "\r", "搞开发通常还是 IDE 顺手，编辑器重在编辑的快捷。大部分人写代码的瓶颈不在于编辑的快慢", "我现在用 Vim 不多了，换其他 IDE 或者 Atom 都是加个 vim 插， Vim 在终端改个配置之类，没有深度定制，只是改改预设配色就用了。\r", "一个时代的工具做一个时代的事情，当然我始终是个 Vim 党。", "有 vim 的地方，就有英勇的 emacs 。\r", "无所谓，编辑器愿意用哪个就用哪个。", "切换文件为什么要用 nerdtree 呢， ctrlp 或者 unite 不好么", "10 年 vim 下的开发经验，攒的配置文件不下 1000 行，自从开始做 Java 配了 IDE ，彻底回不去了。现在全套 jetbrains 开发工具，太方便了，它有 vim 插件，偶尔可以用用 IDE 的 vim 模式。", "vim 转 sublime ！其实说到底 vim 也就是用个键绑定和各种插件，其他编辑器基本都是能满足的，并且插件的质量和 ui 和易用性可能还会更好", "NERDTree 确实蛮难用的。。。但是几乎所有 ide 的 vim 模式基本都是残疾。", "我推荐你安装我的插件 ", " ，切换文件那叫一个快", "做事还是用 IDE 有效率些", "vim 转 atom(台式机)+vscode(笔记本)\r", "\r", "本来是写后台的，但偶尔会用文本编辑器改下页面。\r", "一开始用的 vim ，后来转了这些“前端友好”的编辑器\r", "真 TM 好用！想扇自己脸，为什么不早转？\r", "\r", "当然 vim 还是很有用的，命令行下编辑个配置文件什么的很方便~有时候简单的批量文本处理还是会用 vim 的\r", "不过日常情况就放弃吧，操作 vim 的思维负担还是太大了。。。", "我已经没有折腾他的心了，谢谢。\r", "我当然不是说换个编辑器就能提升效率之类，我只是解决我的痛点。\r", "\r", "我就想找到一个左侧工程目录树的编辑器，我可以快速在各个目录中打开要编辑的文件就好了。\r", "\r", "\r", "看过 ctrlp 的操作模式，他很棒。可是不适合我。谢谢。", " 对的，既然有好的工具，为什么不用呢？", "换编辑器吧， sublimetext ， atom 和 vscode 这三个里， sublimetext 速度最快，一些主题也很好看，就是图标丑了点， vim 模式就是个坑", "楼主这个需求，有个 MR 插件能解决一部分，应该是 most recent ？\r", "\r", "不过我很久不用 vim 做开发了。现在喜欢简单粗暴 0 配置的方案。\r", "\r", "JetBrains 系列算一个， Atom 算半个，这都是我现在的主力。", "另外千万不要相信各种软件的 vim 模式，基本都是缺斤短两，经常发现以前的姿势不能用的。", "推荐 sublime text3 ，可以看看我设置的类 VIM 快捷键\r", "Spacemacs 很强大", "你需要用 emacs-vim 的 ido-mode ， pure-vim 的 buffer 管理太差了", "什么类型的开发？我目前每天用 vim 写 C++， Objc 代码（别问我问什么， IDE 能搞得定我肯定不用 vim ）。 sublime 玩过一段时间，总体来说不错， vscode 无爱。", "vim 转 JetBrains 路过", "spacemacs 明天中午我来瞧一瞧\r", "\r", " 不怕你笑，我对 vim 的 buffer 都不甚理解。 我也不知道地方用到了 buffer ，", " 前端项目，涉及语言就是 html/css/js 。但是经常要在多个文件反复切换（比如 action ， reducer ， components ， models ， view)。 打开的文件一多，你就不知道哪个 tab 对应的是哪个文件了，所以这个时候就需要一个常驻在左侧的目录树了。", "付费用 JB 家的, 物有所值", "vim 转 web ide 了", "想了下，其实我常用到的大概就这些 vim 特性了（太高端的也涉猎过）：\r", "\r", "- 快捷移动，搜索，修改（正则替换），列操作， Macro ，快速转码\r", "- 智能联想，自定义代码片段，\r", "- 代码格式化（=）\r", "- 自定义插件：一键将文件同步到 ftp 服务器（调用 php ）", "追代码的话 IDE 好用些，日常 vim 倒也够用，毕竟快捷键效率高", "emacs\r", "gedit\r", "vs\r", "eclipse\r", "clion\r", "\r", "我都喜欢。反正就是不用 vim 。", "前端项目和目录树，我想到了 Brackets\r", "\r", "主流编辑器无非就那几种， Emacs ， Vim ， Atom ， VSCode ， Sublime Text", "项目开发的话转 IntelliJ 系列 + vim mode", "我绝对是 Vim 拥趸, 平时全用 Vim, 浏览器用 Vimperator, 文件管理器用 ranger, 各种软件都用的 Vim 键绑定\r", "\r", "但是, 写代码的时候还是 CLion 和 Eclipse 更方便些.", "vim 转 intellij idea\r", "偶尔上服务器上改配置文件才用 vim", "只是前端的话， sublime 其实装装插件也够用了。 vim 的话装 vim-projectionis ， emmet ， NERDTree ，加上个 snippet 插件就够用了。不喜欢用 Tab ，喜欢用 split window 。 grep + quickfix 组合用来 search&replace （重构），秒杀其他编辑器（非 IDE ）几条街。", "  是 vim-vanger ？不是 ranger 吧。", " 恩， vim 的快捷操作真是很方便的说。", "虽然我的 vim 日常操作也很熟练, 但是用了 IDE 之后再也无法理解以前开个 vim 窗口瞎折腾个啥? 也再也无法理解各位大佬苦口婆心的劝告新人要用 vim 不要用 IDE....... 为啥?  程序员的目的不是快速高效的完成工作吗? 可以自动化的东西基本上都写脚本解决了, 剩下的全是目前很难自动化的东西, 用 vim 搭配几百行的配置文件真的很不好用啊, 干嘛这么跟自己过不去.", " 双叶杏，大爱啊。哈哈哈", " 对的。\r", "因为的你的高度变化了， carePoint 不一样了。", "vim 用了很多年，插件也是用过百十个，还是迁到 webstrom 上了，原因就是静态分析能力太差，重构能力太差，文件管理能力也差，虽然用了各种插件去弥补，但都不理想\r", "\r", "webstrom vim 模式下确实缺很多功能，但大部分操作也够了，缺点是少个顺手的 easymotion ， webstrom 上那个太难用，写代码最花时间的不是打字，而是思考，和不断的修改重构代码，并保证项目的正确性，这点上 ide 要好很多\r", "\r", "对于前端来说很多东西都差很多，比如对于 react jsx 的支持，对于 angular 的支持，对于 stylus 下 css3 的属性的支持等等不够好，第三方的插件还是缺少很多东西", "JetBrains 系列，谁用谁知道，尤其在 retina 屏上，称得上精致了。", "换到别的 ide 最想念的就是 nerdtree", "我猜想，楼主习惯用鼠标切换文件，所以觉得这里 vim 不好用。  据说， NERDTree 主要是用来看项目的目录结构，而不是用来操作文件的。 切换文件更多用 ctrlp 。", "我感觉标题可以这样翻译：有从 linux 转向 windows 的前辈么？\r", "\r", "首先，你用什么编辑器证明了一个人的态度。\r", "\r", "其次，大牛并不在乎用啥编辑器，有啥用啥，什么依赖、什么不美观、什么插件、什么自动判断、自动补全... 事实上，什么都不是，只是害怕改变罢了，因为一旦脱离熟悉的 IDE 很多人会惶恐、害怕，怕效率降低，怕这个没有那个没有，说白了，学艺不精！懒惰惹的祸！\r", "\r", "再者，一个小小的比喻，当你在下载 sublime 的时候，我已经完成了一个小程序并且在测试了；当你在下载依赖包的时候，我已经将代码抽象了一遍；当你在纠结扩展包版本号的时候，我已经发布到 github ，甚至采集了 100w 条有效图片信息！\r", "\r", "然而，你说这样多人协作不流畅，不够标准化，后期维护麻烦，为何不能以版本为迭代贡献到开源社区作为标准扩展？是否转眼变成标准制定者而非维护者？\r", "\r", "所以，态度决定你的习惯，习惯成就你的效率，换不换 IDE ，真的这么纠结？害怕占更多一些吧！极力说现在手头 xx 工具牛逼的， xx 工具有缺陷的，是不是 2 年后你又会换个 xx 工具这么说？\r", "\r", "如果那只是你的一份工作而已，只是每天垒个砖块而已，有这个必要纠结是否 vim ？作为一个喜欢 linux/vi/vim 的人来说，这是他生命的一部分，怎会待在一个非得用 xxIDE 的公司来糟践自己？若要换？问问自己是不是真爱！\r", "\r", "一辈子要多做些让自己开心的事！", "> 无奈实在不习惯 vim 的目录插件\r", "Ctrl-P 听说过吗", "用 spf13 在 gvim 里面写代码。\r", "感觉就像飞起来。", " 人各有志吧，有新的需求驱动了楼主的选择，这种现象还是很正常的\r", "但是我想说习惯了 vim 的再回去用鼠标简直折磨", "杰特布莱恩斯全家桶 谁用谁知道\r", "黑 jb 丑的 vim 连个小图标点缀都没有 影响心情", "vim 转了 jb 家了，功能够全，现在懒的折腾了。", "现在就用两个， vim 和 vscode", "为什么我觉得 nerdtree 非常顺手，返回上层目录什么，排序，搜文件，新标签页打开这几个刚需，我用起来非常顺手", "看不同需求的，我写小脚本 sublime ，写项目的话肯定 jetbrains ，当然 vim 插件肯定要的", "sublime text3", "jetbrains + sublime\r", "\r", "具体场景用具体工具，不强求一揽子", "vim 有 ctrlp 的", " 怎么看都像传销的文字。。", "有太多的东西要学，省点时间去学点其他的，折腾太累了", "不同时间段，关注点不一样\r", "我只是想解决我的痛点（虽然虽然很多高手来说，这并不是痛点）", "居然没有人提 spacemacs 这么好用的东西。\r", "日常写代码用 spacemacs ， 看整个项目用 webstorm ，看单个零碎的文件用 subime 或者 vim", "已加入微软神教 vscode", "在用 atom 大法，插件多更新快，缺点也很多，主要加载速度慢         vim 也有用", "推荐 spacemacs\r", "\r", "你有 vim 的使用经验，转 spacemacs 应该没有什么学习成本", " 感谢推荐", "很早之前转的 JB 。。因为发现有 vim 插件，神了。编辑效率 100 分", " 真会扯", "现在用 vim 最不爽的是 windwos 下的 gvim 做 v 命令或者 g 命令过滤时会卡。", "好吧，现在看到官网已经发布 8.0 了，尝试一下", "哈哈，果然解决了这个问题，速度如飞", "转向 spacemacs 了🙄  仍然有完整的 vim 模式， helm 切换文件什么的爽得很。", "这贴画风不对啊，不是说好的 vim 吊打所有图形编辑器的嘛", "目前还没见到比 Nerdtree 更好的文件管理器", "因为写 Java ，所以用 IDEA 。因为写 Python ，所以用 PyCharm 。因为要同时在很多个项目代码里切换、快速排查定位，所以用 IDE 。", "不要再想这些东西了，没有意义的。\r", "我建议你直接用你内心最讨厌的编辑器，等你战胜了自己，那么还有什么不可以呢", " vim 归属于图形编辑器？", "所以我不太理解这帖子在说什么 ... 我是从 VIM 转到 Sublime Text 的 ...\r", "\r", "从楼主的问题来看 ... 这不就是 Sublime Text 的 Goto Anything 功能解决的问题吗 ...\r", "\r", " \r", "\r", "不需要任何插件 ... 都是原生功能 ... 随便录了个 gif 演示 ... 文件都是瞎写的看个意思吧 ...", "之前似乎也有个帖子提到这个问题，我尝试过很多编辑器 IDE ，最后因为常用的语言是 Python ，固定在 sublime 和 Pychram 上了。\r", "\r", "为什么不上 VIM 呢？是真心接受不了 VIM 的外观啊，乌干达首页我就不说了，就点下 Download 的事儿，但软体界面依然保持上古风，这个就有点不能接受了，怼上 Sublime 简直就是凤姐 vs 林志玲啊。\r", "\r", "效率很高，然而我是颜控，而且就编程而言，我感觉我的输入瓶颈在我的右手小拇指上，而不是上下左右跑得飞快。", "从编辑器之神转到了神之编辑器", "前端开发用 Vim 足够了，文件切换用 ctrlp"]},
{"content": ["<div class=\"topic_content\">目录结构是这样，现在本地 svn 目录本来有一个 svn 仓库 A 。但是目前这台仓库机硬盘坏掉了，所以仓库 A 不存在了。现在想将这个 svn 本地目录迁移到新的仓库 B ，主要是保留那些提交记录和历史信息，请问下大家要怎么实现？</div>"], "reply": "10", "tittle": "迁移本地 svn 目录到另一个仓库", "comment": ["叫你不备份，硬盘都坏了， 1,找人看下能不能把数据挖出来;2,从 svn 客户端查看脱机日志，看下能找到多少。", "赶紧放弃 svn 吧", "换 git", "git 大法好，弃 svn 保平安。", "为嘛不是 git", "记得命令好像是 svn import ，你试试", "好吧，记错了。。。。", "SVN 的历史记录都在中心服务器上把? 听你的意思是中心服务器挂了, 那么应该再也找不到历史记录了我认为...", "svn relocate", " @", " @", " @", " @", " @", " @", " @", " 谢谢各位的建议和帮助，看来是没办法了。 @", " svn relocate 会提示 uuid 不对，然后强制改 uuid ，会提示什么 format 文件中的期待 3 or 5 ，然而我的是 12 。。搞了一通，算了还是乖乖重写。另外我个人已经转向 git ，只是这个问题是历史遗留原因。。。我试试 svn 转 git 能不能将 log 转过去。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>在前端发展得如火如荼的今天，在现在各种 MVVM 前端框架被火热推崇的今天，大家是怎么应对浏览器兼容性问题。很多国内的公司还是规定要求兼容 IE7\\8 ，甚至还有 IE6 ，看到很多公司 JS 为主的项目还是在用 JQuery 为主力军。大家是否考虑过类似的问题，别小看这两个问题，这两个问题会甚至影响程序员选择的发展方向。大部分人在一想到前端要面对各种浏览器兼容问题，还要处理自适应多个平台的布局就感觉茫然，会因为此而干脆直接转到后端开发的大有人在。在 2016 的当下大家是否还是同样的感觉前端兼容性是个让人头痛的问题，欢迎吐槽，最好说说你的应对策略。</p>\n</div></div>", "<div class=\"topic_content\">我没有鄙视任何框架，可能是我表述让大家误解了，这里表示抱歉。 JQ 我认为是个伟大的作品，每一种技术和框架都有他出现的时代背景和意义，抛开这些去看历史都是不明智的。只是说在现在业务发展趋势来说用 JQ 写稍微大一点的项目得就显得有点力不从心，或者可以说是门槛很高，需要熟悉的运用各种大大小小的库去整合在一起。</div>"], "reply": "20", "tittle": "换个角度看前端：你是怎么应对拧巴的兼容性问题？", "comment": ["jQuery 为主力军和兼容性有什么关系。\r", "\r", "不知道面对 jQuery 的迷之自信是哪里来的，你有比他更好用的前端库？", "8 的兼容性非常好做 只要别上太多特效就没问题 毕竟有 flash 撑着 而且有 border-box 和 json 就能好多活了\r", "6 的话必须砍需求 动画什么全砍掉 能 table 就 table 能多页面就多页面 能贴图绝对不用 css\r", "9+再考虑 MVVM 8 可以上 angular1 至于 avalon 不太清楚多少人用的\r", "\r", "jq 很好的 jq 会走入历史 但是会在历史的长河上留下光辉的一笔", "jq 我的感觉\r", "(1)会走入历史，一定的\r", "(2)最好用的工具，无论解决问题的程度， API 的优美度，自身体积，提供的功能，在那个年代无出其右，这一点 jq 、 zepto 的占有率已经不需要解释了\r", "(3)新出的，就 ajax post form 来说，没一个比 jq 的$.ajax 好使，你说你要 FormData 我给你，但是这个东西是 IE10+，而且能不能 polyfill 还尚无定论，不给我 FormData 还不让我用{}构造 Form 这很尴尬啊\r", "\r", "不要跟我提标准，标准是什么？那是给大牛和面试用的，真正写起代码来你绝对不会碰那个东西，一般标准都是超级难用，就跟 java 的 ee 一样，现在不都直接上 spring 了么， servlet 在配置完 spring 的使命基本就结束了\r", "\r", "不要鄙视 jq ，一是你做不出 jq ，二是 jq 的光芒几年内还没法散去，人家 2 兼容 1 只是去掉浏览器兼容性而已，反观某 A 框架 2 到 1 改的娘亲不认", " A2 和 1 的设计思想不一样，不兼容很正常", " 不要只看到思想，真正的问题是 ng1 那么多轮子全装不上了，你是再造还是再不造呢\r", "\r", "ng1 有个 grister 超级好用 虽然就 800star 但是我和 react-grid-layout 比过， 3000 的后者比不上 800 的前者\r", "\r", "再造轮子才是真正的问题，尤其对于 ng1 这种 5+年的老框架，背后有多少轮子等着再造", "我一向对那些讲着去 jq 化的论调保持呵呵的态度；\r", "参加很多技术交流会，都是鄙视 jq 流。\r", "我只想说你高兴就好。", " 感谢用心回答，我一般不会鄙视任何框架， JQ 我认为是个伟大的作品，每一种技术和框架都有他出现的时代背景和意义，抛开这些去看历史都是不明智的。只是说在现在业务发展趋势来说用 JQ 写稍微大一点的项目得就显得有点力不从心，或者可以说是门槛很高，需要熟悉的运用各种大大小小的库去整合在一起。\r", "\r", "我更多的是对前端发展现状和国内实际环境的一种思考，是想了解大家都是如何去应对这种矛盾的问题的。不能只为自己写着方便而就一味的把兼容问题抛开不管，对于追求极致的公司来说这种行为应该是不允许的。", "怎么都开始鄙视 jq 了, 这世道, 真是好了伤疤忘了疼", "jQuery 再过十年都不会进入历史 除非 Web 开发标准出现重大改变", "呵呵，我发现一个现象，程序员对于上手简单的东西都嗤之以鼻， jq 确实上手简单，但是要你开发一个上手简单的 jq 你行么？好像这年头还在用 jq 的都是老古董了，都 tm 不配叫前端了，醉了。。。用各种高大上的东西各种构建只为了写 hello ， world", " 我能不能理解为其实国内前端现在的情况是一种乱象，是迷雾，虽然很多人都在推崇前沿的框架和技术，但实际上很多项目其实还是保守的用着 JQ 。", "jQ 的存在还是有一定作用的，虽然不在如往昔般的辉煌，但相对简单且相对通配的支持在生产环节的作用还是有的存在的空间与时间的。", "还有几个公司在兼容 ie 67", "题外话，不知道 Angular 2 国外用得多不多，最近看了看，发现能用的 UI 框架好少，连官方名下的 Material Design 都不知道要何年何日才能正式发布。\r", "\r", "jQuery 很好的一点是，有非常多的插件，能满足各种各样的需求。我用 Vue.js 写的东西都用了不少插件。", "只要不用兼容 ie 6 7 ，现在情况比以往已经好太多了， javascirpt 可以用 babel ， css 可以用 autoprefix ，另外还有各种兼容的 polyfill 。\r", "jQuery 的兼容确实是当年做的最全面的，只是时代变了，现在 web 应用相比与浏览器的兼容更讲究高效的迭代， jQuery 搞出来的代码通常都比较难维护。", " 不想在造，那继续用 1 ，也不是不能用。你说的这种避免不了，只是能兼容时间长短问题。", "avalon 兼容到 ie6 不过社区活跃度不够 文档也一般", "如果换工作，尽量不要去还兼容 IE8-的公司， 最好是 IE9+。\r", "\r", "如果现公司还是要兼容 IE8-，那就认命吧，之前怎么来，现在还是怎么来。\r", "\r", "\r", "另外，看项目大小，如果是主效果，轻数据，那么肯定是不会去用 angular 和 react 等等的； 如果是像后台管理系统、 OA 系统这种，用 jQuery 写出来的代码自己都怕。", "国内别想抛弃了，除了 IE6,7 ，还有一大堆遨游，搜狗等垃圾浏览器用 IE 内核呢", "就没人提移动端的兼容问题么 uc qq 的浏览器，遇到的问题最多"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>将 1 米长的木棒“随机分成 3 段”</p>\n<p>假设得到的三段木棒的长度分别为 a, b, c</p>\n<p>有下面两种分配方法：</p>\n<p>方法 1 在[0, 1]范围内取变量 X ， Y ；</p>\n<pre><code>X 与 Y 相互独立，服从均匀分布。\n\na, b, c 分别为 shuffle( min(X, Y), abs(X - Y), 1 - max(X, Y) )\n</code></pre>\n<p>方法 2 在[0, 1]范围内取变量 X ， Y ， Z ；</p>\n<pre><code>X 、 Y 、 Z 相互独立，服从均匀分布。 S = sum(X, Y, Z)；若 S 为 0 ，则重新选取 X, Y, Z\n\na, b, c 分别为 X / S, Y / S, Z / S\n</code></pre>\n<p>问题一 分别求两种方法得到的三段木棒长度的期望，各自服从什么分布？</p>\n<p>问题二 分别求两种方法得到的三段木棒中，存在长度＞ 0.5 米木棒的概率</p>\n<p>问题受到这个贴子的启发： <a href=\"https://www.v2ex.com/t/320507\" rel=\"nofollow\">https://www.v2ex.com/t/320507</a></p>\n</div></div>"], "reply": "26", "tittle": "将 1 米长的木棒“随机分成 3 段”", "comment": ["概率论挂科的人来看看  还记得概率论期末考试就有分小木棍", "那个帖子最大的问题就是没有用正确的数学语言表述问题，结果下面评论就炸开了", " 那个帖子和这个帖子都是一个人发的啊\r", "概率不是写写帖子就说的明白的 而且要完整的数学表述和语文表述 少一个字都不行\r", "就跟抽签一样 同样的动作 一个抽一个开一个 一个抽完一起开 居然一个公平一个不公平\r", "没办法 数学和语文现在同等重要\r", "PS 楼主概率论多少分？没 90 分以上别讨论这些问题，会把自己绕进去的，有些概率题真的反常识", "门外汉表示 这两个居然有区别？", "另外，[0,1]这个是闭区间哦，如果有没长度的木棍 算不算 3 段呢\r", "真心建议楼主把数学恶补好再来提问", " 分得的木棍长度允许为 0 。比如(0, 0, 1), (0, 1, 0), (1, 0, 0)都是允许的。\r", "还有别的细节问题，欢迎追问 :)", "楼上的话可能听起来有点尖锐，但是在理。\r", "既然楼主这么认真，不如再夯实一下基础吧。", " 两年没碰数学了，这个抽签可以详细解释下么，怎么记得高中数学课本上讲是一样公平", " 我也忘了，大概和条件概率有关，具体可以搜抽签的公平性，前提一定是所有人一起揭晓结果", "方法二期望应该都是 1/3 ，大概", "这个第二问怎么那么像作业题？看这个  ", "\r", "\r", "方法 2 ，按照这个方法，算出和的分布，商的分布，再求个期望就行了。", "方法 1 画三个图就知道了，用几何法求重心就行", "我算出來的結果是：方法一，三段長度都長度符合 f(x) = 2-2x 的概率密度分佈。", "我是门外汉,我觉得这很有意思,要懂这个原理,请教要看什么书?", " 應該隨便看一本概率論的教材就可以了", " {{5L}}: 開閉區間應該無所謂的，因為端點的測度是 0", "方法二的也算出來了，三段的概率密度都是這個函數： ", " {{10L}}: 兩種方法的數學期望都是 1/3", "既然概率密度有了，具體的概率大家應該都會算了", " 按你的表述我觉得这两种抽签似乎没有区别", "方法 1 的问题一就是求次序统计量的分布。\r", "问题二的反面就是能组成三角形的概率，这个在初中竞赛有学。\r", "方法 1 的话(x,y)是[0,1]*[0,1]的均匀分布，能构成三角形的区域为两个三角形，面积为 1/4 ，所以概率 1/4.\r", "突然发现那时老师讲的方法是错的：第一段长度 a, 第二段长度 b ，(a,b)可能空间为(1,0), (0,0), (0,1)三点之间的三角形，符合要求区域为(0.5,0), (0.5,0.5), (0,0.5)之间的三角形，面积占 1/4.\r", "虽然答案对，但(a,b)在这上面完全不是均匀分布啊，概率就不是面积比了啊。\r", "当时我就想着，如果先均匀取一点，再在右侧均匀取一点（就是你之前帖子提到的），组成三角形概率多少。我当时用均匀分割有限趋近无限的方法求极限算出个包含 log 的答案（现在想想就是微积分），后来数学小论文还写了这个，然而市里好几个老师认为我算的是错的，答案应该和上一题一样。当时不知道怎么跟他们讲清楚，现在想到如你所说期望都不一样。。。", " 问题一的期望貌似是一样的 都是 1/3 1/3 1/3", " 楼楼上应该靠谱， since 他学过测度", "(ｰ ｰ;)我得回去翻教材了，几乎全忘了", "其實，沒有一個是「真正平均的分佈」，關鍵其實只要滿足兩點：\r", "\r", "1. 三段的分佈情況相同；\r", "2. 有一定分佈（也就是說不要固定是 1/3 ）。\r", "\r", "就足夠了。第一點應該能夠保證數學期望是 1/3 。我之前給出的兩個分佈都滿足以上兩點。", "哦，還有一點，要能無限接近 0 和 1 。用數學的語言來說，就是（高能預警）：\r", "\r", "記概率密度函數為 f(x)。給定任意的 δ>0 ，則 f(x) 在區間 (0, δ) 上的積分大於零，且在區間 (1-δ, 1) 上的積分也大於零。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>想在 left-zone 和 right-zone 分别设置样式 reset ，理想的 css 输出如此如此：</p>\n<p>css:</p>\n<pre><code>.left h1 {color: green; }\n.left p { color: red; }\n\n.right h1 {color; yellow; }\n.right p { color: black; }\n</code></pre>\n<p>但是通过 scss 编写却没有一个很好的办法将 scss 块加上父选择器作用域</p>\n<p>scss:</p>\n<pre><code>@mixin scope ($scope) {\n  #{$scope} {\n    @content;\n  }\n}\n\n// 使用\n@include scope('.left') {\n  h1 {color: green;}\n  p {color: red;}\n}\n\n// 或者\n.left {\n  h1 {color: green;}\n  p {color: red;}\n}\n</code></pre>\n<p>看上去可以，但遇到了 ampersand 符号，就很不友好了</p>\n<p>scss:</p>\n<pre><code>@mixin scope ($scope) {\n  #{$scope} {\n    @content;\n  }\n}\n\n// 一：将被加上作用域的 scss\n.a {\n  .b &amp; {\n    color: white;\n  }\n}\n\n// 二：加上作用域\n@include scope('.scope') {\n  .a {\n    .b &amp; {\n      color: white;\n    }\n  }\n}\n</code></pre>\n<p>输出是</p>\n<p>css:</p>\n<pre><code>// 一：原始的输出\n.b .a {\n  color: white;\n}\n\n// 二：加作用域失败，不是 .scope .b .a { ... }\n.b .scope .a {\n  color: white;\n}\n</code></pre>\n<p>怎么包裹一个写好的 scss 块呢？想了想，只能通过拿 ampersand 最后一个选择器了</p>\n<pre><code>@function g($amp) {\n  $a: nth($amp, 1);\n  @return nth($a, length($a));\n}\n\n// 改写一\n.a {\n  .b #{g(&amp;)} {\n    color: white;\n  }\n}\n\n// 使用 scope ，输出是 .scope .a .b .a ，失败，被嵌套的部分没有显式出现 `&amp;` 而是 #{g(&amp;)}，嵌套的部分被 展开成了 .a .b #{g(&amp;)}。而且 `#{g(&amp;)}` 代替 `&amp;` 也实在太丑了。\n@include scope('.scope') {\n  .a {\n    .b #{g(&amp;)} {\n      color: white;\n    }\n  }\n}\n</code></pre>\n<p>有没有优雅的解决办法？ @import 测试的结果和 @include 一样，<code>&amp;</code> 总是先在 @mixin scope 中被展开，子 scss 块中的 <code>&amp;</code> 就总是带有 scope 的内容。</p>\n<p>用 css module 加[data-scope='abc']的方法暂时不考虑，目前想加输出块前加一个父选择器。</p>\n</div></div>", "<div class=\"topic_content\">gh 上同样的问题， <a target=\"_blank\" href=\"https://github.com/sass/sass/issues/1459\" rel=\"nofollow\">https://github.com/sass/sass/issues/1459</a> 。至今也没合适的解决 `&amp;`  的方案， <a target=\"_blank\" href=\"https://codepen.io/trey/post/nesting-sass-includes\" rel=\"nofollow\">https://codepen.io/trey/post/nesting-sass-includes</a> 提供的 `@import` 方法表现的和 `@include` 也是一样的</div>"], "reply": "3", "tittle": "scss 如何为 css 创建局部作用域？", "comment": ["主要的问题就是加了 scope ，里面的 `&` 不能任意玩耍了，只能放选择器前面而不能后面。 BEM 中常遇到\r", "```scss\r", "\r", ".block {\r", "  &__element {\r", "    color: red;\r", "  }\r", "  a:hover &__element {\r", "    color: green;\r", "  }\r", "}\r", "```\r", "本来好好的，加上 scope 就废了", "印象中有个 @", " `@at-root` 对加 scope 好像没帮助呀"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>之前发过一个帖子是介绍我们的 Ruby 和 Rails 在线培训项目蛋人网 <a href=\"http://eggman.tv\" rel=\"nofollow\">http://eggman.tv</a>, 目前线上培训收费模式基本就是两种，一种每个课程单独收费的（比如国内的慕课网和极客学院），一种就是订阅的方式（ railscast ， egghead 等等）,也有两种结合的；我们目前是采用的订阅方式，但是有很多同学反映说还是单独课件收费比较好，选择更灵活；同时我们自身也在考虑转变成按课件收费的方式，因为我们的课件覆盖面拉宽的话，确实对不同的人有更多的选择空间，比如有的同学对 Ruby 就不感兴趣，只想看 Rails 的课程。</p>\n<p>不知道大家对这两种收费方式怎么看？谢谢！</p>\n</div></div>"], "reply": "3", "tittle": "在线培训的收费模式", "comment": ["不用谢", "不如两种方式都支持，任君选择？", " 我们计划就这么做了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>刚遇上了个悲剧，公司的 App 内置浏览器的 UserAgent 里面带有 qq 两个字母（因为 App 名称拼音首字母刚好包含 qq ），结果在跳到有赞商城后被认成 QQ 浏览器了，然后就自动跳转到 qq 授权登录的页面去，结果自然是出错登不上了！</p>\n<p>我猜测人家是直接判断字符串里存不存在“ QQ ”，因为看了一下连我自己也是这么写的</p>\n<p>以 php 为例</p>\n<pre><code>    function is_qq_browser()\n    {\n        $userAgent = app('request')-&gt;server-&gt;get('HTTP_USER_AGENT');\n        return (false !== strpos(strtolower($userAgent), 'qq'));\n    }\n</code></pre>\n<p>瞬间想起了“为什么没有 windows9 ”这个梗（因为说很多软件会把它误人成 Windows98 or 95 这样的）</p>\n<p>我想知道大家判断 UserAgent 是不是也是这样判断的，还是用什么其他方式？</p>\n</div></div>"], "reply": "3", "tittle": "大家都是用什么方式解析 UserAgent 的？", "comment": ["就一字符串能怎么判断，要么正则要么包含，当然也可能是我菜，求大神指导……", "\r", "\r", "试试看这个。\r", "\r", "或者试试自己解析 UA ，这是维基百科给出的大部分 UA 的定义：\r", "Mozilla/[version] ([system and browser information]) [platform] ([platform details]) [extensions]\r", "\r", "也可以参考下，地址是这个： ", "\r", "现在就随便维护一下的、人肉写规则、直接正则 if/elseif 的库_(:з」∠)_\r", "\r", "（什么时候能写成配置文件就好了……）"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><blockquote>\n<p>混迹 GitHub 就会发现国内的很多开发者英语上欠缺还是很大的，尤其是一些 description 和 readme 直接就上中文的。即便你英语渣，机翻也行啊。毕竟是计算机社区，英语才是通用语言。用中文去一些国外开发者的仓库里提 issue 或者回复也是一种很粗鲁的行为。 摘自——<a href=\"http://blog.jobbole.com/100445/\" rel=\"nofollow\">文章链接</a></p>\n</blockquote>\n<p>这一部分大家怎么看待？</p>\n</div></div>", "<div class=\"topic_content\">各位大哥 这是摘自的 不是我写的 \r<br>我错在不先发表我的看法就来问你们 罪过 罪过\r<br>我的看法就是： 看自己的母语  比看其他语言要接收的快</div>", "<div class=\"topic_content\">额 标题问题 确实我的锅 没多少发帖经验 语文功底也不好  我会改正的\r<br>欢迎继续喷我 这样我成长的才快 欢迎继续指出 bug</div>"], "reply": "120", "tittle": "你们说 github 上的中文文档 对其他国家来说怎么看待？", "comment": [" 少数几个国家能用上。", "shadowsocks 可不是就国内用，不信去推特搜一下，伊朗用的人也很多貌似", "楼主这政治可是不正确啊", "﹌★`坷苡考慮⑴芐我閅縞僓魡γυ訁╳灬 ", " ", "block, 我是觉得讨论这个没意思。", "个人觉得跟我们看英文文档一样，放中文没问题，想看的人总有办法的，比如我，就用机翻…😂", "个人意见:\r", "1. 去别人英文的 repo 里面用中文提问题倒不一定就是冒犯这么严重, 不用太敏感, 只是原作者看到之后多半以为是机器人发的垃圾信息, 不会理会或删掉吧(我也见过国外网站被韩国来的机器人自动灌水了好多帖子, 所以不用上纲上线).\r", "2. 自己的 repo 用什么语言自己决定, 用中文完全没问题啊, 不明白这个纠结什么.", "就算是转帖也毫无意义哦", "英语和数学对于程序员很重要，但不是必须的。有些人英语和数学不好，这并不能妨碍他们成为程序员，也不是被别人鄙视的理由。", "这管的也有点太宽了，不想让看不懂中文的人看又如何？\r", "虽然转帖，但是这得有多轻松才能讨论这个话题。", " catfan 在 V2EX 有账号？", "简而言之，你爱用什么用什么", "我觉得这就是目标用户的问题\r", "比如你写个给中国人用的微博插件 那中文没问题 也没几个老外蛋疼到会给你提 PR 吧\r", "但你要是写个比较 common 的框架 希望让全世界优秀的程序猿都看到 一起贡献  那总得使用通用语言吧\r", "\r", "我在 Github 上也经常看到法文项目 也没觉得哪里不对了 难道人家要照顾只会英语的人的感受吗", " ", "点赞挨个喷你的人", "就用中文写，爱看不看", "机翻过分了吧，要做就好好做，不做就干脆别做。", "就喜欢楼主这样谦虚的人", "小明的爷爷活了一百岁。。。", " 机翻效果貌似不错"]},
{"content": ["<div class=\"topic_content\">介绍文章： <a target=\"_blank\" href=\"https://zhuanlan.zhihu.com/p/23538432\" rel=\"nofollow\">https://zhuanlan.zhihu.com/p/23538432</a>\r<br>\r<br>文章第二段的链接点进去，在手机上可以付门票，目前人数已经超过 1000 人，所以加入的人只能看或者听直播的时候的语音，但是有问题可以加微信群交流。\r<br>\r<br>第一次尝试这种付费直播的模式，感兴趣的同学可以上车围观，不感兴趣的同学至少给点个赞哈，摸摸哒。</div>"], "reply": "5", "tittle": "在知乎上开了个 Live 直播，前端开发进", "comment": ["帮顶。 9 号上了车，还是坐票。", "已上车，等一个微信回复", " 进群了么", "几百人的时候就上车了，可惜是站票", "  站票已登陆"]},
{"content": "", "reply": "7", "tittle": "微软虚拟学院死活上不去，不知道是不是自己用的梯子有问题，还是微软的问题，有个重要课程要看，求正确姿势\r\n链接： ", "comment": ["楼上正解", " 感谢", "这个服务不错啊", "楼主要学什么啊 c#？", "  js", "可以正常访问啊"]},
{"content": ["<div class=\"topic_content\">最近开始思考人生，转眼已过 30 岁，如果从有自主能力的 20 岁开始算到失去自主能力的 50 岁结束，已经过了 1/3 。\r<br>这个让我感到很焦虑，我怕就这样平淡的度过一生。\r<br>总有一些内心热爱的东西值得追寻，然后却因为自己懒惰（是的，主要是懒）而迟迟无法开始。过着得过且过的小日子。\r<br>目前自己家庭和睦，夫妻和谐，父母健康，是很好的折腾点啥的好机会。\r<br>准备给自己 600 天的时间来为转变最好准备，为啥是 600 天，因为 600 天后计划换到另外一个城市去生活。\r<br>心中想做的事情主要围绕音乐和绘画展开，也想好了要如何去实现，就差迈出第一步了。\r<br>\r<br>给自己立个 FLAG 在这里， 600 天后回来看看自己到底有没有变成自己想要的样子，如果成了，来给大家发个大红包，如果没成，来给大家发个小红包。</div>", "<div class=\"topic_content\">有同学问为啥要 600 天后开始而不是现在，这个确实需要一些准备所以现在还不行，一方面是在画画、音乐和设计方面能力的准备，另外一方面是需要准备一些现金储蓄来折腾嘛，毕竟肯定在一段时间内是会影响到收入的，我需要确保家里面的日常运转不受影响。</div>"], "reply": "379", "tittle": "是时候开启人生的第二乐章了，来立个 FLAG。", "comment": ["楼主加油，有自己的理想是很幸福的事", "翻页", "唯有祝福", "加油", "我就想知道 v2 600 天之后会不会增加发红包功能", " 如果没那个功能我就拉个群，这个不是问题", "厉害了我的哥", "共鸣", "提个不知道可行不可行的小建议：如果 600 天后楼主成功了。找个咖啡吧，组织一个 V2 观光团。听楼主唱歌画画。感觉也是很小清新的。哈哈。当然地点最好在北京。因为我在北京。哈哈哈哈。", "是时候打开新世界的大门了ʅ(‾◡◝)", "祝福，哥们", "也给自己说一声加油", "楼主加油!", "同事买了素描教材，工具，每天中午午休画画，不知不觉过去近半年。最近他刚买了 ipad pro+笔，在 ipad 画。谈不上画得非常好，但足够眼前一亮。谈不上非常喜欢，说是画着，可以从不同的角度去思考。（上个星期我报班学乐器，纯粹是日子太无聊了。）", "6666666", "祝愿~祝好~", "同懒，加油！", "借楼主个楼，刚走过 10%，去年还想着去美国读博，结果今年就放弃了，人生的变化实在是太大，希望楼主能够实现自己的梦想 ：） 也希望自己顺利走完第一章的末尾吧", "祝楼主成功！", "加油啊~~楼主~~", "20 岁，在此留言，见证你我。", "加油", "厉害了", "加油！\r", "BUT ，为什么要到这里来立 FLAG ，有人认识你吗？有人会专门记住你吗？ 600 天后你在哪？ 600 天后谁还关心这点事儿？...", " 坚持自己的想法吧。加油。。", "我也留下个记号，看看 600 天后自己变成什么样", "共勉", "楼主加油，留名来领大红包", " 600 天后我肯定还在啦！ Flag 就是立给自己看的，迷茫的时候、不坚定的时候就回来看看在这里回帖支持我的朋友们，然后又会动力倍增，很感谢大家的支持和加油。", "加油。", "共勉。", "留个脚步，现在 25 岁，总想搞点事情嗨一下。前几天脑子一热买了萨克斯，从 0 开始玩", "楼主，挺你👍", "共勉。我今年也告别二时代了，已经离职几个月在家里捣鼓折腾了，每天码到自然睡，每天睡到自然醒，用一种不一样的心态思考着人生和社会，用一种不一样的心情感受着日常的美好，虽然现在的收入只能勉强维持生活，但是我还是坚信自己选择此时此刻的生活状态是释然的，在这里借你的帖也立个 FLAG 。", "我等着大红包~", "路过看戏，等贴沉； 600 天后最好有人捞", "广告位招租，😜", "600 天后我们排队到某个桥洞下面听你唱歌！", "加油", "加油。。。。。。", "先定个小目标，万一成功了呢？\r", "\r", "\r", "\r", "（其实我是冲着红包来的）", "加油。", "加油 ：）", "加油！！！", "我也 21 岁了，不知道 600 天后和 9 年后 30 岁会怎样。楼主加油！", "马克😏共勉", "加油", "比我混日子强多了", "楼主加油", "楼主加油", "加油", "坐等 600 天后的大小红包", "战略马克 不过我估计到时候楼主都忘了发帖立 flag 这回事了。。。", "加油！", "加油", "支持，工作快三年了，也有这种感觉了。", "正如谷歌云团队机器学习新任负责人李飞飞所说“真正生命中的最关键问题是如何充分发挥一个人的潜力，既要担待生活的责任，又要对得起自己的梦想”。\r", "楼主加油，开启自己的真我人生！", "楼主加油～ 😊", "楼主加油，我也借楼主的帖子祝下自己好运，共勉。", "厉害了 word 哥 加油！！！", "为毛你们都看懂了？我完全没理解啊！\r", "去另一个城市很简单的事，实现人生理想也可立刻开始， 600 天是个目标，然后。。。你们奉上了这么多铜币！！！", " 再解释下啦，因为现在还不具备完全开启新生活的条件和能力。所以这几百天是用来逐步去实现的，包括能力的准备和条件的达成。", "发帖子留念·到时候等红包····", "竟然出现了一个每页回复条数和层码完全一致的帖子，真不容易，必须得顶一下！\r", "顺带等发红包~", "good lock~~", "马一下，到时领红包。", "共勉...  \r", "五年前我买了人生第一个 veer, 进行了人生的第一场大 veer 。现在在想是不是该再买一只 veer 了", "祝你好运", "我已经开始学画漫画了。。", "已收藏,同样,也在转变期", "做自己想做的，不管成功还是失败，起码不会后悔.", "加油～～～跟帖，也给自己一个激励吧", "加油！！我就是浪费了很多时间啊~~哎", "怎么感觉要搞独立游戏的样子，有收入了以后搬去喜欢的城市生活？", "看了下标题下面的「 2 天前」…… 那还有得等啊\r", "\r", "加油！", "50 就失去自主能力，楼主太悲观了。", "楼主加油，期待 600 天以后你的蜕变。祝你成功！", "已收藏， 600 天后见"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>链接：<a href=\"https://lufficc.com/blog/binary-search-tree\" rel=\"nofollow\">多动态图详细讲解二叉搜索树</a></p>\n<p>多动态图详细讲解二叉搜索树，包括遍历、查询、最大值最小值、前驱后继、插入、删除等操作。</p>\n<p>-- 算法真难，考智商。</p>\n</div></div>"], "reply": "3", "tittle": "多动态图详细讲解二叉搜索树", "comment": ["楼主用心了，这文章可真难写", "您的连接不是私密连接\r", "\r", "攻击者可能会试图从 ", " 窃取您的信息（例如：密码、通讯内容或信用卡信息）。 NET::ERR_CERT_AUTHORITY_INVALID\r", "返回安全连接隐藏详情", " 用的 startssh , 还没改。。。。。。。。。。"]},
{"content": ["<div class=\"topic_content\">个人支付宝免签调研\r<br>\r<br>我有一个网站，在海外，无备案，原来的支付宝个人担保合约到期了，没法续签\r<br>\r<br>现在申请必须要备案，要有个体户或企业资质\r<br>\r<br>于是想找免签接口，调研了几天。主要有两大类\r<br>\r<br>1.辅助类：说白了就是装一个软件不断的去网页版支付宝扫描。费用 400-800 元终身，缺点，需要一个 vps 来装软件，偶尔会掉线或出现验证码，最重要的一点，需要买家填写正确的备注，不然会导致接口无法正确处理订单，但总有买家不正确填写，故放弃。\r<br>\r<br>2.接口类。相当于第四方支付，有的需要商户或企业资质。我调研过的有这三家\r<br><a target=\"_blank\" href=\"http://www.teegon.com\" rel=\"nofollow\">www.teegon.com</a> 1%的费用，不用备案，需要上传身份证验证，但官网的 sdk 和文档太烂了，加了客服，技术支持太烂，放弃了\r<br>\r<br><a target=\"_blank\" href=\"http://www.cyh.org.cn\" rel=\"nofollow\">www.cyh.org.cn</a> 1.0-1.2% 官网已经不让注册新用户了\r<br>\r<br><a target=\"_blank\" href=\"http://api.web567.net\" rel=\"nofollow\">api.web567.net</a> 　 2% 虽然页面比较 low ，无须上传身份证，功能简单但可用，目前就这家了\r<br>\r<br>有更好的选择没？</div>"], "reply": "29", "tittle": "个人支付宝免签调研", "comment": ["楼主所说的接口类的都是按时段结算的吧？\r", "\r", "例如 xx 天结算一次，到达 xx 金额结算一次这种。这就属于是用他们的账户代你收款，然后返还给你。\r", "\r", "如果，接口提供商某一天跑路了就过瘾了 ... \r", "\r", "目前看来你更好的选择只能是老实的备案然后通过商户或企业营业执照申请支付宝的官方 API", "一直搞不懂这些第四方收款都是怎么做账的", "Stripe", " Ping++ 早就不支持个人了。\r", "\r", "\r", "\r", "个人开发者是否可以使用 Ping++？\r", "\r", "因支付渠道对个人工作室的支付限制，我司经过业务调整，暂不支持个人工作室申请支付功能。如需使用支付，请使用公司资质申请。谢谢！", "bomb 好像也有第四方支付，不过手续费好像高达 6%", " 又在这里吹牛逼了，鄙视", "\r", "\r", "\r", "属于第一种，开源免费，支持 Linux / Docker 。", "“需要买家填写正确的备注，不然会导致接口无法正确处理订单，但总有买家不正确填写”\r", "\r", "我这个是填订单号的，不需要买家填写任何辅助信息，可以很好的解决你的问题。", "不知道这个咋样\r", " 不靠谱， https 都没有。\r", "认证联盟那个 404 ，底下诺顿是假的。\r", "安全联盟绿标那个是标配。。不多说\r", "支付是用二维码， demo 中不能用电脑支付，而且二维码和收银台也是 http 链接。\r", "之前有人拿 teegon 来比，我直接回 teegon 好了。。", " 这个费率是 2.5%", "我自己有一个分销结算，暂时只支持支付宝扫码支付和 app 支付，如果你人在大连可以面谈给你用，", " Hello ， 制杖！", "去 hostloc 搜搜,有很多", "一人有限公司不难办，个体户就更容易。", "不知道能不能接 Paypal", "我也搞了好久，最后申请注册公司去了，干啥都方便", "易宝支付可以个人注册，但是需要推荐码，不知道推荐码怎么获取到！", "注册一个公司最简单方便。无论如何，最后还是要注册公司，干脆早点注册。", "个人站长难", "999.cc 有两个接口，貌似也是要公司身份，但是不用备案……注册个一人有限责任公司呗，都不要钱的~", "国内的都不要想了 央行的一把利剑悬着呢，只有国外选 paypal 之类的安全", "如果量大就备案吧，如果量小可以生成密钥字符串做转账备注", "开公司么？成都阔以帮到你，一年成本两千多？我们的皮包公司好像是，哈哈", " \r", " \r", "请问，用公司名义注册支付宝可以转入个人账户么", " 当然可以转入个人账户。", "楼主最后那个用得还舒心吗，有在用吗", " 还行，这个是金额满 1 元就可以提现的， 24 小时到账"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>想尝试开发一个基于小程序 canvas 的 3D 库，简直了，什么接口都没有，不知道这个 canvas 除了画一些很丑陋的线框还有啥用。</p>\n<p>PS ：感觉小程序 canvas 开发实例里面给的例子基本就是他能力的极限了。</p>\n<p>好了，吐槽完毕，大家来分析下小程序的分享最终会是什么样子的，是像现在的 h5 这样只能分享一个链接，还是像 wechat app sdk 那样，可以分享一张图或者视频或者 gif 啥的。</p>\n<p>个人觉得应该是 h5 那样~ 或者有知情人士来一次性解答了也行，哈哈~</p>\n</div></div>"], "reply": "7", "tittle": "既然创造了他 请赐给他力量 -- 小程序里面的 canvas", "comment": ["难用+1\r", "\r", "暂时不支持 blend mode\r", "希望以后能够支持……", " 还是希望能把 webgl 的操作接口直接暴露出来，可以直接写 shader 。", "强行封装的问题，不兼容其他 JS 库是个大毛病", " 不太理解小程序的设计思路，既然要强行封装干嘛要完全放开 css ，这个如果后面他想做成 react native 那样的原生组件渲染， css 是他的一个大问题。", " 微信想要做一个新的开发平台，这才是重点。不过微信真的有能力做 RN 么？不太可能。\r", "\r", "微信的这套东西可能出生很早了，或许早期目标和目前的实现有巨大差距。从前端开发人员的角度讲，这套东西不行。", "难用就算了 还有 bug\r", "比如在 scrollview 里不跟着滚动\r", "在 Android 里层级自动变成最高 无法降低", " 我也是感觉有点儿尴尬，处在一个高不成低不就的中间位置，去掉了 HTML 的自由，引入 RN 对于普通的前端初学者还是有门槛的，但是又没有 RN 的优点，感觉更像是用规则和限制来控制大家，不让大家做出过分消耗性能的东西，所以目前很多消耗性能的接口都没有开放。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>然而我发现它支持一个 MIP Cache 服务，而且还没校验是否使用了 MIP 。。</p>\n<p>可以直接缓存网页 /js/css/图片等(视频不能用)。。简直和运营商的缓存服务器一样了，而且还支持 https 。</p>\n<p><a href=\"https://mipcache.bdstatic.com/c/s/www.osupink.org/\" rel=\"nofollow\">Example Page</a></p>\n<p><a href=\"https://mipcache.bdstatic.com/i/s/www.osupink.org/images/logo.png\" rel=\"nofollow\">Example Image</a></p>\n</div></div>"], "reply": "15", "tittle": "百度的 MIP 加速器简直毒瘤啊", "comment": ["有个问题要注意以下。。页面直接访问似乎是没法访问的，也许是要匹配的域名才可以引用。", "但是图片可以。。", "我这里测试都是 403 。", "页面直接访问没法访问是啥意思？", "但是随后我发现带 referer 的都不能引用。。。", " 带 referer 的都不能引用。。。坑啊\r", " 带 referer 的都不能引用。。。坑啊", " 多刷两下", "欸，刷新几次又出来了。", " 嗯，刷新几次会出来。。。", "我想到一个解决方案，用 https 的网站引用 http 的链接。。\r", "虽说会不安全，但对图片视频还是适用的，不会发送 referer 。", " 要想不发送 referer ，可以从 meta 标签中控制的", "能用于翻墙和免费 cdn 么", " 不错，适用于哪些浏览器？\r", " 免费 CDN 配合 meta 也许可以，翻墙似乎不行。", " 测试有效。\r", "<meta name=\"referrer\" content=\"never\">\r", "<img src=\"https://www.osupink.org/images/banner.jpg\" />\r", "全部浏览器均不传递 Referer 了，老版本还没试。", "图片限制 1m 以内，放血……"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我在手机端第一次上传图片或文件,Service 生成一个公开链接.<br>\n下次上传另一张图片可以选择这个链接更新.也就是任何电脑打开这个链接,图片已经被替换了.</p>\n<p>主要是为了解决 SNote 应用的需求.\n手机端画好了生成图片上传.pc 使用 markdown 写文档,不用换链接,自动解析出新替换的图片.</p>\n</div></div>"], "reply": "1", "tittle": "有没这样功能的网盘或图床?", "comment": ["诶 某路由器的文件中转站解决了..\r", "可以删帖么- -?"]},
{"content": "", "reply": "26", "tittle": "神秘的程序员 OR 其它，你们 rss 都订阅了什么？晒一晒，让我偷一点资源", "comment": ["[MY RSS]( ", ")", "* Blogs                                                              :elfeed:\r", "** Quick Browse                                                      :quick:\r", "*** [[http://www.quora.com/rss][Quora]]                                                          :quora:qu:\r", "*** [[http://www.v2ex.com/index.xml][v2ex]]                                                                 :v2:\r", "*** [[http://www.williamlong.info/rss.xml][月光博客]]                                                 :blog:moon:tech:\r", "*** [[http://blog.lilydjwg.me/feed][依云]]                                                       :blog:tech:yi:\r", "*** [[https://www.gitlab.com/atom.xml][Gitlab]]                                              :blog:tech:gitlab:gl:\r", "*** [[https://emacs-china.org/latest.rss][Emacs China]]                                               :emacs:tech:ec:\r", "*** [[http://www.reddit.com/r/emacs/.rss][Emacs]]                                                 :reddit:emacs:tech:\r", "*** [[http://planet.emacsen.org/atom.xml][Planet Emacsen]]                                            :emacs:pe:tech:\r", "*** [[http://blog.binchen.org/rss.xml][Chen's blog]]                                        :blog:emacs:chen:tech:\r", "*** [[http://www.daemonology.net/hn-daily/index.rss][HackerNews]]                                                 :news:tech:hn:\r", "*** [[http://www.chinagfw.org/feeds/posts/default][GFW]]                                                       :blog:gfw:tech:\r", "*** [[http://lwn.net/headlines/rss][LWN]]                                                       :tech:lwn:news:\r", "** Later Browse                                                       :slow:\r", "*** [[http://www.zhihu.com/rss][知乎]]                                                           :zhihu:zh:\r", "*** [[http://hongzhang0823.wix.com/ielts7/feed.xml][雅思]]                                                      :english:study:\r", "*** [[http://feeds.feedburner.com/ruanyifeng][阮一峰]]                                                   :blog:tech:ruan:\r", "** Lunch Time                                                    :lunchtime:\r", "*** [[http://onehd.herokuapp.com/][一个 韩寒]]                                                       :one:han:\r", "*** [[http://www.comicsyndicate.org/Feed/Dilbert][Dilbert]]                                                  :dilbert:pic:di:\r", "*** [[http://aprogrammerslife.info/feed/][Programmer's Life]]                                       :proglife:pic:pl:\r", "*** [[http://xkcd.com/rss.xml][xkcd]]                                                           :xkcd:pic:\r", "*** [[http://feeds.feedburner.com/uclick/garfield][加菲猫]]                                                          :cat:pic:\r", "*** [[http://hdwo.net/feed][海盗湾中文网]]                                                   :movie:hd:\r", "*** [[http://twocoldbackup.blogspot.com/feeds/posts/default][韩寒博客备份]]                                                   :han:blog:\r", "*** [[http://www.reddit.com/r/funny/.rss][Reddit Funny]]                                                  :reddit:rf:\r", "** Kill Time                                                      :killtime:\r", "*** [[http://www.lifehack.org/feed/][Lifehack]]                                                    :lifehack:lh:", " 生活还是有希望的", " 立志要写技术博客的五月天（逃", "<outline type=\"rss\" text=\"Lifehacker\" xmlUrl=\"http://feeds.gawker.com/lifehacker/full\" htmlUrl=\"http://lifehacker.com\"/>\r", "      <outline type=\"rss\" text=\"PanSci 泛科學\" xmlUrl=\"http://pansci.tw/feed\" htmlUrl=\"http://pansci.asia\"/>\r", "      <outline type=\"rss\" text=\"一个-韩寒\" xmlUrl=\"http://onehd.herokuapp.com/\" htmlUrl=\"http://wufazhuce.com/one/\"/>\r", "      <outline type=\"rss\" text=\"免费资源部落\" xmlUrl=\"http://www.freehao123.com/feed/\" htmlUrl=\"http://www.freehao123.com\"/>\r", "      <outline type=\"rss\" text=\"刘未鹏 | Mind Hacks\" xmlUrl=\"http://mindhacks.cn/feed/\" htmlUrl=\"http://mindhacks.cn\"/>\r", "      <outline type=\"rss\" text=\"小众软件 - Appinn\" xmlUrl=\"http://feed.appinn.com/\" htmlUrl=\"http://www.appinn.com\"/>\r", "      <outline type=\"rss\" text=\"左岸读书\" xmlUrl=\"http://www.zreading.cn/feed\" htmlUrl=\"http://www.zreading.cn\"/>\r", "      <outline type=\"rss\" text=\"战隼的学习探索\" xmlUrl=\"http://www.read.org.cn/feed\" htmlUrl=\"http://www.read.org.cn\"/>\r", "      <outline type=\"rss\" text=\"政见 CNPolitics.org\" xmlUrl=\"http://cnpolitics.org/feed/\" htmlUrl=\"http://cnpolitics.org\"/>\r", "      <outline type=\"rss\" text=\"泡泡\" xmlUrl=\"https://edgecastcdn.net/00107ED/paopao/rss.xml\" htmlUrl=\"https://edgecastcdn.net/00107ED/paopao/?u=\"/>\r", "      <outline type=\"rss\" text=\"知乎每日精选\" xmlUrl=\"http://www.zhihu.com/rss\" htmlUrl=\"http://www.zhihu.com\"/>\r", "      <outline type=\"rss\" text=\"纽约时报中文网 国际纵览\" xmlUrl=\"https://raw.githubusercontent.com/greatfire/feeds/master/nyt.rss\" htmlUrl=\"https://dlxi9ddd6fxyg.cloudfront.net/\"/>\r", "    </outline>\r", "    <outline text=\"Tech\">\r", "      <outline type=\"rss\" text=\"EVILCOS\" xmlUrl=\"http://evilcos.me/?feed=rss2\" htmlUrl=\"http://evilcos.me\"/>\r", "      <outline type=\"rss\" text=\"FreeBuf.COM\" xmlUrl=\"http://www.freebuf.com/feed\" htmlUrl=\"http://www.freebuf.com\"/>\r", "      <outline type=\"rss\" text=\"InfoQ\" xmlUrl=\"http://www.infoq.com/cn/feed?token=OQmrNzXROHoS7KvJLFyLkTWHTphvhecs\" htmlUrl=\"http://www.infoq.com/cn/\"/>\r", "      <outline type=\"rss\" text=\"Solidot\" xmlUrl=\"http://www.solidot.org/index.rss\" htmlUrl=\"http://www.solidot.org\"/>\r", "      <outline type=\"rss\" text=\"善用佳软\" xmlUrl=\"http://feed.xbeta.info/\" htmlUrl=\"http://xbeta.info\"/>\r", "      <outline type=\"rss\" text=\"月光博客\" xmlUrl=\"http://feed.williamlong.info/\" htmlUrl=\"http://www.williamlong.info/\"/>\r", "      <outline type=\"rss\" text=\"月光微博客\" xmlUrl=\"http://www.williamlong.info/blog/rss.xml\" htmlUrl=\"http://www.williamlong.info/blog/\"/>\r", "      <outline type=\"rss\" text=\"爱范儿 · Beats of Bits\" xmlUrl=\"http://www.ifanr.com/feed\" htmlUrl=\"http://www.ifanr.com?utm_source=rss&amp;utm_medium=rss&amp;utm_campaign=\"/>\r", "      <outline type=\"rss\" text=\"编程随想的博客\" xmlUrl=\"http://feeds2.feedburner.com/programthink\" htmlUrl=\"http://feeds2.feedburner.com/\"/>\r", "      <outline type=\"rss\" text=\"酷 壳 - CoolShell.cn\" xmlUrl=\"http://coolshell.cn/feed\" htmlUrl=\"http://coolshell.cn\"/>\r", "      <outline type=\"rss\" text=\"锋客网\" xmlUrl=\"http://www.phonekr.com/feed/\" htmlUrl=\"http://www.phonekr.com\"/>\r", "      <outline type=\"rss\" text=\"電腦玩物\" xmlUrl=\"http://playpcesor.blogspot.com/feeds/posts/default?alt=rss\" htmlUrl=\"http://playpcesor.blogspot.com/feeds/posts/\"/>\r", "    </outline>\r", "    <outline type=\"rss\" text=\"Engadget 中文版 RSS Feed\" xmlUrl=\"http://cn.engadget.com/rss.xml\" htmlUrl=\"http://cn.engadget.com/rss.xml\"/>\r", "    <outline type=\"rss\" text=\"Hacker News 200\" xmlUrl=\"http://feeds.feedburner.com/hacker-news-feed-200\" htmlUrl=\"http://news.ycombinator.com\"/>\r", "    <outline type=\"rss\" text=\"Tiny Tiny RSS: Forum\" xmlUrl=\"http://tt-rss.org/forum/rss.php\"/>\r", "    <outline type=\"rss\" text=\"[Unknown]\" xmlUrl=\"http://www.netnoease.com/rss2.php\"/>\r", "    <outline type=\"rss\" text=\"[Unknown]\" xmlUrl=\"http://xianguo.com/service/dailyshare\"/>", " 说 你是谁", " 666\r", " 果然是有希望的,音乐获取失败朋友。。\r", " 收到了，感谢已回复", " 突然想写个正则只取 url 地址，心好累。。", " 整理了好多...", "没有人提 The Atlantic?\r", " ", "订阅了一些 V2EX 的节点", "自己写个抓取工具，订阅好看小说的连载~", "订阅结果:\r", "\r", "\r", "订阅源:\r", " 五月天这个世界其实世界", " 五月天，这个世界很小。", "收集了一些。", " 共享出来", " 心中自有音乐啦啦啦\r", "\r", " 天啦", " 不对 为什么很小", " 发一下软件 谢谢", " 发一下软件的  谢谢是安卓的", " 软件？", " 没事 是苹果的  是 rss 软件", "  Reeder3 值得拥有"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我是写 API 的</p>\n<p>写的好好的 REST API. 领导说要重构, 让所有的 HTTP Status 都返回 200. 这不是尴尬吗？</p>\n<p>哎, 找了一堆国内的 API 作对比, 然后我扔给他 github 的 API 看. 但是没有起作用.</p>\n<p>这可如何是好啊！！！</p>\n</div></div>"], "reply": "124", "tittle": "还能不能好好的写 API 了", "comment": [" 很好👍👍", " 好吧，参考 1F", "支持 200 ，业务状态码不应该和网络状态码共用。业务和网络协议状态应该要分开。死搬硬套所谓标准是很没有意义的。", "我们也是用 http status code ，不过现在觉得不是很好，因为做一些 nginx log 的分析的时候，预期内的错误返回和预期外的错误返回 错误码根本分不开了~", "强烈支持 rest,不建议硬肛领导\r", "\r", "不太明白为什么这么多人使用 200 作为统一的返回状态\r", "\r", "一个成功的请求,返回 204 No Content 不是比 { 'code' : 0}更加清晰吗?\r", "\r", "一个失败的请求(缺少身份验证) 返回 401 Unauthorized  {\"error\":\"请提供 token\"} 对比 返回 200 {\"code\":'xxxxxx'} 然后去文档中查询 xxx 所代表的含义\r", "\r", "为什么一个在 success 回调函数+error 的回调函数就能处理的问题 要去解析下 json 再进行判断呢?", " 是的 人家是领导啊！奈何啊", "小伙子，你就接受现实吧，我还遇到过狗屁不懂的人过来对我的工作指指点点的，然后嘴上吹着各种并行计算，分布式计算啥的，就没看到有些过代码或者真正对某一技术方案、架构了解过的。\r", "\r", "不过，你这个或许有“特定”的使用场景。", "支持领导\r", "\r", "HTTP 状态码不能乱用\r", "RESTful 只是一个推荐标准而已\r", "实际项目依据需要可以完全不遵循，不是说遵循了这个标准就是个好的 API ，支持这一方案仅仅是个可选项而已\r", "事实上，除了 API 内部接口，所有放到外网的 API 都应该遵循 HTTP 的默认准则，且是最小通用准则\r", "200 301 302 304 401 402 403 404 500\r", "例如以上几个状态码就是现行通用能标记请求状态的状态码\r", "\r", "至于业务，老老实实返回绝对可靠的 JSON 结果，且用 200 表示结果合法。\r", "（鉴于 200 也会存在数据不全的情况，服务端务必输出数据长度）\r", "以增强程序的健壮性、可维护性与扩展能力。", " 微信的 API 设计非常分裂，文档写得也是东一句西一句，一堆人骂娘。\r", "错误码当然不是完全靠 HTTP 的 Status Code 来判断，至少我的请求有问题的时候给我个 4XX ，服务器出问题的时候给我返回个 5XX ，返回统一结构的 JSON 来表示错误信息。这样在有些业务场景下，发现请求错误的时候可以完全不管 Body 内容。", "我已加入楼主战队。\r", "只要有话语权，想改成什么样都行，但是要考虑实际的应用场景，就不得不屈服。", "这个没必须要站队，两种方式都可以用，看设计者喜好。", " 感谢 是的呢！", " 嗯 但是领导要求！就没有办法了！", " 这种理解可以~", "其实有些系统用 200+customcode 也挺好的，这样能区分出来到底是程序上的 error ，还是网络链接 or 服务器的 error\r", "\r", "比如 HTTP 500 ，有可能是前端 nginx 有问题，也有可能是后端程序有个逻辑错误。如果用 custom code 就很好区别", "支持 200", "restful 规范不是用 http 状态码表示的吗？", "那如果发生一个服务器异常，你就直接给客户端一个 500 ？不还是要包装成 200 和正常的 json 。", "我觉得这个 restful 标准不合理，应该改掉", "返回到前端的接口都是 200 ，因为 js 中比较方便处理 json 类型的 body 内容，倒是把返回码放在 header 中处理起来会麻烦些。但是后端接口还是按 http 规定的返回码返回，这样一方面节省带宽和流量，另一方面方便后继的日志处理等，更何况后端一般 api 调用也就是先判断返回的 status 再判断返回内容的。", " \r", "    我倒是支持都返回 200 , 响应体中 data ,code,msg . code 用来做校验字段 ,msg 做提示信息\r", "+1", " http status 500 就表示服务器系统异常了", " 对的 ,一般要根据请求类型返回不同类型的响应 .做一下统一错误处理.", "没必要纠结，全部 200 对于团队开发是比 Http Status Code 是更有优势的，对于那些连 Http 协议都不太了解的人，你可以省下很多时间去解释的。\r", "\r", "慢慢你会发现，其实效率成本比这种完全标准化重要多了"]},
{"content": ["<div class=\"topic_content\">看了\"还能不能好好的写 API 了\"( <a target=\"_blank\" href=\"https://www.v2ex.com/t/321243\" rel=\"nofollow\">https://www.v2ex.com/t/321243</a>) 这个帖子, 准备所有接口都按状态码 200 和 { code: Number, msg: String, data: Object } 这样的结构返回, 但是假如只返回一个有意义的字段的话(比如只是返回一个 id ), 感觉没必要用 data 字段套一层, 如果 code 是 0, msg 字段也可以不要了.\r<br>\r<br>我看微信公众号开发文档里面, code, msg, data 这些字段都是有的, 就算不返回任何有意义的信息, 这三个字段都有.\r<br>\r<br>有没有人可以说说这么做的优劣?</div>"], "reply": "12", "tittle": "服务器的 json api 的 response 一定要有 code, msg, data 这些字段吗", "comment": ["后端是 java 写的话，序列化一个 bean 对象一般就不去修剪了吧 我猜是这样的", "那其他人用你接口时候还得注意, 这个接口有没有 msg 有没有 data  , 你自己写的时候还要区分 data 要不要 msg 要不要? \r", "不嫌麻烦?", "简单来说， http response code 不能完全的满足业务需求，也就是业务上的 error code 不能完全的映射到 http response code 上面，所以索性，全部返回 200 ，靠里面的 error code 来区分", "我是有的，{\"code\":0,\"status\":1,\"data\":[{object},{object},{object}],\"message\":\"ok\"}，\r", "\r", "或者 {\"code\":2333,\"status\":0,\"data\":[],\"message\":\"fail\"}，\r", "\r", "这样统一设计挺好的，可以通用，\r", "\r", "并且 status 不使用字符串，比如\"success\"/\"fail\",也不使用 boolean ，", "10+年前定的协议\r", "{“ code ”:” 233 ”,” var ”:{…}}\r", "到现在都没有改过\r", "为了适应业务的复杂性， code 是 string 类型而不是 int\r", "\r", "当然 10+年前的 json 还没这么流行，所以其实是\r", "<object><string name=“ code ”>233</string><object name=“ var ”>...</object></object>", "底层错误用 http status code ， 比如验证失败， Token 过期，没有权限等\r", "\r", "业务部分用业务系统自己定义的 code ，此时 http status 为 200", "如果是使用 HTTP 协议，这样做没有任何优势。", "这么几个字节节省了没有啥意义，统一更重要", "省掉一个空的 msg 字段对 java 这样的强类型语言没有影响，大部分反序列化工具都能正确赋上默认值（手动取值本来就要处理异常），但 js 会从 null 变成 undefined ， python （ json.loads()）会有一个 KeyError", "这种接口返回统一很重要", "统一很重要！", "你是没用 java 之类的对接过各种反人类系统吧，娘的每个接口一套结构，还得专门写个 bean 反序列化话，最坑的是无法直接获得业务状态，还得先反序列化成 map ，看有没有 error ，没有的话再用 bean 反序列化，一不小心就反序列化异常，简直想骂人………"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"file\" src=\"https://programmerinnfile.b0.upaiyun.com/community/51097/20161117/gA7Y2N8QHg.png\">\n理解函数式编程概念是最重要，有时也是最难的一步。</p>\n<p>**学开车</p>\n<p><img alt=\"file\" src=\"https://programmerinnfile.b0.upaiyun.com/community/51097/20161117/qlrgPUgriR.png\"></p>\n<p>在第一次学开车的时候，挣扎是难免的。看着别人开起来很简单，但实际上比我们想象的要难一些。在爸妈的车里练习，直到对小区的路都熟悉了才敢开到路上去。在经过反复的练习以及一些恐慌的时刻之后，我们终于学会了开车，拿到了驾照。</p>\n<p>拿到驾照之后，我们会抓住所有的机会开车出去。一次一次，越来越娴熟，我们也越来越自信。有一天我们不得不借别人的车出去，或者我们的车彻底坏了，不得不买一辆新的。这时候问题就来了，开一辆新车是怎样的感觉？会和第一次开车的感觉一样吗？</p>\n<p>*这两种感觉差老远了</p>\n<p>第一次开车的时候，完全是陌生的感觉。虽然在此之前，我们坐过车，但都是以乘客的身份。开车就不一样了，我们是坐在驾驶位子上，控制车里的各种东西。</p>\n<p>在开第二辆车的时候，我们只是会问一些简单的问题，比如钥匙去哪了？灯在哪里？你怎么使用转向灯，怎么调侧视镜？</p>\n<p>之后就非常顺利了。但是为什么这次就这么简单呢？</p>\n<p>这是因为新车和旧车很相像，基本的东西都一样，几乎在同样的位置。</p>\n<p>有些东西安装的不一样，可能增添了额外的特性（ feature ），在第一次甚至第二次开的时候都不会用到。最后我们也都了解了这些新特性，至少了解了我们关心的那些。</p>\n<p>学习编程语言就有点像学车。第一次最难，但是一旦你学会了一种，之后的就简单了。</p>\n<p>当你开始学习第二种语言的时候，你会问一些这样问题，比如“我如何创建一个模块？你怎么搜索数组？ substring 函数的参数是多少？”</p>\n<p>在学习新语言的时候，你会变得自信，因为你会想到之前的语言，加了一些新的东西，学起来也容易些。</p>\n<p>**你的第一艘宇宙飞船</p>\n<p><img alt=\"file\" src=\"https://programmerinnfile.b0.upaiyun.com/community/51097/20161117/Wdy1I2gqnJ.png\"></p>\n<br>\n不管你这辈子是只开过一辆车还是开了几十辆车，现在想象一下你要驾驶一艘宇宙飞船的情景。\n<p>如果你要驾驶飞船的话，你肯定不会期望曾经开车的能力能够帮到你。你得从零开始。（作为程序员，我们都是从 0 开始计数。）</p>\n<p>开始训练的时候，你就已预想到在太空中是完全不一样的，虽然物理空间不变，还是在同一宇宙中，但是驾驶飞船和开车完全是两码事。</p>\n<p>这和学习函数式编程是类似的。编程就是在思考，函数式编程会教你如何以不同的方式思考。以至于，你之后再也没法回到以前的思考方式。</p>\n<p>**将自己归零</p>\n<p><img alt=\"file\" src=\"https://programmerinnfile.b0.upaiyun.com/community/51097/20161117/yAbMgnvOWv.png\"></p>\n<p>人们很喜欢说这句话，将自己归零，这么说是有些道理的。<em>学习函数式编程就像是从头开始</em>。不完全，但很贴切。如果你是希望一切都从头学起的话，那是最好的。</p>\n<p>看问题的角度正确了，才会有正确的预期；预期正确了，才不会在遇到难题的时候轻易放弃。</p>\n<p>作为一名程序员，有各种各样的事情，你已成习惯了，但是在函数式编程的时候是没法做的。</p>\n<p>就像在车里，你习惯从私人车道倒出来。但是在飞船里，根本就没有倒挡。现在你可能会想，“什么？没倒挡？！没倒挡，我 TM 怎么开？！”</p>\n<p>没倒挡就说明在飞船里根本不需要倒挡，因为飞船可以在三维空间里任人操作。一旦你理解了这点之后，你就不会再想着倒挡了。事实上，某一天，你会觉得车这东西真的是限制太多了。</p>\n<p>*学习函数式编程需要一段时间，要有耐心。</p>\n<p>走出命令式编程的冰冷世界，温柔地沉浸到函数式编程的暖春中。</p>\n<p>在开始研究函数语言之前，下面的函数式编程概念对你会有所帮助。如果你已经开始尝试了，下面的编程概念会让你有更全面的理解。</p>\n<p>请花点时间向下读，理解一下编码示例。 最重要的就是你要理解它。</p>\n<p>**纯洁性</p>\n<p><img alt=\"file\" src=\"https://programmerinnfile.b0.upaiyun.com/community/51097/20161117/z5utLPytjt.png\"></p>\n<p>当函数型程序员说起纯度 纯洁性的时候，他们指的是纯函数。纯函数是非常简单的函数，只运行输入的参数。</p>\n<p>举一个用 Javascript 写的纯函数例子：</p>\n<pre><code>var z = 10;\nfunction add(x, y) {\n    return x + y;\n}\n</code></pre>\n<p>要注意的是<em>add</em>函数不会触发<em>z</em>变量，不会从<em>z</em>开始读取，也不会写到<em>z</em>，只会读取<em>x</em>和<em>y</em>（输入值），返回加和结果。</p>\n<p>这就是纯函数。如果<em>add</em>函数访问到<em>z</em>，那么它就不是纯函数了。</p>\n<p>下面是另一个函数：</p>\n<pre><code>function justTen() {\n    return 10;\n}\n</code></pre>\n<p>如果函数<em>just Ten</em>是纯函数的话，那它只能返回一个常数。为什么？</p>\n<p>因为我们还没输入任何东西。如果要变成一个纯函数的话，是没法访问到输入值以外的任何值的，所以唯一能返回的值就是个常数。</p>\n<p>没有参数的纯函数无法运行，所以没太大用处。如果<em>just Ten</em>定义为一个常数，那就更好了。</p>\n<blockquote>\n<p>大多数有用的纯函数都必须至少有一个参数。</p>\n</blockquote>\n<p>看看这个函数：</p>\n<pre><code>function addNoReturn(x, y) {\n    var z = x + y\n}\n</code></pre>\n<p>这个函数不能返回任何值。添加<em>x</em>和<em>y</em>，得出变量<em>z</em>，但是不会返回任何值。</p>\n<p>这是个纯函数，因为它只处理输入值。但是输入了也没有返回任何结果，所以这函数是无效的。</p>\n<blockquote>\n<p>所有有效的纯函数都必须返回一些值才行。</p>\n</blockquote>\n<p>我们再看看第一个 add 函数：</p>\n<pre><code>function add(x, y) {\n    return x + y;\n}\nconsole.log(add(1, 2)); // prints 3\nconsole.log(add(1, 2)); // still prints 3\nconsole.log(add(1, 2)); // WILL ALWAYS print 3\n</code></pre>\n<p>我们看到<em>add(1,2)<em>总是返回 3 。这并不奇怪，因为这个函数是纯函数。如果</em>add</em>函数使用外部的值，那么就没法预知结果了。</p>\n<p>*同样的输入，纯函数得出的结果都是一样的。</p>\n<p>因为纯函数是没法改变任何外部变量的，所以下面这些函数都不是纯函数：</p>\n<pre><code>writeFile(fileName);\nupdateDatabaseTable(sqlCmd);\nsendAjaxRequest(ajaxRequest);\nopenSocket(ipAddress);\n</code></pre>\n<p>这些函数都有副作用，当你调用的时候，文件和数据表都会改变，数据发送到服务器，或者调用 OS 套接，不仅仅是运行输入值返回输出值。所以永远也没法预判这些函数会返回什么东西。</p>\n<p>*纯函数没有副作用。</p>\n<p>在命令式编程语言中，比如 Javascript 、 Java 和 C#，副作用无处不在。这使得调试非常困难，因为在项目中一个变量随处都可改变。所以当发现一个 bug ，这 bug 是因为一个变量在错误的时间被改成了错误的数值导致的，怎么找出来？到处找吗？根本不行！</p>\n<p>这时候，你可能会在想 “只有个纯函数，我 TM 怎么办？”</p>\n<p>在函数式编程中，你不仅仅是写纯函数。</p>\n<p>函数式编程无法彻底消除副作用，只能限定。因为各个项目要和真实的世界交互，每一个项目中某一部分必须是非纯函数的。目标是最小化非纯码的数量，将其与其它的项目隔离开。</p>\n<p>**不变性</p>\n<p>你还记得你第一次看到下面这些代码的时候吗？</p>\n<pre><code>var x = 1;\nx = x + 1;\n</code></pre>\n<p>是不是每个教你的人都告诫你忘记你在数学课上学的东西？在数学上，<em>x</em>是不可能等于<em>x+1</em>的。</p>\n<p>但是在命令式编程中，<em>x+1</em>的意思是将<em>x</em>现在的值加上<em>1</em>，然后将值返回给<em>x</em>。</p>\n<p>在函数式编程中，<em>x = x + 1</em>是非法的。所以你必须得记住你忘记的那一点点数学知识。</p>\n<p>*函数式编程中不存在变量。</p>\n<p>存储的值也叫作变量，但是他们都是常数，比如一旦 x 取了一个值，那它永远就是这个值。</p>\n<p>不用担心， x 通常是个局部变量，所以它的生命通常很短暂。但是在生命期中，它的值是无法改变的。</p>\n<p>下面是 EIm 中的一个固定变量的例子， EIm 是一种用于网页开发的纯函数式编程语言。</p>\n<pre><code>addOneToSum y z =\n    let\n        x = 1\n    in\n        x + y + z\n</code></pre>\n<p>如果你对 ML-Style 语法不熟悉的话，我来解释一下，<em>addOneToSum</em>是一个有两个参数（<em>y</em>和<em>z</em>）的函数。</p>\n<p>在<em>let</em>模块内，<em>x</em>绑定值为 1 ，也就是它的值等于 1 。在函数退出或者更精确的说是当<em>let</em>模块求值之后，<em>x</em>的生命就结束了。</p>\n<p>在<em>in</em>模块，计算包括<em>let</em>模块定义的数值，也就是<em>x</em>。返回<em>x + y + z</em>的计算结果，更精确地说是，因为<em>x = 1</em>，返回<em>1 + y + z</em>这样一个结果。</p>\n<p>你肯定会又问“没有变量，我 TM 到底该怎么做？！”</p>\n<p>我们来想想什么时候要调整变量。一般有两种情况：多值变化（比如：改变某个对象或记录的一个值）和单值变化（比如：循环计数器）。</p>\n<p>函数式编程通过利用数据结构复制值变化后的记录（不用复制全部记录）的方式高效地处理记录中数值的变化。</p>\n<p>函数式编程也是通过同样地方式（即复制）解决单值变化。</p>\n<p>是的，但是没有循环。</p>\n<p>你肯定又抓狂了：“什么？没变量，现在又没循环？！”</p>\n<p>冷静，不是不能进行循环，只是没有特定的循环结构，像<em>for</em>, <em>while</em>, <em>do</em>, <em>repeat</em>等。</p>\n<p><em>函数式编程使用递归循环</em></p>\n<p>下面是使用 Javascript 语言写循环的两种方式：</p>\n<pre><code>// simple loop construct\nvar acc = 0;\nfor (var i = 1; i &lt;= 10; ++i)\n    acc += i;\nconsole.log(acc); // prints 55\n // without loop construct or variables (recursion)\nfunction sumRange(start, end, acc) {\n     if (start &gt; end)\n         return acc;\n     return sumRange(start + 1, end, acc + start)\n}\n console.log(sumRange(1, 10, 0)); // prints 55\n</code></pre>\n<p>我们看看递归（一种函数方法）是怎样通过自我调用一个 new 开始(start + 1) 和一个 new 累加器(acc + start)实现和 for 循环一样的结果的。递归不需要改变原先的值，而是使用旧值算出的新值。</p>\n<p>不幸的是，即使你花了一点时间学习，在 Javascript 中也很难看到这个。有两个原因：一是 Javascript 语法比较杂乱；二是你可能不习惯用递归的方式思考。</p>\n<p>在 EIm 中，读取更容易，理解也相应的更容易：</p>\n<pre><code>sumRange start end acc =\n    if start &gt; end then  \n        acc\n    else\n        sumRange (start + 1) end (acc + start) \n</code></pre>\n<p>下面是运行过程：</p>\n<pre><code>sumRange 1 10 0 =      -- sumRange (1 + 1)  10 (0 + 1)\nsumRange 2 10 1 =      -- sumRange (2 + 1)  10 (1 + 2)\nsumRange 3 10 3 =      -- sumRange (3 + 1)  10 (3 + 3)\nsumRange 4 10 6 =      -- sumRange (4 + 1)  10 (6 + 4)\nsumRange 5 10 10 =     -- sumRange (5 + 1)  10 (10 + 5)\nsumRange 6 10 15 =     -- sumRange (6 + 1)  10 (15 + 6)\nsumRange 7 10 21 =     -- sumRange (7 + 1)  10 (21 + 7)\nsumRange 8 10 28 =     -- sumRange (8 + 1)  10 (28 + 8)\nsumRange 9 10 36 =     -- sumRange (9 + 1)  10 (36 + 9)\nsumRange 10 10 45 =    -- sumRange (10 + 1) 10 (45 + 10)\nsumRange 11 10 55 =    -- 11 &gt; 10 =&gt; 55\n55\n</code></pre>\n<p>你可能会觉得 for 循环更容易理解。然而，这是有争议的，更可能是熟悉度的问题，非递归循环需要可变性，可变性这就糟糕了。</p>\n<p>这里我没有完全解释不变性的好处，你可以到另一篇文章《为什么程序员需要限定》（ Why Programmers Need Limits ）中的 Global Mutable State 查看一下，会学到更多。</p>\n<p>不变性一个明显的好处就是如果你访问了项目中的一个值，你只能读取访问，这意味着其他没有人能改变这个值，即使是你。所以不会发生意外的变性。</p>\n<p>另外，如果你的项目是多线程的，那么其它线程没法让你挂掉的。值是不变的，如果另一个线程要改变它，必须从旧的值里创建一个新值。</p>\n<p>在 20 世纪 90 年代中期，我为生物危机（ Creature Crunch ）写了个游戏引擎，最大的 bug 来源就是多线程问题。我很希望能够重新了解不变性。但是我更在意是 2x 或 4x 速率 CD-ROM 驱动对游戏性能有啥区别。</p>\n<p><em>不变性创建了更简单安全的代码。</em></p>\n<p><img alt=\"file\" src=\"https://programmerinnfile.b0.upaiyun.com/community/51097/20161117/zQmJySOUbb.png\"></p>\n<p><em>这篇文章来自我的个人知乎专栏， 翻译起来感觉有些难，所以以上不一定准确。有什么地方不对的，麻烦各位大神在评论中指出来，请多多指教！</em></p>\n</div></div>", "<div class=\"topic_content\">原文链接 medium （需要翻墙） <a target=\"_blank\" href=\"https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-1-1f15e387e536#.ssl9s68mt\" rel=\"nofollow\">https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-1-1f15e387e536#.ssl9s68mt</a></div>"], "reply": "27", "tittle": "如何成为一名函数式程序员（ I）", "comment": ["不太会用 V2EX 写文章啊，这个语法用起来感觉不太一样啊......\r", "\r", "我的知乎专栏 “互联网科技那些事儿” ", " 欢迎关注", "我们每篇函数式语言介绍的文章，都是神经兮兮怪话连篇， 就不能通俗易懂深入浅出地好好说话吗。", " 下次努力翻译的好一些，这篇翻译有没有一些知识性问题呀？", "这个系列的文章写的相当好，以前看过", " 是不是我翻译的很烂啊 %>_<%", " 抱歉， 我没仔细看完。 技术人员的时间应该都比较宝贵，我更喜欢直接了当的信息。开头的例子配图废话会挑战我的耐心，毕竟我是来看干货的， 不是来娱乐的。", "js 写函数式推荐这个 ", "\r", "没那么多废话, 而且还带有点深度..", "原文链接在哪...？", "辛普森一家；\r", "摩登家庭；\r", "银河护卫队；", " medium 需要翻墙，所以就没挂", " 好的，懂了，之后我再简练一些", "学一下 Haskell, 或者 Clojure ", "\r", "\r", "拿 JavaScript 学函数式编程, 就像是开着滑翔翼说要上天. 风没了你就掉下来了.", "赞一个~", "最好给原文链接，至于翻墙，原来这论坛有段时间都要翻墙， V2EX 能翻墙的人肯定比你想像的人多。\r", "\r", "原文：\r", "\r", "\r", "markdown 二级标题应该是用 “##\" 而非 \"**\"吧，我还以为是关键字被过滤了……\r", "\r", "至于翻译\r", "\r", "原文第一句\r", "\r", "> Taking that first step to understanding Functional Programming concepts is the most important and sometimes the most difficult step. But it doesn ’ t have to be. Not with the right perspective.\r", "\r", "你翻译成\r", "\r", "“理解函数式编程概念是最重要，有时也是最难的一步。”", " \r", "\r", "翻墙问题：\r", "不排除一部人能翻墙，但是对于不能翻墙的， medium 链接是死链。\r", "\r", "markdown 编辑问题：\r", "这篇文章是我用 Markdown 编辑好后直接 copy 过来的，但是预览完全是另一幅样子。 ## 显示的是 ##，但是用** 预览的时候 就是粗体，所以就改成了**  但是结果还是这样。\r", "难道我不知道一个个改来改去，很麻烦吗？\r", "\r", "翻译的问题：\r", "原文我都细致看过的，至于译文，考虑到不会影响原意，所以省去了一些没必要的文字。\r", "另外，这不是接稿翻译，所以没有必要像交稿件一样句句不漏的翻译。\r", "不知道你觉得第一句，那么长，我省去了那些有什么不对？", "oo+面向过程是人类的正常思维\r", "强制函数式不用 lisp 你不感觉不太正常么", "想学函数式应该使用 Haskell 强调 pure  可以让你要么早早放弃要么深入根本", "第二张图好眼熟，摩登家庭？", "这个不错 ", " \r", " ", "建议学习函数式编程的同学可以去看 Haskell 相关教程，好比文中所说的最小化副作用，那么在函数式里面应该如何做呢？这个是一个很重要的点，但是并没有提到。\r", "而 Haskell 里面就有对应的 monad 来处理这样的情况，不去了解一下 monad 然后去用函数式编程限制副作用我认为是可怕的。副作用真的限制了吗？多步副作用依序执行会怎么样？这些都没有说，因此强烈推荐 Haskell 的相关教程。\r", "要不真正入坑，要不尽早劝退", " 我只看了标题和图", "好好学 Haskell ，然后就会发现 js 这些都是小儿科，根本不需要刻意去学。更不用说“函数式程序员”。为什么 js 社区都这么喜欢造一些看似高大上然而实际并没有什么值得称道的名词？", "个人感觉，翻译还是在最后加上原文链接比较好", "如果无参数函数是纯函数的话，那它只能返回一个常数。\r", "Math.random()", "我看完了，老外写的文章，直译出来都行，很容易跟随作者的人思路进行互动式的学习。知识性的问题的话没法评价。\r", "文章不错👍", " 好的 我加上", "函数式编程的变量是 variable ，命令式编程的变量其实是 assignable ，“函数式编程中不存在变量”的说法不准确，混淆了两个概念"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>听了一些人的一些话 百思不得其解 , 技术达到什么程度才叫\"厉害\" ,什么程度叫\"不怎么样\"? <br></p>\n</div></div>"], "reply": "3", "tittle": "做技术的 做到什么程度才算是厉害?", "comment": ["某一技术领域的开拓者？", "必备的基础能够入微，不会浪费不必要的时间，新东西或需求能够尽快厘清难点和概要核心，当然都是在一定领域内，具有一定的驾驭能力", "以前在别的地方看到的:\r", "\r", "1.你自己厉害\r", "2.有别人认为你厉害\r", "3.说你厉害的人本身厉害"]},
{"content": ["<div class=\"topic_content\">我有一个个人站，海外，无备案，原来接的支付宝担保交易，然后支付宝已经不续签这个服务了~\r<br>\r<br>其他的接口要个人或企业资质，还得备案，本来也赚不了多少钱，懒得折腾\r<br>\r<br>看到有一些第四方支付接口，他们收到钱然后再给你\r<br>\r<br>找到一些，不知道有没有更好的？\r<br>\r<br><a target=\"_blank\" href=\"http://support.teegon.com/\" rel=\"nofollow\">http://support.teegon.com/</a> 1%的费率\r<br>\r<br><a target=\"_blank\" href=\"http://jm.yunpay.net.cn/\" rel=\"nofollow\">http://jm.yunpay.net.cn/</a> 1.0-1.2%的费率\r<br>\r<br>另外有没有接 paypal 的第四方接口呢~paypal 自己的费率贵死了，收 100 美金，到手 94 美金~</div>"], "reply": "30", "tittle": "有没有适合个人站长的云支付(第四方支付系统)？", "comment": ["这些也叫第三方，第二个那个.net.cn 域名，我坚决不敢用，连个好域名都没有，感觉没保障，当然是我的感觉。", "\r", "\r", "\r", "来 ... 你自己也可以搞。", "连 https 都没，这能用吗？", "stripe 主要是接信用卡支付方便", "\r", "\r", "这个软件怎么样？用自己的支付宝账号即可（个人可以用）\r", "\r", "就是需要一直挂着", " 你看我的，开源免费，原理一样。", " 大概看了一下，所以 cookie 过期得手动添加么？", " 试试这个，还有一个类似的，没想起了", "找到了， ", " pingxx 不支持个人", " 是的，需要手动重启。", "PayPal Business Account 的费率还是可以的，特别是每个月量大起来以后。", "stripe 支持支付宝", " 恩恩，学习", "我记得想让 stripe 支持支付宝好像得是美方公司还是什么的……", "接入 有赞 的收银台\r", "不过需要年费，半年 2600 ，一年 4800", "之前一直没用的这个不知道行不行，做个记号，以备不时之需 ", "可以接受 bitcoin 吧", " 对头， net.cn 让人信任度低很多。\r", "PingXX 不支持个人的，前面已经说了。\r", "Stripe 你得有境外卡，至少得香港的银行卡吧。", " 其实 com 的更没保障，万网的 net.cn 还要求实名，但是。。 com 如果在国外还开了隐私保护找到人都难。。", "但是第一个网站看起来更可靠一些。", " 第一个支持 https", "国内如果提供的服务被人做犯罪，服务商也是有严重连带责任的。这就是为什么你没备案没企业身份背书没人愿意给你用。", "用 stripe 好了，我看梯子站都用的这种。", "关注", "你可以搜索一下微信公号 「简单支付」", " 至少首页不行，首页用 https 还被降级了", " 很正常的，很多网站都是降级的，但都比没有安全，首页也是 https 的。\r", "Godaddy 就是同样的加密算法，这种算法仍然很流行。\r", " \r", " ", "我记得某个 SS 厂商有那个支付宝接口， 你转账 写好了备注，他后台能自动抓取到，不过麻烦的是 要经常换支付宝账号", "楼主现在用哪个，求推荐个靠谱的。"]},
{"content": ["<div class=\"topic_content\">公司文化是自由工作，不用非到公司不可，各司其职就 OK 了。\r<br>现在头疼的事情是相互之间的进度管理和员工状态管理，毕竟不在一起工作。如何知道项目的进度，还有哪个员工正在做哪个项目，所以想请教一下各位，是否有类似的系统？可以有这两个功能点，有更系统化的图形界面去呈现。最好还有 BUG 跟踪之类的。\r<br>\r<br>看了一下 JIRA 和 Confluence 比较符合，不知是否还有更好的推荐？优先考虑能自己部署，如果提供云服务也可以，速度 OK 就行了。\r<br>\r<br>谢谢各位！</div>"], "reply": "27", "tittle": "你们是怎样进行项目进度和员工状态管理的？", "comment": ["Excel", "tapd", "Tower", " 这个不够灵活， C 端还要不停更新。", "TAPD", "trello 不错的：）", "以前在腾讯内部用过 TAPD ，原来现在公网可以用了。。体验挺不错了，后来在创业公司用过 Jira （ IDE 插件多， Geek 多的团队 6 的飞起，但是需要破解，需要一定英文和部署能力）， Tower （凑合，界面丑，但是和钉钉结合的好，老板喜欢用，可以在上面发开会通知，签到通知是什么的）， Worktile （轻量，简便，我自己管理自己用的）", "JIRA", "解决这些问题的第三方工具产品其实挺多，但是不同产品的解决方式都有差别，是否适合自己团队使用，最好的方式还是自己去简单试用，大概列几个团队内部试用过的产品。\r", "\r", "项目管理协作类\r", "1 、 Tower 、 Teambition 和 Worktile 这类，基本功能上都没有太大差异化，任务分配项目管理等等\r", "2 、 Redmine ，偏项目管理，集成了 wiki ，还有项目任务、甘特图之类的功能，可以自己部署\r", "\r", "团队状态管理\r", "1 、 workingon ，使用过收费版，支持很多不同的 channel ，但是很很难用起来\r", "2 、 idonethis ，同类产品，这类 Status Report 产品还有挺多\r", "\r", "其他\r", "1 、 Confluence ，这个用来做内部知识管理更适合一些，当然团队成员也可以发自己的 Status", "我觉得吧 youtrack 是最好最适合小团队的， 10 人以下免费。 25 人以下初创企业 1600 元左右，而且非常好用。", "网易云协作。。", "加钱。", "trello \r", "jira 太大太复杂", "禅道、 leangoo 都有用过，还是不错的。", "tower.im", "禅道放任务 Confluence 里放需求 high 上天", "基于代码的话\r", "我喜欢用 gitlab", "嘴", "Tower 布置简单任务还是不错的，但是它的文档功能不是很好用，导入导出不方便，移动端编辑功能几乎就是没有~~~", "Redmine  用过两年 换成 Tower 用过几个月 还是回到了 Redmine  技术团队就适合 Redmine", "要真正敏捷开发 推荐 还是 JIRA 吧， 虽然我们公司 现在 teambition tapd 都在用， teambition 交互很棒 tapd 更符合软件项目需求但是交互做的比较烂。。。", "推荐 JIRA 和 Confluence 。", "github + google docs", "如果是管理开发的话，我们用的自己开发的 git 管理平台， ", " 。", " 不知道你觉得 tapd 哪些方面的交互做得比较烂呢？可否举一些例子？"]},
{"content": ["<div class=\"topic_content\"># opener_server.pl 是 OPener_Server 容器标准的 Perl 实现\r<br>\r<br>opener_server.pl 默认启动就是一个 https 服务器，使用 opener.pem 证书文件,监听在默认端口 10008 上。  \r<br>\r<br>该 https 服务器提供了一些基本的 api ，让你可以做到以下事情：\r<br>\r<br>* 指定一个端口，启动一个新的 http 或者 https 服务器\r<br>* 停止在某个端口上运行的 http 或者 https 服务器\r<br>* \r<br>* 建立一个文件浏览的 url 地址，并把它挂到某个端口与域名上\r<br>* 建立一个目录浏览的 url 地址，并把它挂到某个端口与域名上\r<br>* 建立一个单文件下载的 url 地址，并把它挂到某个端口与域名上\r<br>* 建立一个根目录(让所有找不到的文件，最后去这个根目录查找)，并把它挂到某个端口与域名上\r<br>* 建立一个 HTTP GET 模式的 url ，然后绑定一段代码来处理这个 GET 请求（这段代码可以位于本地、也可以位于远程 http 服务器），并把它挂到某个端口与域名上\r<br>* 建立一个上传的 url 地址，用来处理 html5 模式下的文件上传，然后绑定一段代码来处理这个 POST 请求（这段代码可以位于本地、也可以位于远程 http 服务器），并把它挂到某个端口与域名上\r<br>* 建立一个 HTTP POST 模式的 url ，用来处理 ajax post 上来的数据，然后绑定一段代码来处理这个 POST 请求（这段代码可以位于本地、也可以位于远程 http 服务器），并把它挂到某个端口与域名上\r<br>* 建立一个 HTTP POST 模式的 url ，用来处理 form post 上来的数据，然后绑定一段代码来处理这个 POST 请求（这段代码可以位于本地、也可以位于远程 http 服务器），并把它挂到某个端口与域名上\r<br>* \r<br>* 注入一段代码，直接在 opener_server 的 perl 环境里运行\r<br>* 从远端的 http 服务器上取回一段代码，，直接在 opener_server 的 perl 环境里运行\r<br>* 启动一个新 perl 进程，直接执行一段脚本内容。\r<br>* 启动一个新 perl 进程，直接执行一段远端 http 服务器上的脚本内容。\r<br>* \r<br>* 指定一个管理端口，启动一个新的 opener_server.pl 进程。\r<br>* 退出当前的 opener_server.pl 进程\r<br>* 取回当前系统内部的日志\r<br>\r<br>### * 运行方法与运行参数\r<br>\r<br>1. 第一次开始运行前，请先使用 util/create_pem.sh 脚本随机生成一个 opener.pem 证书文件。  \r<br>   运行方式： bash create_pem.sh opener  \r<br>   opener.pem 证书文件也可以自己申请：内容是先私有证书，再公共颁发的证书，再中间证书（如果有的话），再 CA 的根证书。  \r<br>   生成 opener.pem 后，就可以直接用 perl 来运行 opener_server.pl  \r<br>\r<br>2. perl opener_server.pl 10008 0  \r<br>   第一个参数： 10008(默认值)代表： opener_server.pl 的管理端口为 10008 ，启动一个 Https 服务在 10008 端口并使用默认的 opener.pem 证书文件。  \r<br>   第二个参数： 0 代表：不自动运行配置文件中的代码； 1 （默认值）：代表自动运行配置文件中的代码。  \r<br>   \r<br> 项目地址： <a target=\"_blank\" href=\"https://github.com/openerserver/openerserver_perl\" rel=\"nofollow\">https://github.com/openerserver/openerserver_perl</a>\r<br>\r<br>微博： <a target=\"_blank\" href=\"http://weibo.com/openerserver\" rel=\"nofollow\">http://weibo.com/openerserver</a> \r<br>\r<br>微信公众号： \r<br><img src=\"http://ww2.sinaimg.cn/orj480/006897bVjw1f9tqs614rqj309k09kjrc.jpg\" class=\"embedded_image\" border=\"0\"> </div>", "<div class=\"topic_content\">内容已经转移到： <a target=\"_blank\" href=\"https://www.v2ex.com/t/321686\" rel=\"nofollow\">https://www.v2ex.com/t/321686</a>\r<br>本篇不再更新！！！</div>"], "reply": "目前尚无回", "tittle": "OPener_Server 第二弹， opener_server.pl 一个 http 容器", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>现在在一个三分之一国企的单位里做后端开发，天天上班已经完全没有互联网企业里的那种感觉了……而且还有各种奇葩制度，比如说上班必须穿白衬衣，每个月必须两天值班，还有一晚上的厂区夜班巡逻，这让我有一种我主业保安，兼职写代码的错觉……然后不由得考虑下一步，想来想去觉得干什么都不可能说那么顺心的。也是愁……</p>\n</div></div>"], "reply": "35", "tittle": "做甲方，项目做完就得担心被辞，做乙方，天天累得要死，创业公司，说不定什么时候就解散了。各位都偏向于哪种呢？", "comment": ["哪个钱多，去哪个", "也是厉害", "什么甲方、乙方，除了被外包、外包之外就没有公司了么。", "去 BAT", "选钱多不累的", "可能是你的心态出了问题,技术又不太踏实?", "马上就要被解散了，新项目马上完工，公司就迫不及待的要把我们辞退了。", " 比如一些干外包的外资公司，在中国也大多不累，收入也还行。", "好好学技术，别瞎想。", "如果你的选项中就这两种，那你应该选择好好提升自己的技术来增加选项。", "你可以选择做产品而不是做项目。", " 没错我现在在这心态爆炸", "找个钱多事少离家近的", "这应该就是一种归宿，如果你把这种归宿接受了，想成理所当然，那么就不会有憋屈感，并且积极地寻找更好的未来。而不是像现在悲观地寻找未来。\r", "无论你怎么悲观，有些东西总是没办法改变的。换个想法吧！", "国企", "有点 lz 这样的情况。。。", "患得患失 眼高手低", "哪里需要哪里搬呀。。", "还有一晚上的厂区夜班巡逻， 这个我服", "楼主的眼里只有外包公司……", "主要是因为你能力太弱\r", "所以你才会有这么多纠结\r", "你完全可以回家养猪。", "除了甲方乙方创业就没有其他公司了吗？\r", "QQ 、微信、有道、哔哩哔哩、印象笔记、奇妙清单、印象笔记。。。手机里大大小小一堆做了好多年以后也会长期做的 endless 产品。\r", "而且创业也有创业的乐趣啊。\r", "还有一堆独立开发者在做自己的小而美的产品。\r", "\r", "“想来想去觉得干什么都不可能说那么顺心的”，这句话倒是真的。。。然则你想怎样？再乐的一方乐土久了也会麻木，再红的玫瑰也会被艹成白饭粒。\r", "\r", "你需要习惯就好。你需要一个新目标。", " 艹成白饭粒 shenmegui", "事先做个准备，以便问题来了就能应付", "还是觉得只有不断学习，就不愁被辞退，公司那么多，何必一定要外包和被外包。", "可以埋点坑，到时候还需要你回来帮忙修复的。", " 我觉得这点真的很少有，为啥要一个码农去巡逻？", " 所以我服", "感觉持续做一款产品会更有帮助和成就感的~~", " 张爱玲的小说", "想开商场，结果自己建了一个建筑公司去建楼", "保安兼职程序员", "家财万贯，不如一艺傍身。\r", "\r", "找个不会透支生命的能收获成长的地方\r", "比起其他传统行业而言，程序员只要肯努力，待遇都不会太差", "上面说 找个钱多事少离家近的  \r", "我也是服了 \r", "这种类型的说得很多的一样", " BAT 也不容易，天天累到死。"]},
{"content": ["<div class=\"topic_content\">感觉现在的在线教学看他们的课程，很难坚持下去，没有课堂上的感觉，大家有没有类似的感觉，或者有啥建议？</div>"], "reply": "45", "tittle": "关于在线教学，比如慕课网，大家觉得有什么问题？", "comment": ["不花钱不心疼不珍惜", "本来就是业余爱好，基础教育学校从早晨 7 点到晚上 10 点的轰炸你比不了，编程、乐器这种东西又更需要实操，语言类的入门又需要老师填鸭式教学帮你度过初级阶段\r", "总之你们喜欢就好咯", "没有别人逼你学，所以自己的兴趣最重要。", " 如果花钱的话，感觉现在的在线教育还没给我花钱的欲望。", "为了赚钱对课程审核变轻了，我一直觉得授课是件非常严肃的事情，比分享技术还严肃，所以有平台找我我都拒绝了，对自己知识体系没有深挖，怕误导别人，造成影响，但是上次看了下好多课程讲师都出现了错误，有些课程的错误直接在评论里被指出了", "主要是课程内容太肤浅，有些授课的人本身不适合函授，说话口齿不清。", "课堂教学   也是个趋势  只是目前比较乱", "去 coursera 吧  大把人心甘情愿花钱听课.", "楼主可能要去上达内那种 20k 的培训班 23333", "买书看书多好，非得看网上视频啊", "基础问题，基础不好，看教程也不能理解其深意。只能照着敲代码，却不知道为什么这样写", "因为一部分知识免费所以就不珍惜", "看视频入门还成，深入还是要通过别的途径。慕课网课程平均质量在免费网站里算高了。", "我有付费看 udemy ， pluralsight 和其他一些免费的视频教程， 我觉得作为入门还是很不错的。", " 精 P", "本来还觉得可能确实是慕课网太肤浅了，看了楼主的回复我确定是不花钱不心疼所以不学习。", "实验楼怎么样？", "我坚持认为看书才是正路。", "网上授课的内容错综杂乱，参差不齐，钱多钱少就不吐槽了，问题了浪费了大把的时间！贼 TM 坑爹！顺便推荐一下 yii2 实战系列的教程，虽然是文档式的，但是比起看视频性价比绝对好 ", "不推荐慕课  他们的代码校验有问题  对格式要求不严格   之前有过测试    \r", "比如让我 输入“ alert(1)”\r", "我输入  “ alert(1)alert ”\r", "它也会识别为正确   个人认为这对初学者是非常严重的误导，认为格式不重要，以后万一有实际项目因为少了一个符号导致出问题可有得受的", "课程太少", " 目前就觉得实验楼比较好，想合租", "觉得看书才是自学的最好方法", "工程的看 udacity, 实用的看 coursera, 基础的看 mit\r", "当然就是 基本都英语..", "技术前沿还可以看 微软的 channel9", "相比较外国的平台还差太多吧，教育本是个要求很高的事情，懂了还不一定会讲，讲也不一定讲的好。不然为啥国外老师工资都不低？", "一门课程投诉到重新录制，虽然不是一个人的功劳！", "不能作主要知识来源，但无论简单入门还是没有资源(如高中生自学机器学习)，都足够了。每个人都有不同需求。我还守着 linuxcast 和 oeasy 和。。。的视频看。。", "是因为内容太基础吗？楼主可以试试自己阅读...应该会更有挑战性的", "写了一堆，删了。总结就是： 1 、看视频，看的时候能看懂，但转眼就忘，而且由于是视频，你想随意复习某个具体的知识点，真不如一本书方便。 2 、建议就是弄一本书，中英文均可（虽然我推荐英文的），然后学任何一门语言，你就好好把他们的官方手册下载下来，遇到不懂的就查。保证你不出半年，进步飞速。", "   imooc 的课程里的", " 好怀念 linuxcast  也不知道站长现在在做什么", " 是的，看书，看视频都不如看官方文档", "难坚持的话找找原因啊，是找不到成就感还是没你喜欢的课程。你说的课堂上的感觉也不知道是什么感觉， B 站一些技术视频带弹幕对我就很有感觉。", " \r", " \r", "linuxcast 的 nash_su 讲的是真的好。", "我觉得视频的话，在实际有一定的操作之后再去看才是比较有效的。\r", "看过一些视频，个人感觉表面总结性的东西比较多，不太适合踏实深度的学习，用来填补看书或实操后的空白或许更好。", "推荐一个吧 优达学城 毕竟几千块一年的学费，我想你应该好好学的吧，至少也得心疼花的钱吧。", "建议就是少些视频多些文字。", "一个是知识系统，一个是课程质量。\r", "国外著名大学那些公开课，以及 coursera 的大部分课程，你想了解那一小块儿内容，是没有问题的。比如，耶鲁大学的席勒教授的金融市场，是一个导论性质（不是导论），可以借此“看一眼”行为金融和金融市场。但是这些课程缺乏系统性，更像轻松的知识研讨会，不是大学系统设计的培养方案，相互间关联少，有的更加上了深一脚浅一脚的毛病。比如 coursera 有一个 r 语言的课程，惨不忍睹。\r", "本土的课程质量则是一个大问题。典型的国内一个安全类别的，那课程质量莫名其妙。\r", "当然，也不可能指望那些知名学府把学生上的课都拿出来。所以，想学知识，老老实实买教材，认真一字一字看下去吧。", "学基础，入门很有用啊。当然，原速度看确实很无聊很慢的，把播放速度设置为 1.7 到 2.0 会有惊喜", "入门还是可以的，很多技术 你一开始摸不着头，用慕课的视频入门，要输入的话 还是要买本 书", "进度太慢，严重低估了学习人的智商，适合第一次学习编程语言的人\r", "有基础的建议直接拿来代码看，看个几页基本语法就懂了", "同意楼上几位，非常很适合入门。", " 国外教学视频也蛮多不错的。只是至少要会听得懂英文。", "我同时看传智播客、极客学院、少量慕课等其他，相对而言，黑马+传智播客的视频比较系统化，故能够比较深入。一般快速查个简单主题可能去极客学院，因为便于查询。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h1><a href=\"http://opener_server.pl\" rel=\"nofollow\">opener_server.pl</a> 是 OPener_Server 容器标准的 Perl 实现</h1>\n<p><a href=\"http://opener_server.pl\" rel=\"nofollow\">opener_server.pl</a> 默认启动就是一个 https 服务器，使用 opener.pem 证书文件,监听在默认端口 10008 上。</p>\n<p>该 https 服务器提供了一些基本的 api ，让你可以做到以下事情：</p>\n<ul>\n<li>指定一个端口，启动一个新的 http 或者 https 服务器</li>\n<li>停止在某个端口上运行的 http 或者 https 服务器</li>\n<li>\n<li>建立一个文件浏览的 url 地址，并把它挂到某个端口与域名上</li>\n<li>建立一个目录浏览的 url 地址，并把它挂到某个端口与域名上</li>\n<li>建立一个单文件下载的 url 地址，并把它挂到某个端口与域名上</li>\n<li>建立一个根目录(让所有找不到的文件，最后去这个根目录查找)，并把它挂到某个端口与域名上</li>\n<li>建立一个 HTTP GET 模式的 url ，然后绑定一段代码来处理这个 GET 请求（这段代码可以位于本地、也可以位于远程 http 服务器），并把它挂到某个端口与域名上</li>\n<li>建立一个上传的 url 地址，用来处理 html5 模式下的文件上传，然后绑定一段代码来处理这个 POST 请求（这段代码可以位于本地、也可以位于远程 http 服务器），并把它挂到某个端口与域名上</li>\n<li>建立一个 HTTP POST 模式的 url ，用来处理 ajax post 上来的数据，然后绑定一段代码来处理这个 POST 请求（这段代码可以位于本地、也可以位于远程 http 服务器），并把它挂到某个端口与域名上</li>\n<li>建立一个 HTTP POST 模式的 url ，用来处理 form post 上来的数据，然后绑定一段代码来处理这个 POST 请求（这段代码可以位于本地、也可以位于远程 http 服务器），并把它挂到某个端口与域名上</li>\n<li>\n<li>注入一段代码，直接在 opener_server 的 perl 环境里运行</li>\n<li>从远端的 http 服务器上取回一段代码，，直接在 opener_server 的 perl 环境里运行</li>\n<li>启动一个新 perl 进程，直接执行一段脚本内容。</li>\n<li>启动一个新 perl 进程，直接执行一段远端 http 服务器上的脚本内容。</li>\n<li>\n<li>指定一个管理端口，启动一个新的 <a href=\"http://opener_server.pl\" rel=\"nofollow\">opener_server.pl</a> 进程。</li>\n<li>退出当前的 <a href=\"http://opener_server.pl\" rel=\"nofollow\">opener_server.pl</a> 进程</li>\n<li>取回当前系统内部的日志</li>\n</ul>\n<h3>* 运行方法与运行参数</h3>\n<ol>\n<li>\n<p>第一次开始运行前，请先使用 util/<a href=\"http://create_pem.sh\" rel=\"nofollow\">create_pem.sh</a> 脚本随机生成一个 opener.pem 证书文件.<br>\n运行方式： bash <a href=\"http://create_pem.sh\" rel=\"nofollow\">create_pem.sh</a> opener<br>\nopener.pem 证书文件也可以自己申请：内容是先私有证书，再公共颁发的证书，再中间证书（如果有的话），再 CA 的根证书.<br>\n生成 opener.pem 后，就可以直接用 perl 来运行 <a href=\"http://opener_server.pl\" rel=\"nofollow\">opener_server.pl</a></p>\n</li>\n<li>\n<p>perl <a href=\"http://opener_server.pl\" rel=\"nofollow\">opener_server.pl</a> 10008 0<br>\n第一个参数： 10008(默认值)代表： <a href=\"http://opener_server.pl\" rel=\"nofollow\">opener_server.pl</a> 的管理端口为 10008 ，启动一个 Https 服务在 10008 端口并使用默认的 opener.pem 证书文件。<br>\n第二个参数： 0 代表：不自动运行配置文件中的代码； 1 （默认值）：代表自动运行配置文件中的代码。</p>\n</li>\n</ol>\n<p>项目地址： <a href=\"https://github.com/openerserver/openerserver_perl\" rel=\"nofollow\">https://github.com/openerserver/openerserver_perl</a></p>\n<p>微博： <a href=\"http://weibo.com/openerserver\" rel=\"nofollow\">http://weibo.com/openerserver</a></p>\n<p>微信公众号：<br>\n<img alt=\"img\" src=\"http://ww2.sinaimg.cn/orj480/006897bVjw1f9tqs614rqj309k09kjrc.jpg\"></p>\n</div></div>"], "reply": "2", "tittle": "opener_server.pl 一个开源的 HTTP 容器。OPener_Server 第二弹！！", "comment": ["有空测试一下。\r", "\r", "这个和 nph-proxy.pl 配合，放在国外空间可以用来翻了", "nph-proxy.pl 没有测试过，可能不能直接使用。\r", "\r", "使用 opener_server.pl 来编写 proxy 程序比较简单。\r", "\r", "我们会慢慢放出很多的实例。。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>编程需要投入很大激情和耐心，这个男孩在自我介绍中说他非常热爱软件开发。大家来看看他用 Swift 开发的 iOS app 吧。 <a href=\"https://www.livecoding.tv/kreskow/videos/evYaJ-tracksumo-time-manage-ios-app-git-config\" rel=\"nofollow\">https://www.livecoding.tv/kreskow/videos/evYaJ-tracksumo-time-manage-ios-app-git-config</a></p>\n<p>大家也来分享一下自己的“第一次”吧：还记得自己是从几岁开始学习编程的吗？第一次开发软件又是什么时候呢？欢迎交流哦。</p>\n</div></div>"], "reply": "39", "tittle": "分享你的“第一次”：第一次学习编程，第一个开发的软件", "comment": ["第一次洗碗，第一次扶老奶奶过马路", "第一个，当然是学生成绩管理系统", " 呃，不是，我们分组，三个人，有个人没商量一个人全做了，然后我看他代码缩进是 3 个空格。。。", "感觉像是小学作文题，“第一次 xxx ”", "初一开始第一次接触 VB 编程\r", "高中第一次写二次方程求解器，就是那种出的结果可以直接写在作业上的，等写完了，都已经再也不做那类型的数学题了。", "小学第一次学 basic logo 语言\r", "初中第一次改汇编给木马加壳\r", "大学第一次写黑框里的图书管理系统", "本人高中生，小学四五年级就开始写 basic 程序，和 5 楼很相似。。", "高仿 QQ 登录界面木马", "REPEAT 5 [ FD 100 RT 144 ] ... 我最早接触的程序语言 ... 二十几年不用基础语法到今天还记得 ...\r", "\r", "第一个做的软件是个通讯录 ... TurboC 写的 ... 现在还在我抽屉里的一块三寸盘上存着 ...", "学 C 的时候研究汉诺塔，写了个 64 层的", "第一次是 VB...在新华书店从书架上随便选了一本😂", "Android 上, 一个 sh 脚本管理 app ，支持冻结，安装，删除 app ，备份恢复 app 及其数据。", "第一次写 Windows 的批处理，查了好多资料。", "第一次是 WML ，手机刷 QQ 等级", "第一次接触编程？诺基亚 s6 的应用开发， Python ， hello 一下就没了。\r", "整理大学东西才发现的。", "VB, 24 点～", "文曲星上 写了个万花筒", "初中的时候用诺基亚 5320xm 写 python..", "小学 5 年级， LOGO 语言，写了很多画图的代码，还有一个计算游戏", "C 写的 时钟.exe 、整数进制转换.exe 、贪吃蛇.exe", "初中用易语言和 VB 写的一些小玩具。", "#include<stdio.h>\r", "\r", "int main(){\r", "    printf(\"Hello World!\");\r", "    return 0;\r", "}", "第一个程序应该是 C 语言写的画出一个多边形，源码还在。", "我第一次 18 岁，哦，不是问这个啊", "第一次学习的编程语言是 VB ，用 VB 开发的第一个程序是批量文件名修改。源码都不知道扔哪里去了，记得当时截图发到 QQ 空间上面装逼了，哈哈。", " 有没有这个源码啊，最近想写这个但是没什么思路", "初中要参加机器人灭火什么大赛，然后看 VB 居然看的津津有味……最优以成绩太好不需要加分为由不让我去了。", "讨论好激烈啊！：）以前大家编程只能默默地写码，现在开发程式，会比以前有利多了，起码可以找到更多资源。", "初三，易语言的模拟鼠标键盘点击，当时是打赛尔号要挖矿，用这东西计算好时间，自动挖矿。\r", "懂的人都知道，学习易语言容易接触一些小黑客类的技术，什么免杀，破解，外挂，渗透。都入过坑。\r", "我把大学 c 语言的 Hello World 当成我第一次学编程好了。", "小学，易语言", "初中， Pascal ……", "小学，小霸王上写了个 1+2+3+...+100", "#include<iostream>\r", "using namespace std;\r", "int main()\r", "{\r", "    cout << \"hello world!\" << endl;\r", "    return 0;\r", "}", "a byte of python 的通讯录", "初中第一次用易语言写了个刷 QQ 空间人气的，当时看了好久的教程。。", "各种 hello world", "小学五年级搜了一堆代码照葫芦画瓢写 Windows 内核驱动\r", "初中玩了三年游戏\r", "高中又想研究内核了，天天上课的时候想代码该怎么写，经常下午装病回家写代码\r", "然而到了大学转学 Swift+Java 了，不知道哪天学的那点内核的东西感兴趣了又捡起来", "第一次写程序的时候用的是易语言写了个运行时会循环播放 BGM 的计算器。", "还没有过第一次，俗称处男"]},
{"content": ["<div class=\"topic_content\">返回的 JSON 是这样的\r<br>{\r<br>, \r<br>\"code\": 12345, \r<br>....\r<br>}\r<br>手动拼 JSON 拼错了还嘴硬不承认，说别人都能用就你有问题。 trailing comma 可以忍，头一回看到 object 还带 leading comma 的，哪家的解析器能兼容？\r<br>\r<br>技术水平如何不说也罢，这工作态度呵呵</div>"], "reply": "13", "tittle": "腾讯广点通的开发，忍不住吐槽你们一下", "comment": ["echo '{, \"code\":233}' | jsondecode\r", "+ERR: Invalid Json content: Missing value at 1 [character 2 line 1]\r", "\r", "试了下自己写的，果然兼容不了😭", " 666 ，自己写的 JSON 解析器吗", "这个 JSON  是字符串拼接出来的吧", " 必须是手工拼的，还拼错了，没考虑到不返回业务数据时的情况", "看到有点尴尬", "后端手动拼？好奇后端用的什么语言？", "╭─mindcat@mindcat-linux-pc ~/workspace/tools/人民币大写  ‹ master*› \r", "╰─➤  echo '{, \"code\":233}' | js-beautify                                                                                             127 ↵\r", "{, \"code\": 233\r", "}%                                                                                                                                                                        ╭─mindcat@mindcat-linux-pc ~/workspace/tools/人民币大写  ‹ master*› \r", "╰─➤  python2\r", "Python 2.7.12 (default, Jun 28 2016, 08:31:05) \r", "[GCC 6.1.1 20160602] on linux2\r", "Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r", ">>> import simplejson as json\r", ">>> json.loads('{, \"code\":233}')\r", "Traceback (most recent call last):\r", "  File \"<stdin>\", line 1, in <module>\r", "  File \"/usr/lib/python2.7/site-packages/simplejson/__init__.py\", line 516, in loads\r", "    return _default_decoder.decode(s)\r", "  File \"/usr/lib/python2.7/site-packages/simplejson/decoder.py\", line 374, in decode\r", "    obj, end = self.raw_decode(s)\r", "  File \"/usr/lib/python2.7/site-packages/simplejson/decoder.py\", line 404, in raw_decode\r", "    return self.scan_once(s, idx=_w(s, idx).end())\r", "simplejson.scanner.JSONDecodeError: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)\r", ">>>", " 腾讯大部分都是 C 艹的，手动拼 json 在 C 艹圈子里实在是太常见了，理由最常见的就是性能啦：我不需要返回那么复杂的格式，就这样手动拼，快多少多少倍 blahblah", " 手动拼很常见，拼错了不常见，拼错了还不承认的，第一次见", "真的吗？楼主仔细说说？要是真的我去吐槽一下？", "周末撸了个允许多余逗号的 parser ，暂时先凑合着用了", "果断替换掉 /{\\n?\\s*,/  -> {", "楼主你好，我是腾讯广点通的，想了解下详细情况，方便加我 QQ 么？ 151020150 ，谢谢~"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>目前我使用的 Python 直接监听端口<br>\n然后使用 Nginx 反代部署的<br>\n进程管理采用是 supervisor</p>\n<p>大神们都是怎么部署 Python Web 项目的哇</p>\n</div></div>"], "reply": "36", "tittle": "求 Python WEB 项目正确的部署姿势", "comment": ["大神们给传传道吧！！", "就跟你的一样啊", "gunicorn + greentlet + nginx + supervisor 。基本就是这样的吧~", "flask+gunicorn+nginx+supervisor\r", "你缺的是 gunicorn", "nginx 反向代理到 gunicorn 起的进程， gunicorn 起进程的时候使用 gevent 模式，管理 gunicorn 进程用 supervisor\r", "可以看看这款工具： ", "木有类似 lnmp 的一键安装脚本不爽", "uwsgi 你值得拥有", "扔 docker ，配合 nginx-proxy  食用", "gunicorn", "完全一样", "\r", "\r", "大概就是这样的（", "发现 PHP 流行不是没有道理的， lnmp 一键脚本辣么简单", "nginx  反向代理到 gunicorn 这个 wsgi server", "因为这个，我转投 golang ……", " 如果真的因为这个，我觉得你也太没毅力了", " 部署问题是原因之一。", " 为什么我这么回答面试官，面试官总是一脸不满意(╥﹏╥)", " \r", "我只是自己玩玩，稳定性不错了，但是谁知道他们公司是不是觉得有更成熟的方案", "gunicorn+nginx", " 我也是这样想知道的", " Go 的部署，我觉得也面临和 Python 一样的，监听端口，然后反代", "gunicorn 用 meinheld 的 worker 比 greenlet 的还快", "gunicorn + gevent + docker ，前端用 nginx 单独部署", "发现 PHP 流行不是没有道理的， lnmp 一键脚本辣么简单", " 同感  uwsgi 用的爽", " 也许 go 可以不反代？", " 有 Nginx 反代的话， gunicorn 应该不用加 gevent\r", "长连接由 Nginx 来处理", "gunicorn 或者 uwsgi", "Nginx + uWSGI \r", "\r", "就这两个就可以 ，走 socket 的。", "screen? (手动滑稽", "nginx+uwsgi+python", "nginx uwsgi supervisor", "看来大家基本上都是这样的部署，有没有更 NB 的娃", "刚刚 Get 到一个办法，简单粗暴\r", "用 Ngrok 把本地端口暴露到公网，直接访问，一行命令搞定，适合短期使用\r", "详见： "]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>[ Be a Giver ] 宣传视频中，对各大公司负责面试的人进行一次采访，其中拿出三张匿名简历让其进行评估。\n否定加否定。</p>\n<ul>\n<li>第一个是学历很漂亮但是没有什么经验。</li>\n<li>第二个是一个面包师，还做过洗车工，所以更是否定。</li>\n<li>第三个有工作频繁跳槽的，也有要求的工资很高的。</li>\n</ul>\n<p>所有的高管没有一个人认同这三份简历中代表的人，然后揭开隐藏起来的名字。</p>\n<ul>\n<li>第一个是 32 岁时导李安的简历，</li>\n<li>第二个是面包大师吴宝春，</li>\n<li>第三个分别是他们的亲朋好友或自己的女儿。</li>\n</ul>\n<p>沉默加沉默，各位高管都开始纷纷检讨自己，因为应该因为一纸简历就否定一个人。</p>\n<p>人生的未来虽然有无限种可能，一张纸肯定不会体现一个人的一切，狭隘的因为学历和经验就否定一个人显然是不对的。\n但是这一切不是你可以不努力的理由，让人看到你的态度，一份简历还是可以感受到的。</p>\n<p>可以没有漂亮的学历，毕竟每个人接受教育资源是不一样的，没有公平可言，但是简历可以体现出来。\nHR 应该注意到这个人的出生地，考试时间，家庭情况进行评估，如果是一个孤儿，虽然是一个二本学历，我想他真的很努力的在学习了，毕竟他没有办法去补课。</p>\n<p>如果学历不好，可是有非常优秀的项目，这个没有什么不可能的，只要有这份心都可以搬到，就看你想不想做。</p>\n<p>一个好的 HR 要对一个求职者进行评估，只看学历和经验，这样的 HR 真的在大街拉一个就可以干活了。\n负责技术一面已经有一些时间，也有自己的体悟，开始我只是试水，几乎一面都通过了。\n后来我开始委婉的拒绝一些面试者。\n说实话，来应聘的人质量都不是很高，找到适合的人跟大浪淘沙没有任何区别。</p>\n<p>没有漂亮的学历，没有任何自己的项目，对新技术毫无兴趣，宁可在舒适区混吃等死也不迈出。\n前两样都没有，表现出对技术的热情也好，可是都没有。</p>\n<p>说到现在，我很赞同[Be a Giver]的理念，应该给予新人机会，但是也希望新人有值得投入的价值。\n这个事情不是单方面努力就可以搬到的，优秀的人依旧是抢手货，没有人愿意在一堆烂泥里挑出珍珠，有那功夫我为何不去撬牡蛎。</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "[Be a Giver] 当大家进行技术一面的时候，想的都是什么？", "comment": []},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"http://www.hi-pda.com/forum/viewthread.php?tid=1645202\" rel=\"nofollow\">http://www.hi-pda.com/forum/viewthread.php?tid=1645202</a></div>"], "reply": "目前尚无回", "tittle": "改造文石 96 或 MAX 为显示器的软件", "comment": []},
{"content": ["<div class=\"topic_content\">​先来看看邮件的信息\r<br>\r<br><img src=\"http://ww4.sinaimg.cn/large/493d4751gw1f9zi6xcx8uj20mn03lmyb.jpg\" class=\"embedded_image\" border=\"0\"> \r<br>\r<br>乍一看，的确是发送自 Dell(戴尔) 的邮件，可邮件标题感觉不太对劲，再看看邮件的内容：\r<br>\r<br><img src=\"http://ww3.sinaimg.cn/large/493d4751gw1f9ziazt0psj20mn0imjvf.jpg\" class=\"embedded_image\" border=\"0\"> \r<br>\r<br>正文里有赌博网站的网址 ，能看出来是发送自赌博网站的垃圾邮件，但如果不仔细看的话会当成是 Dell 的推广邮件。为了验证垃圾邮件的实际出处，查看一下邮件的原始编码，看能否找到什么关键信息。\r<br>\r<br><img src=\"http://ww4.sinaimg.cn/large/493d4751gw1f9zig94w12j20ff01k74s.jpg\" class=\"embedded_image\" border=\"0\"> \r<br>\r<br>这段编码提供了邮件是来自哪里，发送给谁，其中提到了一个 IP 地址： 143.166.224.190 ，看到这里想当然的认为这就是发送垃圾邮件的服务器了，看看这个 IP 地址的具体信息吧。\r<br>\r<br><img src=\"http://ww2.sinaimg.cn/large/493d4751gw1f9zikyrz4aj20e50dtdiu.jpg\" class=\"embedded_image\" border=\"0\"> \r<br>\r<br>很奇怪对不住，这个 IP 地址居然是来自 Dell 公司的，难道这封垃圾邮件真的是从 Dell 公司发出的？</div>"], "reply": "2", "tittle": "收到一封来自 Dell 的垃圾邮件", "comment": ["看来你是对最近的日历、 iCloud 账户、 PayPal 垃圾信息没多少了解呀", "跟 gmail 辅助邮箱那个一个套路"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>软件工程师在职业生涯中常陷入这样一种境遇：总是进行软件的维护，而不是开发新的产品。</p>\n<p>这篇文章概述了为什么大公司通常给工程师的薪水很低，甚至提供无报酬的工作；为那些希望摆脱商品型开发者角色的工程师提供了一些建议。</p>\n<p><strong>你是如何变成一件商品的？</strong></p>\n<p>在工业革命期间，人们开始从事流水线工作。</p>\n<p>在流水线上，工人们的角色有限。流水线作为一种富有弹性、稳定的生产工具，每一位工人的角色定位都非常明确，可以很容易地被取代，就像商品一样。</p>\n<p>对于工人而言，成为一件商品，自然是一种不愉快的体验。但是那时候没有好的替代品，不能简单地放弃流水线，自己干。</p>\n<p><img alt=\"file\" src=\"https://programmerinnfile.b0.upaiyun.com/community/51097/20160820/fv0On1MD0S.png\"></p>\n<p>工人的生活是痛苦的，但是整个社会在快速地进步中，因为工业家们能够利用商品化的工人实现更多可预见的产出。</p>\n<p>这样一种生产方式一直持续到信息时代。</p>\n<p><img alt=\"file\" src=\"https://programmerinnfile.b0.upaiyun.com/community/51097/20160820/7sMVBKa1Gs.png\">\n早期的计算机系统操作起来很困难。个人是肯定不行的。完成一些重要的任务需要一个团队密切合作才能成功。</p>\n<p>现在，计算机系统操作起来就非常容易。单个工程师就能开发一些生活方式的业务。一个小小的团队就可以开发像 WhatsApp 这样的产品。不再单单是那些管理流水线的工业家，每一个人的影响力变得更大。</p>\n<p>大多数软件工程师在职业生涯中就像流水线上的商品化工人一样，做一些自己不喜欢但是大公司需要的任务。对于工程师而言，如果想要摆脱薪酬微薄的机器生活，那就要建立自己的流水线。</p>\n<p><strong>建立自己的流水线</strong></p>\n<p>20 年前，一家大型软件企业所使用的工具要比你能买到的任何东西复杂的多很多。</p>\n<p>亚马逊网络服务将服务器配置和管理的费用从一台机器 50,000 美元变为完全免费，这极佳地促生了像 Dropbox 、 Trello 和 Slack 这样一系列优质免费的软件。个人可以组合利用各种廉价的工具，效率得到了极大地提高。</p>\n<p><img alt=\"file\" src=\"https://programmerinnfile.b0.upaiyun.com/community/51097/20160820/vfNR5mNAwq.png\"></p>\n<p>SaaS 工具之间相互结合，可以组建成更为先进高效的工具。云计算推动了公共软件的巨大进步，不管是个人还是小团队都可以开发技术堆栈，而且有时候比大公司的还要高效。</p>\n<p>大公司要紧密地与自己的工具耦合，以至于无法有效地利用这种快速复合软件的高质优势。抛开大公司，你自己一个人可以很自由地组合配对各种工具，只要你觉得合适就成。</p>\n<p>软件工具作为生产工具，就像 20 世纪工业家的流水线一样，其连接方式如今变得非常分散。</p>\n<p>事实上，整个经济都已经变得分散化。不仅仅是生产方式，包括分配、支付以及获得领域专长等每一个方面都变得分散，以至于大型集权企业的优势，现在个人和小团队也可以获得。</p>\n<p>在过去，一个软件工程师团队需要一个办公场所一起办公，而现在完全可以不用这样。 Docker 、 TopTal 和 Hashicorp 利用一些协作工具都已经开始远程办公了。</p>\n<p>远程办公的企业对透明度和交流要求高一些，远程的员工必须记录已完成的工作作为审查——这对于完成工作的员工而言并不难。</p>\n<p>在大型公司，工程师因为要和项目经理以及业务拓展人员接触交流，工作效率大大降低。</p>\n<p>小公司的好处就是工程师必须要对全局有所了解，包括业务、设计、销售以及产品开发等。 Fred George 的 Programmer Anarchy 理论将此发挥到了极致。</p>\n<p><img alt=\"file\" src=\"https://programmerinnfile.b0.upaiyun.com/community/51097/20160820/U4P8JPzGIM.png\"></p>\n<p>“<em>每天一开始的日常例会中，程序员就选定自己的工作。</em>”</p>\n<p>“<em>没有项目经理、迭代经理、测试人员...所有在职业环境中软件开发管理的条条框框统统都没有。这一切是建立在形式和规则制约了创造力和生产效率的基础上。</em>”</p>\n<p>“<em>没有经理迫使程序员工作，程序员以自我管理的“混乱”形式对每个项目的成功完全负责。</em>”</p>\n<br>\nProgrammer Anarchy 的成功表明工程师具有更大的作用，工程师的角色可以将其它的各个角色纳入其中。\n<p>如今软件工具更为好用，软件工程师的行为得到了更为广泛的理解， Programmer Anarchy 的理论也变得适用。工程师不必花太多的时间写样板文件代码，剩下的时间就可以用来思考如何将产品做得更好，产出更大的商业价值。</p>\n<p>单个工程师有着很大的影响力，远比以前要大很多。一个小团队，其影响力可以说是巨大的。</p>\n<p><strong>如何建立自己的流水线</strong></p>\n<p>如果你一个人或者和一个团队一起开办一家公司，最为经典的建议就是“制造一些人们需要的东西”或者“活在未来，开发一些有趣的东西”。</p>\n<p>在开发产品的头脑风暴阶段，这是个很好的建议。但是很多工程师从来没有画过产品原型，整个职业生涯都是在做维护，根本想象不出该如何将一个想法转变为一件有用的产品。</p>\n<p>如果你的职业生涯大部分是在大公司度过的，那么你可能因为依赖内部模具和工作流程而变“残废”。如果你想从头到尾开发一款产品，你必须投入一些时间到堆栈的每个领域才行。</p>\n<p>你要学习画原型，从零开始开发一个新的项目，相比技术性的挑战，这更是一次情感和心理的旅行。</p>\n<p>我们会记住开发软件中的所有快乐，不管是开发一款简单的游戏还是一个计算机类 app 。为什么我们以前曾停止开发新的产品？因为我们在企业的软件工作让软件维护变成了日常的思想。</p>\n<p>如果你已经辞掉了企业的工作，你可以话一两个月的时间技术再造。你可能也存了一些钱，参加一次编程培训也是值得的。</p>\n<p><img alt=\"file\" src=\"https://programmerinnfile.b0.upaiyun.com/community/51097/20160820/EDaON0hIyR.png\"></p>\n<p>哪怕你有计算机科学学位，参加编程培训也完全可以的，大学里学习理论，培训教授操作，而且在培训中还可以学习到独立开发项目的技巧和必要流程。</p>\n<p>不管是参加培训还是自己学习，技术再造的过程会让你摆脱过去软件维护工程师的悲惨生活，重新发现创新的乐趣，甚至或许会第一眼就深爱上编程。</p>\n<p>这意味要离开那些厚重的工业化语言，比如 Java 和 C#，深入到一些能够快速制作原型的工具语言中，比如 React 和 NodeJS ，或者 Ruby 。</p>\n<p>作为工程师，如果喜欢数据科学和机器学习，可以花时间学习下 TensorFlow 或者 Spark ——网上有数不尽的教程。</p>\n<p>经过足够多的练习后，开发自己的软件变得容易很多，下面的问题就是开发什么软件了。</p>\n<p><strong>开发什么软件</strong></p>\n<p>在获得了新的技能，学会了画原型之后，构思新的产品想法就变得更为简单了，你不需要有任何自我怀疑，担心不能带这款产品上市。</p>\n<p>关于头脑风暴，人们已经写过很多了。 Paul Graham 的文章和以像《精实创业》（ The Lean Startup ）这样的书都是很有用的指导，帮助你构思出一个能赚钱的想法。</p>\n<p><img alt=\"file\" src=\"https://programmerinnfile.b0.upaiyun.com/community/51097/20160820/G1pS7XJizO.png\"></p>\n<p>在大公司时间久了，构思新鲜想法的能力就会变弱。作为一名程序员，要试图构思出新想法的话，很容易变得沮丧，想想周围似乎什么都已经创造出来了。</p>\n<p>克服这种精神猥琐的策略之一就是去看看外边巨大的市场，太大了，就算全世界的程序员同时去捕捉这么大的市场，也很难做到。</p>\n<p><strong>机器学习+X</strong></p>\n<p>如果你想开发一项软件业务，但是不知道从哪开始的话，“机器学习+X ”是最为保险的思路之一。就像未来主义者 Kevin Kelly 所说的那样，“很容易就能预知接下来 10,000 创业公司的商业计划： X+AI ”。</p>\n<p>每一家企业都需要机器学习应用软件，就像在 90 年代每一家企业都需要网站一样。同时，大多数开发者对机器学习有所担心，因为机器学习听起来挺吓人的。</p>\n<p>当开发者尝试了机器学习工具之后，他们会发现 scikit-learn 就像 Ruby on Rails 网页开发一样舒服。</p>\n<p>即使你是开发一款没人需要的机器学习产品，为了开发这款产品，你也要学习机器学习。如果你第一款产品失败了，在你下一款机器学习产品中也有可能用到你这次的代码。</p>\n<p><strong>硬件</strong></p>\n<p>硬件是另一个充满机会的领域。像机器学习一样，硬件听起来比硬还要难听。</p>\n<p>物联网对于硬件开发新人而言是个好地方。各大主要的云提供商和芯片厂商都在物联网领域投入了大量资金。巨头企业相互竞争，提供了最好的物联网平台，开发者个体可以坐享竞争的福利。</p>\n<p>与开发者相比，其它一切都是便宜的。想通用、亚马逊和微软这样的大企业正努力获取市场份额，他们非常愿意为笼络开发者支付高额的薪资。</p>\n<p>物联网用户多为工厂、农场、车间和其它的工业企业，他们有着巨额的资金，正变得更懂科技，更愿意做一些新型硬件的试验。</p>\n<p>不管你开发什么产品，每一家企业的软件工工程师都应该牢记这样一个趋势：供应方的云计算和需求方的小型设备（比如手机）是让你受益的最大经济力量。</p>\n<p>物联网需要一些新型独特的应用，云计算意味着这些应用可以很便宜地提供给用户，用户也非常愿意为此付费。</p>\n<p>这一趋势将在一定程度上影响着你要从事的各个行业。</p>\n<p>在发展中国家，人们对独特的智能手机 app 的需求要比发达国家的更为强烈，因为发展中国家的用户常常没有笔记本或台式电脑。唯一的电脑就是智能手机。</p>\n<p>现在，许多发展中国家连通性很差，这使得他们的需求与发达国家的大为不同。这些地方的技术人才远远没到饱和状态，所以对于那些希望研究当地市场，了解客户痛点的人们而言，这些地方是非常成熟的场所。</p>\n<p>有很多其它的新型的领域——零工经济、 VR 、 Docker 等等。在深入研究了其中的某一个领域之后，就能够清晰地知晓在接下来几年里会有多大的科技增长量，有多少人置身于这一领域。</p>\n<p>最难的地方在于要知道你应该开发一个东西。一旦你内心意识到这一事实，获得了原型设计的必要技能，开发的过程就成为了一次有趣的探索，哪怕是你一路都失败了。</p>\n<p><strong><em>开发一款新的产品，最难的部分在于做“决定”，决定要开发一款新产品，坚定不移地走下去！</em></strong></p>\n<p>总之，作为一名工程师，如果想要摆脱商品化的工作，建立自己的流水线是一个不错的选择：学习一种新的技能，选定一个领域，利用如今发达的科技，开发一个自己的产品，在一片时机成熟的地域实践下去。</p>\n<p>翻译首发 我的知乎专栏 <a href=\"https://zhuanlan.zhihu.com/p/22076045\" rel=\"nofollow\">https://zhuanlan.zhihu.com/p/22076045</a></p>\n<p>原文来源 <a href=\"http://softwareengineeringdaily.com/2016/08/07/you-are-not-a-commodity/\" rel=\"nofollow\">http://softwareengineeringdaily.com/2016/08/07/you-are-not-a-commodity/</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "软件工程师 | 如何摆脱商品化工作，打造自己的流水线？", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>楼主正在自己开发一个博客，请问有什么好用的<code>markdown</code>富文本编辑器推荐吗？前端用的是 vue 的全家桶。</p>\n</div></div>"], "reply": "22", "tittle": "Markdown 富文本编辑器推荐？", "comment": ["试试 Editor.md", "stackedit.io 试试呢", " +10086 我也在用这个。", "MacDown 可以试试", "强烈推荐 SimpleMDE ，这个集成到 vue 的项目非常的简单好用。", "可以看看我的项目的用法\r", "\r", " 谢谢", "试试 Typora ，也不错，编写和预览都是同时的", "typora", "Mweb", "Typora 相当不错 而且还有 Linux 的客户端 良心软件", "总有不看楼主说的什么就瞎回答的", "Typora", " **非常感谢～**", " 非常感谢～", "mac 下推荐 vscode", " 哈哈", " 楼主问的用于 web 端的富文本编辑器，您这客户端都来了。", " 楼主正在自己开发一个博客，请问有什么好用的 markdown 富文本编辑器推荐吗？", " 客户端 vscode ，或者直接 github", "楼主后台用的 node+mongodb 吗", " Django"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>张小龙的朋友圈照片流出，有人发现图片中的小程序居然摆在桌面上，有图有真相：</p>\n<p><a href=\"https://www.wxappr.com/post/91\" rel=\"nofollow\">https://www.wxappr.com/post/91</a></p>\n<p>那么问题来了： iOS 允许微信这样搞吗？</p>\n</div></div>"], "reply": "33", "tittle": "微信小程序的最终入口疑似曝光，竟然可以放桌面？", "comment": ["其实就一个网页吧。 iOS 本来就允许网页快捷方式", "真的很丑啊，和微信逼格严重不符吧。", "张小龙的手机屏还是裂开的……", " 然而 iOS 并不允许微信在桌面放网页快捷方式", "随意摆弄用户环境不是安卓的特性吗。", " 应该可以的吧， QQ 中游戏模块可以在桌面放了快速进入游戏的快捷方式，微信应该也是可以的吧", " 我没有在 iOS 的微信里找到把联系放到桌面的功能， Android 上有。", "安卓上很早联系人就可以放桌面了", "  ios 应用内网页不行的。搞小程序怕是微信过不了审的。", "很遗憾的情况是，一般 APP 已经没有权限去创建桌面快捷方式了，哈哈哈，就是因为之前一群滥用的，比如糗事百科，桌面丢一个快捷方式 你点进去是一个安装程序 安装其他程序", "iOS 上可以这么做吧：\r", "\r", "微信跳出到 Safari\r", "引导用户在 Safari 操作添加主屏幕快捷方式\r", "用户从主屏幕进入后，网页自动跳 wx://", " 干嘛要网页链接，很明显是 URL scheme 然后用他们的小应用的 appid 识别, 小程序本身也不在 app 包内啊", "Chrome 在桌面创建快捷方式没见过么？\r", "同理 ios 的那个 Safari", " steam 快捷方式么。问题是这种能过审么？", " 本来现在大多数 app 都有 url scheme 啊，比如支付你调用支付宝 支付宝又跳转回来， 比如微博的 sso 登录\r", "\r", "\r", "\r", "\r", "\r", "这个知乎回答太片面 但可以一窥\r", "\r", "url scheme 后面的参数都可以传入 app 的\r", "application(_:didFinishLaunchingWithOptions:)\r", " 但没有桌面快捷方式 /应用程序商店 /浏览器扩展吧。", " 这些 schemes 是拿来应用间互动的吧。", "当然现在 apple 对 url scheme 并没有像 groupid merchantid 设置唯一占有，所以可能会被仿造，总有收紧限制的一天， 但因为可以传参， wx 他自己的 url scheme 里还是可以区分程序的 id 的\r", "假定一个小程序 id 为 xiaochengxu   假设他们自己定义的语法     weixin://applet/xiaochengxu 这么来启动特定的小程序页面", " safari 的添加到桌面的功能会被利用到，但最后指向的页面是 url scheme 而不是 http/https 而已 http https 也是 url scheme 其中的 2 种而已", " 并不解决微信小程序实质是一个应用商店的问题。如果走了 safari 的添加到桌面那用户体验完了。", "它本来就是， 我也没解释这个啊.  你纠结的究竟是什么-。-", "苹果对国产大 Apps 一向很纵容吧（微信支付宝之类的），感觉功能做得多杂都能过审核的。另外，百度贴吧就有引导打开 Safari 添加快捷方式到桌面的。", " 。。问题我纠结的是 2 个阿，不用 safari 如何添加到桌面。这个性质的 app 审核过不过。。。。 =。=", " 为什么用还，难道他以前就裂了吗", "安卓大概知道怎么实现的了,创建一个 url 放到主屏幕上,用微信打开.读取 url 中的参数打开对应的小程序.\r", "国内没有 play 平台他们可以随便作", "现在的百度贴吧就可以", "iOS 的用户可以去看看百度贴吧客户端，可以把一个吧作为入口放在桌面。", " 贴吧就是这么干..", "不是什么新东西， Android 微信的公众号就是可以放在桌面的。", " 这么神奇？他们怎么做的？", " iOS 本来就是允许一些网站做成 HTML5 应用，在 safari 上点放到桌面，以后点开的时候会是 app 的体验。百度贴吧就是这么做的，只不过它点开是空白页面，唤起百度贴吧。", " 这个要在 safari 里手动点放到桌面吧？但百度贴吧那个是全自动的么？还是也需要手动的？", " 需要在贴吧里面点放到桌面，看样子是可以自动做到的吧（但是没有这个需求）。你可以去试一下。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>请教一个问题，有些网站是前段限制某些输入的，而且这种限制是未作后端验证的。\n<a href=\"https://e.189.cn/register/email/step1.do?\" rel=\"nofollow\">https://e.189.cn/register/email/step1.do?</a>\n例如上面这个网址，用 <a href=\"http://live.com\" rel=\"nofollow\">live.com</a> 的邮箱无法注册。\n我尝试了用 fiddler 来构造请求、 Chrome 修改 JS 内容，不得要领，在这里请教一下大家。\n如果能非常具体的讲解一下步骤那就是最好的了。非常感谢。</p>\n<p>我用 fiddler 构造请求的时候，它这个好像是加密了的，所以我没法找到对应的字段。\n我用 Chrome 修改 JS 不知道怎么修改，直接修改好像修改不了。</p>\n<p>页面源码有这么一段：\n//特殊邮箱处理\nvar rNotSupportEmail=/.(@msn.)|(@live.)|(@vista.)|(@hotmail.)|(@outlook.)|(@yahoo.)|(@gmail.)|(@corp.21cn.)/;\nif(rNotSupportEmail.test(itemVal)){\nreturn commit(false, \"暂不支持此类邮箱注册\");\n};\nif (itemVal.indexOf(\"@189.cn\") != -1) {\nreturn commit(false, \"189 邮箱帐号可<a href=\"http://e.189.cn/index.do\" rel=\"nofollow\">直接登录</a>\");\n}\nvar rMail21cn=/.<em>@(.</em>.)*21cn.((com)|(net))$/;\nif (rMail21cn.test(itemVal)) {\nreturn commit(false, \"21cn 邮箱帐号可<a href=\"http://e.189.cn/index.do\" rel=\"nofollow\">直接登录</a>\");\n// return commit(false, \"暂不支持 21CN 邮箱注册\");\n}</p>\n</div></div>"], "reply": "9", "tittle": "如何绕过前端限制", "comment": ["document.getElementById('setRegInfoMail').submit()\r", "\r", "然而人家后端也做了这个校验，我输入一个 ", " 能提交成功， ", " 就 GG", "额，所以这个是做了后端限制了对吗？ 无法用 ", " 邮箱进行注册了", "后台有校验的 搞个 @", " 的提交会重定向到原来页面 这种前端校验只是为了用户体验 后端肯定也会做校验的", "你可以先输入正确的信息，然后用 Chrome Dev Tools 看看有什么东西都发送过去了，再构建对应的请求。\r", "\r", "有个比较好用的 Chrome 插件叫 Postman ，安装了 Postman Interceptor 后还能直接发送 cookies 。\r", "\r", "但楼上也有人说了，数据检验，一般不能只由前端做的，后端也会有的，除非后端开发不上心。", "对于 ", " Chrome Dev Tools 里的 Network 就知道怎么回事了。\r", "\r", "前端先判断邮箱符不符合要求，符合要求后，再向 ", " 发送请求，判断符不符合后端的请求。", "  那这种情况下，能否构建修改响应，先欺骗浏览器，进入到下一步（页面）当中去？", "如果只是为了伪造或修改一个请求，改 js 性价比太低，可以用 burp 拦截并修改请求\r", "构建响应欺骗浏览器理论上可以，不过下一步的那个页面在请求的时候可能会检验 session 看上一步是否已经通过，如果没检验的话或许可以进入", "人家后端有验证 \r", "别试了\r", "\r", "复制页面 JS\r", "<script>\r", "//linech 2014-6-20\r", "seajs.use\r", "一直到最后 然后删除中间规则 放到 console 里执行就绕过 js 验证的\r", "用户名可用也通过", " 进入下一步页面也没有意义啊 你写个符合格式的就可以看到页面长啥样 而你伪造的话；下一步的下一步还是过不去啊，后台校验后又不会存你的数据。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>写代码用， 2K 的好还是 4K ？戴尔的还是 AOC？</p>\n</div></div>"], "reply": "17", "tittle": "RMBP 13 inch 价格在 2000 以内的外接显示器有什么好推荐的吗？", "comment": ["2000 以内如果是低分辨率普遍啥都能上了……外接 RMBP ，主要还是看几点： DP 口（避免接 HDMI 的发热问题）、是否可扩展 USB （多一个是一个）\r", "- 如果离得远点可以考虑上个 1080P 的三星 27 寸大曲面 C27F591FD ；推荐原因：曲屏、大；分辨率低\r", "- 如果想要个 2K 的皮实牌子 DELL 不修图敲代码的普通大小就果断 P2416D ；推荐原因： 2K 、可旋转、接口齐全；不够大\r", "- 如果相信运气不怕品控问题就选 AOC 大屏 4K 的 U2879VF ；推荐原因： 4K 、大大大；品控有待商榷、没扩展 USB\r", "\r", "其实我挺怀疑 13 寸集成显卡 RMBP 带高分辨率的能力的，最好有老司机可以介绍一下外接感受后再入手。\r", "我自己是 2015 的 13 寸中配 RMBP ，带的是 DELL 的 U2414h ，用 DP 外接，感觉良好。\r", "\r", "建议仅供参考。", "2000 以内的 4K 感觉就算了吧，太感人了……\r", "但是 1080P 也很感人，大果粒，中文简直没法看，尤其是各种识别成外接电视机，整个人都不好了（识别成电视机，可以关掉 SIP 用脚本打补丁，打好之后再开）\r", "13 寸的核显用 DP 口能 4K60Hz 的， HDMI 的口只能 30Hz", "我买的是 P2416D ，分辨率是 2K 的，买之前也怕分辨率不够，用了之后觉得之前的担心完全是多余的。\r", "\r", "PS ：但是在用联基 mini dp 转 dp 线接我 15 年中配 macbook ，出现休眠后无法唤醒的情况。", "带着 MacBook 去商场试，完了再去🐶东买。", "我是用的 u2515 3k 的屏幕，配上 HiDPI 之后很爽", "我当时买的优派的，也不错，挺好的。 4K 2599 不知道现在多少钱了。去年 9 月买的。", "Apple Cinema Display with display port. 组装版。\r", "2000 出头。淘宝搜", " 2515 哪来的什么 3k", " 系统升级到 10.12 了么?我升级后也是,外接显示器后休眠很容易睡死,不死屏幕也会闪很多次然后才正常", "DELL  U2414h , 年初买的，用着还不错", "入手 2515 吧，双 11 刚入的~", " x3", "推荐 4k\r", "之前 VX2475smhl-4K 这款到过 2k 如果能等可以等等看", "我也是 P2416D ，接口为 VGA DP HDMI 。 升降旋转 2K ，已经使用一年多，表现满意。", "之前用明基的什么蓝光不伤眼，现在用 LG34 的曲面屏，这个很爽", " 现在还是 10.11.6 。", " 是 2k ！！！！脑抽了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>怎么快速找到那些 WRT 开源了无线驱动呢？刷 op ，没有开源无线驱动的，无线信号总是差那么些意思。 或者说，刷 op ， dd ， tomato ， merlin 这些固件，哪些 WRT 是比较好的选择呢？</p>\n</div></div>", "<div class=\"topic_content\">不好意思 WRT 指的是无线路由器，通称</div>"], "reply": "15", "tittle": "怎么快速找到那些 WRT 开源了无线驱动呢？手头的 WRT 刷 op ，没有开源无线驱动的，无线信号总是差那么些意思", "comment": ["这个语文水平简直堪忧，根本就没看懂所谓 WRT 表达的是类似 OpenWRT 这样的固件，还是 Linksys 的那票无线路由", " 不好意思 WRT 指的是无线路由器，通称", "除了无线驱动，还有很多因素会影响无线信号。的你问法就不是很明确。", "有没有无线要看开源的 802.11.x 驱动是否支持你的硬件。而不是你去找驱动。不排除个别硬件会有单独的开源驱动。但是多数厂家不会开源。想驱动的话只能是 op 等自身的通用驱动或者是开发者自己移植闭源驱动。", " 我的问题是想找刷 op 后无线性能不弱于原厂固件的路由器", " 那只能说，基本都会弱\r", "问题不是无线驱动，是 nat\r", "openwrt 基本不支持任何硬件 nat\r", "而一般路由器的 soc ，软件 nat 性能很差", " 不支持硬件 NAT ，是因为芯片官方没有开源驱动的缘故吧，然后 op 又不使用闭源驱动？", " 不是说不给闭源么……我听说", "那还是用 merlin 吧，它用的是闭源驱动", "openwrt 也有用闭源驱动的版本  只不过官方只能开源  玩家可以自行集成闭源驱动  就像曾经集成过 bcm5357/8 的闭源 wifi 驱动等等   MTK 闭源驱动包含 HWnat   还有 marvell 的闭源驱动等等等等", " 最方便能满足你要求的自然是 Linksys 了，官方合作的 OpenWRT 哟，随便你折腾", " 你应该记错了吧，我记得集成的是 6 系列", " 闭源驱动  6 系列以及 43xx 那是逆向工程得到的驱动  我这是博通官方闭源驱动", " 我之前看了下网上流传的版本，都是官方的 binary ，但是正因为如此所以要求 K26 而不能用 K3+", " 闭源驱动一般只有出货量大的企业付费得到。网上的闭源驱动有这种情况： 1 、个别厂家开源自己的 OS 时无意泄露了源码（华硕就这种情况）  2 、高手逆向工程   3 、同平台版本间二进制文件移植  4 、有个别无知作死的合作方故意展示就流出来了  5 、不排除个别厂家会提供给开发者。\r", "\r", "反正个人很少能得到闭源的驱动，无论是设计厂家还是生产厂家几乎都高度保密的。就是怕你自己搞了损失他们的利益。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h2>下面我们开始编写一个 Hello Worlds ,你将看到 opener_server 带来的是多么简单的编程！</h2>\n<h3>在 OPener_Server 上编写一个 Hello Worlds 有很多方式，我们用最简单的网页模式，写一段 javascript 代码，来注入我们的 Hello Worlds</h3>\n<p>使用 javascript 与 jquery ：</p>\n<pre><code>\nvar url=\"https://test1.openerserver.com:10008/op\";  // 安装了 opener_server 的服务器地址： test1.openerserver.com \nvar start_http_server={'action':'new_http_server','ip':'','port':'1008'}; // 开启一个新的 http 服务器，监听在端口 1008 上\nvar reg_url={'action':'reg_url','type':'http_get','url':'/helloworld','host':'*:1008','go':hello_fun}; \n//注册一个 url 地址 /helloworld ，绑定到 1008 端口上，设定这个 url 处理模式为 http get 模式，最后处理这个 url 的代码放到 hello_fun\n\nvar hello_fun=`my ($r,$key)=@_; \n$n-&gt;{send_normal_resp}-&gt;($r,$key,'Hello Worlds'); \n\n`;\n//### 接收传入参数，$r 包含所有这个 http 请求相关信息，$key 包含该 http 请求的唯一 id\n//### 发送返回，返回内容是 html ，加入一个 hello world 字符串。\n\nvar opener_flag='opener'; // 设定 http header 中 opener_flag 字段，相当于访问该 opener_server 的密码\nurl_post_data(url,JSON.stringify(start_http_server)); // ajax post 到 opener_server 服务器\nurl_post_data(url,JSON.stringify(reg_url));\t\t\t  // ajax post 到 opener_server 服务器\nfunction url_post_data(go,data){\n\t$.ajax({\n\t\t  url: go,\n\t\t  cache: false,\n\t\t  headers: {\n\t\t\t  opener_flag:opener_flag\n\t\t  },\n\t\t  data: data,\n\t\t  type: 'POST',\n\t\t  dataType: 'json',\n\t\t  success: function(data){\n\t\t\tif (data.result=='ok')\n\t\t\t{\t\n        console.log(data);\t\t\n\t\t\t}else{\n\t\t\t\tconsole.log('error');\n\t\t\t}\n\t\t  },\n\t\t  error: function(dd,mm){\n\t\t\tconsole.log('error:');\n\t\t\tconsole.log(dd);\n\t\t\tconsole.log(mm);\n\t\t\t}\n\t});\n}\n</code></pre>\n<p>在一个含有 jquery 代码的 html 页面上，执行上面的代码就可以了。<br>\n然后访问 <a href=\"http://test1.openervpn.com:1008/helloworld\" rel=\"nofollow\">http://test1.openervpn.com:1008/helloworld</a> 就可以看到结果。</p>\n<p>我们已经执行了上面的代码，那么下面你可以更改上面这段代码，来实现你需要的 Hello Worlds 例如：更改要注册的 url 地址...</p>\n</div></div>"], "reply": "2", "tittle": "第一个 Hello Worlds ，打开 opener_server http 容器的大门。OPener_Server 第 3 弹", "comment": ["请大家测试的时候，不要注入 死循环或者其他恶意之类的代码。\r", "\r", "因为 ", " 上的 opener_server 容器是以 root 权限运行的，所以会系统宕机，导致其他人无法体验。\r", "我们总是需要重启进程来解决。\r", "\r", "现阶段，我们的体验服务器还没有明确的权限划分，大家暂时只能都在一个服务器上做体验。所以请大家正常使用。", "哦， ", " 下午好像死了一段时间。"]},
{"content": ["<div class=\"topic_content\">目前除了游戏引擎的基础算法外，还有那些场景是需要程序员特意花费精力甚至手动调汇编代码，以期提高一点的运行效率的？\r<br>================================================================\r<br>记得初学编程的时候，觉得代码优化是个很有魅力的事情，当算法已经最优的时候，甚至还会内联汇编动用上诸如 xor 判断数相等，位移运算快速乘法这类的技巧最大化运行效率，当然数据量小最终的运行效率并没有明显的变化，只是为了满足自己内心的那份成就感：这份代码在我手里已经最优了。大家有类似经历或者感受的吗，可以分享一下。</div>"], "reply": "29", "tittle": "目前除了游戏引擎外，还有哪些场景是需要程序员死抠代码性能的？", "comment": ["12306....？", "单片机，为了那一点点功耗进行 N 多次代码调整。从待机 1ma 降到了待机 0.2ma （当前硬件下没法再降了）。", "2l +1", "大规模的数据处理。。。", "应用在某些滑动场景的稳定 60FPS\r", "音视频编码\r", "NoSQL\r", "大数据\r", "人工智能", "还有各种硬件瓶颈的地方，批量 IO ，大规模并发等等", "集成电路仿真……应该也属于大规模数据处理吧。一个 case 能跑几天，跑的花都谢了……", "只要量大，就要扣性能。并不是上更多的机器就完事了。", "  +1", "只要规模上去都要优化性能的，你去看看 B 站？", "算法慢，慢的是局部，并不难优化。\r", "架构烂导致的慢，那才是真的慢。", "编译器自己会优化，绝大部分人是优化不过编译器的。现在嵌入式系统也配置很高了，需要手动优化的地方越来越少了。", "嵌入式驱动代码什么的", "月度 KPI ，季度 KPI ，年度 KPI", "硬件有限的情况下需要，不乱 IO ，分配内存要小心翼翼，以前写代码分配内存几个字节都计算的清清楚楚，现在时代变了， new 了就不管了", "lock-free data structure and algorithm", "深度学习 卷积操作好像都是汇编的", "交易吧\r", "广告系统里有交易的，还有高频交易", "系统底层", "高并发访问的服务，要么花钱堆硬件，要么拼命做优化", "或者企业要降低成本的时候也要抠。\r", "最近做的一个就是放弃使用 oracle exadata ， 一大堆 SQL 需要做优化。。", "高并发系统，特别是处理 IO 问题的时候", "大部分情况下 不需要你自己去死抠了，别人已经帮你死抠好了。", "c/c++的应用领域基本上都是对性能有需求的:游戏引擎、图像处理、机器学习、高频交易、操作系统、网络通信。。。", "大数据处理", "网络通信", "CAD", "规模大了活着硬件烂", "只要是生产系统, 大多数都有优化的必要, 但是大多数的优化入手点并不是代码级的."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>本人重度拖延症患者， TODO 应用搞了一大堆，番茄应用搞了一大堆，就是没啥效果。我的 <a href=\"https://www.v2ex.com/t/320594\" rel=\"nofollow\">600 天 FLAG</a>开头并不顺利，于是有了一个重度拖延症患者专用 TODO APP 的想法，听下意见。\n目前常见的 TODO 应用其实主要还是靠自觉的，就算没完成也没啥惩罚，也就 念网 <a href=\"http://nian.so\" rel=\"nofollow\">nian.so</a> 的稍微有一点强制性，如果不更新会账号停用，然后充值恢复。</p>\n<p>我的想法分两个部分，第一部分惩罚，第二部分鼓励。</p>\n<p>第一部分：加强其中的惩罚，建立 TODO 前先充值， TODO 一旦没打成，立刻扣钱，比如建一个 TODO 自己设置一个金额， 1 块钱，如果超时没完成，这 1 块钱就被扣掉了，当然土豪可以设置为 100 块，这样多少会有点心痛吧？这些被扣的钱最终会被捐给腾讯公益等公益基金。</p>\n<p>第二部分：人工提醒。比如是一个连续的项目，恩。。。比如每周要坚持去游泳或者是每周要去三次健身房什么的。创建 TODO 的时候选择人工提醒，会有 TODO APP 的妹纸通过微信、电话等方式联系你，跟进你的联系进度呀什么的，鼓励下你的什么的。当然这个肯定是付费的。</p>\n<p>好了，脑洞开完了，听听你们的。</p>\n</div></div>", "<div class=\"topic_content\">算了，我还是去 念 上面领个宠物吧。。。</div>"], "reply": "34", "tittle": "一个会有妹纸提醒的治疗重度拖延症的 TODO APP 想法，大家来拍砖", "comment": ["你好，楼主\r", "\r", "    我认为这些应用不能治疗你的拖延症。相反应该立即停止使用。\r", "    1 、对于你而言使用这些应用是在回避问题本身，而这些应用成为了你拖延的理由\r", "    2 、当你做计划的时候，你也认为永远没有准备好。如此本末倒置，实际上你乐此不疲。\r", "\r", "    我想重要的是，你先要了解自己，应该关注自己的行为模式。\r", "    1 、记录下今天行为的过程——想想你做事的时候为什么没有继续下去（为防止你想多，略去也可）\r", "    2 、尝试一天这种行为模式——一次只做一件事，想到就做。（期间停止其它所有干扰）\r", "    3 、记住 2 中行为模式的感觉，如果有效尝试坚持更长的时间。\r", "    4 、 一天下来可能分不清轻重缓急，区分轻重缓急也是对你的干扰，这是后面要解决的问题。\r", "\r", "    至于你说的脑洞，我只能说：\r", "    我觉得不错，哈哈 哈哈 哈哈哈...", "微信，电话弱爆了……真人线下约会更好不是么", "app 没什么用\r", "你要建立自己的自然模式", "电击怎么样？", "拖延，完全是因为不感兴趣。如果你很感兴趣，你会不择手段的去达成。\r", "\r", "所以，找一个你心甘情愿做的事情，比如打 DOTA 。", " 我能说 DOTA 也没有兴趣么。。", " 电死了咋办", " 有道理，先来记录下时间", "人家妹子凭啥提醒你啊，你做些 AI 还差不多", " 付钱啊", "所谓的这些番茄应用只是一个时间提醒，你要高效，应该改变的是自己，而不是外力。\r", "如 1 楼所说的，先观察自己，然后由内心驱动自己，而不是由 app 来驱动自己。", "你的员工一个接一个被你的高帅富用户撩走了（逃～", " 改行做相亲", "拖延一般是因为焦虑", " 一楼说的很对！\r", "\r", "拖延症最怕的就是给自己定这些死任务，比如我今天一定要做 50 个俯卧撑，做不到就惩罚。 \r", "假如有一天没做到，就会产生很大的愧疚感，然后慢慢的就更不想做。\r", "\r", "正确的是，找到做一件事情的乐趣， 即使没做好也不要有压力，想起做的时候立马去做就对了。\r", "\r", "没做也不要有压力，推荐去知乎搜搜一个人生后如何自律。", "原来你没有妹子", " 不错", " 已经有娃了", " 那你怎么会觉得妹子提醒有用呢，我的妹子整天威逼利诱我去锻炼，但是好像只成功了一次……", " 我是觉得也许对别人有用，请叫我雷锋", " 啊，不好意思", " 我也觉得电击比较靠谱", " 电坏了就不好了啊", "建议多做正念练习，增强同理心和自控力，善待自己和他人，并且学会感恩，减弱内疚感和焦虑，楼主慢慢做事就积极和自律了。所谓的拖延症不过是现代人强加的一种概念，无需在意，也并不可怕。\r", "\r", "\r", "至于楼主的想法，我也觉得只是一时之想，不认为现阶段的楼主有何动力和耐心去实现。正视自己，提升专注力，才能更好地活在当下，建议楼主抛弃靠外力驱动的想法，从自身着手改变。", "呵呵呵 我连 TODO 都不会去写，又懒又拖就是我。", "看看《拖延心理学》 会有帮助", "放下手机会更有帮助一些", "楼主，你的方法不但治不了，还会加重。。。。。。", "扣自己的钱不会有成效的，应该扣别人的钱，比如室友，有奇效……", "把银行卡和密码给我，每次完成任务给你发红包。立竿见影，请叫我财神爷", "钱可以转到任意用户身上，而不是转到官方，这样会不会更有交互性", "研究了拖延心理这么久，一直以为 V2 是技术类论坛，突然发现楼上有些人说的很靠谱，点个赞", "没完成任务钱会扣到我的账号上就行。\r", "毕竟扣自己账号没感觉。", "其实，有拖延症的人才不管这个，可以说得过且过。··我是这样的人·················"]},
{"content": ["<div class=\"topic_content\">有没有人捣鼓过用 antlr 去解析 xpath 语法，我想把 xpath 用到 java 中。\r<br>我在网上找到一个方案，但跟我想要的又不太一样，http://www.w3.org/TR/xpath-30/。不知道有没有写好的g4语法文件可供使用，实现简单的查找子节点功能就行， v 友们求助。</div>"], "reply": "3", "tittle": "有关 xpath 和 antlr 结合的问题", "comment": ["…\r", "java 1.5 开始原生就有 XPath API\r", "不知道你折腾个啥", " 不是解析 xml ，是解析抽象语法树，用 xpath 的语法套用到解析语法树上，那就得把 xpath 的语法先用 antlr 解析成语法树。。", "你先把 语法树按一定规律序列化成 dom 不就可以直接用 xpath api 来访问里面的结构了\r", "如果不希望生成 dom 的话，还可以用 StAX API\r", "当然大部分的 StAX 的实现都会使用 dom 做中间存储"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>方法 1 正常，方法二没有声明 sayName\n动态模型不能用字面量是吗？</p>\n<pre><code>//方式一\nfunction Person(name){\n    this.name = name;\n\n    if(typeof this.sayName != \"function\") {\n        Person.prototype.sayName = function() {\n            alert(this.name);\n        }\n    }\n}\n\nvar person1 = new Person(\"xiaoming\");\nperson1.sayName();\n\n//方式二\nfunction Person(name){\n    this.name = name;\n\n        if(typeof this.sayName != \"function\") {\n            Person.prototype={    //这里不能用字面量是吗？\n                sayName:function() {\n                    alert(this.name);\n            }\n        }\n    }\n}\n\nvar person1 = new Person(\"xiaoming\");\nperson1.sayName();\n</code></pre>\n</div></div>"], "reply": "4", "tittle": "问个 js 动态原型问题", "comment": ["你在构造时把 Person 原型都替换掉了，那 person1 的原型当然就不是 Person 的实例啦\r", "\r", "你这样的话， prototype 的确被替换掉而只剩下 sayName 方法，那么 this.name 应该是 undefined", " 不会， sayName 是直接报错， person1 在 new 时进入 constructor 之前，其实例已经创建，之后才把构造函数中的 this 替换成实例进行添加方法和属性，现在是他把 Person 的 prototype 给替换了，那么 person1 的__proto__其实已经不是当时的 Person.prototype ，自然没有 sayName 这个方法", " 哦哦 明白"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>首先，谢绝广告推广，最好有试用过或实践过的同学说说使用的感受。</p>\n<p>我们公司在运营着几个 app ，提供关于社交，直播，资讯这类功能，对推送的需求量很大，计划自己搭建 Push 服务平台。结果是从入门到放弃的过程，查过无数资料，付出数周加班时间还是绕不开服务端架构设计的大坑，工作量和成本巨大根本没办法继续，不得已转向第三方。</p>\n<p>现在推送最大的问题还是进程保活，安卓 5.0 之后厂商自动清理后台，进程守护拉起， fork ，留像素点， NDK 文件锁之类的全部不顶用，之前试用过几家，到达率根本没法看。自己也没有什么好的办法，集成厂家通道也比较麻烦，华为的文档看得人云里雾里，快被推送逼疯了。</p>\n<p>求大家推荐个好用、省心的第三方推送，最好集成简单，能解决目前的问题的。知乎上充斥着各种水军广告已经没法看了，不得已转移到 v 站这片净土，希望大家多给推荐和建议。</p>\n</div></div>", "<div class=\"topic_content\">刚刚还跟产品解释了一通，还问我为什么我们的 app 会被清理，微信就不会被清理，真是没办法跟他解释。微信早就白名单了，如果我们的软件有人家微信那么大的用户量看看谁会清理？ so simple ， so 奶衣服。</div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>我的问题已经解决了，用的是 云巴 <a href=\"yunba.io\" rel=\"nofollow\">yunba.io</a>。还是如大家所说要集成小米华为的厂家通道，但它那里不用我自己注册小米华为的帐号，一键集成。测试体验还不错，今晚他们CEO直播讲推送的保活问题也可以听听。既然我在帖子里答应过客服，那就帮它打个广告吧。</p>\n<p>希望大家继续对推送SDK如何保活，推送平台选泽进行讨论，多给我们这些苦逼安卓程序员意见，谢谢啦。</p>\n</div></div>"], "reply": "92", "tittle": "我快被搞疯了，求推荐一个第三方推送服务", "comment": ["jpush", "推荐小米推送，毕竟小米手机的用户量在那儿。再就是极光、个推、友盟等等。", "目前在用融云, 还将就吧, 推送这玩意儿其实技术上并不难, 主要是吃资源, 特别是 openfile 和内存, 而且安卓的 SDK 也是很麻烦的事情, 被杀掉的机率太高了", " 集成过小米推送，用的是 Notification 不是透传，并且仅对用小米的用户效果较好，对其他厂牌还是没能解决问题", " 有到达率统计吗？这家的广告太多，网上的数据不敢信。", "个推啥， Android 是透传， iOS 是推送加透传", "没有 Google 服务框架的悲哀。", " GCM 不能用的问题现在已经大家都懒得吐槽了，抱怨也没用，关键还是要自己去解决问题。", " push 的到达率 90 多, 实测", "基本无解。用第三方的话，有厂商自己的推送平台的话就用厂商自己的，比如小米的用小米，华为的用华为，剩下的就用极光、个推、友盟等等等等", "阿里推送啊！不过我没试过哈。我以前还发过帖子问过有关阿里推送，但是好像没人在用。阿里集成了小米推送和华为推送，然后自己也搞了一套。自动保活没啥好手段的，在小米（ android4.4 ）手机上用双 service 守护是可以的，其他的没测试，最新米 UI 没测试。其实最靠谱就是自己把极光，友盟，小米，华为四个推送都集成上，基本上可以保证 80%以上的推送到达了。。。", "  现在厂商对这块限制都比较多了，进程保活守护拉起都是严管的对象，不管你用哪家的推送都是一样的效果", " 额，虽然不想乱黑，但是试用过体验最差的是它", "    \r", "\r", "百度的，哎，基本是不能看了....", " 调研过融云需要自己集成华为小米厂家推送通道，而集成华为，注册开发帐号这些比较麻烦，问题需要一拖再拖，拖了几天了都。", " 个推有推送不到的情况吗？", "据说个推的还可以，公司有个项目打算接个推。但是现在的 IM 服务是自己写的, apple 走 apns ， android 就直接离线了，没有推送", " 谢谢分享，但现在说进程相互守护这类的保活方式已经没有意义了，还是要自己集成多家厂家通道，有些还没有，要死。", "使用个推试下 ", "第三方推送就看一个指标……装机量，你去看看装机量排名前几的应用都用的是什么， BAT 都有自己的第三方推送，跟他们的 app 绑一起就好了么……\r", "\r", "之前用的小米推送，效果比友盟好（仅就我们有限的测试结果来看，不具有广泛的参考性，毕竟机器数量摆在那里。", "接入多个，靠一个通吃没戏。初始化的时候根据手机系统品牌等选用对应的推送服务注册设备，小米之类系统内置推送服务不要用透传", "安卓的推送是个大坑，实在不行考虑多个平台推送，哪个推到算哪个？\r", "毕竟讨论国内的平台覆盖的话，小米，华为， oppo/vivo 三家的占有量加起来也就差不多了。", " 相互拉起全家桶那一套不能用了，现在定时杀死全部应用，保活是个大问题。", " 恩，确实。但是即便这样，我的看法是，保活跟唤醒依然不是我们需要考虑的问题（第三方推送服务需要考虑），跟大厂应用绑在一起依然是投入最少，收效最高的做法", " 哈哈，推到那个算哪个。我想要的是一个第三方推送帮我集成，覆盖小米华为之类的厂家通道，最好集成还不麻烦。", "虽说不能打广告，但我感觉我们云巴的服务可以完美解决您的问题哈，现在我们云巴一键集成小米，华为的推送，不用自己集成和注册帐号，并且会自动识别这两类机型，通过在这两类机型上的小米、华为推送进程来拉起云巴进程从而实现杀掉 app 也能收到推送的效果。", "同时集成 mipush 、华为 push", " 有网址吗，可以试用下。", " 小米华为的推送在 rom 里不开放, 你用哪家都得自己集成, 这里只需要集成帐号算是轻松很多了", " 但是不是集成的太少了，才两家", " yunba.io 。您也无需注册华为、小米开发者账号，可以极速集成厂家的推送功能。", "现在国产 rom 如果杀不掉你的推送才有问题呢 加油吧 小米现在很满意了 该杀掉的都杀掉了 目前还没看漏网的 除了小米自己的", " 华为和小米这两家市场占有率方面占优，能大致满足。最最重要的是，仅这两家厂商提供推送了服务，厂商没有 提供的话，任何第三方推送商也没办法集成其他厂商的推送。日后如果有其他厂商提供的话我们会继续为开发者们一键集成", "android 这行这特么的乱啊我勒个去", " 我有几个 app ，都需要集成，一来二去的实在辛苦。", "目前在用 jPush ，感觉还挺好的。。。", "不推荐信鸽： D ，正在用，你们遇到什么问题，那么苦恼？\r", "我这边自己实现的推送和市面上的差不多，反正并发不算高的情况下，还是可以的。\r", "要不，你试试野狗的？", "我觉得苹果的没的说，自己做就好了，不难（ gfw 的事可以通过阿里香港节点解决），重点说下安卓的。\r", "\r", "安卓分两种：\r", "\r", "一种是 rom 通道：\r", "小米 push 推送小米的手机效果还不错，可以用；\r", "华为 push 分为免费版和付费版，我们想用付费的，但是华为的商务不跟我们谈...始终想不明白为什么给钱都不要，所以免费的也不敢用（原因不细说了）；\r", "据说 vivo/oppo ，也要做 rom 推送，内部消息不知真假。\r", "\r", "但总体上说 rom 是到达率最高的方式。\r", "\r", "另一种是第三方：\r", "个推、阿里、友盟、极光、腾讯信鸽等等...\r", "其实实现方法都差不多，额外关注的一点是 联盟唤醒，比如，你装了手淘系 app （淘宝、天猫），如果你的 app 被杀死之后，淘宝没死，就能把你的 push service 唤起，从我们的测试数据上看，针对某些机型效果还是可以的，另外一些机型就没什么卵用... 基本上这几家都有唤醒的机制。\r", "\r", "另外再说下集成小米、华为的第三方 push ，比如阿里：\r", "我觉得小米的通道都是免费的，你如果有开发资源，自己请求 api 就好了，不需要把钱给另一个第三方。\r", "\r", "\r", "\r", "不是广告，也没利益相关。", "记得 v2 上不是一直都是怒斥 app 链式唤醒、后台杀不掉等行为么。。。", "极光", " 道理明白是明白，集成厂家+用一个第三方。现在想解决的是集成厂商麻烦的问题，国内的第三方都叫你自己来做，那要他们何用？", " 这真的是个很矛盾的问题，我个人也很谴责这种做法，保活 SDK 要牺牲待机时间。特别是留像素点这类我认为简直是无耻。但是安卓又不像苹果， GCM 不能用。那要做推送只能各种手段了", " \r", "搞保活（的应用）一定会死，不搞或许会死", " 所以我现在寄希望于第三方服务，自己不搞了（想搞也搞不了）。刚刚开始试用一键集成厂商通道的服务商", "安卓需要“公约”禁止非用户主动请求的唤醒，否则全家桶一日不除，推送和反推送之间永无宁日。大公司拼互捅能力（话说手淘真的杀不死啊），拼 ROM 装机；小公司拼无底线；用户拼智商，没其他招了。", "推荐 leancloud ，混合推送很方便，到达率也不错", " 真的不是打广告哈，如果你对「当下安卓厂商清理后台进程的环境下，推送应该怎样做」这个话题感兴趣，可以看看明晚八点半我们 CEO 张虎 的直播，这期的主题刚好就是讲推送。", "android 推送这无解， 我们也只是高了 GOOGLE + 自己的", "我不太懂阿 我是个做网站的 不过我司用的阿里云旺 你可以看下..", " 求服务商名称", " 是自己搭建推送平台吗？网上有没有发些经验或博客可以参考？", " 你成功吸引了我的注意，我刚刚就在集成试用你们的推送，不用自己注册开发账号感觉还不错。继续用的过程中好的话帮你在帖子做个广告又何妨", " 什么服务商？我们现在用的服务商自己都不满意，正在到处试用 ing", "太可怕了。。。还事 iphone 好。。", " 其实推送这个需求是个哲学问题不是技术问题 希望通过技术手段侵犯用户对手机的控制权本来就是不对的 并且即便是做到了强制保活 获得的那一部分额外用户本来就是因为反感推送才会禁止你推送或者杀掉你的进程 这部分用户即便是你经过千辛万苦最后送达了推送 招来的只有怨恨或者直接卸载 也没有达到你们推送消息的初衷 不讲道德单从商业利益上来说 这样的推送也是有害的\r", "\r", "想要吸引用户 完善用户体验、提高内容质量 给用户更多干货内容 用户活跃度自然也会提高 推送这样的手段只能在不违反用户意愿的前提下作为辅助运营的手段 过于依赖推送只会导致揠苗助长、饮鸠止渴一样的自食其果\r", "\r", "我记得张小龙说过这么一个观点 具体措辞记不清楚了 但是大概意思是 一个好的软件 不应该是想方设法的占用用户时间 而是想方设法的为用户达到目的 并且与此同时节约时间 我是非常认同的 不知道你们产品能不能理解 如果确实水平有限 理解不了 那就算了", "我们公司在运营着几个 app ，提供关于社交，直播，资讯这类功能，对推送的需求量很大。。。。。。推送不是你们公司的需求，是用户的需求。。。\r", "\r", "核心问题应该是增大客户对你们的推送需求量，而不是想着怎么强奸用户。。。。\r", "如果客户有需求，把你们的 app 手动加白名单就不会被杀进程了\r", "\r", "一个普通用户的想法，供参考", "无解，只有小米手机用小米推送，华为手机用华为推送，其它手机随便选个或者其它手机也用小米推送。\r", "\r", "这种东西很好解释，我是这么跟领导说的：\r", "“安卓推送需要后台保持长连接，假设有方法做到不挂，那所有 app 都会用上这个方法，然后 Android 手机就卡得没法用了，站在厂商角度必须杀死垃圾后台。如果哪家手机敢不把微信加白名单，用户就觉得手机有问题，可能就不买了，微信已经绑架了手机厂商。 iOS 不存在真后台，是系统长连接，安卓本来也有系统长连接但中国有墙，并且中国的手机厂商因为利益关系把它干掉了。”", "上面有几位，主要从产品角度来谈这个技术问题，甚至上升到哲学的高度，但是对于我们程序员来说，这就是个单纯的技术问题。\r", "如果从产品的角度来讲，我觉得有两点值得关注：\r", "1 、有几个普通用户知道怎样手动加白名单？\r", "2 、是否所有的厂商，对设置白名单的入口和路径都一致？\r", "\r", "我就不明白了，在 iPhone 上非常简单的一个事情，到了 Android 这边怎么就成了一个哲学问题。这让我想起了古人说过的一句话：\r", "北海有鱼，其名为鲲，鲲之大……一锅炖不下。", "公司的几个 APP 用的是个推。", "好好的 GCM 不让用，到头来折腾出来一堆魑魅魍魉。国内安卓生态圈伴随着谷歌被封，基本属于没人愿意搭理的地方了", "为什么都觉得 GCM 不能用，其实在中国也可以用啊，感觉没被墙。", " 真的吗？我没有在国内试过。我了解到的是： Google 服务在国内被墙得很不稳定，导致推送也不好使。我没亲自尝试过。主要是不想蹚国内这滩浑水", "做不出来 外包就行了", "想着办法让客户去接受这种消息轰炸，太可怕了！！", "我们用的极光，也有朋友说他们公司 iOS 用的极光，反正最终都走 APNs ，然后 Android 根据厂商不同用不同的推送服务，比如小米的就小米推送。。。", " 微信的推送也被我 ban 了 蛤蛤 这东西我就拿来抢红包用 最多查个公交车(日 tm 的高德的广州数据不全，经常只有单行位置)", " gcm 能用 ，但是要 google 框架和 google 市场 , 这些被干掉了。", "我们就是自己搞得推送平台， 如果公司人力资源充沛， 抽两个人研究下 erlang 语言， 基于 mqtt ， 目前 github 上排名靠前的 mqtt broker ， 选择一个， 二次开发就可以了，两个月应该差不多了", " 你说用户体验那部分说得很对，但我觉得推送其实既是产品的需求也是用户需求。推送的初衷就是唤起用户，增加活跃度不是吗？就如每天设定的闹钟，不是没需求而是需要辅助一些方式提醒自己，用户亦然。何况，我只不过是搞技术的，不需要弄到哲学层面吧。。", "楼举发帖发牢骚这会儿, 随便选那个 push 服务都早集成完毕了", " 昨晚已经集成完毕了，正在测试中。因为这个帖子挺有意义的，算是一次安卓推送方式和第三方服务选择大讨论吧，所以还想多听听大家的意见和想法。", " 兄台你说的是外包做一个推送平台吗？不可能的啊", "> 如果哪家手机敢不把微信加白名单，用户就觉得手机有问题，可能就不买了，微信已经绑架了手机厂商。\r", "漂亮...", "leancloud", "杀不死的应用，我就直接卸载了，忽忽", "  云吧的安卓 SDK 做了进程守护之类的吗？", "还是用 gcm 吧", " \r", "Android 5.0 及以上平台应用进入后台会被杀死，导致出现用户收不到 App 消息推送的问题。\r", "\r", "为此，云巴 Android SDK 开始支持小米、华为推送，通过在这两类机型上的小米、华为推送进程来拉起云巴进程，从而实现杀掉 app 也收到推送的效果。\r", "\r", "并非传统的进程守护或者相互拉起的技术手段，而是利用官方通道实行推送。在以后，云巴会继续集成更多的官方通道，比如 VIVO 、 OPPO 等。\r", "\r", "同时，云巴集成的第三方推送为一键集成推送，并非混合第三方推送的做法，即，只需要使用云巴一家的服务，就无需再注册其它开发账号，就能集成华为、小米推送。", " 之前有朋友也推荐 leancloud 混合推送，因为它要自己注册和创建两个厂家通道，注册审核等了半天所以还没试用。你们试用过吗，到达率如何，有数据可以分享下吗", "最反感搞强行推送绑架用户的 APP ，除了即时通讯类，其余基本没有实时推送的必要。凡是要这么搞的 APP 我全部卸载，大不了不用，只装在 Googleplay 有下载并带有 GCM 的。 GCM 在国内其实是可用的。", " 混合推送除了一开始要审核（如果一开始 APP 就上架这两个市场的话，不需要审核），效果还是很好的，小米和华为的到达率远远高于其他平台，基本只要不关闭推送，都能保证到达，而且小米和华为渠道推送时会有角标提醒。", "曾经看过一个 app 里面带有 4 种推送-.-，根据机型启用不同推送，巨大恶心", " 不是个个都翻墙的，谷歌帐号被封了， GCM 具体要怎么用？", " 恶心吗，我觉得这样也方便啊，比起不同厂家推到哪个算哪个好多了吧", "这广告给云吧打的我给 99 分，少 1 分怕你太骄傲。说句公道话，如果各大推送系统都没解决的问题，云吧就给解决了? 我不信他比小米都做得好。我做的推送系统是自己搭建服务器，完全不用第三方的推送系统。 mqtt 开源的也有 emqtt 、 vernemq 啊，其他语言的有 hivemq ，不过是收费的。", " 我们也试过自己搭建推送系统，苦于没有经验，协议选择和服务端架构这些问题一直犹豫不决。能分享下搭建推送平台经验吗，还有一点就是进程保活问题现在如何解决合适呢，推送效果，到达率如何？网上对这部分的经验分享太少了", " \r", "rest 服务器 \r", ".\r", "\r", "https 都没有么？\r", "虽然是服务器后台发送", " 在 appkey 不暴露情况下是基本安全的。如果对安全有更高需求，可以考虑使用 https ，我们对付费用户支持 https", "同一楼 jpush", " 手动加白名单远比 root  , xposed 等简单，还是有很多小白都会的。你看看有多少人会“一键清理”，既然他会一键清理，自然也知道需要保持后台的应用要加到白名单里。如果确实这个应用有很多用户不会，那应该考虑教会他们，而非使用各种技术手段强行推送，侵犯用户选择权。", "我最近也在做 IM 和推送类似的事情，经过一圈调研，最后确定下如下方案 ", " ：\r", "1.app 还在的情况下，走自己的长链接，用的 MQTT\r", "2.接入各个厂商系统级的推送，只有系统级的才能保证送达，不被干掉\r", "3.app 被操作系统干掉的时候，走各自厂商的官方推送，苹果走 APNS ，小米走小米推送，华为走华为推送，魅族走 Flyme\r", "这样下来，至少送达率什么的好很多。\r", "接下来再说说厂商推送的坑：\r", "小米：透传的方式只能 app 打开才能用，所以说明你只能用通知栏\r", "华为：手机重启要么开启一次 app ，要么设置开机子启动，不然收不到推送（据说后续会解决）\r", "如果有什么其他的观点，欢迎交流", " 一键清理是装了各种优化类应用比如 360 、腾讯之类的，自动放在桌面上的。用户点一下发现清理了多少 MB ，感觉很好。白名单那么复杂，除了程序猿谁会弄。\r", "我甚至遇到过菜鸟用户遇见权限请求的对话框都是点拒绝的（想用功能却不给权限，不要说安全意识高，就是不懂而已）"]},
{"content": ["<div class=\"topic_content\">各位 V 友们有这类程序推荐吗，试过 Nginx/Pound ，但是代理游戏总是出错（游戏不是我写的，而且日志和直连抓包看起来正常，没分析出结果，传输是 HTTPS+SPDY 协议）。\r<br>主要是支持 HTTPS ，自定义 Header （回源时）就行，最好支持 Windows/SPDY~，尽量精简，无需缓存功能。\r<br>谢谢啦。</div>", "<div class=\"topic_content\">用来加速游戏和公开代理用。</div>"], "reply": "6", "tittle": "想找一个支持自定义 Header 的反向代理程序", "comment": ["ngx 难道不够？", " 但是代理游戏总是出错（游戏不是我写的，而且日志和直连抓包看起来正常，没分析出结果，传输是 HTTPS+SPDY 协议）", " 出 代理 的时候抓包看看呢，会不会是游戏反代理（比如根据数据包通过代理的时候自动加的 header 来确定），如果是的话，需要伪装一波。", " 游戏的源码我有一份，但是没看懂，应该是没有反代理的，而且发送的 Header 头都一样。。", " 你是在 client 到 ngx 之间 抓包的吧， 我指的是 ngx 到 server 之间。\r", "或者 多帐号登录 触发 ip 进黑名单（可能性不大）？\r", "还有就是 确认游戏没有 其他 TCP/UDP 之类的数据么。", " ngx 在 server 和 cli 到 ngx 一样，多帐号登录 触发 ip 进黑名单（我是本地代理，同账号，没这个可能），确认游戏只有 HTTPS 。"]},
{"content": "", "reply": "21", "tittle": "转发一个百度相关微博，百度程序员好作孽。。。 ", "comment": ["自己写的代码，死也要.....", "只能说 别作死 万一不是自己的代码出了问题而是汽车哪里出了什么故障导致没能刹车，划不来 其实完全可以扔个假人过去", "我去。还有人会说百度好吗？感觉好欺负人，怎么不是李彦宏上。", "基本上是：\r", "程序员：ヾ(｡｀Д´｡) 这老板有病\r", "广大人民群众：对消费者负责，做的好！", "不把工程师当工程师看待的公司迟早💊", "这问题 今天一早我上知乎 就推到我首页了....\r", "\r", "知乎回答大部分都是  \r", "\r", "百度死绝...  HR 赶紧来收百度离职员工啦..\r", "测试都用完了?开始上开发人员了?\r", "李彦宏怎么不亲自上?看人家原铁道部的刘跨越\r", "百度无人道...\r", " 千万个魏则西都无所谓..  何况一个员工\r", "\r", "恩!总结了下知乎大多是以上的想法!\r", "我想看看在 v2 上 大家是怎么看这件事的...  \r", "我个人中立..  非度黑 非粉...", "💊💊💊💊💊💊💊", "恩  对消费者极度负责，负责到连充气娃娃什么的都买不起", "艳红自己上啊", "假设是硬件故障出事故，程序员是不是很冤，丢几个等身抱枕有啥不行的。", "讨论这种价值观的问题最好去知乎，不希望 V 站变得和知乎一样，到处 judge 别人。上去测试的这位兄弟还是很自豪的。 ", "如果我们的无人（驾驶）车继续前进……", "我能吐槽你把链接放在标题吗。", " 可惜姓罗的，还有那个女的，好像都挂了吧？ 把它两拉出来再读一下你这句话该是多么对味儿啊", "我只想说， robin 自己第一次试乘请写无人车代码的 rd 模拟路人，这个做法很过分？", " 你们这些螳臂当车的程序员难道能阻挡得了吗 ...", "测试一定用真人，不是不相信比亚迪造车技术，我是不相信国内所有造车厂", "程序员们替天行道的时候到了！", "百度怎么还没倒闭?", "v2 也被饼厂收购了？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>大四了，想报个班学点儿东西，平时都接触了一点点儿，不知道选哪个方向发展。想听听老司机们的看法，还望指教。</p>\n</div></div>"], "reply": "120", "tittle": "快毕业了， java、php 还是 ios，目前来看，选哪个比较好", "comment": ["我做 php 快十年了，我觉得打算长期干技术的话 java 更好一些，你看招架构师一般都是 java 出身的。而且也容易转安卓。 php 学深了也不容易，现在 php 语法越来越复杂了。很多也借鉴了 java 的思想。", " 感谢老司机指点", " 准备用 Mac 开发 C#程序了，刚推出的 Visual Studio for Mac 的 bug 好多😂😂😂", "这个时候就像放出这个图：\r", "\r", "![选 php]( ", " )", "Java 在 V 站吹得最高的一贴。。", " 😂😂😂等几个版本后再用吧，巨硬的东西都是这样", "威锋网 php 职位要的是学 java 的人，我同学就是例子。说是 java 的思想，所以进去再学写 php", " rider 还可以，但是也经常卡死😂😂😂", "php,不解释", "学 C 艹", "(#ﾟДﾟ) 大四才问？？？", "为什么没有 py 或者 golang", "学什么无所谓，只建议你不要报培训班。", " 各有长短，想学就学，没啥“学了这个没必要学那个”的。。。", "首先选自学\r", "其次不选 iOS\r", "再次为了找工作\r", "最后选 PHHHHHHHHP", " 具体来说是哪方面复杂呢？我感觉从语法上看 java 的数据结构、内存模型、小功能实现是非常便捷的，但是不知道 php 的常用功能和语法是怎样的。", " 语法上吧，由于 Java 的语法非常严谨，也应此导致它的废话比较多", " 你这个网站的特效做的不错啊 我玩了 10 分钟！！", " ....canvas", "从薪资角度说， IOS 来钱最快，薪资可以要的更高。\r", "从职业发展和长远来看， java 更具备升职的潜力，转架构，大数据都可以。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>本调查将以互联网人业余时间兼职为出发点，了解互联网从业者兼职环境，以期我们提供更全面更完善的服务</p>\n<p>我们将依据提交的数据汇总并制成专业数据报告。</p>\n<p>本调查由实现网发起，调查时间为 2016 年 11 月 11 日-2016 年 11 月 26 日。我们不会收集您的个人隐私，敬请放心。共 21 个问题，预计 3 分钟。</p>\n<p>请点击：<a href=\"http://form.mikecrm.com/dcP5hV?m=readonly\" rel=\"nofollow\">互联网人兼职市场调查</a></p>\n<p>为自由工作的发展贡献一份力量</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "互联网人兼职市场调查——参与调查为自由工作发展贡献一份数据", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>第三届 CSS 大会由 W3C 中国、 w3ctech 、前端圈联合举办，大会将于 2016 年 12 月 17 日在广州天虹宾馆举办。</p>\n<p>以前没参加过这些活动，都是一个人自己写代码，这次想去长长见识</p>\n<p>打算去把会议内容录下来~</p>\n</div></div>"], "reply": "30", "tittle": "第一次参加 CSS 大会，有什么要注意的吗", "comment": ["目测会变成装逼大会", "离我之前住的地方挺近的", "坐合放宽 参加过第二届 CSS conf 在虹桥国际会议中心… 规模大概也就是中型 meetup 多交朋友 第四届就可以刷脸了", " 差不多，介绍新技术会多一点，其他的估计都没啥营养", "带个充电宝", "css 的趋势都是走 js 的路 让 js 无路可走", "早点去占个前排靠讲台的位置", "同是广州的，可惜对这些会议不敢兴趣。个人觉得 AD 性质居多吧。", " 那会有什么 ad ？", "这些会议，要么装逼，要么 AD ，要么招人。。。", "有自助餐吗，有的话，少说话，多吃饭。", "我也报名了， 188 早鸟票。和前端圈几个老大挺熟的，也不好意思不去。", "不要指望能学到什么东西，在家 Google 一下相关主题。\r", "会议这东西，这是用来交朋友、看广告的。", "早去 占据有利位置 带好吃的 别饿着了 手机充好电 带移动电源 最好提前看下议题  可以提问啊 是不是 毕竟可以和大神发问 其实还是有干货的 而且可以看到同行们的状态 在魔都的表示遥祝 俺也想去看现场呜呜呜 可是好像没直播。。。", "会议的内容听听就好啦，手机牛逼的可以录个视频。重点是：打扮靓仔点，搞前端妹子还是挺多的。祝约 Pao 成功！", "会议的形式决定了它不会有多少干货，就当是个社交活动吧。。", "哈哈， 硬广", " 就服你", " 早鸟票是什么意思", "得看看有没有女人", "看见这个提问忍不住怒答一发，", "标题改成“第一次参加 CSS 大会，怎么表现成经常去的样子” 可能更合适-_-", " 最早的票，相当于预售？我 10 月 26 号就买了，分三种票的， 188 ， 288 ， 388 好像？", " 感觉要上知乎的节奏\r", "\r", " 我说怎么 188 的怎么没了，估计是卖完了", "不知道有没有分会场什么的，挑你感兴趣的主题听一听。\r", "\r", "其实就是扩展一下视野，就算你不去现场，后续找大会相关资料也是一样的效果。\r", "\r", "参与只是一种交流的方式。", "必须带个装了 IE8 的 XP 去。", "警惕传销，小心被洗脑。", "印象中,天虹宾馆是安利御用宾馆,在那开会总往传销方面想...", " 说出你们的故事（滑稽）\r", " 说出你们的故事（滑稽）", "搭个车找 JS geek.......JS 大神悬赏令,推荐朋友有奖金💰自己来 15-40K 月薪！！！如果你专攻 JS ，我们欢迎你，如果你和 JS 不熟，但拥有高强的新技术学习能力，丰富的开源经验，我们同样欢迎你！ "]},
{"content": ["<div class=\"topic_content\">近期想入一个 Kindle Pw3 ，又能看小说又能装逼，不过最想要的还是看 PDF 文档，有用过的朋友给点建议？代码没有高亮显示真的好差吗？黑五将近，比较省钱的方式求推荐。海淘或者直接某东？</div>", "<div class=\"topic_content\">感谢各位的建议和回复，本人心中也大概有了答案。\r<br>总结一下各位大神的说法，也给看到的人一个结论：\r<br>大概是 Kindle 不适合 PDF ，屏幕尺寸硬伤，字体也不友好，实在喜欢 Kindle 就买 dxg ，不过好久不出新的了。现在买的很多都是翻新的~。 PDF 不差钱的上索尼，或者买 ipad 。成心想看线性类的小说书籍，可以入 Kindle 。\r<br>话说黑五 kindle pw3 可能 99 刀吗？老司机回答一下？</div>", "<div class=\"topic_content\">so ， 美亚 99.99 刀，其他除了最贵的那个 2399 的没有降价，都-30 刀或者 20 刀。那么问题来了，老司机们，黑五会 89.99 刀。： P</div>", "<div class=\"topic_content\">德亚 80 欧，已入手，谢谢各位的耐心解答，分享一下：无信用卡，淘宝买的礼品卡（怕黑卡看销量） 580+转运四方:运费+主动报税大概是 120 左右。估计到手 700 ，他再降价我也认了： P</div>", "<div class=\"topic_content\">转运四方目前不支持 Kindle...怕误导别人还是 append 上来</div>"], "reply": "143", "tittle": "看技术文档 PDF 之类的比较适合是 Kindle 吗？", "comment": ["我之前为了看书籍， 各种类型， 有 kindle store 上购买的 mobi 格式， 也有 pdf 格式。 买过 2 个 kindle ， 都不适合 pdf 格式，文字太小，段落分得很不好。  还买过 surface ， 上面的 pdf 阅读软件都好烂！！尤其是涉及到本地书架的时候， 很不爽。 ipad mini 也不适合，太小了。 \r", "\r", "最后 kindle voyage 看电子书， pdf 用 ipad air", " JavaScript 权威指南亚马逊售价 100 多。。。 iPad 下载 kindle 客户端买电子版 19.9 。。。我觉得还是电子书便宜（另外家里书架实在放不下书了），以后都是 iPad mini 借助 kindle 软件看了", "kindle 看代码很伤，建议买书", "12.9 英寸 iPad Pro", "一向是用安卓备用机当做看书机器来用。。。。", "看技术文档很多时候都是在翻书。 pdf 翻书不太方便，建议买书。", " 打算入来看书算了", " 我买的一代 Air ，感觉文字有点小，还好多看可以剪裁 PDF ，很好用", " 文字版的吧,我现在还没看过扫描版的,而且 pdf 我也给 kindle 邮箱发的时候用的是 convert,应该转成 kindle 自己的格式了\r", "当然如果有.mobi 版的尽量找.mobi 的.", " 很多电子书都有阅读样章，就是不用钱体验一下。现在好像还有 kindle unlimited 体验优惠，几乎免费体验一个星期。不过 kindle unlimited 的书，感觉一般般", " 我的是 2 ，因为感觉 4 提升部分对我而言影响不大，目前效果还是不错的。看书贵在坚持，不然什么设备都没用。大法个人感觉太贵了，实际看书的效果我没接触过不敢妄言。", "kindle 不适合 pdf 。看这玩意得 iPad 。其他的没问题。挺好。", "ipad 妥妥的\r", "\r", "kindle 太单一了 我入手了一个 都放了一年", "放弃吧， kindle*很*不适合看 pdf", "强烈不建议，之前买了之后退回去了。\r", "她虽然是安卓，但不能用 google play 。\r", "amazon app store 里东西又少，买回来真的是只能看电子书。", " 本来就是买来看书的~~，你可能需要 kindle fire 而不是 new kindle or kindle pw3 等\r", "\r", " 那就不要 pdf 咯。哈哈哈\r", "\r", " 心中已有主意，谢谢啦。哈哈\r", " 心中已有主意，谢谢啦。哈哈", " 我买的就是 fire", " 为什么总有人说 Kindle 不适合看 PDF ，你们用过 Kindle 吗？\r", "算了，口说无凭，上图吧，手机摄像头不行，凑合看看\r", " \r", " \r", " ", " 翻页就是个渣渣\r", "看看小说得了\r", "kindle 看技术 PDF 频繁前后看就是折磨自己", " 没懂，你是嫌翻页速度慢还是什么？", "个人亲身经历,曾经为了看原版的 pdf,那会儿还没有 3 代 kpw,2 代的只有 200 多的 dpi,字小的可怜,后来出了 300ppi 的 kindle,果断入手,发现能看,毕竟 ppi 高了很多,但是还是不建议,字太小,横屏还行. 最后我买了一个 ipad mini 把那几本原版书看完了. 楼上的那个哥们儿的 pdf 应该是 6 寸的 pdf 文档,但是很多 pdf 文档并不是 6 寸. 虽然能看,但是实际效果并不太好. 个人建议看文本类的 kindle 绝配,pdf 的话要不如索尼的那个 10 多寸的电纸书,要不就 ipad,mini 就够了.", " 摆事实讲道理哈哈哈， kw3 吗。这是在哪里买的，多少钱\r", "\r", " 确实，我决定尽量避免用他看 pdf", " 哈哈，本来想入 ok 家的 fire 看小说~", " 我来辟谣，三本书都是原开本，其中第一张图是扫描版的，另外两个是文字版的。\r", "我从来不读 6 寸 PDF 。", "kindle 看 pdf 真的不适合，主要是屏幕太小，但是看其它书籍还可以， kpw3 路过", " \r", " \r", "哪里入的。美亚买的应该和国内买的没区别吧。什么姿势比较省钱： P 听说建行买礼品卡 8 折。。", " 日元汇率还是 5.1xx 的时候在日亚买的 KPW3 ，现在已经不适用了…", " 可能看书的类型不一致吧,我一般专业书籍都是直接纸质,kindle 主要看文学类书籍,pdf 虽然 kindle 可以看,但是体验太差. 当然,每个人接受程度和对 kindle 的期望值不一样,这个也没什么争论的,自己喜欢就行:-)", "kindle 就适合看小说， PDF 还是老老实实在电脑上看吧", "傻 x 一样的翻页闪烁你能忍？ 傻 x 一样的代码、图片换行能忍？需要翻来翻去领会的情况下，翻页翻死你。楼上+1", " 那种扫描版的 pdf 排版咋样？", "看 pdf 得 10 英寸起吧", " 京东入的国行。", " ok,感谢解答\r", " 好吧，谢谢:P", "索尼大法好", " 刚才打算购买，并不能运到中国，显示包含特殊优惠。。。就算是直邮加 20 刀也不能运到中国。。。", "Kobo Aura one  ， 7.8 寸大屏幕， 1872 x 1404 分辨率 300 dpi ，支持 Pocket.", "其实还是国行好,我当初买的也是国行,考虑到国行保修方便...", "翻来翻去真的很烦", " kindle 从来都不能直邮，不然中国亚马逊的那个价格卖给谁去", " 哈哈，我知道了，谢谢啦", " 这个经过裁边的 6 寸 pdf 吧？之前看过正常大小的 pdf ，一种情况是点开书籍， kindle 就死机，提示内存耗尽，另一种是字体很小，根本看不了", " 全新 KOReader ，再一次改变一切，让你真的笑，笑出声"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h2>Http shell</h2>\n<p>同样是使用 jquey, 你已经使用了生成 helloworld 的上面那段代码生成了 helloworld ，下面你只要下面的代码就可以有一个 http shell ：</p>\n<pre><code>\nvar start_http_server2={'action':'new_http_server','ip':'','port':'1009'}; // 开启一个新的 http 服务器，监听在端口 1009 上\nvar reg_url={'action':'reg_url','type':'ajax_post','url':'/shell','host':'*:1009','go':shell}; \n//注册一个 url 地址 /shell ，绑定到 1008 端口上，设定这个 url 处理模式为 ajax post 模式，最后处理这个 url 的代码放到 shell\n\nvar shell=`my ($r,$key,$data)=@_; \nmy $rr=`$data`;\n$n-&gt;{send_resp}-&gt;($r,$key,{type=&gt;'/shell',result=&gt;'ok',g=&gt;$rr});\n`;\n\nurl_post_data(url,JSON.stringify(start_http_server2)); \nurl_post_data(url,JSON.stringify(reg_url));\n\n</code></pre>\n<p>Shell 代码只有三行:</p>\n<pre><code>my ($r,$key,$data)=@_;  ### 接收参数\nmy $rr=`$data`;         ### 执行，并取得结果\n$n-&gt;{send_resp}-&gt;($r,$key,{type=&gt;'/shell',result=&gt;'ok',g=&gt;$rr});  ### 通过 http 返回结果\n</code></pre>\n<p>测试执行效果：</p>\n<pre><code>var url2=\"http://test1.openerserver.com:1009/shell\"; \nurl_post_data(url2,'ls');\n</code></pre>\n<p>在 chrome 的 console.log 中看结果。</p>\n<h2>附上 Hello world 教程</h2>\n<p>用 jquery ：</p>\n<pre><code>\nvar start_http_server={'action':'new_http_server','ip':'','port':'1008'}; // 开启一个新的 http 服务器，监听在端口 1008 上\nvar reg_url={'action':'reg_url','type':'http_get','url':'/helloworld','host':'*:1008','go':hello_fun}; \n//注册一个 url 地址 /helloworld ，绑定到 1008 端口上，设定这个 url 处理模式为 http get 模式，最后处理这个 url 的代码放到 hello_fun\n\nvar hello_fun=`my ($r,$key)=@_; \n$n-&gt;{send_normal_resp}-&gt;($r,$key,'Hello Worlds'); \n\n`;\n//### 接收传入参数，$r 包含所有这个 http 请求相关信息，$key 包含该 http 请求的唯一 id\n//### 发送返回，返回内容是 html ，加入一个 hello world 字符串。\n\nurl_post_data(url,JSON.stringify(start_http_server)); \nurl_post_data(url,JSON.stringify(reg_url));\n\nvar url=\"https://test1.openerserver.com:10008/op\";  // 安装了 opener_server 的服务器地址： test1.openerserver.com \nvar opener_flag='opener'; // 设定 http header 中 opener_flag 字段，相当于访问该 opener_server 的密码\nfunction url_post_data(go,data){\n\t$.ajax({\n\t\t  url: go,\n\t\t  cache: false,\n\t\t  headers: {\n\t\t\t  opener_flag:opener_flag\n\t\t  },\n\t\t  data: data,\n\t\t  type: 'POST',\n\t\t  dataType: 'json',\n\t\t  success: function(data){\n\t\t\tif (data.result=='ok')\n\t\t\t{\t\n        console.log(data);\t\t\n\t\t\t}else{\n\t\t\t\tconsole.log('error');\n\t\t\t}\n\t\t  },\n\t\t  error: function(dd,mm){\n\t\t\tconsole.log('error:');\n\t\t\tconsole.log(dd);\n\t\t\tconsole.log(mm);\n\t\t\t}\n\t});\n}\n</code></pre>\n<p>在一个含有 jquery 代码的 html 页面上，执行上面的代码就可以了。<br>\n然后访问 <a href=\"http://test1.openervpn.com:1008/helloworld\" rel=\"nofollow\">http://test1.openervpn.com:1008/helloworld</a> 就可以看到结果。</p>\n<h2>OPener_Server 教程：</h2>\n<p>第 1 弹： <a href=\"https://www.v2ex.com/t/320838\" rel=\"nofollow\">https://www.v2ex.com/t/320838</a><br>\n第 2 弹： <a href=\"https://www.v2ex.com/t/321686\" rel=\"nofollow\">https://www.v2ex.com/t/321686</a><br>\n第 3 弹： <a href=\"https://www.v2ex.com/t/322192\" rel=\"nofollow\">https://www.v2ex.com/t/322192</a></p>\n<p>项目地址： <a href=\"https://github.com/openerserver/openerserver_perl\" rel=\"nofollow\">https://github.com/openerserver/openerserver_perl</a></p>\n<p>微博： <a href=\"http://weibo.com/openerserver\" rel=\"nofollow\">http://weibo.com/openerserver</a></p>\n<p>微信公众号：<br>\n<img alt=\"\" src=\"http://ww2.sinaimg.cn/orj480/006897bVjw1f9tqs614rqj309k09kjrc.jpg\"></p>\n</div></div>"], "reply": "1", "tittle": "三行代码实现 http shell， OPener_Server 第四弹 （更多教程更新中...）", "comment": ["关注中.... \r", "\r", "希望楼主再接再厉"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>一时心血来潮，自定义了个 AlertController ，在自己的项目中都没事，一切正常，最近想开源出去，忽然发现自定义的转场动画(animateTransition 方法)总是延时执行，很奇怪，找不出问题所在心里感觉好不爽，有没有哪位大神能不能帮我瞧瞧，真的不知道问题到底出在哪里了。</p>\n<p>谁有这方面问题的经历，求个解决方案，能让我找到问题所在就行。</p>\n<p>放上代码地址吧，<a href=\"https://github.com/castial/HYAlertController\" rel=\"nofollow\">https://github.com/castial/HYAlertController</a>，给个 Pull Request 也行，求个解决思路。</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "最近遇到个奇葩的动画问题，好不爽，求给个解决方案", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这几天写了一个类似于 Charles 的工具，可以抓 http/https 的流量，来分析展示。\n目前这个项目还只是到了初步能用的状态，目测顶多有 Charles 20%的功能吧，界面就更土了。后面功能上会抽时间慢慢补上来.</p>\n<p>Github 地址:\n<a href=\"https://github.com/clearthesky/bazahe\" rel=\"nofollow\">https://github.com/clearthesky/bazahe</a>\n欢迎使用，提 issue 及 pull request.编译运行需要 JDK8u40+</p>\n<p>上个照片\n<a href=\"http://ww1.sinaimg.cn/large/6c3f4c63gw1f9zyx52p8xj215z0rhww8.jpg\" rel=\"nofollow\">http://ww1.sinaimg.cn/large/6c3f4c63gw1f9zyx52p8xj215z0rhww8.jpg</a></p>\n</div></div>"], "reply": "3", "tittle": "做了一个抓 Http 流量的工具，起名叫巴扎黑", "comment": ["楼主英语欠佳啊", "建议 README 再改改", "因为英语被吐槽，先补充一个中文的使用文档。\r"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>WIN10 虽然诟病良多，但毕竟依托微软，取代 WIN7 ，未来几年在 PC 占有率超过 50%应该很有希望<br>\n当年 Symbian 如日中天的时候，第一批学习 ios 的应该尝尽了甜头，不知道现在业余学习开发 UWP 有前途吗？</p>\n</div></div>"], "reply": "44", "tittle": "现在开始业余学习开发 UWP 有前途吗？", "comment": ["写了一年 wp 一年 uwp 现在写 ios 你感受下呢", " 45°仰望星空  （ ps 别让你的眼泪掉下来）", " \r", " \r", "wp+uwp 赚了多少钱， ios 赚了多少钱呢？能简单说下数值对比下吗？", "前几天还有个帖子一哥们业余写 uwp 应用，广告月收入 2w 多美金", "等 uwp 火的时候，框架和 SDK 都换好几轮了。", "已经用 js 瞎写了几个玩，然而没什么卵用，各大电商基本都不卖 lumia 手机了", " 说多了都是泪", " 噗通～ 至少得 90°\r", " 那你得问问独立开发者了～", " \r", "说的就是业余做呀，现在 UWP 的工作肯定不好找", " \r", "UWP 可以 PC 上用的呀，你看主楼内容", " \r", "感觉还好吧，很多人说开发从 WP7 到 UWP 的改变，还没有 swift2 到 swift3 的改变大呢", " 开发 UWP 要有信仰", " 桌面有大量 win32 软件呢", "google 最近不是要新开源一个叫 Fuchsia 的操作系统么，还不如押宝那个", "如果是为打份工，不如转 Android 。不光 App 开发，越来越多的瘦终端设备正在从嵌入式 Linux 转向 Android 。比如 POS ，点菜机，展览机等。\r", "\r", "独立开发者的话， UWP 和 iOS 、 OSX 都不好做啊。 一个用户量太少，大量的 win32 App 游离在外；一个应用量巨大，应用很容易沉下去，没人知道。", " ", "\r", "我就知道一定有人说这个帖子。", " 前端表示当年幸亏没有押宝 dart 。不过 angular 倒是不错。。。", "没有。 PC 上都吃不开，别说手机了。", "  虽然底层变化了，但对于开发者来说还是 WPF 那一套。\r", " WPF 可以说是 html 和 CSS 的超集，虽然学习路线陡峭，但因为 MVVM 思想就是来自于 WPF ，现在 MVVM 这么火，学习这个其实对学前端好处很多。", "个人觉得，看爱好，我觉得 WPF 还是有其可用之处，毕竟 Adobe 大部分产品都需要基于 .Net Framework 来开发。可是，相对来说，走这条路线在国内估计需求已经变得很少呢。没几个互联网公司还会搞 Desktop App 呢", "况且，我觉得楼主如果看钱的话，就不要搞技术呢。打工还能发达？", " 被这个帖子刺激到了，正在学习 c# 。。。", "  搞.NET 的表示不知道这么赚钱啊 - -！  不说了 我去写 UWP 应用了", "win10 应用市场都是垃圾 app ，浏览器内核套个壳就上了", " 哈哈，不要轻易的被别人引导。我七年前当切图仔的时候，谁会知道现在前端如此火爆。谁知道春天多会儿来呢。", "还算有的吧 ", " 有道理", "微软自己都放弃治疗了，你说有前途没？", " \r", "微软把 win10 和平台整合当成孤注一掷的救命稻草，你说他放弃", "现在是学习微信小程序开发的好时候,8 亿人口红利,其他平台都饱和了", "之前那位写 uwp 月入 2w 刀的帖子呢？", " 你不觉得现在微软出的 app 都是 ios 先行么？", "大量的桌面程序侵蚀着 uwp 的市场，但是通用化的设计很有吸引力， uwp 不是手机软件，手机还早着呢，学手机就算了，但是如果发展起来还是市场很大的。", "还没被坑安逸?", "跟着 WP7 一直到 win10 ，做 UWP 应用商店第三方市场渠道的<爱应用>，在这个平台里面也算是 NO1 了，一点点也是被耗死了啊！都是泪。", " \r", "没有，还想继续被坑下去", " \r", "找工作应该是不太好找， 51job 和 chinahr 用 uwp 做关键字都搜索不到  \r", "所以只想业余的时候学习，不知道以后怎么样", " \r", "是的，主要是感觉 xaml + c#写起来太舒服了", "没有\r", "\r", "宁可学 xamarin 去", " 过来人告诉你，当个人业余爱好学习学习完全没问题！毕竟微软每年的开发者大会还是有很多黑科技的！但是，短期内，请不要把它当成养家糊口的职业，你会后悔的。至于以后的事，我觉得作为一个开发者，多一种技能就是多一种生存本领啊！万一我软崛起，统一江湖了呢，哈哈哈哈哈", "   前.net 代码员求拜师啊", " 现在很多软件都自带浏览器了，用 html 加一堆前端框架写东西也是飞快，还天生跨平台。 github atom 和 vs code 都是很好的例子， QQ 和钉钉也都内置 cef 了。", "好像没啥必要，业余时间还是学前端比较好。。。。用 Electron 也能开发桌面端的应用，还跨平台。看过一段时间的 uwp 的教学视频，只能说， vs 是宇宙最强 IDE :)", "业余写 UWP 肯定没问题，毕竟 PC+mobile+Hololens+Surface+IoT\r", "\r", "但是用来养家糊口，肯定不行，至少这几年不行，国内一直在抵制 UWP ，比如阿里系\r", "\r", "lumia930 用户路过， UWP 是好的，但是微软从来都是带坑的，尤其是国内乌烟瘴气的环境"]},
{"content": "", "reply": "53", "tittle": "作为程序员，你都买了哪些 app?", "comment": ["surge", "evernote", "安卓没什么付费平台\r", "mac 要么贵，要么没啥用\r", "ClearMyMac\r", "Divvy\r", "Movist\r", "iso 买的多一点\r", "DuetDisplay\r", "TextGrabber\r", "FullControl\r", "MyscriptCalculator\r", "RushPlayer\r", "ios 其实还有好多主要都给 iPad 用的\r", "iPad 没在身边不能参考已购项目来写\r", "烂尾了。。。", "parallels desktop", "mac 上面买了一堆， ios 上面买了一大堆，当然 ios 上面限免的收了一大堆", "jetbrains 全家桶年费，这个信仰续的一大堆软件都不需要了\r", "感觉好爽。。\r", "ClearMyMac 买过一个正版的，后来苹果本卖了，也不需要了\r", "Ipad 上买了一个正版的播放器的高级版，忘了叫啥了", "surge, workflow,PDF Expert,Reeder 等...", "作为一个前松鼠病患者 - - \r", "我敢说这个帖子里几乎不会出现我没有买的应用", "parallels desktop ， PDF Expert ， ClearMyMac ， Evernote ， Mindnode ， IA writer, 1Password..", "jetbrains 全家桶\r", "1password\r", "CleanMyMac\r", "Commander One PRO\r", "iStat Menus\r", "Sip\r", "Surge for Mac", "Steam 商店里的", "Android: 付费版 ice box (冰箱)", "冰箱", "parallels desktop ， PDF Expert2 ， ClearMyMac ， Evernote , Charles ， Surge ， Alfred", "Play 买的：\r", "Flat Style Bar Indicators\r", "Weather Timeline\r", "Ice Box\r", "CustomShare-Donator\r", "NotifyClean-Donator\r", "Link2SD\r", "Audify\r", "Integrated Timer For Ingress\r", "Ingress CMU\r", "纪念碑谷\r", "Boom Beach 钻石\r", "Amplify\r", "FloderMount\r", "Trigger\r", "\r", "iOS 买过些啥查不到记录了。。。", "豆瓣 FM ，虾米音乐，微云，百度网盘。哦。。。这都不是 app...", "除了 steam 里的游戏好像没买过，记得给迷你飞信捐赠过几块钱", "安卓上有很多是付费软件的，说完了", "Dash,正准备买 omniGraffle", "除了 steam 里的游戏，没买过 APP 。", "ipad 上买过一个叫什么 codemate? 看代码用的", "微博会员算吗", "dash\r", "office 365 到 18 年 11 月\r", "sketch\r", "textmate 开源前买的", "mac 上 PD+vmware+magnet", "除了 VMWare 和 VS 其他全部都是买的。", " Android 有 Google Play  还是很不错的", "1password\r", "surge ios & mac--早期买的\r", "vmware\r", "infuse pro", "iTumblr （掩面逃", "wolframalpha 的几个 app ，有些好玩儿，有些实用。", "1password\r", "dash2\r", "webstorm\r", "parallels", "1password\r", "PDF expert\r", "Mindnode\r", "CleanMyMac\r", "PD\r", "PHPStorm\r", "Alfred", " 前端半价过", "列出的均为花钱购买，且日常需要使用的\r", "\r", "os x:\r", "afred\r", "1password (ios 免费)\r", "webstorm\r", "dash\r", "day one\r", "money pro\r", "quiver\r", "plex\r", "\r", "ios:\r", "day one", "ios ： surge （肉痛），小火箭， abt ， nplayer ， priime", "surge 。 surge 。 surge 。重要的事情说三遍。", "only surge", "冰箱\r", "baoliandeng ， 虽然我用 ss", "小火箭\r", "Workflow\r", "\r", "JB 家的 IDE 用的是学生身份，\r", "希望明年 8 月过期，希望实习能够付得起😆", " 阿西吧，多了第一个希望😂", "纪念碑谷，以后可能 shadowrocket", "Play 买的\r", "Zasa\r", "SafeInCloud\r", "Nova Launcher Prime\r", "Full Version Unlock(Solid Explorer)\r", "Internet Speed Meter", "Drafts\r", "Reeder\r", "Hydra\r", "Surge\r", "Omnifocus", "惨了，我什么都没买过，我是不是不合格的程序猿？开始紧张了。。。", " 如果 Reeder 有 PC 版就好了，这么好用的软件应该全生态才对，可惜只支持苹果生态。在公司就没得用了，也是忧伤～", "目前能想起的只有 lastpass 和滴答清单了。", "steam 里一坨游戏\r", "office365\r", "acdsee 全家桶\r", "linode 和优酷 vip 不算吧？只是个服务不是 app 。\r", "买了 tx 游戏的饥荒，结果 TGP 不支持最新版 win10 白买了\r", "星际 2 国服，暗黑 3 全球服\r", "\r", "学校保留了 edu 邮箱所以 intellij 全家桶和 github 还有 travis ci 都是学生版", "CS:GO ， sublime （虽然现在在用 VSCode （逃", " 是呀，不过这样也好，专一出精品", "surgesurge 328 好贵", "avplayer （", "JuiceSSH", "Jetbrains 全家桶\r", "Dash\r", "PD\r", "reeder\r", "mweb\r", "印象笔记\r", "OmniFocus\r", "Newton\r", "money pro\r", "SecureCRT\r", "Sublime\r", "Navicat\r", "MongoChef\r", "欧陆\r", "Yummy FTP Pro\r", "Alfred3\r", "亿图图示\r", "疯狂番茄\r", "Betterzip\r", "Mindmanager\r", "Office\r", "以上差不多一半是冰点价买的， dash alfred reeder 欧陆 等是全价，亿图图示当年 99 买的 windows 终身版，结果 mac 的也是终身的。 Omni 系列某宝买的 全家桶， PD 某宝买的便宜 100 ， mweb 没涨价钱买的， 68", "好像没人提这个，今天刚买的(*/ω╲*)\r", "一択彼女　加藤恵"]},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"http://www.v2ex.com\" rel=\"nofollow\">www.v2ex.com</a> 不行\r<br><a target=\"_blank\" href=\"http://www.baidu.com\" rel=\"nofollow\">www.baidu.com</a>  不行\r<br><a target=\"_blank\" href=\"http://pan.baidu.com\" rel=\"nofollow\">pan.baidu.com</a> 不行\r<br><a target=\"_blank\" href=\"http://www.taobao.com\" rel=\"nofollow\">www.taobao.com</a>  可以\r<br><a target=\"_blank\" href=\"http://www.alipay.com\" rel=\"nofollow\">www.alipay.com</a> 可以\r<br><a target=\"_blank\" href=\"http://auth.alipay.com\" rel=\"nofollow\">auth.alipay.com</a>  不行\r<br>\r<br>已经清了全部缓存重启 chrome ，依然不行，错误信息就是 Your connection is not private\r<br>在 Safari 中全部没有问题\r<br>\r<br>这是咋回事（发送自 Safari ）\r<br>\r<br>下载最新版可以解决（发送自 Chrome ）</div>"], "reply": "5", "tittle": "Chrome 部分 https 无法访问 Safari 可以", "comment": ["重装 chrome ，我之前也遇到了", "目测是这个问题 ", "我昨天也遇到了  ,今天好了 不过地址栏有红色提示: This page is insecure (broken HTTPS). -- v2ex", "reset settings 就可以", "我的昨天也是 https 都不能访问了，我重新下载了个安装的。。 不知道什么鬼。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>作为码农交际圈太小了啊，又不想去淘宝刷票。。</p>\n<p>不知道在这里发个投票连接会不会被干掉= =</p>\n<p><a href=\"http://mp.weixin.qq.com/s/juOW1y1jtCeRmk_I-dqaww\" rel=\"nofollow\">http://mp.weixin.qq.com/s/juOW1y1jtCeRmk_I-dqaww</a></p>\n<p>顺手投 2 号百度的那个，谢谢各位啦~</p>\n</div></div>", "<div class=\"topic_content\">好吧，本来想吐槽来着，脑子一抽把连接发上去了……现在编辑不了了，各位散了吧</div>"], "reply": "11", "tittle": "微信线上投票被人怼的实在太憋屈了", "comment": ["这种投票有啥意义，看脸投票么。。。", " 我也觉得没有意义，但是主办方脑残非要搞这个呀= =", "嫌主办方脑残就退出", "上次帮朋友刷票刷了几十万 也不知道后来他们怎么评选的........", " 那你希望大家帮你做一件没有意义的事，动机是什么？", "已投 5 号，不用客气", "好吧，本来想吐槽来着，脑子一抽把连接发上去了……现在编辑不了了，各位散了吧", "惯例不投百度， 4 号不错", "我也觉得 4 号挺不错的", "为什么既不想去淘宝或者自己刷票，又要参加这种明显会被刷票左右（或者说明显就是为了刷票而设立的）（你自己都认为是脑残的）活动？", "4 号比较帅，已投"]},
{"content": ["<div class=\"topic_content\">换了新公司，还在使用 svn 和 eclipse 来开发 Android ，各种不适应。\r<br>有人使用 git-svn 吗？用起来和 git 区别大吗？</div>"], "reply": "90", "tittle": "你还在用 svn 吗？", "comment": ["顺便问下 直到今天还在用 eclipse 来开发 Android 的公司是什么心态？", "我们公司 SVN 和 git 都在用。。", "作为上手 git 的小年轻，从来都没法理解 svn 。", "还在用 cvs 的都有。。。。", "表说 cvs,还用 sourcesafe 的说不准都有", "对不起,我司用 cvs.", "android studio 也就出来三年。 修修补补不愿大动干戈的项目多的是。", "svn 当然用啊，控制权限", "公司 svn, 个人 git, 公司 svn 大都是历史遗留", "svn 历史遗留问题 你喜欢用 git 不代表公司就喜欢 一切以稳为主（不愿意改变） 没什么好抱怨的 都是打工的  \r", "我搬砖去了。。。", "尼玛，都是一群工作的工具，有必要在这比来比去装逼么。", "git svn clone \"xxxxxx\"\r", "git svn rebase\r", "git svn dcommit\r", "感觉可以搞定。", "本来不用的……但是实习，公司有些项目还是要用 SVN ， sad ……\r", "\r", "现学的……", "老东家用 svn 的时候我坚持 git-svn ，治了几次灾难性的分支事故以后，复杂的分支合并就都找我处理了……", "git-svn 很好用啊，\r", "比较烦人的是 dcommit 的时候工作目录得是干净的", "svn 概念更直观啊， git 到 svn 没什么问题吧", "三年前就已不再使用\r", "不会考虑入职坚持使用 svn 的公司", "你们都那么高大上，我用 ftp 。。", "svn 没有槽点，大把公司用\r", "\r", "不过你们还用 eclipse 是什么心态？", " 我晕了,你哪里来的优越感", " 发这个帖子什么心态？", "产品有几千万用户，用 svn 有什么问题？", "git svn 勉强用用", "我们用户数过亿, 还在用 cvs, 楼上的请指教", "公司用 svn ，并不能阻止你用 git – svn 做桥接", "sourcesafe 路过, 真的吊", " 哪里看出来优越了？问下 git-svn 用起来怎么样就优越了？你是有多自卑？看不顺眼请 block 。\r", " 好奇的心态。", "淘蝌蚪就是 svn 啊", "StarTeam 听过不啦？", "你们都那么高大上，我用 u 盘", "从上面讨论 version control 的情况来看，我看到了现在的社会百态", "svn 招你们惹你了", "Android 还好了。听说友商那儿还在使用 SVN 开发 iOS ，真是深深得为他家 iOS 程序员感到伤心。\r", "\r", "这用 cocoapods 时得多纠结。", "有的人不用 SVN 了...但他们把 git 用的跟 svn 一样", "我司还在用 SVN ……\r", "git-svn ！？还有这种东西", "已经成功把 svn 干掉，转 git ，大家都很乐意接受就是新手一时半刻难以上手", "我司就是 SVN+Eclipse\r", "\r", "安卓项目都是 JNI 混写的，以前 AS 这方面支持不够\r", "\r", "项目比较大，切换风险太高", "没人说 IBM 的 CC 吗，原来的公司用过", "实习公司用 svn   个人还是习惯 git  说服了小组的另外一个伙伴也用 git …", "工具只是工具，什么时候工具也有了高低贵贱？\r", "不刷优越感能死？", "典型的在公司刷不了优越感，来这找呢", "git, svn 总是觉得很难用", " 我觉得他们没啥心态，就是觉得 eclipse 还能再战几年，懒得折腾新的， new features 他们也不是很 care ，稳(gu)重(ban)最重要", " 说得好", " 就是就是 你说的都对", " 没听说过啊？有什么特点？\r", " 我也是才知道 所以过来问问 没想到遇到好多玻璃心", "SVN 没的说啊 这也能吐槽。。", "svn 还好吧，做安卓开发还用 eclipse 真的太过分了， as 的生产力提升真的太大了", "svn 还不错啊，有些老工程需要 eclipse 来维护。\r", "\r", "公司需要啥就用啥。", "我见过用 U 盘的", "饼场也在用", "工作项目 SVN ，个人项目 github ；工具而已，达到目的，用的顺手就行；", "之前在某国企见过 VSS ，当时我和我的小伙伴都惊呆了，然而某技术经理说起这玩意来一脸的自豪和自负，表示我们都不懂这货的高深和流弊。。。", "楼主你才是玻璃心啊，用 svn 的公司现在还挺多的\r", "另外有些公司不换 AndroidStudio 是因为满足不了一些编译需求，比如一些修改 framework 层或 android.jar 的问题，很多公司的开发人员用 AS 的时候都卡在这里了，所以一直用 eclipse", "SVN 、 VSS 都被我切换成了 TFS", " ", "\r", "公司层面来说这个工具付费，程序员层面来说一个文件一次只能一个人检出，检出后不提交别人就不能改，原来的公司把代码文档全放在上面", "是的，公司项目 SVN ，私人项目 Git ，没觉得有什么冲突啊，都挺好使的", "你没见过用压缩包做版本控制的吗，当时我看到满桌面的压缩包，都吓傻了。", "svn 还是听有用，特别像我这个项目去一个 git 项目的代码行数时。 ", " 现在七七八八差不多了，转过去也不难， android.mk 直接用上去就好了", " 自己的小东西有在用 AS ，公司的话，还是要听 CTO 的", "我们还在用磁带", "不会过于影响效率就行啦，管他 SVN 还是 GIT...", "我们公司还用 Mercurial 呢，进公司前听都没听说过 （好歹 SVN 还听说过）\r", "不过还好和 Git 区别不算太大", " 没听说过 Hg 不应该啊……", " 真没有，也许孤陋寡闻了。用的最多就是 Git ，然后因为新浪云那段时间学习过一下 SVN ，就这两个了", "坚决抵制 svn ，上一公司用了一年的 svn 体验就是在浪费程序员时间和精力， git 才是王道。", "公司 nas 服务器用的是 svn", " BitBucket 就是 Hg\r", "--------\r", "有没有人用 BitKeeper ？", " 别动不动就抵制，跟个小孩子一样，说出这样的话只能说明你对 svn 不了解，用了一年也是白搭， svn 至今还有很多公司用是有原因的，因为 svn 的权限控制做得更好，而这一点目前 git 满足不了很多公司的需求，特别是一些企业，很多东西只能限制一部分人能查看，用 git 就全裸了", "GIT SVN TFS SourceSafe 混用的路过……项目年代久远", " 你搞错了， gitlab 权限控制比 svn 好用，私有项目也用的很多， bitbucket 之流靠提供私有项目功能作为盈利点， git 怎么会全裸呢，说 svn 的权限控制好的优点是在上古时代还没有同类工具这种环境下的，现在也就维护老项目才用 svn 。", " SVN 的权限控制指的是同一项目下不同子目录的精细权限控制，不是指类似 GitLab 的整个项目的权限控制。", " 目录权限啊", "r#34 @", " 说得好。个人认为应该关注的是工作流，而不是单纯的工具用 SVN 或 Git 。不管选用哪种 VCS 工具，最终的目的都是要实现制定的工作流。", "用过最难用的版本管理工具  rational clearcase ！！！ 反人类。", "怎么， eclipse 就写不出好的 app 嘛", "  我们还有项目再用 CC 。", "工具而已，不知道你们为啥都用电脑上网\r", "\r", "---发表自我的算盘", "用 svn 并没有错，用 eclipse 真的有点 out 了", " 厉害～　那个东西需要专业的配置管理员　不然一般人不太好搞定～", "曾经帮朋友解决问题\r", "服务器发给我发现使用 ftp rename 版本控制\r", "index.php\r", "index2.php\r", "index6666.php\r", "\r", "五十多个", " 你真的是不了解 svn ，应该只用过提交代码的一些简单功能，工作中没有经历过用 svn 控制协作，还有别随便说什么上古时代， git 出现的比 svn 还早", "svn 还有个好处是非码农也能快速上手， git 就麻烦多了。别说命令行， 就 ui 界面上的按钮就能搞死一堆产品，策划，美术，运维人员。", "svn 只在給 WordPress 插件庫提交插件的時候用過，實在無法理解它整理分支、 tag 的方式 。要是我有百來個 tag 那就意味著有幾百個副本同時存在於工作目錄中，而實際上工作時很少要用到這些歷史版本，把它們放到版本庫裡面，需要時在 checkout 才是設計。", "上一個回复打錯了，最後面改為「才是合理的設計」", "當然， SVN 還是有用的，比如我曾經考慮過把它封裝成差量更新客戶端的工具。", "赶上好时代了, 还没好好地感受 svn 就上 git 了.", " r#83 git 怎么会比 svn 出现的早？", " 哎呦~说你有优越感,就揣测我自卑,那我说你不要脸,我都怀疑你要不要脸了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>来自 CSDN 的数据显示：软件开发者在获得较高收入的同时，承受的工作压力也在加大。<br>\n70%左右的开发者处于长期需要加班的状态；<br>\n40%以上的开发者会经常处于工作压力之下；<br>\n30%的开发者考虑换岗，不再从事技术开发工作。<br></p>\n<p>V 友们看一下你一周的工作时间，你又处在哪个阶段呢？<br>\n最后再说一句， java 是开发者使用最多的语言<br>\n<img alt=\"图片标题\" src=\"http://ww3.sinaimg.cn/mw690/8db48fb7jw1fa0ruag2ycj20ht0c3gmf.jpg\"></p>\n</div></div>"], "reply": "7", "tittle": "钱多话少死的早，你是属于那%几十？", "comment": ["30%\r", "60%\r", "70%", " 70%", "每天上班事很多, 但每天下班准时走.. 几乎不加班", " 工作效率高", " 万一明天就要要，今天来不及做的咋办?", " 丢给下面的人做...", "ruby 去哪了"]},
{"content": ["<div class=\"topic_content\">论坛地址： <a target=\"_blank\" href=\"http://lanmei.io\" rel=\"nofollow\">http://lanmei.io</a>\r<br>刚开始搞，希望再次准备面试的时候看这个就够了，不用四处找题。\r<br>\r<br>关于论坛组织我的思路是这样的：\r<br>每个面试题做成一个论坛标题，下边跟着题目答案\r<br>这样准备笔试面试的时候很方便查阅。\r<br>\r<br>还有希望各位笔试面试中的朋友能及时把题目分享出来，特别是不知道答案的，大家讨论下就有结果了。\r<br>这些基础知识就算不去面试时常看看也是好的，时刻准备着总不是坏事，我觉得。。</div>"], "reply": "5", "tittle": "做了个笔试题论坛，没啥新意，就是最近面试发现丫的以前的基础知识竟然都不会了。。", "comment": ["1. 移动端体验太差\r", "2. 题目直接给代码感觉太突兀，没有问题分析", " \r", "移动端就是会竖排起来,感觉还可以阿,不知道你说的太差是指什么呢?\r", "\r", "直接给代码这个确实是, 以后会多注意的.", " 主要是移动端不方便看代码。。。看代码的体验不太好。", " \r", "嗯,确实是,尤其是回复的时候,那个大大的头像挺占地方的.", "竟然来了几个人，有点小开心"]},
{"content": ["<div class=\"topic_content\">老人手机的上网卡，一年流量不超过 2G 。 红米 note4 应该所有卡都能用吧 坐标 魔都 求推荐 谢谢</div>"], "reply": "2", "tittle": "老人手机的上网流量卡，一年流量不超过 2G。 红米 note4 应该所有卡都能用吧 坐标 魔都 求推荐 谢谢", "comment": ["Note3 就行！", "淘宝网上有流量卡，比如联通的 但是联通网站上找不到"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>前段时间邻居说有急事，要我给他连一下 wifi ，我连上后，发现天天看视频……\n这也不好意思不给，大家都怎么处理的？给了心里不舒服……</p>\n</div></div>"], "reply": "248", "tittle": "大家遇到邻居要 wifi 密码，是怎么处理的？", "comment": ["绑定 mac 地址，限速呗。", "写个控制列表或者规则，他的 mac 地址只放行百度的流量，或者 10kb 限流，或者中间人，让他目的不可达，有多余路由器的就开一个，不连 wan 口， ssid 改成原来的，把原来的改掉，让他去连吧，网费都付不起就不要上网了", " \r", "我邻居平时都两个老人在家，只有他女儿年假回家才有联网的需求，所以没有办宽带。\r", "鉴于邻里关系还不错，就开了一个限速 2Mbps 的访客网络，她要看看视频也是可以的。", " 有多了一个找人家女儿的理由了！还想啥？", "上路由限速也不会？", " 她比我大十岁。。。。", "我直接 hack 隔壁家的 wifi ，感觉不好意思，所以晚上深夜才开速", " 我就这么干过😂", " 你这算有节操的了，哈哈", "限速哈。 \r", "农村人表示家里 wifi 密码 1 到 8 。", "这要分人：如果关系特好！就给他用，如果关系一般，就说，你们自己流量也不够用", "标准答案难道不是上班不在家时完全开放路由器，但是拔掉网线吗", "明显是老头老太连了你的 wifi ，之后都是自动连接的，而没有连接到自己家的", "我也蹭过邻居家的 wifi ，不过比较自觉，晚上高峰期连视频都不看。", "是时候祭出防蹭之绝技了", " 你这个方案复杂了，要安装证书， iphone 可以自动导入还好，电脑麻烦得要死。关键是怎么把证书下载到手机电脑上，再开一个无密码的热点做一个页面引导下载加使用方法么。", "路由器都有 guest 访客功能的啊", "以前看到一个方法，两个无线路由，一个自己用 ssid 隐藏，另一个路由没有密码或者弱密码，但是不插网线", "“我流量太多用不完，没有装 wifi ”", "换密码啊", "换密码，来要密码就说自己也连不上，已经报修了。", "如果有双 SSID ，开一个访客网络， AP 隔离并且限速。\r", "如果没有，就只能自己家的设备入白名单", "买一个带 Guest 账户的路由器，给她开一个专用 SSID ，限速 100KB/s", " 电脑手机共用一个 CA 签名的用户证书，直接 mmc 控制台导入即可，手机复制过去就好，登陆无密码。访客直接用 Radius 的计算时长的用户名密码登录。", " 隔壁宿舍给我限速到 10k/s", "遇到这样的邻居，也是运气不太好。", "10 块一小时", " 这是什么鬼软件？？？？？还有，怎样破解别人的 wifi 呀，我也想学学。呵呵", "邻居都这样了，你当然要保障自己的带宽啊，限速到 9600bps.\r", "\r", "邻居借用一下 wifi 倒是真的没啥，我家楼上就借过，就是一个老奶奶为了给她孙女玩手机借的 wifi 。是我上去给他们输入的密码——他们能连上了，却看不到密码。后来也没连。\r", "\r", "不过除了看视频，还有借了你的 wifi ，之后把密码告诉他认识的人的。", "拔掉网线 666", " 这样才带感啊，趁热来一发吧！", " Winbox, Mikrotik Management Toolkit. 所以需要一台 Mikrotik 设备才能用。破解的话关键字 Aircrack-ng ，自己 Google 即可。", "给!\r", "限速, 抓包, 偷看她隐私, 然后线下告诉她访问了什么 H 站, 有什么癖好.\r", "然后.....\r", "自己发挥", " 我就奇了怪了，爸妈家没有 WIFI ，她自己不会不知道吧，还好意思蹭邻居的 WIFI ？然后一年回来一次也得好好陪陪爸妈吧，一点信息刷刷微博什么的，用流量不就好了？", "我的 Guest 独立隔离网段，限速 20M 下行 / 1M 上行，没有其它限制策略，只有朋友来的时候用。", "访客共享 10Mbps 我家是 100Mbps 光纤", "隐藏 ssid 说 wifi 出问题了，只能有线上网", "换密码，你要这么逗，楼主是太闲了。", " 丫属貔貅只进不出，占一分便宜都有成就感", "楼主家的路由一定是太好了\r", "\r", "作为专业蹭网的表示对信号弱的路由一点办法都没有 ", " ", "拒绝别人很难吗……或者搞访客网络啊\r", "\r", "真的说中间人攻击或者 QoS ，我觉得浪费在这上面的时间完全不值得", "路由器可以限速，可以改密码，可以设置黑名单。\r", "做绝点就直接改密码，不然就限速 10KB 。想必他也会知难而退。\r", "据说有的路由器支持临时生成 wifi 接入密码。", "同上，限速吧。", " 最坑爹的是某米手机可以扫二维码共享 wifi 密码，而且可以让别人看到明文，简直不能忍。索性就不加密限速了。", "前不久有个邻剧妹子跟我要 wifi , 我跟她说 300 块钱半年, 我 wifi 密码已经告诉她了,奇怪她好像从来没连过.... 是怕我收钱么?", " 想的万一和你纠缠不清怎么办啊", " 至少能知道做了 A 就会产生 B ，而讨论中“我要用 ABCDEFG 让你用不爽，自然就知难而退了”。就算是去工信部投诉，甚至也都要先经过私下沟通这个阶段。用各种拐弯抹角的办法实在是心有戚戚。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>其实我的需求就是想有个稳定的存储环境，上传下载不限速。</p>\n<p>其实针对个人用户，还是有很多产品的。但这些产品都是包年包月，我就是备份个资料，以防电脑被盗，硬盘损坏这些不可抗拒的因素。但包年的话感觉不划算。</p>\n<p>然后我就想到了一些大厂提供的对象存储服务。这些服务都是可以按需使用的，大不了支付点存储费用，下载的时候支付下流量费用。</p>\n<p>我的资料不多，不像企业那种是以 TB 算，大概就十多个 G 的样子。算了下来，价格比包年包月的个人存储服务便宜不少。下载也只需要在数据丢失的情况下进行下载。我算了下，流量费也不贵。</p>\n<p>而且这些服务都有 SDK 可以用，感觉很方便啊。</p>\n<p>使用对象云存储用作个人备份可行不，有人这么做过么？</p>\n</div></div>"], "reply": "18", "tittle": "使用对象云存储用作个人备份可行不？", "comment": ["如果用来备份少量个人资料感觉没什么问题", "我一般用云存储备份 VPS 数据，比如七牛提供的 QrsBox 工具", "肯定可以啊 为什么不行呢？", "七搞八搞之后你就会发现还不如一个百度云会员省心便宜。。当然这是在你的资料没有易和谐东西的情况下。。", "我在用亚马逊 S3 做网站数据和个人数据备份，感觉存储空间不贵，贵的是每个文件访问的 IO 都要计算费用，如果你有很多小文件， IO 费用就相当可观。", "ios 备份就是 amazon s   3", "蓝光一盒才 38 块，何必呢。", "花几分钟搭个 seafile 服务器就行了 ", " 没看到价格。", "S3 存一对小文件只会哭。。。", "从成本比较高，性价比低啊。", "以前可以申请到百度云的接口 现在好像不行了", " 我传上去，不知道怎么下下来了。。", "0.0043 元 /GB\r", "这是 upyun 的价格，所以我一些数据都是存这上面的，如果没有流量费的话。\r", "10G 的流量费也就 2 块，但是不得不提一下，我试图使用 FTP 下载，但我从日志和账单没看到相应扣费，不清楚其他的是不是这样。\r", "但 FTP 扣费的话就有点反人类了，其他云存储大致应该也是 FTP 不付费，你可以试试看使用。", "有很多对象，分别再她们那里存一些硬盘， md 我就是个 zz", " 这个解决方案不错，但首先\r", "\r", "\r", "\r", "\r", "你得有个对象"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>rt.微信本地的语音文件全部使用 amr 后缀，但是事实用 ffmpeg 无法解码（试过正常的 amr 格式的，能够用 ffmpeg 解码），并且用 mediainfo 软件打开微信语音文件后也无法获取该文件的任何编码信息（除了文件大小信息）。我只是想把该音频文件转码成 mp3 格式。</p>\n</div></div>"], "reply": "9", "tittle": "ffmpeg 无法解码微信本地语音文件，哪位大神指导下", "comment": ["百度下吧，有人做了专门工具。", "我之前写了个帖子，找一下", "ffmpeg -i amr_file_name mp3_file_name", "\r", "文章下面是用到的工具", " 这个不行，腾讯的不是标准的 amr ，略修改了", " 现在修改了吗，我 2015 年做微信录音的时候是可以的", "试试我这个工具\r", "\r", "之前测试过的", "看看文件头？记得微信用的是 skype 的 silk 格式", " QQ 好像今年还是去年也改成 silk 了。当初找了好久都没找到这种格式的解码方法。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>现实情况中，很多时候我们需要很多的 http api 供我们自己调用。<br>\n而在很多编程语言中，已经存在了大量的相关函数，我们需要做的就是把这些函数包装到 opener_server 容器中，给这些函数提供 http 接口。</p>\n<h2>添加一个做 md5 运算的 http api</h2>\n<p>继续 jquey ：</p>\n<pre><code>\nvar reg_url={'action':'reg_url','type':'ajax_post','url':'/md5','host':'*:1009','go':md5_run}; \n//注册一个 url 地址 /shell ，绑定到 1008 端口上，设定这个 url 处理模式为 ajax post 模式，最后处理这个 url 的代码放到 shell\n\nvar md5_run=`my ($r,$key,$data)=@_; \nmy $rr=md5_hex($data);\n$n-&gt;{send_resp}-&gt;($r,$key,{type=&gt;'/md5',result=&gt;'ok',g=&gt;$rr});\n`;\n\nurl_post_data(url,JSON.stringify(reg_url));\n\n</code></pre>\n<p>通过上面的代码，我们把:</p>\n<pre><code>my ($r,$key,$data)=@_; \nmy $rr=md5_hex($data);\n$n-&gt;{send_resp}-&gt;($r,$key,{type=&gt;'/md5',result=&gt;'ok',g=&gt;$rr});\n</code></pre>\n<p>注入到了 opener_server 容器中。这里面主要用了 md5_hex 函数， <a href=\"http://opener_server.pl\" rel=\"nofollow\">opener_server.pl</a> 默认使用了 Digest::MD5 模块，所以可以使用该函数。</p>\n<p>测试执行效果：</p>\n<pre><code>url_post_data(\"http://test1.openerserver.com:1009/md5\",'test string');\n</code></pre>\n<h2>OPener_Server 教程：</h2>\n<p>第 1 弹： <a href=\"https://www.v2ex.com/t/320838\" rel=\"nofollow\">https://www.v2ex.com/t/320838</a><br>\n第 2 弹： <a href=\"https://www.v2ex.com/t/321686\" rel=\"nofollow\">https://www.v2ex.com/t/321686</a><br>\n第 3 弹： <a href=\"https://www.v2ex.com/t/322192\" rel=\"nofollow\">https://www.v2ex.com/t/322192</a><br>\n第 4 弹： <a href=\"https://www.v2ex.com/t/322488\" rel=\"nofollow\">https://www.v2ex.com/t/322488</a></p>\n<p>项目地址： <a href=\"https://github.com/openerserver/openerserver_perl\" rel=\"nofollow\">https://github.com/openerserver/openerserver_perl</a></p>\n<p>微博： <a href=\"http://weibo.com/openerserver\" rel=\"nofollow\">http://weibo.com/openerserver</a></p>\n<p>微信公众号：<br>\n<img alt=\"\" src=\"http://ww2.sinaimg.cn/orj480/006897bVjw1f9tqs614rqj309k09kjrc.jpg\"></p>\n</div></div>"], "reply": "2", "tittle": "三行代码加一个 md5 的 http api， OPener_Server 第 5 弹 （即将更新更复杂的 sstp server 教程）", "comment": ["jquey 是啥", "抱歉， jquery 。\r", "谢谢指正！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h1><a href=\"https://github.com/nahtethan/dxg-display/blob/master/DXG.md\" rel=\"nofollow\">非 VNC 改造 DXG 为显示器</a></h1>\n<p>如果是文石或者 DPT-S1 ，请点击<a href=\"\" rel=\"nofollow\">改造文石 96 或 MAX 为显示器的软件</a></p>\n<h2>Windows 7 、 8 的安装步骤</h2>\n<ol>\n<li>Windows xp 、 10 的安装步骤稍有不同，咨询请加 QQ 群：电子墨水显示软件 326606690</li>\n<li>如果 DXG 安装了多看，在多看的设置里面选择 DXG 默认起的是原生系统，然后重启 DXG 。</li>\n<li>查看 DXG 原生系统的软件版本： Home 按钮 - Menu 按钮 - Settings - Device Info</li>\n<li>如果软件版本不是 2.5.8 ，点击<a href=\"https://s3.amazonaws.com/G7G_FirmwareUpdates_WebDownloads/Update_kindle_2.5.8_B009.bin\" rel=\"nofollow\">2.5.8 下载地址</a>，升级安装方法：下载的文件放在 DXG 在 PC 上 U 盘的根目录 - Home 按钮 - Menu 按钮 - Settings - Menu 按钮 - Update Your Kindle</li>\n<li>越狱 DXG ，<a href=\"https://github.com/nahtethan/dxg-display/blob/master/00-binary/Update_jailbreak_0.12.N_dxg_install.bin\" rel=\"nofollow\">越狱文件下载地址</a>，安装方法同上。</li>\n<li>DXG 安装<a href=\"http://www.mobileread.com/forums/showthread.php?t=225030\" rel=\"nofollow\">MobileRead</a>开发的 usbnet ，<a href=\"http://pan.baidu.com/s/1gdxriHt\" rel=\"nofollow\">文件下载地址</a>，安装方法同上。</li>\n<li>DXG 连接 PC ，然后在 PC 上进入 DXG 的 usbnet 文件夹：<br>\n<img alt=\"\" src=\"https://github.com/nahtethan/dxg-display/blob/master/99-pictures/USBNET1.png\">\n<img alt=\"\" src=\"https://github.com/nahtethan/dxg-display/blob/master/99-pictures/USBNET2.png\"></li>\n<li>把 usbnet 里面的 DISABLED_auto 文件重命名为 auto ，弹出 DXG ，拔 USB 线，重启 DXG</li>\n<li>重启 DXG 后， USB 线连接 PC ， PC 的设备管理器将发现新设备，如下：\n<img alt=\"\" src=\"https://github.com/nahtethan/dxg-display/blob/master/99-pictures/RNDIS01.jpg\"></li>\n<li>按下面截图给 RNDIS 设备安装驱动：浏览 - 从计算机的设备驱动 - 网络适配器\n<img alt=\"\" src=\"https://github.com/nahtethan/dxg-display/blob/master/99-pictures/RNDIS02.jpg\">\n<img alt=\"\" src=\"https://github.com/nahtethan/dxg-display/blob/master/99-pictures/RNDIS03.jpg\">\n<img alt=\"\" src=\"https://github.com/nahtethan/dxg-display/blob/master/99-pictures/RNDIS04.jpg\"></li>\n<li>左边选 Microsoft ，右边选 Remote NDIS based Internet Sharing Device ，点击下一步：\n<img alt=\"\" src=\"https://github.com/nahtethan/dxg-display/blob/master/99-pictures/RNDIS05.jpg\"></li>\n<li>如果出现下面的截图，表面驱动安装成功：\n<img alt=\"\" src=\"https://github.com/nahtethan/dxg-display/blob/master/99-pictures/RNDIS06.jpg\"></li>\n<li>在 PC “网络连接”里面设置 RNDIS 网络适配器的 IP ：\n<img alt=\"\" src=\"https://github.com/nahtethan/dxg-display/blob/master/99-pictures/RNDIS08.jpg\">\n<img alt=\"\" src=\"https://github.com/nahtethan/dxg-display/blob/master/99-pictures/RNDIS09.jpg\">\n<img alt=\"\" src=\"https://github.com/nahtethan/dxg-display/blob/master/99-pictures/RNDIS10.jpg\"></li>\n<li>在 PC 命令行下 PING DXG 的 IP 192.168.2.2 ，结果和下图一样表明前面的步骤正确：\n<img alt=\"\" src=\"https://github.com/nahtethan/dxg-display/blob/master/99-pictures/RNDIS11.jpg\"></li>\n<li>安装 SSHSecureShellClient ，<a href=\"http://pan.baidu.com/s/1rvIZ8\" rel=\"nofollow\">64 位 Windows 安装文件地址</a>，<a href=\"http://pan.baidu.com/s/1o6OhpjW\" rel=\"nofollow\">32 位 Windows 安装文件地址</a>。</li>\n<li>通过 SSHSecureShellClient 连接 DXG ，点击桌面上的 SSH Secure Shell Client - 点击 Quick Connect<br>\n<img alt=\"\" src=\"https://github.com/nahtethan/dxg-display/blob/master/99-pictures/01.jpg\">\n<img alt=\"\" src=\"https://github.com/nahtethan/dxg-display/blob/master/99-pictures/02.jpg\"></li>\n<li>Host Name 填 192.168.2.2 ， User Name 填 root ，别的不用改动，点击 Connect ：\n<img alt=\"\" src=\"https://github.com/nahtethan/dxg-display/blob/master/99-pictures/03.jpg\"></li>\n<li>点击 Yes</li>\n<li>Password 什么都别敲，直接点击 OK ：<br>\n<img alt=\"\" src=\"https://github.com/nahtethan/dxg-display/blob/master/99-pictures/04.png\"></li>\n<li>然后 SSHSecureShellClient 就能连接 DXG 了：<br>\n<img alt=\"\" src=\"https://github.com/nahtethan/dxg-display/blob/master/99-pictures/05.png\"></li>\n<li>下载<a href=\"https://github.com/nahtethan/dxg-display/blob/master/99-pictures/mylcd\" rel=\"nofollow\">DXG 需要的文件 mylcd</a>到 PC 桌面。</li>\n<li>如下图所示，点击 SSH Secure Shell Client 工具栏上的黄色文件夹，打开文件传输：\n<img alt=\"\" src=\"https://github.com/nahtethan/dxg-display/blob/master/99-pictures/06.jpg\"></li>\n<li>如下图所示，把 tmp/root 改为 /mnt/us - 回车 - 把上面 21 步下载的 mylcd 从下图的左边拖到右边，以完成上传文件到 DXG - 关闭下图程序<br>\n<img alt=\"\" src=\"https://github.com/nahtethan/dxg-display/blob/master/99-pictures/07.jpg\">\n<img alt=\"\" src=\"https://github.com/nahtethan/dxg-display/blob/master/99-pictures/08.png\"></li>\n<li>如果 DXG 是锁屏状态，解锁，然后将 DXG 置于系统横屏状态。</li>\n<li>如下图所示，在 SSH Secure Shell Client 里面执行 chmod +x /mnt/us/mylcd 和 /mnt/us/mylcd\n<img alt=\"\" src=\"https://github.com/nahtethan/dxg-display/blob/master/99-pictures/09.jpg\"></li>\n<li>下载<a href=\"http://pan.baidu.com/s/1c2n6Ryo\" rel=\"nofollow\">Windows 程序 Console.exe</a>到 PC 桌面。</li>\n<li>双击桌面上的 Console.exe ，完毕， DXG 将镜像显示器上的内容。（注意：上面下载的 mylcd 是试用版， DXG 只显示一半，<a href=\"https://item.taobao.com/item.htm?id=520024244524\" rel=\"nofollow\">正式版点我</a>）</li>\n</ol>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>图片看不了，直接点击链接：<br>\n<a href=\"https://github.com/nahtethan/dxg-display/blob/master/DXG.md\" rel=\"nofollow\">非VNC改造DXG为显示器</a>\n<a href=\"https://github.com/nahtethan/dxg-display/blob/master/BOOX.md\" rel=\"nofollow\">改造文石96或MAX为显示器的软件</a></p>\n</div></div>", "<div class=\"topic_content\">图片看不了，直接点击链接：  \r<br>[非 VNC 改造 DXG 为显示器]( <a target=\"_blank\" href=\"https://github.com/nahtethan/dxg-display/blob/master/DXG.md\" rel=\"nofollow\">https://github.com/nahtethan/dxg-display/blob/master/DXG.md</a>)  \r<br>[改造文石 96 或 MAX 为显示器的软件]( <a target=\"_blank\" href=\"https://github.com/nahtethan/dxg-display/blob/master/BOOX.md\" rel=\"nofollow\">https://github.com/nahtethan/dxg-display/blob/master/BOOX.md</a>)</div>"], "reply": "5", "tittle": "非 VNC 改造 DXG 为显示器", "comment": ["真会玩...", "图片都看不了，还有刷网页是不是很卡", "不是说不允许全文转载吗？", " 原创啊，自己写的。"]},
{"content": ["<div class=\"topic_content\">个坑货、官方推荐的是个毛，\r<br>接单团队的专业素养我就不想吐槽了，\r<br>UI 前端 和后端 几个角色的协调，我全程产品经理\r<br>累死哥了。\r<br>早知道花 800 块找人套模板去了，最起码省事</div>"], "reply": "43", "tittle": "通过码市外包出去一个活，我很无语", "comment": ["淡定。", "基本看报价就知道是什么样的团队了", " \r", "哈哈  你的理解能力我很好奇\r", "哪个地方看出来 我的外包费用少了", "哎， bzzhou 是说外包团队的报价，你是被愤怒冲昏了头脑了", "刚刚收到 coding 码市推送的邮件 ,文档中有这样的描述:\r", "赏金： 90000 元\r", "周期： 60 天\r", "参考网站或产品\r", "\r", "\r", "\r", "具体信息可以到这里看:https://mart.coding.net/project/4472", "被愤怒冲昏了头 +1\r", "一分钱一分货，看那些接单的团队多低的价都抢着接，可想而知那水平咋样了", " \r", "愤怒了多次 ，今天实在忍不住了，吐槽一下。", " 太牛逼了。。", "看了一下需求文档， 200 多点，没吓尿", "有外包可以找我", " 你的理解力我更好奇，我哪里说你外包费用少了\r", "\r", "而且是多是少，这个群众眼镜才是雪亮的，我只是说明了一个行业的现状而已", "只想问下 9 万块想买个淘宝，这是不是太理想了？", "每次上这种外包网站， 都感觉像饿狗抢食，永远能看到突破你下限的人。", " @", " 很显然他 /她是想用 OpenCart 或 Magento 二次开发，虽然功能清单里面有 200 多点，其实很多功能上面二个系统都自带了或者有扩展可以用（比如 Magento Multi Vendor ），简单点说，他 /她是想花 9 万块开发一个超 mini 型的淘宝或 ebay 。", " 哈哈哈哈", "楼主下次来试试码易，虽然活儿少，但是专一，高质量交付平台，绝不坑： ", "看过两眼，感觉报价太低了。不知道什么人会接。", "报价确实低了点，海外项目，有可能项目已经被转了几手了。。。", "在这些平台上接个活太难了\r", "小活报名人多，被选中机会渺茫；大活自己一个人接不下", "   在码易做过一个网站，他们有自己团队，第三方不合适，直接可以保障活不会耽误  全程有项目经理监管  还是比较靠谱", "你当然得是产品经理拉，产品是核心阿。\r", "按照你的描述，负责协调的应该是项目经理吧", "有些自由职业者 可谓无知者无畏, 所以促进了这样的生态", "您好，\r", "请问您具体是哪个项目？如果项目过程中产生任何的矛盾或问题随时都可以找到当时对接您的项目顾问协助处理，每个项目都有指定的项目顾问来协助，有问题可以随时反馈。\r", "\r", "另外请您知悉：\r", "1. 您在码市发布的项目定价是由您来确定的，服务的开发方也是由您来确定，如果有需要，码市项目顾问可以给您推荐，最终是由您们的沟通来确定的。\r", "2. 如果您没有太多的精力来全程管理推进项目，可以使用码市的增值服务，由项目顾问来帮助您管理监控项目的。\r", "3. 整个项目来说，您才是最大的产品经理，在软件开发过程中确实是需要您很多的沟通参与。 800 块淘宝的模板可能存在做不到您定制要求的弊端呢。\r", "\r", "同时也感谢您的反馈，码市也在不断改进人员和项目的匹配。 如果还有其他更多的反馈意见，可以随时联系码市项目顾问。除了联系您的项目顾问，您也可以在  ", " 联系我们。", "都差不多吧，我在实现上找人做的俩项目也是坑，团队干活效率没我一个人高，质量也很差，而且时间没法保证.", "不过说实话，我是觉得码市的项目价格普遍偏低，还有找这种外包期望不要太高，在这干的个人很多项目经验并不多，太牛的根本不干", " \r", " \r", "这波小号做的一点都不隐蔽啊（逃", "智障对智障，哈哈\r", "狗咬狗，哈哈\r", "最省成本的外包，一般是找已经有成熟产品的公司外包，成本最差\r", "其它都是幻想，结果费用更高，哈哈\r", "穷人，思维的能力问题", " 参考下这个\r", "不知道题主外包的是哪个阶段？\r", "\r", "第一步：需求梳理、分析\r", "第二步：产品原型图绘制\r", "第三步： UI 设计\r", "第四步：项目经理&技术负责人对接需求\r", "第五步：技术方案 & 架构设计\r", "第六步：项目排期 & 任务分解\r", "第七步：产品研发阶段\r", "第八步：交付测试阶段\r", "最后。。。。。上线相关流程、事宜。。。。。", "众包平台迟早会存在劣比驱逐良币的问题, 特别在国内这种盗版率居高不下的地方, 足以提现用户和开发者都对软件作品毫不在意", "一分钱一分货，换位思考一下。", " 淘宝。。。", "UI 插画设计 可以找我呀", " 这个牛逼。", "出价一个比一个低，还都是集团军，不管什么活先报个低价再说", "你们是没见识过业界奇葩猪八戒，那才是真正的无底线。", "猪八戒才叫坑，维权 8 天了还不处理。", "国内项目，从接包方的角度 ， 100 个人做， 100 人会说是坑。我自由职业多年，但个人不做国内的单。以前尝试接触一些国内项目方。\r", "\r", "1. 发包方的预算，有时候看起来就是一个笑话。 2 ， 3 万想做一些人家几千万，积累了几年做下来的东西。\r", "2. 项目周期总是越短越好，有的标 10 ， 20 天的大把。 10 天， 20 天能做一个 XXX 平台？\r", "3. 没需求，或者需求就一句话，我们要一个和 XXX 一样的东西。\r", "4. 总想走捷径，你们有什么 XXX 方面现成的代码吗？我们稍改一下就行了。\r", "\r", "如果真心外包自己的项目出去，首先请 [正视] 一下你的项目。\r", "\r", "1. 合理的预算，外包不是越便宜越好\r", "2. 详细的需求，搞清自己想做什么\r", "3. 选择专业的团队，工作效率翻几番\r", "4. 时刻保持沟通，自己主动向开发团队解释项目中各种疑点，而不是到处抱怨，甚至漫骂。", " 传统行业\\传统思维 历史弊病 软件行业不受重视 版权意识淡薄 \r", "恩 就这样吧 守住底线就好", "看 codingnet 回复，都是你的锅，出事别找我，我只管收手续费。", " 你理解错了\r", "并非 codingnet 方责任\r", "其实我的意思：外包最麻烦的是需求方和接单方在开发过程中的沟通问题\r", "如果公司内部   这个问题就不会是问题", " codingnet 出现的目的是什么？不正是为了解决双方的沟通问题吗，是的，有的甲方不懂怎么描述需求，所以有了码市项目顾问，但是通过我上一次的经历来看，码市的项目顾问除了让乙方写文档，催甲方确认验收，并没有在项目需求沟通方面有任何作为。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>Ucos 系统是物联网开发中常用的操作系统，本文和大家分享的是 Ucos 系统中常用的数据结构，希望通过本文的分享对大家学习和使用 Ucos 有所帮助。</p>\n<p>1 ）表 链表</p>\n<p>表中主要了解链表，尤其是单向链表。</p>\n<p>2 ）数组 一维数组 二维数组</p>\n<p>使用数组有什么好处，在 c 语言中，数组是一组连续数字的集合它们数组的下标，代表了数组的相对位置，所以说，在一些高效的查表过程中，我们经常会使用到数组，数组在检索，查阅的过程中，它的检索速度是最快的。</p>\n<p>3 ）位图</p>\n<p>实际上位图就是一个二维的数组，或者说是一个多维的数组过程，假设这里有个位图，位图中填写了各种各样的数据，那在使用的过程中，这个位图的好处也是检索速度快，还有一个是它的横向和列向的交叉点就是可以很容易的找到我们的数据。</p>\n<p>4 ）结构体</p>\n<p>5 ）队列</p>\n<p>队列分为两种，一种是 FIFO ，这个叫做先进先出的队列，还有一个是 FILO ，这个叫做先进后出的队列。队列的讲解我们在消息队列中也简单的讲解了一下，假设这里有个队列，先进先出的队列是这样的，先进的数据放在最后，第二个进来的数据也放在最后，然后往上面走一个，第三次进的数据也放在最后，前两个数据往前走，这是一个先进先出的队列。什么叫做叫做先进后出呢？</p>\n<p>同样还是这个队列，第一次进的数据放在最后，第二次进来的数据放在倒数第二，第三次进来的数据放在倒数第三，这样的队列就构成了一个先进后出的队列，因为出的时候，我们总是从前面出数据，所以，这就是一个先进的先出，后进的后出。</p>\n<p>6 ）堆栈</p>\n<p>堆栈和队列比较类似，堆栈就是，我们只能在一端进行插入，在一端进行输出，在同一端插入取出，这样的结构就叫做堆栈，那这样很明显，先进的数据那肯定是后出的，也就是说，我们先进的数据是压在栈底的，先出的数据肯定是压在栈顶的数据，这样的数据结构就是堆栈。</p>\n<p>原文链接： <a href=\"http://www.maiziedu.com/wiki/iot/ucoscode/\" rel=\"nofollow\">http://www.maiziedu.com/wiki/iot/ucoscode/</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "Ucos 中常用的数据结构整理", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>初涉后台开发未深，诚惶诚恐看 &lt;SQL 反模式&gt;，学习最佳实践。</p>\n<p>发现现在这个项目应用了不少反模式，其中最让我困惑的是，完全不使用外键，涉及到外键的逻辑全部在应用代码里实现。</p>\n<p>询问项目负责人，告知不使用数据库外键主要有两原因:</p>\n<ol>\n<li>多台服务器不停机升级时，有可能数据库新加入的外键限制导致新程序没办法在旧数据库上跑</li>\n<li>运维人员对数据库外键深恶痛绝（举例说唯品会就是这样做的）</li>\n</ol>\n<p>听起来只要是分布式的服务器热升级（第一点原因）、或者团队里有运维人员，就应该抛弃数据库外键了。</p>\n<p>业界都是这样做的吗？书上说的当真脱离了实际？</p>\n<p>谢不吝赐教。</p>\n</div></div>", "<div class=\"topic_content\">指教不少，收获颇多，先谢各位了。\r<br>\r<br>另外再请问一下，如果在代码里实现约束的话，那么当我要插入一条 student 的纪录时，想先验证它的 class_id 字段是否有效，这时是否要先来一句 SELECT sql 查一下 class 表里有没这个 class_id ，确认 class_id 存在再进行 INSERT ？\r<br>\r<br>如果是这样实现约束的话，开销会不会有点大？毕竟每个约束都来一句 SQL 验证的话， N 个约束就是 N 句 SQL ……</div>"], "reply": "114", "tittle": "是什么理由让你彻底抛弃数据库的外键？", "comment": [" 就是说只是建立一个字段，业务逻辑中关联？但是还是要 join 啊，还是要关联查询啊", " \r", "你注意看这串讨论大多数人,不在资料库内设定外键关联.也省去连带变动 /连带删除设定,然后就直接 JOIN 直接查.\r", "\r", "这样直到性能有问题.变成直接将要关联的 N 个表作一个初步过滤后.直接读到 N 个变数中.\r", "(这时候资料库出输出已经完工.以下与资料库几乎无关)\r", "然后用程式码写关联,或是放入自订类,或是放入泛形容器(模板).\r", "然后再把关联后的查询在程式码中做.\r", "然后输出结果,或是依照结果存入修改到资料库内的每个变动 N 表.\r", "\r", "以上完全没做外键.\r", "所以做外健目标是什么?我认为是强关系约束 /连带变动 /连带删除.\r", "\r", "但在资料库设计初期.可能你还没做完关联设定.上头就传了讯息要你改一下新设计.搞不好连整个表都要重新设计.这时候资料库建模者就会满肚子表.甚至就不想设外键等设定了.\r", "\r", "设计中期.开始要丢测试数据了.结果关联子表没资料不行.所以写入程式码就要补上先写入子表后写入主表等复杂语句.还会遇到一个问题.整个写入是有问题的.你要保留已经写入的子表资料还是删除?\r", "一个一个删除.你要写的语句就不会少.不然就加上交易(Begin Transaction).出问题就 Rollback.没问题就 Commit.语句是变少了.但交易的性能下降你要先了解.\r", "\r", "设计后期或业务更动时.更可怕了.你可能要先复制一个测试用库最好保留全部资料.然后开始加入新表.设定外键等.然后删改旧表..并跑完所有业务流程模拟与性能测试(简单说就是搜集过去用户输入大约 N 万笔.从 WEB 端丢入动态网页开始跑.看跑多久.跟旧的比差多少.个别增删查改耗时统计).\r", "然后才写成 SQL 档去更新主资料库架构(同时更新业务逻辑代码).\r", "\r", "到这里.我们看看.外键给了我们什么?一点点的好处\r", "跟一堆麻烦.还有性能下降.还有水平扩展困难.\r", "外键有帮我们省下空间吗?没有.\r", "\r", "所以大部分工作一段时间的资料库工作者.不会使用外键.而是在业务逻辑代码中处理资料库.\r", "\r", "我没有放弃外键.我很喜欢建模初期就设定上去.因为可以很清楚的从关连线了解资料库架构.\r", "而正式上机使用时.除非已经遇到性能或其他问题.我不会主动去掉外键.\r", "\r", "或是.一开始了解用户需求后.发现太多标准资料库不好做的设计(例如 POE 的技能网系统).就直接用 图论 /json 资料库 设计.\r", "例如 arangoDB.", " 国外当然有教科书，我上的数据库用的就是 database system concepts", " 数据库的运作不可能没有主键，有时候没有明确主键的话用随便加一项自增整数顶着而已", " 匠人心态成不了工程师。忽略实际能力，什么都想要什么都去做，只会一事无成。\r", "工程设计是以目标为导向，有明确的需求。在满足所有必须之后，最优化其中一项。优化过程中当然有所取舍。对于互联网行业，第一需求是可维护和可拓展，其次才是一致性。\r", "更何况，不用外键只是舍弃了数据库提供的强一致性。完全可以用其他实现最终一致性。", " 感谢解答", " 我是专门做这方面的，有的的确是没有的，你觉得不可能是没见过吧", " \r", "\r", "我没有数据库应用必须强制一定要用外键的想法, 这看应用的类型. 你用不用是你的事情, 如果你觉得对你自己有益. 在一些应用类型中, 正确的使用外键是必要的, 这些应用类型典型的例子就是进销存, erp . 而且,这些软件当前也正在互联网化, 但不能用所谓的全部的互联网思维去做的. 就好比学 nodejs 就是后端的想法一样.\r", "\r", "具体分析一下\r", "\r", "外键的三个作用\r", "\r", "1. 值必须存在\r", "2. 级联更新\r", "3. 级联删除\r", "\r", "由于最近几年只用 postgresql , 我只知道我的 postgresql 默认生成的外键 2 和 3 都是 no action, 也就是根本不用考虑 ls 一些帖子所谓的级联删除的问题. 这个设置现在多在 orm 配置层面比方说 sqlalchemy 的 cascade 选项, 也就是说还是在业务逻辑层面上,出现了级联删除和更新,是你的业务代码如此定义了\r", "\r", "那么讨论 1 值必须存在, 如果表中插入一个不存在的值会怎么样, 显然针对这个表的统计都会出错, 对于某些应用类型, 这些应用通常是\r", "\r", "1. 实时统计. 报表不是定时生成的(定时生成的会对数据清理), 而是实时统计当前数据\r", "2. 各种关系到钱的, 错不得\r", "\r", "为了达到防止插入一个不存在的值, 解决方案就是在插入和更新时检查, 这里有个最大的问题就是, 你假定了所有的操作都会通过你的业务代码. 但实际企业应用场景. 维护, 第三方等都可能会接触你的数据库, 修改你的数据库, 你自己的应用随着逻辑的增加(这很正常)都可能会忘了检查, 导致这个逻辑被跳过, \r", "\r", "这里同时要反驳一下 自己检查的性能和开发效率会高于 数据库, 简单的举个例子, \r", "\r", "举一个 erp 中一个销售单据, 一般最少会引用多少个相关表\r", "\r", "sale_orders\r", "\r", "* employee_id 员工\r", "* department_id 部门\r", "* store_id 仓库\r", "* partner_id 客户 /供应商\r", "*  logistics_company_id 物流公司\r", "* logistics_product_type_id 物流公司产品类型\r", "* 各种收款账户和类型\r", "\r", "sale_order_lines\r", "\r", "* product_id\r", "* measure_unit_id \r", "\r", "你自己的代码要 select 多少次, 企业软件通常是个大的整体应用, 表很多, 一般都用几百个, 像 axapta/oracle 这样的有几千个, 每个表基本都会引用一个或多个相关表, 没有外键, 自己每个表的更新插入都写业务逻辑, 不可想象\r", "\r", "外键对同步的问题是显而易见的, 表同步时必须按顺序同步, 如果一个表示父子关系, 则必须按父子顺序同步. \r", "\r", "erp 对同步要求比较少, 是因为 erp 这种应用, 就是你做 saas, 建议方案也是一租户一数据库(或一 schema), 自然的在分库分表, 而且 erp 软件通常会不会超过几年结转一次, 老的帐作为归档数据库仅仅用于查询. 分布式压力基本比较少. 但不同库中同步数据的需求还是有的, 有外键在的确是比较麻烦. 但这个就像上面所说的, 你对表的依赖性心里有数, 其实也不是个问题. 当然, 这个层面上不同应用有不同应用的策略. 我个人不在意这些.\r", "\r", "外键更多的在我看来是一种防护, 如果你的应用对数据比较敏感, 报表必须实时生成, 而你又不能 100%保证数据是正确的,  \r", "我的建议, 还是用!\r", "\r", "再次重申, 我没有让你们一定用外键的想法, 这关我什么事情呢? 只是外事得看场合", "数据库设计是要满足第三范式的，目的是为了最小冗余", " 我也看过很多书，事务型的、分析型的，以前我也和你想法一样，为什么某某数据库设计完全违背了某某模型的要求，是不是设计者不懂。就拿分析型数据库来说，整个库不加一个约束一个键的也是有的（并不是小公司哦），经常会做大批量增删改，你提到的约束会影响性能，所以干脆不要了。你提到的加主外键其实针对的对象主要只是传统的事务型数据库。", " @", " @", " @", " @", " \r", "\r", "补充一个我没放弃外键的原因.而且是因为这事情导致我过去 7 年的工作始终做好外键的原因...\r", "\r", "7 年前我第一个算稳定的纯软开发工作.专案管理员(PM)给了我一个网站跟资料库.说明整体目标与目标用户之后.让我试着融入工作团队（ 40 人左右）工作.\r", "\r", "但显然我很失败.PM 说我可以询问任何人.但每个人身上几乎都超过 4 个案子.所以其实大家都很忙.\r", "而且以前没有这样的团队经验.不知道如何开口.所以我只好拿着 PM 给我的东西研究...\r", "\r", "拿着资复制出来的料库一打开.....超过 40 个表.只有用户表跟权限表有关联外键.其他的表都没有.\r", "这里简单说一下.这是一个特有(保育)生物的调查与纪录网站.涵盖了 GIS/动植物 /生态环境 /人...我的意思是.他比一般商业网站还复杂很多.应该比进销存还复杂一点吧.\r", "\r", "重点是...没有说明 没有说明 没有任何说明    ....重点要说 3 次.\r", "\r", "所以我告诉 PM 这样我没办法.太难了.做过这个案子的只剩两个人.一个前端一个全端.可是他们也很忙.\r", "PM 说那我就去当驻点吧.\r", "\r", "然后我就当了 4 个月的驻点.然后就换工作了...直接变成该案的老板的助理.然后重新设计者个系统(与厂商平行作业)\r", "\r", "总之.这 4 个月充满痛苦的经验.让我一摸到资料库软体或是一听到系统建模.\r", "我的手就无法阻止的点上了外键设定.还有每个表每个栏位写满了注解.因为很多软体可以从外键设定生出清楚的架构图.\r", "而且对后面来的同事,或是到校合作教学生,我都会说\"把外键做上去,每一栏都写中文注解\".\r", "\r", "资料库性能问题,我们可以业务与资料库主机分离,可以换 SSD,可以用 RAMDISK,可以主从模式,\r", "但只有\"没有关联没有注解没有说明档\"修复的代价最痛.\r", "\r", "一次受害终身受用.共勉.", "再补充一个,\r", "我有用过外键关联但可以 null 的设定,其实子表该值不存在也是可以动的.\r", "从这个现象我特意去验证了外键关联到底是否有省下空间,答案是没有.\r", "所以主表 /子表的外键关联栏位值在两边都存在,所以非数字栏位做外键关联根本空间吃超多.\r", "\r", "所以对我来说外键对于减少资料错误率没有想的那么好,但设定与验证时间确实比较多,\r", "但我系统架构文件也很懒得写,直接叫出资料库建模软体的架构生成图含注解就当有写了(被殴\r", "所以设定与验证=写说明文件(奔逃", " 我也从来没说过就必须用，我一直说的是有所取舍。用外键主要是保护强一致，最终一致不是必须用外键。但是你觉得这是在漠视数据一致性， 我不同意。\r", "比如说有千万分之一的概率会丢一篇日常吐槽微博，但是性能至少提高两个数量级，那是不是值得呢？比如说有千万分之一的概率会丢一单几千万的交易记录，但是性能至少提高两个数量级，那是不是值得呢？\r", "\r", "工程思维讲究的是确定需求，确定技术可行性，满足需求。不是盲目乐观也不是盲目悲观。有可能出错么？有多大概率？会出什么问题？最坏情形会有多大损失？修复起来麻烦么？这些问题其实远超技术的范围。作为技术实现者，我只能向决策者说明技术上的可能性与成本。\r", "\r", "脱开剂量谈毒性，都是耍流氓。实际情况实际讨论。\r", "\r", " 用文档来证明外键的必要性，这不是缘木求鱼么？在我受的教育里，是先画关系图，和所有人确定好，写定文档之后，才着手实现。接口文档必须先于代码。\r", "\r", " 抱歉，这篇帖子说的是外键，我就默认你说的也只是传统的 SQL 类。没多想，没说明白。", " \r", "恩恩,理想上就是上头给一个不再大更动的规格书,或是自己写一份规格书,上头确认后,技术人员开始实作.\r", "\r", "但这几年的工作经验,全都是技术 /文书人员工作量超载的情况,\r", "然后部分厂商就算拿到规格书,也会有规格外的要求在期中会议或内测过程被提出修改,\r", "我在会议上一边录音一边草草的记下要修改的内容,回去忙着写 code,没什么时间写规格书给自己看.\r", "而且先写规格书没用,我上头没有懂技术的,\r", "上头只想看漂漂亮亮的图表,而我又不是职业前端,做图表很丑,所以常常就是看成果 @", "@.\r", "而期末需要缴交的架构图,xmind 画一份各类用户逻辑图(但我不说没人看得出那是 xmind 了,手工大改非自动拉线),资料库软体拉出资料库结构与关联图,就当作有写了.\r", "不得不说我的文档有瑕疵,但重点是过去跟我合作的其他人是否能从我的文档了解整个案子的目标与意图.并且成功实作或是接手.\r", "接口名称在白板讨论 /xmind 的中文意图讨论没有问题后就会标上.所以也算是先文档后实作了.\r", "\r", "这里要小小抱怨一下,技术人员不够用的时候,不懂资讯的文书人员没办法帮技术人员写文档或产架构图,而技术人员会在做两次跟做一次的选择中优先选做一次(再次被殴)然后有剩下时间才写文档.\r", "\r", "我第一篇回文就有说明每个人的经历不同会有很多不同的结论.我觉得这篇大家的答案都没有什么错.我在这里用其他人的角度再次检查自己过去几年的行为是否是当时我能做的最好选择.\r", "\r", "所以我标记自己(被殴)(奔逃)原因就是我没办法全按照标准来作业,但我能做到当时时间与实作的极限平衡就这样了.\r", "\r", "放轻松~~慢慢思考~~感觉大家有点急躁~~"]},
{"content": ["<div class=\"topic_content\">首先！ V2EX 是开源的！ <a target=\"_blank\" href=\"https://github.com/livid/v2ex\" rel=\"nofollow\">https://github.com/livid/v2ex</a>\r<br>\r<br>然后各大语言社区\r<br>laravel-china / phphub\r<br>ruby-china / homeland\r<br>cnodejs / nodeclub\r<br>golangtc / gopher\r<br>python-china / zerqu + qingcheng\r<br>\r<br>然后主流轻论坛\r<br>flarum ， nodebb ， discourse\r<br>\r<br>其他轻论坛\r<br>hacpai / symphony ， carbonforum ， hifone ， simpleforum ， collipa ， rocboss ， xiuno ， youbbs\r<br>\r<br>欢迎补充！</div>"], "reply": "12", "tittle": "统计一下都有哪些开源的轻论坛吧~", "comment": ["自荐一个吧，第一个使用 nosql 而不是 MySQL 作为数据主存储的开源论坛程序： Monster ： ", " ，采用 SSDB 作为主存储，理论上支持亿级数据，但实际测试受限于硬盘太小，只是随机添加了 150W 个帖子和 600W 个回复，响应飞快，几乎感觉不到任何延迟，这个程序内置的 MVC 框架也是自己写的", "另外刚刚看到上面提及的“ hifone ”程序，跟我的程序页面的 header 好相似", "startbbs", "V2EX  github 几年没更新了。", " 你的主站 ", " 下线了，懒得维护了？ん？爱马仕？ iM@S ？", "phphub 不轻。", "Powered by Elixir Phoenix ", "\r", "\r", "\r", "源码地址： ", "M", "想问一下 segmentfault 的开源了没有？", "\r", "\r", "这个，最近几天才发现的，看上去不错", "楼主你到底看没看 V2EX 的源代码。。根本不是现在这个版本，那个是运行在 GAE 上的古董级程序。。", " Monster  有演示的网址没"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>用 node.js 历时一个星期左右开发的这个项目，自我感觉还不错，有兴趣的以前交流下 nodejs 开发经验</p>\n<p>github 地址： <a href=\"https://github.com/callmelanmao/yunshare\" rel=\"nofollow\">https://github.com/callmelanmao/yunshare</a></p>\n<p>在线百度网盘搜索地址：<a href=\"https://biliworld.com/\" rel=\"nofollow\">百度网盘搜索</a></p>\n<p>在 V2EX 的另外一个节点也发了帖子，都没有什么人一起交流，希望管理员不要删帖，谢谢。</p>\n</div></div>"], "reply": "21", "tittle": "自己开发的开源百度网盘爬虫程序", "comment": ["速度很快呀", "~~ 看起来还不错的样子，不过这个东西好多", "搜索结果怎么偏离那么多啊。\r", "搜索：当我想你的时候.MP3", " 你试试搜索音乐， elasticsearch 太占服务器内存了，我只索引了 title 字段，使用的是 ik 分词插件，还没做优化", " 的广告单价高吗？", " 很低的，服务器费用是赚不回来了", "elasticsearch 快是快... 实在太耗内存了.. 放在云服务器的话 开销太大", "爬一会就会被百度封 ip ，你是怎么解决的", " 休眠几秒", " 具体是几秒呢？", "elasticsearch 几台机器啊", "挂了？", "一直好奇这种站的基本原理是啥，楼主能否分享下？", "链接有效性会不会定期验证？", "对这个项目挺感兴趣的，你的服务器内存有多大？第一次接触 nodejs ，你开源的源码的搜索入口是在哪个文件里？", " mongodb 保存在本地， elasticsearch 服务器 3g 内存，这个项目不带 web 界面的，只有爬虫和建立 elasticsearch 索引部分", " 哦哦，我前端知识比较小白，那如果我加个界面测试，怎么调用这个项目的", " 现在这个文档写的比较粗糙，我过几天再写个更详细的， web 端调用你只要看 elasticsearch 的 mapping 文件就行了，在 data 文件夹下面，前提是你已经正确安装这个项目，并且建立好索引", "elasticsearch 搜索速度真是快啊。\r", "楼主现在数据是多大量级的。我一个 10w+的数据用 redis+mysql 感觉太慢了。 当然我服务器比较渣， 不太敢上 elasticsearch", " 用的就是普通服务器， 只要内存够， es 的搜索速度就是很快， 数据量目前 600W", "  hi ，问下你大概多大的数据量需要考虑清除掉一部分数据？"]},
{"content": ["<div class=\"topic_content\">用 django 自带的 ORM ，默认都是硬外键的，就是会在数据库建表语句中生成外键关系，当然也可以指定软外键，比如 user = models.ForeignKey('User', db_constraint=False)\r<br>\r<br>小项目都无所谓\r<br>大项目，数据量一多，硬外键不方便数据库做扩展~</div>"], "reply": "16", "tittle": "大家用 ORM 时，会用软外键还是硬外键？", "comment": ["用软外键，现在后端框架都是用代码来实现外键约束的。", "硬外键", "软外键，约束用代码实现", "硬外键", "软外键，不建议使用硬外键。", "学校里老师要求硬 , 自己出来写代码软...", "软外键，约束用代码实现\r", "\r", "另外，公司主要使用 MongoDB ，并不能添加外键", "硬件要硬，软件要软，顺势而为，不要总想搞个大新闻。", "不建议用外键。。", "模块内用硬，模块间 ORM 带的软外键都不用，代码逻辑维护。", "项目不大，硬外键", "使用逻辑外键，过来人的经验", " dbref 实现类似外键....", "多大的数据量，其项目称之为大？ \r", "硬，有哪些优缺点？\r", "软，又有哪些优缺点？\r", "请说个明白！", "外键连发两篇 XDDD 另一篇传送们\r", "\r", "\r", "我觉得一起看超有意思 XDDDDD"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>本来只打算用 Google App Engine 搭建 KindleEar 就了事的，毕竟国内用不了。可又觉得不拿来做点什么事简直是浪费资源， so,用 CDN 作踏板硬是拉回了国内。至于速度还可以，做个普通的网站绰绰有余了，国内基本上秒开，也不用备案等等这么麻烦。后来还想用 Google App Engine 做个 VPN 的，但想到每天 1G 流量的限制还是放弃了，不过对于众多苦于满世界找优质免费空间的人来说倒是个不错的选择。</p>\n</div></div>"], "reply": "11", "tittle": "用 Google App Engine 搭建 KindleEar，想了好多办法终于摆脱国内被墙的命运", "comment": ["附上我的 KindleEar 地址： push.andso.cn", "以前搭过 KindleEar, 然后现在 Kindle 吃灰中，不知道有多少未读的订阅了。。。", "啥 CDN 啊，好快诶", "之前搭过 KindleEar ，订阅的内容多了，下载速度会很慢>_<，顺带问下云盾 CDN 怎么样？", " 我也搭建在了 GAE ,后来 Kindle 吃灰了也就没再管了。。。。", " 好奇 CDN +1", " \r", " \r", " \r", " \r", "kindle 看新闻感觉很棒，定时推送，再也不用刷屏了。另外还可以搭建一个网站用来定时推送需要的文件资料，能省下很多功夫。其实我用了两个 cdn ，一个是国外的，用来接入 GAE ，另一个是国内的云盾，用来接入上一个 cdn 节点拉回国内。云盾我一直在用，感觉还不错，但论稳定性的话还是加速乐最好，但加速乐防护效果比云盾差，我之前就是因为用了加速乐但仍被挂黑链才换用云盾的。", " \r", "突然想到我的 kindel 半年没打开了。。。不知道推送了多少。。。", "付费订阅了狗儿多的 kindle 推送，后来大部分都没看。 kindle 大部分时间吃灰中，偶尔有空的时候阅读下自己喜欢的书籍。", "原来楼主域名已经备案过了，我还以为没备案，可以用国内 cdn 加速呢", " 用国外的 cdn 也能打开，但速度和稳定性要差一些"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>请问一下大家 ios 开发中，有人用 Appcode 的吗？因为之前做后端开发，用惯了 Intellij ，不知道 Appcode 怎么样？现在主要用 Storyboard 和  swift3.0</p>\n</div></div>"], "reply": "5", "tittle": "请问一下大家 ios 开发中，有人用 Appcode 的吗？", "comment": ["不太用，主要是习惯了 Xcode ，据说 AppCode 的重构功能不错", "ac 早就不支持 storyboard 了", "之前做后端开发的  入门 4 个月  用 xcode 的感觉  就像吃了屎一样   但是还不得不吃  \r", "之前就看过 appcode   但是  不知道  appcode 对   swift3.0 和 storyboard 的支持怎样", "xcode 就是一坨屎。。。", "appcode 在调试的时候比 xcode 靠谱。不过用 storyboard 写界面不行。所以，一定要用 appcode 的话到界面这里就要两个都打开了。个人感觉有些地方还是 appcode 做的好一点。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"http://blog.xcatliu.com/2016/11/12/on_call/\" rel=\"nofollow\">http://blog.xcatliu.com/2016/11/12/on_call/</a></p>\n</div></div>"], "reply": "26", "tittle": "在微软 on call 的经历", "comment": ["你的站打不开，为何不把文章 copy 过来\r", "然后在下面加个链接呢？", " 惠州电信访问正常。\r", "V 站并不提倡全文 copy", " \r", "所以让楼主加个地址在后面\r", "我也知道这个规则，不过这文章是楼主自己的，无所谓 copy 了。", "山东联通 4G 加载了 10 秒没打开，关掉了", "今年有本新书叫 Google SRE ，里面有讲怎么专业 Oncall", " 昨天刚看到一半多一些，确实是本很不错的书", "oncall 的时候一夜被吵醒五次.\r", "三次之后已经睡不着了,躺在床上也睡不着", "IBM 也有 oncall ，平日 40 周末 50 ，法定 100 ，需要 oncall 的时候问题不是很大。。。", " 1. V2EX 不反对文章的原作者自己全文转载自己写的原创文章", "GitHub 的 Fastly CDN 的确在国内是 Slowly", " 其实我以前发到 V2EX 的都是 copy 的，没有全文转载的原因主要是怕 v 站不好删帖吧😂", " 抱歉是放在 GitHub Pages 上的。。。某些地区可能需要翻墙", " 👍感谢推荐", " 难忘的经历😂", " 40 50 100 是指加班费人民币吗", " bingo", "某 MS 的朋友就很讨厌 on Call ， 233", "以前在台企的时候，不管啥 on call ，要出货的前个把月，基本就是 24*7 ，要命的是，上级把这当做工作态度与凭年终的一部分。。。", "我也讨厌 on call ，深夜睡觉被电话吵醒早上就整天没精神", "是在苏州吗？去年校招的时候 onsite ，环境感觉不错……就是厕所好小哇哈哈", "看成在微软打 call 的经历 (你是拉拉人吗?", "一个月才 2 次 还好啦", "唔，下个月入职你软苏州的表示很淡定", " 我在美团内网搜了一下\r", "第一条记录就是\"最后一天\"\r", "少年玩的溜啊..而且都是好评", "而且交接 wiki 写的太良心了....\r", "好评+1...\r", "我也经历过不少人事变动,但是真的没见过 wiki 写的比这个更详细的", " 😁可惜我已经看不到 wiki 里的评论了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>掏出你的 iPhone, 点开这个 <a href=\"http://static.blog.lurrpis.com/hehe.mp4\" rel=\"nofollow\">视频</a></p>\n<pre><code>解药：同时按下 关机 + Home 键 可强制重启\n</code></pre>\n</div></div>"], "reply": "12", "tittle": "视频会导致任何 iOS 设备死机，可微痛尝试，尚不清楚原理，求解答", "comment": ["iphone5s+IOS9+chrome,没死机,看来我的 5s 是山寨的", "靠,播放完后没立即死机,刚发完上面那个回复就死机了", "楼上好萌", "v 站已经有人分享过了，说是内存泄露？", "微博上有人说原因了“这个视频属于一个特殊的媒体文件，对视频驱动的底层造成了干扰，导致 iPhone 媒体服务进程相关的内核线程死循环，从而耗尽手机资源，最终造成手机假死崩溃。具体来说，是 AppleVXD393 （具体设备会有不同）内核模块中存在漏洞，导致特定视频文件会造成死循环。”搬自原话", "1 楼的 5s 是真的", "很好，我手机也死机了。\r", "以后网站不想 iOS 用户来时就插入这个视频！", "ping 也挂了， ssh 也挂了。", "C:\\Users\\lslqtz>ping 192.168.0.3\r", "\r", "正在 Ping 192.168.0.3 具有 32 字节的数据:\r", "来自 192.168.0.2 的回复: 无法访问目标主机。\r", "来自 192.168.0.2 的回复: 无法访问目标主机。\r", "来自 192.168.0.2 的回复: 无法访问目标主机。\r", "来自 192.168.0.2 的回复: 无法访问目标主机。\r", "\r", "192.168.0.3 的 Ping 统计信息:\r", "    数据包: 已发送 = 4 ，已接收 = 4 ，丢失 = 0 (0% 丢失)，\r", "\r", "C:\\Users\\lslqtz>", " 一看就是爱折腾的野妹子", " 可以做苹果鉴山寨工具。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>在 <a href=\"http://Forbes.com\" rel=\"nofollow\">Forbes.com</a> 最近发表的一篇文章（ 25 Practical Blogs To Sharpen Your Coding Skills ）中，作者 Tomas Laurinavicius 推荐了 25 个他认为很适合程序员或学习编程的人在工作或学习中阅读的博客。\n<a href=\"http://t.cn/RfKGtXP\" rel=\"nofollow\">http://t.cn/RfKGtXP</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "分享 25 个实用的国外编程博客", "comment": []},
{"content": ["<div class=\"topic_content\">背景：\r<br>我用 Docker 来跑一个 java 应用，在 Docker 层限制了容器的内存大小为 1G 。\r<br>然后使用命令  java -Xms3G -Xmx3G javaapp  在容器里面启动应用，应用也可以正常启动。\r<br>\r<br>问题来了，-Xms ，-Xmx 都为 3G ，但我分配给这个 Docker 容器的内存并没有 3G ，只有 1G 。\r<br>问题 1 ：\r<br>为什么 java 应用还可以启动？\r<br>问题 2 ：\r<br>这时候-Xms 的值和-Xmx 的值是如何分配的？ \r<br>\r<br>注：\r<br>1.Docker 物理机的 内存为8G，Swap 为 0。\r<br>2.上面的 java 应用在 Docker 运行一段时间后，就会发生 oom ，被系统 kill 掉了。</div>"], "reply": "7", "tittle": "请教 JVM 堆大小分配问题", "comment": ["adaptivesizepolicy?", "操作系统虚拟内存？", "是可以设置超过系统物理内存的，除非你是 32 位的那最多 4G ，剩下就是等 OOM killer 把你的程序干掉", " 机器操作系统是 64 位的 Centos 7", "在内核看来，内存是在发生缺页中断的时候才分配的。", "docker 启动的参数是怎么样的 ？\r", "\r", "默认有开启 swap 的 可以用\r", "--memory-swappiness=0 关闭\r", "同时可以用 docker stats 看下效果", "楼主加上 -XX:+AlwaysPreTouch 试试？\r", "jvm 的 xmx 和 xms 参数并不会真的申请那么多内存，儿 AlwaysPreTouch 可以保证 commit 所有声明的内存"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>跟朋友、跟同事聊天的时候都聊到过这个问题。</p>\n<p>很奇怪的是，外行的朋友都觉得学学呗，挺好的，而身边真正在写代码的同事几乎都是“绝对”不会让孩子学</p>\n<p>而就我现在的想法（虽然还没有孩子）是肯定要让孩子接触一下的，如果有兴趣就学下去</p>\n<p>V 友们有没有绝对不会让孩子去学的？能说说原因吗？</p>\n</div></div>"], "reply": "106", "tittle": "我说，你们会想让自己的孩子学写代码吗？", "comment": ["正在筹划教她写代码", " 哈哈，教导有方～", " 我觉得会写 ppt 比会写代码更重要。。。", "我会让孩子学会写代码，但是不会让他以码代码为业。", "我会让他学会自己搭建 VPS 和 ss 这点比较重要", "如果他喜欢的话可以让他接触，培训思维逻辑。但是不推荐让这个成为他的工作"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近做一个功能点，做了一段时间（四五天吧，感觉那块交互是挺复杂的），总是想当然答应得很快，然后真的上手做起来，却碰到很多坑，进展不够好。主要项目急（领导一直说项目着急，那我就认为项目很急咯），自己写代码的心态也着急了，然后领导过来，小伙子啊，这功能估计多久完成啊。哎，每当这种情况就很尴尬啊，时间说多了感觉自己能力不行（能力确实 low ），说少了又觉得万一碰到坑没时间了怎么办。\n找过一些建议说是，自己估计时间*1.5~2 。感觉一说领导估计觉得哪要那么长时间。\n有时候觉得自己是应该说 No 的，对一些复杂的交互需求脑子过一下解决方案感觉挺顺畅，应该花不了太长时间，领导也急就答应下来了，到后来，会出现一些问题</p>\n<ol>\n<li>碰到一些坑 时间就不够了</li>\n<li>对于复杂交互，赶项目会让自己没时间思考，上来就瞎 XX 写了，结果发现其实思路数据结构方面根本没有理清楚，然后导致返工浪费时间了</li>\n<li>当然特么最后搞不定就是自己挖的坑了</li>\n</ol>\n<p>所以说对一些评估还是根据自己的能力诚实的去评估，不然搞不定就尴尬了。\n要是你们领导让你评估一个功能或者项目做多久，你们怎么处理的呢，可以讨论下哦。</p>\n</div></div>"], "reply": "19", "tittle": "功能点时间评估？你们怎么评估的呢？", "comment": ["合理评估每个功能的开发时间，很难评估的那就拆分后再评估。把风险点列出来，报备。这样，项目延期了，也是可以理解的，人手不够，申请增加人力。", "首先评估时间的目的是帮助项目整体计划的实施，目标在于尽可能的准确，是尽可能，不是绝对。一个项目需要若干环节的估时，产品设计、 Ui 设计、后端、前端、测试等等，所以从这个角度上来看，是不存在绝对准确的估时的。\r", "\r", "那么，我们应该去追求尽可能的准确。有一个经验可以分享，对于功能估时，应该多个角色参与，产品、 UI 、小组 leader ，项目经理和测试。\r", "\r", "为什么需要那么多人，一一道来，你在思考一个需求的开发过程从而给出耗时的时候，你的思路肯定是根据经验和直觉来的，很多时候你会高估和低估，或者遗漏某个重要的逻辑或者想多了。这个时候产品会把逻辑一一和梳理一次，解决我上面说的问题。\r", "\r", "ui 设计和产品一样，遗漏了重要的设计需求会造成估时过少。不赘述。\r", "\r", "部门 leader 很懂你，因为你每次 delay 的时候他替你背锅，他天天研究你，在估时上比你自己更懂你自己。\r", "\r", "测试呢？道理和部门 leader 一样，他们在上线之前，听你说第七次这个 bug 这次一定搞定的时候，他们内心是不相信的，他们说你一个周搞定的事情，基本上已经是八九不离十了。", "不管你得到什么的结果是几人天，\r", "乘以 π，\r", "即可。", "如果你是单兵作战，那么功能评估将会……非常的不靠谱。推荐三人及以上的情况下进行评估。如果一定要单人进行评估，确实建议时间翻倍。因为你无法预计会出现什么样的问题。给进度留余量是很正常的事情，因为上头要根据你的进度定计划，你做不出来东西，大家一起倒霉。你提前做出来了，大家一起开心。如果你因为工时长被降薪，那说明你也确实只值这个钱。因为高速意味着高风险，反之则是低风险。抹平风险是需要钱的。", "一般按最好情况估算出来后乘以三就差不多了", " 不还有一句补充，必要的时候*10pi 么", " \r", " 恩 感觉评估的时候还是要多考虑一点 留一点 buff\r", "\r", " *10pi 额 这感觉领导要重新招人了", " 这真的是一个很尴尬的东西。", "贝塔分布，(乐观+悲观+4*可能时间)/6 ， 然后在估算数上加一定的 buffer 。\r", "\r", "需求要清晰，需求要清晰，需求要清晰...一定要各方的意见都知道。", " 恩 谢谢你的建议", "这样说吧，不拆分直接评估出来的时间，大于 3 天的一定不准，就算做乘法也不会准的\r", "\r", "拆分后评估的时间，就算不准你也能准确的告诉对方，原本按我预计今天是第三天，预计进度是 40%，但实际进度只有 20%，可能会延两天解决 XX 难点，这个点是以前估漏了／估少了／需求变更导致的\r", "\r", "比如常见的拆分\r", "\r", "XX 功能点\r", "\r", "表结构设计、 model crud 1d\r", "新增、修改接口 1d\r", "列表、筛选逻辑 1d\r", "详情读取逻辑 0.5d\r", "联调自测 1d\r", "\r", "总计 4.5d ，留 buffer 后预计一周完成提测", "心里预计时间然后乘以 1.5.然后预留 1 天 buffer 时间。几乎没问题", "还有赶时间不代表没有思考时间，一定要有整个开发的 3 分之二时间是在思考。。三分之一时在写代码。。如果是反的，或者压根没时间去思考，那基本是有问题的。思路通了，三分之一时间写代码效率是非常高的，思路不通，就会在开发过程中碰到所谓的坑。磕磕碰碰就会出现时间预估不准的问题。\r", "ps ：时间不准，只能靠加班解决，别无他法。又想拿高工资，又想很轻松拿是不可能的。总要付出一部分来获取另一部分", "我一般是乘以 3.。。。\r", "\r", "刚开始做得给自己 50%的思考时间，想清楚了再写", " 是啊 很赞同后一点，不然返工浪费时间。", "1.  从不相信业务和市场部门反馈的:该功能很简单;\r", "2.  所谓报时靠谱其实是经验,就是过的坑够多了,这个很重要;\r", "3. 遇\"坑\"不要一坐坐 1 天,交流,刷贴,上个 WC,也许坑就豁然开朗了.\r", "4.  活着才有可能完成,死了是没有价值了,为了活着,需要*系数", "单兵作战，一般都是 d*2+检测遗漏+buff ，基本都没出什么纰漏。", "功能点就需要产品和主程一起讨论了，毕竟有些功能点遇到外行产品是割裂的看的，实际业务是有纠缠的", " 赞同"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>面对着各种网盘的关闭，恰巧家里还闲置了一个树莓派 2 ，装了系统后，又因为是没有公网 IP ，而内网版的 ddns 更是不太稳定，这就让我纠结了，我一直在想的一个问题就是树莓派能做什么用？？？？</p>\n<p>现在目前树莓派上跑了一个 PHP 接口小程序，比如网易云点歌 和 一个 python 小程序，当做点歌电台来用的、还有啥其他用途呢？我最想做的还是当家庭网盘来用，可惜最烦没有公网 IP 。。。。</p>\n</div></div>"], "reply": "96", "tittle": "面对着各种网盘的关闭，树莓派放置家中能做什么用？", "comment": ["一台公网的 VPS 装 OpenVPN ，配置成路由模式（不要 NAT ），树莓派拨入这个 VPN ，你在外面也拨入这个 VPN ，这样你就可以访问到树莓派了，而且全程加密。", " 谢谢指点，我下午研究一下。。。", "bt sync 。不需要公网 IP", "买个网易蜂巢跑 frp 当内网映射，放了十多天蛮稳的，域名没备案 80 和 443 端口也没封可能是流量比较小，网盘用的 seafile  ", "看看我这个？ ", "内网版的 ddns 为什么不稳定？", " 只能做端口映射，我试了一下，而且花生壳还限制流量。。。。", "树莓派性能太弱了，而且百兆网卡和 USB2.0 都是瓶颈。搞 nas 还是应该上 x86 服务器。", "反正不能吃", "树莓派，性能不行。折腾到最好， x86 小主机才是归宿。", " 有什么好推荐 x86 小主机", " 好几档呢。\r", "\r", "1. 深水宝二手小主机， 150~300 不等。比如我用的 aopen de2700\r", "2. 占美\r", "3. Brix\r", "4. Intel NUC/Dell 3040m\r", "5. Dell 7040m\r", "\r", "大概这几档，您瞅着选吧。", "前排出售 吃灰树莓派！", "家里用的电信还是联通的，没有公网，打人工服务叫他们给你开， 10 分钟就搞定公网 IP ，然后搞个 ddns 就行了。", " 我用的电信 4G 哦，就是手机上网这个，貌似是没法获取到公网 IP 吧", "有没有类似 n2n 方案？公网 vps 的流量好贵。如果能借助公网 ip 打洞，之后抛开 vps 直接通信就好了。", " 有意收，加我微信 dssssk", " 话说，联通、小县城、出口是小区口大路由，能搞的到公网 IP 么……", " 好想法！这也可以是解决内网穿透问题的办法呀！", "seafile 搭建私有云存储，还可以利用蒲公英路由器做映射，在外面也可以使用", "seafile 好评", " 为啥要用花生壳， dnspod 、 cloudxns 呀，都有动态解析", " 我用的是 ssh 套$$，借助阿里云访问学校内网的树莓派。有点限制：目前只能通过 ip 上网，任何域名都解析不出来。", "简单的做网盘，不在意性能的话用 btsync 自建 NAS 还是弄个黑白群晖，另外 freenas 现在也要求硬件尽量 8G 内存起了", " 几块钱😃", " 50 包邮", "我的现在获取不到 IP 了，之前是设置的 WiFi 静态 IP ，可能因为路由器断电导致的，有哪位遇到过这个问题，求解😥", " zerotier ， tinc vpn 都可以", " 但是他们那个不能穿透内网啊，没有公网 IP 的，获取到的 IP 是 10 开头的局域网 IP", " 欧元", "btsync 是绝佳选择，不需要外网 ip 。其实有外网 ip 的话我推荐 ownCloud 而非 seafile 。", " ", "内网不是问题，关键是家用的宽带上传速度一般都很慢。 你从外网下载家里的东西，如果文件很大，就很慢", "树莓派百兆网卡+USB2.0 ， IO 的确是个瓶颈。\r", "\r", "\r", "实测传输速度有 4.5MB/s ，用来看 1080p 是足够了", " sorry 没注意，没有公网 ip 的话可以用 ngrok 反向代理，自己搭或者用免费的 ", " 鉴于 ownCloud 现在的问题，得开始推荐 NextCloud 了", "玩 Home Assistant\r", "智能家居 or 助理的 Server ，配合 Amazon Alexa 或者 Google 的语音识别 API 实现声控设备\r", "还有各家合作的 API ： IFTTT,Google chrome cast,Digital ocean,Arduino,pushbullet ……\r", "官网： ", "\r", " ", "补充：此项目的每一行代码都开源在 GitHub 上", " 你需要开个 DNS Tunnel ，例如 DNS Crypt 的 TCP 模式", "bt sync", " 我也是外接的一個 usb3.0 硬盤盒，但是一旦通過 smb 讀文件就會出現 input/output error", "owncloud nextcloud 与 seafile 有什么优势吗?\r", "我觉得 seafile 毕竟是中国团队开发,有先天的中文文档优势很不错", "xxx 路由器  你懂的", " 树莓派温度高嘛？", " 怎么实现的？我也想从外部能访问位于大内网内的家里的路由。", " freenas  其实是考虑大量 IO 时的内存，实际上 4G 足够。", " 那你查查是网络问题还是硬盘盒问题，我没碰到过", " 夏天有点烫，最好不要盖盖子，现在的气温没关系，贴了纯铜散热片会好些", "积灰用", "吃灰 IO 差", " 深水宝搜索后，价格很感人，哪里有 150 — 300", "解决内网问题你缺少一个 ngrok", "吃灰", "吃灰。\r", "就 树莓派 那破 io ，还想干点啥。", " 估计你搜的不对。\r", "\r", "你看这个二手就不错。\r", "\r", "复制这条信息，打开👉手机淘宝👈即可看到 [联想 启天 /E590s/D525 双核 工控主机 千兆 黑群晖 下载机 看视频] ￥ AASfuxKo ￥ ", "我忙碌的树莓派\r", "最烦这货的就是供电了，搞得本来很简约的一个东西，愣是为了供电脱出一堆线", " 企业用的话，工作时间 IO 还是有要求的", " 你那硬盘盒是那个型号呀？硬盘是什么什么规格的", " 奥睿科 9558U3 3.5 寸硬盘柜，不过好像奥睿科的口碑不好，网上都说烂，优势就是便宜咯。\r", "硬盘是旧电脑上拆下来的普通硬盘", " 你的买的真值。我的吃灰中。", " 那就是 usb2.0 吗？我看网上说 2.0 的比较稳定", " 硬盘盒是支持 USB3.0 的", "吃灰派 23333", "1300 入了一个 NAS ，已解决全部网络需求，硬盘要另外买啊。。。", " 看到你也是在用 keepass ，想请问下， chrome 想通过插件自动填充密码， keepass 必须要开着吗？如果是的话岂不是更麻烦，程序都开了，还不如让 keepass 填", "继续吃灰", "香蕉派可以 30MB/s ，用了大半年了，感觉还不错。", " 请问下你的主机柜左侧那是个什么？", "之前在树莓派上有用过一个叫： RaspNAS 的系统，似乎还不错，后来不更新了。\r", "——————\r", "推荐使用 OpenMediaVault 也是一个 NAS 系统，树莓派也能用", " 穿了马甲的树莓派", " 树莓派不是不能链接硬盘吗？不是说只能用 tf 卡？", " 树莓派不支持硬盘，请问怎么搞 nas", " (→_→)  不是有 USB 口么？外接 USB 硬盘盒啊", " 懵逼了，谢谢", " 懵逼了，谢谢， usb 硬盘盒不需要外接电源吗？树莓派应该带不起来吧", "顶风作案", " 硬盘盒带电源的", " 可以尝试下 狗洞 /dog tunnel ，这个 双方都内网都可以。", "树莓派的 io 很慢，很闹心，做个本地 git 服务器倒是不错，传文件太慢了", " 请问如何操作，网上都是有 NAT 的，能否给个教程链接，谢谢！", " 确定很便宜，感谢", "感觉小 berry 还是挺有用的，我放了一堆爬虫， bot 和定时任务在上面跑，同时还用它做下载机和代理服务器，下载直接 webui 手机操作，资源都下载到 nas 上，个人表示不开电脑躺被窝里操作下载真是惬意😄。做 nas 的话我不用 berry 因为硬盘外接电源比较讨厌，所以我直接用带 USB  的路由器做 nas ，虽然有不少问题但满足一般需求还是够了。", "树莓派卖了，入了 GEn8.\r", "放家里，阿里云解析 API 自制 DDNS ，比花生壳好用太多！\r", "干啥都行啊，目前电信百兆，上行 4M ，实际接近 500k 。", " 哇塞，你真舍得下本，这个成本有点大了啊，哈哈哈", " 哥们你那 pi 的马甲哪里买的？ x 宝没看见这种像样的啊", " 这东西怎么玩？", " ", " 多谢，我搜 pi 盒子，扫了一眼都是亚克力透明盒子，没看到还有这种：）", " 这个体量太大了吧，有点贵啊", "树莓派这东西是给小孩子玩和学习写代码用的……我买过最早的一代，配了个外接硬盘供电，然后什么 mount 弄来弄去麻烦死了，还老是死机。", "mark ，同吃灰", "开电台（手动斜眼）", "推荐 Resilio Sync pro （原来的 BTsync ），能联通外网即可，不需要啥花生壳之类的 DDNS ，简单易用。建议买专业版的， 99 元，可以选择哪些目录 /文件暂时不同步，需要时点一下就同步过来使用，节约空间。树莓派 2 IO 有点弱。我等下个月的树莓派 4 ？ 估计应该有 USB3 口及千兆网卡，拖两个旧笔记本硬盘做 SYNC 节点及下载电影也不错", "我现在用 orangepi 一个国产的 配置差不多  跑 resilio sync 不过宿舍上行太慢 还在腾讯云上加了一个节点做中继  另外再跑个 seafile"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>问个面试用的题目，你如何获取一个域名的所有 ip ？</p>\n<p>结果需要可实践，可以做出来。 比如 <a href=\"http://www.sina.com\" rel=\"nofollow\">www.sina.com</a>  <a href=\"http://weibo.com\" rel=\"nofollow\">weibo.com</a>  <a href=\"http://www.qq.com\" rel=\"nofollow\">www.qq.com</a></p>\n<p>如何尽可能多的获取它们对应的 ip ？ 给你 1 个小时，可以使用网络，自己编码，或者??</p>\n<p>如果使用工具，工具必须别人也可以无障碍的访问到！</p>\n</div></div>"], "reply": "36", "tittle": "问个面试用的题目，你如何获取一个域名的所有 ip", "comment": ["难道不是 dig?", "我记得 c lib 中 gethostbyname 会返回一个数据结构, 其实包含一个可遍历数组, 可以来遍历所有 ip (逃", "用各地的公共 DNS 都解析一遍\r", "\r", "智能解析是根据递归 DNS （公共 DNS ）服务器的 IP 来分配节点的，而不是用户 IP 。", "  如果都是中国主机，还能想到更精确的办法吗？", " 如何获取各地公共 dns ， 如何确保 你获取了足够的 dns 。", " gethostbyname()只返回某个 dns 里配置的 ip ，或者只返回其中一个。 而且域名也可能配置多个 dns", "遍历一遍 ip 最精确了，感觉能在几个小时内完成遍历", "dig +subnet  \r", "这样？", "无法确保获取了足够的 DNS\r", "\r", "你要不要试试\r", "\r", "\r", "\r", "无法确保无障碍的访问到", "getaddrinfo gethostbyname 或者自己写 dns 解析", "多个 ip 的情景有 3 种\r", "1.域名配置时一个域名可解析出来多个 ip ，这是为了 ip 后的服务不可用后客户端切换到后续的 ip\r", "2.为了提高用户访问速度，使用各种方式使得用户可以就近访问\r", "3.运营商进行的 DNS 劫持\r", "如果不考虑 3 ，那么通过各种方式(各种全国 ping 网站，网上已有的数据)收集全国各省市电信运营商的 DNS 服务器 ip ，在他们没有限制只对指定段 ip 的查询进行响应的情况下进行 dig 就好了\r", "如果考虑 3 ，那还要把解析到的 ip 进行判断是否为该公司的服务器，判断方法有从 response header 看差异、把 http host 字段为其他公司域名的请求打到该 ip 上等等", " 楼主已经回复了，无法确保获取了足够的 DNS", " 开放题，其实大多数的 ping 网站的 dns 应该足够。 但是有办法拿到一份权威的 中国国内的 dns 列表吗？\r", "这样可以防止 ping 网站有遗漏！", "难道不是超级 ping ： ", " ？", "1 、遍历国内 IP 地址段，得出所有有响应的 DNS 服务器地址。\r", "（这里有几个坑）\r", "（ 1 、一般而言移动的 DNS 不会响应电信过来的请求）", "假定他有域传送漏洞，嗯，然后应该全了", "只有我想到黑进去瞧瞧么。。", "暴力方法，扫描全球 IP80 端口，然后加 Host 跑\r", "当然会有些反代的。", "难道不是打个电话给公司，问他拿个 IP 段？", "1 、遍历国内 IP 地址段，得出所有有响应的 DNS 服务器地址。 \r", "（这里有几个坑） \r", "（ 1 、一般而言移动的 DNS 不会响应电信过来的请求）\r", "（ 2 、电信的 DNS 无法获得目标服务器的移动 IP ）\r", "（ 3 、部分运营商 DNS 不会跨地域响应）\r", "（综上你需要三网 IP ）\r", "\r", "2 、在此基础上，遍历各个 DNS 获得 IP 地址\r", "（三网接入策略路由就放在路由器吧， Ubnt EdgeRouter X 就够了）\r", "\r", "3 、验证 DNS 结果\r", "（发起请求到各个 IP 地址，并对比获得的响应信息）\r", "（这又有几个坑）\r", "（ 1 、 CDN 地址可能不应答跨省数据）\r", "（ 2 、部分新闻类站点存在不同 CDN 信息不同的可能性）\r", "\r", "\r", "综上：\r", "1 、没法保证获得完整的 IP 地址列表\r", "2 、没法保证验证 DNS 过程中请求靠谱（运营商劫持那是常有的事）\r", "\r", "结论：\r", "此题无解", "我觉得。。是不是大家想多了= =！\r", "1 个小时能编码出来的，也就只是做一个 dns 解析器了。。", "我公司内网的指向 ip ，也能拿到么？", "只能尽量的过去，像上面讲的尽可能的多的 dns 解析。\r", "之前计划做过一个类似的东西，当时计划的策略是：\r", "目前有几家 dns 提供了 http dns 接口，这个允许指定客户 ip 。可以遍历客户网段来获得足够的 ip 。", "如果这是个 anycast 的 IP, 你的老板会不会认为你在忽悠他?", "这玩意需要的不是时间，是资源。服务器都有 BCP38 保护，各省各运营商都要有资源。", "用 ping 工具，或者写个代理的脚本去 ping 。", " 赞 \r", "真实要做肯定需要很多资源\r", "\r", "这是一个开放题 本来就没固定答案。\r", "如果只想获得中国区的 IP 可以怎么做？", " \r", "\r", "无论中国区还是全球区域，做法都一样，毕竟互联网本身就没有国界。\r", "并不存在说抓取某个国家 /地区会更为简单。步骤还是那些，目标范围大小的区别。\r", "即便是抓取本地能应答的全部 IP ，也会因为各种接入点的不同而有所区别。\r", "（例如长城宽带的 CDN 地址在别的网络不太可能抓到）\r", "\r", "于是，为了能给出更好的答案该反问一个问题：能投入多少资源去做这个事？", " 面试题 1 个小时 你可以做多少？ 单机 单 ip 中国区\r", "\r", "Apnic 拿到最新的  ip 分布， python 获取 cn 区 ip 列表， golang 编写最简单的 http client. 将 ip 端做为输入， 简单分析 repsonse code 和结果。判断是否是需要的结果。完整实现这个过程  30 分钟内可以完成编码。\r", "\r", "单机修改内核配置，优化网络 开启快速回收端口，让它可以单次刷 6.3 万个主机。剩下半个小时差不多可以刷 1.1 亿个 ip 。当然这很理想化。\r", "\r", "如果你有更多资金， 使用 api 在阿里云上，各个节点快速创建主机。 将各个 ip 端 分隔，让不同节点的主机 分别跑这个程序。可以把时间收缩得更小。考虑到阿里云节点数有限，所以资金可控。\r", "\r", "总之这个是开放题。", "把 http 改成 dns request 也很可以，向所有 ip 的 53 端口 发请求，后端解析结果。向所有的 ip 去重 合并。\r", "\r", "最后验证一下就可以。", " \r", "程序开发是做工程，看需求并结合现实的限制给出解决方案解决问题\r", "每秒 6.3W 主机的遍历速度，在不考虑内核消耗的前提下先计算下握手包的带宽消耗。\r", "一般的商用宽带（非对称）没法承受这个并发量带来的带宽消耗\r", "\r", "于是，能好好的给下限制条件么？", "  如果是 1000M 带宽， 所有的 dns request 会小于 100. 而大部分的回应数据应该是 icmp ，少部分为 udp 所以回应 也应该在 100 左右。 1000M 带宽 64 字节的应该是 1.4Mpps, 所以应该满足要求，工程上可以达到。 如果是 100M 带宽， 0.14Mpps 也应该可以满足。先发 udp dns ，扫描全中国 ip ， 获得的 ip 。 这段时间写个 http 的验证客户端，应该足够。\r", "\r", "很久不算了，凭印象做的可能算错了。而且还有阿里云方案可以水平扩展。", " 我觉得。。只要能在半小时做一个简单的 dns 解析器，然后找到各个省的 dns 中心 ip 。无非每个大运营商一个也就几百个 dns 中心打一遍 dns 请求。分分钟就出结果。\r", "\r", "既然是开放问题，也不能把问题复杂化。核心结果是尽可能多的得到域名对应的 ip 。 dns 是做这件事最合适的。只用跑 ip 段？可以当然可以，但我觉得是不是跑题了，如果是一个项目中的解决方案，估计会被打死的。但去尽可能多的访问 dns 中心就不一样了。 dns 协议本身就要允许循环查询。原则上只要 dns 覆盖的足够多。就能够得到足够多解析的 ip 。", "  在一个小时实现一个能用的 dns 解析协议，我觉得会比较难，应该选已有的轮子比较现实。", " 用 dig ，然后 shell 做个脚本。"]},
{"content": "", "reply": "2", "tittle": "大家进新公司，多久能上手？大型 C++项目。", "comment": ["不知道，应该很快可以产出吧，具体多久，待我一个月之后来回答。", "还是看能力吧，能力比开发这个项目的主力强，花三天时间熟悉代码就能上手干活了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>效果为：点击后侧每一个图，会出现一套图片，可以查看。\n图片用 ajax 调用一套文章中的图片，左右上一张下一张。页面背景全部变灰？\n<img alt=\"pictrue\" src=\"http://ultramanlv.com/0011.jpg\"></p>\n</div></div>"], "reply": "2", "tittle": "做这个页面怎么构思", "comment": [">点击后侧每一个图，会出现一套图片，可以查看。 图片用 ajax 调用一套文章中的图片，\r", "\r", "对每个图片设置 click 事件，点击之后出现对于屏幕固定并完全填充的一层，设置 z-index 让这一层「浮在」最上。监听事件获取需要的一组图片，除了第一个图片其他隐藏。\r", "\r", ">左右上一张下一张。\r", "\r", "显示上一张 = 将当前图片隐藏，上一张设为显示\r", "显示上下张 = 将当前图片隐藏，下一张设为显示\r", "\r", ">页面背景全部变灰？\r", "\r", "图片父节点填充整个窗口，设置背景，图片自身设置居中于窗口\r", "\r", "\r", "\r", "-----\r", "大概能满足要求，而且还留了很多优化空间（笑", "fancybox"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>作者：<a href=\"https://github.com/hanzichi\" rel=\"nofollow\">韩子迟</a></p>\n<h1>年终</h1>\n<p>当大多数人还在纠结「年终总结」是元旦写还是农历过年写好的时候，楼主的「年终总结」却 “早产” 了。为什么会 “早产”？因为楼主觉得自己的 2016 已经结束了，已经可以盖棺定论了，不会再有重要的事情发生了。再加上最近工作浑浑噩噩，得过且过，没有目标，诸事不顺（负能量小王子），觉得有必要提前总结，看看自己这一年来收获了什么，同时制定来年的计划，也好给年底两个月一些工作或者学习上的目标和动力。</p>\n<h1>工作</h1>\n<p>首先要讲的当然是工作了。</p>\n<p>楼主去年年底来到现在这家公司，职位是「开发工程师」，主要负责公司部分站点的 JavaScript 部分。我司 Web 网站大多是传统的后端 MVC 架构，后端开发语言用的是 PHP ，也就是传说中的前端写好静态页面，后端「套模板」，前后端混杂在一起（有多坑爹就不说了），而楼主 “幸运地” 负责了一个少有的前后端分离项目的 JavaScript 部分（主要是这个页面交互稍微复杂点），是的，只需要写 JavaScript ， CSS 有专门的同事负责。</p>\n<p>这不正是楼主梦寐以求的工作吗！熟悉楼主的人都知道，楼主是个狂热的 JavaScript 爱好者，但是对 CSS 却一点都不感冒。如今，前端（ CSSer ）写完静态页面，交到我这稍微一润色，就 OK 了，其实就是一些简单的 DOM 交互，楼主很快便在新的环境中如鱼得水了。</p>\n<p>后来，可能因为楼主工作效率太高，也可能是因为需求太少，反正就是看起来工作量不饱和了，领导给安排了几个 PHP 的项目。反正闲着也是闲着，正好对 PHP 也有点兴趣，就稍微学了点，也算是入门了吧。</p>\n<p>对于目前的工作，喜忧参半。喜的是平时工作量比较少，不需要加班（虽然我经常自愿留下来到很晚，但是我觉得和强制的加班文化还是有很大区别的），有大把的时间学习自己感兴趣的东西，而且有机会实战 PHP ，公司氛围也还算不错；忧的是工作所需技术比较落后（还需要兼容 IE6... 小胡子哥说「<a href=\"http://weibo.com/1812166904/Efw9RzMPR?type=comment\" rel=\"nofollow\">如果你家公司还在花大把时间折腾 IE 6 7 8 的兼容性问题，趁早离开吧</a>」），基本上就是原生 JS ，对于目前热门的前端技术栈，根本没有机会在工作中用到，而且也基本没有人可以讨论，你能想象我司的前端日常开发不需要 Node 环境么？之前看到耗子叔的文章 <a href=\"http://coolshell.cn/articles/17497.html\" rel=\"nofollow\">什么是工程师文化？\n</a>，感觉我司应该就是文中说的「运营或销售驱动型的公司」吧。</p>\n<h1>学习</h1>\n<p>接下去来聊聊这一年的学习。这一年来主要还是对于原生 JavaScript （ ES3 ， ES5 ）的学习吧，从去年 7 月份开始看起的《高程三》截止目前大概翻了一半... 这两年来买的十几本书，就翻过这一本 ... 希望来年可以多看看书。</p>\n<p>一年来也写了不少的博文，可以去我的博客 <a href=\"http://www.cnblogs.com/zichi/\" rel=\"nofollow\">http://www.cnblogs.com/zichi/</a> 翻翻流水，其实大多是没有深度的水文。</p>\n<p>除了博客外，花了大概 6 个月的时间，解读了 Underscore.js 这个工具库，写成了系列文章，得到了不错的反响，详见 <a href=\"https://github.com/hanzichi/underscore-analysis\" rel=\"nofollow\">https://github.com/hanzichi/underscore-analysis</a>，这大概是今年做的花费时间最多的事情了吧。</p>\n<p>对于算法，也一直没有忘记，今年大概在 Leetcode 切了 150 道题，详见我的 Leetcode 题解 repo <a href=\"https://github.com/hanzichi/leetcode\" rel=\"nofollow\">https://github.com/hanzichi/leetcode</a>。用 JavaScript 切算法题的人很少，很多人不理解我为什么这么热衷于此，其实仅仅是兴趣，解决一道算法题的快感是无与伦比的。如果硬要深究算法的用处，用耗子叔的话来说吧（反正目前的我也只在简单的堆砌业务功能代码的井底中 ...）：</p>\n<p><img alt=\"\" src=\"http://images2015.cnblogs.com/blog/675542/201611/675542-20161105104216940-1201663214.png\"></p>\n<p>短暂地回顾了今年的学习，除了巩固了下原生 JS ，看完了 Underscore.js 源码，切了 150 道左右的算法题，入门了 Node.js （详见 <a href=\"https://github.com/hanzichi/funny-node\" rel=\"nofollow\">https://github.com/hanzichi/funny-node</a>），其他好像真没什么可以说的了。看到这篇文章 <a href=\"https://www.v2ex.com/t/310767\" rel=\"nofollow\">在 2016 年学 JavaScript 是一种什么样的体验？</a>，顿时慌了，里面所说的技术栈基本都没用过。其实我也想学这些东西，比如现在大火的 React/Vue ，或者 Angular ，比如 TypeScript/CoffeeScript ，比如 Webpack/Gulp ， ES6 ，也想学习  Mocha/Chai /Travis CI/Codecov ，等等，其实这些我都不会，都没用过（顿时觉得自己好 low ），只是大概知道这些技术栈是用来干嘛的， 但是对于我来说，<strong>我希望学习它们是「需求驱动」</strong>，如果是「兴趣驱动」，我还是更愿意花甚至更多的时间去学习一个新的算法，我觉得自己已经没救了。你可能会问，学这些东西完全可以自己学，楼主是觉得如果在工作中有应该场景的话，应该能上手或者熟悉精通更快，而且「需求驱动」应该会更有动力吧。</p>\n<p>关于前端的学习，推荐三位大大的文章：</p>\n<ul>\n<li><a href=\"https://www.h5jun.com/post/to-be-a-good-frontend-engineer.html\" rel=\"nofollow\">写给想成为前端工程师的同学们 - 月影</a></li>\n<li><a href=\"http://taobaofed.org/blog/2016/03/23/the-growth-of-front-end/\" rel=\"nofollow\">一个前端的自我修养  - winter</a></li>\n<li><a href=\"https://www.w3ctech.com/topic/983\" rel=\"nofollow\">写给初学前端工程师的一封信 - 克军</a></li>\n</ul>\n<h1>计划</h1>\n<p>去年是有给 2016 设定目标的，来看看完成了多少。去年的计划都写在 <a href=\"http://www.cnblogs.com/zichi/p/5107820.html\" rel=\"nofollow\">2016 daily</a> 中了，回顾下。</p>\n<ul>\n<li>leetcode 切题数达到 200+。轻松突破 200 ，截止 2016.11.12 282 道 <a href=\"https://leetcode.com/hanzichi/\" rel=\"nofollow\">https://leetcode.com/hanzichi/</a>，可喜的是我的 leetcode 题解 repo <a href=\"https://github.com/hanzichi/leetcode\" rel=\"nofollow\">https://github.com/hanzichi/leetcode</a> 也攒下了 200+ star 。</li>\n<li>博客园随笔数达到 250+。第一次做计划的时候是 200+，后来改成了 250+，没能达到（这一年也删了不少以前的水文）。其实我也在有意克制随笔数量，一些自己备忘的，或者小白配置系列、小白科普系列的我更愿意把它们放在 <a href=\"https://github.com/hanzichi/personal-collections\" rel=\"nofollow\">personal-collections</a> 这个 repo ，或者 <a href=\"https://github.com/hanzichi/practice\" rel=\"nofollow\">practice</a> 这样的 repo 。</li>\n<li>博客园粉丝数达到 350+。第一次计划的时候是 500+，不到 1 年新增了 300+ 粉丝，这个成绩还是值得骄傲的。（截止 2016.11.12 520 个）</li>\n<li>博客园积分排名赶超岑安大大（ 163744/982 ）。这个目标也达成了，不到 1 年涨了 10w+ 积分。（截止 2016.11.12 184499/978 ）</li>\n<li>读完 Underscore.js 源码，并整理到 GitHub 。已完成， repo 地址 <a href=\"https://github.com/hanzichi/underscore-analysis\" rel=\"nofollow\">https://github.com/hanzichi/underscore-analysis</a>，攒下了 1000+ star 也是出乎了我的预料。</li>\n<li>GitHub followers 达到 100+。已完成，截止 2011.11.12 353 followers 。</li>\n</ul>\n<p>2016 的计划基本上算是完成了，现在回头看看感觉这些量化的目标都比较幼稚，可能现在已经少了刚入行时的那种虚荣心吧，<a href=\"http://weibo.com/ttarticle/p/show?id=2309403963757121391703\" rel=\"nofollow\">技术影响力，首先是技术、然后才是影响力</a>，技术不行有再多的粉丝写再多的文章又有什么用？来年的计划，也早在脑海中了：</p>\n<ul>\n<li>Leetcode （量化个目标，切题数达到 350 吧）</li>\n<li>ES6/7</li>\n<li>Vue.js</li>\n<li>CSS / Bootstrap</li>\n<li>PHP / Laravel</li>\n</ul>\n<p>接下去一年的目标，还是以 ES6 和 Vue 的学习为主吧，希望能早日跟上主流前端的步伐 。</p>\n<h1>未来</h1>\n<p>最后来谈谈未来吧。</p>\n<p>对于现在的工作，完成日常需求已经基本没有问题，但是已经找不到任何成就感，也提升不了自己的 JavaScript 能力。对于来年，我觉得还是有必要「<strong>走出舒适区</strong>」，有两个选择，一是往 PHP 方向靠，毕竟 PHP 是世界上最好的语言，也是我司的主流语言，对于我个人而言，学习余地还有很大；另一个方向是往前端方向转，我司的前端就是 CSS+jQuery/Zepto 的组合， jQuery/Zepto 我也不熟，可以好好学习下，虽然说现在用 jQuery 似乎有一点 \"过时\"，但是我觉得 jQuery 还是有适用场景的（比如我司这样少交互多静态的页面）， MVVM 并不是万能的。 CSS 的话，就更不会了，比较担心不会 CSS 如果要换工作会有很大局限性。当然还有另一个选择，直接跳槽换一家公司，看了下 JD ，不会 Vue/React/CSS 基本上能把所有职位 Pass 掉，我感觉快要找不到工作了 ... 有人说，爱上一份工作，可能是因为有一个好的 Leader ，或者做的事让你有成就感；也有人说，员工的离职原因林林总总，只有两点最真实，一是「钱，没给到位」，二是「心，委屈了」，那么你呢？</p>\n<p>在上海断断续续也是待了快两年了，离别也已经进入了倒计时（年纪大了 &amp; 买不起房）。对于上海这座城市，过去没有好感，现在也没有，将来应该也不会有。楼主是浙江人，未来应该会回浙江工作吧（<strong>有合适的工作机会欢迎推荐 hanzichi#<a href=\"http://outlook.com\" rel=\"nofollow\">outlook.com</a></strong>），当然，以后的事，谁又说的准呢？中秋从家里回来后，老爸发微信给我说，「家里少了你好像空弄弄的，不热闹」，七尺男儿差点看哭，但是家里的小县城，又找不到合适的工作，我想这也是大多数在外打拼的程序员比较纠结的地方吧。</p>\n<p>那就这样吧，给未来的自己，加油！</p>\n<p>梦想还是要有的，万一实现了呢？</p>\n<p><img alt=\"\" src=\"http://images2015.cnblogs.com/blog/675542/201611/675542-20161105105744783-786353705.png\"></p>\n</div></div>"], "reply": "84", "tittle": "早产的 2016 年终总结", "comment": ["一是「钱，没给到位」，二是「心，委屈了」\r", "当初自己总结离职原因，也是这个感觉的。哈哈", " 马爸爸的这话还是很经典的", "对于上海这座城市，过去没有好感，现在也没有，将来应该也不会有\r", "作为土生土长上海人也是这么觉得><", " 羡慕土生土长上海人啊！至少不用租房，不用碰到恶心的二房东 ...", "同感", "同迷茫啊，现在的公司其实做业务上技术已经足够了，公司也不需要什么了不起的技术。咋办好呢。。。", "对于北京这座城市，过去没有好感，现在也没有，将来应该也不会有", " 个人觉得还是要走出舒适区啊，看看在单位养老的高管们，不过如果能混到高管也是不错啊 ...", " 同没有，帝都去过一次就不想再去了 ...", "你该换家公司了，找你能够发挥你足够能力的公司", "现在 comfort zone 和 target list 慢慢流行起来了，我们前两天 ceo 来中国和我们谈的也是这个。", " 一个公司一个坑啊，遇到合适的公司真不容易 ...", " comfort zone 和 target list ，完全没听过啊 ...", "大哥 大哥 jquery 过时了 那么现在用那些新技术呢 我想了解了解", " 大哥也不懂啊，感觉 React/Vue/Angular/Weex 等比较火吧，反正学一个不会有错的", "楼主文笔不错，文章的逻辑也挺清晰", " 感谢，修修补补写了很久", "大哥 大哥 前段更新太快 这车都超速了 怎么办 赶不上了", "和我一样 php 偶尔需要维护网站 写页面...感觉还是看好基础然后能快速适应新的东西把..老是跟着新的 只是会学使用.", "看了楼主的 Underscore.js 源码解读，很有价值，赞一个\r", "发现早已 star folk follow 了哈哈", "楼主好棒", " \r", "\r", "comfort zone 就是你说的舒适区， target list 类似于你说的来年计划，不过一般来说 target list 会更现实点，不光光是一个目标，还会涉及对于这个目标，我的优缺点，谁能帮助我之类的。\r", "\r", "PS ：我感觉你目前的走出舒适区，其实不算走出舒适区，新的区域只是不熟悉，熟悉了依然会很舒适。", " \r", "\r", "找酒店式公寓就行了，不用担心被二房东坑", "既然总结了，那么你的 2017 年也就开始啦...\r", "赞。。", "建议楼主去杭州，收入差不太多，但是房价便宜了不少，互联网环境也不比上海差", "一个技术，会了就无聊了。要找找新的东西来学", "向楼主学习，开始刷数据结构和算法，修炼内功", "看来程序员都需要一个认可啊····", " 赶不上也得赶啊 ...", " 有道理，感觉自己 JavaScript 基础看的够多了，该看点新的了", " 感谢微软大大！", " 我傻了，看到个英语单词，还以为是前端新名词，哈哈", " 之前看过蘑菇公寓那种一室户的，惨不忍睹 ... 酒店式公寓还真没看过", " 压力很大，想放两个月假 ...", " 楼主也是这么想的，下一份工作优先选择在杭州找了", " 任何人都需要认可啊 ....", "才两年就要走， LZ 多大了？", " 话说回来，建议放弃 PHP ，转投 Node + TypeScript 和 JavaScript····", " 不开心，不开薪", " 26 ，主要是感觉上海买房是个梦", " 感谢建议，我也想修修 Node ，不过前提是能找到用 Node 的主 ...", "lz 加油。  和 lz 想法好接近，共勉。", " great minds always think alike 哈哈", "我从北京换到上海来工作，感觉如果北京空气质量没有那么糟糕，我肯定会选择待在北京", " 毕竟帝都的机会还是比魔都多的，薪资也比魔都高吧", "工作是为了更好地生活， LZ 可以对工作学习之外的生活也做个规划", " 感谢建议，生活的确犹如一潭死水", "这篇总结质量不错 有含金量", " 恩，一个是机会多，另外一个感觉北京更像是一个大都市，移民城市，感觉更有归属感。不知道为什么，可能是身边的人给我这种感觉吧", " 客观了，哈哈", "梦想还是要有的，万一实现了呢？\r", " ", "  共勉", "有理想，有目标，是好事", " \r", " 共勉~", "相比而言，简直高产似...", "  ", " ", "浙江老乡啊，同在魔都。诶。可能打拼几年也想回去了。", "挺佩服楼主在舒适的环境还能保持前进的，来阿里？", "lz 学习毅力比大部分工作的人要强", "兴趣入坑 需求挖坑 然后是兴趣填坑  循环往复", "去大搜车找芋头，他应该需要你这样的人才，哈哈", "浙江人在深圳编码，和楼主好类似，，，", "加油吧，共勉，工作的氛围要喜欢享受才是最好的，希望能早点找到，喜欢你的博客，已添加 rss", "总结很好啊，比我强多了", " 感觉可以交流下，浙江除了杭州，别的市貌似待遇差太多啊", " 我也想啊，虽然不妄自菲薄，但是感觉离阿里还是有距离", " 谢谢鼓励，感觉兴趣还是很重要 ", " ", " 太对了！", " 感觉大搜车的技术栈，很合胃口，年后可以投投试试", " 深圳怎么样？好像过去看看传说中的城中村", " 谢谢鼓励，会用 RSS 的骚年都是潜力股", " 一起加油哈 ", " ", "看到楼主感言,发现自己也是差不多的状态,还是需要一些正能量才行啦.干这一行,还是很有潜力的", " 是的，要对未来充满信心，我也总是这么「激励」自己", " 迟点给你邮件~ 先搬砖啦~", "学习了楼主的 计划-->达成模式", " 同感", "不错，少年！", "写的很好！", "跟 LZ 情况类似，总有种被框在一个圈子里跳不出去的感觉，然后东学一点西学一点来安慰一下自己😔（当然是指我自己哈）", " 哈哈 我现在就这样 工作轻松也就干点想做的事 不要当我要学习这么沉重的词 就当是打发时间的  这样反而会放松不少 心理也没啥压力", "一句话，“没遇到好领导”", " \r", " \r", " \r", "谢谢大家~", " 说到心坎里了。 千里马常有，而伯乐不常有", " 目前，还没进村，因为公司离村比较远，刚来打算住公司边上的小区，后面可能会进村，，，"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>怎么知道 iOS app 都使用了哪些第三方库，怎么逆向啊 v 友有知道的吗</p>\n</div></div>"], "reply": "4", "tittle": "iOS 逆向 app 都使用了哪些第三方库", "comment": ["没人啊", "拆包不就能看到一般的使用了哪些库?", " 看不到", "0. 解包，可以看到部分第三方 Framework 的 bundle\r", "1. 砸壳，利用 dumpdecrypted 对 App 破除加密限制，然后 classdump 头文件，到这里基本上就可以获知你需要的使用第三方库信息 \r", "2. hook or decompile 基本上就可以看到大致的源码实现思路了， IDA 、 Hooper 用来 decompile ， theos 用来 hook 。里面涉及到的东西不是一两天能说完的，网上也有一堆教程"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"http://www.v2ex.com\" rel=\"nofollow\">www.v2ex.com</a> 通常会使用加密技术来保护您的信息。 Google Chrome 此次尝试连接到 <a href=\"http://www.v2ex.com\" rel=\"nofollow\">www.v2ex.com</a> 时，此网站发回了异常的错误凭据。这可能是因为有攻击者在试图冒充 <a href=\"http://www.v2ex.com\" rel=\"nofollow\">www.v2ex.com</a> ，或 Wi-Fi 登录屏幕中断了此次连接。请放心，您的信息仍然是安全的，因为 Google Chrome 尚未进行任何数据交换便停止了连接。</p>\n<p>您目前无法访问 <a href=\"http://www.v2ex.com\" rel=\"nofollow\">www.v2ex.com</a> ，因为此网站使用了 HSTS 。网络错误和攻击通常是暂时的，因此，此网页稍后可能会恢复正常。</p>\n</div></div>"], "reply": "1", "tittle": "[chrom 打不开 v 站了] 您目前无法访问 ", "comment": ["升级 Chrome 试下"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>为什么 cloudxns 不支持通用的 OTP 两步验证，非要使用什么微信验证码。<br>\n这么糟糕的体验，就这个就不想用他们家的。 dnspod 都支持。</p>\n</div></div>"], "reply": "2", "tittle": "为什么 cloudxns 不支持通用的 OTP 两步验证", "comment": ["因为可以给你推送广告", "更接地气,也可以拉粉丝,推推新闻.\r", "otp 在国内除了程序员感觉用的不多"]},
{"content": ["<div class=\"topic_content\">我喜欢 html+css+js+php 的风格。\r<br>同时我也喜欢 vs 这个神器 IDE ，学的 C#也一直用在 C/S 上，遇到 web 开发我都是用 php 去处理。\r<br>现在我有个问题了，能否用 C#来纯粹的处理后台么，我不是要 <a target=\"_blank\" href=\"http://asp.net\" rel=\"nofollow\">asp.net</a> 那种 webform 风格（一大堆的服务器控件），更简单的说，我能写出 php 的那种风格吗？或者类似。\r<br>感谢指路！</div>"], "reply": "19", "tittle": "问一下 C#能单纯的用于控制 html 的后台处理吗？", "comment": ["直接写 ashx\r", "或者用 ", " mvc", "当然可以，可以用 Web API ，搜一搜资料很多的。\r", "PS ：现在 webform 应该用的比较少了，一般会选择 ", " MVC", " mvc 学 rails 学的很好了", " MVC 是个选择 \r", "也可以尝试下 ", " Core", " Core MVC 下的 Razor 模板页面即可写出 php 的那种风格", " 正解，不过存在一些小问题比如说 razor 的性能不是很高", "其实.Net MVC 还有一大利器，就是能直接编译成 MSIL ，这个效率其实很高的。", "Razor 吧\r", "性能不用担心的", "Blade 模板那种？\r", ".NET MVC 配 Razor 模板，一个模子", " MVC 、 NancyFX", "如果说语言层面的性能的话，有黑科技 clr 加持，.net 是超越一众脚本语言的。\r", "编不编译只不过影响冷启动速度而已，关键还是看 jit 实现的怎样，从这个角度讲各个语言都不会太差。\r", "\r", "用 ", " 写 php 风格的话，如楼上所说，最接近的是 ashx 。但是这方面不是非常成熟了。\r", " 是一套复杂的解决方案，最成熟的还是 mvc 。因为社区活跃程度较差，排第二的 webapi 也逐渐脱离主流了。", " 最新的 ", " core 把 mvc 和 webapi 合二为一了，不再区分了", " @", " @", " @", " 谢谢各位回答。\r", "\r", "也就是说，我只要用 MVC+Razor 是可以写出类似 php 的风格，在 html 页面中可以大量的自由穿插后台语言？\r", "我喜欢的是像<a href=\"<?php echo $test_url; ?>\" ></a>这种无缝穿插的感觉，实在太棒了！不知道各位说的是否可以达到这种感觉。可能表述不清，但基本就是这样子。", " 当然可以， MVC 视图可以直接<a href=\"@test_url\" ></a>", "前后端分离,走 RESTful Web API. 用 ", " WebApi", " 是的，而且语言层面更加优雅，这是 C#一贯的优点，至于效率 问题，最新的 ", " core 性能国外的社区测试已经甩了 java 几条街\r", "怎么上图 V2EX ", "其实 webfrom 也可以完全不用控件的，穿插后台语言 webform 也有 <%%>标记", "你说的不就是 MVC 么，结合 razor 可以插入服务器语言。话说最近.net 是要火起来了么……", "mvc webapi webpages"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>原创干货，来自于本人 20 年编程实战经验，迅速提高实战能力的简单方法，分享给大家啦，请笑纳：</p><p>\n百度网盘： <a href=\"https://pan.baidu.com/s/1qYk0D1y\" rel=\"nofollow\">https://pan.baidu.com/s/1qYk0D1y</a> </p><p>\n坚果云： <a href=\"https://www.jianguoyun.com/p/Ddy3bL4QxJABGOWBIQ\" rel=\"nofollow\">https://www.jianguoyun.com/p/Ddy3bL4QxJABGOWBIQ</a></p>\n</div></div>", "<div class=\"topic_content\">补充：本文主要面向新手程序员，高手看看也无妨：）</div>", "<div class=\"topic_content\">视频版已录制完成，请观赏： <a target=\"_blank\" href=\"https://www.v2ex.com/t/324007\" rel=\"nofollow\">https://www.v2ex.com/t/324007</a></div>"], "reply": "30", "tittle": "提高编程实战能力的捷径（原创分享）", "comment": ["不错，挺适合新手程序员入门的", "为什么我觉得编程没有捷径可言，对于这句话 “迅速提高实战能力的简单方法”，我只能呵呵了", "不好意思，哪里有干货？", "先顶后看", "说来说去，就是一句是人都知道的道理：数据结构，算法，正则(?)", "仁者见仁，智者见智，呵呵", "支持原创分享。\r", "但是楼主有点言过其实了。", "没有干货，失望。。。", "关键词：捷径, 百度盘", "请问干货在哪里？你 20 年就总结出这些了？这 20 年你也没白活了，你这套东西适合去教小学生。你发到这里来真的应得住一句典故：“班门弄斧”。\r", "\r", "我纯粹来喷人的，不喜勿回。", "一大波 v 站伸手党在开喷的路上了 hhhhhh", "感觉只是一个广告", "迅速提高实战能力的路就是实战，关键是实战的内容。\r", "而且， pdf 没有干货，内容上过学的都知道，就别浪费流量了。", "原创干货，来自于本人 20 年编程实战经验，迅速提高实战能力的简单方法 //这是个广告。", "人生没有捷径！\r", "根据我从出生到现在奋斗近三十年的总结！", "二十年就这么点干货。。。。", "其实还不错，一个总结吧，别起这么个标题就行。", "浮夸。差评。", "怎么可能会有捷径？\r", "\r", "还有，你这婆婆特，一股浓浓的 21 世纪初的新浪风。。。。", "适合入门 +1, 略有点标题党 :)", "感谢大家的赞和喷，相逢即是有缘。\r", "说成功没有捷径的，我觉得说的有道理，踏踏实实，不玩花样，人生自有一番天地。其实，“没有捷径”正是捷径！\r", "关于分享的文档，本人的出发点在于希望帮助新手朋友找到技术上的努力方向，把劲儿用在刀刃上，达到事半功倍的效果。从这个角度上讲，说是“捷径”亦不过分吧？\r", "再次表示感谢！", "干货太干", "北大青鸟需要你.", "不错哦。", "提高实战能力还是得靠实战……\r", "要说捷径的话，就是一些别人的实战经验吧：最佳实践。\r", "\r", "Anyway ，支持分享。", "哈哈，我想作者的本意还是好的，只是没有在 v 站发帖的经验，标题内容新闻风格。。。估计平时新闻看多了。不过也不要因为这个就开喷吧。和谐啊", "批评家总是比作家多，觉得不好的自己弄一个好的，喷人我奶奶也会", " 谢谢！正如您所言，我是第一次在 V 发帖子，编程方面是老鸟，发帖子方面却是菜鸟，呵呵", "内容可能还不错，但是这个 PPT 风格却不敢恭维。", "这...实在和标题名不副实啊 程序=算法+数据结构，表示大学接触 C 就听老师这么说了，然而这也算提高之捷径？"]},
{"content": ["<div class=\"topic_content\"><img src=\"http://ww2.sinaimg.cn/large/005yrGU3gw1fa35klgycij30xg0l2gqu.jpg\" class=\"embedded_image\" border=\"0\"> \r<br>\r<br>来源: <a target=\"_blank\" href=\"http://weibo.com/exinnet\" rel=\"nofollow\">http://weibo.com/exinnet</a> \r<br>\r<br>逝者安息,愿天堂没有加班.🕯🕯🕯\r<br>\r<br>---\r<br>看了下出事的这位的微博,20 号好像还在日本游玩,唉...\r<br>\r<br>不论是不是加班引起的,大家还是多注意身体.\r<br>\r<br>工作是为了生活,而生活不是为了工作.</div>"], "reply": "72", "tittle": "今天刷微博发现又有一位互联网公司的员工猝死", "comment": ["我们不加班。。。幸好幸好", "注意身体", "想转行了", "幸好我比较惜命，把加班当常态的公司试用期没到我就闪人", "看他玩得挺开心的啊没看出是加班导致的", "挺壮的，爱运动，猝死，多半是心脏有隐患", " 你不用担心,其他行业猝死的人数也不少, 只不过不像攻城师这个群体对猝死这么敏感而已.", "我们不加班, 每周三下午还有健身课, 公司出钱找的教练来教, 哈哈, 最近的主题是合气道, 打算明年都考上带了换泰拳, 以后好成为互联网圈最能打的公司......", "你要别人钱，别人要你命。所以去对公司，做对事很重要。如果没有机会做对事说明缘分不够。早转行", " 哈哈哈，要去你们公司。", "别的行业也有加班死的，就你们程序员矫情", "为什么回帖都说不加班，我发了几个求职找不加班的没人找我。", "累的人多了去了，又不是程序员才会猝死，自己选择的熬夜能怪谁。", "世界上平均每 1.8 秒就有一个人死亡。\r", "\r", "\r", "  看过你的招聘帖，要求虐高。", " \r", "\r", "错了，是每秒 1.8 人死亡", " 我好像什么要求没提过吧，只提了一个不加班。", "少熬夜！！！", "哎，很多时候不觉得人挺矛盾的吗？想要高工资多挣钱，岂不知天上不会掉馅饼，多挣的钱都是用自己的时间和生命换来的，雇佣我们的老板哪个都不傻，白给你这么多钱？？每每看到 IT 人猝死，大家开始说不要加班了，但真正碰上了你能不加么？平衡好才是该做的", " 技术栈要求高，我这只菜鸟只能仰望", "有一些心脏的隐疾，爱运动反而会加重心脏压力，导致猝死。", "心脏方面的隐疾，常规体检能检查出来吗？ 还是要专门做这方面的检查？", "听说写一行代码就能续 1s", "不用加班+1 ，每天 6 点下班回去做饭", " 自己做判断，如果家族里面有心脏病人，亦或者自己有过心脏不适，可以去做一下超声心电图+24 小时心电图，基本上可以排除大部分了。其他的也基本是，如果家族史有人得过什么严重的疾病，自己就要小心这方面，很多严重疾病都有家族遗传倾向。", " 心电图 + 心脏彩超", "怎么感觉死的基本都是爱运动的，视频大神雷霄骅也是爱运动的，哎", " \r", "还是说详细点，我的一个好友近三十岁，平时无心脏相关症状，近期体检时发现心电图有点点异常（貌似是什么波倒置）。于是医生让做个心脏彩超，不过心脏彩超没有发现会导致那个心电图异常的原因，医生判断那个心电图异常是由于近期经常熬夜导致的。\r", "但是心脏彩超却检查出他有个先天性的心脏缺陷：二尖瓣脱垂 + 反流。据医生所说，这个缺陷大概 10 个人中就有 1 个人有，但大部分人不会察觉也没有症状，也不需要治疗。但是有这个缺陷的人就不适合进行太多高强度的运动，否则会加重脱垂和返流的程度，严重的话就要进行二尖瓣修补或置换手术。而且有此缺陷的人得心肌炎的可能性更高，也相对的发生猝死的几率也会比普通人高。\r", "他要不是那次因为熬夜导致心电图异常而去做了心脏彩超就压根不会知道自己有这个毛病，之前他经常熬夜熬成狗，知道有这个毛病后立马变了个人，天天早睡早起，我们叫他去宵夜或看个零点首映他都不去了，原本他还想明年凑热闹参加个半马，这下也有自知之明放弃了。", "人，若赚的全世界，赔上性命，又有什么益处尼？ 仔细琢磨、思考！", "死人很奇怪吗？", "看了都不敢跑步了，本打算今年跑个半马什么的。。", "下班了以后还在在玩电脑编程，不知道会不会被判定为正在加班。", "大把行业公司有员工猝死。", "嗯，可以名正言顺的给自己找借口了", "给你们讲个恐怖故事，据不完全统计九零后程序员至今没有一个活过 30 岁。", "IT 行业本身对互联网掌握比其他行业多，前几天附近一个建筑工地事故两个工人去世也没人关注。\r", "平时多注意身体，保持好生活习惯", "据说编程人都有 600w 个{}，提前透支提前 over 。 ps.Lisp 从业者除外。", " 什么公司？介绍下", " 我参加了中山半马，好可怕ヽ(*。>Д<)o゜", " 这样的话 Python 能活好久。", " 看我之前的 Post", " python 呢", " 其实很多行业死亡率都比 it 多… it 死亡率绝对不超过平均水平的。只不过大家对这个都敏感，和加班一个道理，要知道很多工作都没有不加班这一说。", " 我喜欢，合气道最好", "和飞机失事一个道理？", "江西丰城电厂“ 11·24 ”事故死亡人数升至 74 人 其中 68 人确认身份\r", "\r", "\r", "IT 已经是死亡率很低的了", "不经常运动的，突然做剧烈运动小心脏会受不了的，以后运动时要量力而行了，感觉❤脏被摘除一样。😂", "钱没了可以再挣。命没了就是真没了。大家都保重身体吧。哎。祝这兄弟一路走好。愿天堂没有加班。", " 吓得我赶紧写了几行注释外加多按了几次回车.", "不是都去日本了吗，日本不是有救心药的吗，怎么不买点？药妆店随便买。。。", " 还有这说法？看来为了长命，以后不能复制粘贴了，全部手敲。。。", " 我以前的学校近期有个新闻，就是一个大一新生体测跑步的时候晕倒了，然后送到医院抢救不过来了……保持良好作息习惯，运动量力而行", " \r", " \r", "\r", "谢谢两位。我是从小胸口时不时的阵痛，也不知道是不是心脏的问题，看来有机会专门得去检查下了", " 哈哈，不错，以后有啥事找你们公司出面。一个星期有个一次两次的锻炼是最好的，真羡慕。", " 赞同，很难找到高薪又清闲的工作，关键是找到平衡了。", "最近看到的第二个猝死新闻了，真爱生命，远离加班。", " 赶紧问一下， Lisp 跟{}有什么关系？", " 不加班的企业工资大多不高。", " lisp 只有 600W 个()", "芒果 TV ？", "个人问题，为什么上升到职业角度？猝死的人多了去了", " \r", "我学校旁边的那位？", "好方", "爱运动，挺壮。我开始慌了。", " 一般要求不加班的都不怎么要求工资了。", "我最近体检心电图查出窦性心律不齐，医生说没有明显症状不用去复查，看了这个有点慌，我要不要去做个 24 小时心电图啊", " 24 小时躺着做吗？", " 囧囧囧，听说是后背着一个仪器一天", "  施主吃辣么？", " 建议还是做一下，也就背着一个小盒子，不影响正常工作的。心律不齐可大可小，不缺那几百块钱钱还是做一下确保安全，建议超声心动图检查也做一下。", " 不吃"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h3>OPener_Server 所有的配置及后续运行全部依托 ajax post json 数据。</h3>\n<h3>不像 nginx 、 apache ， OPener_server 没有复杂的配置文件，也没有找不到配置目录的困难。</h3>\n<h3>所有的一切全部一行 json ，然后 ajax post 到 OPener_Server 就可以了。</h3>\n<h2>启动一个 http 服务器，并设定一个根目录</h2>\n<p>继续 jquery ：</p>\n<pre><code>\nvar start_http_server3={'action':'new_http_server','ip':'','port':'1010'}; // 开启一个新的 http 服务器，监听在端口 1010 上\nvar reg_url={'action':'reg_url','type':'file_root','url':'/*','host':'*:1010','go':'/root'}; \n\nurl_post_data(url,JSON.stringify(start_http_server3)); \nurl_post_data(url,JSON.stringify(reg_url));\n\n</code></pre>\n<h2>启动一个 https 服务器，并设定一个可浏览目录</h2>\n<p>继续 jquery ：</p>\n<pre><code>\nvar start_http_server4={'action':'new_https_server','ip':'','port':'1011','cert_file':'opener.pem'}; // 开启一个新的 https 服务器，监听在端口 1011 上,指定证书文件是 opener.pem\nvar reg_url={'action':'reg_url','type':'file_index','url':'/index','host':'*:1011','go':'/root'}; \n\nurl_post_data(url,JSON.stringify(start_http_server4)); \nurl_post_data(url,JSON.stringify(reg_url));\n\n</code></pre>\n<h2>OPener_Server 教程：</h2>\n<p>第 1 弹： <a href=\"https://www.v2ex.com/t/320838\" rel=\"nofollow\">https://www.v2ex.com/t/320838</a><br>\n第 2 弹： <a href=\"https://www.v2ex.com/t/321686\" rel=\"nofollow\">https://www.v2ex.com/t/321686</a><br>\n第 3 弹： <a href=\"https://www.v2ex.com/t/322192\" rel=\"nofollow\">https://www.v2ex.com/t/322192</a><br>\n第 4 弹： <a href=\"https://www.v2ex.com/t/322488\" rel=\"nofollow\">https://www.v2ex.com/t/322488</a><br>\n第 5 弹： <a href=\"https://www.v2ex.com/t/322698\" rel=\"nofollow\">https://www.v2ex.com/t/322698</a></p>\n<p>项目地址： <a href=\"https://github.com/openerserver/openerserver_perl\" rel=\"nofollow\">https://github.com/openerserver/openerserver_perl</a></p>\n<p>微博： <a href=\"http://weibo.com/openerserver\" rel=\"nofollow\">http://weibo.com/openerserver</a></p>\n<p>微信公众号：<br>\n<img alt=\"\" src=\"http://ww2.sinaimg.cn/orj480/006897bVjw1f9tqs614rqj309k09kjrc.jpg\"></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "开启一个 https 服务器（一行 json 搞定，所有配置都 ajax post）， OPener_Server 第 6 弹", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>昨天晚上 9:58 分开始，到 11:34 分结束，总共收到了超过一千条 <a href=\"http://Zealer.com\" rel=\"nofollow\">Zealer.com</a> 的验证短信。\n邮件内容都是一样的，提醒我绑定邮箱。</p>\n<p>我并不记得我有 zealer 账号啊</p>\n<p>怎么回事？ Zealer 服务器炸了吗？</p>\n<p><img alt=\"邮箱列表\" src=\"http://i1.piimg.com/1949/38049b62c88c4de9.png\"></p>\n<p><img alt=\"邮件详情\" src=\"http://i1.piimg.com/1949/ef61b4105df7e9b2.png\"></p>\n</div></div>"], "reply": "18", "tittle": "昨天被 ", "comment": ["老罗干的？", "这个跟 zealer 没关系吧，就是利用你的邮箱，反复注册 zealer 会员", " 想不明白注册了 zealer 有啥好处。。", "也许是和邮件轰炸机干你", "这不是针对 zealer ，而是利用 zealer 的注册激活机制给你发送垃圾邮件，不过这样做没什么卵用", " 所以说还是 zealer 没有上频率限制和 captcha 导致有这个漏洞吧，哎，谁会想着搞我呢", "Apple ID 又被锁了，我估计有人想盗我号", "能被做到这步估计被人肉了，注意防钓鱼。", "注意防钓鱼，开启 Apple ID 二次验证", "只是 zealer 被人利用作为轰炸器了", " \r", " \r", "二次验证一直保持开启，钓鱼警报拉到最高，感谢提醒，目前安全", "有可能是利用大量的 zealer 垃圾邮件，去掩护 apple 给你发的邮箱。", " 有可能，不过我用筛选筛掉垃圾邮件后，没有发现 apple 给我的邮件，万幸", "邮箱轰炸？", "一个半小时 1000 多封，如果是利用 zealer 发垃圾邮件的话做不到这么高的频率吧。一般网站发验证邮件都是有时间间隔的", "帖子转给了 zealer 的开发", " 厉害了 word 哥", "哈哈哈哈， 老罗干的。"]},
{"content": ["<div class=\"topic_content\">还有什么需要你买买买？</div>"], "reply": "43", "tittle": "人民币贬值了，大家黑五还有兴趣吗？", "comment": ["昨天亚马逊 750G 的镁光 SSD 才 700+RMB ，晚上回家没货了", "昨天 g pro 美亚 34.99 刀 早上起来没货了", " g pro 是什么东西？ gopro 吗？", " 罗技今年新出的鼠标", " \r", " \r", "就跟双十一的优衣库一样？", " 搭上建行返现随便入了一个", " 可能是的被买完了，特三角的 SR5 蓝牙版比普通版还要便宜，但是还有货", "准确的讲不是人民币贬值 是美元升值", " 嗯，这个我看到以后立马下单了", "真的没兴趣，啥都没买，本来准备买一个戴森 v8 才 2999 保税包邮，谁知道刷了几次没刷开，想想算了", "主要是没出什么特别好的价格，不然这点汇率的损失用信用卡活动就抵掉了。", "很多商品都涨价了 \r", "有些居然在前 2 个星期是历史低价", "建行返现鲁礼品卡 每人 0 撸 3000 大洋", "起来发现没货了…感觉也没多大优惠", "  美亚买礼品卡 也返吗 ？ 20% 具体多久返回到银行卡呢", "\r", "\r", "\r", "这个是 crucial MX300 750G 的价格图  最低价是 80 刀", "priv  99 现实吗 哎", "只要美元汇率不到 10 ，海淘优势明显，而且质量比国内放心一点，现在谁买东西不是买质量", " 有什么办法能 0 撸 3000...", "还好我在半年前屯了点儿亚马逊礼品卡，现在应该升值了", " 这也行！！！建行知道你会这样玩吗？", " 哪里看到 99 了？", " G Pro 是 G102 吗", "g pro 没了\r", "g403 也没了\r", "就剩个 g303 了，尴尬", "blob:http://imgur.com/c62d3368-cfb4-4017-87ea-b972676c8e97", " 不是， g 102 定位入门， g pro 定位高点。尺寸相似，材质、引擎不一样。", " 准确讲两个都有因素", " 那個是第三方的，自營 99 是新低了", " 记得朋友去年咬牙买了一块 240G 的都特瞄的七八百...现在那么跳水?", " 第三方名称叫“ crucial ”", " 电子产品不值钱 尤其这种以容量为主的", "撸了两双鞋子，本身已经是好价 + 7 折\r", "\r", " 包邮吗？", " 你脚真大呀", " 我也发现了 真大啊！！", "irig keys pro", "买了一堆东西，其实 RMB 对其他货币稳定了，只不过美元走强。", " 境内包邮\r", "\r", " \r", " 哈哈哈 46 是比较大", " 这个图可以哪里查？", " 哪卖 99 USD ？我前几天才 299 USD 在 BlackBerry Shop 买了个零售版。亏了？"]},
{"content": ["<div class=\"topic_content\">我自己一般是结合番茄工作法让自己不这么累。但是好几个番茄之后也会头晕。\r<br>然后发现，喝一点红枣泡的热水，效果好很多，一天下来人是精神的。关键没有什么后遗症，不像咖啡那样，兴奋一阵然后更加萎靡。\r<br>\r<br>其他还有什么方法可以分享的呢？做运动？喝其他什么东西？做早操？</div>", "<div class=\"topic_content\">这篇文章不错   程序员如何保证「专注」与「效率」 <a target=\"_blank\" href=\"https://segmentfault.com/a/1190000007614939\" rel=\"nofollow\">https://segmentfault.com/a/1190000007614939</a></div>"], "reply": "45", "tittle": "大家在思考了很久问题，觉得有点头晕，脑袋转不过来的时候一般怎么处理？", "comment": ["一般我也是先放着，过一段时间之后再来处理这个问题。", "感觉疲惫的时候，有人就扯扯淡，没人就听听歌。放松放松。", "  放着的时候一般做些什么呢", "倒立", "做一段时间就玩玩小游戏", " 好有才[笑尿的表情]", "睡一觉就好了。哈哈", "不是看看帖子么~~", "扯扯皮，逛逛 v2", "抿一口二锅头", "我是两种方法\r", "健康的，玩一局桌面小游戏，四川麻将之类\r", "不健康的，抽烟", "看看笑话。总之转移注意力。并且不做另外一件费神的事。", "出去走走，在公司也可以出去走五分钟然后再继续", "喝杯咖啡", "看看本子, 撸一发(逃~)", "站起来走走", " 我一般是有问题当天想不出来的话，先处理别的事情吧。然后晚上回去干别的事情，第二天精神饱满的时候再来考虑这个问题。\r", "\r", "想不出来的时候，要么找个时间等思路理清，要么找个人来讨论讨论（小黄鸭工作法也可以，没尝试过）。", "洗澡。\r", "优点是灵感喷发的比花洒还快，缺点是时间比较难太久（其实从某种意义来说也算优点）。", "小黄鸭调试法", "多喝六个核桃", "背靠椅子，泡上茶，接杯热水，喝完。伸个懒腰，神清气爽。", "喝点安神补脑液，可能投就没那么晕了 0.0", "要么缓一缓稍后再做，要么听点摇滚清醒头脑", "当日弃坑开始喝茶,第二天 10 分钟灵感就出来解决了....\r", "经常这种情况", "来回走路", "如果有可以全身心投入的运动就好  比如打球 游泳…", "没有什么事情一次大保健解决不了的，如果有那来两次", "睡一觉，明天再想", " 关于调试，我一般是二分法，把一半代码注释掉，看问题还在不在，如果在，则对剩下的代码再做二分，如果不在，则对注释的代码二分……", " \r", " 哈哈，这是广告么", "我会选择干别的事，比如看看不那么费脑的书。", " 何谓全身不全身呢？我的第一感觉是职业运动员才叫全身。", " 精力充沛啊", "睡觉", "撞墙以重启", "脑袋从来都转不过来,转到 90 度就不行了", "撸一发", "真的，不如撸一发，撸完立马思维就集中了", "喝杯茶或者咖啡，然后听会歌，上个厕所。回来继续怼。", "把脑袋砍了", "抖腿", " 原来还有这样的网站", " 哈哈，有意思", "睡一觉, 或者出去跑跑"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><blockquote>\n<p>最近国内公有云服务商掀起了一轮降价浪潮，继阿里云上月宣布降价之后，腾讯云也在本月初推出全线降价优惠。<a href=\"http://www.codingpy.com/article/a-comparison-of-qcloud-and-aliyun-products/\" rel=\"nofollow\">本文</a>希望从云计算用户的角度，通过真实的产品使用、评测，对降价后各家的产品性价比进行较为全面的对比。对应的<a href=\"https://github.com/bingjin/CloudTesting\" rel=\"nofollow\"> Github 项目地址</a>。</p>\n</blockquote>\n<p>大约一年前，我在某国外云厂商上部署了<a href=\"http://codingpy.com\" rel=\"nofollow\">自己的第一个网站</a>，从此成为一名云计算用户。由于国内用户访问不便，前段时间我将网站迁回了国内，并记录下了大致的迁移过程。其中开篇简要说明了最终选择的国内云服务商（腾讯云），但并没有对背后的具体原因做深入的解释。</p>\n<p>本文打算从性能评测和价格等角度，做一下说明。</p>\n<h2>云计算市场争夺</h2>\n<p>阿里云作为名副其实的国内业界第一，名声非常大，不过最近 IT 之家的事闹出来之后，我有点庆幸最终没有选择它。腾讯云算是业界老二，而且有着腾讯这个强大的靠山，云服务产品的种类和质量都不错。</p>\n<p>上个月阿里云在云栖大会上宣布降价，昨天<a href=\"https://www.qcloud.com/act/event/all-discount.html?utm_source=Zhihu&amp;utm_medium=Community&amp;utm_campaign=Community\" rel=\"nofollow\">腾讯云方面也推出了全线降价活动</a>，对包年包月产品均提供了大幅度的降价优惠。阿里和腾讯在云计算领域之争继续上演，双方都想通过价格优势带来用户的高增长，抢夺市场份额。</p>\n<p>这对于云计算用户来说自然是一件好事，但是<strong>如果让价格完全左右企业或个人用户的购买决策的话，那么最终很可能会出现已购产品无法满足需求，从而不得不被迫迁移的情况</strong>。笔者的观点很简单，在考虑价格因素之前，应该先从产品性能、服务等多方面进行评估。</p>\n<p>在选择自己的云服务器之前，我也在腾讯云和阿里云之间犹豫过，并对两家的产品做过一些简单的对比。下文中会简要分享一下对比结果。</p>\n<p>在对比每一款产品时，本文先通过一系列的标准化测试比较产品的性能，然后再结合产品的最新优惠价格因素进行评价。至于两家的产品到底谁的性能更好、性价比更高，一切还是要用数据说话。</p>\n<blockquote>\n<p>本文采用的测试工具和方法介绍，请查看配套文章：<a href=\"\" rel=\"nofollow\">云计算产品性能测试指南</a>。对象存储部分的脚本可在<a href=\"https://github.com/bingjin/CloudTesting\" rel=\"nofollow\"> Github 项目</a>中查看。阅读期间，如果你觉得具体对比过程太长，可以直接跳到本文结语部分查看对比结论。</p>\n</blockquote>\n<h2>选择对比产品</h2>\n<p>腾讯云和阿里云都是典型的 IaaS 服务商，产品种类繁多。限于时间和成本，没办法对所有产品进行一一对比，只能有选择性地比较一些基础产品和服务。</p>\n<p>根据<a href=\"http://media.amazonwebservices.com/architecturecenter/AWS_ac_ra_web_01.pdf\" rel=\"nofollow\"> AWS Web 应用参考架构</a>，一个高可用、可伸缩的网站至少需要使用以下云计算资源：云服务器、云数据库、对象存储服务、负载均衡、内容分发等。因此我们在本文中主要对比云服务器、云数据库和对象存储这三个比较基础的产品。</p>\n<p><img alt=\"网站参考架构图：以 AWS 服务为例\" src=\"https://pic4.zhimg.com/v2-eb5f33317713b3d69e2d9a2501590c19.png\">\n&lt;small&gt;网站参考架构图：以 AWS 服务为例。&lt;/small&gt;</p>\n<p><img alt=\"对比产品的英文简称\" src=\"http://ww2.sinaimg.cn/large/65e4f1e6gw1f9ggcjuhqvj20om07m3z7.jpg\"></p>\n<p>&lt;small&gt;对比产品的英文简称&lt;/small&gt;</p>\n<p>下文在谈到对应产品时，将使用其简称表示。</p>\n<h2>云服务器对比</h2>\n<p>云服务器是所有云计算服务商提供的最基础产品。厂商一般会根据分配的资源划分云服务器的级别和规格。但是<strong>由于采用的基础硬件、架构和调优技术存在差别，类似配置的云服务器之间也可能有较大的性能差异</strong>。</p>\n<p>如果想了解并比较不同厂商云服务器的差异，最好的方式就是运行基准测试。</p>\n<h3>性能测试准备</h3>\n<p>在开始测试之前，我们先在两家创建相同配置的两台云服务器，尽量确保测试结果之间具备可比性。付费方法均采用按量计费，使用包年包月服务器进行测试的成本较高。</p>\n<p>腾讯云和阿里云针对按量计费的云服务器，均要求账户内有一定的余额：腾讯云好像没有最低充值要求，充值 10 元即可；阿里云要求账户内至少有 100 元余额。</p>\n<p>测试云服务器的具体配置如下：</p>\n<p><img alt=\"测试云服务器的具体配置\" src=\"http://ww2.sinaimg.cn/large/65e4f1e6gw1f9ggf8hng9j20ok0im40l.jpg\"></p>\n<p>这里指出一点，由于阿里云 ECS 云硬盘最小为 40G ，而腾讯云 CVM 默认 Linux 系统赠送 20G ，为了在后面对比二者价格时有可比性，将 CVM 的云硬盘调整为 40G 。</p>\n<p>除了系统盘默认大小不同外，测试云服务器在 CPU 、内存、操作系统等方面均为同一规格的配置。这个规格的配置也是中小型网站部署的推荐配置，应该能够满足大部分用户的需求。</p>\n<h3>性能测试过程</h3>\n<p>由于测试的流程比较长，在本文中只简要介绍下所使用的工具及对应关注的指标。具体的测试操作步骤，我会在<a href=\"http://www.codingpy.com/article/guide-on-testing-cloud-products/\" rel=\"nofollow\">云计算产品性能测试指南</a>中介绍。</p>\n<p>在测试云服务器之前，我参考了许多相关评测文章，最终决定使用如下工具和指标：</p>\n<p><img alt=\"使用如下工具和指标\" src=\"http://ww4.sinaimg.cn/large/65e4f1e6gw1f9gghw3kjmj20kk0cmjsu.jpg\"></p>\n<p>有关其中所使用工具和指标的具体说明，请移步到这里：<a href=\"http://www.codingpy.com/article/guide-on-testing-cloud-products/\" rel=\"nofollow\">云计算产品性能测试指南</a>。</p>\n<h3>性能测试结果</h3>\n<p>GeekBench 会将测试结果上传到自己的网站，本文测试结果的访问地址如下：</p>\n<ul>\n<li><a href=\"https://browser.geekbench.com/v4/cpu/917594\" rel=\"nofollow\">CVM</a></li>\n<li><a href=\"https://browser.geekbench.com/v4/cpu/917178\" rel=\"nofollow\">ECS</a></li>\n</ul>\n<p>各项指标结果汇总如下：</p>\n<p><img alt=\"云服务器性能测试结果：腾讯云、阿里云\" src=\"http://ww4.sinaimg.cn/large/65e4f1e6gw1f9es52r3jwj20og0c4jt9.jpg\"></p>\n<p>从数据来看，腾讯云的 CVM 在 UnixBench 和 GeekBench 两个综合性测试工具下的得分都高于阿里云的 ECS 。</p>\n<p><img alt=\"UnixBench 和 GeekBench 两个综合性测试工具\" src=\"http://ww1.sinaimg.cn/large/65e4f1e6gw1f9esdebbf7j20ua0mcq3y.jpg\"></p>\n<p>CPU 延迟和内存性能方面， ECS 略胜一筹，但是优势不大。在磁盘 I/O 性能上，阿里云的表现接近在启动实例配置时所介绍的 500 IOPS 。但是与腾讯云相比逊色不少，<strong>CVM 的磁盘随机读 /写的 IOPS （每秒的输入输出量，或读写次数）均在 4000 左右</strong>。</p>\n<p><img alt=\"磁盘 I/O 性能\" src=\"http://ww3.sinaimg.cn/large/65e4f1e6gw1f9esevf4ykj20u20mu0tw.jpg\"></p>\n<p>其实看到二者在磁盘 I/O 性能上差距居然这么大，笔者刚开始很诧异，还以为测试命令输入有误，不过反复测试确认之后，可以证实<strong>这个数据并没有错</strong>。同时也向客服方面了解，得到的回复是： CVM 的磁盘 I/O 最大性能指标的确可以达到 4000 ，但是并不承诺一直保持该性能。这点可以理解，随着租户的增加，最大性能指标很有可能会逐步下降。</p>\n<p>最后要注意的是，虽然我们使用了知名的基准测试工具，但是具体的数据可能并不能精确地说明云服务器的性能。<strong>因为云服务器的性能和相邻租户使用情况是相关的，根据其他租户的使用情况而不同</strong>，因此以上数据仅作参考使用。</p>\n<h3>考虑价格因素</h3>\n<p>最后我们来加入价格因素。阿里云此前在云栖大会上宣布云产品大幅降价，近期<a href=\"https://www.qcloud.com/act/event/all-discount.html?utm_source=Zhihu&amp;utm_medium=Community&amp;utm_campaign=Community\" rel=\"nofollow\">腾讯云方面也趁着双十一宣布了一轮降价</a>，那么我们结合上面的性能测试结果，来看看降价之后两家的性价比如何。</p>\n<p><img alt=\"云服务器价格对比\" src=\"http://ww2.sinaimg.cn/large/65e4f1e6gw1f9gak8zfhfj20wi0mo76q.jpg\">\n&lt;small&gt;上图中的价格信息取自 11 月 4 日创建实例时显示的价格。&lt;/small&gt;</p>\n<p>从包月费用来看，腾讯云 CVM 比 ECS 要贵那么一丁点，不过考虑到它的性能评分就会觉得贵的物超所值了。但是从之后的二、三年优惠价来看， CVM 的费用反而要低于 ECS 相应期限的成本了。如果两家的降价幅度相同的话，那价格应该是阿里云一直便宜一些才对啊？</p>\n<p>确实，背后的原因就是在于二者的降价幅度不同：阿里云是中国区域实例最高 3 年 5 折，带宽和系统盘并没有这么高的折扣，只有 8.5 折。</p>\n<p><img alt=\"阿里云折扣截图\" src=\"http://ww3.sinaimg.cn/large/65e4f1e6gw1f9gah5inlgj20ha0pgdj3.jpg\"></p>\n<p>相比之下，<strong>CVM 是真正的全线降价</strong>，三年实例、带宽和系统盘费用都是 5 折优惠。</p>\n<p>因此，这段时间内购买<strong>腾讯云 CVM 的性价比是要高于阿里云 ECS 的</strong>，尤其是购满 2-3 年的话。</p>\n<h2>云数据库对比</h2>\n<p>我们接着对比两家的基础云数据库： CDB 和 RDS 。</p>\n<p>目前虚拟化技术已经取得很大的进展，可以将物理机虚拟化为多个云服务器，而且能做到总体性能的损耗最小。因此，网站的性能差、响应慢，可能不是你的应用代码写的不好，瓶颈很可能就在于云数据库的性能。因此，选择云服务商的云数据库性能，也是决定购买决策的一个重要因素。</p>\n<p>由于 MySQL 是网络上使用最为普遍的数据库，腾讯云和阿里云两家基础的数据库产品也都是基于 MySQL 的，因此在这项评测上我们选择 MySQL ，版本为 5.6 。</p>\n<h3>测试准备工作</h3>\n<p>两家的云数据库目前只提供一种配置类型，分别是高 IO 版（ CDB ）和双机高可用版（ RDS ）。因此在这项测试中，使用一组完全相同配置的云数据库是不可能，只能转而使用同价位级别的服务器。</p>\n<p>基于上述原因，我们分别在腾讯云和阿里云创建最低配版的云数据库（ CDB 和 RDS ）。具体配置如下表所示：</p>\n<p><img alt=\"云数据库配置\" src=\"http://ww2.sinaimg.cn/large/65e4f1e6gw1f9ggk676z2j20kg09g755.jpg\"></p>\n<p>从官方划分的类型和内存大小来看，这应该是一组可比较的实例。另外，为了降低测试时网络的影响，我们继续使用对比云服务器时创建的实例，来运行测试代码。</p>\n<h3>测试过程</h3>\n<p>MySQL 云数据库有许多性能测试工具，如自带的 mysqlap 。本文所选择的是 sysbench 。</p>\n<p>Sysbench 是一个模块化的、跨平台、多线程基准测试工具，主要用于评估测试各种不同系统参数下的数据库负载情况。还可以用来测试 CPU 性能、磁盘 I/O 性能等指标。我们用到的是其提供的 OLTP 基准测试，默认支持 MySQL 数据库。</p>\n<p>Sysbench 的安装及测试方法请看<a href=\"http://www.codingpy.com/article/guide-on-testing-cloud-products/\" rel=\"nofollow\">云计算产品性能测试指南</a>的云数据库部分。本文中执行了随机读写、随机只读两种测试。</p>\n<p>OLTP 测试输出结果如下图所示：</p>\n<p><img alt=\"腾讯云 CDB ： sysbench 随机只读测试结果\" src=\"http://ww1.sinaimg.cn/large/65e4f1e6gw1f9eunr31cvj212q0vcqau.jpg\">\n&lt;small&gt;腾讯云 CDB ： sysbench 随机只读测试结果&lt;/small&gt;</p>\n<p>我们需要关注的数据包括测试完成的事务总数，即图中的 read/write requests ，表示数据库的吞吐量；以及平均请求时间，即图中 per-request 数据下的 avg 对应的值，表示数据库请求的延迟。</p>\n<h3>性能测试结果</h3>\n<p>这里只用到了一种测试工具，而且测试的类型也不多，因此很快我们就可以得到测试结果，将其中我们需要的数据提取出来，可以得到下图中的对比数据。</p>\n<p><img alt=\"云数据库性能测试结果\" src=\"http://ww1.sinaimg.cn/large/65e4f1e6gw1f9eushnxfkj213604uab1.jpg\"></p>\n<p>从结果可以看出，腾讯云 CDB 的数据库读写请求吞吐量相比 RDS 来说高很多，是后者的约 6-7 倍左右，请求的响应时间也非常快，在 10ms 以内。高 I/O 版本的表现的确强劲。</p>\n<h3>考虑价格因素</h3>\n<p>最后我们考虑二者的价格因素。</p>\n<p>两家最新的优惠价格对比如下：</p>\n<p><img alt=\"云数据库价格对比\" src=\"http://ww3.sinaimg.cn/large/65e4f1e6gw1f9fydq7744j20ua0moacf.jpg\"></p>\n<p>&lt;small&gt;以上价格信息取自 11 月 4 日创建实例时显示的价格，区域分别为： CDB 广州， RDS 华南 1&lt;/small&gt;</p>\n<p>至于另一个费用来源——网络流量费用，如果使用两家对应的云服务器的话，与云数据库之间就是内网流量，应该都是免费的。所以流量费用问题可以忽略。</p>\n<p>从上图我们可以得出，两家在包月价格上差异不大，但是就<a href=\"https://www.qcloud.com/act/event/all-discount.html?utm_source=Zhihu&amp;utm_medium=Community&amp;utm_campaign=Community\" rel=\"nofollow\">此次降价幅度</a>来看，腾讯云 CDB 的优惠非常之高：二、三年的优惠价（ 4 折、 3 折）是 RDS 的一半；一年、二年和三年购买期限处在同一个价位段，而且买两年的价格比一年还低。</p>\n<p>如果 Web 应用要求大量快速的数据库读取操作，那么在购买期限为二、三年的情况下，配置两台 CDB 高 IO 版也比选择 RDS 的性价比要高。</p>\n<p>如果数据库请求在 RDS 测试结果之内，使用期限也不长，那么可以考虑使用 RDS 。</p>\n<p>另外提示一点，<strong>虽然说 CDB 的版本介绍为高 I/O 版，但是<a href=\"https://www.qcloud.com/doc/product/236/3189\" rel=\"nofollow\">据官方的产品文档</a>，每一个 CDB 实例都做了实时双机热备</strong>，因此在可用性方面的表现应该也不会差太多（这里我们没有对此进行测试）。</p>\n<h2>对象存储服务对比</h2>\n<p>到最后一个产品了。</p>\n<p>对象存储服务的对比有点麻烦，没有比较好用的基准测试工具。在准备测试之前，我发现 Intel 公司开源了一个专门测试云对象存储的工具，叫做 COSBench ，不过可惜的是只支持 Amazon S3 等国外云厂商的服务，不支持腾讯云和阿里云。当然好像可以自己实现对应的适配器，但是对于本文这个较为简单的评测来说，有点太过麻烦了。</p>\n<p>因此，在对比对象存储服务时，我使用两家提供的 Python SDK ，编写了测试脚本来统计上传、下载和删除等三个任务的用时。注意，这里并没有测试高并发的情况。</p>\n<h3>性能测试方法</h3>\n<p>为了控制网络环境对测试结果的影响，我在腾讯云和阿里云各自同区域的云服务器上进行测试，这样不仅测试起来会比较方便，而且能确保测试结果准确有效。我在两家创建的对象存储 Bucket 都是位于华南区的，因此在相应区域分别创建了一台云服务器实例。</p>\n<p>同时，为了尽量模拟实际用户的使用场景，我们选择 50KB 、 2MB 、 50MB 三种级别的文件进行测试。一般网络图片的大小在 50K - 2MB 左右，通过这两个级别文件可以测试图片数据存储的效率。另外 50MB 级别用于测试大文件存储性能。</p>\n<p>具体来说，我们通过 <code>dd</code> 命令生成：</p>\n<ul>\n<li>10000 个 50KB 文件</li>\n<li>1000 个 20MB 文件</li>\n<li>100 个 50MB 文件</li>\n</ul>\n<p>测试时统计文件上传 /下载 /删除用时等指标，取平均值（单位毫秒）。在测试小文件下载用时时，并没有将文件保存到磁盘，避免了磁盘成为性能瓶颈。</p>\n<h3>性能测试结果</h3>\n<p>由于测试文件数量不少，整个测试脚本跑下来可能要一个多小时。最终针对 COS 和 OSS 的测试结果（均为单个文件平均值）如下。</p>\n<h4>50KB 小文件</h4>\n<p><img alt=\"50KB 小文件\" src=\"http://ww2.sinaimg.cn/large/65e4f1e6gw1f9evu3z6nrj20vs0niabh.jpg\"></p>\n<p>在 50KB 小文件这个类别中，阿里云 OSS 的上传、删除用时表现不错，小文件下载用时方面腾讯云 COS 用时较少。</p>\n<h4>2MB 小文件</h4>\n<p><img alt=\"2MB 小文件\" src=\"http://ww1.sinaimg.cn/large/65e4f1e6gw1f9evupccjrj20vw0oodgy.jpg\"></p>\n<p>随着文件大小的增加，腾讯云 COS 在上传、下载用时这两项指标上开始超越 OSS ，差距以倍数计。不过 OSS 在删除用时上仍然保持在 10ms 左右。</p>\n<h4>50MB 大文件</h4>\n<p><img alt=\"50MB 大文件\" src=\"http://ww1.sinaimg.cn/large/65e4f1e6gw1f9evuyq9z7j20vg0oajsr.jpg\"></p>\n<p>由于 50MB 文件的上传、下载、删除用时之间级别相差较大，因此我在绘制图表时将纵轴改为了对数可读，方便阅读。本文测试的实际数据如下表所示：</p>\n<p><img alt=\"50MB 大文件本文测试的实际数据\" src=\"http://ww3.sinaimg.cn/large/65e4f1e6gw1f9ew33n984j20kk06g3z7.jpg\"></p>\n<p>在上传大文件时， OSS 与 COS 之间的性能差异显得尤为突出。</p>\n<p>综合来看：</p>\n<ul>\n<li>阿里云 OSS 在处理文件上传时，随着文件大小增加，性能在逐步下降；下载用时与 COS 相差不大；文件删除用时均优于 COS ，不过文件越大，用时会有对应增加。</li>\n<li>腾讯云 COS 在文件上传上的性能比较突出，尤其是大文件；下载用时表现也不错；文件删除虽然总体不及 OSS ，但每类文件删除用时均保持在相同的水平。</li>\n</ul>\n<p>如果将三个指标结合在一起，腾讯云 COS 的表现要好于阿里云 OSS 。</p>\n<h3>考虑价格因素</h3>\n<p>我们接下来看价格因素，以一个想象中的网站示例来对比。</p>\n<p>假设一个网站的存储数据有 1.5 TB （图片、音频、视频），每月产生流量 600 GB ，月 PV 大约 300 万，同时每月读请求 600 万次，写请求 30 万次（平均日请求 21 万）。</p>\n<p>我们使用上面的网站数据，通过官方提供的价格计算器（<a href=\"https://buy.qcloud.com/calculator/cos\" rel=\"nofollow\">COS</a>、<a href=\"https://www.aliyun.com/price/product#/oss/calculator\" rel=\"nofollow\">OSS</a>）来计算使用 OSS 和 COS 的价格。</p>\n<p>由于腾讯云 COS 目前只提供按量计费模式，因此对比的计费方式均选择为按量计费。</p>\n<p>结果如所示：</p>\n<p><img alt=\"阿里云 OSS 按量计费价格（区域选择为华南）\" src=\"http://ww4.sinaimg.cn/large/65e4f1e6gw1f9eq5jbpfpj21dq14g0xd.jpg\"></p>\n<p><strong>阿里云 OSS 按量计费价格（区域选择为华南）： 616.7 元 /月。</strong></p>\n<p><img alt=\"腾讯云 COS 按量计费价格\" src=\"http://ww3.sinaimg.cn/large/65e4f1e6gw1f9eq0z3t4mj21aa13sq73.jpg\"></p>\n<p><strong>腾讯云 COS 按量计费价格： 593.4 元 /月。</strong></p>\n<p>上面在计算价格时，并没有加入 CDN 因素。不过两家在介绍产品时都提到了，如果设置 CDN 加速或回源，价格会更低。</p>\n<p>腾讯云在上面的计费对比中胜出的原因，可能与<a href=\"https://www.qcloud.com/act/event/all-discount.html?utm_source=Zhihu&amp;utm_medium=Community&amp;utm_campaign=Community\" rel=\"nofollow\">其推出的免费额度</a>有关。目前，每个 COS 用户都有每月 50G 的免费存储空间， 10G 的免费流量，以及 100 万次免费读请求和 10 万次免费写请求。阿里云在 2015 年时曾推出过免费 OSS 额度，但是目前已经没有了。</p>\n<h2>结语</h2>\n<p>至此，我们已经完成了对腾讯云和阿里云三个基础性云计算产品的评测对比，兼顾了性能指标和价格因素。具体的评测结果总结如下：</p>\n<ul>\n<li>云服务器：同等配置下，腾讯云 CVM 的整体性能高出阿里云 ECS 不少； CVM 的包月费用略高于 ECS （ 3 块钱），但是此次降价幅度比 ECS 更大，一年期以上购买 CVM 的性价比更高。</li>\n<li>云数据库：由于二者类别不同，测试了各自最低等级配置的 CDB 和 RDS ， CDB 在吞吐量和延迟两项性能指标上均大幅领先；同时降价力度也大于 RDS ，因此可以说 CDB 的性价比远高于 RDS 。</li>\n<li>对象存储：在大小文件的上传、下载和删除几项指标上，腾讯云 COS 和阿里云 OSS 各有得分， OSS 在文件删除上表现不错，但是在大文件上传上要逊色不少； COS 在各项指标上的表现都可圈可点。</li>\n</ul>\n<p>因此，仅仅从这三项产品的性价比来看，腾讯云这次降价进一步增加了其产品的优势。如果让我在这场价格战下选择云计算服务商的话，我会选择腾讯云。而这也是我之前迁移网站时所做的选择。</p>\n<p>不过话又说回来，要评估一家云计算厂商，除了性能和价格之外，还要考虑可用性、可靠性等其他诸多指标（各家之间的差异可能不大）。对后者进行评测涉及的操作更为复杂，并不是本文所能涵盖的。而我上面所做的选择，也主要是基于性能和价格两个因素来考虑的。</p>\n<p>由于时间有限，无法将国内其他云计算厂商的产品一并加入测试，欢迎有兴趣的朋友按照本文所介绍方法对自己所使用的云计算产品进行测试，并将结果分享给我，方便大家参考。也希望本文能够帮助大家选购到满意的云计算产品。</p>\n<p>本文和<a href=\"http://www.codingpy.com/article/guide-on-testing-cloud-products/\" rel=\"nofollow\">配套评测指南</a>中如有任何错误，还请大家指正。</p>\n<h2>参考资料</h2>\n<ul>\n<li><a href=\"http://www.cio.com.cn/eyan/411872.html\" rel=\"nofollow\">2015 年度 PK ，云存储（对象存储）性价比对比评测</a></li>\n<li><a href=\"http://blog.qiniu.com/archives/5010\" rel=\"nofollow\">论云存储服务性能评测的正确姿势</a></li>\n<li><a href=\"http://blog.csdn.net/shaunfang/article/details/11194289\" rel=\"nofollow\">国内公有云对比（ 2 ）- 性能篇</a></li>\n<li><a href=\"https://www.upcloud.com/support/how-to-benchmark-cloud-servers/\" rel=\"nofollow\">How to Benchmark Cloud Servers</a></li>\n<li><a href=\"https://www.upcloud.com/blog/cloud-benchmark-digitalocean-aws-upcloud-slush-2015/\" rel=\"nofollow\">Cloud Benchmark at Slush 2015</a></li>\n<li><a href=\"https://www.cloudsigma.com/benchmarking-cloud-servers-a-cloud-computing-insiders-guide/\" rel=\"nofollow\">Benchmarking cloud servers: A Cloud Computing Insider's Guide</a></li>\n<li><a href=\"https://www.binarylane.com.au/support/solutions/articles/1000055889-how-to-benchmark-disk-i-o\" rel=\"nofollow\">How to Benchmark Disk I/O</a></li>\n<li><a href=\"https://www.jamescoyle.net/how-to/1131-benchmark-mysql-server-performance-with-sysbench\" rel=\"nofollow\">Benchmark MySQL Server Performance with Sysbench</a></li>\n<li><a href=\"http://lg.io/2015/10/25/real-world-benchmarking-of-s3-azure-google-cloud-storage.html\" rel=\"nofollow\">Real-world benchmarking of cloud storage providers</a></li>\n</ul>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>服务器配置的图贴错了，重贴一次：</p>\n<p><img alt=\"测试云服务器的具体配置\" src=\"http://ww4.sinaimg.cn/large/65e4f1e6gw1f9h8sy29vbj20oo0iwtb6.jpg\"></p>\n</div></div>"], "reply": "67", "tittle": "国内公有云大幅降价后，首份一手云计算产品评测报告", "comment": ["阿里不给力", "阿里那个玩文字游戏的降价 没诚意\r", "企鹅都比它靠谱", "我不知道你的数据是怎么测出来的。 aliyun 的 iops 绝对没有这么低。请把你的机器配置 块大小 队列深度等都贴出来。", " 阿里云这个级别的 VM 自己标的就是磁盘 500 iops ，具体的测试命令请看配套的指南里的介绍。", "又长又臭", "ali 的 IOPS 确实是有规格限制的  不如 tc   策略有点类似 aws 的按照 iops 的磁盘规格", " 嘴这么脏", "柱状图很漂亮", "十年前我考虑为公司重新采购宽带接入时，说服当时的老板将售后服务和响应质量量化并提升这部分内容在采购评估总分数中的比重至 50%。既然楼主将这份评测发布到 V 站，我们放下别的信息渠道不谈，仅在 V 站上见到的关于国内云服务质量的投诉和抱怨便已经比比皆是，可见售后服务评估对一份完整的云服务评估报告的重要性。同时，从采样角度看，适度扩大研究范围，甚至包含一两家典型的国际主流云服务产品，相信对报告的最终质量会有一定提升。如果楼主即是此报告的作者或作者之一的话，期待楼主能够在经过认真准备之后顺利推出此报告的第二版，倘若有机会形成系列报告相信无论是对起草者还是对公众都会具有重要价值。请继续努力，加油！", "写的挺好", "啧啧\r", "期待更多服务商的数据", "感觉☁️这玩意，还包年包月就是坑", "很详细，希望有更多厂商加入对比。看最近促销，目前腾讯云确实要比阿里好很多。", "云这个，三年其实还是有点坑的。\r", "\r", "不知道腾讯云什么时候 HK 区能上 SSD 云盘，这对我比较有吸引力。", "赞！！", "我觉得还缺 2 项重要指标：线路质量和稳定性", " Numbers 自动生成哒， O(∩_∩)O~", " 嗯，只考虑了性能方面的。不过线路质量和稳定性不太好测啊，以自己的单个网络来测又不太有代表性。关于这两项指标，有没有推荐的测试方法？\r", " 感谢你的建议。我是文章的唯一作者，里面对比的服务商数量是有点少，也希望有精力能加上国内外其他 IaaS 厂商的比较，像我在文末提到那样，如果有其他朋友按同样的步骤测出数据分享过来最好啦。至于售后服务和响应质量这两方面，的确是采购的重要参考指标。但是似乎缺乏比较成熟的平均标准体系，而且涉及的时间也比较长，最好对各家客户进行大规模采样。或许可以考虑出一个公开的问卷表格呢\r", " 是指三年时间太短了吗？但是太长的话会不会前期成本太高，后续想换私有云或迁移的话，就划不来了吧？\r", " @", " 感谢认可。", "个人感觉 google 最好用……", "我觉得写得挺好的，起码楼主是有思考过的，也是付出时间来测试的。很棒，期待更完全的版本，对于我们选择云服务还是有帮助的。", "用了差不多 4 年阿里云，感觉现在是越来越差，以前 1m 的还凑合，现在 1m 不用 cdn 打开慢的就龟一样", "作者你写的很好。我觉得是不是可以测试一下工单响应时间，夜间是否有客服受理。客服电话是否支持", " 售后服务评测测哪些指标比较好？感觉故障和问题也分低中高难度，要模拟问题出来估计有点难哦", " 为啥这么说呀？", "阿里云自己作死，其他云反而活了，哈哈。", " 云计算本来就是要动态灵活配置，包年包月那不是 VPS 的专长", " 评估是一项很高端的能力，如何规划、量化、设定都要求顶级的能力，但这并不意味着所有的评估都是超高难度的，比如业务评估就可以从企业自身需求出发，细则落实起来便容易了，只需要对业务需要和受评估目标均有所了解即可。楼主所发布的评估比业务评估复杂许多，属于半简评，如果能够在结构完整性上做到位，那么一份扎实的全面评估是可以期待的，至于其导向是产品质量评估还是业务指导评估就要看撰写者的具体意图了。", " 不客气，您做出了让人喜欢的成果，那么自然会让人期待更好的东西。祝好！", "前排出售板凳、瓜子", "现在公司的几天服务器都在腾讯，之前用过阿里和美团各有各的优点，最后选了腾讯。\r", "听人说阿里和腾讯最低配的都超售？", " 超售算是正常现象吧，每家都一样", "钱多 人傻  == 云", "阿里云的 IOPS 有这么低吗？ 为啥我刚刚测出来的有 4100+", "别的不说，楼主这么用心就值得点赞！", "好长的软文", "很棒 感谢", "写的很好啊谢谢楼主。\r", "\r", "不过有个异议就是，虽然是云，但是其实每台机器开出来性能还是有些差异的…… 1C2G 可能还是低端了点（同 Node 上开机器较多、超售），如果用更高配的 plan 测试可能更能说明云和云之间的总体差距——但同时可能也失去了对 1C1G 的低配的代表性，所以其实还要各种 plan 各个地区多开几台抽样啊哈哈= =。\r", "\r", "同时，还有“线路质量和稳定性”、“售后服务”之类的指标……", "楼主在性能方面，少测试了一点。\r", "两台云主机之间的内网，阿里和腾讯是有明显差别。内网延迟、带宽，和他们宣称的数据比较。\r", "\r", "如果你对磁盘读写要求比较高的话，比如准备放几十上百万小文件，并且频繁读写的话，阿里的普通云盘读写是很捉急的。", "感觉要到了 云春秋的时代", " 是我文中那个规格的吗？ 1 核 2G\r", " 嗯，要更全面一些的话，应该各个同等级的 plan 都开出来试试。线路质量、售后服务之类不方便直接评测啊\r", " 感谢，这里内网差异确实遗漏了。从阿里官网看 OSS 和 ECS 内网是千兆的带宽，腾讯云这边还没找到直接的介绍。", "说实话，腾讯的东西，没有用的欲望，想都没想过", " 原因是啥？", " 春秋之后是战国吧，云计算市场估计下来要血拼", "和双十一一样噱头大过实际", "阿里云 s1 还是 xen 的虚拟机，你这都不懂还测啥啊", "内存还是太贵", " 长是有一点，不过“臭”体现在哪？能不能展开说说？", "为啥只评测阿里和腾讯，顺便把 AWS 、百度云、 UCLOUD 、金山云、青云、美团云、京东云的都评测下呗，阿里云这么大的体量，性能、服务有所劣势是可预期的。", "cpu cyclictest 确定是越大越好？", "希望楼主下次能加入百度云的测试,我只用过百度云和阿里云,感官上,百度云性能比阿里云高了 10 个裤腰带,百度云 2 核 4G 的效率远超阿里云 4 核 4G(mhlz 游戏服务器),客服也比阿里云专业的多.", "其实 还是老老实实买个万网主机，放个 wordpress 博客算了，图片外链到七牛", "经常上你们网站，网站内容很不错，顶一个！", " 过段时间试试都加上\r", " 呃，好像写反了，应该是越小越好的。\r", " 好，你也可以试试开个百度云主机按我的方法测一下哈\r", " 谢谢啦，还有熟人哈 O(∩_∩)O~", " \r", " \r", "\r", "早期腾讯云是有后付费的，我们公司现在购买新 CVM 还能选择后付费的，新帐号估计只能包年包月了\r", "\r", "但是上周我们某个业务使用的 CVM 硬盘满了（当时买的时候特地选择的云硬盘），发现扩容选项是没办法点的\r", "\r", "提工单，转技术人员排查后，给出的答复是，后付费的无法扩容（当时为什么可以购买，且无任何提示呢；并且经过验证，此时此刻，后付费 CVM 依然是可以选择云硬盘的）\r", "\r", "最终的解决方案只能是，单独购买预付费（包年包月）的云硬盘，手动挂载到 CVM 实例，然后将业务存储目录通过软链的形式转到新硬盘", "看了楼主的测试，还是蛮公正的。阿里云降价就是个笑话，阿里云肯定要丢失第一的位置，越来越不行了。", " 谢谢认可， O(∩_∩)O~", "收藏。", "楼主咋不用高效云盘试试呢，还用几年前的普通云盘来测试？\r", "这软文也是不能再软了，下面还一群人跟着叫 ", " ", "相信楼主花了不少时间进行对比 我一直有一个冒充小白去对比下各种国内外云服务的售后服务的想法 嘿嘿", "阿里云不就是个靠超卖挣钱的？ 现在国内这些 XX 云就比原来敞放卖 VPS 的进化一点~", "我就问一下, 为什么数据库要用 \"高 IO\" 跟 \"双机高可用\" 比 吞吐量 和 响应 ?", " 因为两家只有这个版本配置的，而且腾讯那边产品介绍说也有双机实时热备，双机和高可用这两个描述或许两边都是符合的", "不知道出了问题哪个响应快一些，以及赔偿损失的时候快速一点。", " 这个可能要实际使用才知道了", "腾讯云确实比阿里快,IO 高多了,测试过就知道了.", "腾讯云再怎么叼，把用户当成用过的包袱以及条款不明确清晰完善\r", "1 块钱终身也要考虑会不会泄露信息拿出去卖\r", "\r", "利益关系：腾讯云喂屎亲身经历者，目前寻求路径维权", " 你碰到过泄露信息出去卖的情况？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>wx.openSocket 没有 new WebSocket 的第二个参数 (sub protocol)。</p>\n<p>我小程序连接 mqtt broker 的 websocket 返回 handshake 403 错误，不知道是不是和第二个参数没传有关系。</p>\n<p>这样的问题要怎么分析呢? 现在服务器还不是用的我的。</p>\n</div></div>"], "reply": "1", "tittle": "谁研究过小程序的 websocket 连接 mqtt broker", "comment": ["楼主接小程序外包吗"]},
{"content": ["<div class=\"topic_content\">不考虑那种将 session 保存到 redis 、 memache 这种持久化的方案。\r<br>\r<br>一般的 web 框架是通过什么方式来保存 session 的？ session ，我理解的与应用程序启动，存放在开辟的一块内存空间，但是为什么应用服务重启之后， session 信息会还在？\r<br>\r<br>最近遇到的一个问题， web 进程结束了，过了一段时间重启，客户端不需要重新登陆，仍然可以使用上次的 cookie 来登陆。检查结果发现是上次 session 还在，没有随着服务关掉而清除，但是 session 一般不是保存在内存里面的？随进程结束，也应该会被回收？\r<br>\r<br>申明，用的是 web 框架自带的 session 处理机制，没有用第三方服务（ redis 、....）将 session 保存，也是用的单机测试的，没有集群。。。</div>"], "reply": "14", "tittle": "session 一般是保存在什么地方？", "comment": ["不同框架 不同容器 都可能存在不同的地方", "PHP 的 session 一般是保存为文件的…", "不用多想， 找个带多后端封装的 session 实现就明白了， 一般就是硬盘文件、 memcached 、 redis 、数据库、 主容器的内存、客户端加密的 cookie", "拿 java tomcat 举例 ,运行时 session 是在内存中的,说白了就是一个 concurrentHashmap ,正常关闭和重启会有序列化写入文件的机制, 但是直接杀掉是不会序列化 session 到文件的.", "小的用默认实现 大的要上到 redis 或者 memcache 里", "框架一般都是写文件或数据库的，要特别配置才会和 redis 、 memcached 等缓存机制挂钩\r", "你这个情况先检查缓存文件文件夹，再检查数据库表，应该能找到 session 的存放点", "很多地方都可以保存  文件 cookie redis 内存等", "  我以为 session 是随着 web 框架一起运行在内存中，关闭服务就会将 session 清空，没料到 web 框架会有自动将 session 序列化到本地文件的机制 --", " php 默认保存到文件，一般是会缓存到本地文件， web 框架一般会将它存到本地硬盘什么地方？", " ", " \r", "\r", "框架一般都会有配置的吧，如果没有提供，应该保存在 php.in 里面配置的路径\r", "\r", " ", "楼主是用的 JavaEE 吧\r", "Servlet 规范里面 有这个接口，\r", "HttpSessionActivationListener 配置到 web.xml 里面你就可以看到 Session 的持久化跟激活了", "Tomcat 也提供自定义的 SessionManager 管理器", "Session 可以存在服务端或者客户端。\r", "如果存客户端就是用 cookie ，要加密并签名，只建议在非关键场合使用。此时要配置一个 SESSION_KEY ，只要 key 不变，用户 cookie 没过期，即使服务器重启 session 也不丢。\r", "如果存服务端可以放在文件里，放关系数据库里，放 redis 里。然后给用户分配一个随机的 sessionid ，用这个 id 取 session 。我比较喜欢放 redis 里，性能会好一些吧。", "多谢各位 ~~ ，找到了一遍还不错的文章    "]},
{"content": ["<div class=\"topic_content\">我算了一下,高效的话,一天的有效 commit 是 20 个左右\r<br>\r<br>当日,\"有效\"怎么定义看你自己了.</div>"], "reply": "15", "tittle": "大家一个工作日有效 commit 有多少个", "comment": ["现在想想似乎还真的是不多。不过，因为队友坑比较多。也不是他们故意坑，主要是他们在我需要的数据上总是出问题。于是果断在 dev 环境下使用假数据，绕开全部队友。于是效率就上来了。最后再对接的时候他们在数据上也都没有什么问题了，也很节省时间。所以，偷懒一下，效率地点，产出也比以前多", "这个比较的价值何在？一个新的 feature 如果够复杂， 1~2 天完成一个 commit 也是有可能的；如果是 QA 打回的 bug ，一天搞定 30~40 个也是正常。", "10 个左右。", "\r", "只有你认为是比较吧。题主想交流，而不是攀比", "![]( ", ")", "哇擦。。。怎么才能显示为图片呀。。", "[img]", "[/img]", "前面几条忽略。。。只是不知道怎么发图片做的测试。。\r", "\r", "看了下 commit activity ，目前日常一般在 4-5 条，比较频繁的会在 10 条左右。", "数了一下昨天的一共有 5 个，均为改小 Bug ，代码量很少。", "看了下正在做的项目，开发阶段一天提交量一般都低于 5 个，有时一个功能需要一天，这取决于模块的复杂度。测试阶段一般 10 左右，都是改 bug 和细节调整。", "纯粹在这里吐槽一下。。\r", "\r", "本人自由工作，带着个老同学一起干。考虑到我们均已从业 10 年，所以我就完全放任他自己决定要做什么。\r", "我们用 gitlab 做项目管理。\r", "\r", "在我的 profile 界面看 activity ，赶工期的时候，每天会有 10-25 个。而平常时期，大概是 1-3 个。\r", "但是我同学，唉，最近 4 周，也就 5 个。", "最近几天才一个 commit ，代码太复杂😂", "2 到 3 个 码农不止是码"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>上个帖子说的是自己对任务评估的时间节点出现偏差，导致 delay 。当然这还有其他方面原因了，主观的客观的。\n一般<strong>已经出现</strong>了这种情况，怎么交差的呢（后续加班补上是肯定的），在一些比较重要的时间节点上自己的任务进展出现了比较大的 delay （和领导预想的偏差比较大）。</p>\n<p>会有愧疚感么... :)</p>\n<p>ps: 熬夜加班赶代码的质量真是糟糕...对身体也不好，感觉加班写代码也要身体在一个比较好的状态下。</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "承接上个帖子，交代的任务没有及时完成，如果和领导沟通（交差）", "comment": []},
{"content": ["<div class=\"topic_content\">先不说上市的新东方，达内啥的~最近在看 linux 一些培训教程，通过官网或者创始人口述得到的数据~\r<br>\r<br>马哥和老男孩都是搞 linux 教育的~\r<br>马哥正规科班出身，硕士，学术基础扎实，不过讲得略显枯燥，略冗余， 07 年创办马哥教育，到现在总学员近万人，每年营收过千万，全职或兼职讲师一共就 5 个人~\r<br>\r<br>老男孩，某师范本科，底层知识不如马哥，但讲的课非常实用，比如一个命令，马哥会把所有参数都讲一遍，老男孩只讲常用的三四个，诸如 lvm,samba,dns,dhcp 啥的从来不讲，因为互联网企业中用的不过，主攻 web 集群~好吧，我个人更喜欢老男孩的课程~现在每年线下学员 2000 人以上，这此项营收至少 2000 万，线上课程分成另算，另外也有几个全职或兼职的讲师，讲架构， mysql ， python ，自动化运维， C 语言等~已经不打算讲课了，毛算算，一年利润至少过千万~已经准备上市了~\r<br>\r<br>当然，牛逼的人都有苦逼的经历~\r<br>\r<br>我只能说，除了当 cto ，当老师也能走向人生颠峰~</div>"], "reply": "22", "tittle": "培训搞的好，真是太赚钱了~~", "comment": ["有人带头不，一起搞啊。", "我在某企鹅家的平台上 看了一家视频  +了 Q 群\r", "然后看不过某讲师吹牛 B\r", "以前一个月工资百万 \r", "为了事业  加入了某 ZHOU 培训  目前国内排行前列 秒杀其他 PHP 培训学校\r", "\r", "目前大多数 PHP 讲师一般也就几 W 吧\r", "就退群了\r", "\r", "结果我的 Q 号就被人举报  在腾讯教育上被拉黑了...\r", "\r", "静静的退群都不行...", "李笑来  全栈工程师  2 个月  6 万", " 大型互联网公司，年收入过百万的岗位都不多，一般的架构师可能都没有这么高的工资~讲师工资一般是 1-5W 之间，分红另算~", "做培训教育的首先要会吹。连吹牛都不会就别想混这个行业了。民办学校出来的要吹成名牌毕业，一般学校出来的要吹成美国博士，刚够糊口的收入要吹成年入百万。其实这行业跟传销讲师差别不大。", "\r", "\r", "看看这个，培训早就是红海了，想靠这个走向巅峰很困难、", " 做线下成本太高，大家有兴趣的，可以先借助大平台，自己录几门课放上去，不能走向人生颠峰，换两个奶粉钱也行，毕竟是被动收入~", " 另外说实话，运维比开发还是要简单一些~", " 你去网易云课堂，或者腾讯教育，或者 51cto ，慕课之类的看看，就会发现想靠录课程赚奶粉钱并不容易。\r", "\r", "另外企业内部的运维培训我搞过多次，感觉难点在课程组织和环境准备，既要贴近实战，又要兼顾理论是挺不容易的。", "来俩技术，揭竿而起，开放课堂 ", "推荐个深圳的 IT 培训吧，我想去当个讲师，现在已经老了，做不了码农。", " 你做了教师 通知我 我去做你的学生  我也在深圳", " 我来教 前端和 php ，目标：从入门到放弃", "完全不懂培训的意义是啥？忽悠非科班出身的人来当分母？", "他们说的你也信。", "没搞定为啥要培训，自己学很快啊", "顺便黑一波李笑来", "想挖金矿的人多了，造船的人就赚翻了。结果金矿越来越少，想挖矿的却还是越来越多，你觉得造船的人最后会怎么样？", "来来来，谁要前端培训", " \r", " \r", "找文豆集团喵?", "现在已经不行了，赚钱的永远是最先嗅到气息的人。", " \r", "\r", "这家培训机构大吗？？\r", "\r", "我也是第一次了解培训机构，对此行业了解的可以多说两句，无论是实业的还是网络的，都可以说下，对于我来说，目前已经做不了码家，只能从事本行业相关的。本人比较木讷，生意类的做不了。只会编码。唉。"]},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"http://86in.com\" rel=\"nofollow\">86in.com</a>\r<br>\r<br>\r<br>然后觉得没鸟用， 200 块卖给了坛友，结果需要 45 天后才可以卖出。\r<br>\r<br>\r<br>要是 <a target=\"_blank\" href=\"http://69in.com\" rel=\"nofollow\">69in.com</a> 铁定不卖。</div>"], "reply": "7", "tittle": "195 入的一个域名", "comment": ["可以带价 push 啊.\r", "另外 69in 比 86in 好在哪里?", " 应该是姿势更好一点😂", " 我是拍的人家忘记续费的域名。要求 45 天后才能转卖。", " 我太纯洁了,老司机求带.\r", " 是在抢注平台吗?一般抢注平台也提供 push 功能的,应该没时间限制的", "push 没问题，但是转出，指的是更换注册商，这个肯定有时间限制\r", "69 的话，可以做一个发财致富的站。", "腾讯云就放这么一个页面哦"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>Robotgo v0.40.0 对鼠标键盘操作进行了大幅度的完善(已支持控制键盘鼠标bitmap和屏幕,操作窗口句柄以及全局事件监听),由于跨平台切换测试麻烦(合并几个平台的代码到对比上传代码都浪费了不少时间)和 C 代码生产效率与 Go 和 JavaScript 不在一个级别上, 没有支持窗口和进程对应窗口的选择以及窗口 Bounds,将在下一个版本完善, 键盘操作可能在某些输入法上有些问题请切换到系统输入法(目前优先完成窗口句柄的问题,后面会解决该问题).</p>\n<p>项目地址:<a href=\"https://github.com/go-vgo/robotgo\" rel=\"nofollow\">https://github.com/go-vgo/robotgo</a></p>\n<p>下面整理本机测试部分的代码,将会在以后版本陆续完善,并附上注释:</p>\n<p>中文示例代码(高亮,请移步):<a href=\"https://gocn.io/article/176\" rel=\"nofollow\">https://gocn.io/article/176</a></p>\n</div></div>"], "reply": "2", "tittle": "用 go 实现跨平台 Autoit 和按键精灵功能示例代码", "comment": ["很赞", " 感谢,O(∩_∩)O~"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"shell\" src=\"http://ww2.sinaimg.cn/mw1024/912b254ajw1f9zju1zettg20p00dg3zn.gif\"></p>\n<p>如图，打开 iterm 有个延迟，才能输入，用了 oh-my-zsh ，是啥原因？ log 太多了？</p>\n</div></div>"], "reply": "58", "tittle": "shell 打开很慢是啥原因", "comment": ["原因就是你用了 oh-my-zsh\r", "\r", "你可以试试 Prezto ", "标签上的那个 grep 是哪来的", " 这个 grep 应该是 oh-my-zsh 搞的吧", " ok ，我试试", "`rm -rf /var/log/asl/*`", " log 删了也没什么效果", "prezto 貌似也有这个问题。", "我要 3-4s 左右 /_\\", "因为 oh_my_sh 很卡。。。个人觉得 fish 挺快", "一般第一次都要 10 秒，接下来 4 秒左右。。 zsh", "bash 秒开", "rm -rf /*\r", "我去贴吧帮你问了，听说需要运行一下这个命令", " 用了，也快不了多少，", "配置很重的缘故呀 - - \r", "我的比你的慢多了", "可以用 -xv 看看你的配置究竟有多重", "不行就换回 bash 吧，目前我还没找到非用 zsh 不可的原因", "请先检查有没有安装 nvm ， 再检查有没有安装 rbenv ，两个都没有？那检查其它的吧，有这两个其中一个在，你都快不起来", "其实，楼主你这 1 秒左右的延迟在 zsh 应用于已经属于\"快\"的了。如果你真的对这样的延迟很敏感可以试试\r", "antigen-hs: ", " ，这个是我下面提到的 antigen 的速度增加版，号称延迟小于 0.1s\r", "\r", " \r", " 3~4s 也太慢了，建议试试 antigen: ", " ， Antigen is to zsh, what Vundle is to vim\r", "antigen 可以只加载你自己的需要的模块，同时还有 cache 功能，第二次打开时间能和楼主图上效果差不多 1s 左右。", " 这个快慢和加载的东西有很大关系，我自己用的 nvm 和 rbenv 两项，随便一个就拖个 1s 以上，特别是 nvm ，用延迟加载又不方便", "慢是因为启动加载项太多，如果有 nvm 一定要删，这东西太慢了，启动命令改成 zsh -x 看下卡在什么地方了", " 有没有 nvm 替代品？以前是 rbenv 慢，现在 rbenv 好多了，这 nvm 不能忍了要", " nvm 是用来更新 node ？直接 brew 不就好了", " 你用的是 antigen 吗？我刚才试了一下，不加载 nvm 和 rbenv 约 1.5s ，加载大约 2s ，都是 antigen\r", " reset 后运行一次，测试第二次的时间。\r", "\r", "加载了以下模块：\r", "antigen use oh-my-zsh\r", "antigen bundle pip\r", "antigen bundle nvm\r", "antigen bundle rbenv\r", "antigen bundle autojump\r", "antigen bundle brew\r", "antigen bundle brew-cask\r", "antigen bundle colored-man\r", "antigen bundle z\r", "antigen bundle zsh-users/zsh-syntax-highlighting\r", "antigen bundle zsh-users/zsh-history-substring-search ./zsh-history-substring-search.zsh\r", "antigen theme agnoster\r", "antigen apply", "有同感，感觉是插件装多了，一些用不到的功能可以禁用掉。", "要更新了吧", " 用的 oh-my-zsh, nvm 慢是众人所知的，直接用 bash 我都觉得这货慢，不过将就用吧", "zsh 加载东西多\r", "\r", "但是这个不是很影响吧? 谁成天关闭打开 shell", "我的需要 3 秒多。。 oh-my-zsh 加载东西有点多。。。", " 还真装了 nvm", " 这个图貌似加速过了，实际也是 3~4 秒，换成 prezto 后现在是 1 秒左右，可以接受了", " nvm 这么坑，主要是 node 版本切换方便，不然也不装了", "就是 nvm 搞的鬼， prezto 加了 nvm 的配置也变慢了", "请问这个 1s,2s,3s 有什么意义.....?常年不关 shell 挂个 tmux 的重来不关心也没感觉", " nvm 众所周知的慢啊\r", "只需要版本切换的话，用 n 就好", "加载的东西太多，建议把不常用的 plugin 去掉。", "fish 秒开，而且不需要什么配置开箱即用\r", "\r", "当然，别装 oh-my-fish", " \r", "以前用了阵 fish ，但不支持 bash", "我以前历史记录 10w 行，结果加载很慢，改成 2w 了。现在基本能在 0.2 秒内启动。\r", "\r", "你可以 zsh -x 然后看看哪里比较慢。我忘记了当时我是怎么找到瓶颈的……", "PS: 我不用 oh-my-zsh ，东西太多，怕太慢或者出现意外的行为。我曾经对我的 zshrc 优化过，能少用外部命令就少用外部命令。现在 zsh 从启动到看到第一个提示符，共有六次 execve ，一次 zsh （自己），两次 uname ，一次 stty ，一次 systemctl --version ，一次 git 。根本不用 grep ，都用内建的正则+重定向搞定了。", " zsh 又快又安全*补全又强大。另见 [", " Zsh is Cooler than Your Shell)。\r", "\r", "* 指的是粘贴多行文本也不会立即执行，使得用户有机会确认。特别是从网页复制命令的时候，网页可以把部分命令隐藏起来，但是[会复制到]( ", " zsh 5.0 。", "这个常年不用关的 就是用 tmux 的时候推送传不到系统通知那里", "我也觉得这个速度正常……", " 我用的 prezto ，依然很慢。禁用某些插件的话可以很快，可是偏偏那些插件提供了我想要的功能。", " @", "  @", " 你们的原因如果是因为 nvm. \r", "可以试一下我的方法，我以前开一个 tab 也是 3 秒+。后来自己做了个 lazy load 现在都是秒开。 感觉比 antigen 要轻量一些。\r", "\r", "\r", " 只开了 git brew autojump osx 四个，也要四五秒……", "没有升级到最新版的时候，秒开，现在升级到最新版，速度马上卡顿了。", "fish 保平安", " lazy load 用过，是快了，但各种问题，比如有的软件依赖 npm ，这时就不行了，", "我的 ohmyzsh 貌似没有延迟啊", " 常用的不一样的也就是圆括号和&&了吧， bash 脚本还是可以直接运行的嘛，反正没感觉不习惯", "啥系统，看下 /etc/bash_completion.d/目录下的文件，先移除掉看看", " 　我前几年用的时候是不兼容，现在好久没用了，不太清楚了", "换 fish 可破", "sudo rm -rf /private/var/log/asl/*.asl", " nvm 那个速度，换鲨鱼也没用", "好多人提到 nvm 很慢，把下面这行注释掉就基本可以解决问题。\r", "\r", " 我的 lazy_load the 不一样。", "antigen 和 zplug 都可以试试。\r", "zplug 的可定义性更强，速度（据称）更快。"]}
]